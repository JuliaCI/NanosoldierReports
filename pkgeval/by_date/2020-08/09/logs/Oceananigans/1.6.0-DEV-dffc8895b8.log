Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed Requires ───────────────────── v1.0.1
  Installed CEnum ──────────────────────── v0.4.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed JLD2 ───────────────────────── v0.1.14
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OffsetArrays ───────────────── v1.1.2
  Installed ExprTools ──────────────────── v0.1.1
  Installed OrderedCollections ─────────── v1.3.0
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed VersionParsing ─────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed BinDeps ────────────────────── v1.0.1
  Installed NCDatasets ─────────────────── v0.10.3
  Installed Oceananigans ───────────────── v0.34.0
  Installed SeawaterPolynomials ────────── v0.2.0
  Installed URIParser ──────────────────── v0.4.1
  Installed MKL_jll ────────────────────── v2020.1.216+0
  Installed Parsers ────────────────────── v1.0.10
  Installed GPUArrays ──────────────────── v5.0.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed FileIO ─────────────────────── v1.4.0
  Installed Cassette ───────────────────── v0.3.3
  Installed CondaBinDeps ───────────────── v0.2.0
  Installed NNlib ──────────────────────── v0.7.4
  Installed CFTime ─────────────────────── v0.1.0
  Installed TimerOutputs ───────────────── v0.5.6
  Installed CodecZlib ──────────────────── v0.7.0
  Installed Reexport ───────────────────── v0.2.0
  Installed FFTW ───────────────────────── v1.2.2
  Installed Conda ──────────────────────── v1.4.1
  Installed DataStructures ─────────────── v0.17.20
  Installed JSON ───────────────────────── v0.21.0
  Installed LLVM ───────────────────────── v1.7.0
  Installed Adapt ──────────────────────── v2.0.2
  Installed MacroTools ─────────────────── v0.5.5
  Installed KernelAbstractions ─────────── v0.3.0
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed GPUCompiler ────────────────── v0.4.1
  Installed CUDA ───────────────────────── v1.2.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [9e8cae18] + Oceananigans v0.34.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.0.2
  [9e28174c] + BinDeps v1.0.1
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [179af706] + CFTime v0.1.0
  [052768ef] + CUDA v1.2.1
  [7057c7e9] + Cassette v0.3.3
  [944b1d66] + CodecZlib v0.7.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] + Conda v1.4.1
  [a9693cdc] + CondaBinDeps v0.2.0
  [864edb3b] + DataStructures v0.17.20
  [e2ba6199] + ExprTools v0.1.1
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [5789e2e9] + FileIO v1.4.0
  [0c68f7d7] + GPUArrays v5.0.0
  [61eb1bfa] + GPUCompiler v0.4.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [033835bb] + JLD2 v0.1.14
  [682c06a0] + JSON v0.21.0
  [63c18a36] + KernelAbstractions v0.3.0
  [929cbde3] + LLVM v1.7.0
  [856f044c] + MKL_jll v2020.1.216+0
  [1914dd2f] + MacroTools v0.5.5
  [85f8d34a] + NCDatasets v0.10.3
  [872c559c] + NNlib v0.7.4
  [9e8cae18] + Oceananigans v0.34.0
  [6fe1bfb0] + OffsetArrays v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [d496a93d] + SeawaterPolynomials v0.2.0
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.1
  [81def892] + VersionParsing v1.2.0
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building NCDatasets → `~/.julia/packages/NCDatasets/NNX1o/deps/build.log`
   Building FFTW ──────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
    Testing Oceananigans
Status `/tmp/jl_b7YQtN/Project.toml`
  [79e6a3ab] Adapt v2.0.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [052768ef] CUDA v1.2.1
  [a2441757] Coverage v1.1.1
  [7a1cc6ca] FFTW v1.2.2
  [033835bb] JLD2 v0.1.14
  [63c18a36] KernelAbstractions v0.3.0
  [85f8d34a] NCDatasets v0.10.3
  [9e8cae18] Oceananigans v0.34.0
  [6fe1bfb0] OffsetArrays v1.1.2
  [bac558e1] OrderedCollections v1.3.0
  [91a5bcdd] Plots v1.5.8
  [d496a93d] SeawaterPolynomials v0.2.0
  [a759f4b9] TimerOutputs v0.5.6
  [bdfc003b] TimesDates v0.2.6
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_b7YQtN/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [9e28174c] BinDeps v1.0.1
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+3
  [fa961155] CEnum v0.4.1
  [179af706] CFTime v0.1.0
  [052768ef] CUDA v1.2.1
  [7057c7e9] Cassette v0.3.3
  [944b1d66] CodecZlib v0.7.0
  [35d6a980] ColorSchemes v3.9.0
  [3da002f7] ColorTypes v0.10.8
  [5ae59095] Colors v0.12.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [a216cea6] CompoundPeriods v0.4.0
  [8f4d0f93] Conda v1.4.1
  [a9693cdc] CondaBinDeps v0.2.0
  [d38c429a] Contour v0.5.4
  [a2441757] Coverage v1.1.1
  [c36e975a] CoverageTools v1.1.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.3.0
  [b22a6f82] FFMPEG_jll v4.3.1+1
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [5789e2e9] FileIO v1.4.0
  [53c48c17] FixedPointNumbers v0.8.4
  [d7e528f0] FreeType2_jll v2.10.1+3
  [559328eb] FriBidi_jll v1.0.5+4
  [0c68f7d7] GPUArrays v5.0.0
  [61eb1bfa] GPUCompiler v0.4.1
  [28b8d3ca] GR v0.51.0
  [5c1252a2] GeometryBasics v0.2.15
  [4d00f742] GeometryTypes v0.8.3
  [cd3eb016] HTTP v0.8.17
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.1.14
  [682c06a0] JSON v0.21.0
  [63c18a36] KernelAbstractions v0.3.0
  [c1c5ebd0] LAME_jll v3.100.0+2
  [929cbde3] LLVM v1.7.0
  [dd192d2f] LibVPX_jll v1.9.0+0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [856f044c] MKL_jll v2020.1.216+0
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [85f8d34a] NCDatasets v0.10.3
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [9e8cae18] Oceananigans v0.34.0
  [6fe1bfb0] OffsetArrays v1.1.2
  [e7412a2a] Ogg_jll v1.3.4+1
  [458c3c95] OpenSSL_jll v1.1.1+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+2
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.5
  [91a5bcdd] Plots v1.5.8
  [3cdcf5f2] RecipesBase v1.0.2
  [01d81517] RecipesPipeline v0.1.11
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [d496a93d] SeawaterPolynomials v0.2.0
  [992d4aef] Showoff v0.3.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [f269a46b] TimeZones v1.3.2
  [a759f4b9] TimerOutputs v0.5.6
  [bdfc003b] TimesDates v0.2.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [30578b45] URIParser v0.4.1
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [0ac62f75] libass_jll v0.14.0+3
  [f638f0a6] libfdk_aac_jll v0.1.6+3
  [f27f6e37] libvorbis_jll v1.3.6+5
  [1270edf5] x264_jll v2020.7.14+1
  [dfaa095f] x265_jll v3.0.0+2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[09/08/2020 22:41:05] Testing grids... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:183
[09/08/2020 22:41:05]   Testing grid utilities... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:186
[09/08/2020 22:41:10]   Testing regular Cartesian grid... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:195
[09/08/2020 22:41:10]     Testing grid initialization... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:198
[09/08/2020 22:41:14]     Testing grid constructor errors... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:215
[09/08/2020 22:41:19]   Testing vertically stretched Cartesian grid... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:253
[09/08/2020 22:41:19]     Testing grid initialization... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_grids.jl:256
[09/08/2020 22:41:44] Testing operators... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_operators.jl:58
[09/08/2020 22:41:44]   Testing function differentiation... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_operators.jl:61
[09/08/2020 22:41:44]   Testing function interpolation... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_operators.jl:66
[09/08/2020 22:41:44]   Testing 2D operators... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_operators.jl:71
[09/08/2020 22:41:45] Testing boundary conditions... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_boundary_conditions.jl:29
[09/08/2020 22:41:45]   Testing boundary functions... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_boundary_conditions.jl:32
[09/08/2020 22:41:46]   Testing field boundary functions... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_boundary_conditions.jl:50
[09/08/2020 22:41:48] Testing fields... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
[09/08/2020 22:41:48]   Testing field initialization... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32
Internal error: encountered unexpected error during compilation of #cached_compilation#89:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#89")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4426
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3908
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4107 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6677
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7023
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7057
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:94
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:305
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1890
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1841 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2145 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2336
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
unknown function (ip: 0x7f92bff74b4f)
#cufunction#774 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
#launch_heuristic#816 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
unknown function (ip: 0x7f92bff73e26)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:655
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
unknown function (ip: 0x7f92bff73bff)
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
materialize! at ./broadcast.jl:848 [inlined]
materialize! at ./broadcast.jl:845
unknown function (ip: 0x7f92bff7399a)
zeros at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
unknown function (ip: 0x7f92bff688e3)
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
correct_field_size at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
unknown function (ip: 0x7f92bff6860b)
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:832
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:80 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
#3 at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:77
unknown function (ip: 0x7f92fbb721ac)
with_logstate at ./logging.jl:428
with_logger at ./logging.jl:540
unknown function (ip: 0x7f92fbb6fc85)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:75
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_36646.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1752 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#89:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#89")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4426
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3908
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4107 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6677
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7023
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7057
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:94
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:342
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1896
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1841 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2145 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2336
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
unknown function (ip: 0x7f92bff74b4f)
#cufunction#774 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
#launch_heuristic#816 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
unknown function (ip: 0x7f92bff73e26)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:655
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
unknown function (ip: 0x7f92bff73bff)
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
materialize! at ./broadcast.jl:848 [inlined]
materialize! at ./broadcast.jl:845
unknown function (ip: 0x7f92bff7399a)
zeros at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
unknown function (ip: 0x7f92bff688e3)
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
correct_field_size at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
unknown function (ip: 0x7f92bff6860b)
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:832
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:80 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
#3 at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:77
unknown function (ip: 0x7f92fbb721ac)
with_logstate at ./logging.jl:428
with_logger at ./logging.jl:540
unknown function (ip: 0x7f92fbb6fc85)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:75
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_36646.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1752 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:36
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118 [inlined]
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:36 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:37
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133 [inlined]
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:37 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:38
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148 [inlined]
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Periodic,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:38 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:41
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:41 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:42
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:42 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:43
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:43 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:44
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3] + 1)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:44 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:47
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:47 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:48
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:48 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:49
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 1 + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:49 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:50
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 1 + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Periodic,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:50 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:53
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:53 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:54
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 1 + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:54 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:55
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 1 + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:55 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:56
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 1 + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float32,Bounded,Bounded,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:56 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Internal error: encountered unexpected error during compilation of #cached_compilation#89:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#89")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4426
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3908
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4107 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6677
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7023
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7057
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:94
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:305
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1890
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1841 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2145 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2336
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
unknown function (ip: 0x7f92bffeda0f)
#cufunction#774 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
#launch_heuristic#816 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
unknown function (ip: 0x7f92bffed336)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:655
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
unknown function (ip: 0x7f92bffed10f)
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
materialize! at ./broadcast.jl:848 [inlined]
materialize! at ./broadcast.jl:845
unknown function (ip: 0x7f92bffeceaa)
zeros at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
unknown function (ip: 0x7f92bffebf43)
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
correct_field_size at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
unknown function (ip: 0x7f92bffebc6b)
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:832
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:80 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
#3 at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:77
unknown function (ip: 0x7f92fbb721ac)
with_logstate at ./logging.jl:428
with_logger at ./logging.jl:540
unknown function (ip: 0x7f92fbb6fc85)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:75
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_36646.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1752 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#89:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#89")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4426
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3908
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4107 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6677
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7023
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7057
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:94
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:342
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1896
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1841 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2145 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2336
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
unknown function (ip: 0x7f92bffeda0f)
#cufunction#774 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
#launch_heuristic#816 at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
unknown function (ip: 0x7f92bffed336)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:655
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
unknown function (ip: 0x7f92bffed10f)
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
materialize! at ./broadcast.jl:848 [inlined]
materialize! at ./broadcast.jl:845
unknown function (ip: 0x7f92bffeceaa)
zeros at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
unknown function (ip: 0x7f92bffebf43)
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
CellField at /home/pkgeval/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
correct_field_size at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
unknown function (ip: 0x7f92bffebc6b)
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:832
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
macro expansion at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:80 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
#3 at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:77
unknown function (ip: 0x7f92fbb721ac)
with_logstate at ./logging.jl:428
with_logger at ./logging.jl:540
unknown function (ip: 0x7f92fbb6fc85)
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/runtests.jl:75
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1752 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:117
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:206
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:157 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:551
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:788
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_36646.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1752 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103 [inlined]
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:35 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:36
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118 [inlined]
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:36 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:37
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133 [inlined]
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:37 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:38
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148 [inlined]
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Periodic,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:38 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:41
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:41 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:42
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:42 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:43
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:43 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:44
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3] + 1)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Periodic,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:44 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:47
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:47 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:48
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:48 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:49
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 1 + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:49 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:50
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 1 + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Periodic,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:50 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:53
  Test threw exception
  Expression: correct_field_size(arch, grid, CellField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(CellField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:53 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:54
  Test threw exception
  Expression: correct_field_size(arch, grid, XFaceField, N[1] + 1 + 2 * H[1], N[2] + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(XFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:54 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:55
  Test threw exception
  Expression: correct_field_size(arch, grid, YFaceField, N[1] + 2 * H[1], N[2] + 1 + 2 * H[2], N[3] + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(YFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:55 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Field initialization: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:56
  Test threw exception
  Expression: correct_field_size(arch, grid, ZFaceField, N[1] + 2 * H[1], N[2] + 2 * H[2], N[3] + 1 + 2 * H[3])
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float64,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float64,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float64,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_size(a::GPU, g::RegularCartesianGrid{Float64,Bounded,Bounded,Bounded,OffsetVector{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}, fieldtype::typeof(ZFaceField), Tx::Int64, Ty::Int64, Tz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:7
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:56 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:32 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
[09/08/2020 22:42:26]   Testing field setting... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::UInt8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::UInt16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::UInt32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::UInt64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::UInt128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Float32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(CellField), val::Irrational{:π})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::UInt8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::UInt16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::UInt32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::UInt64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::UInt128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Float32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] XFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:118
   [35] XFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:152 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(XFaceField), val::Irrational{:π})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::UInt8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::UInt16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::UInt32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::UInt64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::UInt128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Float32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] YFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:133
   [35] YFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:153 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(YFaceField), val::Irrational{:π})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::UInt8)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::UInt16)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::UInt32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::UInt64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::UInt128)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Float64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Float32)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Rational{Int64})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75
  Test threw exception
  Expression: correct_field_value_was_set(arch, grid, fieldtype, val)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] ZFaceField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:148
   [35] ZFaceField
      @ ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:154 [inlined]
   [36] correct_field_value_was_set(arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, fieldtype::typeof(ZFaceField), val::Irrational{:π})
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:17
   [37] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:75 [inlined]
   [38] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [40] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
  
Setting fields: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:67
  Got exception outside of a @test
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] CellField(::GPU, ::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:151
   [36] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:79 [inlined]
   [37] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:68 [inlined]
   [39] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:23
   [41] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [42] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/runtests.jl:80 [inlined]
   [43] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [44] (::var"#3#4")()
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/runtests.jl:77
   [45] with_logstate(f::Function, logstate::Any)
      @ Base.CoreLogging ./logging.jl:428
   [46] with_logger(f::Function, logger::ModelLogger)
      @ Base.CoreLogging ./logging.jl:540
   [47] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/runtests.jl:75
   [48] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [49] top-level scope
      @ none:6
   [50] eval(m::Module, e::Any)
      @ Core ./boot.jl:344
   [51] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
  
[09/08/2020 22:42:49]   Testing miscellaneous field functionality... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_fields.jl:88
[09/08/2020 22:42:49] Testing halo regions... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:42
[09/08/2020 22:42:49]   Testing initializing halo regions... ---  Info /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:51
Initializing halo regions: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53
  Test threw exception
  Expression: halo_regions_initalized_correctly(arch, FT, N...)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] halo_regions_initalized_correctly(arch::GPU, FT::Type, Nx::Int64, Ny::Int64, Nz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:6
   [36] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53 [inlined]
   [37] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:51 [inlined]
   [39] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:42
  
Initializing halo regions: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53
  Test threw exception
  Expression: halo_regions_initalized_correctly(arch, FT, N...)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] halo_regions_initalized_correctly(arch::GPU, FT::Type, Nx::Int64, Ny::Int64, Nz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:6
   [36] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53 [inlined]
   [37] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:51 [inlined]
   [39] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:42
  
Initializing halo regions: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53
  Test threw exception
  Expression: halo_regions_initalized_correctly(arch, FT, N...)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] halo_regions_initalized_correctly(arch::GPU, FT::Type, Nx::Int64, Ny::Int64, Nz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:6
   [36] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53 [inlined]
   [37] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:51 [inlined]
   [39] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:42
  
Initializing halo regions: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53
  Test threw exception
  Expression: halo_regions_initalized_correctly(arch, FT, N...)
  UndefVarError: inf_for_methodinstance not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:141
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams},String,String}, h::Dict{String,LLVM.Module}, key::String)
      @ Base ./dict.jl:451
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:304 [inlined]
   [19] #87
      @ ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:21 [inlined]
   [20] get!(default::GPUCompiler.var"#87#88"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDA._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}}, h::Dict{UInt64,Any}, key::UInt64)
      @ Base ./dict.jl:451
   [21] macro expansion
      @ ./lock.jl:190 [inlined]
   [22] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:19
   [23] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [24] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#20",Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/4e9CU/src/cache.jl:33
   [25] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:298
   [26] cufunction(f::GPUArrays.var"#broadcast_kernel#20", tt::Type{Tuple{CUDA.CuKernelContext,CuDeviceArray{Float32,3,CUDA.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}},Int64}})
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/compiler/execution.jl:293
   [27] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:19
   [28] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#broadcast_kernel#20", ::CuArray{Float32,3}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/7vLVC/src/gpuarrays.jl:17
   [29] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:66 [inlined]
   [30] copyto!
      @ ~/.julia/packages/GPUArrays/PkHCM/src/host/broadcast.jl:76 [inlined]
   [31] materialize!
      @ ./broadcast.jl:848 [inlined]
   [32] materialize!(dest::CuArray{Float32,3}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Int64}})
      @ Base.Broadcast ./broadcast.jl:845
   [33] zeros(FT::Type, ::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}}, loc::Tuple{DataType,DataType,DataType})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:312
   [34] CellField(FT::DataType, arch::GPU, grid::RegularCartesianGrid{Float32,Periodic,Periodic,Bounded,OffsetVector{Float32,StepRangeLen{Float32,Float64,Float64}}})
      @ Oceananigans.Fields ~/.julia/packages/Oceananigans/9Th81/src/Fields/field.jl:103
   [35] halo_regions_initalized_correctly(arch::GPU, FT::Type, Nx::Int64, Ny::Int64, Nz::Int64)
      @ Main ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:6
   [36] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:53 [inlined]
   [37] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:51 [inlined]
   [39] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/Oceananigans/9Th81/test/test_halo_regions.jl:42
  

signal (15): Terminated
in expression starting at none:16
