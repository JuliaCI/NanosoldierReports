Julia Version 1.6.0-DEV.607
Commit 91d384ccce (2020-08-08 23:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed TreeViews ──────────────────── v0.3.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed DiffEqBayes ────────────────── v2.16.0
  Installed Bijectors ──────────────────── v0.7.2
  Installed JSON ───────────────────────── v0.21.0
  Installed RandomNumbers ──────────────── v1.4.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed ZygoteRules ────────────────── v0.2.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed AbstractTrees ──────────────── v0.3.3
  Installed FillArrays ─────────────────── v0.8.14
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed DataStructures ─────────────── v0.17.20
  Installed AbstractAlgebra ────────────── v0.9.2
  Installed Libtask ────────────────────── v0.4.1
  Installed NaNMath ────────────────────── v0.3.4
  Installed ArrayInterface ─────────────── v2.11.0
  Installed Adapt ──────────────────────── v2.0.2
  Installed AxisArrays ─────────────────── v0.4.3
  Installed Roots ──────────────────────── v1.0.4
  Installed ChainRulesCore ─────────────── v0.9.5
  Installed MLStyle ────────────────────── v0.4.4
  Installed MacroTools ─────────────────── v0.5.5
  Installed CanonicalTraits ────────────── v0.1.0
  Installed Reexport ───────────────────── v0.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed AdvancedMH ─────────────────── v0.5.1
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed SymbolicUtils ──────────────── v0.4.3
  Installed Optim ──────────────────────── v0.22.0
  Installed ArgCheck ───────────────────── v2.1.0
  Installed CpuId ──────────────────────── v0.2.2
  Installed LabelledArrays ─────────────── v1.3.0
  Installed SimpleTraits ───────────────── v0.9.2
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed DynamicPPL ─────────────────── v0.8.2
  Installed PrettyPrint ────────────────── v0.2.0
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed Distributions ──────────────── v0.23.2
  Installed LoggingExtras ──────────────── v0.4.2
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Compat ─────────────────────── v3.13.0
  Installed IntervalSets ───────────────── v0.5.1
  Installed StructArrays ───────────────── v0.4.4
  Installed NameResolution ─────────────── v0.1.4
  Installed GeneralizedGenerated ───────── v0.2.5
  Installed ForwardDiff ────────────────── v0.10.12
  Installed Turing ─────────────────────── v0.13.0
  Installed FunctionWrappers ───────────── v1.1.1
  Installed OffsetArrays ───────────────── v1.1.2
  Installed Unitful ────────────────────── v1.3.0
  Installed RangeArrays ────────────────── v0.3.2
  Installed Requires ───────────────────── v1.0.1
  Installed ApproxBayes ────────────────── v0.3.2
  Installed StaticArrays ───────────────── v0.12.4
  Installed StatsBase ──────────────────── v0.33.0
  Installed TimerOutputs ───────────────── v0.5.6
  Installed DataValueInterfaces ────────── v1.0.0
  Installed RecipesBase ────────────────── v1.0.2
  Installed StatsFuns ──────────────────── v0.9.5
  Installed PDMats ─────────────────────── v0.9.12
  Installed ProgressMeter ──────────────── v1.3.2
  Installed BinaryProvider ─────────────── v0.5.10
  Installed NamedArrays ────────────────── v0.9.4
  Installed DistributionsAD ────────────── v0.5.3
  Installed ConstructionBase ───────────── v1.0.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed LogDensityProblems ─────────── v0.9.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed IterativeSolvers ───────────── v0.8.4
  Installed Parameters ─────────────────── v0.12.1
  Installed Parsers ────────────────────── v1.0.10
  Installed RecursiveFactorization ─────── v0.1.4
  Installed DiffEqBase ─────────────────── v6.41.3
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed ProgressLogging ────────────── v0.1.3
  Installed DynamicHMC ─────────────────── v2.1.0
  Installed ModelingToolkit ────────────── v3.15.0
  Installed PoissonRandom ──────────────── v0.4.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed NNlib ──────────────────────── v0.6.6
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed SafeTestsets ───────────────── v0.0.1
  Installed Distances ──────────────────── v0.8.2
  Installed Missings ───────────────────── v0.4.3
  Installed MCMCChains ─────────────────── v3.0.12
  Installed RecursiveArrayTools ────────── v2.5.0
  Installed Tables ─────────────────────── v1.0.5
  Installed FiniteDiff ─────────────────── v2.5.2
  Installed TerminalLoggers ────────────── v0.1.2
  Installed LoopVectorization ──────────── v0.8.22
  Installed LightGraphs ────────────────── v1.3.3
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed SIMDPirates ────────────────── v0.8.23
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed Combinatorics ──────────────── v1.0.2
  Installed JuliaVariables ─────────────── v0.2.3
  Installed Arpack ─────────────────────── v0.4.0
  Installed Formatting ─────────────────── v0.4.1
  Installed QuadGK ─────────────────────── v2.4.0
  Installed Tracker ────────────────────── v0.2.8
  Installed SpecialFunctions ───────────── v0.10.3
  Installed TableTraits ────────────────── v1.0.0
  Installed NLSolversBase ──────────────── v7.6.2
  Installed EllipsisNotation ───────────── v0.4.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Latexify ───────────────────── v0.13.5
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed DocStringExtensions ────────── v0.8.2
  Installed VectorizationBase ──────────── v0.12.30
  Installed TransformVariables ─────────── v0.3.8
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed DiffResults ────────────────── v1.0.2
  Installed InvertedIndices ────────────── v1.0.0
  Installed MappedArrays ───────────────── v0.2.2
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed Rmath ──────────────────────── v0.6.1
  Installed IterTools ──────────────────── v1.3.0
  Installed DiffEqJump ─────────────────── v6.9.4
  Installed Inflate ────────────────────── v0.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.16.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [c3fe647b] + AbstractAlgebra v0.9.2
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.0.2
  [0bf59076] + AdvancedHMC v0.2.25
  [5b7e9947] + AdvancedMH v0.5.1
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.1.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.11.0
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.2
  [b99e7846] + BinaryProvider v0.5.10
  [a603d957] + CanonicalTraits v0.1.0
  [d360d2e6] + ChainRulesCore v0.9.5
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.41.3
  [ebbdde9d] + DiffEqBayes v2.16.0
  [c894b116] + DiffEqJump v6.9.4
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.2
  [ced4e74d] + DistributionsAD v0.5.3
  [ffbed154] + DocStringExtensions v0.8.2
  [bbc10e6e] + DynamicHMC v2.1.0
  [366bfd00] + DynamicPPL v0.8.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.5.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.5
  [d25df0c9] + Inflate v0.1.2
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.3
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.3.0
  [23fbe1c1] + Latexify v0.13.5
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] + Libtask v0.4.1
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.9.1
  [e6f89c97] + LoggingExtras v0.4.2
  [bdcacae8] + LoopVectorization v0.8.22
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.4.4
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [961ee093] + ModelingToolkit v3.15.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.2
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.4
  [71a1bf82] + NameResolution v0.1.4
  [86f7a689] + NamedArrays v0.9.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [e409e4f3] + PoissonRandom v0.4.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.2.0
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.3.2
  [1fd47b50] + QuadGK v2.4.0
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.2
  [731186ca] + RecursiveArrayTools v2.5.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.4
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.4
  [d1185830] + SymbolicUtils v0.4.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [5d786b92] + TerminalLoggers v0.1.2
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.8
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.13.0
  [3a884ed6] + UnPack v1.0.1
  [1986cc42] + Unitful v1.3.0
  [3d5dd08c] + VectorizationBase v0.12.30
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Libtask ─────→ `~/.julia/packages/Libtask/Zo6uM/deps/build.log`
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
   Building NNlib ───────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_Ub64HC/Project.toml`
  [f5f396d3] ApproxBayes v0.3.2
  [2b5f629d] DiffEqBase v6.41.3
  [ebbdde9d] DiffEqBayes v2.16.0
  [163ba53b] DiffResults v1.0.2
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [f6369f11] ForwardDiff v0.10.12
  [2ee39098] LabelledArrays v1.3.0
  [6fdf6af0] LogDensityProblems v0.9.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.15.0
  [429524aa] Optim v0.22.0
  [1dea7af3] OrdinaryDiffEq v5.42.1
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [731186ca] RecursiveArrayTools v2.5.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [2913bbd2] StatsBase v0.33.0
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.13.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_Ub64HC/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.9.2
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.0.2
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.11.0
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [a603d957] CanonicalTraits v0.1.0
  [d360d2e6] ChainRulesCore v0.9.5
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.41.3
  [ebbdde9d] DiffEqBayes v2.16.0
  [459566f4] DiffEqCallbacks v2.13.5
  [c894b116] DiffEqJump v6.9.4
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [366bfd00] DynamicPPL v0.8.2
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.7.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.5.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.5
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.3
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.13.5
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.9.1
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.22
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.4.4
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.15.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.2
  [2774e3e8] NLsolve v4.4.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.4
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.1
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [e409e4f3] PoissonRandom v0.4.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.2.0
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.2
  [1fd47b50] QuadGK v2.4.0
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.2
  [731186ca] RecursiveArrayTools v2.5.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.4
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.9.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [d1185830] SymbolicUtils v0.4.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [5d786b92] TerminalLoggers v0.1.2
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.8
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.3.0
  [3d5dd08c] VectorizationBase v0.12.30
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0047
│   estimated_seconds_left = 0.35
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.095
│   estimated_seconds_left = 2.3
└   ϵ = 0.000165
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.024143215522584364, 0.0539850652404045, 0.11229220162290243]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 5.5
└   ϵ = 0.000129
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.07649554618534501, 0.24189983628538367, 0.27130264575487195]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00013
│   estimated_seconds_left = 0.013
└   ϵ = 0.00421
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.07362987514750621, 0.35423851875978996, 0.32928202972444376]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00033
│   estimated_seconds_left = 0.065
└   ϵ = 0.00206
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.12
│   estimated_seconds_left = 12.0
└   ϵ = 0.00177
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03946282873820737, 0.2873738264799365, 0.24958313642330732]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0007
│   estimated_seconds_left = 0.28
└   ϵ = 0.00239
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.094
│   estimated_seconds_left = 28.0
└   ϵ = 0.00377
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.085
│   estimated_seconds_left = 17.0
└   ϵ = 0.00384
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.088
│   estimated_seconds_left = 8.7
└   ϵ = 0.00531
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0277302818849761, 0.27984354136986295, 0.24802310069243594]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00031
│   estimated_seconds_left = 0.015
└   ϵ = 0.0048
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.041
└   estimated_seconds_left = 41.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.061
└   estimated_seconds_left = 55.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.066
└   estimated_seconds_left = 52.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.065
└   estimated_seconds_left = 45.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.058
└   estimated_seconds_left = 35.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.062
└   estimated_seconds_left = 31.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.059
└   estimated_seconds_left = 23.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.07
└   estimated_seconds_left = 21.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.075
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.063
└   estimated_seconds_left = 6.2
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.053
│   estimated_seconds_left = 3.9
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 2.6
└   ϵ = 0.000104
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014152662204755409, 0.014297404079282983, 0.014143739750720382, 0.03862910166179837, 0.06267530567788411]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 5.5
└   ϵ = 0.000106
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010068569510686376, 0.010219744513877636, 0.010006235612188696, 0.13511010548102045, 0.1668669391527762]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.071
│   estimated_seconds_left = 7.0
└   ϵ = 0.00663
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007216205000518802, 0.008010864127140818, 0.007085919826084443, 0.3397521298729835, 0.23445200512568534]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.027
│   estimated_seconds_left = 5.5
└   ϵ = 0.0127
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.039
│   estimated_seconds_left = 3.8
└   ϵ = 0.0133
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005141757786254663, 0.006266696322164933, 0.005018814841182057, 0.27041516312651515, 0.2887366543496656]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.02
│   estimated_seconds_left = 8.1
└   ϵ = 0.0186
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.025
│   estimated_seconds_left = 7.4
└   ϵ = 0.0201
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.022
│   estimated_seconds_left = 4.3
└   ϵ = 0.0128
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.021
│   estimated_seconds_left = 2.0
└   ϵ = 0.024
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.003748599414259651, 0.004785467870460827, 0.0035610128552394176, 0.2750736342463241, 0.2516135195762465]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0019
│   estimated_seconds_left = 0.092
└   ϵ = 0.0278
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.014
└   estimated_seconds_left = 14.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.014
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.014
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.016
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.018
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.018
└   estimated_seconds_left = 9.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.018
└   estimated_seconds_left = 7.4
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.019
└   estimated_seconds_left = 5.8
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.016
└   estimated_seconds_left = 3.1
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.019
└   estimated_seconds_left = 1.9
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 8.1
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00031
│   estimated_seconds_left = 0.0075
└   ϵ = 0.000395
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.05969382570123279, 0.17907906113595856]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 5.5
└   ϵ = 0.000263
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.061989235170915626, 0.27020058097407834]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00049
│   estimated_seconds_left = 0.049
└   ϵ = 0.0047
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.042538635264532595, 0.26564717830547235]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.031
│   estimated_seconds_left = 6.2
└   ϵ = 0.00543
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.026
│   estimated_seconds_left = 2.5
└   ϵ = 0.00721
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0352627289243728, 0.3134143542257057]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00035
│   estimated_seconds_left = 0.14
└   ϵ = 0.00656
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.019
│   estimated_seconds_left = 5.6
└   ϵ = 0.00847
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.021
│   estimated_seconds_left = 4.2
└   ϵ = 0.00743
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.018
│   estimated_seconds_left = 1.7
└   ϵ = 0.00459
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.022668323046934374, 0.2858134459761217]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0033
│   estimated_seconds_left = 0.16
└   ϵ = 0.00815
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 8.5e-5
└   estimated_seconds_left = 0.085
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0092
└   estimated_seconds_left = 8.3
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.015
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0095
└   estimated_seconds_left = 6.6
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.012
└   estimated_seconds_left = 7.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.012
└   estimated_seconds_left = 6.2
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.013
└   estimated_seconds_left = 5.4
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.012
└   estimated_seconds_left = 3.7
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.011
└   estimated_seconds_left = 2.1
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.013
└   estimated_seconds_left = 1.3
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000732
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0052
│   estimated_seconds_left = 0.39
└   ϵ = 0.000732
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0004
│   estimated_seconds_left = 0.0095
└   ϵ = 0.000218
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014168565790429905, 0.01414501613654709, 0.09537445316612046]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.023
│   estimated_seconds_left = 1.1
└   ϵ = 0.000104
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010054716880795055, 0.010005889367100191, 0.2282897618543427]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.008
│   estimated_seconds_left = 0.79
└   ϵ = 0.0132
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007096419119584703, 0.007075144734388591, 0.22353143088785993]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0038
│   estimated_seconds_left = 0.76
└   ϵ = 0.0255
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0039
│   estimated_seconds_left = 0.38
└   ϵ = 0.032
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005070831544285902, 0.005010839636515796, 0.3007740534083446]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0013
│   estimated_seconds_left = 0.51
└   ϵ = 0.0306
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0034
│   estimated_seconds_left = 1.0
└   ϵ = 0.029
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0026
│   estimated_seconds_left = 0.51
└   ϵ = 0.0777
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0021
│   estimated_seconds_left = 0.21
└   ϵ = 0.0485
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.003630707918106508, 0.0035497388638982795, 0.27439128137699625]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00039
│   estimated_seconds_left = 0.019
└   ϵ = 0.0531
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0004
└   estimated_seconds_left = 0.4
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0023
└   estimated_seconds_left = 2.1
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.003
└   estimated_seconds_left = 2.4
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0032
└   estimated_seconds_left = 2.3
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0029
└   estimated_seconds_left = 1.8
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.003
└   estimated_seconds_left = 1.5
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.003
└   estimated_seconds_left = 1.2
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0025
└   estimated_seconds_left = 0.75
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.003
└   estimated_seconds_left = 0.61
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0024
└   estimated_seconds_left = 0.23
┌ Warning: Assignment to `bayesian_result` in soft scope is ambiguous because a global variable by the same name exists: `bayesian_result` will be treated as a new local. Disambiguate by using `local bayesian_result` to suppress this warning or `global bayesian_result` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqBayes/cBMiN/test/dynamicHMC.jl:66
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yn1YB/src/solve.jl:457
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.2
│   estimated_seconds_left = 15.0
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 4.0
└   ϵ = 1.2e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014164752271658795, 0.014210180150149937, 0.014194112706634563, 0.014197646948890485, 0.03077115124230957, 0.05745776291717544]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.18
│   estimated_seconds_left = 8.8
└   ϵ = 2.78e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010037714230182676, 0.010107860720570452, 0.01007804228357898, 0.01008812173260663, 0.04437818472162707, 0.06209986544677924]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 17.0
└   ϵ = 0.000511
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007230137495007253, 0.007372272678977146, 0.007379402979705459, 0.007434334743815739, 0.20649752695441645, 0.21523816717713776]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
│   estimated_seconds_left = 2.3
└   ϵ = 0.00793
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.069
│   estimated_seconds_left = 6.8
└   ϵ = 0.0363
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005214020233221451, 0.0057511135961487376, 0.005471154809502565, 0.005521278209430243, 0.3624388588160694, 0.32763824884461407]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
│   estimated_seconds_left = 4.3
└   ϵ = 0.0192
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.046
│   estimated_seconds_left = 14.0
└   ϵ = 0.0154
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.041
│   estimated_seconds_left = 8.1
└   ϵ = 0.0108
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.027
│   estimated_seconds_left = 2.7
└   ϵ = 0.0366
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.003753877377206714, 0.004181892469259254, 0.003980308978197727, 0.0040530044353009305, 0.2541548600970345, 0.2962117578633304]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.022
│   estimated_seconds_left = 1.1
└   ϵ = 0.0239
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.024
└   estimated_seconds_left = 24.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.035
└   estimated_seconds_left = 32.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.043
└   estimated_seconds_left = 34.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.039
└   estimated_seconds_left = 27.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.038
└   estimated_seconds_left = 23.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.037
└   estimated_seconds_left = 19.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.04
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.036
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.041
└   estimated_seconds_left = 8.2
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.039
└   estimated_seconds_left = 3.9
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1407.038916 seconds (1.01 G allocations: 59.125 GiB, 2.06% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.025
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5006  0.0032    0.0002  0.0001  304.5229  0.9993
        σ[1]  0.1421  0.0314    0.0020  0.0029   72.8251  0.9984

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4938  1.4985  1.5008  1.5026  1.5065
        σ[1]  0.0918  0.1182  0.1385  0.1595  0.2168

┌ Info: Found initial step size
└   ϵ = 0.012109375
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.00625
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:343
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.00625
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/T5smF/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.00625
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.021875000000000002
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5003  0.0048    0.0003  0.0009  207.9534  1.0207
           b  1.0009  0.0096    0.0006  0.0018  309.3683  1.0063
           c  2.9999  0.0093    0.0006  0.0005  266.5197  0.9973
           d  1.0007  0.0068    0.0004  0.0014  262.3148  1.0185
        σ[1]  0.1538  0.0319    0.0020  0.0008  176.5181  0.9979

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4915  1.4970  1.5002  1.5037  1.5092
           b  0.9827  0.9940  1.0007  1.0074  1.0205
           c  2.9822  2.9936  3.0005  3.0064  3.0168
           d  0.9867  0.9956  1.0012  1.0054  1.0117
        σ[1]  0.1084  0.1330  0.1485  0.1700  0.2372

Steady state problem
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Test Summary: | Pass  Total
Turing        |   12     12
668.359109 seconds (582.95 M allocations: 32.645 GiB, 5.04% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 54.023494 seconds (85.57 M allocations: 3.604 GiB, 3.78% gc time)
2129.501763 seconds (1.67 G allocations: 95.376 GiB, 3.04% gc time)
    Testing DiffEqBayes tests passed 
