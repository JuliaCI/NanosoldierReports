Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed SIMDPirates ───────── v0.8.23
  Installed UnPack ────────────── v1.0.1
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_OUAA8e/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_OUAA8e/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [6.848743794307666e-10, 1.3627754480438625e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1651348209038588e-12, -5.973888050903042e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [1.7603696278456482e-11, 2.5237367751174133e-11, 4.8114845441205034e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.833911049217932e-13, -7.172040739078511e-14, -3.911426738056889e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8814728381121313e-12, -7.512768185335972e-12, -5.481393117179323e-12, -1.552402650872864e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.748967637382748e-11, 2.83675305468023e-11, -3.662026237805094e-11, 5.5648818886311346e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-9.462652883485134e-12, 1.5085488414001702e-11, -1.9487522706640448e-11, 3.039279938832351e-11, -7.066569551739121e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0927547755557043e-10, -4.6463832781284964e-11, 2.355082795446606e-10, -1.1155187884526185e-10, 6.570715083142886e-10]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1691692058946046e-10, -3.11866088509305e-11, -1.3559553480035902e-10, -2.34726571513022e-10, -6.742184588404143e-11, -2.7756841269876986e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.660894058541089e-11, -5.078337750319406e-11, 6.911959893329822e-11, -1.300178853469447e-10, -9.64250901347441e-11, 1.368398727663589e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [2.7952773429262834e-10, 1.0222844792906471e-10, -4.507338946524442e-11, 5.616427323218431e-10, 1.9387469407661229e-10, -1.1086531692683366e-10, 2.0849766357855515e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.073385990148836e-11, 4.152034271953653e-11, -4.163014377667196e-11, 7.416534053561463e-11, 9.019784918962159e-11, -8.791212202652332e-11, -3.168661999453093e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0395685968187536e-12, -5.5137450161169e-11, 1.805022797896072e-11, -8.439549059602314e-11, -9.578782211860926e-12, -1.1573042524304356e-10, 3.824518479689232e-11, -1.5947165810104025e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.186673147581587e-11, 1.795052995134938e-11, 1.9024559705371757e-11, -4.71511718558304e-11, 6.318701117891123e-11, 4.072786552455909e-11, 3.7493563809221087e-11, -9.74949010412729e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [1.7768009286101005e-11, -2.2504442753756848e-11, 2.879918525877656e-11, -2.1267321237417036e-11, 3.924083280537616e-11, -4.52905490888611e-11, 6.53999077115941e-11, -4.064049097252109e-11, 1.1499889929211804e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.9411805496361012e-11, 4.75139927402779e-11, -5.834366323398399e-11, 2.4663382447442928e-11, 3.1483482487715264e-11, 8.898681791436047e-11, -1.0550349482940646e-10, 5.2800430694333045e-11, 8.908518367434226e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-4.759526106568046e-13, 7.012168623532489e-13, -8.017009278660225e-11, 1.1008882694341082e-10, 3.7161163035648315e-11, 2.5064395003937534e-12, 1.131117421948602e-11, -1.6062495777902086e-10, 2.2314572412085454e-10, 6.440048494482653e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2837042540070343e-10, 5.871525488032603e-12, -3.6633596156576687e-10, 4.1143310980373826e-11, 1.1660428178572602e-10, 2.6828250732080505e-10, 1.6211476605576536e-12, -7.179602468099233e-10, 6.177236500093386e-11, 2.5586355256734805e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-4.145550569489842e-11, 1.9038104426272184e-12, -1.3213430349878763e-11, 4.796074648538706e-11, 1.056577048075269e-11, -8.116352034903684e-11, 2.949418487219191e-12, -2.929656517380863e-11, 8.966472009319659e-11, 1.983324615650872e-11, 8.060219158778636e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.506672729969296e-11, -6.069877933612133e-11, -2.2721380332768604e-11, 2.600430981658519e-11, -3.1676883338604966e-12, -6.631661886302709e-11, -1.225380907854401e-10, -4.8951620534865015e-11, 5.0047077593262657e-11, -1.1705969527042726e-11, 1.1086909168511738e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-8.197464929082798e-11, -9.084510921297806e-11, 1.392235216002291e-10, 1.212487887869429e-10, -1.738174049137342e-10, -3.763755973551497e-11, -1.6197854169064385e-10, -1.7470325186508262e-10, 2.94776203446645e-10, 2.5712232343266805e-10, -3.5107283746782514e-10, -8.248501881524817e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5809910592377037e-11, 8.462341938297868e-11, -2.8867352952488545e-11, 1.0314482601359032e-10, -9.466727401985509e-11, -4.4669046239675936e-11, -7.514844302392021e-11, 1.6447176953704457e-10, -6.559108811643455e-11, 2.0497492592141953e-10, -1.8613255381438876e-10, -9.185752158913374e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [4.077271853475395e-11, 2.1205925904155265e-11, -1.2157830298065164e-10, 1.7631229809467186e-11, -4.614764126387172e-11, 2.6472157799162233e-11, 8.007972063239777e-11, 3.908962042942221e-11, -2.4087520866800105e-10, 3.225308908838542e-11, -8.762468528544787e-11, 5.677569525630588e-11, -7.48667794425728e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.546851535749738e-10, 1.4331869024886146e-11, 1.9881252200093513e-10, -2.3336776955318328e-11, 9.627632024944432e-12, -2.344505700691002e-10, 3.1048452697746143e-10, 2.337974258637132e-11, 3.989364394385575e-10, -4.952560583859622e-11, 1.2093437362636905e-11, -4.6283832322302487e-10, -5.260680779883842e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6135204283784788e-11, 5.158051763487492e-11, 2.041478097680738e-11, -9.471090578472285e-11, -1.803868165950462e-11, -4.637068506951891e-11, -3.345990151615297e-11, -3.70776742641965e-11, 1.1112422093617624e-10, 3.47579742765447e-11, -1.8127932488454235e-10, -4.5843440155124426e-11, -9.739342665682216e-11, -6.657363549322781e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9945935448315595e-11, -5.630163002479094e-11, 1.7793011508615564e-10, -1.7070622693182713e-10, 1.185902487321755e-10, -4.315769963625371e-12, -3.453826113997138e-11, -7.871914231571964e-11, -1.1861378546029755e-10, 3.527680370041253e-10, -3.54711815475639e-10, 2.3011370586800695e-10, -1.1253886711415362e-11, -7.648914834845755e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [5.0608406354513136e-12, 4.988054413956888e-11, 9.716116800007057e-11, 1.9367840664585856e-11, -1.1772915975427622e-11, -1.835787077908435e-11, -1.0069167721837857e-10, 1.5336842906776837e-11, 1.0173573095073607e-10, 1.9697909969806915e-10, 4.511058193656936e-11, -2.5095259204022113e-11, -3.028199913046592e-11, -2.1362156488180517e-10, -1.5231149674832523e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.711098095493526e-11, 7.947531521779183e-11, 2.272071419895383e-11, 1.3356871164660333e-11, -6.631140081481135e-12, -2.120348341350109e-11, -1.8221535391660382e-11, 7.262146439757089e-11, 1.6264256608167216e-10, 4.7165604755150525e-11, 2.184386005410488e-11, -1.3278933508331647e-11, -4.184164126286305e-11, -3.537037329692794e-11, -1.6960877147198516e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.199031984810972e-10, 2.1066859368090718e-10, 1.2248779768242457e-10, -2.7255075973897647e-10, 1.34781075189494e-13, 1.8937074131031295e-11, -4.687337185060869e-10, 8.832756748233805e-11, 2.5609159237660606e-10, 4.1324610400295114e-10, 2.3930035730757027e-10, -5.515196077610085e-10, -4.628519789662278e-12, 3.640221457601456e-11, -9.249282451051499e-10, 1.792053172522401e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.3804515570400326e-11, -4.521594210160629e-11, -1.0131839811577947e-10, 6.775646710366345e-11, 2.3729906928338096e-11, -5.1889492702628104e-11, 2.5697666217183723e-11, 5.487788001801164e-11, 8.538791895773556e-11, -9.306466708380867e-11, -2.0771595554691658e-10, 1.3309064961219974e-10, 5.1002091439045216e-11, -1.1568601632205855e-10, 6.126787965854419e-11, 1.1451084525049282e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.741562449808498e-11, 7.818412584015277e-11, 3.730349362740526e-13, -3.95508070738515e-11, -7.61569696194897e-11, 2.2599699889269687e-12, -3.7010616793509143e-11, -3.654887503756754e-11, 3.0471625223071896e-11, 1.5594614488634306e-10, 5.4287685458120905e-12, -8.363187919968595e-11, -1.523020598526159e-10, 1.13518083821873e-11, -7.03888058950497e-11, -8.465939060897654e-11, -5.310196726782124e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0258016658326596e-11, 5.2896131919055733e-11, 1.020961093445294e-11, -6.853739797918479e-12, -1.36555211582845e-11, -1.9139689833025386e-11, -2.7539859281944246e-11, 1.0816680884317975e-11, 2.255884368196348e-11, 1.095323831634687e-10, 1.509725677806273e-11, -1.0876965994555121e-11, -2.8349989023013222e-11, -4.068922976330214e-11, -5.120848189932303e-11, 2.641464824648665e-11, 1.7629897541837636e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [5.340883291182763e-11, -2.6330493341220063e-11, 2.4273472121194573e-11, -4.096223360505746e-11, -4.5680459415109453e-11, -1.4548806603897901e-11, -1.7070789226636407e-12, 3.370659307222468e-11, -1.357670642576636e-10, 1.0669132244345292e-10, -4.984368473515133e-11, 4.495137595483811e-11, -7.281408809234335e-11, -8.983158661379775e-11, -2.9460878181453154e-11, -3.860578523529057e-12, 6.320122203362644e-11, -2.6017710208492417e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0663082356264795e-10, -4.8853143752580763e-11, 1.733082566346411e-10, 6.249822881443379e-11, -1.9329438050164072e-10, -9.669121059374675e-11, -4.204736558932609e-11, 2.862665660074981e-11, 4.5686343597139967e-11, -4.0162628778261933e-10, -1.01641139949038e-10, 3.692550709644138e-10, 1.490290113537185e-10, -3.8175784755623e-10, -2.1575019548691898e-10, -8.802925055562127e-11, 5.600031549590767e-11, 8.640310689145281e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [5.171418848703979e-13, -4.5241810298080054e-11, -1.9942492102131837e-11, -1.8963941528227224e-11, -1.1501910535116622e-13, -2.0531909505905332e-11, -5.307299044687852e-11, -1.2197021170834432e-11, 1.1733725102658354e-11, 1.3358203432289883e-12, -8.827549802248313e-11, -3.8720804340641735e-11, -3.8092862197913746e-11, 6.368239269249898e-13, -4.1393444227821874e-11, -1.0214473711300798e-10, -2.6018964760510244e-11, 2.4186208591459035e-11, -7.717160244169463e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.51207951609922e-12, -2.4993895841873837e-11, 5.161959748534173e-11, 2.857536429701213e-11, 1.6540768754680357e-11, -5.867195618236565e-12, 1.0078160528337321e-11, 5.2067905542685367e-11, -3.127498260369066e-12, 9.08118025222393e-12, -5.127109847791189e-11, 1.0454614951527219e-10, 5.636402455877487e-11, 3.2597036181414296e-11, -1.0914713577392376e-11, 1.929256754351627e-11, 1.0423950591587072e-10, -7.334577389883634e-12, -1.4341527965200385e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [6.426104093293361e-11, -5.44109202138543e-12, 4.4498182916186124e-11, 3.5436542589195597e-11, -2.90860668883397e-11, 4.109002027519182e-11, 3.483680011129309e-11, 3.551425820091936e-11, -3.4763525391667827e-11, -4.513078799561754e-11, 1.2832335194445932e-10, -1.2263190463102092e-11, 9.466893935439202e-11, 6.93669566231847e-11, -5.84529091796071e-11, 8.325851119650451e-11, 7.119638212316204e-11, 7.519962430535543e-11, -7.368394783213716e-11, -8.894374126100502e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.4744429555644274e-11, 4.923217389318779e-11, -9.622524999031157e-12, -1.6993073614912646e-11, -2.575573088137162e-11, 6.253353390661687e-11, -6.039158062520755e-11, -5.547240444769841e-11, 1.0146217199746843e-10, 4.656475205422339e-11, -6.761013970901786e-11, 1.1207235139920613e-10, -2.6119328921936358e-11, -2.9635294218621766e-11, -4.989508806119147e-11, 1.313205100217374e-10, -1.302414842641042e-10, -1.154412121451287e-10, 2.0028356750856346e-10, 1.0034706399153492e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1180278924882714e-11, 1.0041301123919766e-11, -9.717449067636608e-12, -1.5687451337953462e-12, 9.013789714629183e-11, 2.3195001475073695e-11, -2.244937569173544e-11, -3.6815550608082503e-11, 4.2802650312978585e-11, -1.0125567051488815e-11, -2.1353030454918098e-11, 2.149658229200213e-11, -1.9784840432635065e-11, -8.706368959110478e-13, 1.7909163041451848e-10, 4.887867888214714e-11, -4.303180034526122e-11, -7.601574925075738e-11, 8.928879857705851e-11, -1.972633167923732e-11, 9.993339489255959e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.111733093419389e-11, 3.234079670733081e-12, 1.3794121400678705e-10, -9.464329320252318e-11, 2.6828539390066908e-11, 6.204836644485567e-11, 7.683609304365291e-11, 9.854561611177814e-12, 6.23874285565762e-11, 5.838574068661728e-11, -6.940692465207121e-11, 4.848788037747909e-12, 2.5780177992373865e-10, -1.8733103956947161e-10, 5.203504294115646e-11, 1.2467227250567703e-10, 1.572015850825892e-10, 2.0504709041802016e-11, 1.206545974241635e-10, 1.1662582011240374e-10, 3.19122506198255e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.3421264100088592e-11, -3.607669718519446e-12, -5.756506382681437e-12, -3.05178105008963e-11, 2.769273699243513e-11, 1.1149059453430255e-10, -1.8650747612980467e-11, 4.683475829381223e-11, 3.56290552616656e-11, 8.065992318506687e-12, -6.479339287324137e-11, 2.7079449793632193e-11, -5.963451954471566e-12, -1.0013545548304137e-11, -6.356382087346901e-11, 5.453459905879754e-11, 2.1682544648626845e-10, -3.948996685210204e-11, 9.579537163517671e-11, 6.728595458582731e-11, 2.1415536011204495e-11, -1.3606982207647889e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.648093187067161e-11, 6.118172635183328e-11, 7.466227636143685e-11, 1.373021696338128e-10, 9.604095296822379e-11, 1.3678302934749809e-10, 4.687983334861201e-11, -5.390099477864396e-11, -2.3540835947244432e-11, -6.88276102778218e-11, 1.5507994888253052e-10, -1.1341960703958875e-10, 1.4079337695704908e-10, 1.3225509576386685e-10, 2.831670453673496e-10, 1.849944641918455e-10, 2.7388868950595224e-10, 9.617884266788224e-11, -1.1596035243144343e-10, -4.8141379771493575e-11, -1.3464085402148385e-10, 3.0723179555991464e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0559542129584543e-10, 8.219647185114809e-12, -2.737010618147906e-11, 1.6819212689256346e-11, 7.463007989372272e-11, -2.4266921805349284e-11, -1.1260103960353263e-11, -4.336864201093249e-11, -1.0191891774979922e-10, -3.700029171938013e-11, -2.893463246778083e-12, -2.1169765940243224e-10, 1.3464784842653899e-11, -5.246669765313072e-11, 3.302735862575901e-11, 1.4311662965837968e-10, -4.8438808519790655e-11, -2.5786817126061123e-11, -8.931955175484063e-11, -2.027077394828325e-10, -7.17029768892985e-11, -1.169730978745065e-11, -1.3089529460330596e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.305311414512289e-11, -1.4879431020631273e-11, -2.1561752383547628e-11, -1.3442580382161395e-12, -1.213029676705446e-11, 3.487943267543869e-11, -1.5194512315019892e-12, -7.104872246088689e-12, 3.715028285000699e-12, -1.3606560322898531e-11, -3.0327740319080476e-11, -3.047451180293592e-11, -2.954292366297295e-11, -3.96275234848531e-11, -6.735723090400825e-13, -2.2184476478059878e-11, 6.852229894604989e-11, -5.229150445984487e-13, -1.3298362411262588e-11, 9.456657679152158e-12, -2.895494954913147e-11, -6.418487963344433e-11, -2.5689450566801497e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [4.14342338217466e-10, -5.691169757682246e-11, 3.935849424152593e-10, 1.6512835543380788e-10, 1.0932144078878991e-10, -3.056100927878447e-10, -7.578815353070922e-11, 1.5514434181795878e-10, -6.376899008841974e-11, -2.755501382623038e-10, 2.5843771567224394e-11, -1.5020207300153743e-11, 8.2294482339762e-10, -1.2245771063845723e-10, 7.998490758609478e-10, 3.311930729665846e-10, 2.151334665967397e-10, -6.000626662228115e-10, -1.6663537216743407e-10, 3.1173352788016473e-10, -1.2199141696811466e-10, -5.385805135205146e-10, 6.165024046822509e-11, -4.0588532534968635e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.392564338459806e-11, -1.1683876088852685e-11, -1.3601808568353135e-10, -5.004097136662722e-11, 1.0481393530881178e-11, 1.5136691899897414e-10, -2.692313039176497e-11, 2.1444179765239824e-11, -9.097278486080995e-12, -2.1274648709379562e-11, 6.8127725683098106e-12, -4.4111159169801795e-11, -1.3762302408792948e-10, -2.9680258251119085e-11, -2.669370280372618e-10, -9.792855415469148e-11, 1.6678658454338802e-11, 3.074760446253322e-10, -5.081468579248849e-11, 4.666089736815593e-11, -2.857136749412348e-11, -4.7137294068022584e-11, 8.96815954831709e-12, -9.283451785080388e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
