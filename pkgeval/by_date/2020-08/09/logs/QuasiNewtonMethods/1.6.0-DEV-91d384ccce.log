Julia Version 1.6.0-DEV.607
Commit 91d384ccce (2020-08-08 23:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.23
  Installed UnPack ────────────── v1.0.1
  Installed QuasiNewtonMethods ── v0.1.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed LoopVectorization ─── v0.8.22
  Installed VectorizationBase ─── v0.12.30
  Installed DocStringExtensions ─ v0.8.2
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_N9JgTY/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_N9JgTY/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [4.600764214046649e-13, 8.399947404313934e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [2.7038571381865495e-10, 5.385469847851709e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1823320100745605e-11, -2.1325829990814782e-11, -3.5463298964089063e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.66844357510854e-12, 1.4978907003637687e-11, -3.7227776417125824e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [3.1028513092223875e-12, -4.760636329592671e-12, 5.3015369871900475e-12, -1.0793699267708234e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.2984062410009756e-12, 9.041212223337425e-12, -1.0433875985427221e-11, 1.9901413850220706e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-8.312461829973472e-12, 1.6257217794191092e-11, -1.7551626818601562e-11, 3.348743504716367e-11, -1.6023515847507497e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3914469576548072e-10, -2.43335129823663e-10, 2.5908453160639056e-10, -4.817424237302248e-10, 4.249511853515742e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.59681157185787e-11, -1.4966028416552035e-11, -4.416578214261335e-12, 3.144973170776666e-11, -3.042177620926623e-11, -9.209188966963211e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.956946130287633e-11, -1.3093082174009396e-11, -9.411449397589422e-11, 1.408759775500812e-10, -2.755995431868996e-11, -1.9256929384425803e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [5.184963569604406e-12, -1.3249179531271693e-11, -2.6466606684039107e-12, 1.0164535879653158e-11, -2.6268875963353366e-11, -6.365907800898185e-12, 2.225775119768514e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6952328429908903e-11, 1.0047518372857667e-11, -5.07083264267294e-12, -3.292410788446887e-11, 2.1129098470851204e-11, -1.0594081167880631e-11, -3.3616887051834965e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6876833264234392e-11, 6.079803327452282e-12, -1.8686052705163547e-11, -5.854494666834853e-11, -3.4809821691794696e-11, 1.149302875091962e-11, -3.942923765265505e-11, -1.1638023877935666e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9851122402012606e-11, -3.806621684532274e-12, -7.048617245430933e-11, 1.106226221736506e-12, -8.110356830570709e-11, -7.631340004365939e-12, -1.3795808939676135e-10, 3.3708591473669003e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.015321243220569e-11, -4.3300030228010655e-11, -7.69548869072878e-11, -3.528977110534015e-11, -5.171274519710778e-11, -9.835243730549337e-11, -1.6710555161836282e-10, -4.862521496562522e-11, -3.631539513548887e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.836886198702814e-11, 6.471023716869695e-11, -2.7626012588655158e-11, 2.3325408271546166e-10, -4.787015228657765e-11, 1.2997292131444738e-10, -5.16827691754429e-11, 4.66704674906282e-10, 9.692824320950422e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [1.1777467889828586e-11, -1.088351631040041e-12, 1.4929391056739405e-11, 2.407918309188517e-11, 1.1586842596500446e-10, 2.7687185877312004e-11, -5.435318861657379e-12, 2.6607605008166502e-11, 4.6455506108600275e-11, 2.2104007513235047e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [9.902345610157681e-11, -7.502776178114345e-11, -4.126321506703334e-11, -3.918498858723751e-11, 3.2479574585408955e-11, 1.8860402128950682e-10, -1.461364362853601e-10, -8.412326391038505e-11, -8.023826048031424e-11, 6.019185150307749e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.5054402996715908e-11, 2.8213875680194178e-11, 4.0778713739086925e-11, -3.059830167018163e-11, 4.0778269649877075e-11, 5.113909296028396e-11, 5.2942095152275215e-11, 8.235656601129904e-11, -6.299938348774958e-11, 8.21007706264254e-11, 8.884670776865278e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.454259100976742e-11, -1.016020600985712e-11, 3.127054171159216e-12, -2.7804314406409958e-11, -6.806277763615753e-11, 6.715139555524274e-11, -3.048195029720091e-11, 3.326450226381894e-12, -5.101474798152594e-11, -1.4384049507043528e-10, -3.769862200186935e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [4.203082326625918e-12, 6.020028919806464e-11, -3.1447400239414947e-11, 1.0527001492732779e-10, -5.856060081299574e-11, 5.417444270960914e-12, 7.782219313412497e-12, 1.1773226837874518e-10, -5.795897095595137e-11, 2.1948864947773927e-10, -1.1752387951702303e-10, 1.1751266626447432e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2605606275760692e-10, 1.8925905287403566e-10, 8.885647773126948e-11, -1.0298450980883445e-10, -2.2364898821791712e-10, 1.5070633629932217e-10, -4.493204697197939e-10, 3.670905801556046e-10, 1.6613688202937738e-10, -2.0939572298317444e-10, -4.604836512100974e-10, 2.911251240078627e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [2.8475000135586015e-12, -8.228362435858116e-11, 6.7839067696695565e-12, 8.020317743273608e-11, 3.174682738915635e-11, -2.6579183298736098e-11, 8.610889778992714e-13, -1.6119539036907327e-10, 1.3169687562708532e-11, 1.4963386085753427e-10, 6.412403941169487e-11, -5.356604049211455e-11, 2.4019453093160337e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.775291687219578e-12, 1.694733242629809e-11, -2.770950136010697e-11, -9.687028956761878e-12, 2.305622359699555e-11, 1.284305994886381e-12, 1.7857715306490718e-11, 3.328226583221294e-11, -5.79902792452458e-11, -1.9856338795420925e-11, 4.562439315236588e-11, 2.1032064978498966e-12, -2.094879825165208e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8546498498371875e-11, -4.604316927725449e-11, -8.40771896548631e-11, -8.293954412152971e-11, 7.859601858228871e-11, -6.543243724621561e-11, 1.4011014570769476e-13, -6.188638490556286e-11, -8.459299927210395e-11, -1.6879342368270045e-10, -1.7713819300269051e-10, 1.5327472624449e-10, -1.3116541186519726e-10, 1.0855094600970006e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.081734867294017e-11, 1.1389111875814706e-10, -3.405398185662989e-11, -1.3973155965629758e-11, -5.382638779138915e-11, -3.402456094647732e-11, 2.488453887394826e-11, 5.726508156556065e-11, 2.2155766110643071e-10, -5.232414501676885e-11, -3.1606162131936344e-11, -1.1329992499753416e-10, -5.805733671593316e-11, 4.963895960941045e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [2.3330293252854517e-10, 8.690048680648488e-11, 1.8888002273342863e-10, -1.1404077682186653e-10, -1.30917388041496e-10, -1.2668532889392736e-11, -3.4173497365230787e-10, 4.861464564243079e-10, 1.898015078438675e-10, 3.8782710376494833e-10, -2.094686646358923e-10, -2.6501478789242583e-10, -4.7033599237522594e-11, -6.96194546456752e-10, 5.0810466944994914e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.304157279008905e-13, -1.3716916491546272e-11, -7.289169268176465e-12, 2.4664714715072478e-12, -2.8420377162774457e-11, -2.8555269260266414e-11, 5.398792524147211e-12, -2.3669954885008337e-13, -3.0409341711390425e-11, -1.3027801060161437e-11, 2.084110661826344e-12, -5.749711817770731e-11, -5.6463500541781286e-11, 1.1177281322716226e-11, 2.396749465560788e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [5.345990317096039e-11, -9.665157563176763e-12, 9.307665749247462e-12, 1.4412915305683782e-12, 1.8575585514213344e-11, 8.150569108522632e-11, 2.2327695248236523e-11, -5.004996417312668e-12, 1.1301293234566856e-10, -2.4752533356320328e-11, 2.1326940213839407e-11, 5.908606937055083e-13, 3.8220759890350564e-11, 1.6645040901153152e-10, 4.253197793957497e-11, -7.89490695041195e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3447021274259896e-12, 5.822853310633036e-11, 7.927658529638393e-12, 3.034816842273358e-11, 2.447730906851575e-11, -1.6476708886159486e-11, -2.2410628908176022e-11, -4.667710662431546e-12, 4.083400284571326e-13, 1.1807821387321837e-10, 2.0899060260148872e-11, 5.867661911906907e-11, 4.741296244503701e-11, -3.622269151293267e-11, -4.3973047425538425e-11, -7.2347683399698326e-12]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [3.6077807408219087e-12, -2.945754751237928e-11, -1.830535723001958e-12, 6.383560346989725e-11, -5.1649018395494295e-11, -1.5104584250025255e-11, -2.876121563133438e-11, 5.945333114709683e-11, 6.157963028385893e-12, -5.64676083669724e-11, -5.093814259282681e-12, 1.2936474114155772e-10, -1.0423628626909931e-10, -3.0683899865380226e-11, -5.661293656089583e-11, 1.1401435351388045e-10, -2.733924198139448e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.9673151996357774e-11, 2.212541261314982e-11, -5.74669201114375e-11, -7.647404931532265e-11, 3.863576125695545e-14, 2.6657120955064784e-11, -4.3583359143894995e-11, -3.0684343954590076e-12, 4.2030379177049326e-11, 4.321187851985542e-11, -1.1389145182505445e-10, -1.5726220325973372e-10, 9.017231406005521e-13, 5.072231523683968e-11, -8.760314695877014e-11, -6.476041924941001e-12, 9.86100090472064e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [3.895972433554107e-11, -2.3888002687044718e-11, -1.512734382203007e-11, -2.533606657806331e-11, 9.213740881364174e-12, -1.2949086247715513e-11, -2.3554269645842396e-11, -9.64739399478276e-12, -3.3122615761271845e-11, 7.525824408105564e-11, -4.789391105930463e-11, -3.383859858985261e-11, -5.023248483837506e-11, 2.3551605110583296e-11, -2.566624690558683e-11, -4.522748842106239e-11, -1.269162552830494e-11, -7.133160728756138e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0220335688870819e-10, -7.872558160926246e-11, 6.483436010285004e-11, 2.977040836071865e-11, 1.3544498855821985e-11, -5.2787219040340005e-11, 3.785149971236024e-11, 1.281750261483694e-10, -9.328826600096818e-11, -1.9469992285081617e-10, -1.5820844634362174e-10, 1.263777971161062e-10, 5.83513237728539e-11, 3.1725289062478623e-11, -9.950318347051734e-11, 7.838596438602963e-11, 2.554931821663331e-10, -1.85872650604324e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-2.000932752821427e-11, -1.2685852368576889e-11, -1.2595813281279788e-11, 3.136957360538872e-11, -3.3871017102171663e-11, 8.756750879967967e-11, -3.5649261320713777e-13, 1.1264233990004868e-10, -5.015043935685526e-11, -4.0051850724864835e-11, -2.22463159005315e-11, -2.7174484884540107e-11, 6.503220184583824e-11, -6.81751322062496e-11, 1.6661894086666962e-10, -4.954370247389761e-12, 2.2791457610082944e-10, -1.0147949147665258e-10, -2.1257440252497872e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3012058097672252e-10, 1.063984456095568e-10, -2.0719537197066984e-11, -4.4767678453183635e-10, -1.3014767041852338e-10, -1.738598154332749e-11, -5.851685802582551e-11, 4.6252113250488947e-11, -1.6726542373390885e-10, 2.595683668005222e-10, 2.221296480087176e-10, -3.092115452574262e-11, -8.821245955914492e-10, -2.5277613335816795e-10, -3.8645753264177074e-11, -1.2961276496525898e-10, 1.0025136276681224e-10, -3.203241005778068e-10, 1.6109336087311021e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.3531109566145005e-10, -8.20435941406572e-11, 1.1695244772624847e-10, 7.581246741494851e-11, -1.706257357625418e-10, -1.3129508591447347e-10, 7.314882033426784e-11, 1.1193712623480678e-11, -7.356071307640377e-11, -7.704259452623319e-11, 2.6297963806598545e-10, -1.644370195563738e-10, 2.2634072394112081e-10, 1.5686407728310314e-10, -3.3064029292262376e-10, -2.5829527405818453e-10, 1.4972090234266489e-10, 1.874833621684502e-11, -1.4828416272649747e-10, -1.5296430788680482e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.154010386197115e-11, 4.199351977263177e-11, 1.784550285321984e-11, -2.3281598870994458e-11, 4.5962122996456856e-11, 3.670019843582395e-11, 1.9453105792877068e-11, 2.0871304684533243e-11, -2.6916247009012295e-11, -1.1893819262809302e-11, 6.485056935900957e-11, 8.043588017869752e-11, 3.505773449319349e-11, -4.743949677532555e-11, 9.443357207317149e-11, 7.159450809979262e-11, 4.0094150222103053e-11, 4.0954795110792475e-11, -5.2703286179678344e-11, -2.3728574660708546e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1465417504297193e-10, 1.7258594553481998e-10, -3.30845351115272e-11, 2.125075670988963e-10, 4.2332493066510324e-10, -3.6812408676922814e-10, 4.482281212858652e-11, -1.8895374154226374e-10, -1.6713808115298434e-10, -1.6676215963684626e-10, -2.2314783354460133e-10, 3.3313884983954267e-10, -5.920686163563005e-11, 4.285405363901873e-10, 8.404714701981675e-10, -7.410233537896715e-10, 8.7098550594078e-11, -3.8513947586693575e-10, -3.4083380562321963e-10, -3.305595797087335e-10, 2.390532216622887e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.927258849349528e-11, 5.4580340247412096e-11, 9.923728505611962e-11, 1.0506728820303124e-10, 8.184741773220594e-11, 3.241407142695607e-11, -6.233813465428284e-11, 5.6552096339146374e-11, -8.996903222424635e-11, -1.1250733678025426e-10, -1.5610290837742014e-10, 1.0769740654836824e-10, 2.0798829325485713e-10, 2.0172041814703334e-10, 1.6321877183145261e-10, 5.2649440362984024e-11, -1.1425038692891576e-10, 1.1801204458095071e-10, -1.9129819950336469e-10, -2.2900747964627044e-10, -6.402012253658995e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-7.799205725689262e-12, -3.532063530542473e-12, -3.543321192012172e-11, 2.3926638448301674e-11, -3.354116984155553e-11, 1.042508301907219e-10, -2.9127256162553294e-11, 2.8516966565916846e-11, -3.398425985068343e-11, 3.05071523598599e-11, -3.1335267713927806e-11, -1.2681855565688238e-11, -8.224865233330547e-12, -6.989508971599889e-11, 5.608757902564321e-11, -6.756950554631658e-11, 2.1188273358063725e-10, -6.19967410742106e-11, 5.765388166878438e-11, -6.494949023050367e-11, 5.821010340412158e-11, -5.869971175798128e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.273981251718851e-11, 1.479860678443856e-11, -2.00255367843738e-11, 4.050892954410301e-11, 1.1328049609460322e-11, -4.333200465111986e-12, -4.3502534907702284e-11, 2.986677571925611e-11, 5.917044632042234e-12, -1.8944623647598746e-11, -5.715095063862918e-12, -1.0593836918815214e-10, 3.517763857985301e-11, -3.894440325780124e-11, 8.067813084267073e-11, 2.273359278603948e-11, -6.3403726713318065e-12, -8.499823067609213e-11, 5.917089040963219e-11, 1.3091749906379846e-11, -3.9388603489953766e-11, -1.306810215595533e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7362777882112823e-12, 2.5795809932560587e-11, -1.34456779044001e-10, -7.548128788670283e-11, 2.805955467977128e-11, 1.6200174535185852e-10, -1.9659496253154884e-11, -1.0744172218579706e-10, -8.478273638701239e-11, -3.4857894348760965e-11, -2.7031821225875774e-11, -1.4621415189708387e-11, 4.403544195952236e-11, -2.6843205436222206e-10, -1.5076773163258395e-10, 6.643219307989057e-11, 3.162599071515615e-10, -3.570821416332137e-11, -2.0647805687445953e-10, -1.6878798358987979e-10, -7.677458668808868e-11, -5.004374692418878e-11, 5.679234860167526e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.661151382061689e-10, 2.1436208363923015e-10, 1.265711979669959e-10, -3.3905522833777013e-10, -2.041611324443693e-11, 1.810380734212913e-10, -1.9954027319357692e-10, -8.914147198169076e-11, -4.6241011020242695e-11, -5.618205900503881e-11, -1.0474376921365547e-10, -7.236935495313901e-10, 4.2698844460176133e-10, 2.660012210498053e-10, -6.817105768774923e-10, -2.2834956148187757e-11, 3.445919105615758e-10, -3.881477361744601e-10, -1.8061874218489038e-10, -9.259415456597253e-11, -1.0817891027414817e-10, -2.1810053763005044e-10, 2.1061596910953995e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [2.2022383916464605e-12, -1.3069212378979955e-11, 2.6318724977159036e-11, -2.1641133329808326e-11, 1.3251177932716018e-11, -9.801270905995807e-12, -3.891387212462405e-11, -1.0329181954205069e-11, 5.540012892879531e-13, -9.851897075918714e-12, -1.3678835841801629e-11, 5.0843995680338594e-11, 3.2795988147427124e-12, -2.614986005511355e-11, 5.175171402527212e-11, -4.581668378023096e-11, 3.001598969376573e-11, -2.1309287667747867e-11, -7.773559573820421e-11, -1.958033735149911e-11, -2.901234807950459e-12, -2.055033920811411e-11, -2.939093413090177e-11, 1.0398504279862664e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.284883476339928e-11, -1.9689583297122226e-11, 6.360467708077522e-11, -6.142464314962126e-11, 1.2676748539774962e-11, -6.585554324090026e-11, 4.846900658606046e-11, -1.2044543140632413e-10, 1.9199264400526772e-10, -3.415379090654369e-12, -1.0413891970983968e-13, 2.886846317551317e-11, 6.61424248704634e-11, -3.492084399425721e-11, 1.2648859737396378e-10, -1.2061429632836962e-10, 2.4989343927472873e-11, -1.3373457896648233e-10, 8.862288680688835e-11, -2.4008139920539406e-10, 3.915781032759469e-10, -3.863465103393082e-12, -4.54036808150704e-12, 5.868328045721682e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
