Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Parsers ──────────── v1.0.10
  Installed DataAPI ──────────── v1.3.0
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.20
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_Ecz7nA/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Ecz7nA/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(17, 0.047319293f0), Item(45, 0.051273227f0), Item(28, 0.07092333f0), Item(37, 0.08749044f0)])
Vsorted = Item[Item(17, 0.047319293f0), Item(45, 0.051273227f0), Item(28, 0.07092333f0), Item(37, 0.08749044f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005278889338175456, 0.007260831197102865, 301.0, 52.94684042967856))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004036927223205566, 0.0038452307383219403, 301.0, 77.30425000190735))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00488430658976237, 0.006331427892049154, 301.0, 42.823378801345825))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004925362269083659, 0.0044936656951904295, 301.0, 10.221557063283399))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0037798722585042316, 0.006830263137817383, 301.0, 47.82585401087999))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001552581787109375, 0.00013730525970458984, 301.0, 187.74341118335724))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 7.174015045166015e-5, 0.012897801399230958, 300.0, 27.137321332469583)
p = PerformanceResult(1.0, 1.0, 1.0, 6.233851114908854e-5, 2.923011779785156e-5, 300.0, 27.137321332469583)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00401009718577067, 0.0036362012227376304, 300.0, 1.4752641550476255)
p = PerformanceResult(1.0, 1.0, 1.0, 5.102422502305772e-5, 2.2935867309570313e-5, 300.0, 1.4752641550476255)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 7.174015045166015e-5, 0.012897801399230958, 300.0, 27.137321332469583), PerformanceResult(1.0, 1.0, 1.0, 6.233851114908854e-5, 2.923011779785156e-5, 300.0, 27.137321332469583), PerformanceResult(1.0, 1.0, 1.0, 0.00401009718577067, 0.0036362012227376304, 300.0, 1.4752641550476255), PerformanceResult(1.0, 1.0, 1.0, 5.102422502305772e-5, 2.2935867309570313e-5, 300.0, 1.4752641550476255))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007827361424763998, 0.003685259819030762, 348.76666666666665, 28682.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007041358947753906, 0.0032358328501383466, 304.8666666666667, 6947.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00017708937327067057, 9.26653544108073e-6, 99.5, 52.74006419815123))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4700164794921874e-5, 1.239776611328125e-5, 88.16666666666667, 76.91880583763123))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6305516560872395e-5, 1.4630953470865886e-5, 94.26666666666667, 42.691089510917664))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.985432942708333e-5, 0.0001605669657389323, 100.56666666666666, 47.652452655136585))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7766666666666667, 0.7766666666666667, 0.7766666666666667, 5.8770179748535156e-5, 0.00014443397521972655, 74.56666666666666, 197.5267078280449))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-10T02:56:31.459
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8790000000000002, 0.8790000000000002, 0.8790000000000002, 2.3658275604248048e-5, 2.371072769165039e-5, 150.91, 52.524371126201004))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2878646850585936e-5, 1.783132553100586e-5, 154.39, 0.0))
*** advance 1 from 1000; 2020-08-10T02:56:32.304
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.883, 0.883, 0.883, 2.7728080749511718e-5, 2.9060840606689453e-5, 150.56, 77.64930498413742))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.710580825805664e-5, 2.511024475097656e-5, 153.92, 0.0))
*** advance 1 from 1000; 2020-08-10T02:56:32.999
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.867, 0.867, 0.867, 2.4769306182861328e-5, 3.713846206665039e-5, 151.61, 42.800359804183245))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3822784423828125e-5, 3.325939178466797e-5, 155.17, 0.0))
*** advance 1 from 1000; 2020-08-10T02:56:33.707
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8950000000000001, 0.8950000000000001, 0.8950000000000001, 0.00010044574737548828, 0.0005050301551818848, 150.83, 46.95383602217771))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00012197494506835938, 0.0006046390533447266, 154.34, 0.0))
*** advance 1 from 1000; 2020-08-10T02:56:34.332
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9620000000000003, 0.9620000000000003, 0.9620000000000003, 8.936643600463867e-5, 0.0004813098907470703, 164.99, 193.1975988219492))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010204315185546875, 0.0004409909248352051, 169.74, 0.0))
*** advance 1 from 1000; 2020-08-10T02:56:35.608
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8790000000000002, 0.8790000000000002, 0.8790000000000002, 3.587484359741211e-5, 0.00012029886245727539, 150.91, 52.53514784621075))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.391742706298828e-5, 7.215023040771484e-5, 154.39, 0.01544282300164923))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:37.603
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.709, 0.709, 0.709, 0.0014949178695678712, 7.494926452636719e-5, 200.14, 198.60000206530094))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:38.537
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.723, 0.723, 0.723, 0.0015855884552001952, 7.352113723754883e-5, 203.92, 114.07301834970713))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:39.443
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6129999999999999, 0.6129999999999999, NaN, 0.0014580130577087403, 7.405996322631836e-5, 262.08, 3.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:40.286
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9429999999999998, 0.9429999999999998, 0.9429999999999998, 0.0015192294120788573, 1.9271373748779296e-5, 226.35, 614.6000202745199))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:41.389
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.562, 0.562, 0.562, 0.001897585391998291, 0.0004127001762390137, 252.21, 2364.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:42.452
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4009999999999998, 0.4009999999999998, 0.4009999999999998, 0.0016347169876098633, 0.0003497600555419922, 246.41, 3676.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-10T02:56:43.449
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.573, 0.573, 0.573, 0.00157073974609375, 3.45301628112793e-5, 245.64, 2382.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.032258064516129,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9810096153846157,"seconds":0.0026419293135404587,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.71875,"distances_sum":587.3912015706301}}, beam: 2, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.032258064516129,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9810096153846157,"seconds":0.0026419293135404587,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.71875,"distances_sum":587.3912015706301}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.2196531791907512, conf: {"restarts":6}, perf: {"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":2.3875385522842407e-5,"exhaustive_search_seconds":8.75815749168396e-6,"evaluations":44.6015625,"distances_sum":307.37809381633997}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.373478179434351, conf: {"restarts":5}, perf: {"precision":0.9062499999999988,"recall":0.9062499999999988,"f1":0.9062499999999988,"seconds":2.4460256099700928e-5,"exhaustive_search_seconds":8.75815749168396e-6,"evaluations":41.7109375,"distances_sum":306.75291987508535}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.373478179434351,"state":{"restarts":5},"perf":{"precision":0.9062499999999988,"recall":0.9062499999999988,"f1":0.9062499999999988,"seconds":2.4460256099700928e-5,"exhaustive_search_seconds":8.75815749168396e-6,"evaluations":41.7109375,"distances_sum":306.75291987508535}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.373478179434351,"state":{"restarts":5},"perf":{"precision":0.9062499999999988,"recall":0.9062499999999988,"f1":0.9062499999999988,"seconds":2.4460256099700928e-5,"exhaustive_search_seconds":8.75815749168396e-6,"evaluations":41.7109375,"distances_sum":306.75291987508535}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.373478179434351,"state":{"restarts":5},"perf":{"precision":0.9062499999999988,"recall":0.9062499999999988,"f1":0.9062499999999988,"seconds":2.4460256099700928e-5,"exhaustive_search_seconds":8.75815749168396e-6,"evaluations":41.7109375,"distances_sum":306.75291987508535}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.87673611111111,"state":{"restarts":5},"perf":{"precision":0.87673611111111,"recall":0.87673611111111,"f1":0.87673611111111,"seconds":4.017166793346405e-5,"exhaustive_search_seconds":2.936646342277527e-5,"evaluations":99.484375,"distances_sum":123.50058024562895}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.87673611111111,"state":{"restarts":5},"perf":{"precision":0.87673611111111,"recall":0.87673611111111,"f1":0.87673611111111,"seconds":4.017166793346405e-5,"exhaustive_search_seconds":2.936646342277527e-5,"evaluations":99.484375,"distances_sum":123.50058024562895}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555541, conf: {"restarts":1}, perf: {"precision":0.8446180555555541,"recall":0.8446180555555541,"f1":null,"seconds":6.653554737567902e-5,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":130.2421875,"distances_sum":56.75902081793174}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777763, conf: {"restarts":9}, perf: {"precision":0.8480902777777763,"recall":0.8480902777777763,"f1":0.8480902777777763,"seconds":0.00010084733366966248,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":202.921875,"distances_sum":55.94434342486784}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8324652777777765, conf: {"restarts":16}, perf: {"precision":0.8324652777777765,"recall":0.8324652777777765,"f1":null,"seconds":0.00012452900409698486,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":263.71875,"distances_sum":57.17999703763053}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444432, conf: {"restarts":15}, perf: {"precision":0.8350694444444432,"recall":0.8350694444444432,"f1":null,"seconds":0.00012065097689628601,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":249.640625,"distances_sum":57.04668991221115}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8368055555555542, conf: {"restarts":17}, perf: {"precision":0.8368055555555542,"recall":0.8368055555555542,"f1":0.8368055555555542,"seconds":0.00013186968863010406,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":271.5546875,"distances_sum":56.460351701360196}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666656, conf: {"restarts":13}, perf: {"precision":0.8385416666666656,"recall":0.8385416666666656,"f1":0.8385416666666656,"seconds":0.00011642463505268097,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":230.46875,"distances_sum":56.58506232267246}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888876, conf: {"restarts":18}, perf: {"precision":0.8576388888888876,"recall":0.8576388888888876,"f1":0.8576388888888876,"seconds":0.00013807602226734161,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":274.2265625,"distances_sum":55.89118347456679}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888876,"state":{"restarts":18},"perf":{"precision":0.8576388888888876,"recall":0.8576388888888876,"f1":0.8576388888888876,"seconds":0.00013807602226734161,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":274.2265625,"distances_sum":55.89118347456679}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999991, conf: {"restarts":30}, perf: {"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00022600404918193817,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":374.7734375,"distances_sum":55.76360630756244}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444432, conf: {"restarts":2}, perf: {"precision":0.8585069444444432,"recall":0.8585069444444432,"f1":0.8585069444444432,"seconds":0.00010980106890201569,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":137.703125,"distances_sum":55.828860563691705}, best_list's length: 10, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999991,"state":{"restarts":30},"perf":{"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00022600404918193817,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":374.7734375,"distances_sum":55.76360630756244}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8593749999999991,"state":{"restarts":30},"perf":{"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00022600404918193817,"exhaustive_search_seconds":0.00036180391907691956,"evaluations":374.7734375,"distances_sum":55.76360630756244}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(30), SatNeighborhood(32), 2020-08-10T02:56:50.916
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6391, 0.05022142f0), Item(8584, 0.05177525f0), Item(2456, 0.051867805f0), Item(6352, 0.05730723f0), Item(7383, 0.06066322f0), Item(781, 0.065175734f0), Item(8002, 0.06695806f0), Item(8707, 0.06865382f0), Item(3864, 0.06926601f0), Item(4114, 0.071785875f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.090909090909091, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.90625,"f1":0.945564331501832,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":8.25,"distances_sum":545.52925388515}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.90625,"f1":0.945564331501832,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":8.25,"distances_sum":545.52925388515}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.90625,"f1":0.945564331501832,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":8.25,"distances_sum":545.52925388515}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.090909090909091,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.90625,"f1":0.945564331501832,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":8.25,"distances_sum":545.52925388515}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.1288888888888895, conf: {"bsize":3}, perf: {"precision":0.9461805555555548,"recall":0.9461805555555548,"f1":0.9461805555555548,"seconds":1.4960765838623047e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":31.640625,"distances_sum":284.19970539957285}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.077969395190673, conf: {"bsize":4}, perf: {"precision":0.9852430555555552,"recall":0.9852430555555552,"f1":0.9852430555555552,"seconds":1.5331432223320007e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":32.1640625,"distances_sum":282.2879217043519}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.5023696682464456, conf: {"bsize":7}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":1.9593164324760437e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":39.5625,"distances_sum":281.4441697821021}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1288888888888895,"state":{"bsize":3},"perf":{"precision":0.9461805555555548,"recall":0.9461805555555548,"f1":0.9461805555555548,"seconds":1.4960765838623047e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":31.640625,"distances_sum":284.19970539957285}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1288888888888895,"state":{"bsize":3},"perf":{"precision":0.9461805555555548,"recall":0.9461805555555548,"f1":0.9461805555555548,"seconds":1.4960765838623047e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":31.640625,"distances_sum":284.19970539957285}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.1288888888888895,"state":{"bsize":3},"perf":{"precision":0.9461805555555548,"recall":0.9461805555555548,"f1":0.9461805555555548,"seconds":1.4960765838623047e-5,"exhaustive_search_seconds":8.516013622283936e-6,"evaluations":31.640625,"distances_sum":284.19970539957285}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.406466512702078,"state":{"bsize":3},"perf":{"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":2.9474496841430664e-5,"exhaustive_search_seconds":2.7477741241455078e-5,"evaluations":60.890625,"distances_sum":123.59764799196273}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.406466512702078,"state":{"bsize":3},"perf":{"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":2.9474496841430664e-5,"exhaustive_search_seconds":2.7477741241455078e-5,"evaluations":60.890625,"distances_sum":123.59764799196273}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.64845676705777, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.073022425174713e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":104.5390625,"distances_sum":54.56838632468134}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.86460304245819, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.670504808425903e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":103.2265625,"distances_sum":54.572445509023964}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.72113676731794, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.53192400932312e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":105.5625,"distances_sum":54.576014135964215}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.86460304245819,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.670504808425903e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":103.2265625,"distances_sum":54.572445509023964}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.86460304245819,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.670504808425903e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":103.2265625,"distances_sum":54.572445509023964}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.86460304245819,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.670504808425903e-5,"exhaustive_search_seconds":0.0003967881202697754,"evaluations":103.2265625,"distances_sum":54.572445509023964}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-08-10T02:56:54.735
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4360, 0.017060872f0), Item(676, 0.025089694f0), Item(707, 0.038662072f0), Item(1079, 0.040930778f0), Item(423, 0.045909245f0), Item(896, 0.05020701f0), Item(767, 0.052909654f0), Item(7892, 0.057336546f0), Item(1987, 0.057372518f0), Item(8587, 0.05934455f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
