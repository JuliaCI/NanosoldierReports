Julia Version 1.6.0-DEV.599
Commit dec8f72aa2 (2020-08-06 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ───────────────────── v1.3.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed FieldDocTables ────────────── v0.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Tables ────────────────────── v1.0.5
  Installed DocStringExtensions ───────── v0.8.2
  Installed PrettyTables ──────────────── v0.9.1
  Installed Crayons ───────────────────── v4.0.3
  Installed OrderedCollections ────────── v1.3.0
  Installed Formatting ────────────────── v0.4.1
  Installed Parameters ────────────────── v0.12.1
  Installed Reexport ──────────────────── v0.2.0
  Installed UnPack ────────────────────── v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [a5d692f0] + FieldDocTables v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [a8cc5b0e] + Crayons v4.0.3
  [9a962f9c] + DataAPI v1.3.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [ffbed154] + DocStringExtensions v0.8.2
  [a5d692f0] + FieldDocTables v0.1.0
  [59287772] + Formatting v0.4.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [08abe8d2] + PrettyTables v0.9.1
  [189a3867] + Reexport v0.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [3a884ed6] + UnPack v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FieldDocTables
Status `/tmp/jl_G1WyjL/Project.toml`
  [ffbed154] DocStringExtensions v0.8.2
  [a5d692f0] FieldDocTables v0.1.0
  [bf96fef3] FieldMetadata v0.3.0
  [08abe8d2] PrettyTables v0.9.1
  [d6f4376e] Markdown
  [8dfed614] Test
Status `/tmp/jl_G1WyjL/Manifest.toml`
  [a8cc5b0e] Crayons v4.0.3
  [9a962f9c] DataAPI v1.3.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.2
  [a5d692f0] FieldDocTables v0.1.0
  [bf96fef3] FieldMetadata v0.3.0
  [59287772] Formatting v0.4.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [08abe8d2] PrettyTables v0.9.1
  [189a3867] Reexport v0.2.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [3a884ed6] UnPack v1.0.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Error During Test at /home/pkgeval/.julia/packages/FieldDocTables/MuaKW/test/runtests.jl:20
  Test threw exception
  Expression: Markdown.plain(#= /home/pkgeval/.julia/packages/FieldDocTables/MuaKW/test/runtests.jl:20 =# @doc(TestStruct)) == "This type tests if FIELDMETADATA is printed as a markdown table.\n\n| Field | Description | Default |      Bounds |        Docs |\n| -----:| -----------:| -------:| -----------:| -----------:|\n|     a |      an Int |       2 |     (1, 10) | A field doc |\n|     b |     a Float |     4.0 | (2.0, 20.0) |             |\n"
  2 of type Int64 is not in AbstractString for key a in Main.TestFieldDocTables.TestStruct
  Stacktrace:
    [1] metadata_error(typ::Type, checktyp::Type, key::Symbol, value::Int64)
      @ FieldMetadata ~/.julia/packages/FieldMetadata/kDbg8/src/FieldMetadata.jl:223
    [2] description(#unused#::Type{Main.TestFieldDocTables.TestStruct}, #unused#::Type{Val{:a}})
      @ Main.TestFieldDocTables ~/.julia/packages/FieldMetadata/kDbg8/src/FieldMetadata.jl:216
    [3] description(#unused#::Type{Main.TestFieldDocTables.TestStruct}, keys::Tuple{DataType,DataType})
      @ FieldMetadata ~/.julia/packages/FieldMetadata/kDbg8/src/FieldMetadata.jl:64
    [4] description(x::Type{Main.TestFieldDocTables.TestStruct})
      @ FieldMetadata ~/.julia/packages/FieldMetadata/kDbg8/src/FieldMetadata.jl:63
    [5] (::FieldDocTables.var"#7#9"{FieldDocTables.FieldDocTable{Tuple{Symbol,Symbol,Symbol},Tuple{typeof(FieldMetadata.description),typeof(FieldMetadata.default),typeof(FieldMetadata.bounds)},Tuple{Int64,Int64,Int64},PrettyTables.TextFormat},DataType})(::Tuple{Int64,typeof(FieldMetadata.description)})
      @ FieldDocTables ./none:0
    [6] iterate(::Base.Generator{Base.Iterators.Enumerate{Tuple{typeof(FieldMetadata.description),typeof(FieldMetadata.default),typeof(FieldMetadata.bounds)}},FieldDocTables.var"#7#9"{FieldDocTables.FieldDocTable{Tuple{Symbol,Symbol,Symbol},Tuple{typeof(FieldMetadata.description),typeof(FieldMetadata.default),typeof(FieldMetadata.bounds)},Tuple{Int64,Int64,Int64},PrettyTables.TextFormat},DataType}})
      @ Base ./generator.jl:47
    [7] format(doctable::FieldDocTables.FieldDocTable{Tuple{Symbol,Symbol,Symbol},Tuple{typeof(FieldMetadata.description),typeof(FieldMetadata.default),typeof(FieldMetadata.bounds)},Tuple{Int64,Int64,Int64},PrettyTables.TextFormat}, buf::IOBuffer, doc::Base.Docs.DocStr)
      @ FieldDocTables ~/.julia/packages/FieldDocTables/MuaKW/src/FieldDocTables.jl:37
    [8] formatdoc(buf::IOBuffer, doc::Base.Docs.DocStr, part::FieldDocTables.FieldDocTable{Tuple{Symbol,Symbol,Symbol},Tuple{typeof(FieldMetadata.description),typeof(FieldMetadata.default),typeof(FieldMetadata.bounds)},Tuple{Int64,Int64,Int64},PrettyTables.TextFormat})
      @ DocStringExtensions ~/.julia/packages/DocStringExtensions/ojJPU/src/abbreviations.jl:25
    [9] formatdoc(d::Base.Docs.DocStr)
      @ REPL /workspace/srcdir/usr/share/julia/stdlib/v1.6/REPL/src/docview.jl:85
   [10] parsedoc(d::Base.Docs.DocStr)
      @ REPL /workspace/srcdir/usr/share/julia/stdlib/v1.6/REPL/src/docview.jl:93
   [11] iterate
      @ ./generator.jl:47 [inlined]
   [12] _collect(c::Vector{Base.Docs.DocStr}, itr::Base.Generator{Vector{Base.Docs.DocStr},typeof(Base.Docs.parsedoc)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [13] collect_similar
      @ ./array.jl:628 [inlined]
   [14] map
      @ ./abstractarray.jl:2225 [inlined]
   [15] doc(binding::Base.Docs.Binding, sig::Type)
      @ REPL /workspace/srcdir/usr/share/julia/stdlib/v1.6/REPL/src/docview.jl:187
   [16] doc(binding::Base.Docs.Binding)
      @ REPL /workspace/srcdir/usr/share/julia/stdlib/v1.6/REPL/src/docview.jl:155
   [17] top-level scope
      @ ~/.julia/packages/FieldDocTables/MuaKW/test/runtests.jl:20
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:344
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [22] _start()
      @ Base ./client.jl:484
  
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/FieldDocTables/MuaKW/test/runtests.jl:1
ERROR: Package FieldDocTables errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
