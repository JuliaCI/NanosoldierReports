Julia Version 1.6.0-DEV.599
Commit dec8f72aa2 (2020-08-06 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed QuasiNewtonMethods ── v0.1.1
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.23
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed VectorizationBase ─── v0.12.30
  Installed UnPack ────────────── v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_4r1UWe/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_4r1UWe/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [7.622791287076325e-13, 1.6562307081358085e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.667755319573644e-12, -1.5861423285912224e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [7.486908870646403e-10, 1.4839476314421063e-9, -5.901806821029254e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0239364911512894e-10, 2.1651769266384235e-10, -2.359966666531932e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [2.699187540144976e-10, 1.4038770146385104e-11, 5.454878770905225e-10, 3.588995767245251e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.800515292416094e-11, -5.3546278522276225e-11, 3.750777466393629e-11, -1.0646916681622542e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-4.9827697523596726e-11, 8.569012166503853e-11, -1.016405848375257e-10, 1.6965007176850122e-10, -8.149037000748649e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1714851311239727e-11, -8.764766690205761e-12, 2.415112554388088e-11, -1.9397927708553198e-11, -2.8320013001348343e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.582689534984638e-11, -7.337563889819876e-11, -2.785605079935749e-11, 3.416955607349337e-11, -1.5676893116989277e-10, -5.854194906618204e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.750821792574243e-11, -1.348032796499865e-11, -1.566302643141171e-11, 5.3225424068159555e-11, -2.8045232802753617e-11, -3.0561664310368997e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [5.2582382892296664e-11, -2.0004220502300996e-11, 1.2584822073336e-11, 1.090258994196347e-10, -3.604716525273943e-11, 1.7746470959423277e-11, 1.2325029885573713e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0337686262573698e-10, -7.212319630411912e-11, -1.522739712100929e-10, -2.090356776562885e-10, -1.4502565814922264e-10, -3.0379099236199636e-10, 5.45785638905727e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-5.394062974062308e-11, -3.534805781413297e-11, 1.290301199219357e-12, 3.924638392049928e-12, -1.0880596423845645e-10, -6.86869450206018e-11, 4.934053166039121e-12, 6.4217520190368305e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.287037557228814e-11, -3.641642543072976e-12, 2.8350655156827997e-12, -9.017786517517834e-12, -1.2592504816666406e-10, -6.501021942995067e-12, 9.886536034287019e-12, -1.7023604748089838e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2847833907869699e-11, 2.2361668072790053e-11, -4.3266945581876826e-11, -3.276678928187948e-11, -3.202393905610279e-11, 4.623856852958852e-11, -9.186529315030612e-11, -6.921263562276181e-11, 5.768718835952313e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0622580592922759e-10, 8.968359388461522e-11, 4.2971626257326534e-11, -2.415287969625979e-10, -2.1336843403219063e-10, 1.8922419187106243e-10, 9.219958130302075e-11, -4.82079487440501e-10, 1.929567616798522e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-6.329237134394816e-11, -4.537847875241141e-11, 6.328471080507825e-11, -1.26065935468489e-10, -3.555422622980586e-11, -1.302423724425239e-10, -7.85844722628326e-11, 1.3077428029362181e-10, -2.5039159634587804e-10, -6.736877722346435e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5427216715788745e-13, -1.7480794589630477e-11, -1.6200041308422897e-11, -2.7860602713758453e-11, -1.95137239700216e-11, 1.1091128016005314e-12, -3.442524043606454e-11, -3.320099750681038e-11, -5.262135172046101e-11, -4.1179837317883994e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [6.118150430722835e-11, 1.294009344121605e-11, 4.3766545942958146e-11, -5.714873019257993e-12, -2.7516433576124655e-11, 1.150686212980645e-10, 3.5569769352150615e-11, 8.86188900039997e-11, -1.1643574993058792e-11, -5.935429925330027e-11, 1.5354828519775765e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.895617327666969e-11, 4.9675819013828004e-12, -3.4212743749151286e-11, -2.457256620402859e-12, -4.7694292959477025e-11, -1.2178491548553438e-10, 1.1926459819733282e-11, -6.36426467082174e-11, -1.3720025116015222e-11, -9.672351808376334e-11, 1.1863843241144423e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [2.2565282975506307e-11, 1.4193757280622776e-11, 2.311173474822681e-11, -6.494471627149778e-12, 1.3744339000254513e-11, 2.609379379236998e-11, 4.189160129897118e-11, 3.693734207388388e-11, 4.775291273517723e-11, -1.56891166724904e-11, 3.165845363639619e-11, 4.463740488347412e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2482703759530978e-10, 1.6193713037182533e-12, -5.104827671686962e-11, -4.399935971122204e-11, -7.244072008916191e-11, -8.369682724662653e-11, 2.4055979430670504e-10, 7.120526390735904e-12, -9.191691852095119e-11, -9.552492130637802e-11, -1.5737300351759131e-10, -1.6936296809433316e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [9.683254198478153e-11, 5.082616549856311e-10, -4.42296199665293e-11, 5.7236215766920395e-11, 5.6943560977629204e-11, -3.1624936003282755e-10, 2.045328351130138e-10, 1.0360658997399241e-9, -7.363887277733738e-11, 1.1373479935627984e-10, 1.3566237022644145e-10, -6.358870097145086e-10, -2.8834712395564566e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.883582179118548e-11, -1.4908740908481377e-11, -4.03540534321678e-11, 1.98632221781736e-11, -7.919775946163554e-12, -4.7798431879186865e-12, 3.8082204056877345e-11, -2.9628632880474015e-11, -8.128941964002934e-11, 4.1730618960400534e-11, -1.499445012598244e-11, -7.224443265840819e-12, -2.3869795029440866e-14]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.528433514953804e-11, 3.162130557399223e-10, 1.4139711623784024e-10, -1.2607193067282196e-10, 3.8417802272761037e-10, -8.253420169523906e-11, -6.481148950854276e-11, -1.5934809027839947e-10, 6.282987463634981e-10, 2.871507476243096e-10, -2.61785815247606e-10, 7.711515870312269e-10, -1.663722493105979e-10, -1.4100143275186383e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1045609699399392e-11, 1.1746159600534156e-12, 2.124189713015312e-11, -2.8015478825693663e-11, -1.148414696672262e-12, -3.936850845320805e-12, -9.186873484168245e-12, -4.0255243582976163e-11, -1.922906278650771e-12, 4.3625325574225826e-11, -5.37154765112291e-11, 6.616929226765933e-13, -4.6104231543608876e-12, -1.663758020242767e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-3.895750388949182e-11, 2.2574386804308233e-11, -1.1035616864774056e-13, 3.566302808621913e-11, -1.0566769681474852e-11, -1.9404478024398486e-11, -1.840194663316197e-11, -7.172795690735256e-11, 4.784816987069007e-11, -1.1388667786604856e-12, 7.028266857389553e-11, -1.859168374807041e-11, -4.1334380362911816e-11, -3.4312441776762626e-11, -1.248334768888526e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0114132581738886e-11, 4.725575486475009e-11, -1.3418377520224567e-11, -2.105426943899147e-11, -2.1993185050916964e-11, 7.316147687674857e-12, 9.158007685527991e-12, 4.0323744343595536e-11, 9.538969614197867e-11, -2.4552027078073024e-11, -4.239408823991653e-11, -4.113542839689899e-11, 1.4809931059289738e-11, 1.939670646322611e-11, 3.895528344344257e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5639157463785978e-11, -1.0790590643239284e-11, -3.703370943242135e-12, 1.642930236300799e-11, 2.614330973926826e-11, 1.1453060722033115e-12, -1.5583534462848547e-11, -9.35473920549157e-13, -5.120115442736051e-11, -2.1423085527771946e-11, -8.701372955499664e-12, 3.2932767624060943e-11, 4.7766679500682585e-11, 6.410427744185654e-13, -2.880318206166521e-11, -1.8631762799259377e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.307643296565857e-11, 5.186362450615434e-11, 6.273270791723462e-11, 1.6936008151446913e-11, 1.055193710186586e-10, 6.670286545329418e-11, -3.517930391438995e-11, -1.0473133471577967e-10, -1.1788603426765576e-10, 1.0508927061891882e-10, 1.1329759352918245e-10, 2.397460008296548e-11, 2.117110931010302e-10, 1.2951684169593136e-10, -6.94946322710166e-11, -2.108865304606411e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.580346964402679e-10, -5.932065949565413e-11, 1.1550249645608801e-10, 8.457234912384592e-12, -3.5554781341318176e-11, 7.381872890732666e-12, 2.266653531535212e-11, 4.837552580738702e-11, 3.1889157980913296e-10, -1.192139720274099e-10, 2.3891622014104996e-10, 2.094702189481268e-11, -5.3164916913317484e-11, 1.6656231949241374e-11, 4.419087318296988e-11, 1.0430722952037286e-10, -3.0916380566736734e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.247058177890949e-11, -9.389877764220955e-11, 1.635380719733348e-11, 1.1559420087792205e-11, 6.696199150724169e-12, 2.5362156819142e-10, 8.5262241711348e-11, -1.1779310860049463e-10, -8.39596170365553e-11, -1.7344092828608382e-10, 3.890199273826056e-11, 3.22715187905942e-11, 2.194933124144427e-11, 5.312512652011492e-10, 1.6286949566790554e-10, -2.59038790417776e-10, -8.306022536430646e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0416378870559129e-10, 6.376854599920989e-11, -6.027645049755392e-11, 4.285638510737044e-11, -1.541653471548443e-10, -8.409828389233098e-12, 1.1031597857424913e-10, 1.6716494855018027e-10, -5.533595803797198e-11, -2.025619671996992e-10, 1.2149059536170626e-10, -1.327528087458063e-10, 9.368905651285786e-11, -3.251593438946543e-10, -6.3160587870925156e-12, 2.3740187593546125e-10, 3.340392407125137e-10, -1.132062221742558e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.36200170533607e-10, 2.4554447364266707e-10, 2.791147313274678e-10, 1.607056709929111e-10, -3.963829264819196e-12, 3.1236635500420107e-10, -1.1309853054086716e-10, -5.972187189229317e-10, 5.729461349801568e-10, 4.750677629061784e-10, 5.005813541458792e-10, 5.607652120431794e-10, 3.330360431874624e-10, -1.0229261881988805e-11, 6.418070519487173e-10, -2.0759138852355363e-10, -1.199263355289304e-9, 1.1473797467687064e-9]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [2.5299651262855605e-10, -1.524763981741728e-9, 1.5657191099194279e-9, -1.963376572433617e-9, -1.4608075860067515e-9, -5.720367513006863e-10, 2.394833220620285e-9, -1.159300544451014e-9, 2.6583042433969695e-9, 5.121809643071629e-10, -3.0664499828247926e-9, 3.1560130064889336e-9, -3.92744681221302e-9, -2.9422870806428136e-9, -1.1504870389700272e-9, 4.807333198186825e-9, -2.328033654741546e-9, 5.334048536198566e-9, 2.5996094166202965e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6831870059140783e-12, -4.210942705640264e-11, -5.625844234913302e-11, 3.2731151122789015e-11, 7.400968726756219e-12, -4.455258384439276e-11, 3.927125291625089e-11, -9.638623232888222e-12, 2.719535707740306e-11, -6.742717495455963e-12, -8.24031953783333e-11, -1.1100653729556598e-10, 6.550160414064976e-11, 1.9917623106380233e-11, -8.923362049273464e-11, 7.901901355467089e-11, -1.1990519688254153e-11, 5.901079624948125e-11, -4.48829862165212e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-8.204048551618826e-11, -8.291145547900669e-13, 3.099431822306542e-11, 3.3725022774433455e-11, -4.866451686069695e-11, 1.4541479131935375e-11, 7.69850849735576e-12, 7.376543820214465e-12, 4.20221635266671e-11, 5.2265969330278494e-11, -1.66095026621349e-10, -4.3016701312126315e-12, 6.290523657526137e-11, 6.457212542443358e-11, -9.339118367535093e-11, 2.7486013465249926e-11, 1.3680168109431179e-11, 1.467093113660667e-11, 7.809308755213351e-11, 1.0380674098087184e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.837596906919316e-12, -6.035794086756141e-11, -7.058409412508126e-11, 2.0907719999740948e-11, 8.079092950197264e-12, 2.8366864412987525e-11, 2.1912027747816865e-11, 2.274025412418723e-11, 7.742917418340767e-12, -7.350631214819714e-11, 9.846790050005438e-12, -1.2354528511338003e-10, -1.4153955785189964e-10, 3.990607844173155e-11, 1.5197842984093768e-11, 5.632982968961642e-11, 4.464184577557262e-11, 4.4973136326120766e-11, 1.5870194047806763e-11, -1.4680778814835094e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-6.8015593157610965e-12, 7.69762031893606e-12, 2.478839356001572e-11, 4.531930386519889e-13, 4.53725945703809e-12, -7.698175430448373e-12, -2.6509350270487175e-11, 5.6135096571097165e-12, 7.992495554276502e-12, -1.1632805829719928e-11, -1.3212098082249213e-11, 1.5180967594119466e-11, 4.882783066761931e-11, 5.651035195342047e-13, 8.646638960385644e-12, -1.638555957583776e-11, -5.224898291800173e-11, 1.0538903083556761e-11, 1.68516312015754e-11, -2.3479773680890048e-11, 1.13464793116691e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4772627565662333e-11, 5.949707393426706e-11, -1.784938863380603e-11, -3.4333980103440354e-11, -1.0802891914352131e-10, -4.2637560149216824e-11, 7.041123240014713e-11, 1.2413403638333875e-11, 3.2210456524239817e-11, -1.3701706436108907e-11, -2.8099078619447937e-11, 1.2298229101759262e-10, -3.757716360297536e-11, -7.380773769938287e-11, -2.0853652138441703e-10, -8.001910245525323e-11, 1.3932055509258134e-10, 2.8658631023859016e-11, 6.180367329022829e-11, -2.5480284548962118e-11, -1.6122658763606523e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [5.4791282622090876e-11, 2.6231683492028424e-11, -6.747857828059978e-11, 4.6159298605630283e-11, 1.6256995749586167e-11, -7.637779297908764e-12, 4.93032281667638e-11, -1.3320344827150166e-11, 1.8336887563918935e-11, 7.800204926411425e-12, -1.9421242392070326e-11, 1.0847700515626002e-10, 4.666933506314308e-11, -1.347206790569544e-10, 9.274869761100035e-11, 3.325384412278254e-11, -1.4114265312059615e-11, 1.0083778256841924e-10, -3.037736728828122e-11, 3.602629305987648e-11, 1.3924417174848713e-11, -3.7645775385897196e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.891565179107829e-11, 1.5626566707283018e-10, -7.106448762783657e-11, 1.2978218499881677e-10, -1.426192497433476e-12, -1.4827949978979404e-10, -1.233330104710717e-10, -3.7243319539470576e-11, 6.404676788918096e-11, -2.1142310124844244e-11, -3.0678126705652176e-11, -1.5903733885380689e-10, 3.269935433536375e-10, -1.422576501042272e-10, 2.6095792193814304e-10, -6.428524379487044e-12, -3.015999672228986e-10, -2.3936319593076405e-10, -6.424250020842237e-11, 1.285263007133608e-10, -4.514544293954259e-11, -7.17965686902744e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2713497749293765e-11, 4.119682373016076e-11, 2.132900522866521e-10, 1.7985812839071968e-10, 4.6642911755157e-11, -2.2097623730843452e-10, 1.1173728609037425e-11, -9.927270117060516e-11, 1.113065195568197e-10, 9.428569036629142e-11, -6.107836458824067e-11, -4.406630615960694e-11, 8.490008696071527e-11, 4.1422532071067053e-10, 3.4623282019197177e-10, 9.895884112154363e-11, -4.366423889123894e-10, 2.0399237854462626e-12, -1.9349033486548706e-10, 2.3026713869001014e-10, 1.8611778784816124e-10, -1.3179002333885137e-10, 2.2085888673473164e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.033906790354649e-11, -5.0792370309693524e-11, -8.769018844390075e-11, -7.174016936062344e-11, -2.0031865055614162e-11, -1.3977186075209147e-10, -1.433624330360317e-10, -5.593993046559831e-10, -1.0375655890015878e-10, 3.284705840655988e-10, 3.9436320875552155e-10, 1.5638068617818135e-10, -9.814216106462936e-11, -1.709237196223512e-10, -1.5188472701765932e-10, -4.2530423627340497e-11, -2.6710100797799896e-10, -2.8618918346268174e-10, -1.1458332060954035e-9, -2.2551660538994156e-10, 6.738734015243608e-10, 7.812188673739229e-10, -2.6260105201458828e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [2.0065238359734394e-10, -1.8092749520803864e-11, -1.5727752433747355e-11, -1.580346964402679e-11, -1.076438937985813e-11, -4.502243022841412e-11, -1.0591194588016606e-11, 2.8632651805082787e-12, -1.2825507322844487e-10, -3.556677174998413e-11, 9.080070029199305e-12, -2.8447688649180236e-11, 4.0118663946486777e-10, -3.68709507370113e-11, -3.316646957074454e-11, -3.710842744197862e-11, -1.5623613514037515e-11, -9.06086317087329e-11, -2.2522539389058238e-11, 6.288525256081812e-12, -2.581568292470138e-10, -6.411193798072645e-11, 1.5555778887232918e-11, -6.023725962478466e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.7741033348813744e-11, -9.516387677876992e-12, -1.4791390334778498e-10, -1.5210033232904152e-10, -4.851807844374889e-11, -6.5537908433555e-11, 8.574474463785009e-12, -7.799871859504037e-12, -7.118150513463206e-11, 5.46007683510652e-13, 1.2225331857962374e-11, -2.6202595648783245e-11, -9.735012795886178e-11, -1.7507661986826406e-11, -2.9905677934038977e-10, -2.9394653378034263e-10, -9.473966056106065e-11, -1.2476664146277017e-10, 2.495381679068487e-11, -1.4182099938864212e-11, -1.4526113645274563e-10, -3.398392678377604e-13, 2.309330504601803e-11, -5.332068120367239e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
