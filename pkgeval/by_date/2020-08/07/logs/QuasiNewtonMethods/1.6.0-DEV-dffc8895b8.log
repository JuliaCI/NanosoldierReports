Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.23
  Installed VectorizedRNG ─────── v0.1.10
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_clIzA1/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_clIzA1/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9063639555838563e-12, -7.887912545356812e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.785993657994368e-12, 6.597611346137455e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [9.587663996057927e-12, 2.0191182059647872e-11, 6.893596804502522e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5210055437364645e-13, 3.603783937933258e-13, 1.2099210522364956e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [6.294964549624638e-13, -2.015276834299584e-12, 1.7572610033766978e-12, 1.006750238730092e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.578137620583675e-11, 1.567146412639886e-11, 3.088840294651618e-11, 2.8379298910863326e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [2.9027891201849343e-12, 1.301425633926101e-11, 6.545874953189923e-12, 2.6754154447417022e-11, 2.852074132420057e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.47102330316784e-11, -1.0414447082496281e-11, 3.183453500810174e-11, -2.830180534374449e-11, -1.0227829694287038e-10]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-4.810596365700803e-13, 1.9863000133568676e-11, 1.5077716852829326e-11, -7.416289804496046e-12, 3.9578340604862206e-11, 3.103717283181595e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.738254481637341e-12, 1.6378742806466562e-10, -1.006276173498577e-10, 1.589439690974359e-11, 3.2667535343477994e-10, -2.1078327971935096e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-8.001022067105623e-11, 5.3120396970030015e-11, -5.5417004318769614e-11, -1.6999879282053598e-10, 9.563483338581591e-11, -1.1865552984602346e-10, -3.3073654925885876e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7698731369364396e-11, -2.9696245462673687e-12, 9.392375766026362e-11, 3.3392177911650833e-11, -5.6602500464464356e-12, 1.6680434811178202e-10, -3.679556659363925e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [8.077316593357864e-11, -1.816324868286756e-11, -1.753975853446832e-10, -2.662676745757153e-10, 1.632416424257599e-10, -4.5230375000926415e-11, -3.627023126284712e-10, -5.462156282831643e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1230905094805621e-11, 7.326139694896483e-12, -2.882871719123159e-11, 2.0922596988270925e-11, -2.3274937532846707e-11, 1.489164347390215e-11, -5.880662623525268e-11, 4.411626619571507e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.086864097667785e-11, 9.076694951204445e-11, -7.02451430356632e-11, -5.095512900510357e-11, 6.614286895967325e-11, 1.6839218908160092e-10, -1.3877843318965688e-10, -9.393963384951576e-11, 1.261879489788953e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.9746430853001584e-12, 4.2482684037281615e-11, 1.1772693930822697e-10, -1.0109435510941012e-10, 1.2325473974783563e-11, 7.952638547692459e-11, 2.2252133469180535e-10, -2.095146278691118e-10, 2.3301360840832785e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1929568444202232e-11, -1.4489520694382918e-12, 1.3252954289555419e-11, 8.717693233961654e-12, -1.6846635197964588e-11, -2.4154900302164606e-11, -3.879341292645222e-12, 2.6819213516660056e-11, 1.8526957745734762e-11, -3.213174171179389e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.542344361231244e-11, 3.817168803266213e-11, 4.0953906932372774e-12, 2.9022118042121292e-11, 5.833022953538602e-11, -1.1622058870841556e-10, 8.259370964935897e-11, 4.950040377593723e-12, 5.8164362215507026e-11, 1.1797496313192823e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [3.034683615510403e-12, -1.9331203304773226e-11, 8.903100479074055e-12, -6.856515355480042e-12, 1.2180922936977367e-11, 4.6633807926355075e-12, -3.776701174018626e-11, 1.7085222125956534e-11, -1.246436287516417e-11, 2.389732856045157e-11, 5.278000259067994e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1173573177813978e-10, 3.5363267869570336e-11, -4.42313963233687e-11, -9.60596047150375e-11, -9.967293657098253e-11, 2.300468704419245e-10, 8.146305852108071e-11, -9.440803694360511e-11, -1.936424354198607e-10, -1.9894630387540246e-10, 5.992983886926595e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4446521756639186e-10, 2.176259172870232e-12, -7.210554375802758e-11, 1.3111955965428024e-11, -4.7487347387686896e-11, 7.275469116052591e-11, -2.8947444441485004e-10, 1.7617018954751984e-12, -1.487129308586077e-10, 2.431743695296973e-11, -9.403355871739905e-11, 1.397948423687012e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [8.709033494369578e-12, -1.9130030892711147e-11, 6.45821174316552e-11, -1.0026646179994714e-11, -3.8122838219578625e-12, -7.807876567511585e-11, 1.6433521210501567e-11, -3.92913479529966e-11, 1.269544469550965e-10, -2.0350610085984044e-11, -9.656830890492074e-12, -1.6452150752854777e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.7827161968853034e-10, -5.409228620578688e-11, -1.0931067162545105e-10, 1.4270118420256495e-10, -5.3174242786724335e-11, 5.831024552094277e-11, 3.6380987111783725e-10, -1.1531309240808696e-10, -2.1043056186442755e-10, 2.8906899096625693e-10, -1.1229839280701981e-10, 1.10772502281975e-10, 6.2378990861589045e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.896471951174817e-11, 1.198108279254484e-10, 1.725861675794249e-10, 2.8564928200580653e-11, -2.259537001947365e-11, -5.849098982935175e-12, -5.46988010441396e-11, 2.498932172301238e-10, 3.4543856664015493e-10, 5.829647875543742e-11, -4.6931680763862005e-11, -6.395994844865527e-12, 8.841816168114747e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-5.2822080043313235e-11, -3.079780874770677e-11, 1.0011991236069662e-12, -5.220091026103546e-11, 7.827094528067846e-11, -1.5344614467949214e-10, -7.612710462012728e-11, -1.0901890501457956e-10, -6.038480826475734e-11, 2.0301538228295612e-12, -9.777600951110799e-11, 1.553459583192307e-10, -2.9822422309422336e-10, -1.594472331944985e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1206657823947808e-10, 2.013056388250334e-11, -4.27113899803544e-11, 3.840372464480879e-11, -2.6054713941903174e-12, 1.0222200863552189e-10, 2.6543212072738243e-11, 2.1854162923773401e-10, 4.7720272178253254e-11, -9.266232225968452e-11, 7.535705393024728e-11, -7.300271498422717e-12, 2.0706236725231975e-10, 5.363509636424624e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4106826817794627e-11, -3.686162486360445e-12, 8.316902722071973e-11, -9.979184145691988e-11, -1.5719825441351531e-10, -5.6482485355502376e-11, 1.0207146239338272e-10, -3.422617744774925e-11, -7.23421322845752e-12, 1.5530843278099837e-10, -1.957948247977015e-10, -3.2027946961221687e-10, -1.2103185120793114e-10, 2.1514701131764014e-10, 6.981082378842984e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.920963884799903e-11, -7.242206834234821e-11, 1.0097456204505306e-10, 1.0665912597573879e-10, -1.553202011450594e-13, 3.2704727814802936e-11, -1.175026742572527e-11, -1.449295128352901e-10, -1.609899991095176e-10, 1.8561907566549962e-10, 2.0630408492650076e-10, -2.2569723867604807e-12, 6.519496054124829e-11, -4.182187929302472e-11, 3.9013237085328e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-3.154632111090905e-11, -4.8465342850079196e-11, -1.1709522240721526e-11, 9.266676315178302e-11, -2.027933376780311e-12, 2.425926126647937e-11, 7.00144386911461e-11, 2.969757773030324e-11, -6.292311116595783e-11, -9.407008505490921e-11, -2.887112771077227e-11, 1.7796675244596827e-10, -3.816946758661288e-13, 5.032130268034507e-11, 1.3771583873278814e-10, 6.225775450729998e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.478228981559141e-11, 5.3430593283110284e-11, -8.240985671648104e-11, 1.77351466845721e-11, 3.3792080245120815e-11, 6.707967514785196e-12, 1.2418954753457001e-12, -8.527045736173022e-11, -1.0918521642366841e-10, 1.1082912365623088e-10, -1.6657508705719692e-10, 3.59741125777191e-11, 6.808487107434757e-11, 1.343614108861857e-11, -3.2630564916757976e-12, -1.7927925810568013e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-2.289946010591848e-12, 1.262581150740516e-10, -1.1395218102450144e-11, -3.8607783636734894e-11, -3.4865332843025953e-11, -1.7389645279308752e-11, 1.2235545909788925e-11, 4.972866562980016e-11, -2.896460848944571e-12, 2.56897392247879e-10, -2.688638200964988e-11, -7.652989353346129e-11, -7.171307991882259e-11, -3.986311281067856e-11, 3.1339153494513994e-11, 1.108453329123904e-10, -1.2132184146196323e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.577249607644717e-11, 8.199196877001214e-11, 1.836237828456433e-10, 7.928235845611198e-11, 1.4877921117317783e-10, 4.507483275517643e-11, 1.3832268663804825e-11, -6.04089001043917e-11, 6.946998531986992e-11, 1.679734129567123e-10, 3.5795610919819865e-10, 1.6343726372269884e-10, 2.969851031764392e-10, 9.23348064674201e-11, 4.547962006995476e-11, -1.2454282050100574e-10, 1.052646858568096e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-3.817086646762391e-10, -1.048106046397379e-10, 2.014388655879884e-11, 1.2093703816162815e-10, -4.129341313330315e-11, -2.1963797447455136e-10, -4.2552439349918814e-10, -2.52031062686342e-10, -4.962630306692972e-10, -7.442124694279073e-10, -2.0974910697191262e-10, 2.717115421546623e-11, 2.3198643006594466e-10, -7.113720723594952e-11, -4.5818659977214793e-10, -8.53704995584792e-10, -4.874139980515224e-10, -1.0050035248454492e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [8.382183835919932e-13, 1.5734080704987718e-12, -4.719447055379078e-12, -1.6038281813735011e-12, 1.121103210266483e-12, -2.4151791677695655e-12, -1.319166997859611e-12, -2.4509283491624956e-12, -6.371347893718848e-12, 2.431388423929093e-12, 2.5797142200190137e-12, -9.632628028555246e-12, -4.672706666042359e-12, 2.063904602778166e-12, -5.043854223174549e-12, -2.873257187729905e-12, -5.405675906899887e-12, -1.2831624651710172e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.393618553890974e-11, -1.8674162216569812e-10, 6.016498410588156e-11, -9.543921208887696e-12, -3.652533830944549e-11, -1.2895451373395872e-10, -1.0041489861833952e-10, 1.6717516260200682e-11, 1.8492984921181232e-11, 4.100808581597448e-11, -3.7004810327090354e-10, 1.2026046825042158e-10, -1.0718315124336186e-11, -7.735012630405436e-11, -2.760681683255939e-10, -2.0949786350143995e-10, 4.097566730365543e-11, 3.716005281262369e-11, -1.681099703887412e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1423972878787936e-11, 1.467181931502637e-11, 1.372835178869991e-11, -2.343036875629423e-11, 2.258393472232001e-11, -1.4997891817358777e-11, -1.0477285705690065e-11, -4.702904732312163e-13, -3.343569865421614e-11, 2.3819390904122884e-11, 3.0716984511514056e-11, 2.8908431204399676e-11, -4.705624778722495e-11, 4.348432725009843e-11, -2.7922997247742387e-11, -1.857758391565767e-11, -2.641109553280785e-12, -6.941847097152731e-11, 4.114264484655905e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-3.679334614759e-11, -6.339639924135554e-11, -3.5097480477475074e-12, -6.067979452240024e-11, -1.7931878204535678e-11, -4.0844994053657047e-11, 3.6958214266746836e-11, 2.8419044895144907e-11, 1.4120038471787666e-11, 9.329537142832578e-11, -6.983302824892235e-11, -1.2717604747081168e-10, -7.1626038433691974e-12, -1.2247425296152414e-10, -3.136957360538872e-11, -8.860367994856233e-11, 6.4209526584591e-11, 5.850941953156052e-11, 3.8343106467664256e-11, 1.8849855010216743e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.794686952498296e-11, -5.493716592752662e-12, -4.2596481897305694e-11, 4.136824216516288e-11, 6.805822572175657e-11, 7.638689680788957e-11, 1.1540102207163727e-11, 1.3935852472002352e-10, -3.9020009445778214e-11, 3.0734081946093283e-11, -1.0976697328857199e-10, -1.0655587523444865e-11, -8.877965029796542e-11, 9.566814007655466e-11, 1.3185963432249537e-10, 1.70936154120227e-10, 3.4046321317759975e-11, 2.936231258132693e-10, -7.975065052789887e-11, 5.626255017432413e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [3.0238034298690764e-12, 2.7233104660240315e-11, -2.8843594179761567e-12, 5.307776440588441e-11, 2.6199042935104444e-12, 1.2153389405966664e-11, 1.1262102361797588e-11, -5.965672400520816e-12, 9.573453141342725e-12, -6.789568907095145e-12, 1.7494894422043217e-12, 5.4218407541384295e-11, -5.185962770326569e-12, 9.817413548773857e-11, 7.2026828945581656e-12, 2.522226871803923e-11, 2.435718293725131e-11, -4.93183271998987e-12, 1.952815686934173e-11, -1.372124636134231e-11, -9.124923039394162e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [4.567679567912819e-12, -3.292455197367872e-11, 2.378475194575458e-11, -1.40984668384192e-10, -2.0900681185764824e-10, 8.801470663399868e-11, -2.276845378901271e-11, -3.687883332048614e-11, 6.3824501239651e-11, 1.9957369090661814e-12, 1.0545342377099587e-11, -6.345657332929022e-11, 4.692490840341179e-11, -2.796809450700266e-10, -4.414038023980993e-10, 1.9214518864885122e-10, -5.166544969625875e-11, -8.459011269223993e-11, 1.3078160776558434e-10, 8.121059380528095e-12, 5.116285173301094e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.4790391134056335e-11, -8.373723936472288e-11, -2.2814528044534654e-11, -4.627243033183959e-11, 8.867973022574915e-11, -1.2181577968561896e-10, 1.2560463780175724e-10, -1.9802048889516755e-11, -6.326050794314142e-13, -1.4273582316093325e-11, 1.8799850565187626e-11, 3.13693515607838e-11, -1.6769396982141416e-10, -4.2408077050026804e-11, -9.195588734911553e-11, 1.737445742833188e-10, -2.4687829558445173e-10, 2.433357959574778e-10, -4.089850680344398e-11, -1.1323164628151972e-12, -2.97939450888407e-11, 3.566258399700928e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3424938938300102e-10, -8.614653435046193e-11, 3.5570213441360465e-11, -1.0441658648829844e-10, -4.708888834414893e-11, 2.999156478722398e-12, 4.3445247399631626e-12, -5.068268027486056e-11, -1.7640555682874037e-11, 5.770162125884326e-11, 4.180322754621102e-11, -2.7097357691019397e-10, -1.726637721688462e-10, 7.039546723319745e-11, -2.1205093236886796e-10, -9.04321062478175e-11, 4.616307336391401e-12, 1.6296297644657898e-11, -1.0513001580392256e-10, -3.57439633447143e-11, 1.0706147079986295e-10, 7.481859576330407e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3624767980502384e-11, -1.6628920462835595e-12, 4.492473060224711e-11, 1.0018208485007563e-11, 6.809375285854458e-11, -1.923128323255696e-12, 2.283950806258872e-12, -2.655320407995987e-11, -6.734801605290386e-11, -3.685518557006162e-11, 6.637668192865931e-11, -2.636790785714993e-11, 5.848654893725325e-13, 9.161782443811717e-11, 2.2096102725299716e-11, 1.3884005056752358e-10, -1.883715405881503e-12, 6.735279001190975e-12, -5.1202819761897445e-11, -1.372298941149097e-10, -7.657841027963741e-11, 1.2971090868063584e-10, 1.6500134591979077e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.255395787325142e-11, 3.2236435743016045e-12, 1.745270594710746e-13, 8.167244658352502e-12, -2.4018453892438174e-11, 1.1430412172330762e-11, -7.772671395400721e-13, 1.6775469902086115e-11, -3.4996450182234184e-12, -6.747602476764314e-12, 1.8820944802655504e-11, -2.6211366410677783e-11, 7.122746836785154e-12, -1.8918200339612667e-13, 1.5522028107284314e-11, -4.70066208180242e-11, 2.3334001397756765e-11, -1.1215472994763331e-12, 3.7697400756542265e-11, -7.809530799818276e-12, -1.3500756068651754e-11, 3.813993565415785e-11, -7.260858581048524e-14]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [4.693179178616447e-11, -7.303380122891667e-12, -6.818900999405741e-11, 1.3021583811223536e-11, 9.941159007098577e-11, -3.09209324811377e-11, -6.452660628042395e-11, -3.570421736043272e-11, -3.266442671900904e-11, 2.0685675394815917e-11, -3.480371546515926e-11, 2.2978285940666865e-11, 9.825229518867218e-11, -1.9564683206851896e-11, -1.3415568655972265e-10, 2.8913538230312952e-11, 2.1256374438394232e-10, -5.99178484606e-11, -1.2235701341012373e-10, -6.910061411957713e-11, -7.043909899806522e-11, 3.969868878073157e-11, -6.403422236900269e-11, 4.306732748204922e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3341816540446416e-10, 5.322076113145613e-11, 3.0177194076941305e-11, 1.4769119260904517e-10, 7.0818906294789485e-12, -3.3624436568402416e-11, 1.2690515305280314e-11, -1.055024956286843e-10, -2.823741240831623e-12, 7.869571660990005e-11, -3.249533975235863e-11, -2.02669214743878e-10, 2.5342905551895e-10, 1.1142242684059056e-10, 6.009992503663852e-11, 3.1473201822507235e-10, 2.1331381105937908e-11, -6.915923389527734e-11, 1.5790924123848527e-11, -2.1550983220208764e-10, 3.517186542012496e-12, 1.5533108133070073e-10, -5.5629723050287794e-11, -4.098646977368503e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
