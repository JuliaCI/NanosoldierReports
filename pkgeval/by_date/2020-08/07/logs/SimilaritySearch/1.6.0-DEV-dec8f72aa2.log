Julia Version 1.6.0-DEV.599
Commit dec8f72aa2 (2020-08-06 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_AU9xXN/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_AU9xXN/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(30, 0.01972413f0), Item(17, 0.053236604f0), Item(40, 0.07028413f0), Item(20, 0.0897063f0)])
Vsorted = Item[Item(30, 0.01972413f0), Item(17, 0.053236604f0), Item(40, 0.07028413f0), Item(20, 0.0897063f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004271570841471354, 0.0043310960133870445, 301.0, 48.38921604864299))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039209683736165365, 0.005296635627746582, 301.0, 70.5599775314331))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004217020670572917, 0.004069606463114421, 301.0, 39.21324265003204))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038062095642089843, 0.0037986278533935548, 301.0, 8.51602009421913))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004740786552429199, 0.005303096771240234, 301.0, 43.793428897857666))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0005523443222045898, 0.00015126864115397136, 301.0, 174.20732355862856))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.029605865478516e-5, 0.010425329208374023, 300.0, 25.39510208275169)
p = PerformanceResult(1.0, 1.0, 1.0, 6.213982899983724e-5, 3.1264623006184894e-5, 300.0, 25.39510208275169)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004295865694681804, 0.0034862041473388674, 300.0, 1.3114029884663978)
p = PerformanceResult(1.0, 1.0, 1.0, 5.198319753011068e-5, 2.246697743733724e-5, 300.0, 1.3114029884663978)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.029605865478516e-5, 0.010425329208374023, 300.0, 25.39510208275169), PerformanceResult(1.0, 1.0, 1.0, 6.213982899983724e-5, 3.1264623006184894e-5, 300.0, 25.39510208275169), PerformanceResult(1.0, 1.0, 1.0, 0.004295865694681804, 0.0034862041473388674, 300.0, 1.3114029884663978), PerformanceResult(1.0, 1.0, 1.0, 5.198319753011068e-5, 2.246697743733724e-5, 300.0, 1.3114029884663978))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007664974530537923, 0.004030672709147135, 346.56666666666666, 28556.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006837916374206543, 0.0032780647277832033, 303.3333333333333, 6943.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2784868876139322e-5, 1.346270243326823e-5, 95.83333333333333, 48.46613828651607))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4724006652832032e-5, 1.0863939921061199e-5, 86.06666666666666, 70.7152270078659))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00042846202850341795, 1.3796488444010417e-5, 90.36666666666666, 39.23678421974182))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.910728454589844e-5, 0.0001615285873413086, 96.76666666666667, 43.836783066391945))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8366666666666668, 0.8366666666666668, 0.8366666666666668, 4.8732757568359376e-5, 0.0001260677973429362, 70.46666666666667, 183.8785339668393))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-08T15:19:52.914
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8996388888888889, 0.897, 0.8981988304093568, 2.1965503692626952e-5, 2.2890567779541017e-5, 152.36, 50.37787004420534))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1488666534423827e-5, 1.778125762939453e-5, 155.56, 0.0))
*** advance 1 from 1000; 2020-08-08T15:19:53.547
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.916, 0.9150000000000001, 0.9154736842105264, 2.2928714752197266e-5, 1.9719600677490233e-5, 151.82, 74.73998670652509))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9588470458984374e-5, 2.006053924560547e-5, 154.96, 0.0))
*** advance 1 from 1000; 2020-08-08T15:19:54.210
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8980000000000002, 0.8980000000000002, 0.8980000000000002, 4.1072368621826174e-5, 4.670143127441406e-5, 152.17, 40.739971874281764))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4476051330566405e-5, 2.9370784759521484e-5, 155.31, 0.0))
*** advance 1 from 1000; 2020-08-08T15:19:55.021
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8896666666666664, 0.8879999999999998, 0.8887894736842102, 0.00010175704956054688, 0.0005080890655517578, 151.75, 45.455074523808435))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010098695755004883, 0.0005468797683715821, 154.85, 0.0))
*** advance 1 from 1000; 2020-08-08T15:19:55.651
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9640000000000002, 0.9640000000000002, 0.9640000000000002, 0.00010595321655273437, 0.00040464162826538087, 168.93, 191.74009288148955))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.801387786865235e-5, 0.000428009033203125, 174.03, 0.0))
*** advance 1 from 1000; 2020-08-08T15:19:56.801
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8996388888888889, 0.897, 0.8981988304093568, 4.823684692382812e-5, 8.98909568786621e-5, 152.36, 50.38855811697431))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.766298294067383e-5, 7.966041564941406e-5, 155.56, 0.013111155480146408))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:19:59.001
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7649999999999999, 0.7649999999999999, 0.7649999999999999, 0.0015013957023620606, 7.665872573852538e-5, 200.58, 196.4833359569311))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:19:59.893
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7679999999999998, 0.7679999999999998, 0.7679999999999998, 0.001429572105407715, 6.0949325561523434e-5, 203.36, 113.64603346586227))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:20:00.769
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6419999999999999, 0.6419999999999999, 0.6419999999999999, 0.0014813733100891113, 8.882999420166015e-5, 267.64, 3.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:20:01.650
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9320000000000003, 0.9320000000000003, 0.9320000000000003, 0.0016628193855285644, 1.9400119781494142e-5, 223.75, 607.600020468235))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:20:02.777
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5459999999999998, 0.5459999999999998, NaN, 0.0016474604606628418, 0.00041372060775756836, 266.53, 2413.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:20:03.767
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.39599999999999985, 0.39599999999999985, NaN, 0.001643364429473877, 0.00044656991958618163, 245.63, 3674.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T15:20:04.794
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.564, 0.564, NaN, 0.0016082358360290528, 4.32586669921875e-5, 247.0, 2421.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.018567639257294, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9794921875,"f1":0.9883012820512822,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":8.8359375,"distances_sum":571.5817842930555}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.018567639257294,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9883012820512822,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":8.8359375,"distances_sum":571.5817842930555}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.018567639257294,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9883012820512822,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":8.8359375,"distances_sum":571.5817842930555}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.798467215441385, conf: {"restarts":10}, perf: {"precision":0.9097222222222214,"recall":0.9097222222222214,"f1":0.9097222222222214,"seconds":2.2310763597488403e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":55.046875,"distances_sum":304.5989590100944}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9471419791026428, conf: {"restarts":8}, perf: {"precision":0.9088541666666657,"recall":0.9088541666666657,"f1":0.9088541666666657,"seconds":2.1180137991905212e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":50.84375,"distances_sum":304.59432550892234}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9471419791026428,"state":{"restarts":8},"perf":{"precision":0.9088541666666657,"recall":0.9088541666666657,"f1":0.9088541666666657,"seconds":2.1180137991905212e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":50.84375,"distances_sum":304.59432550892234}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0445304937076476, conf: {"restarts":7}, perf: {"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":2.3698434233665466e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":48.421875,"distances_sum":305.9285889826715}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0445304937076476,"state":{"restarts":7},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":2.3698434233665466e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":48.421875,"distances_sum":305.9285889826715}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0445304937076476,"state":{"restarts":7},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":2.3698434233665466e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":48.421875,"distances_sum":305.9285889826715}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.0445304937076476,"state":{"restarts":7},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":2.3698434233665466e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":48.421875,"distances_sum":305.9285889826715}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8923611111111099, conf: {"restarts":12}, perf: {"precision":0.8923611111111099,"recall":0.8923611111111099,"f1":0.8923611111111099,"seconds":6.128661334514618e-5,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":143.2109375,"distances_sum":121.49422789458185}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777765, conf: {"restarts":17}, perf: {"precision":0.8793402777777765,"recall":0.8793402777777765,"f1":0.8793402777777765,"seconds":0.00013066455721855164,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":173.4453125,"distances_sum":121.99843983445317}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777766, conf: {"restarts":16}, perf: {"precision":0.8715277777777766,"recall":0.8715277777777766,"f1":0.8715277777777766,"seconds":6.378255784511566e-5,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":165.21875,"distances_sum":122.69411884341389}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8784722222222212, conf: {"restarts":14}, perf: {"precision":0.8784722222222212,"recall":0.8784722222222212,"f1":0.8784722222222212,"seconds":0.0001733098179101944,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":154.21875,"distances_sum":122.63877769652754}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8836805555555544, conf: {"restarts":13}, perf: {"precision":0.8836805555555544,"recall":0.8836805555555544,"f1":0.8836805555555544,"seconds":8.27740877866745e-5,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":150.2890625,"distances_sum":122.47679846081883}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8923611111111099,"state":{"restarts":12},"perf":{"precision":0.8923611111111099,"recall":0.8923611111111099,"f1":0.8923611111111099,"seconds":6.128661334514618e-5,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":143.2109375,"distances_sum":121.49422789458185}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8932291666666655, conf: {"restarts":22}, perf: {"precision":0.8932291666666655,"recall":0.8932291666666655,"f1":0.8932291666666655,"seconds":0.0001399647444486618,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":202.921875,"distances_sum":121.9365772055462}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8932291666666655,"state":{"restarts":22},"perf":{"precision":0.8932291666666655,"recall":0.8932291666666655,"f1":0.8932291666666655,"seconds":0.0001399647444486618,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":202.921875,"distances_sum":121.9365772055462}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8932291666666655,"state":{"restarts":22},"perf":{"precision":0.8932291666666655,"recall":0.8932291666666655,"f1":0.8932291666666655,"seconds":0.0001399647444486618,"exhaustive_search_seconds":2.810172736644745e-5,"evaluations":202.921875,"distances_sum":121.9365772055462}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555545, conf: {"restarts":34}, perf: {"precision":0.8524305555555545,"recall":0.8524305555555545,"f1":0.8524305555555545,"seconds":0.00018114782869815826,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":414.2890625,"distances_sum":56.24999608262442}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555545, conf: {"restarts":19}, perf: {"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":0.0001291576772928238,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":284.390625,"distances_sum":55.96928616776131}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555546, conf: {"restarts":17}, perf: {"precision":0.8680555555555546,"recall":0.8680555555555546,"f1":0.8680555555555546,"seconds":0.00012905895709991455,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":272.75,"distances_sum":55.65471333800815}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555546,"state":{"restarts":17},"perf":{"precision":0.8680555555555546,"recall":0.8680555555555546,"f1":0.8680555555555546,"seconds":0.00012905895709991455,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":272.75,"distances_sum":55.65471333800815}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555546,"state":{"restarts":17},"perf":{"precision":0.8680555555555546,"recall":0.8680555555555546,"f1":0.8680555555555546,"seconds":0.00012905895709991455,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":272.75,"distances_sum":55.65471333800815}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8680555555555546,"state":{"restarts":17},"perf":{"precision":0.8680555555555546,"recall":0.8680555555555546,"f1":0.8680555555555546,"seconds":0.00012905895709991455,"exhaustive_search_seconds":0.0004642195999622345,"evaluations":272.75,"distances_sum":55.65471333800815}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(17), SatNeighborhood(32), 2020-08-08T15:20:13.049
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5507, 0.021272358f0), Item(8622, 0.034925878f0), Item(4561, 0.03614297f0), Item(3959, 0.041994683f0), Item(8120, 0.055904858f0), Item(3828, 0.05634591f0), Item(6149, 0.060776263f0), Item(6191, 0.061855182f0), Item(3575, 0.06400178f0), Item(9826, 0.067129865f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0676552363299354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9554580835830839,"seconds":0.0035692229866981506,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.4296875,"distances_sum":541.0997820198536}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0676552363299354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9554580835830839,"seconds":0.0035692229866981506,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.4296875,"distances_sum":541.0997820198536}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.199192123201212, conf: {"bsize":2}, perf: {"precision":0.9340277777777769,"recall":0.9340277777777769,"f1":0.9340277777777769,"seconds":1.77137553691864e-5,"exhaustive_search_seconds":8.312985301017761e-6,"evaluations":30.9453125,"distances_sum":282.22324419021606}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.199192123201212,"state":{"bsize":2},"perf":{"precision":0.9340277777777769,"recall":0.9340277777777769,"f1":0.9340277777777769,"seconds":1.77137553691864e-5,"exhaustive_search_seconds":8.312985301017761e-6,"evaluations":30.9453125,"distances_sum":282.22324419021606}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.199192123201212,"state":{"bsize":2},"perf":{"precision":0.9340277777777769,"recall":0.9340277777777769,"f1":0.9340277777777769,"seconds":1.77137553691864e-5,"exhaustive_search_seconds":8.312985301017761e-6,"evaluations":30.9453125,"distances_sum":282.22324419021606}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.199192123201212,"state":{"bsize":2},"perf":{"precision":0.9340277777777769,"recall":0.9340277777777769,"f1":0.9340277777777769,"seconds":1.77137553691864e-5,"exhaustive_search_seconds":8.312985301017761e-6,"evaluations":30.9453125,"distances_sum":282.22324419021606}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.262495230827927,"state":{"bsize":2},"perf":{"precision":0.9374999999999992,"recall":0.9374999999999992,"f1":0.9374999999999992,"seconds":3.316439688205719e-5,"exhaustive_search_seconds":3.1657516956329346e-5,"evaluations":61.4296875,"distances_sum":123.78161074593663}}, beam: 3, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.262495230827927,"state":{"bsize":2},"perf":{"precision":0.9374999999999992,"recall":0.9374999999999992,"f1":0.9374999999999992,"seconds":3.316439688205719e-5,"exhaustive_search_seconds":3.1657516956329346e-5,"evaluations":61.4296875,"distances_sum":123.78161074593663}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.33274994530737, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.38147646188736e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":107.1328125,"distances_sum":53.34728301689029}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.49638395792242, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.686205208301544e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":106.9453125,"distances_sum":53.352209217846394}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.40273972602739, conf: {"bsize":4}, perf: {"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":7.092393934726715e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":102.65625,"distances_sum":53.449052687734365}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.40273972602739,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":7.092393934726715e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":102.65625,"distances_sum":53.449052687734365}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.40273972602739,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":7.092393934726715e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":102.65625,"distances_sum":53.449052687734365}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.40273972602739,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":7.092393934726715e-5,"exhaustive_search_seconds":0.0004062335938215256,"evaluations":102.65625,"distances_sum":53.449052687734365}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(4), SatNeighborhood(32), 2020-08-08T15:20:17.101
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2421, 0.023329973f0), Item(55, 0.025374176f0), Item(3499, 0.039213195f0), Item(3083, 0.049136147f0), Item(7533, 0.052269477f0), Item(8147, 0.055553403f0), Item(6884, 0.05595294f0), Item(3882, 0.05820097f0), Item(254, 0.058791842f0), Item(158, 0.061130937f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
