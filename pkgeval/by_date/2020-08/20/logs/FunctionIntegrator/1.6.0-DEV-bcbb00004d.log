Julia Version 1.6.0-DEV.680
Commit bcbb00004d (2020-08-20 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_KytpyO/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_KytpyO/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.325056 seconds (1.35 M allocations: 71.065 MiB, 2.33% gc time)
Running: chebyshev_quadrature with k=1
  2.466955 seconds (2.24 M allocations: 128.417 MiB, 2.90% gc time)
Running: chebyshev_quadrature with k=2
  0.323358 seconds (424.54 k allocations: 24.371 MiB, 11.50% gc time)
Running: chebyshev_quadrature with k=3
  0.380395 seconds (544.37 k allocations: 29.861 MiB, 3.72% gc time)
Running: chebyshev_quadrature with k=4
  0.291383 seconds (487.28 k allocations: 26.385 MiB)
Running: jacobi_quadrature with α=β=1
 47.772526 seconds (39.35 M allocations: 3.137 GiB, 9.26% gc time)
Running: laguerre_quadrature with k=1
  3.756196 seconds (3.33 M allocations: 185.502 MiB, 3.43% gc time)
Running: legendre_quadrature
  0.243186 seconds (214.66 k allocations: 12.293 MiB)
Running: lobatto_quadrature
  0.391375 seconds (343.00 k allocations: 20.560 MiB)
Running: radau_quadrature
  0.342689 seconds (325.34 k allocations: 19.568 MiB, 7.60% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 86.497588 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rectangle_rule_midpoint.
  0.171049 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 83.343014 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rombergs_method
  0.572357 seconds (751.51 k allocations: 43.258 MiB, 5.64% gc time)
Running: simpsons_rule
  0.052207 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.113149 seconds (112.96 k allocations: 5.967 MiB)
Running: trapezoidal_rule
  0.301085 seconds (1.52 M allocations: 25.791 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.121549 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.500278 seconds (258.66 k allocations: 13.040 MiB)
Running: chebyshev_quadrature with k=2
  0.166887 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.173877 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.165748 seconds (65.31 k allocations: 2.151 MiB)
Running: jacobi_quadrature with α=β=1
  3.519558 seconds (513.68 k allocations: 162.411 MiB, 17.78% gc time)
Running: legendre_quadrature
  0.245144 seconds (43.18 k allocations: 2.480 MiB)
Running: lobatto_quadrature
  0.021521 seconds (16.75 k allocations: 1.034 MiB)
Running: radau_quadrature
  0.021027 seconds (16.73 k allocations: 1.034 MiB)
Running: rectangle_rule_left
 31.631771 seconds (471.41 M allocations: 7.025 GiB, 2.00% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.210771 seconds (476.96 M allocations: 7.107 GiB, 1.70% gc time)
Running: rombergs_method
  0.383701 seconds (338.93 k allocations: 19.216 MiB)
Running: simpsons_rule
  0.000044 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.062659 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.054224 seconds (18.33 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032365 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.103201 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.101315 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.107421 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.103103 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.287894 seconds (378.58 k allocations: 19.787 MiB)
Running: legendre_quadrature
  0.061666 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000097 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000032 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000506 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000356 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000594 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.066864 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000036 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023939 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.034994 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.069524 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.321626 seconds (239.83 k allocations: 13.467 MiB, 9.94% gc time)
Running: chebyshev_quadrature with k=2
  0.326796 seconds (295.00 k allocations: 16.525 MiB)
Running: chebyshev_quadrature with k=3
  0.252029 seconds (274.98 k allocations: 14.942 MiB)
Running: chebyshev_quadrature with k=4
  0.334132 seconds (275.01 k allocations: 14.857 MiB, 8.20% gc time)
Running: jacobi_quadrature with α=β=1
  2.307298 seconds (465.20 k allocations: 164.204 MiB, 5.83% gc time)
Running: legendre_quadrature
  0.167310 seconds (192.58 k allocations: 11.082 MiB, 7.73% gc time)
Running: lobatto_quadrature
  0.207390 seconds (203.78 k allocations: 11.803 MiB)
Running: radau_quadrature
  0.193192 seconds (203.78 k allocations: 11.791 MiB)
Running: rectangle_rule_left
  1.048479 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.028508 seconds (25.91 k allocations: 1.614 MiB)
Running: rectangle_rule_right
  1.108287 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.215653 seconds (139.53 k allocations: 8.040 MiB, 15.17% gc time)
Running: simpsons_rule
  0.033592 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.038464 seconds (44.60 k allocations: 2.786 MiB)
Running: trapezoidal_rule
  0.029058 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.052779 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.218781 seconds (246.92 k allocations: 13.562 MiB)
Running: chebyshev_quadrature with k=2
  0.247425 seconds (302.62 k allocations: 16.615 MiB)
Running: chebyshev_quadrature with k=3
  0.294210 seconds (282.39 k allocations: 14.975 MiB, 6.36% gc time)
Running: chebyshev_quadrature with k=4
  0.311309 seconds (282.43 k allocations: 14.978 MiB)
Running: hermite_quadrature with k=2
 15.942104 seconds (22.11 M allocations: 1.147 GiB, 9.75% gc time)
Running: jacobi_quadrature with α=β=1
  0.467578 seconds (475.20 k allocations: 50.419 MiB, 7.26% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.260658 seconds (287.89 k allocations: 15.873 MiB)
Running: legendre_quadrature
  0.180857 seconds (199.64 k allocations: 11.433 MiB)
Running: lobatto_quadrature
  0.372984 seconds (225.19 k allocations: 37.597 MiB, 9.52% gc time)
Running: radau_quadrature
  0.279397 seconds (221.78 k allocations: 30.262 MiB, 14.44% gc time)
Running: rectangle_rule_left
  0.031626 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.034152 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.028744 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.133971 seconds (142.35 k allocations: 8.118 MiB)
Running: simpsons_rule
  0.047593 seconds (41.23 k allocations: 2.156 MiB)
Running: simpsons38_rule
  0.043684 seconds (59.97 k allocations: 3.194 MiB)
Running: trapezoidal_rule
  0.033956 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041915 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.250632 seconds (242.05 k allocations: 13.329 MiB, 10.99% gc time)
Running: chebyshev_quadrature with k=2
  0.309672 seconds (297.34 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.326788 seconds (277.25 k allocations: 14.746 MiB)
Running: chebyshev_quadrature with k=4
  0.300627 seconds (277.29 k allocations: 14.751 MiB, 12.78% gc time)
Running: hermite_quadrature with k=2
  0.205033 seconds (177.31 k allocations: 10.134 MiB)
Running: jacobi_quadrature with α=β=1
 12.016847 seconds (467.80 k allocations: 1.176 GiB, 10.53% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.240286 seconds (282.75 k allocations: 15.668 MiB)
Running: legendre_quadrature
  0.222505 seconds (194.81 k allocations: 11.207 MiB, 8.50% gc time)
Running: lobatto_quadrature
  0.259343 seconds (215.55 k allocations: 23.308 MiB)
Running: radau_quadrature
  0.273927 seconds (214.70 k allocations: 21.244 MiB, 6.65% gc time)
Running: rectangle_rule_left
  0.043205 seconds (20.45 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.033729 seconds (26.63 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.030976 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.145372 seconds (137.82 k allocations: 7.902 MiB)
Running: simpsons_rule
  0.035725 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.040151 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.030348 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037057 seconds (32.45 k allocations: 1.955 MiB)
Running: chebyshev_quadrature with k=1
  0.269430 seconds (240.38 k allocations: 13.544 MiB)
Running: chebyshev_quadrature with k=2
  0.278712 seconds (295.58 k allocations: 16.630 MiB, 7.09% gc time)
Running: chebyshev_quadrature with k=3
  0.369113 seconds (275.58 k allocations: 14.962 MiB)
Running: chebyshev_quadrature with k=4
  0.243714 seconds (275.61 k allocations: 14.785 MiB, 7.56% gc time)
Running: jacobi_quadrature with α=β=1
  3.084461 seconds (465.84 k allocations: 195.221 MiB, 7.76% gc time)
Running: legendre_quadrature
  0.222165 seconds (193.14 k allocations: 11.131 MiB)
Running: lobatto_quadrature
  0.251885 seconds (204.35 k allocations: 11.898 MiB, 8.45% gc time)
Running: radau_quadrature
  0.239621 seconds (204.35 k allocations: 11.818 MiB)
Running: rectangle_rule_left
  0.361334 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.032068 seconds (26.27 k allocations: 1.634 MiB)
Running: rectangle_rule_right
  0.106938 seconds (18.62 k allocations: 1.125 MiB)
Running: rombergs_method
  0.134410 seconds (150.88 k allocations: 8.789 MiB)
Running: simpsons_rule
  0.033226 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.038482 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.028183 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.045408 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.232249 seconds (240.95 k allocations: 13.495 MiB, 8.24% gc time)
Running: chebyshev_quadrature with k=2
  0.227649 seconds (296.18 k allocations: 16.545 MiB)
Running: chebyshev_quadrature with k=3
  0.229127 seconds (276.12 k allocations: 14.911 MiB)
Running: chebyshev_quadrature with k=4
  0.236796 seconds (276.15 k allocations: 14.966 MiB, 7.86% gc time)
Running: jacobi_quadrature with α=β=1
  2.359278 seconds (466.51 k allocations: 149.899 MiB, 6.72% gc time)
Running: legendre_quadrature
  0.153245 seconds (193.71 k allocations: 11.127 MiB)
Running: lobatto_quadrature
  0.179416 seconds (204.93 k allocations: 11.833 MiB, 9.24% gc time)
Running: radau_quadrature
  0.189111 seconds (204.92 k allocations: 11.841 MiB)
Running: rectangle_rule_left
  1.148320 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025777 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.187875 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.141156 seconds (140.83 k allocations: 8.105 MiB)
Running: simpsons_rule
  0.037144 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.037465 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.031077 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.180350 seconds (152.72 k allocations: 9.077 MiB)
Running: chebyshev_quadrature with k=1
  0.157844 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.156321 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.192064 seconds (93.21 k allocations: 2.682 MiB, 19.04% gc time)
Running: chebyshev_quadrature with k=4
  0.173188 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  3.187305 seconds (487.41 k allocations: 168.208 MiB, 4.27% gc time)
Running: legendre_quadrature
  0.150386 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000130 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000074 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 51.417766 seconds (590.00 M allocations: 8.792 GiB, 2.79% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.548122 seconds (592.75 M allocations: 8.833 GiB, 2.69% gc time)
Running: rombergs_method
  0.143011 seconds (21.09 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000069 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.035046 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027998 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.046428 seconds (629.34 M allocations: 9.388 GiB, 4.14% gc time)
Running: chebyshev_quadrature with k=1
  0.608685 seconds (438.64 k allocations: 24.248 MiB)
Running: chebyshev_quadrature with k=2
 13.803446 seconds (495.98 k allocations: 4.042 GiB, 3.75% gc time)
Running: chebyshev_quadrature with k=3
  6.416448 seconds (290.07 k allocations: 1.643 GiB, 5.04% gc time)
Running: chebyshev_quadrature with k=4
  8.928771 seconds (290.10 k allocations: 2.262 GiB, 2.57% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.448819 seconds (504.65 k allocations: 13.255 GiB, 2.94% gc time)
Running: legendre_quadrature.
  5.490142 seconds (232.43 k allocations: 1.976 GiB, 1.27% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.443110 seconds (8.24 M allocations: 13.384 GiB, 4.14% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.087375 seconds (7.24 M allocations: 13.369 GiB, 2.52% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.065116 seconds (23.33 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.389769 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.287250 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.253473 seconds (455.76 k allocations: 153.652 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.222411 seconds (600.04 M allocations: 8.943 GiB, 8.28% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.875486 seconds (600.05 M allocations: 8.944 GiB, 8.32% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.987182 seconds (600.04 M allocations: 8.943 GiB, 8.28% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.068598 seconds (182.49 k allocations: 4.516 MiB)
Running: chebyshev_quadrature with k=1
  0.270289 seconds (257.55 k allocations: 14.011 MiB)
Running: chebyshev_quadrature with k=2
  0.249165 seconds (283.70 k allocations: 15.185 MiB)
Running: chebyshev_quadrature with k=3
  0.227008 seconds (260.23 k allocations: 13.437 MiB)
Running: chebyshev_quadrature with k=4
  0.241856 seconds (260.26 k allocations: 13.430 MiB)
Running: jacobi_quadrature with α=β=1
  0.440272 seconds (404.84 k allocations: 35.836 MiB)
Running: laguerre_quadrature with k=2
  0.200732 seconds (187.56 k allocations: 10.852 MiB)
Running: legendre_quadrature
  0.151011 seconds (151.36 k allocations: 8.368 MiB)
Running: lobatto_quadrature
  0.040049 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.035296 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.065058 seconds (19.80 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.051839 seconds (26.75 k allocations: 1.639 MiB)
Running: rectangle_rule_right
  0.093183 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.267995 seconds (178.35 k allocations: 10.180 MiB)
Running: simpsons_rule
  0.001998 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.072155 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.219158 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002300 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.138889 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.117487 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.139112 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.126258 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.998244 seconds (401.68 k allocations: 906.516 MiB, 4.39% gc time)
Running: legendre_quadrature
  0.080822 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000201 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000129 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.388366 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000415 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.579274 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.080836 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000840 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000786 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.148724 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.162414 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.143744 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.142354 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.605437 seconds (387.96 k allocations: 253.739 MiB)
Running: legendre_quadrature
  0.068900 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000103 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000058 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.049768 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001047 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.027443 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101789 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000069 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001861 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
