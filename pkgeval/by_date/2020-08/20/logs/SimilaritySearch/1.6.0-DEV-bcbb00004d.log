Julia Version 1.6.0-DEV.680
Commit bcbb00004d (2020-08-20 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.18.0
  Installed SimilaritySearch ─── v0.3.20
  Installed Compat ───────────── v3.14.0
  Installed JSON ─────────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_nPNYsV/Project.toml`
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_nPNYsV/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(6, 0.031625748f0), Item(45, 0.03403592f0), Item(11, 0.0650028f0), Item(37, 0.07159841f0)])
Vsorted = Item[Item(6, 0.031625748f0), Item(45, 0.03403592f0), Item(11, 0.0650028f0), Item(37, 0.07159841f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004062628746032715, 0.003618733088175456, 301.0, 48.739760326221585))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004954028129577637, 0.003834732373555501, 301.0, 70.74979424476624))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004963882764180501, 0.004584860801696777, 301.0, 39.86245894432068))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033367077509562173, 0.004148300488789876, 301.0, 8.649412045750069))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.002987209955851237, 0.003934232393900553, 301.0, 44.249687135219574))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001808802286783854, 0.0001466989517211914, 301.0, 174.89850570261478))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.223519643147787e-5, 0.010872936248779297, 300.0, 27.557940331287682)
p = PerformanceResult(1.0, 1.0, 1.0, 5.981922149658203e-5, 3.057320912679036e-5, 300.0, 27.557940331287682)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004557577768961588, 0.003954331080118815, 300.0, 1.6173339932302042)
p = PerformanceResult(1.0, 1.0, 1.0, 5.063215891520182e-5, 2.163251241048177e-5, 300.0, 1.6173339932302042)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.223519643147787e-5, 0.010872936248779297, 300.0, 27.557940331287682), PerformanceResult(1.0, 1.0, 1.0, 5.981922149658203e-5, 3.057320912679036e-5, 300.0, 27.557940331287682), PerformanceResult(1.0, 1.0, 1.0, 0.004557577768961588, 0.003954331080118815, 300.0, 1.6173339932302042), PerformanceResult(1.0, 1.0, 1.0, 5.063215891520182e-5, 2.163251241048177e-5, 300.0, 1.6173339932302042))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007247058550516764, 0.0034087657928466796, 347.96666666666664, 28554.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008257055282592773, 0.0043531974156697595, 303.6, 6961.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.662340799967448e-5, 1.1666615804036458e-5, 100.2, 48.67398248799145))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4525324503580728e-5, 1.2326240539550782e-5, 89.16666666666667, 70.72010147571564))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5804837544759115e-5, 1.6872088114420573e-5, 91.2, 39.810834884643555))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.167425791422526e-5, 0.00015103816986083984, 100.7, 44.17982529103756))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8433333333333335, 0.8433333333333335, 0.8433333333333335, 4.982948303222656e-5, 0.00012830098470052083, 72.06666666666666, 182.47005932033062))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-20T19:14:59.756
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9157500000000003, 0.9130000000000004, 0.9142222222222226, 2.4139881134033203e-5, 2.7968883514404297e-5, 151.56, 50.88137347929296))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8393993377685548e-5, 1.7249584197998046e-5, 155.3, 0.0))
*** advance 1 from 1000; 2020-08-20T19:15:00.516
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8987142857142858, 0.8970000000000001, 0.8977058823529412, 2.0160675048828126e-5, 1.8248558044433595e-5, 152.07, 76.69756324123591))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.981019973754883e-5, 1.926898956298828e-5, 156.05, 0.0))
*** advance 1 from 1000; 2020-08-20T19:15:01.166
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8910000000000003, 0.8880000000000002, 0.8893333333333336, 2.521991729736328e-5, 3.8840770721435546e-5, 150.97, 42.07526988256723))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0384788513183594e-5, 2.467155456542969e-5, 154.66, 0.0))
*** advance 1 from 1000; 2020-08-20T19:15:01.833
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.915, 0.915, 0.9150000000000001, 9.758949279785156e-5, 0.0004402017593383789, 150.81, 45.91734434629325))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.415149688720703e-5, 0.0005426788330078125, 154.45, 0.0))
*** advance 1 from 1000; 2020-08-20T19:15:02.406
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8609999999999998, 0.8609999999999998, 0.8609999999999998, 5.992889404296875e-5, 0.0003089499473571777, 150.7, 203.3022079669172))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 7.401943206787109e-5, 0.00034895181655883787, 154.22, 0.0))
*** advance 1 from 1000; 2020-08-20T19:15:03.434
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9157500000000003, 0.9130000000000004, 0.9142222222222226, 3.2322406768798826e-5, 6.910085678100586e-5, 151.56, 50.89243883895688))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.3698081970214845e-5, 6.902933120727538e-5, 155.3, 0.016680876637110487))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:05.387
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7179999999999996, 0.7179999999999996, 0.7179999999999996, 0.0015428805351257325, 7.411956787109375e-5, 199.34, 204.98333522677422))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:06.316
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7279999999999999, 0.7279999999999999, 0.7279999999999999, 0.0015712523460388185, 7.436990737915039e-5, 201.96, 115.74365382641554))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:07.194
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.5589999999999999, 0.5589999999999999, 0.5589999999999999, 0.001647789478302002, 7.824897766113281e-5, 247.35, 0.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:08.080
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9630000000000001, 0.9630000000000001, 0.9630000000000001, 0.0014445281028747559, 1.7330646514892578e-5, 220.8, 602.8000207692385))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:09.051
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.57, 0.57, NaN, 0.0015799760818481444, 0.00047037124633789065, 255.36, 2377.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:09.976
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3720000000000001, 0.3720000000000001, NaN, 0.001647958755493164, 0.0003932619094848633, 243.03, 3670.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T19:15:10.835
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5989999999999998, 0.5989999999999998, 0.5989999999999998, 0.0016060352325439453, 3.60417366027832e-5, 242.39, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.044424297370807, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095241,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.6171875,"distances_sum":696.9669944941998}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0406504065040654, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428576,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.6484375,"distances_sum":699.9217502176762}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.044424297370807,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095241,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.6171875,"distances_sum":696.9669944941998}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0656799259944494, conf: {"restarts":2}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9618303571428576,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.4453125,"distances_sum":679.8137250244617}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0656799259944494,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9618303571428576,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.4453125,"distances_sum":679.8137250244617}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0716279069767443, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9567370129870132,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.3984375,"distances_sum":671.7684780061245}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0716279069767443,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9567370129870132,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.3984375,"distances_sum":671.7684780061245}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0716279069767443,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9567370129870132,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.3984375,"distances_sum":671.7684780061245}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8949652777777763, conf: {"restarts":8}, perf: {"precision":0.8949652777777763,"recall":0.8949652777777763,"f1":0.8949652777777763,"seconds":1.683831214904785e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":49.1484375,"distances_sum":294.08671939745545}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8949652777777763,"state":{"restarts":8},"perf":{"precision":0.8949652777777763,"recall":0.8949652777777763,"f1":0.8949652777777763,"seconds":1.683831214904785e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":49.1484375,"distances_sum":294.08671939745545}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.793884484711212, conf: {"restarts":11}, perf: {"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":2.164579927921295e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":55.1875,"distances_sum":294.62827636674047}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8949652777777766, conf: {"restarts":6}, perf: {"precision":0.8949652777777766,"recall":0.8949652777777766,"f1":0.8949652777777766,"seconds":1.782737672328949e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":45.6171875,"distances_sum":295.3667152412236}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6302585874179853, conf: {"restarts":14}, perf: {"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.197176218032837e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":60.7265625,"distances_sum":294.6170673109591}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.793884484711212,"state":{"restarts":11},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":2.164579927921295e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":55.1875,"distances_sum":294.62827636674047}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.793884484711212,"state":{"restarts":11},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":2.164579927921295e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":55.1875,"distances_sum":294.62827636674047}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.793884484711212,"state":{"restarts":11},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":2.164579927921295e-5,"exhaustive_search_seconds":5.241483449935913e-6,"evaluations":55.1875,"distances_sum":294.62827636674047}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666656, conf: {"restarts":4}, perf: {"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":3.6034733057022095e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":88.6328125,"distances_sum":128.2663233197527}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222209, conf: {"restarts":17}, perf: {"precision":0.8706597222222209,"recall":0.8706597222222209,"f1":0.8706597222222209,"seconds":6.383098661899567e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":174.6328125,"distances_sum":127.73162962042261}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8776041666666655, conf: {"restarts":18}, perf: {"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.007775664329529e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":181.890625,"distances_sum":127.36630525731016}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8776041666666655,"state":{"restarts":18},"perf":{"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.007775664329529e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":181.890625,"distances_sum":127.36630525731016}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8776041666666655,"state":{"restarts":18},"perf":{"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.007775664329529e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":181.890625,"distances_sum":127.36630525731016}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8776041666666655,"state":{"restarts":18},"perf":{"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.007775664329529e-5,"exhaustive_search_seconds":2.73045152425766e-5,"evaluations":181.890625,"distances_sum":127.36630525731016}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333321, conf: {"restarts":8}, perf: {"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":7.836520671844482e-5,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":194.7265625,"distances_sum":57.29048126609996}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444433, conf: {"restarts":32}, perf: {"precision":0.8663194444444433,"recall":0.8663194444444433,"f1":0.8663194444444433,"seconds":0.00014682114124298096,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":403.8125,"distances_sum":57.13944015139714}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777765, conf: {"restarts":10}, perf: {"precision":0.8559027777777765,"recall":0.8559027777777765,"f1":0.8559027777777765,"seconds":8.678808808326721e-5,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":211.71875,"distances_sum":57.44643613183871}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222209, conf: {"restarts":25}, perf: {"precision":0.8550347222222209,"recall":0.8550347222222209,"f1":0.8550347222222209,"seconds":0.0001354701817035675,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":337.9375,"distances_sum":57.19407096179202}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777763, conf: {"restarts":28}, perf: {"precision":0.8559027777777763,"recall":0.8559027777777763,"f1":0.8559027777777763,"seconds":0.0001236405223608017,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":356.9375,"distances_sum":57.26060971478}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444433,"state":{"restarts":32},"perf":{"precision":0.8663194444444433,"recall":0.8663194444444433,"f1":0.8663194444444433,"seconds":0.00014682114124298096,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":403.8125,"distances_sum":57.13944015139714}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555541, conf: {"restarts":20}, perf: {"precision":0.8758680555555541,"recall":0.8758680555555541,"f1":0.8758680555555541,"seconds":0.00011515431106090546,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":293.171875,"distances_sum":56.97472360404208}, best_list's length: 12, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666652, conf: {"restarts":26}, perf: {"precision":0.8697916666666652,"recall":0.8697916666666652,"f1":0.8697916666666652,"seconds":0.00016388297080993652,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":344.6875,"distances_sum":57.13481986382976}, best_list's length: 13, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555541,"state":{"restarts":20},"perf":{"precision":0.8758680555555541,"recall":0.8758680555555541,"f1":0.8758680555555541,"seconds":0.00011515431106090546,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":293.171875,"distances_sum":56.97472360404208}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8758680555555541,"state":{"restarts":20},"perf":{"precision":0.8758680555555541,"recall":0.8758680555555541,"f1":0.8758680555555541,"seconds":0.00011515431106090546,"exhaustive_search_seconds":0.0003887973725795746,"evaluations":293.171875,"distances_sum":56.97472360404208}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(20), SatNeighborhood(32), 2020-08-20T19:15:18.289
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(84, 0.020744864f0), Item(7566, 0.03708364f0), Item(7513, 0.040318284f0), Item(7855, 0.047899134f0), Item(6430, 0.048414905f0), Item(3043, 0.050560404f0), Item(1290, 0.05428353f0), Item(3499, 0.05862735f0), Item(7147, 0.059240557f0), Item(8706, 0.05973447f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0766355140186916, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9528388278388281,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.359375,"distances_sum":672.3398248031735}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9444805194805198,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.234375,"distances_sum":656.526277013123}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9444805194805198,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.234375,"distances_sum":656.526277013123}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9444805194805198,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.234375,"distances_sum":656.526277013123}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9444805194805198,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.234375,"distances_sum":656.526277013123}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.8323647742512295, conf: {"bsize":4}, perf: {"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":1.4396384358406067e-5,"exhaustive_search_seconds":5.757436156272888e-6,"evaluations":34.953125,"distances_sum":276.1041298955679}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.163255117324014, conf: {"bsize":2}, perf: {"precision":0.9348958333333325,"recall":0.9348958333333325,"f1":0.9348958333333325,"seconds":1.3042241334915161e-5,"exhaustive_search_seconds":5.757436156272888e-6,"evaluations":31.296875,"distances_sum":278.2929738909006}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.163255117324014,"state":{"bsize":2},"perf":{"precision":0.9348958333333325,"recall":0.9348958333333325,"f1":0.9348958333333325,"seconds":1.3042241334915161e-5,"exhaustive_search_seconds":5.757436156272888e-6,"evaluations":31.296875,"distances_sum":278.2929738909006}}, beam: 3, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.163255117324014,"state":{"bsize":2},"perf":{"precision":0.9348958333333325,"recall":0.9348958333333325,"f1":0.9348958333333325,"seconds":1.3042241334915161e-5,"exhaustive_search_seconds":5.757436156272888e-6,"evaluations":31.296875,"distances_sum":278.2929738909006}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.163255117324014,"state":{"bsize":2},"perf":{"precision":0.9348958333333325,"recall":0.9348958333333325,"f1":0.9348958333333325,"seconds":1.3042241334915161e-5,"exhaustive_search_seconds":5.757436156272888e-6,"evaluations":31.296875,"distances_sum":278.2929738909006}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.37704918032787, conf: {"bsize":4}, perf: {"precision":0.9817708333333329,"recall":0.9817708333333329,"f1":0.9817708333333329,"seconds":1.8931925296783447e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":61.0,"distances_sum":120.3338362807408}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.37704918032787,"state":{"bsize":4},"perf":{"precision":0.9817708333333329,"recall":0.9817708333333329,"f1":0.9817708333333329,"seconds":1.8931925296783447e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":61.0,"distances_sum":120.3338362807408}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.57446532728451, conf: {"bsize":3}, perf: {"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":2.1185725927352905e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":60.2734375,"distances_sum":120.49521488789469}, best_list's length: 12, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.57446532728451,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":2.1185725927352905e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":60.2734375,"distances_sum":120.49521488789469}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.57446532728451,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":2.1185725927352905e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":60.2734375,"distances_sum":120.49521488789469}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.57446532728451,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":2.1185725927352905e-5,"exhaustive_search_seconds":1.5983358025550842e-5,"evaluations":60.2734375,"distances_sum":120.49521488789469}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.82749326145553, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.0164217352867126e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":104.34375,"distances_sum":54.385579073335975}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.82749326145553,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.0164217352867126e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":104.34375,"distances_sum":54.385579073335975}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.21650879566982, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.274584352970123e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":103.921875,"distances_sum":54.385579073335975}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.21650879566982,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.274584352970123e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":103.921875,"distances_sum":54.385579073335975}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.21650879566982,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.274584352970123e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":103.921875,"distances_sum":54.385579073335975}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.21650879566982,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.274584352970123e-5,"exhaustive_search_seconds":0.0002462584525346756,"evaluations":103.921875,"distances_sum":54.385579073335975}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-08-20T19:15:21.831
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6790, 0.022232141f0), Item(5794, 0.027607521f0), Item(7478, 0.043921012f0), Item(971, 0.049862303f0), Item(1542, 0.051506367f0), Item(7503, 0.054279655f0), Item(4703, 0.059445675f0), Item(5286, 0.0639287f0), Item(3807, 0.06510978f0), Item(327, 0.06836307f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
