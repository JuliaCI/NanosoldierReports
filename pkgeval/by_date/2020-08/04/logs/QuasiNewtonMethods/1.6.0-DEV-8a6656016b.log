Julia Version 1.6.0-DEV.580
Commit 8a6656016b (2020-08-04 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed UnPack ────────────── v1.0.1
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.30
  Installed SLEEFPirates ──────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_zHzOeG/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_zHzOeG/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [1.9095836023552692e-14, 3.68594044175552e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.619171794535305e-12, -1.0732859045958776e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [3.4969827034103673e-10, 7.166631732502537e-10, 2.8582691768974655e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.1309466130835517e-10, 6.206550828835589e-10, 1.639184343815714e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-3.2778446623638047e-11, -9.575229498182125e-12, -6.923528417246416e-11, -1.598088328336189e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4775092260777e-10, 8.448819421857934e-11, -3.102915702157816e-10, 1.624078649342664e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2680745342663613e-11, -1.5911383322020356e-11, -2.3771429269459077e-11, -3.1631364194595335e-11, -3.256284131225584e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [8.572698106945609e-12, 3.412914395539701e-11, 2.0052626226174652e-11, 7.196288009936325e-11, 1.3611334281904419e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [7.605915897102022e-12, 7.325695605686633e-12, -6.074363234631619e-12, 1.766142787573699e-11, 1.3371082019375535e-11, -8.271161533457416e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.509259549616672e-11, -7.784028976942636e-11, 8.96904772673679e-11, -7.17376158476668e-11, -1.6823220594375243e-10, 1.9164092535106647e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3814505095410823e-10, 1.3387069230930138e-10, -1.4183254570809822e-10, -2.868254522780944e-10, 2.703657298042117e-10, -2.951908717463425e-10, 3.086420008457935e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [5.276667991438444e-11, -3.682387728076719e-12, 5.3575366365521404e-11, 9.506329057273888e-11, -1.036015717659211e-11, 1.1282708101134631e-10, -6.986178302526014e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [5.4581672515041646e-11, 3.296185546730612e-11, -6.985823031158134e-11, 3.924305325142541e-11, 9.939160605654251e-11, 6.790457085514845e-11, -1.3893786121599305e-10, 7.531530954452137e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.748257342868101e-11, -1.0130851713086031e-10, -2.152833467050641e-11, 1.0335710065589865e-10, -9.463296812839417e-11, -2.036640855962446e-10, -5.4533599858075377e-11, 1.9995849420695322e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [4.723332835965266e-12, -4.302003198120019e-12, 4.50461890011411e-12, 2.900790718740609e-12, 9.241274412374878e-12, -9.047318449972863e-12, 8.871792189779626e-12, 6.829870002889038e-12, 2.5364155220586326e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.5956792271131235e-11, -9.574896431274738e-12, -9.44841982430944e-11, -4.880207349344801e-12, 4.546762966128881e-11, -2.2384649689399794e-11, -1.7883317049438574e-10, -7.547074076796889e-12, 1.9246826354901714e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [6.789391271411205e-11, 8.489875469308572e-11, -2.8436697441236447e-11, -1.0350620360810581e-10, -6.927936002654178e-11, 1.308806396593809e-10, 1.6502754718317192e-10, -6.837530541758952e-11, -2.0232115982565801e-10, -1.317588260718594e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.801758742203674e-11, -4.065281444809443e-11, -2.7579938333133214e-11, -7.794098699775986e-12, -3.8554048842343036e-11, -3.766198464205672e-11, -8.034073406548714e-11, -5.4528159765254713e-11, -1.4014345239843351e-11, -7.775169397206128e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-4.2598702343354944e-11, -7.980982541511139e-11, 4.514810747480169e-11, 3.7295277977023034e-11, 3.5708769274833685e-11, -8.222500458288096e-11, -1.561678564243607e-10, 9.420575430851841e-11, 7.070699581390727e-11, 8.093326009372959e-11, -4.6203041392800515e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1887379969266476e-11, 4.490874339069251e-11, 1.3659096076423793e-10, 3.6714187245934227e-11, -1.151586603853616e-10, 2.418287792238516e-11, 9.672485035139289e-11, 2.8467628254702504e-10, 6.961453635767612e-11, -2.39188668871293e-10, -4.895306382479703e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [4.1339154321917704e-11, 2.108957453117455e-11, 3.1907809727727e-12, 5.5028204215545884e-11, -9.547362900264034e-12, 6.7486016774864765e-12, 8.229172898666093e-11, 4.7152282078855023e-11, 2.1442847497610273e-12, 1.067541610666467e-10, -1.565869656161567e-11, 1.73758785138034e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.697464474010758e-11, -2.8265945140049098e-11, -1.15256693078436e-11, 5.6316062924111066e-11, -1.9697909969806915e-11, -3.615663324296747e-11, -5.509070977183228e-11, -5.415634607430775e-11, -2.548350419573353e-11, 1.1525158605252273e-10, -3.2152613904656846e-11, -7.173450722319785e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-3.7930325547108623e-10, 6.54230003505063e-11, -1.3518963726255606e-11, 6.355449500006216e-11, 3.792313130190905e-10, -1.959425954822791e-10, -7.710467819777023e-10, 1.2646905744873038e-10, -3.914546464756086e-11, 1.2865108978132866e-10, 7.751210784334717e-10, -4.155860100496511e-10, -2.4209523274976164e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4106937840097089e-11, 4.473310610819681e-12, -2.447986258147239e-11, -7.193579065756239e-11, -1.4979795182057387e-11, 1.0883205447953515e-10, 3.097411216401724e-11, 9.476641693595411e-12, -5.154254800743274e-11, -1.4076673160445807e-10, -2.983902014364048e-11, 2.2251245290760835e-10, 4.8971937616215655e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-4.065525693874861e-11, 5.5467408444087596e-11, -3.279887472729115e-11, -7.133404977821556e-12, 9.52409262566789e-11, -6.541966968143242e-11, -9.446443627325607e-12, -8.426237485537058e-11, 1.0667311478584907e-10, -7.174338900739485e-11, -1.092725909757064e-11, 1.9446333432426854e-10, -1.315544340130259e-10, -1.895050782962926e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.305533790078698e-11, -6.874090185959858e-11, -1.3343992577574681e-11, 3.092315292718695e-10, 5.1669779566054785e-12, -5.088873766823099e-11, -1.137867577938323e-11, -8.142386764831144e-11, -1.4471279730088327e-10, -3.143518778614407e-11, 6.021805276645864e-10, 2.418065747633591e-13, -1.0725009769174676e-10, -1.808508898193395e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.4342527165922547e-10, -2.8778357474834593e-10, 4.1316283727610426e-11, 5.992473184335267e-11, -2.1987178744353741e-10, -2.7929158985529057e-10, 1.4414691662523182e-11, 2.960340861335453e-10, -6.006067865271802e-10, 8.015921260096093e-11, 1.1885048500914763e-10, -4.450897428398548e-10, -5.588381979393375e-10, 3.6695535499120524e-11, 1.1350698159162675e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.14721590402678e-11, -4.471367720526587e-11, 2.648392616322326e-11, -5.644995582088086e-11, -1.2666823145934814e-10, -9.422507218914689e-11, -2.955369282631182e-11, 9.002354417475544e-11, -8.29505353294735e-11, 4.056577296296382e-11, -1.205728850095511e-10, -2.607006832633374e-10, -1.9384094329666368e-10, -5.477152065225255e-11, -2.7667867996683526e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-4.083400284571326e-12, 2.2462032234216167e-12, -3.455846719901956e-11, -4.966205224832265e-11, -1.2157985729288612e-10, 2.1255219806448622e-11, -1.6697643268059892e-11, -8.267053708266303e-12, -1.4955370275515634e-11, 6.151523734843067e-12, -7.0510819405456e-11, -1.0110579040656376e-10, -2.478987015663847e-10, 4.80551154424802e-11, -3.0504265779995876e-11, -1.4077072840734672e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.457134578610521e-11, 1.0173795139678532e-10, 3.3886227157609028e-12, 2.352140704431349e-11, 3.979039320256561e-11, -3.15378834159219e-11, -3.1825986290812125e-11, -1.6866397167802916e-11, -7.021772052695496e-11, 1.9802581796568575e-10, 1.0661693750080303e-11, 4.4818593281092944e-11, 7.573031091112625e-11, -6.856792911236198e-11, -6.234901483992417e-11, -3.954714333787024e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.761324419646826e-11, -6.691125431501632e-11, -2.30504504372675e-11, 5.770295352647281e-11, -3.550515437211743e-11, 6.049338807656568e-11, 1.460298548749961e-11, 5.871747532637528e-12, 3.554756489165811e-11, -1.296733831424035e-10, -2.8120727968428127e-11, 1.0909695369321071e-10, -7.828204751092471e-11, 1.266848848047175e-10, 3.414535321155654e-11, 1.677968874957969e-11, 2.779554364451542e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.2585047427555764e-11, 9.258926958466418e-11, -6.105005390111273e-12, -9.55021617343732e-11, -2.501654439157619e-11, -1.4052314867285531e-11, 6.834444121750494e-11, -5.251032941799849e-11, 1.0319767262956248e-10, 1.926567794185985e-10, -1.236333257992328e-11, -1.8397627865596178e-10, -4.978106815656247e-11, -2.3207213928344572e-11, 1.347402189821878e-10, -1.0066181221901616e-10, 4.517497487199762e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-3.2331803900831346e-11, 2.266697940456197e-11, 1.6033618877031586e-11, -3.377209623067756e-11, -5.3818172141006926e-11, -4.409628218127182e-11, 1.4210854715202004e-13, -5.798128643874634e-11, 7.894795928109488e-12, -6.881029079863765e-11, 4.23814316974358e-11, 3.2246649794842597e-11, -6.047728984270861e-11, -1.096526203170356e-10, -9.054390570639725e-11, -1.5267787034645153e-12, -1.1418133105678407e-10, 1.4483969579259792e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.604450485449888e-12, -5.7774229844653746e-11, 1.2368328583534094e-11, -9.383605004131823e-12, -2.6715407663857604e-11, 9.433320791174538e-11, -5.272116077037481e-12, 6.2876370776621116e-12, 9.757972208035426e-12, 1.5338841308221163e-11, -1.1677414590849367e-10, 2.1075585721064272e-11, -1.486832879038502e-11, -5.2946536044373715e-11, 1.8307955151897204e-10, -8.664069461872259e-12, 1.428612783627159e-11, 1.8336887563918935e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.2825074335864883e-11, -1.9498402892281774e-11, 1.8278489832823652e-11, -5.060030172643337e-11, 1.0789014126544316e-10, -7.046518923914391e-11, 5.784550616283468e-11, -2.504785268087062e-11, -8.971279275016286e-11, 2.5197399722287628e-11, -3.8237968347232254e-11, 3.949995885932367e-11, -9.741163431442601e-11, 2.1668622451898045e-10, -1.3658063569010892e-10, 1.2169754093349638e-10, -5.0437543031023324e-11, -1.832671792101337e-10, 3.8613556796462944e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.9320989252946674e-11, -1.576860864105356e-11, -9.171996495638268e-12, 5.176881145985135e-11, -5.842770711694811e-11, -1.1356360296588264e-11, 2.7284396963977997e-11, 9.202416606512998e-12, 2.531308496145357e-12, 5.020517335196928e-11, -3.297973005800259e-11, -2.2297386159664256e-11, 1.0373302217203673e-10, -1.196840404560362e-10, -2.3665402970607374e-11, 5.103850675425292e-11, 1.673194915952081e-11, 3.3504310437137974e-12, -1.4012679905306413e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [9.316081239774121e-11, 1.2566614415732147e-11, -2.3584578734414663e-11, -3.6609049125502224e-11, 3.4460212461340234e-11, -2.7963964477351055e-11, -4.228650762883035e-11, -1.6871726238321116e-11, 5.3965054647164834e-11, -7.106870647533015e-11, 1.8679813251765154e-10, 2.809219523669526e-11, -4.961475674747362e-11, -7.679357150180977e-11, 5.83246784202629e-11, -5.5947579902237976e-11, -8.329492651171222e-11, -3.5644265317102963e-11, 1.0379164194773693e-10, -1.4809176107632993e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [7.344191921276888e-11, 2.0826451674338387e-11, 8.97162344415392e-11, 1.150339823396962e-10, 9.69475610901327e-11, -3.819278227013001e-12, 3.6277647552651615e-12, -3.471023468648582e-11, -1.2648315728114312e-10, 1.0142420237002625e-10, 1.4892664879084805e-10, 4.749667326109375e-11, 1.7887158421103777e-10, 2.353239825225728e-10, 1.9600876477454676e-10, -1.2709500119001405e-11, 1.0921263893237665e-11, -7.659783918256835e-11, -2.488134143163734e-10, 1.997375598250528e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-7.079792307962407e-11, -7.3089090335543e-11, -9.639666842531369e-11, -1.4579559781680018e-10, 1.9466028788883705e-10, -9.396605715750184e-11, -2.43472908501019e-10, -3.785860513971784e-13, -2.3597124254592927e-11, 9.903189379656396e-13, -1.3553713706926374e-10, -1.4227208300354732e-10, -2.0154178326237115e-10, -2.9788549404941023e-10, 3.827689276647561e-10, -1.7896084614221763e-10, -4.812423792799336e-10, 7.73381358953884e-13, -4.9261927870247746e-11, 6.637357330419036e-12, -6.660449969331239e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.4634186064106416e-11, 8.112510663238481e-11, 1.9649504245933258e-10, -3.975153539670373e-12, 3.3186031700438434e-10, 2.0633916797407892e-10, -4.4493742024087624e-11, 1.393876125632687e-10, 1.626587753378317e-11, -1.9104351434151567e-10, -9.840572801067538e-11, 1.7249068839930715e-10, 3.9519520989017565e-10, -2.8027358212057152e-11, 6.440636912685704e-10, 3.932059122746523e-10, -1.044646591452647e-10, 2.8956859132733825e-10, 2.6549873410885994e-11, -3.9505043680776453e-10, -4.016942334317264e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [5.511902045896022e-11, -1.250849424039302e-10, -5.564382288270053e-11, -1.839672858494623e-11, 4.276401455172163e-11, 3.9031000653722003e-11, 2.1397994487415417e-11, 9.55886481079915e-11, -9.452705285184493e-11, -6.720701772877646e-11, -3.200617548770879e-11, 1.0612066780879559e-10, -2.6377333650629e-10, -1.0558831586848783e-10, -2.956479505655807e-11, 8.131717521564497e-11, 7.83946241256217e-11, 3.79345443946022e-11, 1.9111090487911042e-10, -1.9689849750648136e-10, -1.4222167887822934e-10, -6.404676788918096e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3886004285600393e-11, 8.569389642332226e-11, -4.52022863584034e-11, 1.6315615525286375e-11, -8.826728237210091e-11, 2.0118107180167044e-10, -1.3654744002167263e-11, 1.4512835377900046e-11, 6.572697941464867e-11, 1.7699175458574246e-11, -9.512823861967945e-11, 4.725309032949099e-11, 1.7667423080069966e-10, -8.957934394260292e-11, 3.489697419922777e-11, -1.8324974870864708e-10, 4.151832211363171e-10, -2.4728108449778574e-11, 3.467848230798154e-11, 1.1967027369053085e-10, 3.8510750144382655e-11, -1.9226542580241812e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-4.791211871690848e-11, 3.5345948390386184e-11, -1.935740456815438e-11, -4.410904974605501e-11, -1.185911369105952e-10, 5.801581437481218e-12, 5.856160001371791e-11, -1.127897775177189e-11, -2.4305335522001315e-11, -9.837952674729422e-11, -7.661205003728355e-12, -9.848910575982472e-11, 7.064882012741691e-11, -3.88251653049565e-11, -8.266909379273102e-11, -2.367800400193687e-10, 1.2511547353710739e-11, 1.1696132951044547e-10, -2.4169000134577345e-11, -4.634148620397127e-11, -2.0787294108259857e-10, -1.598743359920718e-11, 1.6917578449238135e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.5271787147148643e-11, -3.0343505486030153e-12, 5.205791353546374e-11, 1.0161294028421253e-10, 9.076250861994595e-11, 1.1041612069107032e-11, -2.7981950090349983e-11, -2.6096347305326617e-11, -5.2065574074333654e-11, 3.110334212408361e-11, 7.527156675735114e-11, 1.1221201745570397e-10, 5.323963492287476e-12, 1.0087419788362695e-10, 2.0017876245503885e-10, 1.8120105416130627e-10, 2.414890509783163e-11, -5.516831436125358e-11, -5.11416464732406e-11, -1.0327139143839759e-10, 6.242228955954943e-11, 1.5534573627462578e-10, -4.801048447689027e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.148414696672262e-11, 8.573364240760384e-12, 2.496669537777052e-11, 1.95729654706156e-10, 1.716360387149507e-11, 3.2897462531877864e-11, -1.9298029840797426e-10, 8.757772285150622e-11, -6.476952307821193e-11, 4.173839052157291e-11, -4.811651077574197e-11, -3.542388604671487e-12, 1.5023093880017768e-11, 1.3564482870265238e-11, 4.976796752487189e-11, 3.835740614022143e-10, 3.1232794128754904e-11, 5.1003423706674766e-11, -3.816494897890266e-10, 1.9395063333149665e-10, -1.1855272319394317e-10, 8.385203642546912e-11, -9.083023222444808e-11, -2.758682171588589e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.608979947169246e-11, 9.739542505826648e-12, 9.925615884753825e-12, -3.6929459490409045e-11, -2.7639113220345735e-11, 4.361400129937465e-12, 6.392020246437369e-11, -2.342248617281939e-11, 1.3618217664657095e-11, -4.8166914901059954e-11, 1.729949516970919e-12, 8.143108409797151e-11, 1.1253198373140094e-10, 1.7434054200293758e-11, 1.6300072402941623e-11, -7.655553968533013e-11, -5.466171959511712e-11, 9.526601729703543e-12, 1.2542300531492856e-10, -4.79526418573073e-11, 2.8520519279595646e-11, -9.373479770147242e-11, 5.057509966377438e-12, 1.585536146819777e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
