Julia Version 1.6.0-DEV.572
Commit 1888e3161c (2020-08-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.22
  Installed VectorizedRNG ─────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed SLEEFPirates ──────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_1P4eU9/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_1P4eU9/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [3.29953842026498e-11, 6.648992467717108e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.89770421599178e-12, -3.812838933470175e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [2.5038859874371155e-11, 5.175215811448197e-11, 4.0811354296010904e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.700817430285497e-12, 8.328004952318224e-12, -5.1096904485348205e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8690383402363295e-12, 1.159494722458021e-11, -5.732636587651996e-12, 2.2891022410931328e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.261258426818131e-12, -1.0683232076758031e-11, 1.900968271684178e-11, -1.992050968624426e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [3.805200599060754e-11, -1.854938425083219e-11, 7.793210521356286e-11, -4.086631033572985e-11, -7.536749002667875e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1017187162565278e-11, -2.580213820380095e-11, 1.918176728565868e-11, -5.460554231007109e-11, 3.106404022901188e-13]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6986412276764895e-12, -3.855471497615781e-12, 3.5123015607041452e-12, -3.5553782140596013e-12, -7.395639656238018e-12, 6.895817250551772e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0931477945064216e-11, 8.658185279841746e-12, -3.218636468460545e-11, 2.6187274571043417e-11, 2.2009283284774028e-11, -6.265910013070197e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.8096946163836947e-10, -3.834510486910858e-11, -1.0169320940889293e-10, 3.4195424269967134e-10, -9.682421531209684e-11, -2.2070401062279643e-10, 7.866596263284009e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.7676083647065752e-11, 2.4421797917284493e-11, 7.454481476543151e-12, -5.699152261229301e-11, 4.819411536516327e-11, 1.5021983656993143e-11, -4.5441428397907657e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-8.801515072320854e-12, 3.5353941996163485e-12, 2.7815083569748822e-11, -1.8551826741486366e-12, -1.5780599049719513e-11, 6.928235762870827e-12, 5.4954929495920624e-11, -6.892264536872972e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.164091376741453e-12, 3.803179993155936e-12, 6.647349337640662e-12, 1.0486056467584604e-11, 1.1230127938688383e-11, 9.096945419173608e-12, 1.326538878743122e-11, 2.154987299718414e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8597379192186736e-10, -8.497980097388336e-11, -5.813582948377416e-11, 2.538280696740003e-11, -3.585806096495503e-10, -1.6271017866387183e-10, -1.1469436511646336e-10, 6.826050835684327e-11, -1.7893464487883648e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3272716259393746e-11, -4.80382400525059e-12, -9.057643524101877e-12, -3.1826763446929363e-12, 2.694866552133135e-11, -1.1539880162558802e-11, -1.9669599282678973e-11, -7.453704320425913e-12, 1.528177584475543e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [2.6113999851418157e-11, 9.820233515256405e-11, -6.717160161429092e-11, 4.137024056660721e-11, -8.237777127106938e-11, 4.994960001170057e-11, 1.933480042737301e-10, -1.367560509279997e-10, 8.504685844457072e-11, -1.6710599570757267e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.828670879282072e-13, -1.1128875598842569e-11, -3.75743880454138e-11, 6.68121113989173e-11, -3.602007581093858e-11, 5.468958619303521e-13, -1.9394819084084247e-11, -7.829714654405961e-11, 1.375930480662646e-10, -6.932265872450216e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [4.309885781594858e-12, -5.296540983579234e-12, -1.7926549134017478e-11, 4.96180874165475e-12, -1.1844525360515945e-11, 9.462652883485134e-12, -1.2105649815907782e-11, -3.8189451601056135e-11, 1.0750955681260166e-11, -2.3469781673668422e-11, -2.1690427232101683e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.310263174682859e-11, 3.304201356968406e-11, -3.050837360518699e-11, -3.561717587530211e-11, -1.1020073742429304e-11, 6.459566215255563e-11, 6.158362708674758e-11, -6.607892011345484e-11, -7.066347507134196e-11, -2.0216051055399475e-11, 1.864064458345638e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-6.268463526026835e-11, -1.1052070369999001e-10, -7.734446416662877e-11, -5.180245121749749e-11, 1.1433298752194787e-11, 4.348876814219693e-11, -1.2137923999233635e-10, -2.2205781657902435e-10, -1.600878318797072e-10, -1.1390366427832532e-10, 2.6290525312333557e-11, 8.980372001587966e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.2423952411875234e-11, -2.3624435740998706e-12, 2.8561153442296927e-11, -8.280087726575402e-11, 6.253220163898732e-12, -2.5597080011152684e-11, -5.4672932847665834e-11, -3.535727266523736e-12, 5.7127635955112055e-11, -1.6754864162749072e-10, 1.0138334616272004e-11, -5.0666248974096106e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5982948298187694e-10, 1.5956969079411465e-10, -4.6998294145339514e-11, -1.5246681694947029e-10, -6.272993235967306e-11, 3.727618214099948e-11, -3.2024927154594707e-10, 3.1994162874582344e-10, -1.0604672695535555e-10, -3.111391144727804e-10, -1.2460665832492168e-10, 7.717404493234881e-11, 1.1979639502612827e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7877122004961166e-10, -4.9949044900188255e-11, 1.1372836006273701e-10, 6.810663144563023e-11, 3.902989043069738e-11, -1.341659006115492e-10, 3.6527092461824395e-10, -8.711265042649075e-11, 2.2174040381628402e-10, 1.3637735385430005e-10, 7.292877413078713e-11, -2.6556978838243595e-10, 1.3298251388960125e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.700196119093562e-11, 1.2476020216922734e-11, 1.8215451369485436e-10, 5.042100070795641e-11, -1.5244761009114427e-10, -1.5003742692698552e-10, -3.3300384671974825e-10, -1.786683023752289e-10, 3.9900083237398576e-11, 3.707447682188558e-10, 1.2286838213526607e-10, -3.1921409959778657e-10, -2.9564295456196987e-10, -6.464583313103844e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.2701174273720426e-11, -4.523381669230275e-12, -4.91036100669362e-11, -1.5594192603884949e-12, 7.613687458274399e-12, 4.555467114641942e-12, 9.260592293003356e-12, 4.541544917913143e-11, -8.844036614163997e-12, -9.017186997084536e-11, -6.513678485475793e-13, 1.3303136370268476e-11, 8.081313396246514e-12, 1.9027224240630858e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-7.929379375326562e-11, 6.841704980331542e-11, 4.608025072627697e-11, 4.6814774279368976e-11, 5.6556981320454724e-12, 2.2875035199376725e-12, 3.634625933557345e-11, -1.5464207692161835e-10, 1.3618950411853348e-10, 8.827316655413142e-11, 9.382383758804735e-11, 3.86513043793002e-12, 7.567280135845067e-13, 7.262790369111372e-11, -1.9984014443252818e-15]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6814439557654168e-11, -5.302791539207874e-11, 3.549405214187118e-11, 2.150162270453393e-10, 3.102562651235985e-11, 6.633182891846445e-11, 1.4244383450545683e-11, -4.6246340090760896e-11, -1.1468859195673531e-10, 7.836864490684547e-11, 4.434406175590766e-10, 5.6584736896070353e-11, 1.3531886722262243e-10, 3.7595482282881676e-11, -4.747313653297169e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.513167369182611e-11, 3.290168137937144e-11, 1.3532441833774556e-10, -7.239764343580646e-12, -7.370459798039519e-11, -9.323775085334773e-11, -1.0380851733771124e-10, 4.2046144343999003e-11, 2.4633184381173123e-11, 6.707678856798793e-11, 2.67334820946985e-10, -1.6428192139983366e-11, -1.3856171765525005e-10, -1.896164336656625e-10, -2.1646029413346923e-10, 7.863198980828656e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.2010617207211e-11, -6.820322084877262e-12, 2.099698193092081e-11, -3.8971048610392245e-12, 7.66320340517268e-12, 7.76583242156903e-11, -4.601075076493544e-11, -8.447653687682077e-11, 7.126499390608387e-11, -8.955058916626513e-12, 4.455791291491096e-11, -1.0471623568264476e-12, 1.3393286479868038e-11, 1.639353097715457e-10, -7.578948579833877e-11, -1.659662407504925e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [2.3358293077535563e-10, 9.903500242103291e-11, 1.9257484495938115e-10, -3.8106906519175254e-10, -6.708000821475935e-11, -3.5845959533986615e-10, 3.0402169670651347e-10, -1.477832300977866e-10, 4.783280438402926e-10, 2.0365442665593037e-10, 3.743887422302805e-10, -7.500010612560004e-10, -1.1222101026220344e-10, -7.249690847643819e-10, 5.983553652555429e-10, -2.9310975868668265e-10, -1.469002697263022e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.603506299436731e-11, -1.8106627308611678e-11, -6.697864485261107e-12, 5.2304827136140375e-12, 4.967071198791473e-11, 7.81514852832288e-11, -4.077926885059924e-11, -1.232690616248533e-10, -4.983280454951e-11, -3.56183971206292e-11, -1.2567391571849384e-11, 1.5224488336684772e-11, 1.0462719579606983e-10, 1.5548495824191377e-10, -8.601563905585863e-11, -2.5276936099771774e-10, 5.181632900530531e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [3.511857471494295e-12, 5.280220705117245e-13, 6.956657472301231e-12, 5.541567205114006e-12, -1.5512702233877462e-11, -2.964295475749168e-12, 5.197842156690058e-12, -2.9912738952475593e-12, -6.174727396057733e-12, 7.736922214007791e-12, 8.071321389024888e-13, 1.4601875264474984e-11, 1.1779688335877836e-11, -3.1798119692894034e-11, -6.175615574477433e-12, 9.974465697837331e-12, -4.861999691740948e-12, -1.182753894823918e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.856914870288165e-11, -3.321276587087141e-11, -6.946943020835761e-11, 3.891997835125949e-12, 5.3822502010802964e-11, 2.4460655723146374e-11, 3.431743778037344e-11, -4.2511771880526794e-11, 3.907985046680551e-12, 9.943601497752752e-11, -6.50370868271466e-11, -1.3362844164532817e-10, 4.5496939549138915e-12, 1.0480238898935568e-10, 5.058287122494676e-11, 7.16582349014061e-11, -8.753142655137935e-11, 3.789857316860434e-12]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [6.022737863986549e-11, 2.8278712704832287e-11, -8.213429936176908e-12, -6.547717923410801e-11, -3.977329576798638e-11, -1.857269893434932e-11, -1.4887979737920887e-11, 2.4730439918130287e-11, -1.9542034657149543e-11, 1.2266654358938922e-10, 5.964562177496191e-11, -2.6383450979494683e-11, -1.3058343295568875e-10, -8.331191292398898e-11, -3.830125105963589e-11, -2.988798097902645e-11, 4.8128168117500536e-11, -3.917066671021985e-11, 1.7119639039719914e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.404221597477999e-11, 2.68362665423183e-10, 3.2729374765949615e-12, 1.928412984852912e-11, -3.210953725130139e-11, -5.071887354546334e-10, 3.2512392778016874e-10, -3.5972669287787085e-11, -1.8743229190931743e-10, -1.316939890472213e-10, 5.353055776424753e-10, 5.825340210208196e-12, 3.675082460574686e-11, -5.97315530370679e-11, -1.0274455730652221e-9, 6.469607072290273e-10, -8.025924369547965e-11, -3.7873426617096584e-10, -9.82303127727846e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-8.829381670238945e-12, 5.622169396701793e-13, 3.651567936913125e-11, -1.610311883837312e-11, -9.230727293640939e-12, -1.5432100042289676e-14, -1.3867906822895293e-11, -4.723776925175116e-12, -1.0631162616903111e-11, -1.4963807970502785e-11, -1.935485105519774e-11, 1.4082068844345486e-12, 7.250555711380002e-11, -3.205402610007013e-11, -1.874222999020958e-11, -9.885425811262394e-13, -2.72067923745567e-11, -8.947953489268912e-12, -1.9061530132091775e-11, -3.0513480631100265e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.146601702473049e-10, -2.2795432208511102e-11, -3.28232996338329e-11, 1.5330625657838937e-11, -4.365063865918728e-12, 9.158496183658826e-11, 1.751088163359782e-11, -4.422384680680125e-11, -1.4944712134479232e-12, 1.545075178910338e-11, -2.412248178984555e-10, -4.805467135327035e-11, -6.590905599068719e-11, 3.163602713129876e-11, -8.178568933203678e-12, 1.823792228350385e-10, 3.08317815722603e-11, -8.813427765375081e-11, -6.570410882034139e-12, 2.920041985987609e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [1.3428591572051118e-11, -1.2121414982857459e-11, -1.945810179648788e-11, 1.8718582239785064e-11, -5.666966895745418e-11, 7.004863356030455e-11, -2.1336599154153646e-11, 3.8465231000373024e-11, 9.85966863709109e-12, 2.4838575640728777e-11, 2.7214008824216762e-11, -3.081279675853921e-11, -3.739364373700482e-11, 3.814815130454008e-11, -1.1283407541640145e-10, 1.3384204855526605e-10, -4.493050376197516e-11, 7.729683559887235e-11, 2.4876989357380808e-11, 4.7982062767459865e-11, -2.2426505097428162e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.902489939150882e-11, 9.2166274612282e-12, 6.940603647365151e-11, -1.721567333134999e-11, -4.375877438178577e-11, 5.6530113923258796e-11, 1.1159095869572866e-10, -5.764322352774798e-11, -3.662692371619869e-11, -1.971388607913127e-10, -1.8047552341471373e-10, 2.227995565817764e-11, 1.388775761057559e-10, -2.524336295550711e-11, -8.592337952251228e-11, 1.0123324400979072e-10, 2.1928436844120824e-10, -1.2876211208379118e-10, -7.919453981486413e-11, -3.924310876257664e-10, 1.745714683920596e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.2592593634508376e-11, 2.6842972289387035e-11, 6.289591070185452e-11, 3.750022514736884e-11, -2.277067423506196e-13, -5.698519434105265e-11, -1.0007772388576086e-11, 2.788347330806573e-11, 2.8700819498794772e-11, -3.153011185474952e-11, -2.8211433189540003e-11, 2.9090063691228352e-11, 5.558087323720429e-11, 1.2343326361019535e-10, 7.316991457173572e-11, -1.2601031329495527e-13, -1.1578327185901571e-10, -1.882349831561214e-11, 5.4220627987433545e-11, 5.695710569852963e-11, -6.318634504509646e-11, -5.7725602076175164e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.4546809029857286e-11, -1.500333191017944e-11, -3.291222849810538e-11, 2.974354096352272e-11, 3.714806240395774e-12, -4.435807277047843e-11, 1.8780088595349298e-11, -1.465949583945303e-11, -1.2577672237057413e-10, -5.67172975252106e-11, -1.2624679079920043e-11, 4.14810408244648e-11, -2.932998288684985e-11, -6.72326638806453e-11, 5.846612083360014e-11, 1.5663026431411708e-12, -9.138023671084738e-11, 3.646993818051669e-11, -2.8258728690389034e-11, -2.441312707546217e-10, -1.1713563452531162e-10, -2.6108226691690106e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.821842676719143e-11, 1.516786696242889e-11, 5.441513906134787e-11, 4.076738946423575e-13, 4.352807003726866e-11, 2.7790436618602143e-11, -4.905564843227239e-11, 2.719091618530456e-11, 2.8462343593105288e-11, -3.932243419768611e-11, 3.905609169407853e-11, -4.243216888966117e-11, 2.81927814427263e-11, 1.0801715077946028e-10, 2.0816681711721685e-12, 8.850431498785838e-11, 5.406564085319587e-11, -1.0217937607137628e-10, 5.784328571678543e-11, 5.7154947441517834e-11, -7.660616585525304e-11, 7.592637629727506e-11, 1.834377094667161e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1616640982481385e-10, 6.746314618055749e-11, -1.080505684925015e-10, -2.8394731010905616e-11, -6.399547558544327e-12, 1.0245115866780452e-10, -2.754585448627722e-11, 3.665556747023402e-11, 1.1948309008857905e-10, 3.8511638322802355e-11, -1.2819967309951608e-11, -2.3286073069783697e-10, 1.330371368624128e-10, -2.160626122460485e-10, -5.913369793830725e-11, -1.4838907880232455e-11, 1.9987700383694573e-10, -6.191280821354894e-11, 6.982947553524355e-11, 2.3665869264277717e-10, 7.677702917874285e-11, -2.6920354834203408e-11, 9.037215420448774e-14]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5253354135325026e-11, -3.458622277463519e-11, -9.734546502215835e-12, -2.4022783762234212e-11, -1.4760415112391456e-12, 2.4729107650500737e-12, 1.3631096251742747e-11, 4.15112388907346e-12, 2.3878676813637867e-12, 1.6258772106425567e-11, 5.24869037121789e-12, 6.850076061937216e-12, -3.0539459849876494e-11, -6.941414110173127e-11, -2.3638202506504058e-11, -4.7738812902764494e-11, -3.853140029264068e-12, 2.9769520182298947e-12, 2.6437962930003778e-11, 9.573453141342725e-12, 7.168932114609561e-12, 3.458544561851795e-11, 1.1223244555935707e-11, 1.4570122885970704e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5587087176527348e-11, 2.44591014109119e-11, -1.920075209937977e-11, 1.0161427255184208e-11, 4.212630244637694e-12, -7.340461571914147e-12, -2.545874622228439e-11, -4.5419223937415154e-13, -5.770939282001564e-12, -3.099021039787431e-11, -1.2929657344784573e-12, 2.8337332480532496e-12, 2.8571589538728404e-11, 4.9426907011707044e-11, -4.1115000293245885e-11, 2.0306201164999038e-11, 9.300782366494786e-12, -1.4289458505345465e-11, -5.07868191945704e-11, -1.1866063687193673e-12, -1.3625101047409771e-11, -6.198264124179786e-11, -2.14661621811274e-12, 5.859757123971576e-12]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
