Julia Version 1.6.0-DEV.572
Commit 1888e3161c (2020-08-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed PrettyPrint ────────── v0.2.0
  Installed CanonicalTraits ────── v0.1.0
  Installed JuliaVariables ─────── v0.2.3
  Installed OrderedCollections ─── v1.3.0
  Installed NameResolution ─────── v0.1.4
  Installed DataStructures ─────── v0.17.20
  Installed GeneralizedGenerated ─ v0.2.5
  Installed MLStyle ────────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6b9d7cbe] + GeneralizedGenerated v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [a603d957] + CanonicalTraits v0.1.0
  [864edb3b] + DataStructures v0.17.20
  [6b9d7cbe] + GeneralizedGenerated v0.2.5
  [b14d175d] + JuliaVariables v0.2.3
  [d8e11817] + MLStyle v0.4.3
  [71a1bf82] + NameResolution v0.1.4
  [bac558e1] + OrderedCollections v1.3.0
  [8162dcfd] + PrettyPrint v0.2.0
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [d6f4376e] + Markdown
    Testing GeneralizedGenerated
Status `/tmp/jl_rg3zfn/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [a603d957] CanonicalTraits v0.1.0
  [864edb3b] DataStructures v0.17.20
  [6b9d7cbe] GeneralizedGenerated v0.2.5
  [b14d175d] JuliaVariables v0.2.3
  [d8e11817] MLStyle v0.4.3
  [8dfed614] Test
Status `/tmp/jl_rg3zfn/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [a603d957] CanonicalTraits v0.1.0
  [864edb3b] DataStructures v0.17.20
  [6b9d7cbe] GeneralizedGenerated v0.2.5
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.3
  [d8e11817] MLStyle v0.4.3
  [71a1bf82] NameResolution v0.1.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [8162dcfd] PrettyPrint v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s10#1 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s12#2 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s14#3 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary: | Pass  Total
no kwargs     |    3      3
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s28#7 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary: | Pass  Total
kwargs        |    1      1
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s28#9 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary: | Pass  Total
namedtuple    |    1      1
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = mk_function(mod::Module, ex::Expr) at GeneralizedGenerated.jl:22
└ @ GeneralizedGenerated ~/.julia/packages/GeneralizedGenerated/IobaZ/src/GeneralizedGenerated.jl:22
Test Summary: | Pass  Total
mk funcs      |    2      2
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s28#11 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
WARNING: Method definition f5(Any) in module Main at /home/pkgeval/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121 overwritten on the same line.
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s26#12 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
WARNING: Method definition f5(Any) in module Main at /home/pkgeval/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121 overwritten on the same line.
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s24#13 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
WARNING: Method definition f5(Any) in module Main at /home/pkgeval/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121 overwritten on the same line.
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s22#14 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary:                | Pass  Total
type encoding more datatypes |    5      5
Test Summary: | Pass  Total
runtime eval  |    6      6
Test Summary:  | Pass  Total
self recursive |    1      1
Test Summary:  | Pass  Total
self recursive |    1      1
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s79#18 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s77#19 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s28#20 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary:                                             | Pass  Total
support where clauses and return type annotations for @gg |    3      3
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s79#24 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary:             | Pass  Total
support default arguments |    1      1
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s79#26 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s77#27 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary:                 | Pass  Total
specifying evaluation modules |    3      3
┌ Warning: `solve(ex)` is deprecated in JuliaVariables 0.2.x. Please use `solve!(ex)` instead.  `solve(ex)`, which currently mutates `ex` in-place, will be re-introduced in 0.3 as a non-mutating variant.
│   caller = #s79#34 at closure_conv.jl:121 [inlined]
└ @ Core ~/.julia/packages/GeneralizedGenerated/IobaZ/src/closure_conv.jl:121
Test Summary:                       | Pass  Total
test free variables of let bindings |    1      1
function = (x;) -> begin
    begin
        (GeneralizedGenerated).:+(x, 1)
    end
end
function = (x::(GeneralizedGenerated).Int=2;) -> begin
    begin
        (GeneralizedGenerated).:+(x, 1)
    end
end
Test Summary:  | Pass  Total
show something |    2      2
Test Summary:          | Pass  Total
omit func argname: #34 |    2      2
Test Summary:                              |
support for 1-d arrays' type encoding: #42 | No tests
    Testing GeneralizedGenerated tests passed 
