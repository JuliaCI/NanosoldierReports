Julia Version 1.6.0-DEV.580
Commit 8a6656016b (2020-08-04 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_e9ECqI/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_e9ECqI/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21714038477593764
curgen: 20 fitness: 0.217231422571708
curgen: 30 fitness: 0.2172331676607659
curgen: 40 fitness: 0.2172331676607659
curgen: 50 fitness: 0.2172331676607659
CoordinateCreature{Vector{Float64}}([0.22265017504683002], -0.2172331676607659) 0.22265017504683002 -0.2172331676607659
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2575211605622827
curgen: 100 fitness: 3.25766078837719
curgen: 150 fitness: 3.257752666339589
curgen: 200 fitness: 3.2580269739335654
curgen: 250 fitness: 3.2582953885821846
curgen: 300 fitness: 3.2582992832267657
curgen: 350 fitness: 3.258415895442776
curgen: 400 fitness: 3.2584187100571604
curgen: 450 fitness: 3.2584590989408504
curgen: 500 fitness: 3.2584590989408504
CoordinateCreature{Vector{Float64}}([-0.22271946741822804, -0.22273256515999998, 0.22283284030513323, -0.22294368499533765, -0.22216582012590733, 0.2225051511134161, 0.22234124859622353, 0.22261020213771335, -0.2225846547566812, 0.22301457090012153, -0.22258031708332054, -0.22263258988825965, 0.22284731618429526, -0.2221650327267059, -0.2228040419880782], -3.2584590989408504) [-0.22271946741822804, -0.22273256515999998, 0.22283284030513323, -0.22294368499533765, -0.22216582012590733, 0.2225051511134161, 0.22234124859622353, 0.22261020213771335, -0.2225846547566812, 0.22301457090012153, -0.22258031708332054, -0.22263258988825965, 0.22284731618429526, -0.2221650327267059, -0.2228040419880782] -3.2584590989408504
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018966891330194358
curgen: 100 fitness: -0.0018966891330194358
curgen: 150 fitness: -0.0018222916784225163
curgen: 200 fitness: -0.0014643762491175494
curgen: 250 fitness: -0.0014643762491175494
curgen: 300 fitness: -0.0007162976105803409
curgen: 350 fitness: -0.0007162976105803409
curgen: 400 fitness: -0.0007162976105803409
curgen: 450 fitness: -0.0006839224001282673
curgen: 500 fitness: -0.0006839224001282673
CoordinateCreature{Vector{Float64}}([-0.00017451117627461114, 0.0008212600509343872, -0.0008132605515973635, -0.00037660928125742466, 8.984742940269558e-5, 0.00018911897523760904, -0.00016374201493854642, 0.0004653588523384055, -0.0007898843271717595, 0.0007898596293709356, -0.0002501476466351759, -0.0005432969152312896, 6.106955533780652e-6, -0.00015888251176008803, 0.00014544010268475321], 0.0006839224001282673) [-0.00017451117627461114, 0.0008212600509343872, -0.0008132605515973635, -0.00037660928125742466, 8.984742940269558e-5, 0.00018911897523760904, -0.00016374201493854642, 0.0004653588523384055, -0.0007898843271717595, 0.0007898596293709356, -0.0002501476466351759, -0.0005432969152312896, 6.106955533780652e-6, -0.00015888251176008803, 0.00014544010268475321] 0.0006839224001282673
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
