Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed DataStructures ───── v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_M9J3xy/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_M9J3xy/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(18, 0.01602757f0), Item(17, 0.024284363f0), Item(12, 0.048808217f0), Item(46, 0.074f0)])
Vsorted = Item[Item(18, 0.01602757f0), Item(17, 0.024284363f0), Item(12, 0.048808217f0), Item(46, 0.074f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00410306453704834, 0.004138636589050293, 301.0, 50.490287186577916))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0043851931889851885, 0.006403660774230957, 301.0, 73.5462976694107))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0059214353561401365, 0.010001627604166667, 301.0, 41.06521546840668))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.006596183776855469, 0.006722466150919596, 301.0, 9.324878264626022))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003607765833536784, 0.004981827735900879, 301.0, 45.718172365799546))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015362103780110678, 0.0001311063766479492, 301.0, 182.1296460852027))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.706946055094401e-5, 0.010454265276590984, 300.0, 23.16147489985451)
p = PerformanceResult(1.0, 1.0, 1.0, 5.722840627034505e-5, 3.079573313395182e-5, 300.0, 23.16147489985451)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0038091262181599935, 0.003447930018107096, 300.0, 1.0655123495598673)
p = PerformanceResult(1.0, 1.0, 1.0, 4.9225489298502605e-5, 2.0464261372884113e-5, 300.0, 1.0655123495598673)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.706946055094401e-5, 0.010454265276590984, 300.0, 23.16147489985451), PerformanceResult(1.0, 1.0, 1.0, 5.722840627034505e-5, 3.079573313395182e-5, 300.0, 23.16147489985451), PerformanceResult(1.0, 1.0, 1.0, 0.0038091262181599935, 0.003447930018107096, 300.0, 1.0655123495598673), PerformanceResult(1.0, 1.0, 1.0, 4.9225489298502605e-5, 2.0464261372884113e-5, 300.0, 1.0655123495598673))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009337147076924643, 0.00414129892985026, 347.1, 28562.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.011898684501647949, 0.004363703727722168, 305.1333333333333, 6945.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8403600056966147e-5, 1.2040138244628906e-5, 88.56666666666666, 50.59672905690968))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.529852549235026e-5, 1.71661376953125e-5, 81.1, 73.6922025680542))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2363662719726562e-5, 1.419385274251302e-5, 81.2, 41.16036891937256))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.528463999430338e-5, 0.0002006689707438151, 88.03333333333333, 45.80284798331559))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8000000000000002, 0.8000000000000002, 0.8000000000000002, 5.451043446858724e-5, 0.000149234135945638, 68.16666666666667, 191.48472856730223))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-13T23:29:31.536
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9109999999999999, 0.9109999999999999, 0.9109999999999999, 2.2945404052734374e-5, 2.605915069580078e-5, 153.03, 50.98803957446944))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.206087112426758e-5, 2.140045166015625e-5, 156.21, 0.0))
*** advance 1 from 1000; 2020-08-13T23:29:32.208
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.917, 0.917, 0.917, 2.2737979888916017e-5, 2.953052520751953e-5, 153.08, 75.40428505837917))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.173900604248047e-5, 2.2449493408203124e-5, 156.56, 0.0))
*** advance 1 from 1000; 2020-08-13T23:29:32.887
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8850000000000001, 0.8850000000000001, 0.8850000000000001, 2.3758411407470704e-5, 2.987861633300781e-5, 152.3, 41.78372470103204))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6812553405761717e-5, 8.851051330566406e-5, 155.43, 0.0))
*** advance 1 from 1000; 2020-08-13T23:29:33.552
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8960000000000001, 0.8960000000000001, 0.8960000000000001, 0.00011634111404418946, 0.0005701518058776855, 152.48, 46.371917341602966))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010194063186645508, 0.0005454707145690918, 155.61, 0.0))
*** advance 1 from 1000; 2020-08-13T23:29:34.181
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8880000000000002, 0.8880000000000002, 0.8880000000000002, 5.814313888549805e-5, 0.0003843808174133301, 152.64, 200.77699958253652))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00016510963439941406, 0.0008051705360412598, 156.15, 0.0))
*** advance 1 from 1000; 2020-08-13T23:29:35.228
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9109999999999999, 0.9109999999999999, 0.9109999999999999, 3.728389739990234e-5, 8.257150650024414e-5, 153.03, 50.99806656932924))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.3111572265625e-5, 7.801055908203125e-5, 156.21, 0.013043430430116132))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:37.107
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7710000000000002, 0.7710000000000002, 0.7710000000000002, 0.0014456653594970704, 8.530855178833008e-5, 203.09, 188.916669100523))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:38.045
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7730000000000002, 0.7730000000000002, 0.7730000000000002, 0.001465606689453125, 7.60793685913086e-5, 207.0, 106.94682744890451))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:38.860
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6519999999999997, 0.6519999999999997, 0.6519999999999997, 0.0014708495140075683, 7.474899291992187e-5, 268.18, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:39.694
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.954, 0.954, 0.954, 0.001625664234161377, 2.4149417877197267e-5, 223.55, 606.6000204831362))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:40.731
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.603, 0.603, 0.603, 0.0017285013198852538, 0.0004356098175048828, 256.84, 2327.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:41.750
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3990000000000001, 0.3990000000000001, NaN, 0.0021373987197875976, 0.0005931711196899414, 251.93, 3676.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-13T23:29:42.834
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6079999999999998, 0.6079999999999998, 0.6079999999999998, 0.0019073867797851562, 3.908872604370117e-5, 247.47, 2351.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0676552363299354,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9610863095238098,"seconds":0.0024751313030719757,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":8.4296875,"distances_sum":633.587416484952}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0676552363299354,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9610863095238098,"seconds":0.0024751313030719757,"exhaustive_search_seconds":2.1550804376602173e-6,"evaluations":8.4296875,"distances_sum":633.587416484952}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.992766158200975,"state":{"restarts":8},"perf":{"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.0580366253852844e-5,"exhaustive_search_seconds":6.984919309616089e-6,"evaluations":49.6796875,"distances_sum":292.7024943679571}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.992766158200975,"state":{"restarts":8},"perf":{"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.0580366253852844e-5,"exhaustive_search_seconds":6.984919309616089e-6,"evaluations":49.6796875,"distances_sum":292.7024943679571}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555541, conf: {"restarts":2}, perf: {"precision":0.8524305555555541,"recall":0.8524305555555541,"f1":0.8524305555555541,"seconds":3.203563392162323e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":72.6328125,"distances_sum":127.33078945614398}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333321, conf: {"restarts":14}, perf: {"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":5.862303078174591e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":156.7109375,"distances_sum":126.68635022826493}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.864583333333332, conf: {"restarts":5}, perf: {"precision":0.864583333333332,"recall":0.864583333333332,"f1":0.864583333333332,"seconds":3.756582736968994e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":93.9453125,"distances_sum":126.44146424345672}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222211, conf: {"restarts":4}, perf: {"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":3.5429373383522034e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":85.6796875,"distances_sum":127.34643456153572}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999988, conf: {"restarts":10}, perf: {"precision":0.8593749999999988,"recall":0.8593749999999988,"f1":0.8593749999999988,"seconds":0.0001553855836391449,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":128.0625,"distances_sum":127.13060905598104}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111099, conf: {"restarts":12}, perf: {"precision":0.8767361111111099,"recall":0.8767361111111099,"f1":0.8767361111111099,"seconds":4.9581751227378845e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":140.453125,"distances_sum":126.025795025751}, best_list's length: 9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8767361111111099,"state":{"restarts":12},"perf":{"precision":0.8767361111111099,"recall":0.8767361111111099,"f1":0.8767361111111099,"seconds":4.9581751227378845e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":140.453125,"distances_sum":126.025795025751}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666653, conf: {"restarts":22}, perf: {"precision":0.8854166666666653,"recall":0.8854166666666653,"f1":0.8854166666666653,"seconds":7.062405347824097e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":203.046875,"distances_sum":125.99766623042524}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8854166666666653,"state":{"restarts":22},"perf":{"precision":0.8854166666666653,"recall":0.8854166666666653,"f1":0.8854166666666653,"seconds":7.062405347824097e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":203.046875,"distances_sum":125.99766623042524}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8854166666666653,"state":{"restarts":22},"perf":{"precision":0.8854166666666653,"recall":0.8854166666666653,"f1":0.8854166666666653,"seconds":7.062405347824097e-5,"exhaustive_search_seconds":2.8233975172042847e-5,"evaluations":203.046875,"distances_sum":125.99766623042524}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8315972222222212, conf: {"restarts":19}, perf: {"precision":0.8315972222222212,"recall":0.8315972222222212,"f1":null,"seconds":0.00013768672943115234,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":286.828125,"distances_sum":58.56950247497298}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666656, conf: {"restarts":28}, perf: {"precision":0.8385416666666656,"recall":0.8385416666666656,"f1":0.8385416666666656,"seconds":0.0001690201461315155,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":363.2890625,"distances_sum":57.94735481054522}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.839409722222221, conf: {"restarts":31}, perf: {"precision":0.839409722222221,"recall":0.839409722222221,"f1":0.839409722222221,"seconds":0.00017706863582134247,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":384.5390625,"distances_sum":58.21208508708514}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8394097222222209, conf: {"restarts":25}, perf: {"precision":0.8394097222222209,"recall":0.8394097222222209,"f1":0.8394097222222209,"seconds":0.00030843913555145264,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":345.9375,"distances_sum":58.03482131497003}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.839409722222221,"state":{"restarts":31},"perf":{"precision":0.839409722222221,"recall":0.839409722222221,"f1":0.839409722222221,"seconds":0.00017706863582134247,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":384.5390625,"distances_sum":58.21208508708514}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8402777777777768, conf: {"restarts":40}, perf: {"precision":0.8402777777777768,"recall":0.8402777777777768,"f1":0.8402777777777768,"seconds":0.0002215765416622162,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":467.296875,"distances_sum":58.30624223337509}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8437499999999988, conf: {"restarts":30}, perf: {"precision":0.8437499999999988,"recall":0.8437499999999988,"f1":0.8437499999999988,"seconds":0.00017783604562282562,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":381.671875,"distances_sum":57.94277801015414}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.842013888888888, conf: {"restarts":42}, perf: {"precision":0.842013888888888,"recall":0.842013888888888,"f1":0.842013888888888,"seconds":0.0002117995172739029,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":487.640625,"distances_sum":58.00762859382667}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8437499999999988,"state":{"restarts":30},"perf":{"precision":0.8437499999999988,"recall":0.8437499999999988,"f1":0.8437499999999988,"seconds":0.00017783604562282562,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":381.671875,"distances_sum":57.94277801015414}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8437499999999988,"state":{"restarts":30},"perf":{"precision":0.8437499999999988,"recall":0.8437499999999988,"f1":0.8437499999999988,"seconds":0.00017783604562282562,"exhaustive_search_seconds":0.00037370435893535614,"evaluations":381.671875,"distances_sum":57.94277801015414}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(30), SatNeighborhood(32), 2020-08-13T23:29:50.748
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1863, 0.005942235f0), Item(8802, 0.031873167f0), Item(2010, 0.032809857f0), Item(3493, 0.033066537f0), Item(7866, 0.03355466f0), Item(3298, 0.039429545f0), Item(4474, 0.047894098f0), Item(2424, 0.059417993f0), Item(3079, 0.06211968f0), Item(9800, 0.06285028f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9163338397713404,"seconds":0.0033456720411777496,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0078125,"distances_sum":594.2367203384638}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8759765625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9163338397713404,"seconds":0.0033456720411777496,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0078125,"distances_sum":594.2367203384638}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.0446900528592025,"state":{"bsize":3},"perf":{"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":1.527555286884308e-5,"exhaustive_search_seconds":6.821006536483765e-6,"evaluations":32.515625,"distances_sum":286.79969097673893}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.0446900528592025,"state":{"bsize":3},"perf":{"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":1.527555286884308e-5,"exhaustive_search_seconds":6.821006536483765e-6,"evaluations":32.515625,"distances_sum":286.79969097673893}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.07239819004525,"state":{"bsize":3},"perf":{"precision":0.9809027777777775,"recall":0.9809027777777775,"f1":0.9809027777777775,"seconds":2.923235297203064e-5,"exhaustive_search_seconds":2.8148293495178223e-5,"evaluations":62.15625,"distances_sum":118.9731977339834}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.07239819004525,"state":{"bsize":3},"perf":{"precision":0.9809027777777775,"recall":0.9809027777777775,"f1":0.9809027777777775,"seconds":2.923235297203064e-5,"exhaustive_search_seconds":2.8148293495178223e-5,"evaluations":62.15625,"distances_sum":118.9731977339834}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.01836479835451, conf: {"bsize":4}, perf: {"precision":0.9852430555555552,"recall":0.9852430555555552,"f1":0.9852430555555552,"seconds":6.190873682498932e-5,"exhaustive_search_seconds":0.000501757487654686,"evaluations":106.3515625,"distances_sum":55.75187804363668}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.08707280832095, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.871538400650024e-5,"exhaustive_search_seconds":0.000501757487654686,"evaluations":105.15625,"distances_sum":55.682632660493255}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.08707280832095,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.871538400650024e-5,"exhaustive_search_seconds":0.000501757487654686,"evaluations":105.15625,"distances_sum":55.682632660493255}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.08707280832095,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.871538400650024e-5,"exhaustive_search_seconds":0.000501757487654686,"evaluations":105.15625,"distances_sum":55.682632660493255}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.08707280832095,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.871538400650024e-5,"exhaustive_search_seconds":0.000501757487654686,"evaluations":105.15625,"distances_sum":55.682632660493255}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(7), SatNeighborhood(32), 2020-08-13T23:29:54.875
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3152, 0.041937284f0), Item(8136, 0.04497955f0), Item(8649, 0.047625862f0), Item(6875, 0.05265579f0), Item(6922, 0.0606163f0), Item(3300, 0.06401203f0), Item(7310, 0.06435f0), Item(7388, 0.06551827f0), Item(6694, 0.065758154f0), Item(2720, 0.06720446f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
