Julia Version 1.6.0-DEV.629
Commit 7b9a941394 (2020-08-12 17:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed StackPointers ─────── v0.1.2
  Installed UnPack ────────────── v1.0.1
  Installed VectorizationBase ─── v0.12.31
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.24
  Installed LoopVectorization ─── v0.8.23
  Installed VectorizedRNG ─────── v0.1.12
  Installed PaddedMatrices ────── v0.1.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_683D0j/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_683D0j/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-5.503630884362565e-11, -9.99627047804097e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.82007750485036e-10, 5.786584544864581e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [1.1202438976454232e-10, 2.315903024907584e-10, 2.2983170921975216e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.079004049614923e-12, 1.4629852884695538e-11, 4.862776847858186e-13]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [3.733879871958834e-11, 1.6276779923884988e-10, 7.27058413474424e-11, 3.231233058897942e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8984813721090177e-12, 5.619726906047617e-12, 5.226041821515537e-12, 1.0739853451013914e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1170642189028968e-10, -1.3229506379275335e-10, -2.1299251251605256e-10, -2.8056013068322727e-10, 1.2532863635783542e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.505107646466058e-14, -1.0524914273446484e-12, 2.5868196473766147e-13, -2.1169732633552485e-12, 1.1076251027475337e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.508049241039089e-11, -8.019140906867506e-13, 1.2130074722449535e-11, -3.082223365424852e-11, -1.836530927334934e-12, 2.4066526549404443e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2735257293172708e-10, 1.533713156476324e-10, 1.2211032185405202e-10, -2.5747415310917177e-10, 3.104725365687955e-10, 2.421927103313237e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-4.2791103993522484e-11, 1.3851608748893796e-10, 2.1542412298458657e-10, -8.363609804717953e-11, 2.8412827646207006e-10, 4.2817371870285115e-10, 4.162876710012142e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.099416444664939e-10, -3.3074987193515426e-11, -5.302559502595727e-10, -1.035790786474422e-9, -6.486788883819372e-11, -1.0391144611432424e-9, -2.5544233395180527e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.6606671593422107e-10, 2.205924332088216e-11, -1.4748868792935355e-11, -8.098033354997369e-11, 3.2994873500058475e-10, 5.168443450997984e-11, -2.105959850950967e-11, -1.7327961288060578e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4809820036987276e-11, 2.4566570999695614e-11, -2.3135826587861175e-11, -2.194888715223442e-11, -2.777700292000418e-11, 4.9712456373640634e-11, -4.691258492783845e-11, -4.25623980504497e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [8.9553919835339e-11, -8.29718516115463e-11, 8.118661298794905e-11, 7.188938333513306e-11, 1.9153523211912216e-10, -1.8445833749325402e-10, 1.5136425446371504e-10, 1.5380297035960666e-10, -6.061928736755817e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.796773840823107e-11, 9.566125669380199e-12, 1.5918821816285345e-11, -1.2719048037013181e-11, -3.3005265187568966e-11, 1.9052759370197236e-11, 3.3398839249798584e-11, -2.6824764631783182e-11, 1.3322676295501878e-15]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-5.816447323780949e-11, -1.9992030253490611e-10, 3.168154627530839e-11, 4.347633364432113e-11, 1.2599521426182037e-10, -1.0055323240720782e-10, -4.023605892911064e-10, 7.160960713292752e-11, 8.911005267009386e-11, 2.6044988388207457e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.099254352103344e-13, -2.050271064035769e-11, 8.577294430267557e-11, 1.3595569114954742e-11, 8.253397965063414e-12, -3.1913360842850125e-12, -4.0986214422389367e-11, 1.6634094102130348e-10, 2.5635937817014565e-11, 1.5546008924616217e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-5.653477685996222e-11, -4.191458291558092e-11, 6.398459539980195e-11, -2.946733967945647e-10, -1.876909738740551e-11, -1.1743639394268257e-10, -9.030109993091173e-11, 1.1835221691569586e-10, -5.947825565399967e-10, -4.7344794751325026e-11, 9.017897539820297e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.317935146744503e-11, 1.830358087318018e-11, 1.2671197424651837e-11, 4.3194114951461415e-11, 1.5721202117902067e-11, -1.3441481261367016e-10, 3.7263081509308904e-11, 2.5958124538760785e-11, 8.195311096415026e-11, 3.7151393073031613e-11, -9.366063480342746e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1516121389831824e-11, 1.7415335840098578e-10, -7.957912107059428e-11, 1.416122774600126e-10, -7.878997454469072e-11, 1.1344503114685267e-10, -5.942801806213538e-12, 3.320239638782141e-10, -1.449605990799796e-10, 2.7374413846814605e-10, -1.495348289637377e-10, 2.2985124914498556e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1871814642461231e-10, 2.3952839711682827e-11, -6.053046952558816e-12, -3.702682604966867e-11, 5.666800362291724e-11, 3.867817177649613e-11, 2.294506806777008e-10, 4.5670800474795215e-11, -1.2125633830351035e-11, -7.862166473415755e-11, 1.1547895972796596e-10, 7.73061614722792e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.1317791148712786e-10, -1.0930922833551904e-11, -5.948330716876171e-11, 9.301648340453994e-11, 7.694356263243662e-10, -1.6763113119822037e-10, 2.1087509516348746e-10, -1.5981438394874203e-11, -1.1883094508391423e-10, 2.01383798525967e-10, 1.5360608340841964e-9, -3.311253493620825e-10, 1.0087930490954022e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4634415901326747e-10, 1.2293122075845986e-10, -9.850431581526209e-11, -1.5507306549977784e-10, -1.7364221172044836e-11, 6.327383061943692e-11, -2.994849923609877e-10, 2.408993005076354e-10, -2.0066281969377542e-10, -3.2495983681712914e-10, -5.0572657173120206e-11, 1.4035217432706304e-10, 7.771561172376096e-15]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3942247356624193e-10, -1.602495913743951e-10, -6.431566390574517e-11, 9.171263748442016e-11, -1.8245494004531793e-10, -9.534939504618478e-11, -6.149170062030862e-11, -3.0004632112223817e-10, -3.270755888351573e-10, -1.2730949627837163e-10, 1.771358615343388e-10, -3.662093961409596e-10, -2.07728056977885e-10, -1.351806444560566e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.1548230694511403e-10, 5.128386604269508e-11, 2.9897573305959213e-10, -5.423758109301957e-10, -1.0309597620050681e-10, 1.0218137447282061e-10, -4.687894517019231e-11, 6.308567002122345e-10, 8.823186625761537e-11, 5.864464469595987e-10, -1.072114841349503e-9, -1.9195012246342458e-10, 1.943858407571497e-10, -8.18333178997932e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [4.5644377166809136e-11, 1.7140733277187792e-11, -1.1388334719697468e-11, 3.1747049433761276e-11, 6.324318846395727e-11, -2.374026530915785e-10, 1.307041141984655e-10, 8.977441012802956e-11, 4.597611180656713e-11, -1.9369505999122794e-11, 7.369505006238342e-11, 1.441253782985541e-10, -4.572783263157021e-10, 2.4948998422757995e-10, -2.5538127168545088e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9172332044756786e-11, 1.0542011708025711e-11, -3.683831018008732e-11, -9.736433881357698e-12, 2.840283563898538e-11, -1.9730883593638282e-12, -2.166022916583188e-11, -8.588574296197748e-11, 2.361311146614753e-11, -6.562572707480285e-11, -1.7748469360867603e-11, 5.883782350224465e-11, -7.464029394554927e-12, -3.652012026122975e-11, 6.705747068735946e-14]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.869371324403346e-11, -4.337386005914823e-11, 2.7094992915976945e-11, -2.282052324886763e-11, 3.809796922382702e-11, -2.0833335057091062e-12, 9.750866780677825e-12, -3.017919247838563e-12, 4.14854817165633e-11, -9.334755191048316e-11, 6.000200336586659e-11, -4.4731218729054945e-11, 7.747247288136805e-11, -2.7388091794477987e-12, 1.84510184908504e-11, -6.281419828724211e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.7472125402615575e-10, 4.848721424366431e-11, -2.195865711485112e-10, 1.2134426796706066e-10, 1.1478018535626688e-10, -1.163078522381511e-10, 4.8575587996424474e-11, -1.6881129827339691e-10, -7.643743415997051e-10, 9.99911264898401e-11, -4.302072031947546e-10, 2.476585603261583e-10, 2.1697377228235837e-10, -2.3040302998822426e-10, 1.0559264573828386e-10, -3.5836389411514347e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0851430864988743e-11, -1.4012824234299615e-10, 1.4368950473908626e-11, 5.244360501421852e-11, -7.50880468913806e-11, 3.002331716572826e-11, -6.03286309797113e-11, 2.502886786714953e-12, -1.961830697894129e-11, -2.856964664843531e-10, 3.112199387089731e-11, 1.0547696049911792e-10, -1.4548584559292976e-10, 6.874478764018477e-11, -1.2515966041348747e-10, 6.45261621912141e-12, 5.403899550060487e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.544298353754584e-11, 6.7479355436717015e-12, 1.8627943632054667e-10, 9.11071218467896e-11, 1.3692935674214368e-10, -6.882638903249472e-11, 3.2235103475386495e-11, 1.4320433727732507e-10, -1.0540202044495572e-10, 2.017741529414252e-11, 3.77583075916732e-10, 1.7609735891710443e-10, 2.6305935207915354e-10, -1.4424761385356533e-10, 5.614930742581237e-11, 2.9282509750316876e-10, 2.142064303711777e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [6.796319063084866e-11, 4.3300474317220505e-11, 1.0755374368898174e-10, -5.6992188746107786e-12, -1.0363254698830815e-10, 4.657829677512382e-11, -5.4755533440697945e-11, 1.0174994180545127e-10, -5.789524415433789e-11, 1.414623973516882e-10, 8.921396954519878e-11, 2.1614843248585203e-10, -8.859468714206287e-12, -2.0638923903248951e-10, 9.453171578854835e-11, -9.458389627070574e-11, 2.059292736333873e-10, -1.1457512716361862e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.882782818540818e-11, 1.669220317523923e-11, -2.413265143275112e-10, -1.4202439224675345e-10, 3.513211943584338e-11, 7.548961455938752e-11, 8.63888960367376e-11, 3.361488865039064e-11, 1.2280709782430677e-10, 2.51767495740296e-11, 2.4978019652621697e-11, -4.6102066608710857e-10, -2.903092211070657e-10, 4.558842192636803e-11, 1.3062395609608757e-10, 1.8736145968034634e-10, 5.0359938441602026e-11, 2.233937479445558e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-5.679434700311958e-11, -1.2241674340884856e-10, -7.679190616727283e-12, 1.2141621041905637e-11, -2.2548851674741854e-11, 4.683831100749103e-11, 4.941425046922632e-11, -8.214828817187936e-11, -1.3591272551849443e-10, -1.2126377679777534e-10, -2.534423781952455e-10, -1.8155366099392722e-11, 1.8882229113614812e-11, -4.204214754111035e-11, 9.598299932633836e-11, 1.05879527367847e-10, -1.6270973457466198e-10, -2.744414695499131e-10, 1.4347412147230898e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.9672264645341784e-11, 5.1615822727058e-11, -4.6267101261321386e-11, -4.876699044586985e-11, -8.840927989695047e-12, -1.038809038789168e-10, -7.336020679815647e-11, 3.511946289336265e-11, -4.4114711883480595e-11, -5.7079563298145786e-11, 9.73006120119635e-11, -9.668954525920981e-11, -1.0218870194478313e-10, -2.576461266556862e-11, -2.0589929761172243e-10, -1.379460989880954e-10, 7.164446813590075e-11, -7.900313736541875e-11, -4.867883873771461e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [2.5781154988635535e-11, -6.3871130606685256e-12, -4.50213200053895e-11, 7.542855229303314e-13, -2.4864110770295156e-11, 2.731326276261825e-11, -6.039280187053464e-12, 4.3931525084417444e-12, -2.9762303732638884e-11, -1.486566425512592e-11, 5.4422244488705473e-11, -1.169997432270975e-11, -9.338307904727117e-11, 4.109157458742629e-12, -4.9161230641914244e-11, 5.533129510126855e-11, -1.1543543898540065e-11, 8.068656853765788e-12, -5.947620174140411e-11, -2.472788640517365e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.645750864706315e-11, 2.34920527475424e-10, 1.5812662290670687e-10, -1.3233714124538665e-10, 1.4708034790089641e-10, 1.4564371930703146e-10, -4.512346052365501e-11, -1.9829926589665092e-10, -2.3032586948801281e-10, 3.927680403137401e-11, -1.9692036890006648e-10, 4.717628510064742e-10, 3.212867749624593e-10, -2.604791937699247e-10, 3.076945365165784e-10, 3.0855540344987276e-10, -8.700418163698487e-11, -3.91591092885335e-10, -4.474760562089841e-10, 9.311662552136113e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [5.154587867650662e-11, -3.0079716495379216e-11, 3.2156943774452884e-11, 3.4458880193710684e-11, -2.2304491587021857e-11, -1.000044491661356e-11, 1.698929885662892e-11, -3.487710120708698e-11, -6.245337580423893e-12, 2.5770496847599134e-11, 1.1140777189666551e-10, -6.384959228000753e-11, 6.709965916229521e-11, 6.837397314995997e-11, -3.9463543544115964e-11, -1.946109939865437e-11, 3.128164394183841e-11, -7.081268904585158e-11, -1.5089263172285428e-11, 5.4393600734670144e-11, -3.642086632282826e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.843903056439558e-12, 8.784750704649014e-12, -1.6590506746183564e-11, 6.816769371198461e-14, -1.3044454405530814e-11, -1.7569501409298027e-11, 1.713318376062034e-11, 8.202105661325731e-12, 1.4872769682483522e-11, 3.6206593279075605e-12, -9.037770531961087e-12, 1.8849366512085908e-11, -3.223921130057761e-11, 8.79296635503124e-13, -2.74822387069662e-11, -3.027400552468862e-11, 3.536748671706391e-11, 1.644817615442662e-11, 3.071853882374853e-11, 8.164580123093401e-12, -1.408317906737011e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.634501423097845e-10, -1.2408629679327987e-11, -2.052797931639816e-10, 3.836797546341586e-11, -8.497647030480948e-12, 3.2173375075217336e-11, 4.3451908737779377e-11, 1.1991896364804688e-10, 5.702993632894504e-12, -3.74280606507682e-11, -1.0298828456711817e-10, -3.096318756945493e-10, -2.6383006890284832e-11, -3.992921548956474e-10, 7.738165663795371e-11, -1.774258517883709e-11, 6.113598516321872e-11, 8.850697952311748e-11, 2.328861548051009e-10, 9.265033185101856e-12, -6.772915561725767e-11, -2.0884627360828745e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3590795983352564e-11, 1.076199129812494e-10, -4.5278114590985297e-11, -3.630793443676339e-10, 1.2936762772142174e-10, 4.942712905631197e-12, -3.555802319255008e-10, -1.8322754424815457e-10, -2.3130652948566421e-10, 5.314104711828804e-11, 2.2191870563403882e-10, -5.653477685996222e-11, 2.151785416515395e-10, -7.570555293767711e-11, -7.518873301748386e-10, 2.4160229372682807e-10, 6.829425913679188e-12, -7.375055011138443e-10, -3.844574658629085e-10, -4.674298725859671e-10, 9.198841688373705e-11, 4.555589239174651e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3487488903507483e-10, 5.25028909237335e-11, 2.7400304247748863e-11, 2.3177015862074768e-12, 1.2493117651501962e-11, -4.303424283591539e-11, 6.464051516275049e-11, 9.380585197504843e-11, 4.204370185334483e-11, 1.3345546889809157e-11, -1.9693580100010877e-11, -2.690039302422065e-10, 1.0901479718938845e-10, 5.272648984089301e-11, 1.0133449634963654e-11, 2.3456570019675382e-11, -8.777700788442644e-11, 1.2867329424182117e-10, 1.9135515394452796e-10, 8.521983119180732e-11, 2.843947299879801e-11, -4.040734413734981e-11, 2.37609931730276e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0581758519711002e-11, 1.1090994789242359e-10, 1.1831646773430293e-11, -3.281641625108023e-11, -2.04025685235365e-12, -7.736589147100403e-12, -8.841327669983912e-11, 7.096545573404e-11, 7.78614950291967e-11, 1.6567636151876286e-11, 1.3604006809941893e-11, 4.278644105681906e-11, 2.1500845548416692e-10, 1.709432595475846e-11, -7.458389461589832e-11, 1.6826540161218873e-12, -2.063815784936196e-11, -1.7705892307873228e-10, 1.3678724819499166e-10, 1.570543695095239e-10, 3.961564409848961e-11, 2.6568969246909546e-11, -1.759692391800627e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-8.811162910404846e-11, 6.888267733984321e-12, 1.0032952246774585e-10, -1.5011047960200585e-10, 8.379608118502802e-11, 1.3900658402121735e-11, 8.573697307667771e-11, 3.51074724846967e-11, 4.4715342539802805e-11, 5.071587594329685e-11, 2.6016966359065918e-11, 9.316991622654314e-13, -1.6926582357967845e-10, 1.8207213514642717e-11, 1.9747692370231107e-10, -3.054781982925192e-10, 1.6432499805318912e-10, 2.455013969893116e-11, 1.7246826189420972e-10, 8.072009727300156e-11, 8.414358099173569e-11, 1.0114842297070936e-10, 5.236988620538341e-11, -3.942401960443931e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.930034241430349e-12, -6.667666418991303e-12, -1.0135114969500592e-11, 2.992717185179572e-12, 9.276579504557958e-12, -2.1092572133341037e-11, 1.553424056055519e-12, -1.7272516750210798e-11, 5.474509734426647e-12, 1.9210633084298934e-11, -3.1649127762989337e-12, -5.994649221463533e-12, -1.2104539592883157e-11, -1.3590573111343929e-11, -2.06558103954535e-11, 6.544098596350523e-12, 1.8777424060090198e-11, -4.196165637182503e-11, 3.1801228317362984e-12, -3.498956679948151e-11, 1.1084244633252638e-11, 3.838440676418031e-11, -5.8087978871412815e-12, -1.251643233501909e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
