Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed VectorizationBase ─── v0.12.31
  Installed DocStringExtensions ─ v0.8.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.23
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.24
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_DTIvWQ/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_DTIvWQ/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-3.755329380794592e-12, -8.703038290036602e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0059288391726113e-12, -6.548983577658873e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-4.116595953007618e-12, -9.034772929794599e-12, -1.7330581414398694e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.2361806567848816e-9, 6.50554277115134e-9, 1.0987795118211352e-9]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [3.4772185131259903e-13, -1.3662404541037176e-12, 6.747935543671701e-13, -2.5517365997984598e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.113287405653864e-12, -6.8256511553954624e-12, 1.0659473304031053e-11, -1.4128254122169892e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [1.0683232076758031e-11, -5.893729948525106e-11, 1.66680003133024e-11, -1.1939205180055978e-10, -5.828670879282072e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1549150524814422e-10, -2.0626289565228717e-10, -2.398173881701382e-10, -4.038903655967374e-10, 1.1779466291272911e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2400648003184642e-10, 2.6535151853579464e-10, -6.947189490347228e-10, -4.3671921634569344e-10, 5.280837989118936e-10, -1.3784287045126575e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [2.4833690659420427e-11, -1.6599055463473178e-11, 6.232347971035779e-12, 5.160982752272503e-11, -3.34393623901974e-11, 1.2516654379624015e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.1268763699945339e-11, -6.243783268189418e-12, -8.090195180443516e-13, 2.3057333820020176e-11, -1.175648467466317e-11, -1.5684120668879586e-12, -4.087064020552589e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.922329459120192e-12, -1.6490253607059913e-11, 1.634714585918573e-11, 1.5696111077545538e-11, -3.3624769635309804e-11, 3.5745406634646315e-11, 1.3369305662536135e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [3.117883728975812e-11, 8.660649974956414e-11, -1.216649003765724e-11, 9.259149003071343e-11, 7.793521383803181e-11, 1.654265613382222e-10, -7.62390151010095e-12, 1.766453650020594e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4810375148499588e-13, -1.855637865588733e-11, 7.504374899269806e-11, 5.54993828671968e-11, -2.6535440511565866e-12, -3.80272480171584e-11, 1.5318457613489045e-10, 1.0927481142175566e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [7.825540215833371e-11, 1.7109202943288437e-11, 1.4210854715202004e-12, 1.3663736808666727e-11, 1.620947820413221e-10, 3.4232616741292077e-11, -6.4698246760031e-12, 2.657141173756372e-11, 2.9694025016624437e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.830239376194754e-10, -6.058442636458494e-11, -3.94732024844302e-11, -1.900035684343493e-12, -5.473032027580871e-10, -1.2109968583473574e-10, -7.985012651090528e-11, 1.5218937221561646e-12, -1.336597499346226e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4791845526218594e-10, 5.256328705627311e-11, -3.7903902239122544e-11, 1.4425793892769434e-11, 3.852806962356681e-11, -2.8816615760263176e-10, 1.0625766933003433e-10, -7.719136441153296e-11, 3.327915720774399e-11, 8.115708105549402e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.454969643712502e-11, 3.5982772317311174e-11, -4.950706511408498e-11, 1.2709833185908792e-11, -7.417932934572491e-11, 5.180766926571323e-11, 6.186695600263192e-11, -9.012368629157663e-11, 3.2137625893824406e-11, -1.4072032428202874e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-3.619271549126779e-11, 3.420197458581242e-11, 7.801803647566885e-11, -1.0491518764865759e-10, 8.020828445864936e-11, -7.330069884403656e-11, 5.2740478651003286e-11, 1.7091639215038867e-10, -2.071919302792935e-10, 1.645892311330499e-10, -3.013145288832675e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3033752682977138e-10, 9.648748466872803e-11, -1.5702628086700088e-10, 1.2345902078436666e-11, -1.9714441190643583e-10, 4.653857299530273e-10, 1.9191692679498829e-10, -3.192764941317705e-10, 3.2067015709458246e-11, -3.7536906916102453e-10, -1.3922196728799463e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [5.446754158811018e-12, -3.498046297067958e-11, 2.1350698986566385e-11, 2.7957192116900842e-11, 3.1949998202662755e-12, 1.8104184817957503e-11, 1.120703529977618e-11, -7.745726282593068e-11, 4.676903309075442e-11, 5.541411773890559e-11, 5.026867810897784e-12, 3.842126616859787e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7963186493830108e-11, 4.41564562692065e-11, 3.3519853559482726e-11, 8.150147223773274e-11, 2.6567636979279996e-12, 2.333022663947304e-12, 3.595213016183152e-11, 8.95734597605724e-11, 6.72122357769922e-11, 1.6105117239817446e-10, 8.714362564887779e-12, 3.3919533848347783e-12]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-5.5735638326837034e-11, 5.831735094830037e-11, 1.1909917496666367e-10, -1.358180234944939e-11, 5.950995252135272e-11, -1.555933160091172e-11, -1.0695266894344968e-10, 1.0511636006071967e-10, 2.380349251041025e-10, -2.4468205239713825e-11, 1.1865131099852988e-10, -3.259537084687736e-11, -2.2043478153932483e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.49493783807975e-12, -2.882261096459615e-11, -2.546185484675334e-12, -2.3442137120355255e-11, 1.411182282140544e-11, 9.911405030038622e-12, -9.916067966742048e-12, -5.687983417601572e-11, -5.193290242289095e-12, -4.6388448637912916e-11, 2.937650123158164e-11, 1.786260028779907e-11, -6.851186284961841e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.65907296181922e-11, -1.9505064230429525e-11, -4.424793864643561e-12, 1.3116774333354897e-10, 6.499378812918621e-11, 5.575873096574924e-11, 1.2805667637394436e-10, -5.4482307554337694e-11, -3.698608086466493e-11, -2.654876318786137e-12, 2.733997472859073e-10, 1.2361622836465358e-10, 1.2404588467518352e-10, 2.6795676788538003e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.120581736406393e-11, 1.1205769645528108e-10, -1.3682410759940922e-10, -1.8988521865992425e-10, -8.57452997493624e-11, -1.8700219150957764e-10, 3.927889125066031e-10, -1.037686603311272e-10, 2.2177593095307202e-10, -2.536819643239596e-10, -3.6734626451817576e-10, -1.886159006758703e-10, -3.763098721520919e-10, 7.893743436682144e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [3.8480330033507926e-13, 1.6740608899112885e-11, -4.15050216417967e-11, 4.390265928577719e-11, -3.588151997746536e-11, -2.6007529463356605e-11, -1.1166512159377362e-11, -1.4228618283596006e-12, 3.2168046004699136e-11, -8.042355670312418e-11, 8.114997562813642e-11, -7.485279063246253e-11, -4.207834081171313e-11, -2.9676705537440284e-11, -2.0573542869328776e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1727463444799469e-10, 4.047051582745098e-11, -2.8499202997522843e-11, -1.0312084519625841e-10, 6.248623840576784e-11, 6.194889046184926e-11, -8.565803621962687e-11, -2.4313384638929847e-10, 7.55249196515706e-11, -5.1228910002976136e-11, -1.975419827715541e-10, 1.2833578644233512e-10, 1.3906054086021413e-10, -1.6783952005994252e-10, -8.322342814892636e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-3.446377627724928e-10, 2.97886160183225e-11, 1.279265582354583e-10, -6.696154741803184e-11, 7.865974538390219e-11, -3.2683522555032596e-11, 1.0385625692777012e-10, 3.3678615452004124e-11, -6.750380254771926e-10, 5.5454085767792094e-11, 2.5218205301769103e-10, -1.240284541736969e-10, 1.6277490466620748e-10, -5.705247385634493e-11, 2.0885781992774355e-10, 8.142619911666316e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.43919576045937e-10, 8.256284544927439e-12, 1.4505729950542445e-10, -2.7566837701442637e-12, 3.4004199456205697e-10, -1.396017745847189e-10, -2.6625834870230847e-10, -1.6610324227173123e-10, 1.0968674857281258e-9, 2.7588376028120365e-11, 2.9097080300743983e-10, -1.8126056211542618e-11, 7.025304782359854e-10, -2.791448183714351e-10, -5.432103655778064e-10, -3.256319658362372e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-7.85006504244734e-11, 8.308065346795956e-11, -3.09262615516559e-11, 6.56359411266294e-11, -5.5222937334065136e-11, 2.8892888082054924e-11, -1.3247958285944605e-11, 1.528621673685393e-11, -1.564285367905427e-10, 1.6609824626812042e-10, -6.342337766085393e-11, 1.3140821764068278e-10, -1.0047096488108309e-10, 6.991274226209043e-11, -3.9263703399683436e-11, 3.657474323404131e-11, -3.1424862712015056e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0897950037124247e-11, -7.275291480368651e-13, -8.58711990403549e-11, 2.526641118549833e-10, 2.355404760123747e-11, -1.0450773579862016e-10, 1.1181877646038174e-10, 1.4444156981596734e-10, -2.975941715277486e-11, -1.6832091276341998e-12, -1.6850454365169298e-10, 5.013722770286222e-10, 3.8649305977855875e-11, -2.1501611602303683e-10, 2.2762258744535302e-10, 3.0686830854165237e-10, 7.891021169825763e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.918825098812249e-10, -2.2006618749514928e-10, 1.2498002632810312e-11, 4.548361687284341e-12, -7.213341035594567e-12, 1.2422152195767922e-10, 4.330247271866483e-11, 1.6046053374907387e-11, -1.3289924716275436e-10, -3.7915715012104556e-10, -4.176813339640262e-10, 3.26263460692644e-11, 6.1883831392606226e-12, -1.2330136911486989e-11, 2.427629208767712e-10, 8.472711421347867e-11, 3.370193013552125e-11, -2.6311142153900846e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.156452711370548e-11, 1.7644552485762688e-11, -6.576994504570166e-11, -2.371547402901797e-12, 2.4480195648379777e-11, 3.357425448768936e-11, -1.910638314228663e-11, 2.158517808936722e-11, 5.570677252819678e-11, 2.4417801114395843e-11, 3.6248115620196586e-11, -1.307133290495699e-10, -7.405409618854719e-12, 4.396527586436605e-11, 6.466560620310702e-11, -3.929268022062615e-11, 3.9904968218706927e-11, 1.0717493559297964e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.1904255359240778e-11, 3.6094904842798314e-11, 7.511991029218734e-12, 3.3237856911227937e-11, 3.159494887938763e-11, 1.706612628993298e-11, 9.276934775925838e-11, 5.154388027506229e-11, 5.452194251631681e-11, 2.312328106768291e-11, 6.735922930545257e-11, 1.0994538612862925e-11, 7.119682621237189e-11, 6.800338070434009e-11, 3.49300588453616e-11, 1.7398082974295903e-10, 9.041856152691707e-11, 1.0445799780711695e-10, -7.885248010097712e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [8.888667579753928e-12, -2.151501199421091e-11, -2.0616841567289157e-13, 2.0770718478502204e-11, 7.360068110529028e-11, -6.3649086001760224e-12, 6.356826176556751e-11, 7.406963931089194e-12, -1.0869638522592595e-10, 1.9060308886764687e-11, -4.5165982065498156e-11, -4.085620730620576e-13, 5.016942417057635e-11, 1.434787844090124e-10, -1.6433299165896642e-11, 1.2639667090752482e-10, 9.759748564874826e-12, -2.1926127580229604e-10, -2.2614132788589814e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [6.2945204604147875e-12, -1.0504708214398306e-11, -2.0598966976592692e-11, -6.810796371325978e-11, 1.6863399565636428e-11, 6.110578709694892e-11, 1.8468782059244404e-11, -2.0365154007606634e-11, 4.0949466040274274e-11, -7.309042260317256e-12, 1.8745449636980993e-11, -2.4737101256278038e-11, -4.392730623692387e-11, -1.4137491177734773e-10, 3.3805402921416317e-11, 1.2360734658045658e-10, 3.590772124084651e-11, -3.9705350118879323e-11, 8.099743098455292e-11, -7.748690578068818e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.955717809920543e-10, -3.200818499138336e-10, -1.7003265462278705e-10, -1.6281931358719248e-10, -2.3000845672527248e-10, -1.2069889532284606e-10, 1.924793657792634e-10, -3.217233146557419e-10, -1.7727319612248493e-10, 3.3392622000860683e-11, -3.7757375004332516e-10, -6.570021193752495e-10, -3.5410008258907055e-10, -3.171933826706663e-10, -4.3755388201560663e-10, -2.4386725971936585e-10, 3.7764391613848147e-10, -6.223729309695614e-10, -3.490340239054035e-10, 9.113065857491165e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [4.839106892973177e-11, -8.237810433797677e-11, -5.5707438662011555e-11, -1.1918299680502287e-10, 1.4112866431048587e-10, 2.0178081427957295e-11, -6.14573947288477e-11, -3.8815284320037335e-11, -9.623002394931746e-11, -3.827826944302615e-12, 9.712919357696137e-11, -1.5877432701927319e-10, -1.0603429245747975e-10, -2.2921420317345564e-10, 2.6776891814961346e-10, 4.739741932269226e-11, -1.4619849775243665e-10, -7.979017446757553e-11, -1.9286783281557973e-10, 4.805045250577678e-13, 1.4571455153600255e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.9868330031490586e-11, -1.4019896354966477e-11, -5.263345315142942e-12, -9.501932574096372e-11, 6.459544010795071e-11, -1.0467304800698685e-10, -1.9662182992874477e-10, 4.8842263566939437e-11, 1.2119305559110671e-10, -6.511391426045066e-11, 6.497891114065624e-11, -3.341060761385961e-11, -8.72324434908478e-12, -1.8927304168414594e-10, 1.2333667420705297e-10, -2.1306389985653595e-10, -3.9783187855135793e-10, 9.41728917069895e-11, 2.347764205268277e-10, -1.2832024331999037e-10, -3.955058502924658e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6991187063174493e-11, 6.324940571289517e-11, 3.171285456460282e-11, 1.2277734384724681e-11, -5.908651345976068e-11, -3.044031693377747e-11, -3.509248447386426e-11, 5.711875417091505e-12, -4.495603889154154e-11, 1.4983347895736188e-11, -1.9101276116373356e-11, -5.5269677723401855e-11, 1.25717880550269e-10, 6.629807813851585e-11, 1.9922063998478734e-11, -1.1349188255849185e-10, -6.708811284283911e-11, -6.766920357392792e-11, 9.773293285775253e-12, -9.259504274439223e-11, 2.8839153287663066e-11, -4.0757508479316584e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.362081641393843e-10, 1.407003402675855e-10, 7.101452759172844e-11, 1.280766603883876e-10, -1.3937850873446678e-11, -4.507605400050352e-11, 1.208424471599301e-10, -1.2724998832425172e-10, 1.3713585822472396e-10, -2.3178681196611706e-11, -6.280198583397123e-12, -4.765553507368736e-10, 2.730236037251643e-10, 1.4584111696080981e-10, 2.5738056130819587e-10, -2.18094431403415e-11, -8.678546770113371e-11, 2.4159252376421136e-10, -2.578238733619287e-10, 2.767464035713374e-10, -4.688072152703171e-11, -6.080358438964595e-12]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3536617099750856e-11, 1.0077938483732396e-11, -1.3752332606031814e-11, -3.746947196958672e-11, -4.908640161005451e-11, -1.0450529330796599e-12, 3.208149301769936e-10, -2.848804525612536e-10, -1.5202283876192269e-12, -9.498690722864467e-11, 9.119816013480886e-11, -5.165889938041346e-11, 1.9464430067728244e-11, -3.331335207690245e-11, -7.688238934377978e-11, -9.106637666178585e-11, -6.5492056222637984e-12, 6.377729455664394e-10, -5.721244589196317e-10, -8.896217096321379e-13, -2.0236790021499473e-10, 1.7446466493709067e-10, 9.189538019427346e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.779598690632156e-11, 3.3808511545885267e-12, 3.6213254617223356e-12, -2.3279378424945207e-11, -8.964939901545677e-12, 7.075673380541048e-12, 2.5777602274956735e-11, -1.2996714815471933e-11, -1.8835488724278093e-11, -2.647559949053857e-11, -1.2447931574399718e-11, 3.7520875295626865e-11, 7.37765404323909e-12, 7.162936910276585e-12, -4.6194714720115826e-11, -2.082178873763496e-11, 1.3881562566098182e-11, 5.459210861147312e-11, -2.8255731088222547e-11, -3.6846525830469545e-11, -4.797173769333085e-11, -2.5163315875431636e-11, -1.5057954882990998e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.8676393764849308e-11, 5.615330422870102e-11, 6.017608633612781e-11, -5.313638418158462e-12, -5.760392163267625e-12, 1.8423040870629848e-11, 4.2585934778571755e-12, 3.9260150686004636e-11, 4.045430657129145e-12, 1.999111987061042e-11, -6.496325699600902e-11, 1.4090506539332637e-11, 3.449884822259719e-11, 1.1357692564217814e-10, 1.2398349014119958e-10, -1.2358558620917393e-11, -1.2367995516626706e-11, 3.892197675270381e-11, 6.336042801535768e-12, 7.74746933274173e-11, 1.1345813177854325e-11, 4.043032575395955e-11, -1.3418000044396194e-10, 2.3688828676426965e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.946554111815658e-11, 1.2970513552090779e-11, -1.8372636745311866e-11, -9.697465053193355e-12, -2.575051283315588e-12, -7.787337441556019e-11, 6.873301927612374e-11, 5.814038139817512e-11, 9.68127800149432e-11, -3.496536393754468e-11, -4.074007797782997e-11, -4.962130706331891e-11, 6.517897332969369e-11, 2.8513413852238045e-11, -3.200617548770879e-11, -2.0188295479783847e-11, -3.835820550079916e-12, -1.5287771049088406e-10, 1.3930456788102674e-10, 1.178150910163822e-10, 1.8852297500870918e-10, -7.115974476334941e-11, -8.254508188088039e-11, -9.84219372668349e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
