Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_qhXq97/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_qhXq97/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.846705 seconds (1.34 M allocations: 70.812 MiB, 7.08% gc time)
Running: chebyshev_quadrature with k=1
  1.660660 seconds (2.24 M allocations: 128.627 MiB, 2.92% gc time)
Running: chebyshev_quadrature with k=2
  0.334856 seconds (425.06 k allocations: 24.387 MiB)
Running: chebyshev_quadrature with k=3
  0.476115 seconds (544.93 k allocations: 29.883 MiB, 8.26% gc time)
Running: chebyshev_quadrature with k=4
  0.330912 seconds (487.80 k allocations: 26.404 MiB)
Running: jacobi_quadrature with α=β=1
 41.705379 seconds (39.37 M allocations: 3.137 GiB, 10.57% gc time)
Running: laguerre_quadrature with k=1
  3.552527 seconds (3.33 M allocations: 185.655 MiB, 7.93% gc time)
Running: legendre_quadrature
  0.301415 seconds (215.02 k allocations: 12.322 MiB)
Running: lobatto_quadrature
  0.454473 seconds (343.60 k allocations: 20.578 MiB)
Running: radau_quadrature
  0.330393 seconds (325.93 k allocations: 19.580 MiB, 8.30% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.807927 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rectangle_rule_midpoint.
  0.143260 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.429142 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rombergs_method
  0.538168 seconds (752.66 k allocations: 43.310 MiB, 5.64% gc time)
Running: simpsons_rule
  0.034666 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.086092 seconds (113.12 k allocations: 5.975 MiB)
Running: trapezoidal_rule
  0.285009 seconds (1.52 M allocations: 25.798 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.072456 seconds (32.63 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.587581 seconds (275.33 k allocations: 13.958 MiB, 5.46% gc time)
Running: chebyshev_quadrature with k=2
  0.303332 seconds (115.72 k allocations: 3.793 MiB)
Running: chebyshev_quadrature with k=3
  0.166239 seconds (105.07 k allocations: 3.639 MiB)
Running: chebyshev_quadrature with k=4
  0.164457 seconds (87.68 k allocations: 3.285 MiB)
Running: jacobi_quadrature with α=β=1
  1.979057 seconds (536.08 k allocations: 163.492 MiB, 9.19% gc time)
Running: legendre_quadrature
  0.153979 seconds (62.20 k allocations: 3.468 MiB)
Running: lobatto_quadrature
  0.020899 seconds (16.68 k allocations: 1.028 MiB)
Running: radau_quadrature
  0.027365 seconds (16.67 k allocations: 1.028 MiB)
Running: rectangle_rule_left
 30.534659 seconds (471.41 M allocations: 7.025 GiB, 2.70% gc time)
Running: rectangle_rule_midpoint
  0.000070 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.190397 seconds (476.96 M allocations: 7.107 GiB, 1.79% gc time)
Running: rombergs_method
  0.345918 seconds (360.19 k allocations: 20.308 MiB, 1.06% gc time)
Running: simpsons_rule
  0.000093 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.058164 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.054088 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028776 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.092847 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.105471 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.105803 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.133352 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.369680 seconds (379.01 k allocations: 19.794 MiB, 8.38% gc time)
Running: legendre_quadrature
  0.059383 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000095 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000356 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000504 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.055438 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000035 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024812 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023630 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065304 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.201884 seconds (240.25 k allocations: 13.487 MiB)
Running: chebyshev_quadrature with k=2
  0.239757 seconds (295.45 k allocations: 16.590 MiB, 7.45% gc time)
Running: chebyshev_quadrature with k=3
  0.217814 seconds (275.41 k allocations: 14.984 MiB)
Running: chebyshev_quadrature with k=4
  0.209099 seconds (275.44 k allocations: 14.879 MiB)
Running: jacobi_quadrature with α=β=1
  2.645775 seconds (465.77 k allocations: 164.227 MiB, 2.68% gc time)
Running: legendre_quadrature
  0.169218 seconds (193.00 k allocations: 11.107 MiB)
Running: lobatto_quadrature
  0.262870 seconds (204.21 k allocations: 11.810 MiB, 7.17% gc time)
Running: radau_quadrature
  0.176521 seconds (204.21 k allocations: 11.829 MiB)
Running: rectangle_rule_left
  1.163822 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027295 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.084349 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.135551 seconds (139.91 k allocations: 8.059 MiB)
Running: simpsons_rule
  0.030425 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.041576 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.027519 seconds (45.20 k allocations: 1.824 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044827 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.300761 seconds (247.35 k allocations: 13.587 MiB, 22.18% gc time)
Running: chebyshev_quadrature with k=2
  0.219423 seconds (303.07 k allocations: 16.583 MiB)
Running: chebyshev_quadrature with k=3
  0.240723 seconds (282.82 k allocations: 15.006 MiB)
Running: chebyshev_quadrature with k=4
  0.245790 seconds (282.86 k allocations: 15.011 MiB, 8.02% gc time)
Running: hermite_quadrature with k=2
 15.548709 seconds (22.12 M allocations: 1.147 GiB, 9.58% gc time)
Running: jacobi_quadrature with α=β=1
  0.479713 seconds (475.81 k allocations: 50.445 MiB, 12.41% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.225002 seconds (288.35 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.162068 seconds (200.06 k allocations: 11.455 MiB)
Running: lobatto_quadrature
  0.393074 seconds (225.72 k allocations: 37.627 MiB, 43.92% gc time)
Running: radau_quadrature
  0.230353 seconds (222.31 k allocations: 30.290 MiB)
Running: rectangle_rule_left
  0.065454 seconds (22.91 k allocations: 1.353 MiB, 34.25% gc time)
Running: rectangle_rule_midpoint
  0.038469 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.034172 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.144739 seconds (142.73 k allocations: 8.138 MiB)
Running: simpsons_rule
  0.047426 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.054727 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.041429 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039129 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.181011 seconds (242.48 k allocations: 13.356 MiB)
Running: chebyshev_quadrature with k=2
  0.230741 seconds (297.80 k allocations: 16.314 MiB, 9.72% gc time)
Running: chebyshev_quadrature with k=3
  0.201307 seconds (277.68 k allocations: 14.769 MiB)
Running: chebyshev_quadrature with k=4
  0.209277 seconds (277.71 k allocations: 14.784 MiB)
Running: hermite_quadrature with k=2
  0.163807 seconds (177.71 k allocations: 10.157 MiB, 11.88% gc time)
Running: jacobi_quadrature with α=β=1
 10.397595 seconds (468.37 k allocations: 1.176 GiB, 14.69% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.231005 seconds (283.21 k allocations: 15.693 MiB, 6.85% gc time)
Running: legendre_quadrature
  0.153321 seconds (195.23 k allocations: 11.220 MiB)
Running: lobatto_quadrature
  0.208646 seconds (216.08 k allocations: 23.336 MiB, 6.30% gc time)
Running: radau_quadrature
  0.199822 seconds (215.23 k allocations: 21.263 MiB)
Running: rectangle_rule_left
  0.019844 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.023760 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.024170 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.110199 seconds (138.20 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.033139 seconds (33.49 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.039214 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.028736 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.050622 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.323389 seconds (240.81 k allocations: 13.567 MiB, 9.40% gc time)
Running: chebyshev_quadrature with k=2
  0.245524 seconds (296.03 k allocations: 16.656 MiB)
Running: chebyshev_quadrature with k=3
  0.261276 seconds (276.01 k allocations: 14.981 MiB, 7.34% gc time)
Running: chebyshev_quadrature with k=4
  0.200036 seconds (276.04 k allocations: 14.817 MiB)
Running: jacobi_quadrature with α=β=1
  2.579861 seconds (466.42 k allocations: 195.280 MiB, 7.25% gc time)
Running: legendre_quadrature
  0.165597 seconds (193.56 k allocations: 11.134 MiB, 9.82% gc time)
Running: lobatto_quadrature
  0.169780 seconds (204.78 k allocations: 11.853 MiB)
Running: radau_quadrature
  0.172014 seconds (204.78 k allocations: 11.846 MiB)
Running: rectangle_rule_left
  0.296958 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.024255 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.105119 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.128513 seconds (151.28 k allocations: 8.811 MiB)
Running: simpsons_rule
  0.033090 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.036798 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.042873 seconds (46.19 k allocations: 1.861 MiB, 42.22% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034938 seconds (33.23 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.182545 seconds (241.38 k allocations: 13.511 MiB)
Running: chebyshev_quadrature with k=2
  0.239053 seconds (296.64 k allocations: 16.571 MiB)
Running: chebyshev_quadrature with k=3
  0.230276 seconds (276.55 k allocations: 14.964 MiB, 8.99% gc time)
Running: chebyshev_quadrature with k=4
  0.207102 seconds (276.58 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.487875 seconds (467.08 k allocations: 149.921 MiB, 13.52% gc time)
Running: legendre_quadrature
  0.178829 seconds (194.13 k allocations: 11.150 MiB, 10.21% gc time)
Running: lobatto_quadrature
  0.172153 seconds (205.35 k allocations: 11.859 MiB)
Running: radau_quadrature
  0.178760 seconds (205.34 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  1.416440 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.025035 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.167307 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.130027 seconds (141.22 k allocations: 8.214 MiB)
Running: simpsons_rule
  0.033655 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.034715 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.028254 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.203257 seconds (152.85 k allocations: 9.083 MiB, 28.51% gc time)
Running: chebyshev_quadrature with k=1
  0.132417 seconds (91.24 k allocations: 3.295 MiB)
Running: chebyshev_quadrature with k=2
  0.167794 seconds (127.01 k allocations: 3.988 MiB)
Running: chebyshev_quadrature with k=3
  0.153434 seconds (115.58 k allocations: 3.818 MiB)
Running: chebyshev_quadrature with k=4
  0.253366 seconds (95.11 k allocations: 3.411 MiB)
Running: jacobi_quadrature with α=β=1
  2.241248 seconds (509.85 k allocations: 169.310 MiB, 23.71% gc time)
Running: legendre_quadrature
  0.106238 seconds (38.34 k allocations: 2.107 MiB)
Running: lobatto_quadrature
  0.000075 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000053 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.204458 seconds (590.00 M allocations: 8.792 GiB, 2.02% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.617725 seconds (592.75 M allocations: 8.833 GiB, 1.97% gc time)
Running: rombergs_method
  0.134408 seconds (41.88 k allocations: 2.257 MiB)
Running: simpsons_rule
  0.000044 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029335 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021545 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.756801 seconds (629.34 M allocations: 9.388 GiB, 3.29% gc time)
Running: chebyshev_quadrature with k=1
  0.538879 seconds (439.10 k allocations: 24.318 MiB, 2.64% gc time)
Running: chebyshev_quadrature with k=2
 13.569485 seconds (496.46 k allocations: 4.042 GiB, 3.83% gc time)
Running: chebyshev_quadrature with k=3
  6.346833 seconds (290.50 k allocations: 1.643 GiB, 5.14% gc time)
Running: chebyshev_quadrature with k=4
  7.516689 seconds (290.53 k allocations: 2.262 GiB, 2.58% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 54.768038 seconds (505.16 k allocations: 13.255 GiB, 3.55% gc time)
Running: legendre_quadrature.
  5.706171 seconds (232.79 k allocations: 1.976 GiB, 2.75% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.398301 seconds (8.24 M allocations: 13.384 GiB, 4.90% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.646367 seconds (7.24 M allocations: 13.369 GiB, 3.90% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.667497 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.051299 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.728632 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.487364 seconds (456.56 k allocations: 153.694 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.191869 seconds (600.04 M allocations: 8.943 GiB, 8.57% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.412760 seconds (600.05 M allocations: 8.944 GiB, 7.88% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.440715 seconds (600.04 M allocations: 8.943 GiB, 8.31% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.061353 seconds (182.51 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.208651 seconds (257.97 k allocations: 14.018 MiB)
Running: chebyshev_quadrature with k=2
  0.204606 seconds (284.13 k allocations: 15.178 MiB)
Running: chebyshev_quadrature with k=3
  0.203014 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.270381 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.457015 seconds (405.38 k allocations: 35.863 MiB)
Running: laguerre_quadrature with k=2
  0.249833 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.129773 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.037290 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.034524 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.059675 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.048935 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.055095 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.230643 seconds (170.77 k allocations: 9.720 MiB)
Running: simpsons_rule
  0.001903 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053244 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.224424 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002064 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.104085 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.105681 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.113356 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.110170 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  5.861146 seconds (402.18 k allocations: 906.566 MiB, 6.02% gc time)
Running: legendre_quadrature
  0.077343 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000208 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000156 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.444500 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000410 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.253589 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070955 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000791 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000788 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.099980 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.096801 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.106921 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.109228 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.907850 seconds (388.46 k allocations: 253.809 MiB)
Running: legendre_quadrature
  0.063025 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000135 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000086 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.814835 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001084 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.482648 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.080224 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001888 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
