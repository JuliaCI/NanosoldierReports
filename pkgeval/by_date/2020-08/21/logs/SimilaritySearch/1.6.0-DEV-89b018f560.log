Julia Version 1.6.0-DEV.689
Commit 89b018f560 (2020-08-21 13:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Compat ───────────── v3.14.0
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.18.0
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
  Installed OrderedCollections ─ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_ZgtRqm/Project.toml`
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ZgtRqm/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(4, 0.023667693f0), Item(13, 0.049096823f0), Item(38, 0.056803823f0), Item(49, 0.07023251f0)])
Vsorted = Item[Item(4, 0.023667693f0), Item(13, 0.049096823f0), Item(38, 0.056803823f0), Item(49, 0.07023251f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004748940467834473, 0.004238700866699219, 301.0, 48.70184755232185))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0044191281000773115, 0.005601270993550619, 301.0, 71.11508774757385))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.008697724342346192, 0.004769770304361979, 301.0, 39.338786244392395))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0051198641459147135, 0.005730032920837402, 301.0, 8.771655743432348))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004908450444539388, 0.0061209678649902345, 301.0, 43.942806113511324))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018082459767659504, 0.00014803409576416015, 301.0, 174.67559982836246))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 0.0004593690236409505, 0.010878300666809082, 300.0, 29.270003782585263)
p = PerformanceResult(1.0, 1.0, 1.0, 6.549358367919922e-5, 3.3068656921386716e-5, 300.0, 29.270003782585263)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00689388116200765, 0.004120937983194987, 300.0, 1.6908297546033282)
p = PerformanceResult(1.0, 1.0, 1.0, 4.700289832221138e-5, 1.9137064615885416e-5, 300.0, 1.6908297546033282)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 0.0004593690236409505, 0.010878300666809082, 300.0, 29.270003782585263), PerformanceResult(1.0, 1.0, 1.0, 6.549358367919922e-5, 3.3068656921386716e-5, 300.0, 29.270003782585263), PerformanceResult(1.0, 1.0, 1.0, 0.00689388116200765, 0.004120937983194987, 300.0, 1.6908297546033282), PerformanceResult(1.0, 1.0, 1.0, 4.700289832221138e-5, 1.9137064615885416e-5, 300.0, 1.6908297546033282))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007742913564046224, 0.006316526730855306, 347.6666666666667, 28608.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007459608713785807, 0.003592967987060547, 302.8666666666667, 7000.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8811225891113283e-5, 1.129309336344401e-5, 95.73333333333333, 48.6902707433328))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.7863184611002603e-5, 2.1831194559733072e-5, 85.13333333333334, 71.09507155418396))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4310747782389323e-5, 1.5894571940104168e-5, 90.93333333333334, 39.33356249332428))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 6.761550903320313e-5, 0.00013879934946695963, 96.9, 43.92886360734701))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8133333333333332, 0.8133333333333332, 0.8133333333333332, 4.7651926676432293e-5, 0.00011676947275797526, 70.83333333333333, 184.03316904604435))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-22T06:38:12.213
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9194166666666664, 0.9149999999999998, 0.9170409356725147, 2.3119449615478515e-5, 2.4220943450927735e-5, 153.72, 52.33379711024463))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2492408752441407e-5, 5.945205688476563e-5, 157.55, 0.0))
*** advance 1 from 1000; 2020-08-22T06:38:13.006
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9022777777777782, 0.9000000000000002, 0.9010350877192986, 2.349376678466797e-5, 6.628990173339844e-5, 152.87, 80.0227873409167))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.309560775756836e-5, 1.9218921661376953e-5, 156.54, 0.0))
*** advance 1 from 1000; 2020-08-22T06:38:13.724
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8766388888888887, 0.8739999999999999, 0.8751988304093565, 2.4652481079101564e-5, 3.268003463745117e-5, 153.12, 43.858865457586944))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3336410522460936e-5, 2.8569698333740234e-5, 156.69, 0.0))
*** advance 1 from 1000; 2020-08-22T06:38:14.410
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.914638888888889, 0.9120000000000001, 0.9131988304093568, 0.000100555419921875, 0.0005058503150939942, 152.89, 48.033786070067436))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001012277603149414, 0.0005496501922607422, 156.66, 0.0))
*** advance 1 from 1000; 2020-08-22T06:38:15.009
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9720000000000003, 0.9720000000000003, 0.9720000000000003, 9.84954833984375e-5, 0.00040098190307617186, 168.58, 196.0575317637995))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010010480880737305, 0.0004427909851074219, 174.02, 0.0))
*** advance 1 from 1000; 2020-08-22T06:38:16.194
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9194166666666664, 0.9149999999999998, 0.9170409356725147, 3.5350322723388674e-5, 7.092952728271484e-5, 153.72, 52.34517719573341))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.159999847412109e-5, 8.461952209472657e-5, 157.55, 0.015476098546059802))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:18.117
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7240000000000002, 0.7240000000000002, 0.7240000000000002, 0.0014812803268432616, 8.066892623901368e-5, 201.05, 191.50000222027302))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:19.145
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.74, 0.74, 0.74, 0.0018095135688781737, 8.131980895996093e-5, 205.43, 107.72857344895601))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:20.056
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6639999999999999, 0.6639999999999999, 0.6639999999999999, 0.0022914886474609377, 7.848978042602539e-5, 238.25, 2.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:21.188
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.0020804810523986817, 2.5908946990966797e-5, 207.96, 613.8000199496746))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:22.491
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6030000000000001, 0.6030000000000001, 0.6030000000000001, 0.0016960549354553224, 0.0006680798530578614, 263.0, 2338.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:23.639
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37799999999999995, 0.37799999999999995, NaN, 0.0023210740089416506, 0.0006404805183410644, 250.3, 3692.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-22T06:38:24.859
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5959999999999999, 0.5959999999999999, 0.5959999999999999, 0.00238739013671875, 3.562211990356445e-5, 248.34, 2368.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.037837837837838, conf: {"restarts":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776785714285716,"seconds":6.504356861114502e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.671875,"distances_sum":745.736864387989}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0425339366515836, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.6328125,"distances_sum":743.3838883042336}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0425339366515836,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.6328125,"distances_sum":743.3838883042336}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0425339366515836,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.6328125,"distances_sum":743.3838883042336}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.1639344262295084, conf: {"restarts":6}, perf: {"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.9963830709457397e-5,"exhaustive_search_seconds":6.938353180885315e-6,"evaluations":45.75,"distances_sum":277.6637778766453}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1639344262295084,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.9963830709457397e-5,"exhaustive_search_seconds":6.938353180885315e-6,"evaluations":45.75,"distances_sum":277.6637778766453}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1639344262295084,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.9963830709457397e-5,"exhaustive_search_seconds":6.938353180885315e-6,"evaluations":45.75,"distances_sum":277.6637778766453}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.1639344262295084,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.9963830709457397e-5,"exhaustive_search_seconds":6.938353180885315e-6,"evaluations":45.75,"distances_sum":277.6637778766453}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555549, conf: {"restarts":16}, perf: {"precision":0.8758680555555549,"recall":0.8758680555555549,"f1":0.8758680555555549,"seconds":6.317906081676483e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":166.4375,"distances_sum":123.8802086301148}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8975694444444433, conf: {"restarts":9}, perf: {"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.4576823711395264e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":122.234375,"distances_sum":122.77076173201203}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111104, conf: {"restarts":13}, perf: {"precision":0.8767361111111104,"recall":0.8767361111111104,"f1":0.8767361111111104,"seconds":5.706027150154114e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":146.140625,"distances_sum":124.10445412993431}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8975694444444433,"state":{"restarts":9},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.4576823711395264e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":122.234375,"distances_sum":122.77076173201203}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8975694444444433,"state":{"restarts":9},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.4576823711395264e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":122.234375,"distances_sum":122.77076173201203}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8975694444444433,"state":{"restarts":9},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.4576823711395264e-5,"exhaustive_search_seconds":2.7125701308250427e-5,"evaluations":122.234375,"distances_sum":122.77076173201203}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8420138888888876, conf: {"restarts":11}, perf: {"precision":0.8420138888888876,"recall":0.8420138888888876,"f1":0.8420138888888876,"seconds":0.00011442601680755615,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":222.5,"distances_sum":56.785921494010836}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333324, conf: {"restarts":1}, perf: {"precision":0.8489583333333324,"recall":0.8489583333333324,"f1":0.8489583333333324,"seconds":6.686896085739136e-5,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":123.546875,"distances_sum":56.70790664339438}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444436, conf: {"restarts":16}, perf: {"precision":0.8506944444444436,"recall":0.8506944444444436,"f1":0.8506944444444436,"seconds":0.00013384036719799042,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":258.4296875,"distances_sum":56.837862212676555}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8394097222222214, conf: {"restarts":20}, perf: {"precision":0.8394097222222214,"recall":0.8394097222222214,"f1":0.8394097222222214,"seconds":0.00015814974904060364,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":289.75,"distances_sum":57.049533324781805}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333323, conf: {"restarts":17}, perf: {"precision":0.8489583333333323,"recall":0.8489583333333323,"f1":0.8489583333333323,"seconds":0.00016610696911811829,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":268.0078125,"distances_sum":56.67672573076561}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666657, conf: {"restarts":12}, perf: {"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":0.00013074837625026703,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":223.0234375,"distances_sum":56.65328109683469}, best_list's length: 12, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666657,"state":{"restarts":12},"perf":{"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":0.00013074837625026703,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":223.0234375,"distances_sum":56.65328109683469}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888877, conf: {"restarts":21}, perf: {"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.0001547057181596756,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":301.8984375,"distances_sum":56.573286967817694}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.855902777777777, conf: {"restarts":18}, perf: {"precision":0.855902777777777,"recall":0.855902777777777,"f1":0.855902777777777,"seconds":0.00013816729187965393,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":272.78125,"distances_sum":56.464057192672044}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888877,"state":{"restarts":21},"perf":{"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.0001547057181596756,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":301.8984375,"distances_sum":56.573286967817694}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8576388888888877,"state":{"restarts":21},"perf":{"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.0001547057181596756,"exhaustive_search_seconds":0.0003851093351840973,"evaluations":301.8984375,"distances_sum":56.573286967817694}}, n: 9999
added n=10000, neighborhood=6, IHCSearch(21), SatNeighborhood(32), 2020-08-22T06:38:33.033
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2307, 0.018586852f0), Item(8853, 0.043889254f0), Item(3038, 0.046954855f0), Item(8208, 0.05092557f0), Item(5607, 0.051899374f0), Item(4269, 0.05496451f0), Item(816, 0.06081075f0), Item(8933, 0.06494322f0), Item(5172, 0.06504982f0), Item(6521, 0.066086814f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0267379679144386,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9825892857142857,"seconds":0.0030088014900684357,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.765625,"distances_sum":758.3422891199589}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0267379679144386,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9825892857142857,"seconds":0.0030088014900684357,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.765625,"distances_sum":758.3422891199589}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.2097264437689965, conf: {"bsize":2}, perf: {"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":1.0862946510314941e-5,"exhaustive_search_seconds":5.250796675682068e-6,"evaluations":30.84375,"distances_sum":273.23231396079063}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.2097264437689965,"state":{"bsize":2},"perf":{"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":1.0862946510314941e-5,"exhaustive_search_seconds":5.250796675682068e-6,"evaluations":30.84375,"distances_sum":273.23231396079063}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.2097264437689965,"state":{"bsize":2},"perf":{"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":1.0862946510314941e-5,"exhaustive_search_seconds":5.250796675682068e-6,"evaluations":30.84375,"distances_sum":273.23231396079063}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.2097264437689965,"state":{"bsize":2},"perf":{"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":1.0862946510314941e-5,"exhaustive_search_seconds":5.250796675682068e-6,"evaluations":30.84375,"distances_sum":273.23231396079063}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.8296920242169,"state":{"bsize":2},"perf":{"precision":0.9305555555555547,"recall":0.9305555555555547,"f1":0.9305555555555547,"seconds":3.141351044178009e-5,"exhaustive_search_seconds":3.223493695259094e-5,"evaluations":59.359375,"distances_sum":126.07664632797241}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.8296920242169,"state":{"bsize":2},"perf":{"precision":0.9305555555555547,"recall":0.9305555555555547,"f1":0.9305555555555547,"seconds":3.141351044178009e-5,"exhaustive_search_seconds":3.223493695259094e-5,"evaluations":59.359375,"distances_sum":126.07664632797241}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.33018867924528, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":5.140155553817749e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":106.0,"distances_sum":54.70821699267253}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.53738215303662, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.233660340309143e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":106.8984375,"distances_sum":54.699389898683876}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.33018867924528,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":5.140155553817749e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":106.0,"distances_sum":54.70821699267253}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.45549815498156, conf: {"bsize":3}, perf: {"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":4.945509135723114e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":105.859375,"distances_sum":54.82369661470875}, best_list's length: 11, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.97840269966254, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.551241338253021e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":104.1796875,"distances_sum":54.699389898683876}, best_list's length: 12, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 102.32784419285883, conf: {"bsize":5}, perf: {"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":4.958920180797577e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":98.6796875,"distances_sum":54.71165997674689}, best_list's length: 13, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":102.32784419285883,"state":{"bsize":5},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":4.958920180797577e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":98.6796875,"distances_sum":54.71165997674689}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":102.32784419285883,"state":{"bsize":5},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":4.958920180797577e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":98.6796875,"distances_sum":54.71165997674689}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":102.32784419285883,"state":{"bsize":5},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":4.958920180797577e-5,"exhaustive_search_seconds":0.0003608670085668564,"evaluations":98.6796875,"distances_sum":54.71165997674689}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-08-22T06:38:36.575
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7333, 0.026954725f0), Item(40, 0.039268967f0), Item(5430, 0.051042996f0), Item(7631, 0.052183423f0), Item(2525, 0.052488327f0), Item(4442, 0.055092666f0), Item(9557, 0.06453514f0), Item(163, 0.06832978f0), Item(2876, 0.068516776f0), Item(9066, 0.072584525f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
