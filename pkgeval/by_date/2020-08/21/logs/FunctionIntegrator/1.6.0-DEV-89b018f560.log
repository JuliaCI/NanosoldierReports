Julia Version 1.6.0-DEV.689
Commit 89b018f560 (2020-08-21 13:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_Tno022/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Tno022/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.204875 seconds (1.35 M allocations: 71.145 MiB, 1.71% gc time)
Running: chebyshev_quadrature with k=1
  1.908775 seconds (2.24 M allocations: 128.324 MiB, 1.84% gc time)
Running: chebyshev_quadrature with k=2
  0.352912 seconds (424.54 k allocations: 24.359 MiB, 11.56% gc time)
Running: chebyshev_quadrature with k=3
  0.376358 seconds (544.36 k allocations: 29.857 MiB, 3.85% gc time)
Running: chebyshev_quadrature with k=4
  0.331008 seconds (487.28 k allocations: 26.381 MiB)
Running: jacobi_quadrature with α=β=1
 40.903913 seconds (39.35 M allocations: 3.137 GiB, 9.57% gc time)
Running: laguerre_quadrature with k=1
  3.335962 seconds (3.33 M allocations: 185.493 MiB, 4.95% gc time)
Running: legendre_quadrature
  0.258304 seconds (214.75 k allocations: 12.296 MiB)
Running: lobatto_quadrature
  0.327289 seconds (343.09 k allocations: 20.571 MiB)
Running: radau_quadrature
  0.308002 seconds (325.44 k allocations: 19.576 MiB, 7.99% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 82.447282 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: rectangle_rule_midpoint.
  0.135784 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.055667 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rombergs_method
  0.571337 seconds (751.60 k allocations: 43.264 MiB, 5.72% gc time)
Running: simpsons_rule
  0.039964 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.095363 seconds (113.14 k allocations: 5.977 MiB)
Running: trapezoidal_rule
  0.307842 seconds (1.52 M allocations: 25.801 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.078988 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.464925 seconds (258.75 k allocations: 13.045 MiB, 6.03% gc time)
Running: chebyshev_quadrature with k=2
  0.157319 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.181997 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.184296 seconds (65.31 k allocations: 2.151 MiB)
Running: jacobi_quadrature with α=β=1
  2.281600 seconds (513.65 k allocations: 162.394 MiB, 12.18% gc time)
Running: legendre_quadrature
  0.162219 seconds (43.27 k allocations: 2.485 MiB)
Running: lobatto_quadrature
  0.021962 seconds (16.84 k allocations: 1.040 MiB)
Running: radau_quadrature
  0.021496 seconds (16.82 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 29.015288 seconds (471.41 M allocations: 7.025 GiB, 2.61% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.749941 seconds (476.96 M allocations: 7.107 GiB, 1.85% gc time)
Running: rombergs_method
  0.374090 seconds (339.02 k allocations: 19.221 MiB, 0.99% gc time)
Running: simpsons_rule
  0.000036 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064361 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.053504 seconds (18.34 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026528 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.107907 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.102808 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.122932 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.099921 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.335478 seconds (378.59 k allocations: 19.803 MiB, 8.14% gc time)
Running: legendre_quadrature
  0.063948 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000112 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000074 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000430 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000442 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.058289 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000065 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028072 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021206 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.061342 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.185120 seconds (239.83 k allocations: 13.471 MiB)
Running: chebyshev_quadrature with k=2
  0.248499 seconds (295.00 k allocations: 16.591 MiB, 10.13% gc time)
Running: chebyshev_quadrature with k=3
  0.210572 seconds (274.98 k allocations: 14.942 MiB)
Running: chebyshev_quadrature with k=4
  0.226443 seconds (275.01 k allocations: 14.857 MiB)
Running: jacobi_quadrature with α=β=1
  1.952653 seconds (465.20 k allocations: 164.173 MiB, 4.81% gc time)
Running: legendre_quadrature
  0.154522 seconds (192.58 k allocations: 11.082 MiB)
Running: lobatto_quadrature
  0.191538 seconds (203.78 k allocations: 11.787 MiB, 8.69% gc time)
Running: radau_quadrature
  0.165558 seconds (203.78 k allocations: 11.795 MiB)
Running: rectangle_rule_left
  1.017522 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.017786 seconds (25.91 k allocations: 1.614 MiB)
Running: rectangle_rule_right
  0.807437 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.118797 seconds (139.53 k allocations: 8.040 MiB)
Running: simpsons_rule
  0.023820 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.029422 seconds (44.60 k allocations: 2.786 MiB)
Running: trapezoidal_rule
  0.027924 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039587 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.217666 seconds (246.92 k allocations: 13.562 MiB, 8.82% gc time)
Running: chebyshev_quadrature with k=2
  0.215263 seconds (302.62 k allocations: 16.552 MiB)
Running: chebyshev_quadrature with k=3
  0.210854 seconds (282.39 k allocations: 14.975 MiB)
Running: chebyshev_quadrature with k=4
  0.243590 seconds (282.43 k allocations: 14.977 MiB, 8.50% gc time)
Running: hermite_quadrature with k=2
 15.881438 seconds (22.11 M allocations: 1.147 GiB, 9.05% gc time)
Running: jacobi_quadrature with α=β=1
  0.556697 seconds (475.20 k allocations: 50.419 MiB, 13.57% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.238309 seconds (287.89 k allocations: 15.877 MiB)
Running: legendre_quadrature
  0.162952 seconds (199.64 k allocations: 11.432 MiB)
Running: lobatto_quadrature
  0.283384 seconds (225.19 k allocations: 37.597 MiB, 8.60% gc time)
Running: radau_quadrature
  0.209030 seconds (221.78 k allocations: 30.270 MiB)
Running: rectangle_rule_left
  0.031211 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.030435 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.046252 seconds (19.46 k allocations: 1.165 MiB, 45.15% gc time)
Running: rombergs_method
  0.127113 seconds (142.35 k allocations: 8.101 MiB)
Running: simpsons_rule
  0.041780 seconds (41.23 k allocations: 2.156 MiB)
Running: simpsons38_rule
  0.045251 seconds (59.97 k allocations: 3.194 MiB)
Running: trapezoidal_rule
  0.029939 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.058423 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.194052 seconds (242.05 k allocations: 13.329 MiB)
Running: chebyshev_quadrature with k=2
  0.244125 seconds (297.34 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.251182 seconds (277.25 k allocations: 14.746 MiB, 10.60% gc time)
Running: chebyshev_quadrature with k=4
  0.220655 seconds (277.29 k allocations: 14.748 MiB)
Running: hermite_quadrature with k=2
  0.151317 seconds (177.31 k allocations: 10.134 MiB)
Running: jacobi_quadrature with α=β=1
  8.279742 seconds (467.80 k allocations: 1.176 GiB, 10.12% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.214653 seconds (282.75 k allocations: 15.668 MiB)
Running: legendre_quadrature
  0.133738 seconds (194.81 k allocations: 11.207 MiB)
Running: lobatto_quadrature
  0.198776 seconds (215.55 k allocations: 23.308 MiB)
Running: radau_quadrature
  0.203785 seconds (214.70 k allocations: 21.244 MiB)
Running: rectangle_rule_left
  0.029065 seconds (20.45 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.028386 seconds (26.63 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.025733 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.128692 seconds (137.82 k allocations: 7.902 MiB)
Running: simpsons_rule
  0.055584 seconds (33.47 k allocations: 1.930 MiB, 41.34% gc time)
Running: simpsons38_rule
  0.040994 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.029743 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032324 seconds (32.45 k allocations: 1.955 MiB)
Running: chebyshev_quadrature with k=1
  0.255002 seconds (240.38 k allocations: 13.544 MiB)
Running: chebyshev_quadrature with k=2
  0.226313 seconds (295.58 k allocations: 16.630 MiB)
Running: chebyshev_quadrature with k=3
  0.254665 seconds (275.58 k allocations: 14.971 MiB, 8.44% gc time)
Running: chebyshev_quadrature with k=4
  0.228776 seconds (275.62 k allocations: 14.789 MiB)
Running: jacobi_quadrature with α=β=1
  2.987112 seconds (465.84 k allocations: 195.234 MiB, 4.63% gc time)
Running: legendre_quadrature
  0.184058 seconds (193.14 k allocations: 11.131 MiB)
Running: lobatto_quadrature
  0.205263 seconds (204.35 k allocations: 11.816 MiB)
Running: radau_quadrature
  0.190675 seconds (204.35 k allocations: 11.818 MiB)
Running: rectangle_rule_left
  0.300501 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.027712 seconds (26.27 k allocations: 1.634 MiB)
Running: rectangle_rule_right
  0.117075 seconds (18.62 k allocations: 1.125 MiB)
Running: rombergs_method
  0.169422 seconds (150.88 k allocations: 8.790 MiB, 11.29% gc time)
Running: simpsons_rule
  0.034965 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.039056 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.028926 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.039634 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.222870 seconds (240.95 k allocations: 13.495 MiB)
Running: chebyshev_quadrature with k=2
  0.293558 seconds (296.18 k allocations: 16.596 MiB, 7.53% gc time)
Running: chebyshev_quadrature with k=3
  0.218754 seconds (276.12 k allocations: 14.923 MiB)
Running: chebyshev_quadrature with k=4
  0.217723 seconds (276.15 k allocations: 14.970 MiB)
Running: jacobi_quadrature with α=β=1
  1.120477 seconds (466.51 k allocations: 149.966 MiB, 5.73% gc time)
Running: legendre_quadrature
  0.162917 seconds (193.71 k allocations: 11.147 MiB)
Running: lobatto_quadrature
  0.191592 seconds (204.93 k allocations: 11.833 MiB)
Running: radau_quadrature
  0.191148 seconds (204.92 k allocations: 11.841 MiB)
Running: rectangle_rule_left
  1.121426 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.029987 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.291007 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.122936 seconds (140.83 k allocations: 8.101 MiB, 13.98% gc time)
Running: simpsons_rule
  0.031709 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.028429 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.030555 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.159153 seconds (152.73 k allocations: 9.078 MiB)
Running: chebyshev_quadrature with k=1
  0.137917 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.155165 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.171444 seconds (93.21 k allocations: 2.682 MiB)
Running: chebyshev_quadrature with k=4
  0.168635 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  2.050709 seconds (487.28 k allocations: 168.200 MiB, 8.95% gc time)
Running: legendre_quadrature
  0.135125 seconds (19.25 k allocations: 1.113 MiB)
Running: lobatto_quadrature
  0.000104 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000045 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.934633 seconds (590.00 M allocations: 8.792 GiB, 3.16% gc time)
Running: rectangle_rule_midpoint
  0.000042 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.670565 seconds (592.75 M allocations: 8.833 GiB, 3.17% gc time)
Running: rombergs_method
  0.143727 seconds (21.09 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000047 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033248 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.026136 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.405471 seconds (629.34 M allocations: 9.388 GiB, 4.85% gc time)
Running: chebyshev_quadrature with k=1
  0.553777 seconds (438.73 k allocations: 24.253 MiB, 5.11% gc time)
Running: chebyshev_quadrature with k=2
 13.820907 seconds (496.07 k allocations: 4.042 GiB, 4.55% gc time)
Running: chebyshev_quadrature with k=3
  6.477467 seconds (290.07 k allocations: 1.643 GiB, 4.56% gc time)
Running: chebyshev_quadrature with k=4
  7.958218 seconds (290.10 k allocations: 2.262 GiB, 2.43% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 47.362403 seconds (504.75 k allocations: 13.255 GiB, 4.07% gc time)
Running: legendre_quadrature.
  6.270920 seconds (232.52 k allocations: 1.977 GiB, 3.43% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.855312 seconds (8.24 M allocations: 13.384 GiB, 4.13% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.533254 seconds (7.24 M allocations: 13.369 GiB, 2.87% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.979426 seconds (23.33 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.980666 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.953906 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.230924 seconds (455.85 k allocations: 153.658 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.838321 seconds (600.04 M allocations: 8.943 GiB, 8.61% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.322200 seconds (600.05 M allocations: 8.944 GiB, 8.04% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.545928 seconds (600.04 M allocations: 8.943 GiB, 8.56% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.055879 seconds (182.49 k allocations: 4.516 MiB)
Running: chebyshev_quadrature with k=1
  0.239707 seconds (257.54 k allocations: 13.995 MiB)
Running: chebyshev_quadrature with k=2
  0.217490 seconds (283.70 k allocations: 15.185 MiB)
Running: chebyshev_quadrature with k=3
  0.179082 seconds (260.23 k allocations: 13.437 MiB)
Running: chebyshev_quadrature with k=4
  0.236730 seconds (260.26 k allocations: 13.434 MiB)
Running: jacobi_quadrature with α=β=1
  0.394761 seconds (404.84 k allocations: 35.832 MiB)
Running: laguerre_quadrature with k=2
  0.192903 seconds (187.56 k allocations: 10.852 MiB)
Running: legendre_quadrature
  0.126944 seconds (151.36 k allocations: 8.368 MiB)
Running: lobatto_quadrature
  0.036285 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.032630 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.056878 seconds (19.80 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.050290 seconds (26.75 k allocations: 1.639 MiB)
Running: rectangle_rule_right
  0.049362 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.266277 seconds (178.36 k allocations: 10.180 MiB)
Running: simpsons_rule
  0.001921 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.056246 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.194796 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002058 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.109361 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.124953 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.128775 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.127276 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.199572 seconds (401.68 k allocations: 906.516 MiB, 7.66% gc time)
Running: legendre_quadrature
  0.087143 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000188 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000154 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.534863 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000433 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.268830 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070149 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000779 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000735 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.125220 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.128051 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.141119 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.146294 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.165013 seconds (387.96 k allocations: 253.739 MiB)
Running: legendre_quadrature
  0.074473 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000048 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.819263 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001071 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.712235 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071977 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001768 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
