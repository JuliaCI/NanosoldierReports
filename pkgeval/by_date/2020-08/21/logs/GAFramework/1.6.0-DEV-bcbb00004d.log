Julia Version 1.6.0-DEV.680
Commit bcbb00004d (2020-08-20 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_E2Kym5/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_E2Kym5/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723234308567088
curgen: 20 fitness: 0.21723234308567088
curgen: 30 fitness: 0.21723234308567088
curgen: 40 fitness: 0.21723234308567088
curgen: 50 fitness: 0.21723234308567088
CoordinateCreature{Vector{Float64}}([-0.22237788346069753], -0.21723234308567088) -0.22237788346069753 -0.21723234308567088
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25807118598992
curgen: 100 fitness: 3.2582355207579234
curgen: 150 fitness: 3.2583738155487696
curgen: 200 fitness: 3.258393004120732
curgen: 250 fitness: 3.2584063977865614
curgen: 300 fitness: 3.258412453899201
curgen: 350 fitness: 3.258424975371585
curgen: 400 fitness: 3.2584280148602365
curgen: 450 fitness: 3.258428748489562
curgen: 500 fitness: 3.258451767034875
CoordinateCreature{Vector{Float64}}([-0.22254114188365, -0.22251974230573443, 0.223213580900933, 0.22272860578092915, 0.22224835066483828, -0.22304368430993282, 0.22283018410412123, 0.22219779878644733, -0.22226601421334222, -0.22243666584866648, 0.22244804579410288, 0.22240921150308965, -0.22252364680281972, 0.22235001966947213, -0.2226749479702047], -3.258451767034875) [-0.22254114188365, -0.22251974230573443, 0.223213580900933, 0.22272860578092915, 0.22224835066483828, -0.22304368430993282, 0.22283018410412123, 0.22219779878644733, -0.22226601421334222, -0.22243666584866648, 0.22244804579410288, 0.22240921150308965, -0.22252364680281972, 0.22235001966947213, -0.2226749479702047] -3.258451767034875
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0012504305091169954
curgen: 100 fitness: -0.0006113335117561292
curgen: 150 fitness: -0.0006113335117561292
curgen: 200 fitness: -0.00058821792063668
curgen: 250 fitness: -0.00058821792063668
curgen: 300 fitness: -0.00058821792063668
curgen: 350 fitness: -0.00058821792063668
curgen: 400 fitness: -0.00058821792063668
curgen: 450 fitness: -0.00058821792063668
curgen: 500 fitness: -0.0004643346909460888
CoordinateCreature{Vector{Float64}}([-9.984676800922774e-5, 0.0006042391321039288, -0.00031444285480474485, 4.059018005303505e-5, 0.00010528019352535397, -0.0004911958341798353, 0.00022470872023536734, 0.000395520131986073, 0.00011754308428989696, 0.00011243536492971434, -8.224932924971555e-5, 0.00034654953462446214, -0.0009519035910945588, -0.0005723399361769949, -0.0001363711963980315], 0.0004643346909460888) [-9.984676800922774e-5, 0.0006042391321039288, -0.00031444285480474485, 4.059018005303505e-5, 0.00010528019352535397, -0.0004911958341798353, 0.00022470872023536734, 0.000395520131986073, 0.00011754308428989696, 0.00011243536492971434, -8.224932924971555e-5, 0.00034654953462446214, -0.0009519035910945588, -0.0005723399361769949, -0.0001363711963980315] 0.0004643346909460888
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
