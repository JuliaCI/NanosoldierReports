Julia Version 1.6.0-DEV.587
Commit a6de8b6186 (2020-08-05 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.1
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.30
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_kr5Vfd/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_kr5Vfd/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-2.7133406632628976e-11, -5.437716943390569e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3979484236870121e-11, -2.8401392349053367e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.178646069632805e-11, -2.2497559371004172e-11, 1.8124612921610606e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9719115229577255e-11, -3.843803053626971e-11, 1.2658762926776035e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-4.736100400748455e-11, 4.3406389593769745e-11, -9.147049784274941e-11, 8.175704557800145e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.69606559299973e-12, -1.0811040951352879e-10, 9.001910328265694e-12, -2.115242425659858e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [3.119640101800769e-10, -1.0660050620003858e-10, 6.15806072801206e-10, -2.3079160804684307e-10, 4.134381725862113e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.419520388016963e-11, -1.241694524978243e-10, -1.0528500293816023e-10, -2.4157364997279274e-10, -3.3062219628732237e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-5.113165446601897e-11, -1.0598477651058147e-10, -8.84761153230329e-11, -1.1442202740852281e-10, -2.032382040439984e-10, -1.797189064234317e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.8702373811029247e-11, -2.338451654537721e-11, 1.3041567825666789e-11, 5.523559387654586e-11, -4.375122486521832e-11, 2.532285492407027e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.0524026095026784e-11, 1.3713696844774859e-11, -1.3443579582883558e-11, 2.1926238602532067e-11, 2.843281166065026e-11, -2.8531954576749285e-11, -2.6602053893043376e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.787725936874267e-11, -7.856271189154995e-11, 6.992295631391698e-11, 1.365934032548921e-10, -1.6241663569616094e-10, 1.4114620583427495e-10, 4.418687638008123e-14]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4932499681208355e-11, 3.54809515101806e-11, -2.244315844279754e-12, -3.243305624067716e-11, -2.966060730358322e-11, 6.906741845114084e-11, -7.750466934908218e-12, -6.238898286881067e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.2510882047299674e-11, 6.893374759897597e-12, 8.202327705930657e-12, -1.8801626922027026e-12, 4.6462167446748026e-11, 1.0628609103946474e-11, 1.5528689445432065e-11, -2.6366686611822843e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0593526056368319e-11, -1.173483532568298e-11, 7.52198303644036e-12, 3.745004306665578e-12, -2.0625168239973846e-11, -2.1037838138227016e-11, 1.4607204334993185e-11, 5.611289211060466e-12, -5.845213202348987e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1003365713312405e-10, 2.447009261885569e-10, 9.451217586331495e-11, 3.9156899944714496e-11, -4.2545833522922294e-10, 5.101934430484789e-10, 1.9982193677492432e-10, 7.362332965499263e-11, 2.97761815204467e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0803025968518796e-11, -7.207234808959129e-12, -3.0504598846903264e-11, -2.697508882931743e-12, 7.300604565330104e-12, -3.339029053250897e-11, -1.2741030452900759e-11, -7.356393272317518e-11, -8.664513551082109e-12, 1.0987877274715174e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.220756994437579e-12, -3.2489677614933044e-11, -1.443622998920091e-12, 2.0159207636538667e-11, 7.742029239921067e-12, 5.160538663062653e-12, -6.521072570819797e-11, -3.738787057727677e-12, 4.20345980245429e-11, 1.4846346374497443e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2017165868248867e-11, 2.751576744230988e-11, -1.0592415833343694e-11, -8.517186955714351e-12, 1.2726708575883094e-11, -4.3077541533875774e-11, 5.2582382892296664e-11, -2.4762636385844417e-11, -1.8987811323256665e-11, 2.5855317886680496e-11, 2.980060642698845e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.164069255021332e-12, 2.075073446405895e-11, -8.497980097388336e-11, 4.083400284571326e-13, -9.4229180014338e-11, -1.0044631792993641e-11, 5.126210567141243e-11, -1.7230650239952183e-10, 6.437295141381583e-12, -1.9265711248550588e-10, -3.7341241210242515e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [2.7813529257514347e-11, -3.656031033472118e-11, -2.2015722578316854e-13, -5.268996350338284e-11, -2.411271182722885e-11, 7.470268847953321e-11, 5.7656768248648405e-11, -6.915346073554929e-11, 7.349232333808686e-12, -1.1127898602580899e-10, -5.1446513715802666e-11, 1.4979240070545075e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.136347234317554e-11, 1.8032353388264255e-10, 1.694857587608567e-10, -4.035005662927915e-11, 4.6670889375377556e-11, 5.787770263054881e-11, -1.9598189737735083e-10, 3.57700313813325e-10, 3.342390808569462e-10, -7.526623768683294e-11, 9.41382527486212e-11, 1.190285647822975e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.0054068688702955e-10, 1.8864687589825735e-10, -1.7201817748002668e-10, 4.6122750063659623e-10, -2.676351362751461e-10, -3.2583502562744115e-10, 1.9086709990290274e-10, 3.8770298083079524e-10, -3.472435672335905e-10, 9.235308073840542e-10, -5.43989187029581e-10, -6.585788581148222e-10, 4.984235246752178e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.7754354370301826e-11, 3.725908470642025e-12, -3.98227006925822e-11, -6.554534692781999e-11, 1.3199152881782084e-10, 5.3749227291177704e-11, -6.041078748353357e-11, 7.0958794395892255e-12, -8.030121012581048e-11, -1.284685691160803e-10, 2.678908206377173e-10, 9.886202967379631e-11, 1.2347900479880991e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-5.331779462380837e-11, -9.749245855061872e-11, -1.3278989019482879e-10, -6.059652779555336e-11, -3.210431920308565e-12, 3.2013502959671314e-11, 8.936096307365915e-11, -1.0977863063033055e-10, -2.0340007456098874e-10, -2.825414346929733e-10, -1.289116591252082e-10, -4.440559031593239e-12, 6.249267769931066e-11, 1.7049472944563604e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [7.948264268975436e-11, 1.31223920618595e-11, 4.84223772190262e-11, -2.8997471090974614e-11, -3.4295677409090786e-11, 1.9459989175629744e-11, 7.37632177560954e-13, 1.6575008032759797e-10, 2.6788349316575477e-11, 1.0402478878290822e-10, -7.201683693836003e-11, -6.728373413977806e-11, 4.083622329176251e-11, 5.843547867812049e-12]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.4789569569018113e-10, 1.1441358971353566e-10, -5.426659122065303e-12, -6.34785557451778e-11, 6.8043348733226594e-12, -6.864286916652418e-12, 1.2917000802303846e-10, 2.911186847143199e-10, 2.379161312404676e-10, -9.798828415341632e-12, -1.3253143027469605e-10, 1.0976330955259073e-11, -9.292899783019948e-12, 2.6034219224868593e-10, -2.6338931036207214e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0179945775234955e-10, -1.1620404638534865e-10, -1.1832312907245068e-11, -6.251088535691451e-11, 1.6710721695289976e-10, -5.154543458729677e-11, -2.2795432208511102e-11, 1.9722601329874578e-10, -2.4116697527887254e-10, -3.7454594981056744e-11, -1.216237111023588e-10, 3.257683012236612e-10, -1.0732292832216217e-10, -4.659828078956707e-11, -1.899291834916994e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1268097566130564e-11, 1.1851186698663696e-11, -2.5025981287285504e-11, 3.641731360914946e-11, 1.6466605856635397e-11, -5.874856157106478e-12, 2.3386403924519072e-11, -7.663425449777606e-12, -2.2908119845510555e-11, 2.3679946892229964e-11, -5.022415816569037e-11, 7.102163301908604e-11, 3.394062808581566e-11, -1.0606515665756433e-11, 4.650679841233796e-11, -1.4078405108364223e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.833311942486489e-11, -3.170363971349843e-11, -1.08160147505032e-10, 3.2092106749814775e-11, 1.280802131020664e-10, 2.4706903190008234e-11, 1.285778150617034e-10, 7.896927556316768e-11, 1.8697399184475216e-10, -7.464551199376501e-11, -2.1758139734373572e-10, 7.081113473361711e-11, 2.5039548212646423e-10, 4.726730118420619e-11, 2.65409694222285e-10, 1.6038281813735011e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0478384826484444e-10, -2.397231302353475e-10, -1.0468226285809124e-10, -4.6536663411700374e-11, 7.052047834577024e-11, -1.058182430568877e-10, 2.2333468407964574e-11, -3.02656233408527e-10, -1.973844421243598e-10, -4.6451065216501775e-10, -2.0776735887295672e-10, -1.0274670003695974e-10, 1.4244494472848146e-10, -2.0535062539295268e-10, 3.673639170642673e-11, -6.095869364841633e-10, -4.700240197053063e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.149480593516273e-11, 8.390843575512008e-12, 6.821876397111737e-12, 2.8235858096081756e-11, 5.6938231907111003e-11, -2.497679840729461e-11, 2.3840707186195687e-11, 1.7684964603859044e-11, 4.661515617954137e-11, 1.8929968703673694e-11, 1.6766144028679264e-11, 5.3165916114039646e-11, 1.0936318517451582e-10, -5.487121867986389e-11, 4.863642821817393e-11, 3.81208398181343e-11, -3.0109248427834245e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [1.556110795775112e-10, -1.5877854586676676e-11, -9.660228172947427e-11, 1.0579492837337057e-10, 6.049116763051643e-11, -6.213174419400502e-11, -8.622746960895711e-11, -1.4067969011932746e-11, 1.5657253271683658e-11, 3.1930746935415755e-10, -3.5505709483629744e-11, -2.0195378702680955e-10, 2.148361488707451e-10, 1.2393419623890622e-10, -1.2221335055073723e-10, -1.6916346101680801e-10, -3.2812419448191577e-11, 3.227107470138435e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.594391864846784e-11, 7.014078207134844e-11, 2.4322988068092855e-11, 9.789036248264438e-11, 1.1439960090342538e-11, 4.115485729982993e-11, -4.322742164220017e-11, 5.21178655787935e-11, -1.318722908649761e-11, 1.6495271815131218e-10, 1.420177309086057e-10, 4.7873038866441675e-11, 1.9261769956813168e-10, 2.8320679135163118e-11, 7.390466016943265e-11, -8.376244142738187e-11, 9.549983026602149e-11, -3.022859740298145e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.411093464298574e-12, -7.754463737796868e-11, 2.7505997479693178e-11, 2.2571278179839283e-11, -3.463429543160146e-11, 3.1037394876420876e-12, 1.3332246417974147e-10, 2.5222934851854006e-11, 3.084732469460505e-11, 1.0300205133262352e-11, -1.5809797915267154e-10, 4.974309852912029e-11, 4.426947697311334e-11, -7.052380901484412e-11, 9.50128864474209e-12, 2.530831100244768e-10, 4.261480057721201e-11, 5.827560656257447e-11, -1.4656054148076691e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.2915228582483e-11, -5.228595334472175e-12, 8.092193581887841e-12, -2.9334201734343424e-11, 6.675571206926634e-11, -8.891021252566134e-11, 7.802425372460675e-12, 5.527511781622252e-11, -1.915578806688245e-12, -1.2620526845807944e-10, -6.338152225282556e-12, 1.3361090012153909e-11, -5.754674514690805e-11, 1.2983547570399878e-10, -1.7726808909657166e-10, 2.2234658558772935e-11, 1.1215206541237421e-10, -8.677836227377611e-12, -3.3995029014022293e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [4.3436809704644475e-11, 1.2287948436551233e-11, -4.769906691848291e-11, -1.2096279533579946e-10, -3.9720005062804375e-11, 1.1087797346931438e-11, 6.729639068225879e-11, -1.000355354108251e-11, -7.185785300123371e-11, -1.4294787575863666e-11, 8.529488226827198e-11, 2.259414877414656e-11, -9.436862402623092e-11, -2.5023760841236253e-10, -7.717604333379313e-11, 2.3096635715091907e-11, 1.3559242617589007e-10, -2.130373655262474e-11, -1.390363379982773e-10, -3.39458461340314e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.768785614814533e-12, -1.2123524406604247e-11, 6.763478666016454e-12, 7.147171743326908e-12, 1.567324048323826e-11, -2.3988588893075757e-12, -5.931133362224728e-11, 1.6717516260200682e-11, 2.666755705149626e-12, -1.1180945058697489e-11, -1.5660361896152608e-11, -2.2020274492717817e-11, 1.3857803793371204e-11, 1.393929416337869e-11, 3.3642422181401344e-11, -3.775202372935382e-12, -1.2046197372939105e-10, 3.2591707110896095e-11, 2.6070257064247926e-12, -2.1697088570249434e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-7.0110584005078636e-12, -3.9657721551122904e-11, 1.0962319940688303e-10, 5.6031845829807025e-11, -1.615948486133334e-10, 8.679812424361444e-11, -4.109657059103711e-11, -5.581501927309773e-11, -5.821010340412158e-12, 1.7622348025270185e-11, -9.813705403871609e-12, -8.008649299284798e-11, 2.26334284647578e-10, 1.1029932522887975e-10, -3.210272048193019e-10, 1.7014900599576777e-10, -8.403533424683474e-11, -1.1103151731362004e-10, -1.1137202271527258e-11, 3.913891433171557e-11, 1.887379141862766e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5330625657838937e-11, 2.7038149497116137e-11, 3.2047031695014994e-11, 1.6703527450090405e-11, 1.0190515098429387e-11, -9.594325334205678e-12, 1.8383294886348267e-11, 7.94209142895852e-12, -2.068012427969279e-11, 3.473243914697832e-11, 3.222822009263382e-11, 5.583089546234987e-11, 6.804978802676942e-11, 3.159406070096793e-11, 1.4886536447988874e-11, -2.0336954342781155e-11, 3.5139446907805905e-11, 1.3218315331187114e-11, -4.503897255148104e-11, 6.674771846348904e-11, 3.2165381469440035e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [4.0010439406046316e-11, 8.405653950660508e-11, -6.176859024265013e-11, 2.732947201877778e-11, 2.266076215562407e-11, 7.090794618136442e-11, 1.5401901976019872e-11, -1.1987966175297515e-11, 5.571165750950513e-11, -1.7427881360276842e-10, -9.900236186410893e-11, 7.823253156402643e-11, 1.8470136531334447e-10, -1.2657153103390328e-10, 6.015965503536336e-11, 4.7401194080975984e-11, 1.3029555212540345e-10, 2.8141045049778768e-11, -2.3970492257774367e-11, 1.1349343687072633e-10, -3.4037905827233317e-10, -2.0334411932054763e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.745181859609147e-11, 1.801625515440719e-11, -3.4179548080714994e-11, 2.1790125259713022e-11, 1.6397105895293862e-11, 4.007378873183143e-10, 4.131781583538441e-10, 5.828049154388282e-11, 1.9896329028767923e-10, -4.481089943553229e-10, -2.7029922744503665e-10, -5.50696155343644e-11, 3.4643399260403385e-11, -6.837042043628117e-11, 4.869460390466429e-11, 2.447109181957785e-11, 7.982408067874758e-10, 8.175053967107715e-10, 1.1872303140592066e-10, 3.855655794637869e-10, -8.960245878597561e-10, -5.326795671223294e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [2.4152679856115356e-11, -2.4672597298547316e-11, -6.867495461193585e-11, 5.048339524194034e-11, -3.67184060934278e-11, -6.42329522904106e-11, -3.6248115620196586e-11, 3.3827385337303895e-11, 3.733036102460119e-11, -7.280154257216509e-11, 4.98256991221524e-11, 4.428968303216152e-11, -4.833877742527193e-11, -1.3876899629394757e-10, 8.359712921901519e-11, -7.383715860953544e-11, -1.2872880539305243e-10, -7.67970131931861e-11, 6.531819529698168e-11, 7.380007716051296e-11, -1.4710799245420958e-10, 9.960987590318382e-11, 6.023181953196399e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.556932939995932e-12, -1.1530332244547026e-11, 4.787281682183675e-12, -7.912670518805953e-12, -2.8066438062523957e-12, -1.1909473407456517e-11, -9.429235170443917e-12, -1.0246914428080345e-11, -1.7473800184575339e-12, -1.9737544931786033e-12, -9.276468482255495e-12, -1.716449204991477e-11, -2.9054314509835422e-11, 1.0239586956117819e-11, -1.6909251776553447e-11, -2.6865176749879538e-12, -2.5279445203807427e-11, -1.9580559396104036e-11, -2.0717760840227584e-11, -3.983480212355062e-12, -2.6831870059140783e-12, -1.8574364268886256e-11, 2.4877877535800508e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [3.108291402043051e-11, -6.187228507315012e-11, 1.0165202013467933e-12, 6.197908852811906e-11, -6.568345867208336e-11, -1.1508005659521814e-10, 2.624387374083881e-10, -2.307687374525358e-11, 1.4014345239843351e-11, 2.212763305919907e-11, 1.1929213172834352e-10, -3.6394220970237257e-11, 6.5083272104971e-11, -1.2720813291622335e-10, 3.838040996129166e-12, 1.2815792871379017e-10, -1.280624495336724e-10, -2.2952451050883838e-10, 5.292084548358389e-10, -5.232769773044765e-11, 2.8653301953340815e-11, 4.9216852815447965e-11, 2.3465562826174846e-10, -7.061762286042494e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.290856724433525e-11, 2.6679325415557287e-11, -4.842226619672374e-11, 2.1023427443367382e-10, 7.157874293284294e-11, 1.1779976993864238e-10, -9.425682456765117e-11, 1.2974976648649772e-10, -9.9647845530626e-11, 3.388467284537455e-11, 2.248201624865942e-12, 8.856715361105216e-11, 1.273572358684305e-10, 5.161893135152695e-11, -9.778577947372469e-11, 4.0561110026260394e-10, 1.4433321204876393e-10, 2.341664639970986e-10, -1.8753476549449033e-10, 2.567450696489004e-10, -2.020744682695863e-10, 7.23154869319842e-11, 5.842215600182499e-12, 1.8540924351384547e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
