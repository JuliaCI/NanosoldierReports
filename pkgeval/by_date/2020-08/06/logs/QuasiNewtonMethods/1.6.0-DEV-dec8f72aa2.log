Julia Version 1.6.0-DEV.599
Commit dec8f72aa2 (2020-08-06 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed VectorizationBase ─── v0.12.30
  Installed UnPack ────────────── v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_D4SwIF/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_D4SwIF/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-5.4251048098308274e-12, -1.159494722458021e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9933611972742256e-12, -2.414446420573313e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1495350771848507e-10, -6.292698584431378e-10, -5.228262267564787e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.896023752034353e-10, 1.3651006991466375e-9, -2.547332345059772e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [7.17788051218804e-11, -5.878053599417399e-11, 1.3843970414484374e-10, -1.1374001740449557e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4485524718897977e-11, -3.816058580241588e-12, -5.041833617269731e-11, -7.2276629126122316e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-7.739064944445317e-11, 1.1671308364213928e-10, -1.3708534307710352e-10, 2.372764207336786e-10, 4.473821313411008e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.591771242066443e-11, -1.9367274450843297e-10, 5.186651108601836e-11, -3.946349913519498e-10, 1.819944195347034e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.0928147275990341e-11, -3.269606807521086e-13, 8.519851490973451e-12, 2.0088153362962657e-11, -1.2667644710973036e-13, 1.7939205676498204e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.4356517630840244e-11, 6.655787032627813e-11, 1.2955636563560802e-11, 8.95734597605724e-11, 1.2868395238285757e-10, 2.1932899940679818e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-8.665113071515407e-11, -1.364222068644949e-10, 1.2464496101927125e-10, -1.7669943286335865e-10, -2.5712054707582865e-10, 2.586433289764045e-10, 2.367208651321562e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.666311615939776e-11, -2.568645296463501e-11, -3.227640377190255e-12, -6.553135811770971e-11, -4.741829151555521e-11, 3.1754598950328727e-12, 3.334397202792161e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [5.022027238510418e-11, -5.926481527751548e-11, 1.442734820500391e-11, 5.755107501670409e-11, 9.954059798644721e-11, -1.2728240683657077e-10, 2.4160229372682807e-11, 1.0607559275399581e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0982549031600684e-11, 4.569233880147294e-12, -2.947042609946493e-11, -4.136802012055796e-12, -3.9398262430268005e-11, 4.057643110400022e-12, -5.981815043298866e-11, -7.649991751179641e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [1.1213763251305409e-10, 2.918922881178787e-10, -8.655098859833288e-11, 2.382380959176089e-10, 2.228002227155912e-10, 5.938545211137125e-10, -1.8528956147179088e-10, 5.006604020252325e-10, 5.4319881925835034e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.12228037763407e-11, 2.023869960510183e-11, -8.990286293197869e-11, 2.563573797687013e-10, 1.0681833195747004e-10, 2.3057777909230026e-11, -1.8625523345860984e-10, 5.035512007367515e-10, 2.0758950114441177e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [1.2316725417349517e-10, 1.1057263993308197e-9, 3.454843078287695e-10, 1.2578382779793174e-11, -1.692321838220323e-10, 2.4789836849947733e-10, 2.2140969058170867e-9, 6.968527976880523e-10, 3.040390161856976e-11, -3.24866911149968e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4056089625569257e-11, -5.6254667590849294e-11, 1.065820764978298e-10, -1.807439753420681e-10, -1.4344136989308254e-10, 3.1275204648295585e-11, -9.600931161202197e-11, 2.061180115475736e-10, -3.6548353232745967e-10, -2.885157668330862e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [4.837703571070051e-10, -1.0936973549036111e-10, 2.7087887488619344e-10, 2.0264212530207715e-10, 3.288280758795281e-11, 9.54467616054444e-10, -2.2538981792052937e-10, 5.423987925468055e-10, 4.184006474616808e-10, 6.082201409185473e-11, -8.888001445939153e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0110667858498346e-10, 5.0533799367258325e-11, 3.505418177951469e-11, 1.3433698597964394e-10, 3.1246116805050406e-11, -1.8616808095117676e-10, 1.0155121188404337e-10, 7.11233294481417e-11, 2.694708900463638e-10, 6.678657626935092e-11, -4.1602277178753866e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-8.105693893867283e-11, -1.589040010685494e-11, 6.261346996438988e-11, 2.1965096408393947e-11, 1.3264456200090535e-10, 2.3948398819584327e-11, -1.5744416881346979e-10, -3.371991574852018e-11, 1.2201573085235395e-10, 4.119238283806226e-11, 2.7194779761430254e-10, 5.005085235154638e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6993962620736056e-12, 4.6737502756855065e-11, -3.5967451239571346e-11, -1.4252266034020522e-11, 2.5581758933412857e-12, 7.054357098468245e-13, -5.4143356464919634e-12, 9.229217390327449e-11, -7.697198434186703e-11, -3.0153435304214327e-11, 4.185318758231915e-12, -1.0412781747959343e-12]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2028666951380274e-10, -2.7309932093544376e-11, 9.83739756321711e-11, -6.648981365486861e-11, 9.755396490618296e-11, -7.663791823375732e-11, -2.3888335753952106e-10, -5.335043518073235e-11, 1.9184942523509108e-10, -1.2903378365791696e-10, 1.9910206816575737e-10, -1.4986367702363168e-10, -1.8203216711754067e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.2278403000750586e-11, 3.145150806460606e-11, -2.7618685116692632e-11, 7.418976544215639e-11, 3.044786645034492e-11, -2.3354318479107405e-11, 8.440248500107828e-11, 6.480416203658024e-11, -5.730749208510133e-11, 1.4898526856654826e-10, 6.265188368104191e-11, -4.602451753044079e-11, 1.663580384558827e-11]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.8556978176320627e-10, -1.0957013074630595e-11, -5.434352967625955e-11, -1.3835232959280575e-10, 2.295252876649556e-11, 1.676281335960539e-11, 3.5347280658015734e-11, 3.781375212952298e-10, -2.2256863019265438e-11, -1.0134659778060495e-10, -2.7338009633837146e-10, 5.049205498153242e-11, 3.579070373405102e-11, 6.87965240331323e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.313482821454272e-11, -2.5548119175766715e-11, 1.0553558027481813e-11, -9.433009928727643e-12, 5.222045018626886e-12, 3.824185412781844e-11, -3.909939039203891e-11, 7.149547620599606e-11, -5.1992410377010856e-11, 2.287170453030285e-11, -1.961875106815114e-11, 9.481748719508687e-12, 7.124256740098645e-11, -8.126388451046296e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-5.0065951384681284e-11, 1.691291551253471e-11, 5.15749665197518e-11, -2.7075119923836155e-11, 1.6891599230461907e-11, -1.0365819314017699e-11, 5.1390003363849246e-11, -1.0295753138933605e-10, 3.728728437124573e-11, 1.012596673177768e-10, -5.244615852717516e-11, 3.806310822085379e-11, -2.0037860259947138e-11, 1.0186673726764184e-10, 5.267564162636518e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.823297565323628e-12, -4.1368797276675195e-11, -2.5643487333582016e-11, -4.6645687312718564e-11, 3.4918734570510424e-11, 1.0082534807054344e-10, 1.1697998125725917e-10, 3.3226754680981685e-12, -8.309197774281074e-11, -4.853073498622962e-11, -9.230838315943402e-11, 6.232880878087599e-11, 1.9410939522401804e-10, 2.4510082852202686e-10, -3.971267759084185e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.5766055955500633e-12, -1.7359336190736485e-11, -3.6081138077292962e-12, -1.0068612610325545e-12, -2.0017321133991572e-13, 1.3853806990482553e-11, 7.72981678665019e-12, -6.670108909645478e-12, 5.422773341479115e-12, -3.5623171079635085e-11, -6.986855538571035e-12, -2.0607959783092156e-12, 8.881784197001252e-15, 2.7828406246044324e-11, 1.507260982691605e-11, -1.4636736267448214e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.85089770971581e-11, -1.0948186801584825e-10, 2.4953883404066346e-10, -1.3172141155592954e-10, 1.2793432979663066e-10, -1.3477330362832163e-10, -2.870624848938519e-10, -1.3404977128317341e-10, -1.595426013523138e-10, -2.236810736633288e-10, 4.991305146972991e-10, -2.406801424825744e-10, 2.4647039964520445e-10, -2.6959667831505385e-10, -5.908314948399607e-10, -2.79343548292843e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [8.161693543229376e-12, 4.095546124460725e-11, -4.093381189562706e-11, -9.5723429183181e-12, -1.5155654509158012e-11, 1.492606038766553e-11, -1.0214273871156365e-11, 3.063860276597552e-11, 1.5867307467942737e-11, 7.619682662607374e-11, -8.262801554081989e-11, -1.5548895504480242e-11, -2.5260016300876487e-11, 3.451527952336164e-11, -1.1911582831203305e-11, 6.108069605659239e-11, -1.0779044323783182e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5061285552064874e-11, 2.5907276324232953e-11, 6.654277129314323e-11, 4.128164476924212e-11, 5.091083110642103e-11, -8.14536216253714e-11, -4.4816483857346157e-11, 3.8981262662218796e-11, -2.926003883629846e-11, 5.2122306470892e-11, 1.4106982249018074e-10, 8.488254543692619e-11, 1.0643730341541868e-10, -1.6181267437076485e-10, -9.049405669259158e-11, 7.944156443784323e-11, -2.449929148440333e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5865265484981137e-10, 4.818079268886777e-11, 4.482236803937667e-11, -2.3230861678769088e-11, 3.560707284577802e-12, 9.066902784127251e-11, 1.0143774709092668e-10, 3.4824099159891375e-10, -2.0883683671257813e-10, -5.365630162401658e-10, 1.0162848340655728e-10, 9.177614224142872e-11, -3.6537106673506514e-11, -1.627475931798017e-12, 1.8916113120326372e-10, 1.992743747791792e-10, 7.06462000010788e-10, -4.3994197174157534e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1527745424899649e-10, 8.07063305074962e-11, 9.787126664662082e-11, 6.159805998606771e-11, -8.414335894713076e-11, 4.256928143320238e-11, -1.1025513835249967e-11, 5.736655595001139e-11, 6.923350781562476e-11, -2.2183221926042052e-10, 1.6474777098096638e-10, 1.943041283425373e-10, 1.227355994615209e-10, -1.7026158261046476e-10, 8.448397537108576e-11, -1.493749568481917e-11, 1.1554979195693704e-10, 1.3436740609051867e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5535684677890913e-11, 7.981504346332713e-11, -2.917421859649494e-11, 1.0821255003179431e-10, -9.638423392743789e-11, -6.566769350513368e-11, -6.258760176791611e-11, 8.589129407710061e-12, 2.1868062916041708e-11, -4.7066683883656424e-11, 1.6147572168279112e-10, -5.308042894114351e-11, 2.1946000572370394e-10, -1.9116896954329832e-10, -1.2777645608252897e-10, -1.3438528068121514e-10, 1.350586309456503e-11, 4.896061334136448e-11, -4.820477350619967e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.350710654435261e-10, 8.260125916592642e-11, 2.8680169350536744e-11, -2.3701041129697842e-11, -4.8922088602409985e-11, 2.8378410732443626e-11, -4.258438046633728e-11, 7.988720795992776e-11, -7.656797418320593e-11, 2.8584890010563413e-10, 1.6154944049162623e-10, 6.438671817932118e-11, -5.155265103695683e-11, -1.0090017710240318e-10, 6.323697121501937e-11, -7.634004539625039e-11, 1.6517742729149631e-10, -1.4667589365302547e-10, -8.305467424918334e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-3.055291575293495e-10, -2.0805002165502628e-10, 1.4572343332019955e-11, 2.4739832404918616e-10, 4.154676602752261e-12, -1.2316259123679174e-11, -2.117421793457197e-10, 2.5834889783027393e-12, -5.124711766057999e-11, -5.1845860937760335e-11, -5.911346967479858e-10, -4.252781460323263e-10, 4.9602544294202744e-11, 4.875013726035604e-10, 1.1944001343522359e-11, -3.963451788990824e-11, -4.2349668216701275e-10, 2.7984281558701696e-12, -1.1810885602869803e-10, -1.0947565076691035e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.405087240475723e-11, 1.8058177175817036e-10, -9.936496070395151e-12, -3.3903768681398105e-11, -5.748679310357829e-11, 2.702194024095661e-11, -1.8177015448372913e-11, -2.4040547330628215e-11, -1.2915446490069371e-11, 1.056799092680194e-10, -5.17870191174552e-11, 3.5378944218678043e-10, -2.21518359211359e-11, -6.761613491335083e-11, -1.1328959992340515e-10, 5.430345062507058e-11, -3.332634168629056e-11, -4.582156876153931e-11, -2.6340707393046614e-11, 1.9921908567255286e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4570655793022524e-10, 7.312150884786206e-11, 4.6139092546582106e-11, 6.912892480670507e-11, -1.4588508179258497e-10, -4.355149574308825e-11, 3.696576378331429e-11, 7.078782005009998e-11, 9.052092408978751e-12, 2.269233689844441e-10, -2.762091666497213e-10, 1.4720602514728398e-10, 9.047718130261728e-11, 1.3502599038872631e-10, -2.8367663773565255e-10, -7.423628378688818e-11, 7.612754870933713e-11, 1.4326451136525975e-10, 1.4613865673140936e-11, 4.6547143917052836e-10, 2.2071233729548112e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.0533353623241055e-12, 8.413980623345196e-11, -8.017198016574412e-11, -1.7296275522937776e-11, 1.9413359808595487e-11, -5.878775244383405e-11, -6.118028306190126e-11, -8.12868661270727e-11, 1.936406590630213e-11, -6.855849221665267e-11, 5.554889881409508e-12, 1.7441448285637762e-10, -1.5831835842305964e-10, -2.0715318349573408e-11, 3.7117420248478084e-11, -1.1843626079865999e-10, -1.1964573776168663e-10, -1.5560053245877725e-10, 3.8049563499953365e-11, -1.3738832294052372e-10, 2.0076607043506556e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1726408732926075e-10, 5.354028331794325e-11, 1.1542367062133962e-10, -5.511924250356515e-12, 1.6181411766069687e-10, 8.61706261900963e-11, -1.379455438765831e-10, 3.6348701826227625e-12, 2.1433810282189825e-10, -2.325464265595656e-10, -2.6645896600285823e-10, -2.346863814395306e-10, 1.1037193381469024e-10, 2.3805912796603934e-10, -1.7375101357686162e-11, 3.30975691298363e-10, 1.678606142974104e-10, -2.717932545692747e-10, -5.5738746951305984e-12, 4.3416314987609894e-10, -4.4266335041953653e-10, -5.280954562536522e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.454303509897727e-11, 1.7313483979819466e-11, -6.5819572014902405e-12, 1.4339640586058522e-11, -1.4035883566521079e-11, -2.8601565560393283e-11, 3.746958299188918e-11, 7.149036918008278e-11, -1.2380430014502508e-11, -5.037192885026798e-11, -5.941458436353741e-11, 7.18045622960517e-11, 3.502242940101041e-11, -1.2479905997508922e-11, 2.7433388893882693e-11, -3.0261460004510354e-11, -5.849731810059211e-11, 7.395972723145405e-11, 1.4566947648120276e-10, -2.1787460724453922e-11, -1.0155798424449358e-10, -1.1621170692421856e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.4985790386390363e-11, 1.750777300912887e-11, -3.95117272233847e-12, -3.8781311495483806e-11, 2.9182878336087015e-11, -4.6631143391095975e-11, -3.293787464997422e-11, -1.3137047005784552e-11, 2.3032242779663648e-11, -1.0378808923405813e-11, 1.524824710941175e-11, 3.097544443164679e-11, 3.5611291693271596e-11, -8.535949724830516e-12, -7.63977769935309e-11, 5.788658441474581e-11, -9.621370367085547e-11, -6.05981931300903e-11, -2.6777247086329226e-11, 4.6594950120493195e-11, -2.1473489653089928e-11, 2.7538638036617158e-11, -5.909828182382171e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.033753083135025e-10, -8.537148765697111e-11, 4.534594921778989e-12, -5.588418616753188e-12, 4.5256021152795256e-11, -1.3844003721175113e-10, -1.5405443587468426e-10, -8.047673638600372e-12, -1.312659980712283e-10, -2.204159077479062e-10, -1.1621570372710721e-10, 2.1606183508993126e-10, -1.6211931797016632e-10, -4.139466547314896e-12, 8.79296635503124e-14, 9.101386311272108e-11, -2.844228186305031e-10, -3.239855050907181e-10, -8.081757485456365e-12, -2.749142025137985e-10, -4.390837693435401e-10, -2.2223400897303236e-10, 1.0800249583553523e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [2.0903501152247372e-11, 6.362510518442832e-11, -1.332889354443978e-11, -3.229183587194484e-11, 1.5892398508299266e-11, -4.279243626115203e-12, -1.2527312520660416e-11, 1.3469003690147474e-11, -6.435085797562579e-11, -2.9541258328436015e-11, -5.1779580623190213e-11, -2.8194890866473088e-11, 4.065370262651413e-11, 1.2548784233956667e-10, -2.732736259503099e-11, -6.95079549473121e-11, 3.3181235536972054e-11, -6.592171253316792e-12, -2.331834725310955e-11, 2.6553426124564794e-11, -1.3239720431101887e-10, -5.8167470839975977e-11, -9.714506976621351e-11, -5.5542348498249794e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.7901237703863444e-11, 5.143907522153768e-11, -8.711587007326216e-12, -6.819567133220517e-11, -2.6581847833995198e-11, 5.6175730733798446e-11, 1.6006307390625807e-11, 1.2147904904225015e-10, -5.126055135917795e-11, -9.836575998178887e-12, -8.799627693178991e-13, 3.663180869750704e-11, 7.081779607176486e-11, 1.0432388286574223e-10, -1.2003398275339805e-11, -1.304485408581968e-10, -6.317257827959111e-11, 1.2087064682475557e-10, 3.4682701155475115e-11, 2.437412494060709e-10, -1.1127276877687109e-10, -2.1818991058353276e-11, -1.694644424787839e-12, 7.36124494693513e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
