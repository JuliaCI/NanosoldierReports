Julia Version 1.6.0-DEV.599
Commit dec8f72aa2 (2020-08-06 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_13Aq4j/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_13Aq4j/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172227520782502
curgen: 20 fitness: 0.21722777663011475
curgen: 30 fitness: 0.21723335468368307
curgen: 40 fitness: 0.21723335468368307
curgen: 50 fitness: 0.2172336124247918
CoordinateCreature{Vector{Float64}}([0.2225670412289682], -0.2172336124247918) 0.2225670412289682 -0.2172336124247918
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578415267388454
curgen: 100 fitness: 3.258313161667417
curgen: 150 fitness: 3.258391575827264
curgen: 200 fitness: 3.2584206905424318
curgen: 250 fitness: 3.2584388281197545
curgen: 300 fitness: 3.2584388281197545
curgen: 350 fitness: 3.2584388281197545
curgen: 400 fitness: 3.2584659155033604
curgen: 450 fitness: 3.2584659155033604
curgen: 500 fitness: 3.2584659155033604
CoordinateCreature{Vector{Float64}}([0.2222662346282997, 0.22234506397936496, 0.2226642002172039, -0.22249851897470363, 0.22292057735117007, -0.2223463650930923, -0.2229579358794804, 0.22265202743093768, -0.22252826607999826, -0.2225658207391427, -0.22212528501753398, -0.2223703356902144, -0.22290087795720695, -0.22250583429341414, -0.22235385286471432], -3.2584659155033604) [0.2222662346282997, 0.22234506397936496, 0.2226642002172039, -0.22249851897470363, 0.22292057735117007, -0.2223463650930923, -0.2229579358794804, 0.22265202743093768, -0.22252826607999826, -0.2225658207391427, -0.22212528501753398, -0.2223703356902144, -0.22290087795720695, -0.22250583429341414, -0.22235385286471432] -3.2584659155033604
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0015025785992008878
curgen: 100 fitness: -0.001255295722160099
curgen: 150 fitness: -0.0009634244972573924
curgen: 200 fitness: -0.0009634244972573924
curgen: 250 fitness: -0.0009634244972573924
curgen: 300 fitness: -0.00046269659713971123
curgen: 350 fitness: -0.00046269659713971123
curgen: 400 fitness: -0.00045499991966835296
curgen: 450 fitness: -0.00045499991966835296
curgen: 500 fitness: -0.00045499991966835296
CoordinateCreature{Vector{Float64}}([0.0003671972445520059, -6.507829008400463e-5, -5.6877112971849965e-5, -0.00034915580516358275, -0.0004721911394454238, -0.00010611453191174499, 0.00011594481013670185, 0.0003697359763739951, -7.884629774850861e-5, -0.00043709455358150167, -0.0006215270638095069, -0.00011263639949847266, 2.5054814427373897e-5, 0.0010233715800157233, 2.6221170341898476e-5], 0.00045499991966835296) [0.0003671972445520059, -6.507829008400463e-5, -5.6877112971849965e-5, -0.00034915580516358275, -0.0004721911394454238, -0.00010611453191174499, 0.00011594481013670185, 0.0003697359763739951, -7.884629774850861e-5, -0.00043709455358150167, -0.0006215270638095069, -0.00011263639949847266, 2.5054814427373897e-5, 0.0010233715800157233, 2.6221170341898476e-5] 0.00045499991966835296
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
