Julia Version 1.6.0-DEV.587
Commit a6de8b6186 (2020-08-05 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_fBmPIh/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_fBmPIh/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(23, 0.017876029f0), Item(38, 0.037171364f0), Item(8, 0.04795301f0), Item(26, 0.078038216f0)])
Vsorted = Item[Item(23, 0.017876029f0), Item(38, 0.037171364f0), Item(8, 0.04795301f0), Item(26, 0.078038216f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004427123069763184, 0.0040894031524658205, 301.0, 49.56333944294602))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004051955540974935, 0.0044235626856486, 301.0, 72.85372066497803))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004295476277669271, 0.004729000727335612, 301.0, 39.91031730175018))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004006743431091309, 0.003853297233581543, 301.0, 8.929342173320038))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.005054632822672526, 0.007693131764729817, 301.0, 44.75655091041699))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00011873245239257812, 9.813308715820313e-5, 301.0, 182.61973928660154))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.766550699869792e-5, 0.0108612060546875, 300.0, 28.7924866899848)
p = PerformanceResult(1.0, 1.0, 1.0, 6.034374237060547e-5, 3.010431925455729e-5, 300.0, 28.7924866899848)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003914880752563477, 0.003628365198771159, 300.0, 1.6986257560283775)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0001956197950575087, 2.089341481526693e-5, 300.0, 1.6986257560283775)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.766550699869792e-5, 0.0108612060546875, 300.0, 28.7924866899848), PerformanceResult(1.0, 1.0, 1.0, 6.034374237060547e-5, 3.010431925455729e-5, 300.0, 28.7924866899848), PerformanceResult(1.0, 1.0, 1.0, 0.003914880752563477, 0.003628365198771159, 300.0, 1.6986257560283775), PerformanceResult(1.0, 1.0, 1.0, 0.0001956197950575087, 2.089341481526693e-5, 300.0, 1.6986257560283775))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 136.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008178957303365071, 0.0035898685455322266, 347.1333333333333, 28614.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0070688724517822266, 0.0035817305246988933, 303.23333333333335, 6974.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.570947011311849e-5, 1.2167294820149739e-5, 93.16666666666667, 49.583535925485194))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3492177327473958e-5, 1.2660026550292969e-5, 83.5, 72.87571918964386))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6027361551920574e-5, 1.3438860575358073e-5, 86.36666666666666, 39.89517140388489))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.701714833577475e-5, 0.0001467307408650716, 92.53333333333333, 44.76659172261134))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.82, 0.82, 0.82, 4.97738520304362e-5, 0.00012613932291666668, 69.03333333333333, 192.17694818228483))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-07T05:03:43.109
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8759999999999996, 0.8739999999999994, 0.8748888888888884, 2.4135112762451173e-5, 2.254009246826172e-5, 153.4, 53.90876697713975))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5763511657714844e-5, 1.8260478973388673e-5, 157.42, 0.0))
*** advance 1 from 1000; 2020-08-07T05:03:43.786
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8705277777777777, 0.8679999999999999, 0.8691461988304091, 2.600431442260742e-5, 2.872943878173828e-5, 152.34, 80.1721554081887))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.557516098022461e-5, 2.4099349975585937e-5, 156.11, 0.0))
*** advance 1 from 1000; 2020-08-07T05:03:44.489
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8699920634920634, 0.8649999999999999, 0.8672146542827658, 2.5968551635742188e-5, 3.1468868255615237e-5, 152.78, 43.67662144266069))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4662017822265624e-5, 2.817869186401367e-5, 156.63, 0.0))
*** advance 1 from 1000; 2020-08-07T05:03:45.130
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8906666666666665, 0.888, 0.8892631578947369, 0.00010195255279541016, 0.0005009293556213379, 152.29, 48.26088655588683))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010245800018310547, 0.0005402684211730957, 156.13, 0.0))
*** advance 1 from 1000; 2020-08-07T05:03:45.686
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.948, 0.948, 0.948, 9.392261505126953e-5, 0.00039600133895874025, 167.46, 201.31088569993153))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.827375411987305e-5, 0.00043019771575927737, 172.53, 0.0))
*** advance 1 from 1000; 2020-08-07T05:03:46.731
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8759999999999996, 0.8739999999999994, 0.8748888888888884, 2.9647350311279296e-5, 7.561922073364258e-5, 153.4, 53.92147772433236))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.27610969543457e-5, 7.154941558837891e-5, 157.42, 0.013446510361973196))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:48.922
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7610000000000001, 0.7610000000000001, 0.7610000000000001, 0.001523919105529785, 7.41720199584961e-5, 196.72, 184.78333546221256))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:49.940
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.773, 0.773, 0.773, 0.0014075875282287599, 8.033037185668945e-5, 201.51, 104.58809719234705))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:50.775
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6099999999999999, 0.6099999999999999, 0.6099999999999999, 0.0014008235931396483, 8.278846740722656e-5, 257.66, 2.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:51.653
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9590000000000003, 0.9590000000000003, 0.9590000000000003, 0.001415417194366455, 1.8079280853271484e-5, 217.15, 600.4000208675861))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:52.587
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5830000000000001, 0.5830000000000001, 0.5830000000000001, 0.0017812108993530272, 0.0004063081741333008, 250.93, 2359.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:53.575
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.395, 0.395, NaN, 0.00161210298538208, 0.0005738115310668945, 247.79, 3660.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T05:03:54.562
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6080000000000001, 0.6080000000000001, 0.6080000000000001, 0.0015135073661804198, 3.2958984375e-5, 244.24, 2376.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0491803278688527,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702609890109894,"seconds":0.002545444294810295,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.578125,"distances_sum":592.8787486702204}}, beam: 2, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0491803278688527,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702609890109894,"seconds":0.002545444294810295,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.578125,"distances_sum":592.8787486702204}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.730202075368651, conf: {"restarts":12}, perf: {"precision":0.9105902777777765,"recall":0.9105902777777765,"f1":0.9105902777777765,"seconds":2.6540830731391907e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":57.21875,"distances_sum":284.5214882278815}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8914930555555546, conf: {"restarts":7}, perf: {"precision":0.8914930555555546,"recall":0.8914930555555546,"f1":0.8914930555555546,"seconds":2.139061689376831e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":46.515625,"distances_sum":286.7080577323213}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.730202075368651,"state":{"restarts":12},"perf":{"precision":0.9105902777777765,"recall":0.9105902777777765,"f1":0.9105902777777765,"seconds":2.6540830731391907e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":57.21875,"distances_sum":284.5214882278815}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9314128943758573, conf: {"restarts":9}, perf: {"precision":0.9019097222222212,"recall":0.9019097222222212,"f1":0.9019097222222212,"seconds":2.3828819394111633e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":51.2578125,"distances_sum":284.80150836799294}, best_list's length: 8, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9314128943758573,"state":{"restarts":9},"perf":{"precision":0.9019097222222212,"recall":0.9019097222222212,"f1":0.9019097222222212,"seconds":2.3828819394111633e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":51.2578125,"distances_sum":284.80150836799294}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9314128943758573,"state":{"restarts":9},"perf":{"precision":0.9019097222222212,"recall":0.9019097222222212,"f1":0.9019097222222212,"seconds":2.3828819394111633e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":51.2578125,"distances_sum":284.80150836799294}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9314128943758573,"state":{"restarts":9},"perf":{"precision":0.9019097222222212,"recall":0.9019097222222212,"f1":0.9019097222222212,"seconds":2.3828819394111633e-5,"exhaustive_search_seconds":6.819143891334534e-6,"evaluations":51.2578125,"distances_sum":284.80150836799294}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999991, conf: {"restarts":13}, perf: {"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":5.628727376461029e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":148.921875,"distances_sum":128.20161053352058}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8567708333333323, conf: {"restarts":8}, perf: {"precision":0.8567708333333323,"recall":0.8567708333333323,"f1":0.8567708333333323,"seconds":4.632025957107544e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":117.5234375,"distances_sum":129.05081812478602}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111102, conf: {"restarts":11}, perf: {"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":5.008280277252197e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":130.7578125,"distances_sum":127.9532965477556}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555548, conf: {"restarts":14}, perf: {"precision":0.8602430555555548,"recall":0.8602430555555548,"f1":0.8602430555555548,"seconds":6.233155727386475e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":158.9765625,"distances_sum":128.60995913110673}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888878, conf: {"restarts":18}, perf: {"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":6.930716335773468e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":177.1796875,"distances_sum":128.71753997169435}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999991, conf: {"restarts":15}, perf: {"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":6.402656435966492e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":162.78125,"distances_sum":129.05129721947014}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8689236111111102,"state":{"restarts":11},"perf":{"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":5.008280277252197e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":130.7578125,"distances_sum":127.9532965477556}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777771, conf: {"restarts":19}, perf: {"precision":0.8715277777777771,"recall":0.8715277777777771,"f1":0.8715277777777771,"seconds":7.763504981994629e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":187.2734375,"distances_sum":127.96131970919669}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8862847222222211, conf: {"restarts":23}, perf: {"precision":0.8862847222222211,"recall":0.8862847222222211,"f1":0.8862847222222211,"seconds":8.291378617286682e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":208.203125,"distances_sum":127.33883740566671}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8862847222222211,"state":{"restarts":23},"perf":{"precision":0.8862847222222211,"recall":0.8862847222222211,"f1":0.8862847222222211,"seconds":8.291378617286682e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":208.203125,"distances_sum":127.33883740566671}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8862847222222211,"state":{"restarts":23},"perf":{"precision":0.8862847222222211,"recall":0.8862847222222211,"f1":0.8862847222222211,"seconds":8.291378617286682e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":208.203125,"distances_sum":127.33883740566671}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8862847222222211,"state":{"restarts":23},"perf":{"precision":0.8862847222222211,"recall":0.8862847222222211,"f1":0.8862847222222211,"seconds":8.291378617286682e-5,"exhaustive_search_seconds":2.812594175338745e-5,"evaluations":208.203125,"distances_sum":127.33883740566671}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888877, conf: {"restarts":22}, perf: {"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.00014293380081653595,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":312.1875,"distances_sum":56.40238662343472}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111102, conf: {"restarts":28}, perf: {"precision":0.8454861111111102,"recall":0.8454861111111102,"f1":0.8454861111111102,"seconds":0.00016964785754680634,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":362.09375,"distances_sum":56.43973502051085}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333325, conf: {"restarts":30}, perf: {"precision":0.8489583333333325,"recall":0.8489583333333325,"f1":0.8489583333333325,"seconds":0.0001790616661310196,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":389.9375,"distances_sum":56.40123744960874}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888877,"state":{"restarts":22},"perf":{"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.00014293380081653595,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":312.1875,"distances_sum":56.40238662343472}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555546, conf: {"restarts":40}, perf: {"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.0002206750214099884,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":469.2578125,"distances_sum":56.257118177600205}, best_list's length: 10, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555546,"state":{"restarts":40},"perf":{"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.0002206750214099884,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":469.2578125,"distances_sum":56.257118177600205}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555546,"state":{"restarts":40},"perf":{"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.0002206750214099884,"exhaustive_search_seconds":0.0003481954336166382,"evaluations":469.2578125,"distances_sum":56.257118177600205}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(40), SatNeighborhood(32), 2020-08-07T05:04:02.682
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1340, 0.013834547f0), Item(1774, 0.026230717f0), Item(3599, 0.028368447f0), Item(1746, 0.040467385f0), Item(613, 0.04571962f0), Item(7759, 0.04816006f0), Item(7658, 0.050743457f0), Item(7864, 0.055910107f0), Item(8720, 0.056178123f0), Item(5152, 0.05678723f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.074626865671642,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9517383658008661,"seconds":0.0036288034170866013,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.375,"distances_sum":570.4813744425774}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.074626865671642,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9517383658008661,"seconds":0.0036288034170866013,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.375,"distances_sum":570.4813744425774}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.146759374223988, conf: {"bsize":2}, perf: {"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.1710450053215027e-5,"exhaustive_search_seconds":6.4838677644729614e-6,"evaluations":31.4609375,"distances_sum":287.1036728397012}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.146759374223988,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.1710450053215027e-5,"exhaustive_search_seconds":6.4838677644729614e-6,"evaluations":31.4609375,"distances_sum":287.1036728397012}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.146759374223988,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.1710450053215027e-5,"exhaustive_search_seconds":6.4838677644729614e-6,"evaluations":31.4609375,"distances_sum":287.1036728397012}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.146759374223988,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.1710450053215027e-5,"exhaustive_search_seconds":6.4838677644729614e-6,"evaluations":31.4609375,"distances_sum":287.1036728397012}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.93220338983051, conf: {"bsize":4}, perf: {"precision":0.989583333333333,"recall":0.989583333333333,"f1":0.989583333333333,"seconds":2.9053539037704468e-5,"exhaustive_search_seconds":3.203935921192169e-5,"evaluations":59.0,"distances_sum":121.58342692162842}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.93220338983051,"state":{"bsize":4},"perf":{"precision":0.989583333333333,"recall":0.989583333333333,"f1":0.989583333333333,"seconds":2.9053539037704468e-5,"exhaustive_search_seconds":3.203935921192169e-5,"evaluations":59.0,"distances_sum":121.58342692162842}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.93220338983051,"state":{"bsize":4},"perf":{"precision":0.989583333333333,"recall":0.989583333333333,"f1":0.989583333333333,"seconds":2.9053539037704468e-5,"exhaustive_search_seconds":3.203935921192169e-5,"evaluations":59.0,"distances_sum":121.58342692162842}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.93220338983051,"state":{"bsize":4},"perf":{"precision":0.989583333333333,"recall":0.989583333333333,"f1":0.989583333333333,"seconds":2.9053539037704468e-5,"exhaustive_search_seconds":3.203935921192169e-5,"evaluations":59.0,"distances_sum":121.58342692162842}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.16484496988623, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.121637463569641e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":105.0703125,"distances_sum":54.20510134473443}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.16484496988623,"state":{"bsize":8},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.121637463569641e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":105.0703125,"distances_sum":54.20510134473443}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.25471124620061, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.714703679084778e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":102.8125,"distances_sum":54.20510134473443}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.25471124620061,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.714703679084778e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":102.8125,"distances_sum":54.20510134473443}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.43239951278927, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.01746141910553e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":102.625,"distances_sum":54.2053249143064}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.43239951278927,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.01746141910553e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":102.625,"distances_sum":54.2053249143064}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.43239951278927,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.01746141910553e-5,"exhaustive_search_seconds":0.0003628041595220566,"evaluations":102.625,"distances_sum":54.2053249143064}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-08-07T05:04:06.858
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2826, 0.014745487f0), Item(7299, 0.038480286f0), Item(266, 0.040707987f0), Item(7008, 0.04240606f0), Item(6879, 0.04373224f0), Item(2111, 0.05636806f0), Item(5775, 0.057012867f0), Item(9867, 0.059881005f0), Item(9955, 0.06068393f0), Item(5254, 0.06087689f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
