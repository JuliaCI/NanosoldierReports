Julia Version 1.6.0-DEV.654
Commit bf8a8e8f9c (2020-08-18 16:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed StackPointers ─────── v0.1.2
  Installed SIMDPirates ───────── v0.8.24
  Installed VectorizationBase ─── v0.12.32
  Installed VectorizedRNG ─────── v0.1.12
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.2
  Installed PaddedMatrices ────── v0.1.10
  Installed OffsetArrays ──────── v1.1.2
  Installed LoopVectorization ─── v0.8.24
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_sRTsPM/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_sRTsPM/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [1.3651302310790925e-12, 2.9984903449076228e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.914779942552741e-13, -1.7142953723237042e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-5.81756864903582e-14, -1.1035616864774056e-13, 1.2216894162975223e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.2372771957843725e-12, 8.776535054266787e-12, -9.505840559143053e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3145040611561853e-12, -4.5141668181258865e-13, -2.495115225542577e-12, -9.071632334212154e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.007638417149792e-12, -1.535771509963979e-12, 2.1531665339580286e-12, -2.8761437675939305e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [4.3428372009657323e-11, 1.7603696278456482e-12, 8.944556206813559e-11, 8.627987213571942e-12, 4.490918747990236e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7694734566475745e-11, 3.4441782759131456e-11, 3.4677372084956914e-11, 6.481015724091321e-11, 1.4220180588608855e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.1685985512599473e-11, -1.0203060618607651e-11, -5.937028646485487e-12, 2.229794127117657e-11, -2.251243635953415e-11, -1.0607403844176133e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.00834962180852e-12, -4.6432968581200385e-11, 4.072364667706552e-11, 1.847033637147888e-11, -9.349798713031987e-11, 8.022182917954979e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [3.9143133179209144e-11, -3.2809310823722626e-11, 5.3521631571129547e-11, 8.457856637278383e-11, -6.384648365553858e-11, 1.1288925350072532e-10, 1.0611511669367246e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0959234348083555e-11, -2.0270696232671526e-10, 2.433564461057358e-11, -4.371292217086875e-11, -4.3009895644985363e-10, 4.4088288575494516e-11, 1.1125211862861306e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-3.739564213844915e-12, -1.7988166511884174e-11, -1.5943912856641873e-12, -2.560396339390536e-12, -2.808198118486871e-12, -3.8615777242512195e-11, -2.202349413948923e-12, -2.735034421164073e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7498225091117092e-12, -8.423262087831063e-12, -7.667422252666256e-12, 1.5231815808647298e-11, -3.2199798383203415e-12, -1.6250223389135954e-11, -1.5779266782089962e-11, 3.183275865126234e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [2.607640769980435e-10, -2.584843450392782e-11, 1.5776202566541997e-10, 1.6444845485352744e-11, 5.379938716743027e-10, -4.0005998513947816e-11, 3.260292036344481e-10, 2.485012196018488e-11, 4.4916270702799466e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1739254840724698e-10, 4.6351811278100286e-12, 1.4483014787458615e-10, 9.357004060461804e-11, -4.172165946059181e-10, 1.5195844582649443e-11, 2.858298042696106e-10, 1.78651760052162e-10, 9.949818746690653e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [8.923173311359278e-11, 4.845324141911078e-11, 2.8619329128787285e-11, 2.8068436463968283e-11, -1.166156060605772e-11, 1.8456836059499437e-10, 1.0027090269204564e-10, 5.5168980495068354e-11, 5.586686668834773e-11, -1.478261957288396e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8954284242720405e-11, 1.1924417009367971e-10, 1.9651591465219553e-10, 1.9964807584926803e-10, 1.9924351057909462e-10, -7.496003817664132e-11, 2.2299762036936954e-10, 4.1458303456920476e-10, 3.954119254245825e-10, 3.973150697333949e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-7.727485318298477e-12, -1.64932512092264e-11, -1.2294476547936029e-10, -2.414135558126418e-11, 4.080669135930748e-11, -1.8802404078144264e-11, -2.581401759016444e-11, -2.519919828358752e-10, -4.714373336156541e-11, 8.333689294204305e-11, 7.567280135845067e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.317312925408487e-11, -6.920353179395988e-12, 9.61120072417998e-12, 2.1360468949183087e-11, -4.1492365099315975e-12, -2.482325456298895e-11, -1.5554668664208293e-11, 1.9929613515046185e-11, 4.1765924052583614e-11, -6.863731805140105e-12, 2.107203300738547e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [1.1757883555674198e-10, -8.334455348091296e-11, -2.9077518171050087e-11, -1.7332468793540556e-11, 1.1103384878197176e-10, -8.211908930633172e-11, 2.3087376455066533e-10, -1.6869594610113836e-10, -5.722855522805048e-11, -4.972333655928196e-11, 2.052320535739227e-10, -1.7242252070559516e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.898215415025334e-11, -1.9377832671807482e-12, 7.185452233215983e-11, 3.349498456373112e-11, -1.6148549164540782e-10, 5.153877324914902e-12, -1.5580881029819693e-10, -1.0107026326977575e-11, 1.4230439049356391e-10, 6.586864387259084e-11, -3.328330944185609e-10, 1.3834933199063926e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [2.8871793844587046e-11, 2.2722623782556184e-10, 4.581002244208321e-12, -7.611156149778253e-11, 1.9112267324317145e-11, 4.9578785521475766e-11, 4.5027315209722474e-11, 4.586815371965258e-10, 2.652544850434424e-12, -1.693548634662534e-10, 2.2734258919854256e-11, 1.0028688990360024e-10, 1.169138119649915e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.610534093922979e-11, 2.3569368678977298e-11, -6.349032410923883e-12, -9.123146682554761e-12, -6.505462835093567e-12, -3.502309553482519e-12, 7.149369984915666e-11, 4.8336890046130065e-11, -1.0524026095026784e-11, -1.8108403665451078e-11, -1.230282542508121e-11, -3.692934846810658e-12, -4.50417481090426e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [4.9250825640001494e-11, -5.584366302713306e-11, 1.1316303449859788e-10, -6.670197727487448e-11, -4.136768705365057e-11, 7.718270467194088e-12, -9.123701794067074e-11, 9.879475015850403e-11, -1.165015861559482e-10, 2.2210988603887927e-10, -1.3693357558963726e-10, -8.41414715679889e-11, 1.7004175845158898e-11, -1.7831480736418825e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.4444003205180707e-11, -1.6077139619596892e-10, -1.0262857230713962e-10, -7.285816394642097e-11, -1.103471758412411e-10, -3.467404141588304e-11, -5.386080470515253e-11, 7.014167024976814e-11, -3.302195183962908e-10, -2.1471446842724617e-10, -1.4230394640435406e-10, -2.2717328018728722e-10, -6.939804286787421e-11, -1.1425871360160045e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-4.914590956417442e-11, -1.3692713629609443e-11, 4.033595679686641e-11, 4.565081646035196e-11, -2.3647195313003522e-11, 1.926081516501199e-11, -7.490141840094111e-11, -9.219847107999612e-11, -2.4648838525820338e-11, 8.654521543860483e-11, 8.898393133449645e-11, -4.4268699816996104e-11, 4.0323300254385686e-11, -1.5884660253817628e-10, -2.579148006276455e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.132316793776681e-11, 3.098898915254722e-11, 1.4298406902923944e-10, 6.436673416487793e-11, -6.788758444287168e-11, 2.541811205958311e-11, 5.1088466790361053e-11, 1.0973866260144405e-10, 5.005196257457101e-11, 2.9210478480479196e-10, 1.3161116640958426e-10, -1.4420065141962368e-10, 5.140066150488565e-11, 1.0116374404844919e-10, -5.705436123548679e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.8599566331545248e-11, 7.777356536564639e-11, -1.8275492230657164e-11, -2.422750888797509e-11, -1.2304268715013222e-11, 4.4315440206332823e-11, 2.247668717814122e-11, -2.9030111647898593e-11, 3.625566513676404e-11, 1.4905410239407502e-10, -3.488864752654308e-11, -4.879618931141749e-11, -2.18906004434416e-11, 8.782463645218286e-11, 4.2814196632434687e-11, -5.89442938903062e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5702994460298214e-11, 1.0508038883472182e-11, -1.2970291507485854e-11, 5.345057729755354e-12, -1.818567518796499e-11, -3.753553023955192e-12, 2.5584423468671957e-11, 5.538902669854906e-12, 3.148725724599899e-11, 2.0972334979774132e-11, -2.8882451985623447e-11, 1.0353273793839435e-11, -3.5325298242128156e-11, -8.66673399713136e-12, 5.329270358345184e-11, 1.3912870855392612e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [2.4446222823826247e-11, -2.248246033786927e-11, -1.1145084855002096e-11, -1.0579315201653117e-11, -7.530731593874407e-11, 2.7569058147491887e-12, -2.0363377650767234e-11, 4.943823128655822e-12, 4.82440754012714e-11, -4.466704783823161e-11, -2.2968960067260014e-11, -2.002431553904671e-11, -1.544168126699219e-10, 5.2657878057971175e-12, -4.1996739419403184e-11, 5.675238057278875e-12, -1.6344592346229092e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2799894477666385e-10, 3.076605636920249e-11, 8.166889386984622e-11, -1.452626907649801e-10, -3.7133296437730223e-11, 7.97482080372447e-11, -8.402945006480422e-11, -4.483635684948695e-12, 2.3809931803953077e-10, 6.393685580974307e-11, 1.6751222631228302e-10, -3.0599700551192655e-10, -6.422951059903426e-11, 1.6153167692323223e-10, -1.85110038408709e-10, 1.4033219031261979e-12, -3.052558206206868e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [6.047007339304855e-11, -8.093326009372959e-11, -4.132183484273355e-11, -6.719580447622775e-11, -7.581946182000365e-11, -7.446332439542402e-11, 2.319167080599982e-11, 3.6350922272276875e-11, -2.669886534079069e-11, 1.1436807056952603e-10, -1.7282975051102767e-10, -8.686595887041904e-11, -1.3133061305126148e-10, -1.4934475878192188e-10, -1.5451895318818742e-10, 4.068589909422826e-11, 7.431455451012425e-11, -5.6338156362301106e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3286260980294173e-10, -4.058131608530857e-11, -5.950129278176064e-11, 1.7654988582194164e-11, 1.6851831041719834e-10, -2.4396706876927965e-10, -1.3558687506076694e-10, 1.2813039518277947e-10, 1.0293677021877556e-10, 2.788205222259421e-10, -8.561740205692558e-11, -1.255763271146293e-10, 4.3408165950609146e-11, 3.374103219044855e-10, -4.717872759130159e-10, -2.561811873746933e-10, 2.612325911144353e-10, 2.030160484167709e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9474555301712826e-10, 1.5938761421807612e-10, 1.4078316290522253e-10, -1.0754952484148816e-10, 5.903855182509687e-11, 1.3991940939206415e-10, 7.969691573350701e-11, 6.863376533772225e-11, 5.295675009620027e-11, -3.8015102177269e-10, 3.2971003705029034e-10, 2.8429503196036876e-10, -2.278912614173123e-10, 1.1875367356140032e-10, 2.9391622469177037e-10, 1.488376089042731e-10, 1.1785994402657707e-10, 1.07067243959591e-10, -6.004308161777772e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2004353067140983e-10, -8.034961584968414e-11, 4.313527313115628e-11, -1.1958167789316576e-10, 5.7506222006509233e-11, -4.3416048534083984e-11, 2.6328494939775737e-11, -7.195910534107952e-11, -1.3578504987066253e-10, 2.345821314975183e-10, -1.6112289280556524e-10, 8.86153372903209e-11, -2.4010993193712693e-10, 1.2190493059449636e-10, -7.522782397018091e-11, 5.633160604645582e-11, -1.360982437859093e-10, -2.86189960618799e-10, 1.1479706074624119e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5181234047645376e-10, -9.177891779899028e-11, 1.2905965185439072e-10, 2.043749613989121e-10, -1.3181322700006604e-10, -3.262112802104866e-11, 2.1175061704070686e-11, 2.1003421224463636e-11, 3.0011326757062307e-11, -5.484790399634676e-11, -2.9634583675886006e-10, -1.672862959267718e-10, 2.7064572805102216e-10, 3.9758396574995913e-10, -2.662517983864632e-10, -5.707856409742362e-11, 4.444289380955979e-11, 3.77677888963035e-11, 7.560863046762734e-11, -1.0618472767731646e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8016865777070734e-10, -2.4243940188739543e-10, 6.818590136958846e-11, 8.563594278143682e-12, 1.1845302516633183e-10, -1.2942513727409732e-10, -9.672707079744214e-11, -8.802669704266464e-11, 1.01081365500022e-11, -2.281475008913958e-11, -3.528340952740905e-10, -4.789797447557476e-10, 1.3886491956327518e-10, 1.4187984120894725e-11, 2.330708959163985e-10, -2.698944401302583e-10, -1.9404056139649128e-10, -1.8270385204743889e-10, 2.7394753132625738e-11, -5.0538240259356826e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [5.164135785662438e-11, 1.3492251760283125e-10, -4.5210946097995475e-11, 1.4980905405082012e-11, 1.205515687274783e-10, -3.992328689861324e-11, 6.294076371204937e-11, -3.239253310027834e-11, 3.415823179864219e-11, 8.47122372249487e-12, 9.45348244130173e-11, 2.654123587575441e-10, -9.789835608842168e-11, 2.676503463305835e-11, 2.385411868033316e-10, -8.043576915639505e-11, 1.2810352778558354e-10, -5.759825949525066e-11, 6.345413083863605e-11, 1.727307186172311e-11, 1.3207213100940862e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2055112463826845e-10, -4.222688865240798e-11, -9.949074897264154e-11, -7.541345325989823e-11, -2.1174950681768223e-11, 4.1235015402207864e-11, 6.887335146643636e-11, -1.5296841571199593e-10, -9.267697720360957e-11, 5.1755044694346e-11, 2.5984725482430804e-10, -8.154088515510693e-11, -1.9748180868361942e-10, -1.536382132627523e-10, -4.285838350881477e-11, 7.911782340386253e-11, 1.390025872183287e-10, -3.231692691230137e-10, -1.839643992695983e-10, 1.0412382067670478e-10, 4.446665258228677e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.171540642275204e-11, -1.6500356636584e-11, 6.215361558759014e-11, 9.576139881062318e-11, -2.5562774119691767e-11, -5.70765656959793e-11, -2.930633513642533e-11, 7.772826826624168e-11, 3.56441542948005e-11, -6.098455074265985e-13, 5.854072782085495e-11, -1.2406853322488587e-11, -4.203615233677738e-11, 1.117146375406719e-10, 1.938091909181594e-10, -5.169908945390489e-11, -1.1349310380381894e-10, -6.043920919296397e-11, 1.6118839596401813e-10, 7.333489371319502e-11, 6.065370428132155e-12, 1.0966960672931236e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7890577908019623e-11, 6.584310874302446e-11, -5.847133888181588e-11, -1.0402023686850725e-10, -1.54680157571363e-10, 2.93544077933916e-10, 1.3062906312200084e-10, -9.296574621231457e-11, -3.761013722680673e-11, 1.5129630881460798e-10, -5.550992998593074e-11, 4.267808328961564e-11, 1.2926282266789713e-10, -1.2274103955434157e-10, -2.1281210127455097e-10, -2.9617852614904905e-10, 5.759592802689895e-10, 2.571751700486402e-10, -1.8407386725982633e-10, -6.565559207416527e-11, 2.9471691753713003e-10, -1.173927621778148e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1080026613162772e-11, 2.7176927375194282e-11, -8.343659096965439e-12, 1.070254995738651e-12, 3.970290762822515e-11, -1.4481416066303154e-11, 1.070921129553426e-11, -1.7072343538870882e-11, 2.2238655361661586e-11, 4.338063241959844e-11, 4.745981385667619e-12, -4.269473663498502e-11, 5.5320859004837075e-11, -1.8419821223858435e-11, 4.6074255521944e-13, 7.779532573692904e-11, -3.024613892677053e-11, 2.188760284127511e-11, -3.658096048297921e-11, 4.306466294679012e-11, 7.987677186349629e-11, 9.866996109053616e-12, -9.98634508420082e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.907552225181689e-11, 1.0904788183552228e-10, -4.041056378412122e-11, 2.2316370973385347e-10, 6.193134893806018e-11, 6.927747264739992e-11, -2.808642207696721e-12, -1.1497713892083539e-10, 3.1628699659336235e-11, -3.737665732472806e-11, -4.2483128126491465e-11, -1.1295975266278901e-10, 2.2258195286894988e-10, -7.093126086488155e-11, 4.426767841181345e-10, 1.2765855039731377e-10, 1.4387424585038389e-10, -1.3391954212238488e-11, -2.2878776650969712e-10, 5.667732949632409e-11, -7.863509843275551e-11, -7.624012532403412e-11, 1.1074918759845787e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-2.284235023353176e-10, -9.582989957124255e-10, -5.465905505985802e-11, -2.2951540668003645e-10, -1.3430434542271996e-10, -1.0245526649299563e-10, 5.817522019668786e-10, -1.0181000487108349e-10, 7.228257992153431e-10, 8.395062423005584e-11, -1.2336420773806367e-10, -4.900835293142336e-11, -4.4780623653650764e-10, -1.9187572641854445e-9, -1.0772316372253954e-10, -4.611976356372338e-10, -2.675560883957928e-10, -2.0583279525254738e-10, 1.174863539787907e-9, -1.9518242577731826e-10, 1.4516954305321406e-9, 1.7041967836917138e-10, -2.3486579348031e-10, -9.853795557290823e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.3146820278016094e-11, 1.5314194357074484e-11, -7.373157639989358e-11, -4.734668213046689e-11, 2.8390845230319428e-11, -3.580336027653175e-11, -8.867895306963192e-11, 2.5921487178948155e-11, 1.3748779892353014e-11, -1.0057032984178704e-10, 3.0508706672094377e-11, -6.50243192623634e-11, 1.0554490614822498e-10, 2.117617192709531e-11, -1.4431034145445665e-10, -1.0016820706226781e-10, 5.246159062721745e-11, -5.945144376795497e-11, -1.7702350696424674e-10, 5.125500024405483e-11, 2.5028201733334754e-11, -1.8866141981987994e-10, 5.780531608934325e-11, -1.3750189875594288e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
