Julia Version 1.6.0-DEV.654
Commit bf8a8e8f9c (2020-08-18 16:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_EXcMeY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_EXcMeY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.979047 seconds (1.34 M allocations: 70.995 MiB, 5.19% gc time)
Running: chebyshev_quadrature with k=1
  1.702520 seconds (2.24 M allocations: 128.507 MiB, 3.96% gc time)
Running: chebyshev_quadrature with k=2
  0.298421 seconds (425.05 k allocations: 24.389 MiB)
Running: chebyshev_quadrature with k=3
  0.357713 seconds (544.93 k allocations: 29.873 MiB, 4.48% gc time)
Running: chebyshev_quadrature with k=4
  0.326338 seconds (487.80 k allocations: 26.420 MiB)
Running: jacobi_quadrature with α=β=1
 41.432689 seconds (39.42 M allocations: 3.140 GiB, 8.48% gc time)
Running: laguerre_quadrature with k=1
  3.212405 seconds (3.33 M allocations: 185.676 MiB, 3.52% gc time)
Running: legendre_quadrature
  0.171282 seconds (214.99 k allocations: 12.337 MiB)
Running: lobatto_quadrature
  0.329801 seconds (343.52 k allocations: 20.577 MiB, 7.25% gc time)
Running: radau_quadrature
  0.277736 seconds (325.93 k allocations: 19.580 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.892942 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.146981 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.288187 seconds (100.02 M allocations: 1.491 GiB, 0.39% gc time)
Running: rombergs_method
  0.548224 seconds (752.65 k allocations: 43.325 MiB)
Running: simpsons_rule
  0.041787 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.096474 seconds (113.15 k allocations: 5.978 MiB)
Running: trapezoidal_rule
  0.298760 seconds (1.52 M allocations: 25.801 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.082969 seconds (32.63 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.424784 seconds (258.96 k allocations: 13.053 MiB)
Running: chebyshev_quadrature with k=2
  0.150284 seconds (94.72 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=3
  0.180639 seconds (82.98 k allocations: 2.521 MiB, 17.07% gc time)
Running: chebyshev_quadrature with k=4
  0.145127 seconds (65.60 k allocations: 2.167 MiB)
Running: jacobi_quadrature with α=β=1
  1.785330 seconds (514.13 k allocations: 162.416 MiB, 7.34% gc time)
Running: legendre_quadrature
  0.157588 seconds (43.38 k allocations: 2.490 MiB)
Running: lobatto_quadrature
  0.021348 seconds (16.66 k allocations: 1.026 MiB)
Running: radau_quadrature
  0.020376 seconds (16.64 k allocations: 1.026 MiB)
Running: rectangle_rule_left
 29.195851 seconds (471.41 M allocations: 7.025 GiB, 2.73% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.162342 seconds (476.96 M allocations: 7.107 GiB, 2.00% gc time)
Running: rombergs_method
  0.345196 seconds (339.66 k allocations: 19.255 MiB)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.076371 seconds (19.90 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.072195 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035186 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.125321 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.135906 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.137165 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.137924 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.346086 seconds (379.03 k allocations: 19.795 MiB)
Running: legendre_quadrature
  0.072614 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000100 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000038 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000605 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000500 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.082143 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000044 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028061 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024193 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.079138 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.281145 seconds (240.25 k allocations: 13.487 MiB, 18.27% gc time)
Running: chebyshev_quadrature with k=2
  0.247834 seconds (295.45 k allocations: 16.574 MiB)
Running: chebyshev_quadrature with k=3
  0.227114 seconds (275.41 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.255281 seconds (275.44 k allocations: 14.879 MiB, 8.63% gc time)
Running: jacobi_quadrature with α=β=1
  2.071335 seconds (465.72 k allocations: 164.227 MiB, 4.36% gc time)
Running: legendre_quadrature
  0.178963 seconds (193.00 k allocations: 11.107 MiB, 7.70% gc time)
Running: lobatto_quadrature
  0.185863 seconds (204.22 k allocations: 11.811 MiB)
Running: radau_quadrature
  0.200238 seconds (204.22 k allocations: 11.824 MiB)
Running: rectangle_rule_left
  1.115531 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.038082 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.168453 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.135975 seconds (139.91 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.032525 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.038359 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.029676 seconds (45.20 k allocations: 1.824 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048015 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.185318 seconds (247.34 k allocations: 13.585 MiB)
Running: chebyshev_quadrature with k=2
  0.202012 seconds (303.07 k allocations: 16.573 MiB)
Running: chebyshev_quadrature with k=3
  0.241545 seconds (282.82 k allocations: 15.002 MiB, 10.40% gc time)
Running: chebyshev_quadrature with k=4
  0.211969 seconds (282.86 k allocations: 15.014 MiB)
Running: hermite_quadrature with k=2
 14.557668 seconds (22.12 M allocations: 1.148 GiB, 10.12% gc time)
Running: jacobi_quadrature with α=β=1
  0.458972 seconds (475.71 k allocations: 50.437 MiB, 9.34% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.219001 seconds (288.35 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.154821 seconds (200.06 k allocations: 11.455 MiB)
Running: lobatto_quadrature
  0.245853 seconds (225.62 k allocations: 37.689 MiB, 12.53% gc time)
Running: radau_quadrature
  0.227468 seconds (222.21 k allocations: 30.289 MiB, 8.49% gc time)
Running: rectangle_rule_left
  0.031861 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.030525 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026983 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.122734 seconds (142.73 k allocations: 8.122 MiB)
Running: simpsons_rule
  0.030665 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.036493 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.029936 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051111 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.223712 seconds (242.48 k allocations: 13.367 MiB, 11.86% gc time)
Running: chebyshev_quadrature with k=2
  0.246404 seconds (297.80 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.223089 seconds (277.68 k allocations: 14.769 MiB)
Running: chebyshev_quadrature with k=4
  0.254481 seconds (277.71 k allocations: 14.785 MiB, 11.10% gc time)
Running: hermite_quadrature with k=2
  0.151969 seconds (177.71 k allocations: 10.157 MiB)
Running: jacobi_quadrature with α=β=1
 10.170567 seconds (468.32 k allocations: 1.176 GiB, 9.92% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.185448 seconds (283.21 k allocations: 15.699 MiB)
Running: legendre_quadrature
  0.174733 seconds (195.23 k allocations: 11.220 MiB, 10.06% gc time)
Running: lobatto_quadrature
  0.213484 seconds (215.98 k allocations: 23.351 MiB)
Running: radau_quadrature
  0.218160 seconds (215.13 k allocations: 21.262 MiB, 7.38% gc time)
Running: rectangle_rule_left
  0.028679 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.023250 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022210 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.102355 seconds (138.20 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.031335 seconds (33.49 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.040818 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.028422 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032779 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.234036 seconds (240.81 k allocations: 13.567 MiB)
Running: chebyshev_quadrature with k=2
  0.256324 seconds (296.03 k allocations: 16.652 MiB, 8.16% gc time)
Running: chebyshev_quadrature with k=3
  0.209509 seconds (276.01 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.245925 seconds (276.04 k allocations: 14.875 MiB, 7.76% gc time)
Running: jacobi_quadrature with α=β=1
  2.143417 seconds (466.36 k allocations: 195.250 MiB, 10.10% gc time)
Running: legendre_quadrature
  0.153888 seconds (193.56 k allocations: 11.134 MiB)
Running: lobatto_quadrature
  0.199535 seconds (204.78 k allocations: 11.852 MiB, 8.69% gc time)
Running: radau_quadrature
  0.169662 seconds (204.78 k allocations: 11.847 MiB)
Running: rectangle_rule_left
  0.366613 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.026754 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.123200 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.123059 seconds (151.28 k allocations: 8.811 MiB)
Running: simpsons_rule
  0.028307 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.033097 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.024013 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033101 seconds (33.23 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.185031 seconds (241.38 k allocations: 13.515 MiB, 10.31% gc time)
Running: chebyshev_quadrature with k=2
  0.226730 seconds (296.63 k allocations: 16.566 MiB)
Running: chebyshev_quadrature with k=3
  0.219611 seconds (276.55 k allocations: 14.904 MiB)
Running: chebyshev_quadrature with k=4
  0.216454 seconds (276.58 k allocations: 14.986 MiB)
Running: jacobi_quadrature with α=β=1
  2.260839 seconds (467.03 k allocations: 149.920 MiB, 12.61% gc time)
Running: legendre_quadrature
  0.153824 seconds (194.13 k allocations: 11.150 MiB)
Running: lobatto_quadrature
  0.197975 seconds (205.36 k allocations: 11.859 MiB, 9.39% gc time)
Running: radau_quadrature
  0.175197 seconds (205.35 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  1.216896 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.027573 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.176883 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.129562 seconds (141.21 k allocations: 8.136 MiB)
Running: simpsons_rule
  0.035794 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.035146 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.028967 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.169440 seconds (152.87 k allocations: 9.084 MiB)
Running: chebyshev_quadrature with k=1
  0.141571 seconds (70.79 k allocations: 2.245 MiB)
Running: chebyshev_quadrature with k=2
  0.185652 seconds (106.01 k allocations: 2.914 MiB, 16.38% gc time)
Running: chebyshev_quadrature with k=3
  0.160408 seconds (93.50 k allocations: 2.700 MiB)
Running: chebyshev_quadrature with k=4
  0.151148 seconds (73.03 k allocations: 2.295 MiB)
Running: jacobi_quadrature with α=β=1
  2.144214 seconds (487.93 k allocations: 168.240 MiB, 5.90% gc time)
Running: legendre_quadrature
  0.113015 seconds (19.54 k allocations: 1.128 MiB)
Running: lobatto_quadrature
  0.000112 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000049 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.191840 seconds (590.00 M allocations: 8.792 GiB, 2.85% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.263561 seconds (592.75 M allocations: 8.833 GiB, 2.88% gc time)
Running: rombergs_method
  0.158277 seconds (21.38 k allocations: 1.207 MiB)
Running: simpsons_rule
  0.000034 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031097 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023399 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.698136 seconds (629.34 M allocations: 9.388 GiB, 4.09% gc time)
Running: chebyshev_quadrature with k=1
  0.493465 seconds (439.07 k allocations: 24.254 MiB)
Running: chebyshev_quadrature with k=2
 12.874657 seconds (496.44 k allocations: 4.042 GiB, 3.93% gc time)
Running: chebyshev_quadrature with k=3
  5.931068 seconds (290.50 k allocations: 1.643 GiB, 5.62% gc time)
Running: chebyshev_quadrature with k=4
  8.209481 seconds (290.53 k allocations: 2.262 GiB, 2.77% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 55.803573 seconds (505.08 k allocations: 13.255 GiB, 3.29% gc time)
Running: legendre_quadrature.
  6.186147 seconds (232.76 k allocations: 1.977 GiB, 1.29% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.791662 seconds (8.24 M allocations: 13.384 GiB, 3.57% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.900985 seconds (7.24 M allocations: 13.369 GiB, 2.98% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.023165 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.114833 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.194319 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.174793 seconds (456.53 k allocations: 153.692 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.963073 seconds (600.04 M allocations: 8.943 GiB, 8.01% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.517970 seconds (600.05 M allocations: 8.944 GiB, 7.47% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.744089 seconds (600.04 M allocations: 8.943 GiB, 8.00% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.076938 seconds (182.51 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.225031 seconds (257.97 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.234395 seconds (284.13 k allocations: 15.178 MiB)
Running: chebyshev_quadrature with k=3
  0.281119 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.310051 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.422603 seconds (405.29 k allocations: 35.862 MiB)
Running: laguerre_quadrature with k=2
  0.172595 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.134487 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.037477 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.033887 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.061253 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.048866 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.079617 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.250718 seconds (179.95 k allocations: 10.268 MiB)
Running: simpsons_rule
  0.001955 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.050811 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.187999 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002341 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.112197 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.118211 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.177993 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.124817 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.350670 seconds (402.13 k allocations: 906.581 MiB, 4.53% gc time)
Running: legendre_quadrature
  0.083359 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000193 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000131 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.559851 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000400 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.381660 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070511 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000072 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000799 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000748 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.129694 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.115696 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.130566 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.134945 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.729681 seconds (388.40 k allocations: 253.809 MiB)
Running: legendre_quadrature
  0.134747 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000089 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.855628 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001116 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.687869 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083175 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001807 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
