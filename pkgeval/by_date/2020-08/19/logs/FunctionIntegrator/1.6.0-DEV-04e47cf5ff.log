Julia Version 1.6.0-DEV.675
Commit 04e47cf5ff (2020-08-19 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_C0q7ac/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_C0q7ac/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.877263 seconds (1.34 M allocations: 70.446 MiB, 2.79% gc time)
Running: chebyshev_quadrature with k=1
  1.766674 seconds (2.24 M allocations: 128.462 MiB, 8.77% gc time)
Running: chebyshev_quadrature with k=2
  0.304148 seconds (424.53 k allocations: 24.372 MiB, 6.74% gc time)
Running: chebyshev_quadrature with k=3
  0.410061 seconds (544.36 k allocations: 29.839 MiB, 14.44% gc time)
Running: chebyshev_quadrature with k=4
  0.328555 seconds (487.27 k allocations: 26.381 MiB)
Running: jacobi_quadrature with α=β=1
 40.695675 seconds (39.22 M allocations: 3.129 GiB, 10.36% gc time)
Running: laguerre_quadrature with k=1
  3.146078 seconds (3.33 M allocations: 185.505 MiB, 3.10% gc time)
Running: legendre_quadrature
  0.284399 seconds (214.74 k allocations: 12.296 MiB)
Running: lobatto_quadrature
  0.437849 seconds (343.60 k allocations: 20.643 MiB)
Running: radau_quadrature
  0.285674 seconds (325.94 k allocations: 19.615 MiB, 9.09% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 85.542005 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.166696 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.519238 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: rombergs_method
  0.549222 seconds (751.64 k allocations: 43.274 MiB)
Running: simpsons_rule
  0.046505 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.157763 seconds (113.10 k allocations: 5.978 MiB, 20.13% gc time)
Running: trapezoidal_rule
  0.299533 seconds (1.52 M allocations: 25.802 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.094479 seconds (32.61 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.436061 seconds (256.66 k allocations: 12.937 MiB)
Running: chebyshev_quadrature with k=2
  0.147506 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.155685 seconds (82.70 k allocations: 2.505 MiB)
Running: chebyshev_quadrature with k=4
  0.155244 seconds (65.31 k allocations: 2.151 MiB)
Running: jacobi_quadrature with α=β=1
  2.768166 seconds (513.68 k allocations: 162.397 MiB, 11.32% gc time)
Running: legendre_quadrature
  0.187746 seconds (43.25 k allocations: 2.486 MiB)
Running: lobatto_quadrature
  0.024095 seconds (16.82 k allocations: 1.040 MiB)
Running: radau_quadrature
  0.024295 seconds (16.81 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 32.813946 seconds (471.41 M allocations: 7.025 GiB, 2.34% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.924797 seconds (476.96 M allocations: 7.107 GiB, 1.72% gc time)
Running: rombergs_method
  0.409348 seconds (339.06 k allocations: 19.227 MiB, 1.82% gc time)
Running: simpsons_rule
  0.000045 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064715 seconds (19.89 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.105733 seconds (18.34 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028291 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.099214 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.101705 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.122006 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.121586 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.431759 seconds (378.58 k allocations: 19.769 MiB, 5.53% gc time)
Running: legendre_quadrature
  0.099914 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000108 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000044 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000787 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000482 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000572 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.098746 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000043 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.038659 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.031080 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066192 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.195053 seconds (239.83 k allocations: 13.484 MiB)
Running: chebyshev_quadrature with k=2
  0.226265 seconds (295.00 k allocations: 16.532 MiB)
Running: chebyshev_quadrature with k=3
  0.291274 seconds (274.98 k allocations: 14.960 MiB, 5.97% gc time)
Running: chebyshev_quadrature with k=4
  0.206326 seconds (275.01 k allocations: 14.874 MiB)
Running: jacobi_quadrature with α=β=1
  2.520394 seconds (465.20 k allocations: 164.209 MiB, 5.17% gc time)
Running: legendre_quadrature
  0.172302 seconds (192.58 k allocations: 11.081 MiB)
Running: lobatto_quadrature
  0.166855 seconds (203.79 k allocations: 11.790 MiB)
Running: radau_quadrature
  0.181302 seconds (203.78 k allocations: 11.796 MiB, 8.51% gc time)
Running: rectangle_rule_left
  1.145873 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.028993 seconds (25.91 k allocations: 1.614 MiB)
Running: rectangle_rule_right
  1.377504 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.163883 seconds (139.53 k allocations: 8.038 MiB)
Running: simpsons_rule
  0.043443 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.038211 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.028712 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043312 seconds (101.38 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.199063 seconds (246.92 k allocations: 13.562 MiB)
Running: chebyshev_quadrature with k=2
  0.329297 seconds (302.62 k allocations: 16.553 MiB, 5.27% gc time)
Running: chebyshev_quadrature with k=3
  0.260648 seconds (282.39 k allocations: 14.975 MiB)
Running: chebyshev_quadrature with k=4
  0.202001 seconds (282.43 k allocations: 14.985 MiB)
Running: hermite_quadrature with k=2
 17.112823 seconds (22.11 M allocations: 1.147 GiB, 9.00% gc time)
Running: jacobi_quadrature with α=β=1
  0.585171 seconds (475.20 k allocations: 50.412 MiB, 16.27% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.508031 seconds (287.89 k allocations: 15.882 MiB, 19.67% gc time)
Running: legendre_quadrature
  0.321924 seconds (199.64 k allocations: 11.432 MiB)
Running: lobatto_quadrature
  0.727119 seconds (225.19 k allocations: 37.600 MiB, 33.83% gc time)
Running: radau_quadrature
  0.247511 seconds (221.78 k allocations: 30.262 MiB)
Running: rectangle_rule_left
  0.030433 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.029553 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.034681 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.158419 seconds (142.35 k allocations: 8.101 MiB)
Running: simpsons_rule
  0.043096 seconds (41.23 k allocations: 2.156 MiB)
Running: simpsons38_rule
  0.093278 seconds (59.97 k allocations: 3.194 MiB, 52.86% gc time)
Running: trapezoidal_rule
  0.033220 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038576 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.199599 seconds (242.05 k allocations: 13.329 MiB)
Running: chebyshev_quadrature with k=2
  0.230379 seconds (297.34 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.251889 seconds (277.25 k allocations: 14.809 MiB, 6.97% gc time)
Running: chebyshev_quadrature with k=4
  0.210456 seconds (277.29 k allocations: 14.760 MiB)
Running: hermite_quadrature with k=2
  0.155460 seconds (177.31 k allocations: 10.136 MiB)
Running: jacobi_quadrature with α=β=1
  9.509610 seconds (467.80 k allocations: 1.176 GiB, 20.51% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.231245 seconds (282.75 k allocations: 15.670 MiB)
Running: legendre_quadrature
  0.171688 seconds (194.81 k allocations: 11.197 MiB)
Running: lobatto_quadrature
  0.247364 seconds (215.55 k allocations: 23.308 MiB, 6.03% gc time)
Running: radau_quadrature
  0.210346 seconds (214.70 k allocations: 21.242 MiB)
Running: rectangle_rule_left
  0.027695 seconds (20.45 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.028633 seconds (26.63 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.025103 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.119274 seconds (137.83 k allocations: 7.967 MiB)
Running: simpsons_rule
  0.034573 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.079287 seconds (50.51 k allocations: 2.938 MiB, 50.00% gc time)
Running: trapezoidal_rule
  0.026888 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034539 seconds (32.45 k allocations: 1.955 MiB)
Running: chebyshev_quadrature with k=1
  0.190474 seconds (240.38 k allocations: 13.560 MiB)
Running: chebyshev_quadrature with k=2
  0.311019 seconds (295.58 k allocations: 16.627 MiB)
Running: chebyshev_quadrature with k=3
  0.253899 seconds (275.58 k allocations: 14.958 MiB, 8.89% gc time)
Running: chebyshev_quadrature with k=4
  0.216582 seconds (275.61 k allocations: 14.785 MiB)
Running: jacobi_quadrature with α=β=1
  1.527965 seconds (465.85 k allocations: 195.225 MiB, 11.19% gc time)
Running: legendre_quadrature
  0.218573 seconds (193.14 k allocations: 11.114 MiB, 6.53% gc time)
Running: lobatto_quadrature
  0.233156 seconds (204.35 k allocations: 11.816 MiB)
Running: radau_quadrature
  0.192946 seconds (204.35 k allocations: 11.839 MiB)
Running: rectangle_rule_left
  0.305423 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.027998 seconds (26.27 k allocations: 1.634 MiB)
Running: rectangle_rule_right
  0.110741 seconds (18.62 k allocations: 1.125 MiB)
Running: rombergs_method
  0.190782 seconds (150.88 k allocations: 8.789 MiB, 11.17% gc time)
Running: simpsons_rule
  0.032051 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.034683 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.025869 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036383 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.201032 seconds (240.95 k allocations: 13.488 MiB)
Running: chebyshev_quadrature with k=2
  0.233641 seconds (296.18 k allocations: 16.542 MiB)
Running: chebyshev_quadrature with k=3
  0.228264 seconds (276.12 k allocations: 14.883 MiB, 7.79% gc time)
Running: chebyshev_quadrature with k=4
  0.220145 seconds (276.15 k allocations: 15.021 MiB)
Running: jacobi_quadrature with α=β=1
  1.956153 seconds (466.51 k allocations: 149.908 MiB, 7.07% gc time)
Running: legendre_quadrature
  0.151316 seconds (193.71 k allocations: 11.130 MiB)
Running: lobatto_quadrature
  0.161604 seconds (204.93 k allocations: 11.900 MiB)
Running: radau_quadrature
  0.165004 seconds (204.92 k allocations: 11.900 MiB)
Running: rectangle_rule_left
  1.154327 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.033115 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.165208 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.250263 seconds (140.83 k allocations: 8.098 MiB, 30.99% gc time)
Running: simpsons_rule
  0.035124 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.040303 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.056204 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179511 seconds (152.73 k allocations: 9.078 MiB)
Running: chebyshev_quadrature with k=1
  0.161639 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.194244 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.168128 seconds (93.21 k allocations: 2.745 MiB)
Running: chebyshev_quadrature with k=4
  0.186189 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  1.481704 seconds (487.34 k allocations: 168.204 MiB, 17.05% gc time)
Running: legendre_quadrature
  0.107480 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000095 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000046 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.316553 seconds (590.00 M allocations: 8.792 GiB, 2.21% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.796122 seconds (592.75 M allocations: 8.833 GiB, 1.99% gc time)
Running: rombergs_method
  0.194777 seconds (21.09 k allocations: 1.189 MiB, 19.12% gc time)
Running: simpsons_rule
  0.000038 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029946 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023108 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.487636 seconds (629.34 M allocations: 9.388 GiB, 2.96% gc time)
Running: chebyshev_quadrature with k=1
  0.539273 seconds (438.71 k allocations: 24.240 MiB, 5.52% gc time)
Running: chebyshev_quadrature with k=2
 13.458873 seconds (496.05 k allocations: 4.042 GiB, 4.09% gc time)
Running: chebyshev_quadrature with k=3
  6.713255 seconds (290.07 k allocations: 1.643 GiB, 4.02% gc time)
Running: chebyshev_quadrature with k=4
  8.520456 seconds (290.11 k allocations: 2.262 GiB, 2.56% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.957715 seconds (504.72 k allocations: 13.255 GiB, 3.08% gc time)
Running: legendre_quadrature.
  5.800597 seconds (232.50 k allocations: 1.976 GiB, 2.21% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.847188 seconds (8.24 M allocations: 13.384 GiB, 4.40% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.236767 seconds (7.24 M allocations: 13.369 GiB, 2.95% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.977096 seconds (23.33 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.216371 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.012727 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.134527 seconds (455.85 k allocations: 153.671 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.724454 seconds (600.04 M allocations: 8.943 GiB, 7.93% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.859937 seconds (600.05 M allocations: 8.944 GiB, 7.74% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.123258 seconds (600.04 M allocations: 8.943 GiB, 8.22% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.062115 seconds (182.49 k allocations: 4.516 MiB)
Running: chebyshev_quadrature with k=1
  0.234055 seconds (257.55 k allocations: 13.997 MiB)
Running: chebyshev_quadrature with k=2
  0.220788 seconds (283.71 k allocations: 15.218 MiB)
Running: chebyshev_quadrature with k=3
  0.221494 seconds (260.22 k allocations: 13.434 MiB)
Running: chebyshev_quadrature with k=4
  0.206860 seconds (260.26 k allocations: 13.434 MiB)
Running: jacobi_quadrature with α=β=1
  0.401577 seconds (404.84 k allocations: 35.828 MiB)
Running: laguerre_quadrature with k=2
  0.191976 seconds (187.56 k allocations: 10.848 MiB)
Running: legendre_quadrature
  0.136189 seconds (151.36 k allocations: 8.368 MiB)
Running: lobatto_quadrature
  0.036324 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.033067 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.057274 seconds (19.80 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.047056 seconds (26.75 k allocations: 1.639 MiB)
Running: rectangle_rule_right
  0.052387 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.246847 seconds (179.30 k allocations: 10.249 MiB)
Running: simpsons_rule
  0.002119 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057267 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.204851 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002111 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.114360 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.119900 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.126417 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.124965 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.695993 seconds (401.68 k allocations: 906.478 MiB, 4.96% gc time)
Running: legendre_quadrature
  0.083572 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000201 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000158 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.160520 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000505 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.939645 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078170 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000067 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000901 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000752 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.109009 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.116713 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.119671 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.120375 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.869099 seconds (387.96 k allocations: 253.740 MiB)
Running: legendre_quadrature
  0.082207 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000096 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.044143 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001105 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.922366 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095062 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001690 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
