Julia Version 1.6.0-DEV.675
Commit 04e47cf5ff (2020-08-19 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed Compat ───────────── v3.14.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.18.0
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_pmiund/Project.toml`
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_pmiund/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.04076004f0), Item(14, 0.0525378f0), Item(42, 0.085584044f0), Item(31, 0.10060203f0)])
Vsorted = Item[Item(39, 0.04076004f0), Item(14, 0.0525378f0), Item(42, 0.085584044f0), Item(31, 0.10060203f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004620790481567383, 0.004982598622639974, 301.0, 50.23107768036425))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004916707674662272, 0.004642868041992187, 301.0, 72.89559507369995))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004080581665039063, 0.004015302658081055, 301.0, 41.00373578071594))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003968079884847005, 0.004014372825622559, 301.0, 9.157594959659036))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003737171490987142, 0.005314040184020996, 301.0, 45.54681591782719))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015196800231933593, 0.00013050238291422526, 301.0, 177.45300187170506))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 0.0005597750345865886, 0.010799662272135416, 300.0, 28.55309146689251)
p = PerformanceResult(1.0, 1.0, 1.0, 7.021427154541016e-5, 3.5834312438964846e-5, 300.0, 28.55309146689251)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004914172490437825, 0.0037738720575968424, 300.0, 1.593757234957593)
p = PerformanceResult(1.0, 1.0, 1.0, 4.093117184109158e-5, 1.6164779663085937e-5, 300.0, 1.593757234957593)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 0.0005597750345865886, 0.010799662272135416, 300.0, 28.55309146689251), PerformanceResult(1.0, 1.0, 1.0, 7.021427154541016e-5, 3.5834312438964846e-5, 300.0, 28.55309146689251), PerformanceResult(1.0, 1.0, 1.0, 0.004914172490437825, 0.0037738720575968424, 300.0, 1.593757234957593), PerformanceResult(1.0, 1.0, 1.0, 4.093117184109158e-5, 1.6164779663085937e-5, 300.0, 1.593757234957593))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00861203670501709, 0.00430903434753418, 347.26666666666665, 28629.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008438889185587566, 0.0034982045491536457, 303.1333333333333, 6947.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.536773681640625e-5, 1.2993812561035156e-5, 89.9, 50.26736561395228))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.322991689046224e-5, 1.4066696166992188e-5, 80.2, 72.98567759990692))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5224685668945312e-5, 1.4670689900716145e-5, 86.8, 41.01794350147247))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.963180541992188e-5, 0.0001618067423502604, 91.0, 45.57166473660618))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8233333333333334, 0.8233333333333334, 0.8233333333333334, 4.8160552978515625e-5, 0.00012506643931070965, 68.23333333333333, 186.41504664719105))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-20T03:47:29.275
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8939999999999998, 0.8909999999999998, 0.8922352941176469, 2.240180969238281e-5, 2.396106719970703e-5, 151.46, 53.10546354949474))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.15601921081543e-5, 1.9080638885498047e-5, 154.95, 0.0))
*** advance 1 from 1000; 2020-08-20T03:47:29.913
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8585000000000003, 0.8550000000000003, 0.8565555555555556, 2.8908252716064453e-5, 3.056049346923828e-5, 151.26, 81.32771575078368))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.93731689453125e-5, 2.707958221435547e-5, 154.63, 0.0))
*** advance 1 from 1000; 2020-08-20T03:47:30.518
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8699999999999999, 0.8669999999999999, 0.868235294117647, 2.8779506683349608e-5, 3.928899765014648e-5, 151.99, 43.768983386456966))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8121471405029298e-5, 3.407955169677734e-5, 155.5, 0.0))
*** advance 1 from 1000; 2020-08-20T03:47:31.129
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8889999999999999, 0.8859999999999999, 0.8872352941176469, 0.00010015249252319336, 0.0005094003677368164, 151.75, 48.060525267152116))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010634183883666992, 0.0005667996406555176, 155.3, 0.0))
*** advance 1 from 1000; 2020-08-20T03:47:31.726
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9510000000000001, 0.9510000000000001, 0.9510000000000001, 9.087562561035157e-5, 0.00048202037811279297, 164.17, 200.7547317976132))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.882284164428711e-5, 0.0004402709007263184, 169.03, 0.0))
*** advance 1 from 1000; 2020-08-20T03:47:32.675
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8939999999999998, 0.8909999999999998, 0.8922352941176469, 3.564119338989258e-5, 7.205963134765625e-5, 151.46, 53.116332358447835))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.274679183959961e-5, 4.683971405029297e-5, 154.95, 0.016032356361392885))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:34.635
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7379999999999999, 0.7379999999999999, 0.7379999999999999, 0.001348569393157959, 8.092880249023437e-5, 200.21, 192.33333539962769))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:35.648
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7310000000000002, 0.7310000000000002, 0.7310000000000002, 0.001425027847290039, 9.571075439453125e-5, 205.27, 110.1698434278369))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:36.539
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.662, 0.662, 0.662, 0.0018509578704833983, 5.608797073364258e-5, 278.27, 3.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:37.401
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9540000000000003, 0.9540000000000003, 0.9540000000000003, 0.0015303874015808105, 2.03704833984375e-5, 215.05, 601.2000205665827))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:38.385
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5770000000000001, 0.5770000000000001, 0.5770000000000001, 0.0019193840026855468, 0.0004062700271606445, 258.4, 2366.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:39.391
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38999999999999985, 0.38999999999999985, NaN, 0.0017139387130737304, 0.00042576074600219726, 248.2, 3626.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-20T03:47:40.414
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5710000000000001, 0.5710000000000001, 0.5710000000000001, 0.0015277695655822755, 3.439903259277344e-5, 245.87, 2395.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.050136736554239,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":0.0026296675205230713,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.5703125,"distances_sum":587.3500039279461}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.050136736554239,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":0.0026296675205230713,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.5703125,"distances_sum":587.3500039279461}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6350967741935483, conf: {"restarts":14}, perf: {"precision":0.9184027777777771,"recall":0.9184027777777771,"f1":0.9184027777777771,"seconds":2.685748040676117e-5,"exhaustive_search_seconds":6.6570937633514404e-6,"evaluations":60.546875,"distances_sum":293.7698491178453}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8734476641040807, conf: {"restarts":10}, perf: {"precision":0.9079861111111097,"recall":0.9079861111111097,"f1":0.9079861111111097,"seconds":2.2703781723976135e-5,"exhaustive_search_seconds":6.6570937633514404e-6,"evaluations":52.84375,"distances_sum":294.1298962198198}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8734476641040807,"state":{"restarts":10},"perf":{"precision":0.9079861111111097,"recall":0.9079861111111097,"f1":0.9079861111111097,"seconds":2.2703781723976135e-5,"exhaustive_search_seconds":6.6570937633514404e-6,"evaluations":52.84375,"distances_sum":294.1298962198198}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8734476641040807,"state":{"restarts":10},"perf":{"precision":0.9079861111111097,"recall":0.9079861111111097,"f1":0.9079861111111097,"seconds":2.2703781723976135e-5,"exhaustive_search_seconds":6.6570937633514404e-6,"evaluations":52.84375,"distances_sum":294.1298962198198}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8734476641040807,"state":{"restarts":10},"perf":{"precision":0.9079861111111097,"recall":0.9079861111111097,"f1":0.9079861111111097,"seconds":2.2703781723976135e-5,"exhaustive_search_seconds":6.6570937633514404e-6,"evaluations":52.84375,"distances_sum":294.1298962198198}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.894965277777777, conf: {"restarts":20}, perf: {"precision":0.894965277777777,"recall":0.894965277777777,"f1":0.894965277777777,"seconds":0.00019466131925582886,"exhaustive_search_seconds":2.736598253250122e-5,"evaluations":191.890625,"distances_sum":122.53096190001816}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444434, conf: {"restarts":3}, perf: {"precision":0.8819444444444434,"recall":0.8819444444444434,"f1":0.8819444444444434,"seconds":3.1925737857818604e-5,"exhaustive_search_seconds":2.736598253250122e-5,"evaluations":82.984375,"distances_sum":123.29229823034257}, best_list's length: 9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.894965277777777,"state":{"restarts":20},"perf":{"precision":0.894965277777777,"recall":0.894965277777777,"f1":0.894965277777777,"seconds":0.00019466131925582886,"exhaustive_search_seconds":2.736598253250122e-5,"evaluations":191.890625,"distances_sum":122.53096190001816}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.894965277777777,"state":{"restarts":20},"perf":{"precision":0.894965277777777,"recall":0.894965277777777,"f1":0.894965277777777,"seconds":0.00019466131925582886,"exhaustive_search_seconds":2.736598253250122e-5,"evaluations":191.890625,"distances_sum":122.53096190001816}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.894965277777777,"state":{"restarts":20},"perf":{"precision":0.894965277777777,"recall":0.894965277777777,"f1":0.894965277777777,"seconds":0.00019466131925582886,"exhaustive_search_seconds":2.736598253250122e-5,"evaluations":191.890625,"distances_sum":122.53096190001816}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777769, conf: {"restarts":27}, perf: {"precision":0.8559027777777769,"recall":0.8559027777777769,"f1":null,"seconds":0.00017250888049602509,"exhaustive_search_seconds":0.0003939680755138397,"evaluations":356.3515625,"distances_sum":56.902320232242346}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888882, conf: {"restarts":29}, perf: {"precision":0.8498263888888882,"recall":0.8498263888888882,"f1":0.8498263888888882,"seconds":0.0002474188804626465,"exhaustive_search_seconds":0.0003939680755138397,"evaluations":379.4609375,"distances_sum":56.70776387117803}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777769,"state":{"restarts":27},"perf":{"precision":0.8559027777777769,"recall":0.8559027777777769,"f1":null,"seconds":0.00017250888049602509,"exhaustive_search_seconds":0.0003939680755138397,"evaluations":356.3515625,"distances_sum":56.902320232242346}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8559027777777769,"state":{"restarts":27},"perf":{"precision":0.8559027777777769,"recall":0.8559027777777769,"f1":null,"seconds":0.00017250888049602509,"exhaustive_search_seconds":0.0003939680755138397,"evaluations":356.3515625,"distances_sum":56.902320232242346}}, n: 9999
added n=10000, neighborhood=2, IHCSearch(27), SatNeighborhood(32), 2020-08-20T03:47:47.664
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(535, 0.025607072f0), Item(2012, 0.028363483f0), Item(3523, 0.03096165f0), Item(5653, 0.04694904f0), Item(8620, 0.047078423f0), Item(9196, 0.049006954f0), Item(1148, 0.0581021f0), Item(2762, 0.058702275f0), Item(4334, 0.065256864f0), Item(1369, 0.06934741f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0867924528301884,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.94233630952381,"seconds":0.004510641098022461,"exhaustive_search_seconds":3.0230730772018433e-6,"evaluations":8.28125,"distances_sum":566.4302218556404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0867924528301884,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.94233630952381,"seconds":0.004510641098022461,"exhaustive_search_seconds":3.0230730772018433e-6,"evaluations":8.28125,"distances_sum":566.4302218556404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.1943534156793545, conf: {"bsize":2}, perf: {"precision":0.9539930555555551,"recall":0.9539930555555551,"f1":0.9539930555555551,"seconds":2.047792077064514e-5,"exhaustive_search_seconds":9.125098586082458e-6,"evaluations":30.9921875,"distances_sum":280.50297536700964}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1943534156793545,"state":{"bsize":2},"perf":{"precision":0.9539930555555551,"recall":0.9539930555555551,"f1":0.9539930555555551,"seconds":2.047792077064514e-5,"exhaustive_search_seconds":9.125098586082458e-6,"evaluations":30.9921875,"distances_sum":280.50297536700964}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1943534156793545,"state":{"bsize":2},"perf":{"precision":0.9539930555555551,"recall":0.9539930555555551,"f1":0.9539930555555551,"seconds":2.047792077064514e-5,"exhaustive_search_seconds":9.125098586082458e-6,"evaluations":30.9921875,"distances_sum":280.50297536700964}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.1943534156793545,"state":{"bsize":2},"perf":{"precision":0.9539930555555551,"recall":0.9539930555555551,"f1":0.9539930555555551,"seconds":2.047792077064514e-5,"exhaustive_search_seconds":9.125098586082458e-6,"evaluations":30.9921875,"distances_sum":280.50297536700964}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.898638826483413,"state":{"bsize":2},"perf":{"precision":0.9288194444444434,"recall":0.9288194444444434,"f1":0.9288194444444434,"seconds":6.756559014320374e-5,"exhaustive_search_seconds":3.5686418414115906e-5,"evaluations":59.1171875,"distances_sum":125.10675023682415}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.898638826483413,"state":{"bsize":2},"perf":{"precision":0.9288194444444434,"recall":0.9288194444444434,"f1":0.9288194444444434,"seconds":6.756559014320374e-5,"exhaustive_search_seconds":3.5686418414115906e-5,"evaluations":59.1171875,"distances_sum":125.10675023682415}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.21644210678002, conf: {"bsize":8}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":9.610503911972046e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":108.4296875,"distances_sum":54.297690383158624}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.84902269153, conf: {"bsize":3}, perf: {"precision":0.9722222222222217,"recall":0.9722222222222217,"f1":0.9722222222222217,"seconds":7.787160575389862e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":104.3203125,"distances_sum":54.4486640682444}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.61948650427914, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":8.720532059669495e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":106.8046875,"distances_sum":54.31099564116448}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.84902269153,"state":{"bsize":3},"perf":{"precision":0.9722222222222217,"recall":0.9722222222222217,"f1":0.9722222222222217,"seconds":7.787160575389862e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":104.3203125,"distances_sum":54.4486640682444}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.6565944654282, conf: {"bsize":5}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":7.893145084381104e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":101.3515625,"distances_sum":54.31398495193571}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.6565944654282,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":7.893145084381104e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":101.3515625,"distances_sum":54.31398495193571}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.6565944654282,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":7.893145084381104e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":101.3515625,"distances_sum":54.31398495193571}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.6565944654282,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":7.893145084381104e-5,"exhaustive_search_seconds":0.00037703290581703186,"evaluations":101.3515625,"distances_sum":54.31398495193571}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-08-20T03:47:52.551
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5046, 0.016133288f0), Item(8426, 0.04035806f0), Item(4705, 0.042668395f0), Item(4635, 0.04355866f0), Item(183, 0.044079777f0), Item(6091, 0.045322884f0), Item(4262, 0.046410967f0), Item(826, 0.046548054f0), Item(9392, 0.048075017f0), Item(1367, 0.049597383f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
