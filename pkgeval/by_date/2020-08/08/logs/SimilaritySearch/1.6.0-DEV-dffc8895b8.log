Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed OrderedCollections ─ v1.3.0
  Installed Parsers ──────────── v1.0.8
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.2
  Installed DataStructures ───── v0.17.20
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.8
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_3gTsko/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3gTsko/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.8
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(8, 0.0041236877f0), Item(13, 0.01739955f0), Item(47, 0.022193551f0), Item(27, 0.049649358f0)])
Vsorted = Item[Item(8, 0.0041236877f0), Item(13, 0.01739955f0), Item(47, 0.022193551f0), Item(27, 0.049649358f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00414875348409017, 0.004293704032897949, 301.0, 48.67533826176077))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004039390881856283, 0.005640300114949545, 301.0, 70.56616961956024))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004393275578816732, 0.004680800437927246, 301.0, 40.04836869239807))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004574426015218099, 0.004673997561136882, 301.0, 8.916432397294557))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003871250152587891, 0.005316098531087239, 301.0, 44.3335921196267))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017803510030110677, 0.00014750162760416666, 301.0, 174.6435288786888))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.9938430786132814e-5, 0.01186383565266927, 300.0, 28.59393076179549)
p = PerformanceResult(1.0, 1.0, 1.0, 6.507237752278646e-5, 4.133383433024089e-5, 300.0, 28.59393076179549)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003798500696818034, 0.003997699419657389, 300.0, 1.6995472789940322)
p = PerformanceResult(1.0, 1.0, 1.0, 5.60707516140408e-5, 2.3396809895833335e-5, 300.0, 1.6995472789940322)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.9938430786132814e-5, 0.01186383565266927, 300.0, 28.59393076179549), PerformanceResult(1.0, 1.0, 1.0, 6.507237752278646e-5, 4.133383433024089e-5, 300.0, 28.59393076179549), PerformanceResult(1.0, 1.0, 1.0, 0.003798500696818034, 0.003997699419657389, 300.0, 1.6995472789940322), PerformanceResult(1.0, 1.0, 1.0, 5.60707516140408e-5, 2.3396809895833335e-5, 300.0, 1.6995472789940322))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008416295051574707, 0.005077330271402994, 346.93333333333334, 28623.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007068570454915365, 0.0033611297607421876, 303.1333333333333, 6944.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.322991689046224e-5, 1.1467933654785157e-5, 91.86666666666666, 48.56486810091883))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3674964904785156e-5, 1.1968612670898438e-5, 84.26666666666667, 70.47263717651367))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.628962198893229e-5, 1.659393310546875e-5, 88.8, 39.95298492908478))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.381207784016928e-5, 0.0002069711685180664, 92.8, 44.204555380158126))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8433333333333333, 0.8433333333333333, 0.8433333333333333, 5.112489064534505e-5, 0.00012923081715901692, 69.5, 182.8536261022091))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-08T19:23:12.873
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8870000000000001, 0.8870000000000001, 0.8870000000000001, 2.5019645690917968e-5, 2.4900436401367187e-5, 152.32, 51.76065031380858))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3519992828369142e-5, 1.9958019256591795e-5, 156.08, 0.0))
*** advance 1 from 1000; 2020-08-08T19:23:13.607
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.887, 0.887, 0.887, 2.8018951416015624e-5, 3.166913986206055e-5, 152.53, 79.03385208547115))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6144981384277343e-5, 2.5091171264648436e-5, 156.35, 0.0))
*** advance 1 from 1000; 2020-08-08T19:23:14.337
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9620000000000001, 0.9620000000000001, 0.9620000000000001, 2.9196739196777342e-5, 3.671884536743164e-5, 166.43, 40.43192727304995))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8138160705566405e-5, 3.244161605834961e-5, 171.68, 0.0))
*** advance 1 from 1000; 2020-08-08T19:23:15.045
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8898888888888891, 0.8890000000000002, 0.8894210526315792, 0.00010202169418334962, 0.0005135202407836914, 151.46, 46.38813899946399))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010366201400756836, 0.0005530190467834473, 155.3, 0.0))
*** advance 1 from 1000; 2020-08-08T19:23:15.639
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9470000000000002, 0.9470000000000002, 0.9470000000000002, 0.00010457754135131836, 0.0004995894432067871, 166.43, 198.22128051845357))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00012110471725463867, 0.0004929590225219726, 171.57, 0.0))
*** advance 1 from 1000; 2020-08-08T19:23:16.937
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8870000000000001, 0.8870000000000001, 0.8870000000000001, 3.9832592010498045e-5, 8.157014846801758e-5, 152.32, 51.77075630729087))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.570079803466797e-5, 8.131027221679688e-5, 156.08, 0.017430649022571743))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:19.073
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7699999999999999, 0.7699999999999999, 0.7699999999999999, 0.001471867561340332, 7.786989212036133e-5, 199.64, 184.28333546221256))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:20.098
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7789999999999999, 0.7789999999999999, 0.779, 0.0016079139709472656, 7.647991180419921e-5, 203.41, 105.07698605209589))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:20.986
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6019999999999999, 0.6019999999999999, 0.6019999999999999, 0.0014826178550720215, 7.529020309448243e-5, 241.03, 2.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:21.833
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9279999999999997, 0.9279999999999997, 0.9279999999999997, 0.0014339542388916015, 1.9118785858154296e-5, 222.11, 611.8000201284885))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:22.825
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.618, 0.618, 0.618, 0.0018477535247802734, 0.0005349612236022949, 259.4, 2298.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:23.893
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.40099999999999997, 0.40099999999999997, 0.40099999999999997, 0.0016197776794433594, 0.0006542110443115234, 254.94, 3634.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-08T19:23:24.954
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6129999999999999, 0.6129999999999999, NaN, 0.0015836215019226073, 3.857135772705078e-5, 247.53, 2336.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0588235294117645, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9645089285714289,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":628.1487022936344}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.089877010406812, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9459509240759247,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2578125,"distances_sum":597.3398485481739}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.089877010406812,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9459509240759247,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2578125,"distances_sum":597.3398485481739}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.089877010406812,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9459509240759247,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2578125,"distances_sum":597.3398485481739}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.089877010406812,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9459509240759247,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2578125,"distances_sum":597.3398485481739}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8862847222222207, conf: {"restarts":6}, perf: {"precision":0.8862847222222207,"recall":0.8862847222222207,"f1":0.8862847222222207,"seconds":3.3525750041007996e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":45.734375,"distances_sum":295.2518122084439}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8862847222222211, conf: {"restarts":8}, perf: {"precision":0.8862847222222211,"recall":0.8862847222222211,"f1":0.8862847222222211,"seconds":3.999285399913788e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":49.1640625,"distances_sum":296.3756068237126}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8975694444444433, conf: {"restarts":9}, perf: {"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.854239523410797e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":53.2421875,"distances_sum":295.34147356823087}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8975694444444433,"state":{"restarts":9},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":4.854239523410797e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":53.2421875,"distances_sum":295.34147356823087}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.581035558328135, conf: {"restarts":15}, perf: {"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":4.2868778109550476e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":62.6171875,"distances_sum":295.5462368763983}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6667105090096017, conf: {"restarts":13}, perf: {"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":3.133527934551239e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":59.3984375,"distances_sum":292.69374131038785}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.735890410958904, conf: {"restarts":12}, perf: {"precision":0.9175347222222212,"recall":0.9175347222222212,"f1":0.9175347222222212,"seconds":3.010593354701996e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":57.03125,"distances_sum":293.3364533223212}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8285714285714283, conf: {"restarts":10}, perf: {"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":3.2296404242515564e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":54.140625,"distances_sum":294.3491310812533}, best_list's length: 8, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6252404771065794, conf: {"restarts":14}, perf: {"precision":0.9166666666666657,"recall":0.9166666666666657,"f1":0.9166666666666657,"seconds":3.639794886112213e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":60.9140625,"distances_sum":293.3893318660557}, best_list's length: 9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8285714285714283,"state":{"restarts":10},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":3.2296404242515564e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":54.140625,"distances_sum":294.3491310812533}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8285714285714283,"state":{"restarts":10},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":3.2296404242515564e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":54.140625,"distances_sum":294.3491310812533}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8285714285714283,"state":{"restarts":10},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":3.2296404242515564e-5,"exhaustive_search_seconds":5.00120222568512e-6,"evaluations":54.140625,"distances_sum":294.3491310812533}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8767361111111097,"state":{"restarts":10},"perf":{"precision":0.8767361111111097,"recall":0.8767361111111097,"f1":0.8767361111111097,"seconds":4.6523287892341614e-5,"exhaustive_search_seconds":2.6086345314979553e-5,"evaluations":129.015625,"distances_sum":127.55979347135872}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8767361111111097,"state":{"restarts":10},"perf":{"precision":0.8767361111111097,"recall":0.8767361111111097,"f1":0.8767361111111097,"seconds":4.6523287892341614e-5,"exhaustive_search_seconds":2.6086345314979553e-5,"evaluations":129.015625,"distances_sum":127.55979347135872}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8359374999999987, conf: {"restarts":12}, perf: {"precision":0.8359374999999987,"recall":0.8359374999999987,"f1":0.8359374999999987,"seconds":0.00011932477355003357,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":224.1484375,"distances_sum":56.3905833507888}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8298611111111103, conf: {"restarts":6}, perf: {"precision":0.8298611111111103,"recall":0.8298611111111103,"f1":0.8298611111111103,"seconds":9.485706686973572e-5,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":174.7734375,"distances_sum":56.4813989396207}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8324652777777769, conf: {"restarts":14}, perf: {"precision":0.8324652777777769,"recall":0.8324652777777769,"f1":0.8324652777777769,"seconds":0.00012998096644878387,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":242.3203125,"distances_sum":56.44623383646831}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8368055555555545, conf: {"restarts":19}, perf: {"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.0001345612108707428,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":283.875,"distances_sum":56.39094048878178}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8359374999999989, conf: {"restarts":4}, perf: {"precision":0.8359374999999989,"recall":0.8359374999999989,"f1":0.8359374999999989,"seconds":7.667019963264465e-5,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":161.375,"distances_sum":56.40614156378433}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8368055555555545,"state":{"restarts":19},"perf":{"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.0001345612108707428,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":283.875,"distances_sum":56.39094048878178}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8368055555555545,"state":{"restarts":19},"perf":{"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.0001345612108707428,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":283.875,"distances_sum":56.39094048878178}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8368055555555545,"state":{"restarts":19},"perf":{"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.0001345612108707428,"exhaustive_search_seconds":0.0003591161221265793,"evaluations":283.875,"distances_sum":56.39094048878178}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(19), SatNeighborhood(32), 2020-08-08T19:23:32.775
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5333, 0.04406009f0), Item(2977, 0.04440963f0), Item(5545, 0.04971598f0), Item(3684, 0.064023204f0), Item(6493, 0.067164764f0), Item(7792, 0.06794592f0), Item(8617, 0.06878988f0), Item(83, 0.07341491f0), Item(7388, 0.07584345f0), Item(5370, 0.076358445f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9177895021645025,"seconds":0.003863537684082985,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":7.9921875,"distances_sum":563.972298592329}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8740234375,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9177895021645025,"seconds":0.003863537684082985,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":7.9921875,"distances_sum":563.972298592329}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.18311981914092,"state":{"bsize":3},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":1.518242061138153e-5,"exhaustive_search_seconds":6.288290023803711e-6,"evaluations":31.1015625,"distances_sum":283.30324202030897}}, beam: 3, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.18311981914092,"state":{"bsize":3},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":1.518242061138153e-5,"exhaustive_search_seconds":6.288290023803711e-6,"evaluations":31.1015625,"distances_sum":283.30324202030897}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.823049598737008,"state":{"bsize":3},"perf":{"precision":0.9800347222222219,"recall":0.9800347222222219,"f1":0.9800347222222219,"seconds":2.9064714908599854e-5,"exhaustive_search_seconds":2.7202069759368896e-5,"evaluations":59.3828125,"distances_sum":120.62647570949048}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.823049598737008,"state":{"bsize":3},"perf":{"precision":0.9800347222222219,"recall":0.9800347222222219,"f1":0.9800347222222219,"seconds":2.9064714908599854e-5,"exhaustive_search_seconds":2.7202069759368896e-5,"evaluations":59.3828125,"distances_sum":120.62647570949048}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":94.33274994530737,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":6.191059947013855e-5,"exhaustive_search_seconds":0.00036899931728839874,"evaluations":107.1328125,"distances_sum":54.47587142651901}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":94.33274994530737,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":6.191059947013855e-5,"exhaustive_search_seconds":0.00036899931728839874,"evaluations":107.1328125,"distances_sum":54.47587142651901}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(3), SatNeighborhood(32), 2020-08-08T19:23:36.951
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1340, 0.0207185f0), Item(7968, 0.02097102f0), Item(4074, 0.023121467f0), Item(3249, 0.032768205f0), Item(2270, 0.037693825f0), Item(4373, 0.04627779f0), Item(154, 0.049108736f0), Item(4048, 0.051804848f0), Item(5120, 0.057091963f0), Item(1307, 0.062959544f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
