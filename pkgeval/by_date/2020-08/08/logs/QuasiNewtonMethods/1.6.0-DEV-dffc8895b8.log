Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.23
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_xZQVjJ/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_xZQVjJ/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [2.904274598591883e-10, 5.804126068653659e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.5960789901423595e-11, 8.650302696366907e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [3.2804869931624125e-12, 8.327560863108374e-12, 1.6576962025283137e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.870526121829698e-11, 6.789679929397607e-11, 1.595790166675215e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [7.341527386017788e-11, -1.943973870766058e-10, 1.404139027272322e-10, -3.713888085954409e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.158762306223252e-12, 9.130252109912362e-12, -9.750866780677825e-12, 1.8129497902918956e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2499779817053422e-11, 8.117950756059145e-12, -4.565881006612926e-11, 1.7351897696471497e-11, 7.214895347829042e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0488054869028929e-11, -3.577563800760686e-10, 2.839350976557853e-11, -7.071285779147729e-10, -9.43023437116608e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [2.498001805406602e-13, 8.286926700407093e-12, -1.535327420754129e-12, 5.944134073843088e-13, 1.6509016376176078e-11, -3.3278935163139067e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.6915362140207435e-12, 5.598121965988412e-11, -4.1991521371187446e-11, -1.3094858530848796e-11, 1.1694756274494011e-10, -8.296263676044191e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [8.702372156221827e-12, 1.7543744235126724e-11, 6.719824696688192e-11, 1.6749046594100037e-11, 3.363131995115509e-11, 1.3782508467841126e-10, 6.13575856789339e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0871736844109137e-10, 8.19100343107948e-12, -5.520361945343666e-12, -2.2354884610109593e-10, 3.3863578607906675e-11, -1.5775047934596387e-11, -1.4674372827983007e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [3.026312533904729e-11, 2.913724816977492e-10, -5.031208782924068e-11, -3.105049550811145e-11, 4.4070525007100514e-11, 5.690281579262546e-10, -1.0469369815524487e-10, -7.307110472254408e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.625144877148159e-12, -8.382627925129782e-12, 5.5995652559204245e-11, -2.0010881840448747e-11, -1.4738765763411266e-11, -1.792488379948054e-11, 1.1394307719569952e-10, -3.604339049445571e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [5.943512348949298e-11, 1.9872326006975527e-11, 3.862132835763532e-11, -1.0504708214398306e-11, 1.172923980163887e-10, 4.163291933423352e-11, 7.829936699010887e-11, -1.8963608461319836e-11, -4.761413485709909e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.334155422393906e-11, 4.6197712322282314e-11, -8.17654832729886e-11, 6.825917608921372e-11, 1.2052647768712177e-10, 9.04587516004085e-11, -1.6173917760653467e-10, 1.2723755382637592e-10, -1.4253376257045147e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1114276166068748e-10, 5.297540184301397e-12, 2.4441781931727746e-11, -9.30782118047091e-11, 3.348565869032427e-11, -2.1550128348479802e-10, 1.0121237181692777e-11, 5.61903856777235e-11, -1.830675611103061e-10, 7.639577859208657e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4285461702456814e-11, 1.3421486144693517e-11, 7.121592204839544e-11, -2.4969026846122233e-11, 1.0859046994937671e-10, 1.8641088672666228e-11, 1.9878321211308503e-11, 1.2789325154471953e-10, -4.799516339915044e-11, 2.1742452283035618e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.740585536287199e-11, 1.8290480241489604e-11, 7.508638155684366e-11, 2.4772184303856193e-11, 5.029976435366734e-12, 6.043388012244577e-11, 4.2707393177465747e-11, 1.5302781264381338e-10, 4.4183545711007355e-11, 1.0559553231814789e-11, 1.6651569012537948e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.666389414291871e-11, 3.93520771524436e-11, 2.1798118865490324e-11, 3.704170303819865e-11, -3.8932190804530364e-12, -7.436007365413388e-11, 8.307399212981181e-11, 4.441735867999341e-11, 7.263678547531072e-11, -7.625011733125575e-12, -1.9540480344915068e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [1.1929568444202232e-11, -4.673905706908954e-11, -1.0093115232479022e-10, -4.7552628501534855e-11, 4.125877417493484e-11, -4.4564019141546396e-11, 1.3376855179103586e-11, -9.28338517169891e-11, -1.9741930312733302e-10, -8.739697854309725e-11, 8.374967386259868e-11, -9.597633798819061e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.839151715596017e-10, -1.7598655865924684e-10, -5.541014314047743e-10, 2.745250693436674e-10, -1.5500146721691976e-9, 1.5663026431411708e-12, 1.9735055811764823e-9, -3.425271177803779e-10, -1.124589754653016e-9, 5.399185543097929e-10, -3.0839908404800553e-9, -4.158784427943374e-12]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6954326831353228e-10, -1.8178936134205514e-10, 9.5382812759226e-11, -1.3914869256836937e-11, -5.239286782199315e-11, -1.8805090817863857e-10, -3.4218194944202196e-10, -3.5043368207254844e-10, 1.8755286212979172e-10, -3.694788919261782e-11, -1.0399892058643445e-10, -3.8278713532235997e-10, 2.1327384303049257e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0808798300843137e-10, 9.765699360286817e-11, -8.171296972392383e-11, -6.753475556564581e-11, 1.9999868428044465e-10, 2.4947666155128445e-10, -2.171182122978621e-10, 2.0149548696224429e-10, -1.6494416943402257e-10, -1.4345802323845191e-10, 3.853191099523201e-10, 5.0610293733655e-10, -5.4067861299245124e-14]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.1729128779336406e-10, -7.44231343219326e-11, -3.4563429895939635e-10, 6.606293290190024e-11, -3.459602604394263e-10, 7.709761717933361e-10, -5.87594639611666e-10, 2.5875457332347196e-10, -1.3816991994985983e-10, -6.939033792008331e-10, 1.2399903326354433e-10, -6.722840062423074e-10, 1.569939067636028e-9, -1.1930817445104935e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [3.363864742311762e-11, 6.005707042788799e-11, 1.6048007367430728e-10, -1.825894990759025e-11, -8.931455575122982e-11, 4.918487839233876e-11, -3.173405982437316e-11, 6.324674117763607e-11, 1.19714238522306e-10, 3.191675812530548e-10, -3.296629635940462e-11, -1.7376566852078668e-10, 1.0469869415885569e-10, -5.718048257108421e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-2.224553874441426e-12, 4.8439252609000505e-11, 4.749201032439032e-11, -1.516264891421315e-11, -3.010425242422343e-11, 2.5213164889237305e-12, 5.784706047506916e-12, -2.1471713296250527e-12, 9.313771975882901e-11, 9.851253146564432e-11, -2.6484259230130647e-11, -6.386524642465474e-11, 1.9471091405875995e-12, 1.6695533844313104e-11, -1.9203527656941333e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9189561051291548e-10, -2.0665535949149216e-10, -2.2210766559283002e-10, -1.8118451183823936e-10, 7.852474226410777e-11, 1.961970585995232e-10, -1.2481704558808815e-10, -3.806566173381043e-10, -4.326528024733989e-10, -4.3856474007952784e-10, -3.6243907874933257e-10, 1.595186205349819e-10, 4.07627931409138e-10, -2.669299226099042e-10, 1.6862156115848848e-10]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [4.9443338312471496e-11, 8.608114221431151e-11, -1.214089939693963e-10, -3.062272657672338e-11, -5.470368602544795e-11, 1.3458789638320923e-11, -1.4231726908064957e-11, 3.037459173071966e-11, 1.1411604994293612e-10, 1.6682211168017602e-10, -2.475026850135009e-10, -6.718769984814799e-11, -1.085043166426658e-10, 2.4297897027736326e-11, -2.371547402901797e-11, 5.823075355237961e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.216027609833418e-11, 4.1840086950628574e-11, 2.573719015686038e-12, 7.861933326580584e-12, 3.0475622025960547e-12, -4.347899817958023e-11, -2.0025869851281186e-11, -2.0693557978290755e-11, 1.0068612610325545e-10, 8.080291991063859e-11, 3.3508751329236475e-12, 1.6014967130217883e-11, 2.778888230636767e-12, -8.317468935814532e-11, -4.0384251498437607e-11, -4.137790110547712e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4391321467854823e-10, 3.806288617624887e-12, 8.806422258089697e-11, -4.7530201996437427e-11, -8.760547842712185e-11, 4.46842562951133e-12, 1.3065770687603617e-11, 1.486610834433577e-10, -2.9183788718967207e-10, 7.472245044937154e-12, 1.761892853835434e-10, -9.523137833866713e-11, -1.8291079761922902e-10, 1.298294804996658e-11, 1.917599412593063e-11, 3.0997981959046683e-10, 3.695488359767296e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7848722499991254e-11, -1.986899533790165e-11, -7.154321579605494e-11, -1.481748057585719e-11, -7.240541499697883e-11, -2.8136049046167955e-11, 7.540035262820766e-11, 7.920974987030149e-11, -2.9437563497936026e-11, -4.1856851318300414e-11, -1.4612377974287938e-10, -3.2035596397861354e-11, -1.4858048125176992e-10, -5.0727089195845565e-11, 1.5211032433626315e-10, 1.5978707246233625e-10, 4.2721381987576024e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-9.685918733737253e-12, -7.954192859926934e-12, 4.050759727647346e-12, 1.2962853013220865e-10, -1.2910228441853633e-10, -1.6874091013363568e-10, 5.764122512630365e-11, -3.866951203690405e-11, 5.477840403500522e-13, -2.2904234064924367e-11, -2.2630120000144416e-11, 3.312683460876542e-12, 2.6452506851626367e-10, -2.5557567173706275e-10, -3.360102196481307e-10, 1.1566214652702911e-10, -8.168221654614172e-11, 4.555911203851792e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8732326800829924e-10, -7.35635996562678e-11, -6.286926534926351e-11, -2.2688051437569356e-10, -1.288710249625069e-10, 9.300693548652816e-11, -5.1523230126804265e-11, -4.060241032277645e-11, 1.1515011166807199e-11, 3.7158698340533647e-10, -1.4886125665469763e-10, -1.238705804595952e-10, -4.505467110504924e-10, -2.704021451194194e-10, 1.9027446285235783e-10, -1.0542777761912703e-10, -8.320188982224863e-11, 2.053135439439302e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-4.7226889066109834e-11, 1.0213585532881098e-10, 2.4739543746932213e-11, 2.353939265731242e-11, -4.512523688049441e-11, -4.886313575980239e-12, -3.55301343901715e-11, 1.438078545135113e-10, 3.151012784030627e-11, -8.98053853504166e-11, 1.9560841835186693e-10, 5.14224218761683e-11, 4.550293475347189e-11, -9.215628260506037e-11, -4.104605544341666e-12, -6.842459931988287e-11, 2.7664226465162756e-10, 6.767075788616239e-11, 2.3224977496738575e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6733836538662672e-10, 1.6057222218535117e-10, 3.2563063356860766e-11, -5.573996819663307e-11, 2.692490674860437e-11, -2.1090174051607846e-10, -1.478525080145232e-10, 1.290967333034132e-12, -4.621925064896004e-11, 3.401290360471876e-10, 3.2047497988685336e-10, 6.045608458293827e-11, -1.1298906255063912e-10, 5.4398929805188345e-11, -4.2559655799578877e-10, -3.0068725287435427e-10, 2.2941648580854235e-12, -9.541223366937857e-11, -2.2177815139912127e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-7.604439300479271e-11, -2.0873258677056583e-10, -2.0456814020519687e-10, -2.0863144545302248e-10, -1.1970235913594252e-10, 2.820477185139225e-10, -2.1964530194651388e-10, 1.2161560647427905e-10, -5.085709631202917e-11, 1.62284630178533e-10, -1.6871670727169885e-10, -4.4175929581058426e-10, -4.1086334334750063e-10, -4.2929093613253144e-10, -2.408216959182141e-10, 5.650822032521319e-10, -4.516307328117364e-10, 2.3487389810838977e-10, -9.996226069119984e-11, 3.1823410573394995e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.601008463112066e-11, 1.4832579608992091e-13, -6.316391853999903e-12, -3.807065773742124e-11, 3.705324935765475e-11, -1.1904477403845704e-11, -2.7697288906836093e-11, -2.8676172547648093e-11, -1.2455148024059781e-11, 3.845390672552185e-11, 9.476508466832456e-11, 2.603472992745992e-12, -1.140387784204222e-11, -7.281197866859657e-11, 7.604428198249025e-11, -2.401612242408646e-11, -5.699463123676196e-11, -5.947964343278045e-11, -2.4459323455516824e-11, 8.129297235370814e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-6.61335430862664e-11, 2.1399326755044967e-11, -1.687239237213589e-11, 1.0594858323997869e-11, -7.744249685970317e-12, 2.8657298756229466e-11, -2.1017965146086226e-11, 1.6875167929697454e-11, 7.7982065249671e-12, 3.540634452292579e-11, -1.3245915475579295e-10, 4.3804515570400326e-11, -3.3788194464534627e-11, 2.2148949341271873e-11, -1.3026357770229424e-11, 5.619171794535305e-11, -4.343803094997156e-11, 3.2341462841145585e-11, 1.1454837078872515e-11, 7.234346455220475e-11, -1.7539303343028223e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0996847876754146e-10, 1.880768873974148e-10, -1.2624012946105267e-10, 8.61750670821948e-11, 1.8610868401935932e-10, 6.827871601444713e-13, 7.377320976331703e-11, -3.318934016505182e-11, 9.680012347246247e-11, 3.17543769057238e-11, 2.214208816297969e-10, 3.8323122453221004e-10, -2.5932422875740713e-10, 1.8445001082056933e-10, 3.5948621857073704e-10, 1.7178480860025047e-11, 1.4074541532238527e-10, -6.006672936820223e-11, 1.8387447120460365e-10, 5.323275154012208e-11, -1.2060352716503075e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.5461187885534855e-11, -1.3160472711604143e-11, -9.29256671611256e-14, -3.732780751164455e-11, 1.9742429913094384e-11, -2.0243695608712642e-11, 7.087885833811924e-12, 2.0895729591074996e-11, 2.9184210603716565e-11, 6.053491041768666e-11, -2.502320572972394e-11, 3.200106846179551e-11, -2.389555220361217e-11, -1.06314956838105e-12, -7.721911998714859e-11, 4.43214354106658e-11, -3.575895135554674e-11, 1.4724665930998526e-11, 4.412914478280072e-11, 6.086642301283973e-11, 1.189122134093168e-10, -4.857181323814075e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.236404312265904e-10, -1.5359635785472392e-10, -8.38740188413567e-12, -9.466316619466397e-11, 4.701616873603598e-11, 4.2529091359710947e-11, -4.380917850710375e-11, -4.362021854831255e-11, 8.71924754619613e-12, 3.2698954655074886e-11, 1.9265034012505566e-11, -2.3687174444120274e-10, -3.3264424548207217e-10, -2.7535973501358058e-11, -1.8625190278953596e-10, 1.0127232386025753e-10, 8.72706351628949e-11, -8.306921817080593e-11, -8.519773775361728e-11, 1.0305756248385478e-11, 7.221134801227436e-11, 3.7767566851698575e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.9013457475125506e-11, 1.092281820547214e-11, 3.487365951571064e-11, 2.187472425418946e-11, -1.3442136292951545e-11, -5.106448597302915e-11, 1.327247201032833e-10, -2.767375217871404e-11, -5.759304144703492e-11, -1.6140422332000526e-12, 6.830580545624798e-11, 3.834799144897261e-11, 2.0575319226168176e-11, 6.886535786065906e-11, 4.0748293628212195e-11, -2.3303692309184498e-11, -9.93232163182256e-11, 2.668474330391746e-10, -5.4902082879948466e-11, -1.1576517522371432e-10, -3.5145220067533955e-12, 1.359474754991652e-10, 5.177858142246805e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.337086245698174e-11, 3.692002259469973e-11, 7.934541912391069e-11, -2.855904401855014e-10, 4.985256651934833e-11, 9.48745526585526e-11, 1.4561685190983553e-11, -2.2142687683412987e-10, -4.12974099361918e-11, 1.035207475297284e-10, -5.270439640270297e-11, 9.494005581700549e-11, 8.088885117274458e-11, 1.5964540800439408e-10, -5.724052343225594e-10, 1.0693268492900643e-10, 1.9359758240966585e-10, 5.28443955261082e-11, -4.332978420507061e-10, -7.428513359997169e-11, 2.1516144421696026e-10, -1.112759884236425e-10, -2.33090213797027e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.359501400344243e-11, 2.634137352686139e-11, -4.010192178327543e-11, 1.3741008331180637e-10, 6.111777750561487e-12, 7.454925565753001e-11, 5.538236536040131e-12, 3.341593668437781e-11, -1.3448131497284521e-12, 3.9988679034763663e-11, 2.2545298961063054e-11, 7.257128231685783e-11, -1.8259727063707487e-11, 5.4883875222344614e-11, -8.350653502020577e-11, 2.7309576822176496e-10, 1.4023449068645277e-11, 1.4590906260991687e-10, 1.1705525437832875e-11, 7.708456095656402e-11, -5.664468893940011e-12, 7.777312127643654e-11, 4.7298831518105544e-11, 1.3273582233352954e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.977674076897756e-11, 1.3926104713846144e-10, 1.9991786004425194e-11, 4.659383989746857e-12, 4.8644421823951234e-11, -1.0467404720770901e-11, 2.275735155876646e-11, -3.362587985833443e-11, 3.713274132621791e-11, -2.2514323738676012e-11, 2.1673773886732306e-11, -7.275435809361852e-11, -1.5990353485761943e-10, 2.785807140526231e-10, 3.920952451608173e-11, -9.26037024839843e-13, 9.568235093126987e-11, -2.1120327708956665e-11, 4.306421885758027e-11, -6.905098715037639e-11, 7.554734615666803e-11, -4.7162496130681575e-11, 4.4404702137512686e-11, -1.468318799879853e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
