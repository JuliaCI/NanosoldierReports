Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed StatsBase ────────── v0.32.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.18.0
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.0
  Installed Compat ───────────── v3.14.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_iQExWC/Project.toml`
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_iQExWC/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(40, 0.02271986f0), Item(9, 0.026659966f0), Item(20, 0.06419635f0), Item(5, 0.06426191f0)])
Vsorted = Item[Item(40, 0.02271986f0), Item(9, 0.026659966f0), Item(20, 0.06419635f0), Item(5, 0.06426191f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.006050793329874674, 0.0048722028732299805, 301.0, 57.085495399311185))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039403359095255535, 0.004549400011698405, 301.0, 81.8290331363678))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0042412122090657554, 0.005005661646525065, 301.0, 47.028064012527466))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004200077056884766, 0.005100067456563314, 301.0, 12.055275493767112))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004716110229492187, 0.006020967165629069, 301.0, 52.0616270583123))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018007755279541015, 0.0001831372578938802, 301.0, 197.57380284368992))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 8.71578852335612e-5, 0.010933168729146321, 300.0, 29.531794735230505)
p = PerformanceResult(1.0, 1.0, 1.0, 6.090799967447917e-5, 3.029505411783854e-5, 300.0, 29.531794735230505)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004802314440409342, 0.004167238871256511, 300.0, 1.857717983522889)
p = PerformanceResult(1.0, 1.0, 1.0, 4.628499348958333e-5, 2.063910166422526e-5, 300.0, 1.857717983522889)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 8.71578852335612e-5, 0.010933168729146321, 300.0, 29.531794735230505), PerformanceResult(1.0, 1.0, 1.0, 6.090799967447917e-5, 3.029505411783854e-5, 300.0, 29.531794735230505), PerformanceResult(1.0, 1.0, 1.0, 0.004802314440409342, 0.004167238871256511, 300.0, 1.857717983522889), PerformanceResult(1.0, 1.0, 1.0, 4.628499348958333e-5, 2.063910166422526e-5, 300.0, 1.857717983522889))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 122.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008414498964945475, 0.004090531667073568, 348.26666666666665, 28719.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007798552513122559, 0.004065903027852377, 304.3666666666667, 6979.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.26895014444987e-5, 1.1094411214192708e-5, 89.06666666666666, 57.085495399311185))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2109349568684896e-5, 1.6466776529947916e-5, 81.23333333333333, 81.8290331363678))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4127960205078126e-5, 1.6268094380696615e-5, 86.1, 47.028064012527466))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.300376892089843e-5, 0.00015833377838134766, 90.26666666666667, 52.0616270583123))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8066666666666665, 0.8066666666666665, 0.8066666666666665, 5.4653485616048174e-5, 0.00014236768086751302, 67.5, 206.55524022877216))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-19T03:34:39.571
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9046666666666668, 0.9020000000000001, 0.9030000000000002, 2.2251605987548828e-5, 2.1839141845703124e-5, 153.05, 49.37390483589843))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1200180053710938e-5, 1.7600059509277342e-5, 156.45, 0.0))
*** advance 1 from 1000; 2020-08-19T03:34:40.297
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8930000000000003, 0.8930000000000003, 0.8930000000000003, 2.331972122192383e-5, 2.4302005767822267e-5, 153.67, 74.9265774153173))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.20489501953125e-5, 1.935005187988281e-5, 157.32, 0.0))
*** advance 1 from 1000; 2020-08-19T03:34:40.988
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8915555555555553, 0.8849999999999999, 0.8869716599190283, 2.553701400756836e-5, 3.7059783935546874e-5, 154.54, 39.58615365810692))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.536773681640625e-5, 3.572940826416016e-5, 158.14, 0.0))
*** advance 1 from 1000; 2020-08-19T03:34:41.672
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9106666666666666, 0.909, 0.9097894736842105, 9.996891021728516e-5, 0.0005029296875, 152.6, 44.43078527180478))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010093212127685546, 0.000557851791381836, 155.95, 0.0))
*** advance 1 from 1000; 2020-08-19T03:34:42.243
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9530000000000001, 0.9530000000000001, 0.9530000000000001, 6.361246109008789e-5, 0.0004677915573120117, 166.93, 190.30697918310761))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00011428117752075195, 0.00039552927017211915, 171.99, 0.0))
*** advance 1 from 1000; 2020-08-19T03:34:43.353
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9046666666666668, 0.9020000000000001, 0.9030000000000002, 3.295421600341797e-5, 7.384061813354492e-5, 153.05, 49.38458723365329))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.361701965332031e-5, 7.424116134643554e-5, 156.45, 0.015359047160018235))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:45.308
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.703, 0.703, 0.703, 0.0014536476135253906, 8.22305679321289e-5, 197.27, 199.35000221431255))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:46.237
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7100000000000003, 0.7100000000000003, 0.7100000000000003, 0.0010721182823181152, 7.574081420898438e-5, 201.88, 115.35952605307102))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:47.079
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.667, 0.667, 0.667, 0.0016267776489257812, 8.677959442138672e-5, 250.77, 1.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:48.040
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9330000000000004, 0.9330000000000004, 0.9330000000000004, 0.001617143154144287, 2.0649433135986328e-5, 223.27, 606.8000204414129))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:49.117
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5840000000000001, 0.5840000000000001, NaN, 0.0017006659507751464, 0.0003963589668273926, 252.55, 2337.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:50.136
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3840000000000001, 0.3840000000000001, NaN, 0.0019167518615722655, 0.00038396120071411134, 249.42, 3666.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-19T03:34:51.128
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.581, 0.581, NaN, 0.0018996977806091308, 2.9270648956298827e-5, 237.6, 2378.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0285714285714285,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9819597069597071,"seconds":0.0027200933545827866,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.75,"distances_sum":730.0955001413822}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0285714285714285,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9819597069597071,"seconds":0.0027200933545827866,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.75,"distances_sum":730.0955001413822}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.011109347722584, conf: {"restarts":7}, perf: {"precision":0.9210069444444431,"recall":0.9210069444444431,"f1":0.9210069444444431,"seconds":2.1943822503089905e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":49.2265625,"distances_sum":300.4830681197345}, best_list's length: 2, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.011109347722584,"state":{"restarts":7},"perf":{"precision":0.9210069444444431,"recall":0.9210069444444431,"f1":0.9210069444444431,"seconds":2.1943822503089905e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":49.2265625,"distances_sum":300.4830681197345}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.6345114345114347, conf: {"restarts":3}, perf: {"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.934543251991272e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":37.578125,"distances_sum":301.2729419209063}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.3094587206123567, conf: {"restarts":5}, perf: {"precision":0.9027777777777768,"recall":0.9027777777777768,"f1":0.9027777777777768,"seconds":2.222321927547455e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":42.8671875,"distances_sum":302.81301222369075}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.4586728754365543, conf: {"restarts":4}, perf: {"precision":0.9010416666666654,"recall":0.9010416666666654,"f1":0.9010416666666654,"seconds":2.1109357476234436e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":40.265625,"distances_sum":301.78051425889134}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.6345114345114347,"state":{"restarts":3},"perf":{"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.934543251991272e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":37.578125,"distances_sum":301.2729419209063}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.6345114345114347,"state":{"restarts":3},"perf":{"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.934543251991272e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":37.578125,"distances_sum":301.2729419209063}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.6345114345114347,"state":{"restarts":3},"perf":{"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.934543251991272e-5,"exhaustive_search_seconds":6.664544343948364e-6,"evaluations":37.578125,"distances_sum":301.2729419209063}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":1}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":3.347359597682953e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":67.3125,"distances_sum":127.58565114811063}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666656, conf: {"restarts":4}, perf: {"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":3.918260335922241e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":89.3515625,"distances_sum":127.52558790892363}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666654, conf: {"restarts":7}, perf: {"precision":0.8619791666666654,"recall":0.8619791666666654,"f1":0.8619791666666654,"seconds":4.666857421398163e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":109.46875,"distances_sum":126.9062766097486}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8619791666666656,"state":{"restarts":4},"perf":{"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":3.918260335922241e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":89.3515625,"distances_sum":127.52558790892363}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777767, conf: {"restarts":14}, perf: {"precision":0.8715277777777767,"recall":0.8715277777777767,"f1":0.8715277777777767,"seconds":6.410107016563416e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":152.140625,"distances_sum":126.88999197259545}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8845486111111099, conf: {"restarts":10}, perf: {"precision":0.8845486111111099,"recall":0.8845486111111099,"f1":0.8845486111111099,"seconds":5.40073961019516e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":127.6640625,"distances_sum":126.22127926722169}, best_list's length: 9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444432, conf: {"restarts":12}, perf: {"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":6.122887134552002e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":141.9453125,"distances_sum":127.35374346747994}, best_list's length: 11, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222211, conf: {"restarts":17}, perf: {"precision":0.8628472222222211,"recall":0.8628472222222211,"f1":0.8628472222222211,"seconds":7.612444460391998e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":172.859375,"distances_sum":127.22802640870214}, best_list's length: 12, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888877, conf: {"restarts":13}, perf: {"precision":0.8732638888888877,"recall":0.8732638888888877,"f1":0.8732638888888877,"seconds":6.359070539474487e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":147.6640625,"distances_sum":127.00485857203603}, best_list's length: 14, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444433, conf: {"restarts":6}, perf: {"precision":0.8663194444444433,"recall":0.8663194444444433,"f1":0.8663194444444433,"seconds":0.0001607108861207962,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":102.0390625,"distances_sum":127.246801096946}, best_list's length: 15, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8845486111111099,"state":{"restarts":10},"perf":{"precision":0.8845486111111099,"recall":0.8845486111111099,"f1":0.8845486111111099,"seconds":5.40073961019516e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":127.6640625,"distances_sum":126.22127926722169}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8845486111111099,"state":{"restarts":10},"perf":{"precision":0.8845486111111099,"recall":0.8845486111111099,"f1":0.8845486111111099,"seconds":5.40073961019516e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":127.6640625,"distances_sum":126.22127926722169}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8845486111111099,"state":{"restarts":10},"perf":{"precision":0.8845486111111099,"recall":0.8845486111111099,"f1":0.8845486111111099,"seconds":5.40073961019516e-5,"exhaustive_search_seconds":3.0757859349250793e-5,"evaluations":127.6640625,"distances_sum":126.22127926722169}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8315972222222213, conf: {"restarts":1}, perf: {"precision":0.8315972222222213,"recall":0.8315972222222213,"f1":0.8315972222222213,"seconds":6.919912993907928e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":132.1953125,"distances_sum":58.003508635330945}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8411458333333324, conf: {"restarts":4}, perf: {"precision":0.8411458333333324,"recall":0.8411458333333324,"f1":0.8411458333333324,"seconds":8.080713450908661e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":155.921875,"distances_sum":57.82990345777944}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8324652777777767, conf: {"restarts":15}, perf: {"precision":0.8324652777777767,"recall":0.8324652777777767,"f1":0.8324652777777767,"seconds":0.00011940300464630127,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":257.484375,"distances_sum":58.063962780404836}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.839409722222221, conf: {"restarts":12}, perf: {"precision":0.839409722222221,"recall":0.839409722222221,"f1":0.839409722222221,"seconds":0.00012830086052417755,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":223.6796875,"distances_sum":57.8455928103067}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8402777777777771, conf: {"restarts":6}, perf: {"precision":0.8402777777777771,"recall":0.8402777777777771,"f1":0.8402777777777771,"seconds":9.893998503684998e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":172.2734375,"distances_sum":57.88125176215544}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8342013888888881, conf: {"restarts":2}, perf: {"precision":0.8342013888888881,"recall":0.8342013888888881,"f1":0.8342013888888881,"seconds":4.813261330127716e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":138.8828125,"distances_sum":57.846613878849894}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666654, conf: {"restarts":8}, perf: {"precision":0.8463541666666654,"recall":0.8463541666666654,"f1":0.8463541666666654,"seconds":8.387491106987e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":192.3515625,"distances_sum":57.92179170483723}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8463541666666654,"state":{"restarts":8},"perf":{"precision":0.8463541666666654,"recall":0.8463541666666654,"f1":0.8463541666666654,"seconds":8.387491106987e-5,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":192.3515625,"distances_sum":57.92179170483723}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999986, conf: {"restarts":16}, perf: {"precision":0.8515624999999986,"recall":0.8515624999999986,"f1":0.8515624999999986,"seconds":0.00020432285964488983,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":262.421875,"distances_sum":57.60190593311563}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999986,"state":{"restarts":16},"perf":{"precision":0.8515624999999986,"recall":0.8515624999999986,"f1":0.8515624999999986,"seconds":0.00020432285964488983,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":262.421875,"distances_sum":57.60190593311563}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8515624999999986,"state":{"restarts":16},"perf":{"precision":0.8515624999999986,"recall":0.8515624999999986,"f1":0.8515624999999986,"seconds":0.00020432285964488983,"exhaustive_search_seconds":0.0003686957061290741,"evaluations":262.421875,"distances_sum":57.60190593311563}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(16), SatNeighborhood(32), 2020-08-19T03:34:59.327
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7714, 0.02438756f0), Item(9842, 0.025894701f0), Item(5608, 0.028039135f0), Item(315, 0.03906523f0), Item(9787, 0.05028889f0), Item(2256, 0.051473055f0), Item(1032, 0.05300473f0), Item(248, 0.05385642f0), Item(7099, 0.056634653f0), Item(4365, 0.05673144f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0960989533777354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9328791000666006,"seconds":0.003664230927824974,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.2109375,"distances_sum":663.1497339755297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0960989533777354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9328791000666006,"seconds":0.003664230927824974,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.2109375,"distances_sum":663.1497339755297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.012122652721654,"state":{"bsize":3},"perf":{"precision":0.9713541666666662,"recall":0.9713541666666662,"f1":0.9713541666666662,"seconds":1.4904886484146118e-5,"exhaustive_search_seconds":6.493180990219116e-6,"evaluations":32.8671875,"distances_sum":301.47213093191385}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.012122652721654,"state":{"bsize":3},"perf":{"precision":0.9713541666666662,"recall":0.9713541666666662,"f1":0.9713541666666662,"seconds":1.4904886484146118e-5,"exhaustive_search_seconds":6.493180990219116e-6,"evaluations":32.8671875,"distances_sum":301.47213093191385}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.499636363636363,"state":{"bsize":3},"perf":{"precision":0.9765624999999994,"recall":0.9765624999999994,"f1":0.9765624999999994,"seconds":2.901814877986908e-5,"exhaustive_search_seconds":2.62334942817688e-5,"evaluations":64.453125,"distances_sum":124.1130579598248}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":16.499636363636363,"state":{"bsize":3},"perf":{"precision":0.9765624999999994,"recall":0.9765624999999994,"f1":0.9765624999999994,"seconds":2.901814877986908e-5,"exhaustive_search_seconds":2.62334942817688e-5,"evaluations":64.453125,"distances_sum":124.1130579598248}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.3508785274207, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.820634007453918e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":102.7109375,"distances_sum":54.904331006575376}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.51398838699947, conf: {"bsize":5}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":6.286613643169403e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":103.6015625,"distances_sum":54.965160586405545}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.3508785274207,"state":{"bsize":9},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.820634007453918e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":102.7109375,"distances_sum":54.904331006575376}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.40627402737198, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.271526217460632e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":101.609375,"distances_sum":54.90498013840988}, best_list's length: 11, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.40627402737198,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.271526217460632e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":101.609375,"distances_sum":54.90498013840988}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.40627402737198,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.271526217460632e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":101.609375,"distances_sum":54.90498013840988}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.40627402737198,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.271526217460632e-5,"exhaustive_search_seconds":0.0003594905138015747,"evaluations":101.609375,"distances_sum":54.90498013840988}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(6), SatNeighborhood(32), 2020-08-19T03:35:03.361
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4344, 0.023347456f0), Item(4209, 0.029079854f0), Item(4886, 0.037488453f0), Item(1042, 0.040693987f0), Item(7633, 0.042039145f0), Item(6758, 0.04204937f0), Item(9994, 0.048574053f0), Item(296, 0.04904971f0), Item(9712, 0.051671725f0), Item(9694, 0.052623797f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
