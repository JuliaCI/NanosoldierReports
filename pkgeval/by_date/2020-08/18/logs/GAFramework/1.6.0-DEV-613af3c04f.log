Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_HEgUgV/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_HEgUgV/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721036664155277
curgen: 20 fitness: 0.21723244326971497
curgen: 30 fitness: 0.21723244326971497
curgen: 40 fitness: 0.21723244326971497
curgen: 50 fitness: 0.21723244326971497
CoordinateCreature{Vector{Float64}}([-0.22271182538790316], -0.21723244326971497) -0.22271182538790316 -0.21723244326971497
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258163252752294
curgen: 100 fitness: 3.258282549873557
curgen: 150 fitness: 3.258299713995008
curgen: 200 fitness: 3.2584265381733397
curgen: 250 fitness: 3.2584265381733397
curgen: 300 fitness: 3.2584309624122465
curgen: 350 fitness: 3.2584399053079354
curgen: 400 fitness: 3.2584581922247784
curgen: 450 fitness: 3.2584630427048653
curgen: 500 fitness: 3.258479694656492
CoordinateCreature{Vector{Float64}}([-0.22228622470741044, 0.22247249499847677, 0.22207283104393097, -0.22246985619696202, -0.22264197463477314, -0.22282714187302097, 0.22258386738527614, -0.22227944549400902, -0.22240292151619884, -0.2226408696512944, -0.22245757533719632, 0.22271341207551923, -0.2226819787542855, 0.22248397684433713, -0.22261144442702005], -3.258479694656492) [-0.22228622470741044, 0.22247249499847677, 0.22207283104393097, -0.22246985619696202, -0.22264197463477314, -0.22282714187302097, 0.22258386738527614, -0.22227944549400902, -0.22240292151619884, -0.2226408696512944, -0.22245757533719632, 0.22271341207551923, -0.2226819787542855, 0.22248397684433713, -0.22261144442702005] -3.258479694656492
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005473412940261824
curgen: 100 fitness: -0.00045278387773350914
curgen: 150 fitness: -0.00036958338438353167
curgen: 200 fitness: -0.00036958338438353167
curgen: 250 fitness: -0.00036958338438353167
curgen: 300 fitness: -0.00036958338438353167
curgen: 350 fitness: -0.00035610454057177776
curgen: 400 fitness: -0.00035610454057177776
curgen: 450 fitness: -0.00035610454057177776
curgen: 500 fitness: -0.00034356185722117516
CoordinateCreature{Vector{Float64}}([-7.432704946208469e-6, -5.161978794952435e-5, -3.24947083727052e-6, -7.9299588845005e-5, -0.00013185407207868052, 0.0008947978553653233, -0.0004980800219265696, 0.0006537843931835221, 0.0003380610231804304, -3.183961976719295e-5, -0.0003242144153227898, -3.0831977330169204e-5, 1.301895296424143e-5, -6.939208148445779e-5, -5.2914883604407784e-5], 0.00034356185722117516) [-7.432704946208469e-6, -5.161978794952435e-5, -3.24947083727052e-6, -7.9299588845005e-5, -0.00013185407207868052, 0.0008947978553653233, -0.0004980800219265696, 0.0006537843931835221, 0.0003380610231804304, -3.183961976719295e-5, -0.0003242144153227898, -3.0831977330169204e-5, 1.301895296424143e-5, -6.939208148445779e-5, -5.2914883604407784e-5] 0.00034356185722117516
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
