Julia Version 1.6.0-DEV.654
Commit bf8a8e8f9c (2020-08-18 16:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed MbedTLS_jll ── v2.16.6+1
  Installed IniFile ────── v0.5.0
  Installed Suppressor ─── v0.2.0
  Installed MbedTLS ────── v1.0.2
  Installed BSON ───────── v0.2.6
  Installed BrokenRecord ─ v0.1.0
  Installed HTTP ───────── v0.8.17
  Installed Cassette ───── v0.3.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [bdd55f5b] + BrokenRecord v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fbb218c0] + BSON v0.2.6
  [bdd55f5b] + BrokenRecord v0.1.0
  [7057c7e9] + Cassette v0.3.3
  [cd3eb016] + HTTP v0.8.17
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.6+1
  [fd094767] + Suppressor v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing BrokenRecord
Status `/tmp/jl_b5WTki/Project.toml`
  [fbb218c0] BSON v0.2.6
  [bdd55f5b] BrokenRecord v0.1.0
  [7057c7e9] Cassette v0.3.3
  [cd3eb016] HTTP v0.8.17
  [fd094767] Suppressor v0.2.0
  [8dfed614] Test
Status `/tmp/jl_b5WTki/Manifest.toml`
  [fbb218c0] BSON v0.2.6
  [bdd55f5b] BrokenRecord v0.1.0
  [7057c7e9] Cassette v0.3.3
  [cd3eb016] HTTP v0.8.17
  [83e8ac13] IniFile v0.5.0
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [fd094767] Suppressor v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
BrokenRecord.jl: Error During Test at /home/pkgeval/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:10
  Got exception outside of a @test
  MethodError: no method matching isless(::Int64, ::Tuple{String,String})
  Closest candidates are:
    isless(!Matched::Tuple{}, ::Tuple) at tuple.jl:381
    isless(!Matched::Tuple, ::Tuple) at tuple.jl:389
    isless(::Real, !Matched::AbstractFloat) at operators.jl:166
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::Function, ::Int64, ::Tuple{String,String})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::Function, ::Vararg{Any,N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(isless), ::Int64, ::Tuple{String,String})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] <
      @ ./operators.jl:277 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(<), ::Int64, ::Tuple{String,String})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] <=
      @ ./operators.jl:326 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(<=), ::Int64, ::Tuple{String,String})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] iterate
      @ ./tuple.jl:66 [inlined]
    [9] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(iterate), ::Tuple{String,String}, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] iterate
      @ ./tuple.jl:66 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(iterate), ::Tuple{String,String})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] string
      @ ./strings/substring.jl:206 [inlined]
   [13] overdub(::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, ::typeof(string), ::String, ::String)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] #3
      @ ~/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:18 [inlined]
   [15] overdub(overdub_context#256::Cassette.Context{nametype(RecordingCtx),NamedTuple{(:responses, :ignore_headers, :ignore_query),Tuple{Vector{Any},Vector{Any},Vector{Any}}},Nothing,Cassette.var"##PassType#258",Nothing,Nothing}, overdub_arguments#257::var"#3#23")
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [16] playback(f::Function, path::String; ignore_headers::Vector{Any}, ignore_query::Vector{Any})
      @ BrokenRecord ~/.julia/packages/BrokenRecord/BBtl7/src/BrokenRecord.jl:156
   [17] playback(f::Function, path::String)
      @ BrokenRecord ~/.julia/packages/BrokenRecord/BBtl7/src/BrokenRecord.jl:147
   [18] (::var"#1#21")(dir::String)
      @ Main ~/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:18
   [19] mktempdir(fn::var"#1#21", parent::String; prefix::String)
      @ Base.Filesystem ./file.jl:682
   [20] mktempdir(fn::Function, parent::String)
      @ Base.Filesystem ./file.jl:680
   [21] top-level scope
      @ ~/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:11
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [23] top-level scope
      @ ~/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:11
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:344
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [28] _start()
      @ Base ./client.jl:484
  
Test Summary:   | Pass  Error  Total
BrokenRecord.jl |    3      1      4
ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/BrokenRecord/BBtl7/test/runtests.jl:10
ERROR: Package BrokenRecord errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
