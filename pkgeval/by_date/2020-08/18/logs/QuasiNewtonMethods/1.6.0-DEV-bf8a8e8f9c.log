Julia Version 1.6.0-DEV.654
Commit bf8a8e8f9c (2020-08-18 16:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.24
  Installed VectorizationBase ─── v0.12.32
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.2
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.24
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_M1naGl/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_M1naGl/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [1.8252066524837574e-13, 3.459454944731988e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [2.692446265939452e-11, 5.199951580436846e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [3.3863578607906675e-11, 6.647726813469035e-11, -1.3250289754296318e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.339906460401835e-12, -1.3818390875997011e-11, -3.115596669545084e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [9.989609139893219e-11, -1.7757795234274454e-11, 2.1002866112951324e-10, -1.8197332529723553e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.907363487267503e-11, -5.2477022727259737e-11, 1.047724129676908e-10, -1.1056500159867255e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [3.6526359714628143e-10, -1.8164536541576126e-10, 7.349798547551245e-10, -3.509926793654472e-10, -8.864697864652271e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.841804817663387e-11, -1.821875983409882e-11, -1.181560405072446e-10, -3.509903478970955e-11, -3.803446446681846e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6945223829955012e-11, -3.4022784589637922e-12, -1.919364667202217e-11, -5.447298168093084e-11, -3.52839979456121e-12, -3.4420466477058653e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.995693079327793e-12, 1.6317391882125776e-11, -1.7021162257435662e-11, -1.6557533122352197e-11, 3.406208648470965e-11, -3.6764369326647284e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [8.726996902908013e-11, -1.3045342583950514e-11, -2.430662338070988e-10, 1.6825740800641142e-10, -2.4586110924929017e-11, -5.053917284669751e-10, 3.208033838575375e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.4446112628927494e-11, 1.4588330543574557e-13, 3.307221163595386e-11, -6.556710729910264e-11, 1.7579271371914729e-12, 6.620504144905226e-11, 2.7367663690824884e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.4067857989630284e-11, -1.804134619476372e-11, 4.06223943372197e-11, 2.8601565560393283e-11, 2.6759705562540148e-11, -3.8400393975734914e-11, 8.36433144968396e-11, 5.86874993047104e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2026002416121173e-10, -1.1445844272373051e-11, -1.2479905997508922e-11, 7.031153437253579e-11, 2.45597986392454e-10, -2.735167647927028e-11, -2.5361823752234613e-11, 1.3981127366946566e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-8.017697616935493e-12, 7.363265552839948e-11, -1.3501644247071454e-11, 8.822742536551686e-11, -6.727840506925986e-12, 1.5395817953844926e-10, -2.3958834916015803e-11, 1.6042567274610064e-10, 4.6070702808265196e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3742784688020038e-11, -4.55651072428509e-11, -5.511191503160262e-11, 3.1710412073948646e-11, 2.16231477168094e-11, -8.464129397367515e-11, -1.1011935807658801e-10, 6.397216090192615e-11, 2.3993473874384108e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0369151637898995e-11, 5.356581844750963e-11, 2.6334490144108713e-12, 2.4748869620339065e-11, -5.895617327666969e-11, -5.969469363265034e-11, 1.0121015137087852e-10, 3.8127279111677126e-12, 5.262279501039302e-11, -1.1182044179491868e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [8.622591529672263e-11, 1.589102183174873e-10, -2.839672941234994e-11, 3.6841640849161195e-11, 6.13931128157219e-11, 1.7451573519622343e-10, 3.333289200213585e-10, -5.72504266216356e-11, 7.441203209168634e-11, 1.2569323359912232e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-4.644384876684171e-11, 2.9958258096485224e-12, -2.345690308658277e-11, -7.1490591224687705e-12, -4.117073348908207e-11, -8.498213244223507e-11, -1.5820789123210943e-11, -5.0303872178858455e-11, -1.347233435922135e-11, -9.519129928747816e-11, 1.1923795284474181e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.705991235060992e-12, 1.496420765079165e-10, -5.0208059931833304e-11, -6.5423222395111225e-12, 4.6535442166373286e-11, -1.966415918985831e-11, 2.981699331883192e-10, -1.1036738190028927e-10, -1.6214030118533174e-11, 8.89897044942245e-11, 6.108447081487611e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-2.624789274818795e-12, 4.424016708526324e-12, -4.6035730782989503e-11, 8.513412197430625e-12, -5.174161099574803e-11, 1.9928725336626485e-11, -6.292633081272925e-12, 4.5634607204192434e-12, -9.019629487738712e-11, 1.925326564844454e-11, -1.0194223243331635e-10, 3.611866361552529e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.80613326914181e-11, 9.228795505578091e-11, -1.7733770008021565e-10, -6.624922832543234e-12, 1.6661916291127454e-10, -1.1808232169840949e-10, -8.34655677905971e-11, 1.9795320937987526e-10, -3.3173352953497215e-10, 3.113731494863714e-12, 3.4121439007606114e-10, -2.4241841867223e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-6.13934458826293e-11, -3.574074369794289e-11, 4.966826949726055e-11, -4.55802062759858e-12, 7.33977323363888e-11, -1.4703460671228186e-11, -1.307651764648199e-10, -7.698131021527388e-11, 9.449774296399482e-11, -1.0814016349058875e-11, 1.465878529671727e-10, -2.6665891716959322e-11, 3.733235942604551e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.205640032253541e-10, -3.119082769842407e-11, 1.5848211631919185e-10, -4.694467037325012e-11, 1.0057288335474368e-10, -1.3643475238467317e-10, -2.4336821446979684e-10, -6.923239759260014e-11, 3.374349688556322e-10, -9.096889908022376e-11, 2.019133749087132e-10, -2.7625490783833584e-10, -3.890776589798861e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [7.212674901779792e-12, -9.306344583848158e-11, -4.346534243637734e-11, -1.6053969265072965e-10, 2.2096990903719416e-11, 4.027977951182038e-11, -2.0167867376130744e-11, 7.200906537718765e-12, -1.811657490691232e-10, -8.882794499953661e-11, -3.0874736101083045e-10, 4.973776945860209e-11, 8.353229219437708e-11, -3.1956104429298193e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2210432664971904e-10, 7.366773857597764e-12, -9.571254899753967e-11, -1.889222112083644e-11, -1.9547541363351684e-10, 8.618261659876225e-11, 2.796960441031615e-10, 2.3948820704333684e-10, 8.179679156228303e-12, -1.85705339994513e-10, -3.8767655752280916e-11, -4.0196501682743246e-10, 1.711446540042516e-10, 5.754612342201426e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1591950449817432e-11, -2.1131318916900454e-11, -5.129274782689208e-11, -1.2030043627930809e-11, 1.2540857241560843e-11, -1.0790146554029434e-11, 1.8213874852790468e-11, -4.329148151072104e-11, -4.11439771141886e-11, -1.1204737138115206e-10, -2.379141328390233e-11, 2.375344365646015e-11, -1.9382273563905983e-11, 4.353339910778686e-11, 3.119948743801615e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6328716156976952e-11, -8.595346656647962e-12, 8.624256864209201e-11, -6.508371619418085e-11, 6.645706207564217e-11, -1.099138557947299e-10, 5.2069237810314917e-11, 3.5496938721735205e-11, -8.12128142513302e-12, 1.732771703899516e-10, -1.3082424032972995e-10, 1.4073431309213902e-10, -2.1864421384520938e-10, 1.078248601515952e-10, -2.7888802378583932e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [6.7483796328815515e-12, -2.3664181725280287e-11, 1.0789369397912196e-11, -4.943601084050897e-11, -6.222133919209227e-12, -1.488420497963716e-11, 7.876321816979726e-11, -2.962219358693119e-11, 1.3712364577145308e-11, -4.5860981678913504e-11, 2.1916912729125215e-11, -9.336209583210575e-11, -1.4186762875567638e-11, -3.3279712319256305e-11, 1.5912116069216609e-10, -5.730071972465112e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.386480150804118e-11, 1.0215162049576065e-11, 6.8762773253183695e-12, -2.919187114258648e-11, 2.5635937817014565e-11, -7.386313782831166e-12, 5.964473359654221e-11, 7.48054951316135e-11, -1.0467104960554252e-10, 2.2173374247813626e-11, 1.2581269359657199e-11, -6.093636706339112e-11, 4.1231462688529064e-11, -1.6547208048223183e-11, 1.1952150380523108e-10, 1.5066170533373224e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.9346746427117978e-12, -3.2346347822453936e-11, 5.110556422494028e-11, 8.498979298110498e-12, 2.323718995000945e-11, -9.737100015172473e-12, -4.764078020969009e-12, 4.653211149729941e-11, 5.086375765017692e-12, -6.580125333499609e-11, 1.0111911308285926e-10, 1.7079004877018633e-11, 4.8981707578832356e-11, -1.8711254767822538e-11, -1.1571743563365544e-11, 9.885825491551259e-11, -5.256906021600116e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.6199489506525424e-11, -4.48430181876347e-11, 4.3295589335912155e-11, -5.814115855429236e-11, -4.646139029063079e-11, 1.202571375813477e-11, 1.1597833804444235e-11, -1.7416290631899756e-11, -1.0517497983641988e-10, -9.324296890156347e-11, 9.244449650225306e-11, -1.1689027523686946e-10, -1.0184952881076015e-10, 2.1913804104656265e-11, 1.4416245974757658e-11, -2.94417823454296e-11, -4.456546243147841e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-4.107159057298304e-12, -3.270828052848174e-11, 3.637978807091713e-11, 1.695799056733449e-11, 3.174327467547755e-11, -3.843059204200472e-11, -9.431344594190705e-13, -8.616218849510915e-12, -4.624256533247717e-11, -9.792056054891418e-12, -6.770428662150607e-11, 7.206191199315981e-11, 3.1131319744304164e-11, 6.694023113595904e-11, -8.198908219014811e-11, -3.519406988061746e-13, -1.5987211554602254e-11, -1.0013123663554779e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6402990904728085e-11, 2.4411139776248092e-11, 1.4107448542688417e-10, 6.898592808113335e-11, 2.1584112275263578e-10, 1.3190981640320842e-10, 4.3755443712711894e-11, 1.125928239531504e-10, -3.0471036804868845e-10, -5.0180748445427525e-11, 5.3019810763998976e-11, 2.821665123775574e-10, 1.3856049640992296e-10, 4.277884713133062e-10, 2.6949265041764647e-10, 8.250444771817911e-11, 2.2546298161785217e-10, -6.320793888292542e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-3.453903829608862e-12, 7.971401316808624e-12, 1.2504663970958063e-11, -1.3252732244950494e-12, -1.025113327557392e-11, 5.045297513106561e-12, -3.0802027595200343e-12, 1.0068168521115695e-11, 6.6491256944800625e-12, -7.044809180456468e-12, 1.6470602659524047e-11, 2.5078161769442886e-11, -3.647637747405952e-12, -2.051858682960983e-11, 8.776313009661862e-12, -7.129519197235368e-12, 1.9567236719808534e-11, 1.3767875728376566e-11, 7.938094626069869e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [9.484413254767787e-12, -3.3978375668652916e-12, -3.844335960678791e-11, -9.132805622869e-12, -3.3767766360881524e-11, 6.021627640961924e-11, 1.6603829422479066e-11, -1.0123346605439565e-11, -5.7889804061517225e-11, 1.0665690552968954e-11, -1.77369230414115e-12, -7.41455785657763e-11, -2.1633139724031025e-11, -7.223721620874812e-11, 1.2268341897936352e-10, 3.167799356162959e-11, -2.043998303946637e-11, -1.1478895611816142e-10, 4.191758051774741e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [7.856004735629085e-11, -8.165879084032213e-11, 4.725397850791069e-11, -9.077483209551929e-11, 7.511369304324944e-11, -1.755302569961259e-10, -2.248800035076215e-10, -2.4086399541545234e-11, 7.792011480489691e-11, 2.9703062232044886e-10, 1.6434542615684222e-10, -1.5511558704162098e-10, 8.284306574068978e-11, -1.8309087579382322e-10, 1.5265233521688515e-10, -3.469521336896264e-10, -4.679053811074141e-10, -5.4459770026937804e-11, 1.4751999621864798e-10, 5.835569805157093e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.198818821990244e-12, -5.982792039560536e-11, 3.0595082023410214e-11, 6.5459415665714e-11, -4.338951420379544e-11, 1.1356404705509249e-10, -5.776379374822227e-12, -2.0517476606585205e-11, -3.975419993196283e-11, 8.479905666547438e-11, -2.1257440252497872e-12, -1.174795816183405e-10, 6.453282352936185e-11, 1.3382539520989667e-10, -9.063039208001555e-11, 2.3135848792321667e-10, -1.1139866806786358e-11, -4.0052738903284535e-11, -8.24422752288001e-11, 1.7611423430707873e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0134893752299377e-11, -7.823075520718703e-11, 1.7257417717075896e-10, -7.167733073742966e-11, 8.836775755582948e-11, -2.1371793224034263e-11, 2.5833779560002768e-11, 6.869194102421261e-11, 2.2797164156429517e-10, 1.1072032179981761e-11, -1.7478463121278764e-11, -1.5512169326825642e-10, 3.547160343231326e-10, -1.3885259608770184e-10, 1.8852541749936336e-10, -4.7907899869414905e-11, 4.369038464346886e-11, 1.3488410388617922e-10, 4.5510595292341804e-10, 2.6868063329743563e-11, -2.948197241892103e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.355027615256859e-11, -6.08555428271984e-11, -4.36028990691284e-11, -4.72358818726093e-11, -8.017442265639829e-11, -1.5626611116204003e-11, -3.483990873576204e-11, -1.2047862707476042e-10, -2.6261215424483453e-12, -2.4144131138825742e-11, -1.2719114650394658e-10, -1.1623146889405689e-10, -8.38177305340082e-11, -9.686917934459416e-11, -1.6105006217514983e-10, -3.377953472494255e-11, -7.049361094857431e-11, -2.48225218157927e-10, -1.0567879904499478e-11, -4.744837855952255e-11, 2.390310172017962e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5094037958695026e-11, -5.50740564264629e-11, -6.236233751621967e-12, -7.757294806509663e-11, -2.7479529762786115e-10, -1.3472056803465193e-10, -9.619527396864669e-12, 5.255129664760716e-11, 1.6442669448224478e-10, -1.2784462377624095e-10, -4.147194809789312e-10, -4.3549830408551315e-11, -9.315093141282205e-11, -2.8842594979039404e-11, -1.4282974802881654e-10, -5.356715071513918e-10, -2.7552382597662017e-10, -2.2605473048997737e-11, 1.0487721802121541e-10, 3.1778002451687826e-10, -2.4988355828980957e-10, -8.556234609713442e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1044566089756245e-10, -1.1650636011495408e-10, -2.8293145604152414e-11, 2.8372637572715576e-11, 8.487943681245724e-11, 3.3838931656759996e-11, -1.1322109916278578e-10, -2.5904722811276315e-11, 1.9560131292450933e-11, 3.395550507434564e-11, -6.505906924303417e-13, -4.1064052158645836e-10, -2.3425317241532184e-10, -5.7778115625239934e-11, 5.2510440440300954e-11, 1.6150858428432002e-10, 6.66906530000233e-11, -2.3097501689051114e-10, -5.4180882003151964e-11, 3.410738358411436e-11, 6.89748258508871e-11, -1.1870726623897099e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.625755086109848e-11, -1.0262790617332485e-11, -3.098721279570782e-11, -1.196387433566315e-11, 2.229749718196672e-11, -1.72029057665668e-11, 9.68625180064464e-12, -1.894429058069136e-11, 1.8737233986598767e-11, 1.2487122447168986e-11, 2.1901813695990313e-11, -3.097344603020247e-11, -2.33107977365421e-11, -6.420364240256049e-11, -2.5200952435966428e-11, 3.964339967410524e-11, -3.378075597026964e-11, 1.89690485541405e-11, -3.779243584745018e-11, 3.804401238483024e-11, 2.5858426511149446e-11, 4.6626702498997474e-11, -1.3736567439082137e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3774093804718177e-11, 2.596500792151346e-11, 3.3230307394660485e-11, -8.279132934774225e-11, -4.5959902550407605e-12, -6.36989350155659e-11, -4.032574274503986e-11, -1.4319101460102956e-10, 1.3296919121330575e-11, -8.215761404528621e-12, 9.643885690024945e-11, -4.826039567973339e-11, 5.384981349720874e-11, 6.692579823663891e-11, -1.6440715455701138e-10, -4.824474153508618e-12, -1.2076606381583588e-10, -7.735878604364643e-11, -2.7886604136995174e-10, 2.8430813259205934e-11, -1.5583756507453472e-11, 2.0129298228255266e-10, -4.864775249302511e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.2624723488841028e-10, -1.0709866327118789e-10, 1.866513610337961e-10, 2.467617221668661e-10, 1.4528334091323813e-10, -1.6387058376921004e-10, 3.01239033717593e-11, -1.4903811518252041e-10, 1.3141532306804038e-10, 2.506639340538186e-11, -2.440732060904338e-10, 6.945777286659904e-11, 2.4886714911076524e-10, -2.084041827998817e-10, 3.856852615058415e-10, 5.078819587112093e-10, 2.982478708446479e-10, -3.374494017549523e-10, 5.332578822958567e-11, -3.079655419568894e-10, 2.4585045110825376e-10, 4.924127772198972e-11, -4.683174958941549e-10, 1.2295520157579176e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0455636356709874e-11, -1.0512146708663295e-11, -4.369482553556736e-11, 8.218803415616094e-11, 1.5213164061833595e-11, -4.162270528240697e-11, 1.1051515258486688e-10, 7.051803585511607e-11, 7.813261149181017e-11, 3.753619637336669e-11, 3.2774893909959246e-11, 3.600897358069233e-11, -2.096522955241653e-11, -2.306277391284084e-11, -8.989042843410289e-11, 1.5937251518494122e-10, 3.008082671840384e-11, -7.9643625028325e-11, 2.1432322583336827e-10, 1.3974710277864233e-10, 1.561717422049469e-10, 7.287948022849378e-11, 6.39681640990375e-11, 7.278377900377109e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
