Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed VectorizationBase ─── v0.12.32
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.24
  Installed OffsetArrays ──────── v1.1.2
  Installed LoopVectorization ─── v0.8.24
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_copOcY/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_copOcY/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [7.618350394977824e-13, 1.687983086640088e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5338398873818733e-13, -7.465139617579553e-13]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [4.855249535751227e-11, 1.0098499814148454e-10, -1.47259315852466e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.689048983484099e-11, -5.7062798930473946e-11, -6.469147439958078e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [4.479505655297089e-11, 7.1306072157995e-11, 7.109202115884727e-11, 1.2806533611353643e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2429646201184141e-10, 1.9912960169676808e-11, -2.44383624448119e-10, 4.3271830563185176e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5840662942755444e-11, 3.567146578120628e-12, -4.9483417363660465e-11, 7.863265594210134e-12, 8.171241461241152e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.898803750488014e-11, 3.0080604673798916e-11, -1.4618850574521502e-10, 6.923217554799521e-11, -5.916703793573674e-10]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [2.903299822776262e-11, -3.972011608510684e-11, 6.590505918779854e-12, 5.729061669512703e-11, -7.623335296358391e-11, 1.4015233418263051e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2580048114330111e-11, 8.761880110341735e-12, -7.850387007124482e-13, -2.6201152358851232e-11, 1.804090210555387e-11, -1.8459678230442478e-12]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3055889702684453e-11, 4.204636638860393e-12, 2.4662494269023227e-12, -2.6894153570822255e-11, 8.526290784516277e-12, 5.688116644364527e-12, -1.936228954946273e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.345124508617573e-12, -1.5706547173977015e-11, -2.5956015115013997e-11, -1.3366752149579497e-11, -3.154454475406965e-11, -5.340872188952517e-11, -2.0228263508670352e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [4.157241217939145e-10, -6.139644348479578e-12, 7.773404142596974e-11, -1.2465806165096183e-11, 8.363116865695019e-10, -1.8671952872750808e-11, 1.6085355269979118e-10, -2.3258173165174867e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.128208720364455e-11, 1.6507462063941603e-11, -5.846401140985336e-11, 1.1099143826243107e-10, 4.9548365410601036e-11, 3.2728486587529915e-11, -1.1171008562627094e-10, 2.2219914797005913e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-9.436562642406443e-12, -7.439060478731108e-11, 3.06898950697132e-11, 1.7139845098768092e-11, -1.207867139640939e-11, -1.3965784084746247e-10, 6.533396046393136e-11, 3.929834235805174e-11, 7.396305790052793e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7218126924234411e-10, -2.507614116353807e-10, -2.3699930906673217e-11, 1.1338019412221456e-10, -3.2547342598832074e-10, -4.954605614670982e-10, -5.3008708533752724e-11, 2.0363044583859846e-10, 3.3014035949463505e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-2.748878902281149e-11, -2.271771659678734e-11, 2.6295188249036983e-11, 1.2617684674864904e-11, 3.547162563677375e-12, -5.60976820551673e-11, -4.4085624040235416e-11, 5.163203198321753e-11, 2.26938468017579e-11, 1.676503380565464e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9868330858894296e-11, 1.715489972298201e-10, 1.619615552783671e-11, -4.46895853656315e-11, 4.054623303773042e-11, -7.749278996271869e-11, 3.5440073098413905e-10, 3.9439340682179136e-11, -8.437828213914145e-11, 1.0120237980970614e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-5.288547377801933e-11, -2.1082247059212023e-11, -1.8477464003296973e-10, 1.8965118364633327e-10, -2.4780144602942755e-10, -1.1589540438450285e-10, -6.448930278679654e-11, -3.8989822481738656e-10, 3.8891667664131546e-10, -5.107669842630003e-10, 2.0648593945793436e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2894575124610128e-11, 5.0108805993431815e-12, 1.2980838626219793e-10, 1.556839102079266e-10, -1.2003509297642267e-11, -4.225164662585712e-11, 2.3056445641600476e-11, 2.531133080907466e-10, 3.03481018093521e-10, -2.165856383129494e-11, -5.952782711204918e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-7.080180886021026e-11, 1.0260503557901757e-10, 2.7764013310616065e-11, -9.618417173840044e-12, 1.2974088470230072e-10, 2.0539125955565396e-13, -1.4060719255581944e-10, 2.1777890601981653e-10, 5.126299384983213e-11, -2.4466983994386737e-11, 2.5422419724918655e-10, -1.5281109710940655e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.4898350048374596e-10, 1.9189783095896473e-10, -4.626998784118541e-11, 4.2220094087497273e-10, 1.6644063904891482e-10, -4.524469687794408e-11, 4.813667242586916e-10, 4.030391576037573e-10, -9.261214017897146e-11, 8.684226671107353e-10, 3.3447822289645046e-10, -7.883194097502155e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-8.280076624345156e-11, 2.225863937610484e-11, -5.241718170623244e-11, 3.698663597617724e-11, 1.2495338097551212e-11, 1.0455858401314799e-10, -1.7217172132433234e-10, 4.329048230999888e-11, -9.798439837283013e-11, 7.920619715662269e-11, 2.5430768602063836e-11, 2.0607715534026738e-10, 1.4070966614099234e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.9828583219805296e-13, 8.122458261539123e-11, 1.2056444731456395e-10, 6.170042254893815e-11, -1.407435279432434e-10, -1.4113532564863362e-10, -7.967293491617511e-12, 1.6175816242025576e-10, 2.496516326999654e-10, 1.2364331780645443e-10, -2.802896803544286e-10, -2.6946012088302496e-10, 4.694467037325012e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [9.689760105402456e-11, -4.0788372679401164e-11, 1.2021139639273315e-10, 3.203748377700322e-11, 1.5186296664637666e-10, -2.2046842129697097e-10, 4.9669601764890103e-11, 1.9872725687264392e-10, -7.334932661251514e-11, 2.3962765105522976e-10, 6.75217659562577e-11, 2.9793012501500016e-10, -4.2571901559540493e-10, 9.318901206256669e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.47754491869523e-10, 3.553601857220201e-11, 5.892175636290631e-11, -9.842382464597677e-11, -2.6963098420651477e-11, -1.4909007362007287e-10, -8.759626357601746e-11, 6.860005896669463e-10, 6.299205601578706e-11, 1.1893241946836497e-10, -2.0681978352143915e-10, -5.765743438246318e-11, -2.991401570895391e-10, -1.6706847016934034e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [6.253486617424642e-11, 5.5296212053690397e-11, -3.542255377908532e-11, -4.358680083527133e-11, 1.270572536071768e-10, 4.7950310388955586e-11, -1.5376955264656544e-10, 1.359030665781802e-10, 1.1271583666427887e-10, -5.966560578940516e-11, -8.983969124187752e-11, 2.300626356088742e-10, 9.289857771932475e-11, -2.984944513784171e-10, 1.1854517367737571e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.6929347640702872e-11, -6.903255744816761e-12, -3.3803515542274454e-11, -1.3145928789981554e-11, 1.0442713360703237e-10, -3.0577873566528524e-11, 1.3891110484109959e-12, 5.610889530771601e-11, -1.0620726520471635e-11, -7.108746924444631e-11, -2.6823432364153632e-11, 1.9954926600007639e-10, -5.934597258061558e-11, 1.7503776206240218e-12, 2.675193400136777e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.478528493554677e-11, -1.8353485398137082e-10, -7.45469241891783e-11, -4.388711616343244e-13, 5.309375161743901e-11, -1.1060974358656495e-10, -3.0657365535091685e-11, -8.157097219907428e-11, -5.537803549060527e-11, -3.5359593031358827e-10, -1.560183093829437e-10, -1.6113999024014447e-11, 1.0457745780456662e-10, -2.2967705515242187e-10, -6.126199547651368e-11, -1.6767542909690292e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [7.097256116139761e-11, -1.6625367749156794e-11, 1.0359557656158813e-10, -5.8018700954676206e-11, 2.1821211504402527e-11, -3.450695285067695e-11, 5.757616605706062e-12, 1.1073364447611311e-12, 1.3855538938400969e-10, -3.1263769351141946e-11, 2.123798914510644e-10, -1.1945644473598804e-10, 5.085132315230112e-11, -6.993361445495339e-11, 1.1885381567822151e-11, -1.7300605392733814e-12]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-5.544953385339113e-11, 3.179656538065956e-11, 7.137512803012669e-11, -5.485611964672898e-13, 1.5937917652308897e-11, 2.082178873763496e-11, 7.505107646466058e-12, 7.524647571699461e-12, -1.0947687201223744e-10, 6.127609530892641e-11, 1.4299761375013986e-10, 5.555333970619358e-12, 2.727307268912682e-11, 4.885780668928419e-11, 1.6185719431405232e-11, 9.14912590133099e-12, -2.666977749754551e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.523892206340861e-10, 9.390510591344992e-11, -6.126588125709986e-11, 7.05937530653955e-11, -1.288150697220658e-10, 8.201883616720806e-12, 1.1796097432181796e-10, -3.951949878455707e-12, -4.944722409305768e-10, 1.788229564425592e-10, -1.2689183037650764e-10, 1.3747269989039523e-10, -2.6868240965427503e-10, 2.0724977289887647e-11, 2.364852758063307e-10, -1.873290411680273e-11, 1.0451639553821224e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4908185796969065e-10, -6.97049085118806e-11, -1.6917511835856658e-10, -1.5900891714437648e-10, 3.985256569194462e-12, -5.128963920242313e-11, -1.7092771642523985e-11, 9.556333502303005e-11, 1.349149680862638e-10, -3.07152192569049e-10, -1.3672385446028557e-10, -3.397044867625709e-10, -3.29408944566012e-10, 1.7743806424164177e-11, -1.075156630392371e-10, -4.3339221100779923e-11, 1.8691115322155838e-10, 2.633586682065925e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.153410783023446e-11, 3.3419933487266462e-12, 3.045808050217147e-11, -3.3946956357056024e-11, -2.1124213489542853e-12, -2.093258899549255e-11, -4.050226820595526e-11, 4.7134296465856096e-11, -7.796208123522774e-12, 4.1322056887338476e-11, 1.0290435170645651e-11, 6.082578885013845e-11, -5.7016724674952e-11, -1.5332179970073412e-13, -4.165268130407185e-11, -8.315881316889318e-11, 8.87900863943969e-11, -1.744249189528091e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-5.068312436407041e-11, 1.6477663677960663e-10, -2.6808000264111342e-11, 1.460565002275871e-11, 1.6012768888629125e-10, 3.9528380568754073e-11, 6.369882399326343e-11, 4.919331608732591e-11, 2.7961633008999343e-11, -1.04428243830057e-10, 3.1483127216347384e-10, -5.444944495280879e-11, 3.1457059179729185e-11, 3.17582404818495e-10, 7.241984789629896e-11, 1.2670575699758047e-10, 9.551515134376132e-11, 5.648215228859499e-11, -1.0524914273446484e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [9.224065955493188e-11, 2.004107990671855e-11, 5.966604987861501e-11, -9.414280466302216e-11, -9.101219777818415e-11, -4.0938474832330485e-11, -4.0682901492061774e-11, -9.983391890955318e-11, 4.186184732191123e-11, 1.8206369745144002e-10, 3.9798164763737987e-11, 1.1402079280742328e-10, -1.984995501302933e-10, -1.828202034204196e-10, -9.207690165879967e-11, -8.109912741360858e-11, -2.0285872981418152e-10, 8.095413228659254e-11, -1.820776862615503e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-7.750711183973635e-11, 4.766986805293527e-11, -5.004407999109617e-11, 1.652944447982918e-11, -8.411960017440379e-11, 5.465339292243243e-11, 1.75452985473612e-11, -3.362199407774824e-12, -7.112199718051215e-12, 2.121192110848824e-12, -1.606775823503881e-10, 8.297318387917585e-11, -1.0258727201062356e-10, 3.5662806041614203e-11, -1.6890844278805162e-10, 1.1864220716972795e-10, 3.256195313383614e-11, -1.0348277790228622e-11, -6.915690242692563e-12, -4.600098080231874e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.246114736541131e-13, -3.6232128408641984e-11, -6.416056574920503e-11, 1.1926237775128357e-11, -1.8519186184562386e-11, -9.364031772207682e-11, 2.8121505124545365e-11, -1.1340706151941049e-11, -7.906397758716821e-11, -1.276090344504155e-12, -4.3232084578903596e-13, -7.545075675352564e-11, -1.2444323349569686e-10, 1.8143264668424308e-11, -3.2731151122789015e-11, -1.8716750371794433e-10, 5.5564886025649685e-11, -2.3330559706380427e-11, -1.5970780253837802e-10, -7.030487303438804e-12]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [2.215849725928365e-11, 1.1946266198492594e-10, 1.3412337906970606e-10, -1.776517821738821e-10, 8.929368355836687e-11, -1.3953727062698817e-11, 1.3395573539298766e-10, 2.2005286481885378e-11, 1.710895869422302e-10, 1.7421619702417956e-12, 4.274114395741435e-11, 2.336189020013535e-10, 2.6585023071845626e-10, -3.6260439095769925e-10, 1.8277290791957057e-10, -2.8990809752826863e-11, 2.470199600423939e-10, 4.590061664089262e-11, 3.4683678151736785e-10, 8.072431612049513e-12, 2.1474821920719478e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.613629230234892e-10, 2.602629223247277e-11, -3.332012443735266e-11, 1.1040723890687332e-10, -3.520539415546864e-11, 1.1656453580144444e-11, -1.5252588081438034e-10, -5.963229909866641e-11, -1.3699907874809014e-10, -2.0255797039681056e-11, -3.181228613868825e-10, 4.948019771688905e-11, -6.151312792468389e-11, 2.2855140002775443e-10, -6.875167102293744e-11, 2.7217561537895563e-11, -2.824653844157865e-10, -1.2559608908446762e-10, -2.759262818230468e-10, -4.641775852576302e-11, 1.0835776720341528e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-6.069034164113418e-12, -1.2251422099041065e-11, 2.2803536836590865e-11, -7.935208046205844e-12, 4.529709940470639e-12, 1.6486811915683575e-11, 8.307798893270046e-12, 2.1687096563027808e-12, -8.737988110851802e-11, 3.922373537079693e-11, -5.679945402903286e-11, -1.3354206629401233e-11, -2.5242141710180022e-11, 4.454436819401053e-11, -1.49847911856682e-11, 9.936274025790226e-12, 3.3830938050982695e-11, 1.6194601215602233e-11, 5.689004822784227e-12, -1.722707532181289e-10, 7.94049270780306e-11, -1.1344380990152558e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.6399884762470265e-11, -1.532551863192566e-11, 4.3539172267514914e-11, 9.100054043642558e-12, 1.8767210008263646e-11, -7.088751807771132e-11, -4.060762837099219e-11, 1.5030421351980294e-11, -3.688060967732554e-11, -1.639000046793626e-11, 3.042011087472929e-13, -1.1289391643742874e-10, -3.0612845591804216e-11, 8.127809536517816e-11, 1.5175194434391415e-11, 3.835198825186126e-11, -1.458281273514217e-10, -8.373590709709333e-11, 2.958255862495207e-11, -7.479283858913277e-11, -3.249434055163647e-11, -3.143041382713818e-13]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-6.9113603728965245e-12, -6.461942092528261e-12, -1.452360454123891e-11, 2.7744917474592512e-11, 9.11914987966611e-12, -1.5317636048450822e-11, -2.5713542406435863e-11, 6.005529407104859e-11, -3.749622834448019e-11, -6.079325931551693e-11, 1.2691403483700014e-11, -1.3199663584373411e-11, -1.1584289083543808e-11, -2.6015412046831443e-11, 5.87168091925605e-11, 1.8706147741909263e-11, -3.0947355789123776e-11, -4.9261372758735433e-11, 1.2074163890929412e-10, -7.279243874336316e-11, -1.177488107018121e-10, 2.3772983581693552e-11, -4.767852779252735e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3925306180672123e-12, -1.592481702061832e-11, 7.426548265243582e-11, -2.460476267174272e-12, -3.361566580650788e-11, 6.649303330164003e-11, -7.004430369050851e-11, -7.956479919357662e-11, 1.335871413488121e-10, -7.218725617263999e-11, -1.593047915804391e-11, -9.594547378810603e-13, -2.0250134902255468e-11, 1.515287895159645e-10, -7.21789294999553e-12, -6.90941748260343e-11, 1.3607559523620694e-10, -1.4293244365859437e-10, -1.5659729069028572e-10, 2.4700508305386393e-10, -1.2994683107336868e-10, -2.894529060881723e-11, -6.533773522221509e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [9.64872626241231e-12, -2.6263657915137628e-11, 1.7933876605980004e-11, -7.524092460187148e-12, 2.225553075163589e-12, 1.2376766278521245e-11, -3.954836458319733e-12, -7.887912545356812e-12, -1.0413891970983968e-11, 3.516964497407571e-12, -1.5318968316080372e-11, -4.885203352955614e-12, 1.9562795827710033e-11, -5.3127391375085153e-11, 3.5952796295646294e-11, -1.476185840232347e-11, 5.028200078527334e-12, 2.432409829111748e-11, -8.318679078911373e-12, -1.670896754291107e-11, -2.0855428495281103e-11, 7.238654120556021e-12, -2.9815705460123354e-11, -9.850342763684239e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1745360239956426e-10, -5.4836246654588194e-11, 3.640865386955738e-12, -6.924638640271041e-11, 7.555223113797638e-11, -3.0522806504507116e-11, 6.330047597202793e-11, 1.6130230484634467e-10, -8.339562374004572e-11, 1.987048303675465e-10, -3.4253266889550105e-11, -7.311085070682566e-11, -2.419434652622954e-10, -1.1226652940621307e-10, 2.0335066963639292e-11, -1.4767209677302162e-10, 1.6777712552595858e-10, -8.053280264874729e-11, 1.1495759899560198e-10, 3.3201841276309096e-10, -1.6659729151768943e-10, 3.891351685325617e-10, -6.622136172751425e-11, -1.4063383790841044e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
