Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_aR12II/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_aR12II/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.885564 seconds (1.34 M allocations: 70.761 MiB, 6.56% gc time)
Running: chebyshev_quadrature with k=1
  1.864081 seconds (2.24 M allocations: 128.754 MiB, 3.40% gc time)
Running: chebyshev_quadrature with k=2
  0.290297 seconds (425.05 k allocations: 24.382 MiB)
Running: chebyshev_quadrature with k=3
  0.352626 seconds (544.93 k allocations: 29.885 MiB, 3.99% gc time)
Running: chebyshev_quadrature with k=4
  0.314818 seconds (487.80 k allocations: 26.429 MiB)
Running: jacobi_quadrature with α=β=1
 42.381298 seconds (39.42 M allocations: 3.140 GiB, 9.81% gc time)
Running: laguerre_quadrature with k=1
  3.053632 seconds (3.33 M allocations: 185.674 MiB, 3.76% gc time)
Running: legendre_quadrature
  0.212286 seconds (215.12 k allocations: 12.328 MiB)
Running: lobatto_quadrature
  0.332530 seconds (343.65 k allocations: 20.590 MiB)
Running: radau_quadrature
  0.325903 seconds (326.07 k allocations: 19.593 MiB, 12.82% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.109172 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.151845 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.267853 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rombergs_method
  0.546559 seconds (752.78 k allocations: 43.340 MiB)
Running: simpsons_rule
  0.043087 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.094819 seconds (113.09 k allocations: 5.978 MiB)
Running: trapezoidal_rule
  0.325111 seconds (1.52 M allocations: 25.800 MiB, 10.21% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.078424 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.463923 seconds (275.90 k allocations: 13.995 MiB)
Running: chebyshev_quadrature with k=2
  0.177648 seconds (115.72 k allocations: 3.793 MiB)
Running: chebyshev_quadrature with k=3
  0.177016 seconds (105.07 k allocations: 3.639 MiB)
Running: chebyshev_quadrature with k=4
  0.171418 seconds (87.68 k allocations: 3.285 MiB)
Running: jacobi_quadrature with α=β=1
  2.342101 seconds (536.03 k allocations: 163.496 MiB, 20.83% gc time)
Running: legendre_quadrature
  0.167681 seconds (62.31 k allocations: 3.479 MiB)
Running: lobatto_quadrature
  0.021949 seconds (16.79 k allocations: 1.039 MiB)
Running: radau_quadrature
  0.021648 seconds (16.77 k allocations: 1.038 MiB)
Running: rectangle_rule_left
 27.045323 seconds (471.41 M allocations: 7.025 GiB, 1.80% gc time)
Running: rectangle_rule_midpoint
  0.000070 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.353845 seconds (476.96 M allocations: 7.107 GiB, 1.80% gc time)
Running: rombergs_method
  0.358644 seconds (360.30 k allocations: 20.318 MiB)
Running: simpsons_rule
  0.000061 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.061795 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.058096 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030521 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.100296 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.103183 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.113611 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.110388 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.310932 seconds (379.01 k allocations: 19.794 MiB)
Running: legendre_quadrature
  0.069794 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000101 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000042 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000591 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000409 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000580 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071724 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000036 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023261 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021190 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059479 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.191813 seconds (240.26 k allocations: 13.501 MiB)
Running: chebyshev_quadrature with k=2
  0.246257 seconds (295.45 k allocations: 16.566 MiB, 9.87% gc time)
Running: chebyshev_quadrature with k=3
  0.216627 seconds (275.41 k allocations: 14.983 MiB)
Running: chebyshev_quadrature with k=4
  0.234940 seconds (275.44 k allocations: 14.879 MiB, 9.48% gc time)
Running: jacobi_quadrature with α=β=1
  2.252540 seconds (465.70 k allocations: 164.242 MiB, 4.64% gc time)
Running: legendre_quadrature
  0.165130 seconds (193.00 k allocations: 11.107 MiB, 8.95% gc time)
Running: lobatto_quadrature
  0.171449 seconds (204.21 k allocations: 11.811 MiB)
Running: radau_quadrature
  0.176400 seconds (204.21 k allocations: 11.824 MiB)
Running: rectangle_rule_left
  1.067392 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027364 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.109521 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.106479 seconds (139.91 k allocations: 8.059 MiB)
Running: simpsons_rule
  0.025317 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.041473 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.045472 seconds (45.20 k allocations: 1.824 MiB, 38.37% gc time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041074 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.196813 seconds (247.35 k allocations: 13.606 MiB)
Running: chebyshev_quadrature with k=2
  0.219340 seconds (303.07 k allocations: 16.574 MiB)
Running: chebyshev_quadrature with k=3
  0.229342 seconds (282.82 k allocations: 15.002 MiB, 7.96% gc time)
Running: chebyshev_quadrature with k=4
  0.238857 seconds (282.85 k allocations: 15.010 MiB)
Running: hermite_quadrature with k=2
 15.456764 seconds (22.12 M allocations: 1.147 GiB, 8.65% gc time)
Running: jacobi_quadrature with α=β=1
  0.561532 seconds (475.70 k allocations: 50.441 MiB, 23.13% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.257338 seconds (288.35 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.159591 seconds (200.06 k allocations: 11.455 MiB)
Running: lobatto_quadrature
  0.265399 seconds (225.61 k allocations: 37.625 MiB, 15.64% gc time)
Running: radau_quadrature
  0.287140 seconds (222.21 k allocations: 30.305 MiB, 26.09% gc time)
Running: rectangle_rule_left
  0.030008 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.027432 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026460 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.171902 seconds (142.73 k allocations: 8.122 MiB)
Running: simpsons_rule
  0.040788 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.043181 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.030791 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043621 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.431836 seconds (242.48 k allocations: 13.352 MiB, 47.15% gc time)
Running: chebyshev_quadrature with k=2
  0.229436 seconds (297.80 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.266310 seconds (277.68 k allocations: 14.773 MiB)
Running: chebyshev_quadrature with k=4
  0.277014 seconds (277.71 k allocations: 14.784 MiB)
Running: hermite_quadrature with k=2
  0.179992 seconds (177.71 k allocations: 10.157 MiB, 19.71% gc time)
Running: jacobi_quadrature with α=β=1
  8.069808 seconds (468.30 k allocations: 1.176 GiB, 23.02% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.284769 seconds (283.21 k allocations: 15.693 MiB, 5.70% gc time)
Running: legendre_quadrature
  0.164365 seconds (195.23 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.248285 seconds (215.97 k allocations: 23.331 MiB, 13.84% gc time)
Running: radau_quadrature
  0.198729 seconds (215.13 k allocations: 21.266 MiB)
Running: rectangle_rule_left
  0.036843 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.026883 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.039272 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.123849 seconds (138.20 k allocations: 7.923 MiB)
Running: simpsons_rule
  0.035429 seconds (33.49 k allocations: 1.933 MiB)
Running: simpsons38_rule
  0.045417 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.028705 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036384 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.296330 seconds (240.81 k allocations: 13.573 MiB, 7.17% gc time)
Running: chebyshev_quadrature with k=2
  0.267856 seconds (296.03 k allocations: 16.655 MiB)
Running: chebyshev_quadrature with k=3
  0.243592 seconds (276.01 k allocations: 14.978 MiB, 10.07% gc time)
Running: chebyshev_quadrature with k=4
  0.214576 seconds (276.04 k allocations: 14.813 MiB)
Running: jacobi_quadrature with α=β=1
  2.631626 seconds (466.34 k allocations: 195.248 MiB, 9.52% gc time)
Running: legendre_quadrature
  0.173983 seconds (193.56 k allocations: 11.135 MiB, 8.44% gc time)
Running: lobatto_quadrature
  0.207358 seconds (204.78 k allocations: 11.916 MiB)
Running: radau_quadrature
  0.177849 seconds (204.78 k allocations: 11.846 MiB)
Running: rectangle_rule_left
  0.307816 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.039295 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.112110 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.138359 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.033185 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.039362 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.051476 seconds (46.19 k allocations: 1.861 MiB, 44.86% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034779 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.188112 seconds (241.38 k allocations: 13.511 MiB)
Running: chebyshev_quadrature with k=2
  0.246234 seconds (296.63 k allocations: 16.566 MiB)
Running: chebyshev_quadrature with k=3
  0.279322 seconds (276.54 k allocations: 14.902 MiB, 13.18% gc time)
Running: chebyshev_quadrature with k=4
  0.233551 seconds (276.58 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.608353 seconds (467.01 k allocations: 149.919 MiB, 8.59% gc time)
Running: legendre_quadrature
  0.165327 seconds (194.13 k allocations: 11.150 MiB, 10.35% gc time)
Running: lobatto_quadrature
  0.170279 seconds (205.35 k allocations: 11.859 MiB)
Running: radau_quadrature
  0.175799 seconds (205.35 k allocations: 11.920 MiB)
Running: rectangle_rule_left
  1.153872 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.033113 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.976475 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.172579 seconds (141.21 k allocations: 8.151 MiB)
Running: simpsons_rule
  0.037650 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.106535 seconds (46.17 k allocations: 2.850 MiB, 61.56% gc time)
Running: trapezoidal_rule
  0.029559 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.400080 seconds (152.87 k allocations: 9.084 MiB, 56.98% gc time)
Running: chebyshev_quadrature with k=1
  0.165288 seconds (91.24 k allocations: 3.358 MiB)
Running: chebyshev_quadrature with k=2
  0.170214 seconds (127.01 k allocations: 3.988 MiB)
Running: chebyshev_quadrature with k=3
  0.176678 seconds (115.58 k allocations: 3.818 MiB)
Running: chebyshev_quadrature with k=4
  0.157672 seconds (95.11 k allocations: 3.411 MiB)
Running: jacobi_quadrature with α=β=1
  1.190928 seconds (509.69 k allocations: 169.309 MiB, 9.64% gc time)
Running: legendre_quadrature
  0.106689 seconds (38.34 k allocations: 2.105 MiB)
Running: lobatto_quadrature
  0.000141 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000041 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 41.480693 seconds (590.00 M allocations: 8.792 GiB, 2.45% gc time)
Running: rectangle_rule_midpoint
  0.000076 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 42.044649 seconds (592.75 M allocations: 8.833 GiB, 2.10% gc time)
Running: rombergs_method
  0.145273 seconds (41.88 k allocations: 2.257 MiB)
Running: simpsons_rule
  0.000044 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032016 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024968 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.034467 seconds (629.34 M allocations: 9.388 GiB, 3.49% gc time)
Running: chebyshev_quadrature with k=1
  0.465686 seconds (439.21 k allocations: 24.266 MiB)
Running: chebyshev_quadrature with k=2
 12.396711 seconds (496.57 k allocations: 4.042 GiB, 4.10% gc time)
Running: chebyshev_quadrature with k=3
  5.658184 seconds (290.50 k allocations: 1.643 GiB, 5.26% gc time)
Running: chebyshev_quadrature with k=4
  7.890574 seconds (290.54 k allocations: 2.262 GiB, 2.59% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 50.873230 seconds (505.20 k allocations: 13.255 GiB, 4.18% gc time)
Running: legendre_quadrature.
  5.801407 seconds (232.90 k allocations: 1.976 GiB, 3.29% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.520369 seconds (8.24 M allocations: 13.384 GiB, 4.05% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.683989 seconds (7.24 M allocations: 13.369 GiB, 3.03% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.163870 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.131084 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.276220 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.341091 seconds (456.67 k allocations: 153.704 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.263219 seconds (600.04 M allocations: 8.943 GiB, 8.81% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.213561 seconds (600.05 M allocations: 8.944 GiB, 8.33% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.903779 seconds (600.04 M allocations: 8.943 GiB, 8.75% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.071319 seconds (182.51 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.252069 seconds (257.97 k allocations: 14.018 MiB)
Running: chebyshev_quadrature with k=2
  0.200163 seconds (284.13 k allocations: 15.179 MiB)
Running: chebyshev_quadrature with k=3
  0.237882 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.228850 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.398617 seconds (405.27 k allocations: 35.862 MiB)
Running: laguerre_quadrature with k=2
  0.224100 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.176539 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.037138 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.033307 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.063563 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.053013 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.058137 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.277498 seconds (171.23 k allocations: 9.746 MiB)
Running: simpsons_rule
  0.002028 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057004 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.200370 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002028 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.113991 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.120011 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.126713 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.124118 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.792531 seconds (402.11 k allocations: 906.565 MiB, 4.03% gc time)
Running: legendre_quadrature
  0.069416 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000175 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000126 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.451373 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000430 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.381588 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.076817 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000033 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000478 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000734 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.100300 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.107738 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.118372 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.117423 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.671035 seconds (388.38 k allocations: 253.808 MiB)
Running: legendre_quadrature
  0.076091 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000118 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000064 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.972860 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001090 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.599702 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098735 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000068 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001657 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
