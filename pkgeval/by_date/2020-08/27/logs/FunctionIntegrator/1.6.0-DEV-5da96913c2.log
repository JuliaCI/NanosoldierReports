Julia Version 1.6.0-DEV.733
Commit 5da96913c2 (2020-08-26 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ig7GAq/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ig7GAq/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.943577 seconds (1.46 M allocations: 77.958 MiB, 4.48% gc time)
Running: chebyshev_quadrature with k=1
  1.652230 seconds (2.24 M allocations: 128.586 MiB, 2.80% gc time)
Running: chebyshev_quadrature with k=2
  0.325637 seconds (424.53 k allocations: 24.352 MiB)
Running: chebyshev_quadrature with k=3
  0.385388 seconds (544.36 k allocations: 29.837 MiB, 9.11% gc time)
Running: chebyshev_quadrature with k=4
  0.321232 seconds (487.28 k allocations: 26.406 MiB)
Running: jacobi_quadrature with α=β=1
 41.696723 seconds (39.35 M allocations: 3.137 GiB, 10.06% gc time)
Running: laguerre_quadrature with k=1
  3.175237 seconds (3.33 M allocations: 185.504 MiB, 2.70% gc time)
Running: legendre_quadrature
  0.226380 seconds (214.69 k allocations: 12.293 MiB)
Running: lobatto_quadrature
  0.378136 seconds (343.19 k allocations: 20.598 MiB, 6.49% gc time)
Running: radau_quadrature
  0.254027 seconds (325.62 k allocations: 19.607 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.530294 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rectangle_rule_midpoint.
  0.146253 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.903323 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rombergs_method
  0.641365 seconds (751.54 k allocations: 43.260 MiB, 4.62% gc time)
Running: simpsons_rule
  0.041577 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.105681 seconds (113.01 k allocations: 5.970 MiB)
Running: trapezoidal_rule
  0.333397 seconds (1.52 M allocations: 25.792 MiB, 4.89% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.124078 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.652779 seconds (256.55 k allocations: 12.930 MiB, 7.44% gc time)
Running: chebyshev_quadrature with k=2
  0.186685 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.180890 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.166515 seconds (65.31 k allocations: 2.150 MiB)
Running: jacobi_quadrature with α=β=1
  3.335036 seconds (513.71 k allocations: 162.392 MiB, 21.54% gc time)
Running: legendre_quadrature
  0.169032 seconds (43.20 k allocations: 2.481 MiB)
Running: lobatto_quadrature
  0.146048 seconds (16.78 k allocations: 1.036 MiB, 83.91% gc time)
Running: radau_quadrature
  0.035877 seconds (16.76 k allocations: 1.036 MiB)
Running: rectangle_rule_left
 30.458474 seconds (471.41 M allocations: 7.025 GiB, 1.86% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.322011 seconds (476.96 M allocations: 7.107 GiB, 1.86% gc time)
Running: rombergs_method
  0.350468 seconds (338.95 k allocations: 19.215 MiB, 1.45% gc time)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065850 seconds (19.88 k allocations: 1.193 MiB)
Running: trapezoidal_rule
  0.067699 seconds (18.33 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031273 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.106208 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.111609 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.129396 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.114604 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.361233 seconds (378.56 k allocations: 19.779 MiB, 9.65% gc time)
Running: legendre_quadrature
  0.076277 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000108 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000045 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000600 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000422 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000596 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.090430 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000069 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.036701 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021881 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.068259 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.192681 seconds (239.83 k allocations: 13.464 MiB)
Running: chebyshev_quadrature with k=2
  0.213481 seconds (295.00 k allocations: 16.537 MiB)
Running: chebyshev_quadrature with k=3
  0.201466 seconds (274.98 k allocations: 14.938 MiB)
Running: chebyshev_quadrature with k=4
  0.240488 seconds (275.02 k allocations: 14.870 MiB)
Running: jacobi_quadrature with α=β=1
  2.781816 seconds (465.17 k allocations: 164.155 MiB, 8.49% gc time)
Running: legendre_quadrature
  0.177194 seconds (192.58 k allocations: 11.142 MiB)
Running: lobatto_quadrature
  0.233635 seconds (203.78 k allocations: 11.793 MiB, 8.59% gc time)
Running: radau_quadrature
  0.185827 seconds (203.78 k allocations: 11.788 MiB)
Running: rectangle_rule_left
  1.301627 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.031176 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.263861 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.180369 seconds (139.53 k allocations: 8.040 MiB)
Running: simpsons_rule
  0.030965 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.034877 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.027493 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.049210 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.281663 seconds (246.92 k allocations: 13.558 MiB, 8.26% gc time)
Running: chebyshev_quadrature with k=2
  0.238599 seconds (302.62 k allocations: 16.550 MiB)
Running: chebyshev_quadrature with k=3
  0.277918 seconds (282.39 k allocations: 14.972 MiB)
Running: chebyshev_quadrature with k=4
  0.286112 seconds (282.42 k allocations: 14.973 MiB, 7.57% gc time)
Running: hermite_quadrature with k=2
 16.937834 seconds (22.06 M allocations: 1.144 GiB, 8.83% gc time)
Running: jacobi_quadrature with α=β=1
  0.497208 seconds (475.17 k allocations: 50.409 MiB, 10.37% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.232867 seconds (287.89 k allocations: 15.869 MiB)
Running: legendre_quadrature
  0.173189 seconds (199.64 k allocations: 11.430 MiB)
Running: lobatto_quadrature
  0.259629 seconds (225.18 k allocations: 37.594 MiB, 14.45% gc time)
Running: radau_quadrature
  0.224072 seconds (221.78 k allocations: 30.264 MiB)
Running: rectangle_rule_left
  0.028898 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.028176 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.026533 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.203408 seconds (142.35 k allocations: 8.101 MiB, 13.15% gc time)
Running: simpsons_rule
  0.070335 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.058674 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.072676 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.047105 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.257250 seconds (242.05 k allocations: 13.325 MiB)
Running: chebyshev_quadrature with k=2
  0.357701 seconds (297.34 k allocations: 16.285 MiB)
Running: chebyshev_quadrature with k=3
  0.290281 seconds (277.25 k allocations: 14.742 MiB, 10.74% gc time)
Running: chebyshev_quadrature with k=4
  0.308955 seconds (277.29 k allocations: 14.743 MiB)
Running: hermite_quadrature with k=2
  0.171660 seconds (177.31 k allocations: 10.132 MiB)
Running: jacobi_quadrature with α=β=1
  9.301903 seconds (467.77 k allocations: 1.176 GiB, 12.05% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.211606 seconds (282.75 k allocations: 15.668 MiB)
Running: legendre_quadrature
  0.144959 seconds (194.81 k allocations: 11.205 MiB)
Running: lobatto_quadrature
  0.204720 seconds (215.54 k allocations: 23.306 MiB)
Running: radau_quadrature
  0.214665 seconds (214.69 k allocations: 21.241 MiB)
Running: rectangle_rule_left
  0.029429 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.029345 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.029933 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.147493 seconds (137.82 k allocations: 7.902 MiB)
Running: simpsons_rule
  0.056624 seconds (33.47 k allocations: 1.930 MiB, 40.16% gc time)
Running: simpsons38_rule
  0.038772 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.030604 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035313 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.281798 seconds (240.39 k allocations: 13.560 MiB)
Running: chebyshev_quadrature with k=2
  0.274468 seconds (295.58 k allocations: 16.625 MiB)
Running: chebyshev_quadrature with k=3
  0.261149 seconds (275.58 k allocations: 14.972 MiB, 10.31% gc time)
Running: chebyshev_quadrature with k=4
  0.224788 seconds (275.61 k allocations: 14.781 MiB)
Running: jacobi_quadrature with α=β=1
  1.667540 seconds (465.82 k allocations: 195.209 MiB, 7.51% gc time)
Running: legendre_quadrature
  0.217232 seconds (193.14 k allocations: 11.111 MiB)
Running: lobatto_quadrature
  0.219886 seconds (204.34 k allocations: 11.876 MiB)
Running: radau_quadrature
  0.217108 seconds (204.34 k allocations: 11.816 MiB)
Running: rectangle_rule_left
  0.305203 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.026193 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.115555 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.175144 seconds (150.88 k allocations: 8.790 MiB, 15.79% gc time)
Running: simpsons_rule
  0.032987 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.037977 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.027526 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036552 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.224995 seconds (240.95 k allocations: 13.492 MiB)
Running: chebyshev_quadrature with k=2
  0.278643 seconds (296.18 k allocations: 16.529 MiB, 7.48% gc time)
Running: chebyshev_quadrature with k=3
  0.260170 seconds (276.12 k allocations: 14.907 MiB)
Running: chebyshev_quadrature with k=4
  0.229379 seconds (276.15 k allocations: 14.962 MiB)
Running: jacobi_quadrature with α=β=1
  1.438757 seconds (466.48 k allocations: 149.902 MiB, 9.59% gc time)
Running: legendre_quadrature
  0.176492 seconds (193.72 k allocations: 11.142 MiB)
Running: lobatto_quadrature
  0.197662 seconds (204.92 k allocations: 11.831 MiB)
Running: radau_quadrature
  0.191402 seconds (204.91 k allocations: 11.848 MiB)
Running: rectangle_rule_left
  1.278257 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.034769 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.209211 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.171134 seconds (140.83 k allocations: 8.100 MiB)
Running: simpsons_rule
  0.040281 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.038403 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.021349 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.214842 seconds (152.73 k allocations: 9.080 MiB)
Running: chebyshev_quadrature with k=1
  0.152379 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.166819 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.165490 seconds (93.21 k allocations: 2.682 MiB)
Running: chebyshev_quadrature with k=4
  0.172821 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  2.122018 seconds (487.39 k allocations: 168.265 MiB, 15.12% gc time)
Running: legendre_quadrature
  0.113700 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000132 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000080 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.872008 seconds (590.00 M allocations: 8.792 GiB, 3.99% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.509009 seconds (592.75 M allocations: 8.833 GiB, 3.72% gc time)
Running: rombergs_method
  0.124577 seconds (21.09 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000054 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027645 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021780 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.196340 seconds (629.34 M allocations: 9.388 GiB, 5.28% gc time)
Running: chebyshev_quadrature with k=1
  0.543136 seconds (438.62 k allocations: 24.271 MiB, 6.05% gc time)
Running: chebyshev_quadrature with k=2
 13.563080 seconds (495.96 k allocations: 4.042 GiB, 3.90% gc time)
Running: chebyshev_quadrature with k=3
  6.324532 seconds (290.07 k allocations: 1.643 GiB, 4.73% gc time)
Running: chebyshev_quadrature with k=4
 10.982963 seconds (290.10 k allocations: 2.262 GiB, 2.56% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.572025 seconds (504.68 k allocations: 13.255 GiB, 3.03% gc time)
Running: legendre_quadrature.
  5.373363 seconds (232.46 k allocations: 1.976 GiB, 2.05% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.005244 seconds (8.24 M allocations: 13.384 GiB, 4.18% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.529004 seconds (7.24 M allocations: 13.369 GiB, 2.59% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.181779 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.017883 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.039362 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.272923 seconds (455.79 k allocations: 153.652 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.823227 seconds (600.04 M allocations: 8.943 GiB, 8.17% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.881000 seconds (600.05 M allocations: 8.944 GiB, 8.06% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.224323 seconds (600.04 M allocations: 8.943 GiB, 8.11% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.087977 seconds (182.49 k allocations: 4.515 MiB)
Running: chebyshev_quadrature with k=1
  0.284991 seconds (257.54 k allocations: 13.991 MiB)
Running: chebyshev_quadrature with k=2
  0.253103 seconds (283.70 k allocations: 15.181 MiB)
Running: chebyshev_quadrature with k=3
  0.210320 seconds (260.23 k allocations: 13.433 MiB)
Running: chebyshev_quadrature with k=4
  0.240108 seconds (260.26 k allocations: 13.427 MiB)
Running: jacobi_quadrature with α=β=1
  0.436823 seconds (404.81 k allocations: 35.823 MiB)
Running: laguerre_quadrature with k=2
  0.195968 seconds (187.56 k allocations: 10.850 MiB)
Running: legendre_quadrature
  0.147639 seconds (151.36 k allocations: 8.429 MiB)
Running: lobatto_quadrature
  0.036414 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.032445 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.059624 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.048141 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.054714 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.247621 seconds (178.32 k allocations: 10.177 MiB)
Running: simpsons_rule
  0.001904 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.061916 seconds (81.41 k allocations: 3.519 MiB)
Running: trapezoidal_rule
  0.242853 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001771 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.123277 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.116674 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.126537 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.115112 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  7.334960 seconds (401.65 k allocations: 906.506 MiB, 5.31% gc time)
Running: legendre_quadrature
  0.074514 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000230 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000127 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.596266 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000428 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.470809 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.072598 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000898 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000732 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.123962 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.129627 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.137821 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.135301 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.017144 seconds (387.93 k allocations: 253.730 MiB)
Running: legendre_quadrature
  0.069250 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000123 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000087 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.197131 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001307 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.006425 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078022 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000169 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001825 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
