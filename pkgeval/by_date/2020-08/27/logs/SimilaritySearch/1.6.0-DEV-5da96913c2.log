Julia Version 1.6.0-DEV.733
Commit 5da96913c2 (2020-08-26 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.18.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Compat ───────────── v3.14.0
  Installed JSON ─────────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_6qXVC9/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_6qXVC9/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(33, 0.0022764206f0), Item(27, 0.03713584f0), Item(19, 0.038754225f0), Item(44, 0.053587794f0)])
Vsorted = Item[Item(33, 0.0022764206f0), Item(27, 0.03713584f0), Item(19, 0.038754225f0), Item(44, 0.053587794f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0034634669621785483, 0.0036101341247558594, 301.0, 49.106920436024666))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003164490063985189, 0.003541262944539388, 301.0, 71.25110018253326))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033866087595621746, 0.00362096627553304, 301.0, 39.786157846450806))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032610416412353514, 0.0036676963170369464, 301.0, 8.991068399511278))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003166333834330241, 0.00393216609954834, 301.0, 44.38224086165428))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017255147298177084, 0.0001443624496459961, 301.0, 176.03248152136803))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.917549133300781e-5, 0.008819301923116049, 300.0, 27.524641735013574)
p = PerformanceResult(1.0, 1.0, 1.0, 3.6215782165527345e-5, 1.853307088216146e-5, 300.0, 27.524641735013574)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0030550003051757813, 0.002638832728068034, 300.0, 1.6817501724108297)
p = PerformanceResult(1.0, 1.0, 1.0, 4.604657491048177e-5, 2.055962880452474e-5, 300.0, 1.6817501724108297)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.917549133300781e-5, 0.008819301923116049, 300.0, 27.524641735013574), PerformanceResult(1.0, 1.0, 1.0, 3.6215782165527345e-5, 1.853307088216146e-5, 300.0, 27.524641735013574), PerformanceResult(1.0, 1.0, 1.0, 0.0030550003051757813, 0.002638832728068034, 300.0, 1.6817501724108297), PerformanceResult(1.0, 1.0, 1.0, 4.604657491048177e-5, 2.055962880452474e-5, 300.0, 1.6817501724108297))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 128.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008202775319417318, 0.004069368044535319, 347.7, 28735.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.004753629366556804, 0.0029306650161743165, 304.1, 6969.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3047129313151043e-5, 7.534027099609375e-6, 90.86666666666666, 49.12454967200756))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.266565958658854e-5, 1.320044199625651e-5, 84.13333333333334, 71.25110018253326))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.629988352457682e-5, 2.9007593790690105e-5, 87.23333333333333, 39.81605136394501))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.9908955891927086e-5, 0.00011326471964518229, 91.03333333333333, 44.42724344134331))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.83, 0.83, 0.83, 3.3060709635416664e-5, 9.15368398030599e-5, 71.9, 184.85142195224762))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-27T18:28:21.819
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9165000000000001, 0.915, 0.9156666666666667, 1.7056465148925783e-5, 1.336812973022461e-5, 154.23, 48.93429537350312))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.677274703979492e-5, 1.0809898376464845e-5, 158.15, 0.0))
*** advance 1 from 1000; 2020-08-27T18:28:22.348
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9276666666666665, 0.9269999999999997, 0.9273157894736841, 2.4843215942382813e-5, 2.5548934936523437e-5, 154.59, 72.65138146653771))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.424478530883789e-5, 2.048969268798828e-5, 158.47, 0.0))
*** advance 1 from 1000; 2020-08-27T18:28:23.005
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8990000000000002, 0.8990000000000002, 0.8990000000000002, 2.609729766845703e-5, 3.292083740234375e-5, 155.75, 39.68198901694268))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6121139526367188e-5, 3.0469894409179687e-5, 159.75, 0.0))
*** advance 1 from 1000; 2020-08-27T18:28:23.680
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9050000000000005, 0.9050000000000005, 0.9050000000000005, 7.22336769104004e-5, 0.00039594173431396485, 153.89, 43.9481187784113))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.240056991577149e-5, 0.0005830693244934082, 157.69, 0.0))
*** advance 1 from 1000; 2020-08-27T18:28:24.141
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8890000000000003, 0.8890000000000003, 0.8890000000000003, 9.62233543395996e-5, 0.00032133102416992187, 154.12, 194.13932860828936))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 5.9762001037597655e-5, 0.0004951977729797364, 158.01, 0.0))
*** advance 1 from 1000; 2020-08-27T18:28:24.962
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9165000000000001, 0.915, 0.9156666666666667, 2.2165775299072265e-5, 4.3709278106689456e-5, 154.23, 48.94353070645593))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2139549255371094e-5, 4.266977310180664e-5, 158.15, 0.015047055727336556))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:26.491
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7290000000000002, 0.7290000000000002, 0.7290000000000003, 0.0016128897666931152, 8.041143417358398e-5, 198.76, 194.9166690558195))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:27.437
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7280000000000002, 0.7280000000000002, 0.7280000000000002, 0.0015663671493530273, 8.249998092651367e-5, 200.74, 111.9174622669816))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:28.275
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6250000000000001, 0.6250000000000001, 0.6250000000000001, 0.0015597295761108397, 8.44407081604004e-5, 276.04, 4.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:29.130
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9630000000000003, 0.9630000000000003, 0.9630000000000003, 0.0010057950019836425, 1.1968612670898438e-5, 226.83, 603.6000204086304))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:29.810
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.612, 0.612, 0.612, 0.0017033624649047852, 0.0003054690361022949, 251.19, 2311.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:30.724
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.42500000000000016, 0.42500000000000016, NaN, 0.0017284178733825684, 0.000534048080444336, 242.76, 3634.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-27T18:28:31.732
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6270000000000002, 0.6270000000000002, 0.6270000000000002, 0.0017433619499206542, 2.719879150390625e-5, 249.5, 2330.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0539798719121682, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967954441391942,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.5390625,"distances_sum":481.86313186585903}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0539798719121682,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.967954441391942,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.5390625,"distances_sum":481.86313186585903}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0816901408450703, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9529990842490844,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.3203125,"distances_sum":464.31633184850216}, best_list's length: 5, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0676552363299354, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600331959706964,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.4296875,"distances_sum":471.94713039696217}, best_list's length: 6, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.063711911357341, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622424450549453,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.4609375,"distances_sum":472.660842910409}, best_list's length: 7, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0816901408450703,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9529990842490844,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.3203125,"distances_sum":464.31633184850216}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0816901408450703,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9529990842490844,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.3203125,"distances_sum":464.31633184850216}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0816901408450703,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9529990842490844,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":2.1960586309432983e-6,"evaluations":8.3203125,"distances_sum":464.31633184850216}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.98434074538052, conf: {"restarts":8}, perf: {"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.0857900381088257e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":49.890625,"distances_sum":279.4074661657214}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666657, conf: {"restarts":2}, perf: {"precision":0.8619791666666657,"recall":0.8619791666666657,"f1":0.8619791666666657,"seconds":1.4280900359153748e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":32.9140625,"distances_sum":283.82481491565704}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.883680555555555, conf: {"restarts":9}, perf: {"precision":0.883680555555555,"recall":0.883680555555555,"f1":0.883680555555555,"seconds":1.7194077372550964e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":51.703125,"distances_sum":281.53736820071936}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.98434074538052,"state":{"restarts":8},"perf":{"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.0857900381088257e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":49.890625,"distances_sum":279.4074661657214}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.1821939039090754, conf: {"restarts":6}, perf: {"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.5601515769958496e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":45.3671875,"distances_sum":281.9167739376426}, best_list's length: 10, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1821939039090754,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.5601515769958496e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":45.3671875,"distances_sum":281.9167739376426}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1821939039090754,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.5601515769958496e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":45.3671875,"distances_sum":281.9167739376426}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.1821939039090754,"state":{"restarts":6},"perf":{"precision":0.901041666666666,"recall":0.901041666666666,"f1":0.901041666666666,"seconds":1.5601515769958496e-5,"exhaustive_search_seconds":6.359070539474487e-6,"evaluations":45.3671875,"distances_sum":281.9167739376426}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333321, conf: {"restarts":10}, perf: {"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":3.596954047679901e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":129.7265625,"distances_sum":128.6745567228645}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444433, conf: {"restarts":5}, perf: {"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":2.8021633625030518e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":92.140625,"distances_sum":130.0012302044779}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888876, conf: {"restarts":12}, perf: {"precision":0.8654513888888876,"recall":0.8654513888888876,"f1":0.8654513888888876,"seconds":3.839842975139618e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":138.6875,"distances_sum":128.34936614520848}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8654513888888876,"state":{"restarts":12},"perf":{"precision":0.8654513888888876,"recall":0.8654513888888876,"f1":0.8654513888888876,"seconds":3.839842975139618e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":138.6875,"distances_sum":128.34936614520848}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222213, conf: {"restarts":18}, perf: {"precision":0.8706597222222213,"recall":0.8706597222222213,"f1":0.8706597222222213,"seconds":4.84175980091095e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":172.171875,"distances_sum":127.45822423510253}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666655, conf: {"restarts":17}, perf: {"precision":0.8854166666666655,"recall":0.8854166666666655,"f1":0.8854166666666655,"seconds":4.457496106624603e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":170.546875,"distances_sum":127.97314964421093}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111097, conf: {"restarts":20}, perf: {"precision":0.8689236111111097,"recall":0.8689236111111097,"f1":0.8689236111111097,"seconds":8.020177483558655e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":185.5078125,"distances_sum":128.0687259938568}, best_list's length: 10, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8854166666666655,"state":{"restarts":17},"perf":{"precision":0.8854166666666655,"recall":0.8854166666666655,"f1":0.8854166666666655,"seconds":4.457496106624603e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":170.546875,"distances_sum":127.97314964421093}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8854166666666655,"state":{"restarts":17},"perf":{"precision":0.8854166666666655,"recall":0.8854166666666655,"f1":0.8854166666666655,"seconds":4.457496106624603e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":170.546875,"distances_sum":127.97314964421093}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8854166666666655,"state":{"restarts":17},"perf":{"precision":0.8854166666666655,"recall":0.8854166666666655,"f1":0.8854166666666655,"seconds":4.457496106624603e-5,"exhaustive_search_seconds":1.5897676348686218e-5,"evaluations":170.546875,"distances_sum":127.97314964421093}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222211, conf: {"restarts":12}, perf: {"precision":0.8472222222222211,"recall":0.8472222222222211,"f1":0.8472222222222211,"seconds":7.982738316059113e-5,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":221.7421875,"distances_sum":57.1521020969376}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555544, conf: {"restarts":30}, perf: {"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":0.00012777000665664673,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":379.890625,"distances_sum":56.71516827214509}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444433, conf: {"restarts":5}, perf: {"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":6.31529837846756e-5,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":164.7890625,"distances_sum":56.9158108541742}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555544,"state":{"restarts":30},"perf":{"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":0.00012777000665664673,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":379.890625,"distances_sum":56.71516827214509}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555544,"state":{"restarts":30},"perf":{"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":0.00012777000665664673,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":379.890625,"distances_sum":56.71516827214509}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8680555555555544,"state":{"restarts":30},"perf":{"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":0.00012777000665664673,"exhaustive_search_seconds":0.00022878125309944153,"evaluations":379.890625,"distances_sum":56.71516827214509}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(30), SatNeighborhood(32), 2020-08-27T18:28:38.526
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5637, 0.046506677f0), Item(603, 0.067017674f0), Item(378, 0.06950972f0), Item(9517, 0.06955622f0), Item(726, 0.07033992f0), Item(2606, 0.07595801f0), Item(8247, 0.07700571f0), Item(1374, 0.07981285f0), Item(3798, 0.080544576f0), Item(994, 0.10213367f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9378286643911646,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.234375,"distances_sum":462.1599739715457}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9378286643911646,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.234375,"distances_sum":462.1599739715457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9378286643911646,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.234375,"distances_sum":462.1599739715457}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9378286643911646,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.234375,"distances_sum":462.1599739715457}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.1288888888888895, conf: {"bsize":3}, perf: {"precision":0.9678819444444439,"recall":0.9678819444444439,"f1":0.9678819444444439,"seconds":1.5651807188987732e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":31.640625,"distances_sum":296.83520909398794}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1288888888888895,"state":{"bsize":3},"perf":{"precision":0.9678819444444439,"recall":0.9678819444444439,"f1":0.9678819444444439,"seconds":1.5651807188987732e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":31.640625,"distances_sum":296.83520909398794}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.267663744198041, conf: {"bsize":2}, perf: {"precision":0.9322916666666659,"recall":0.9322916666666659,"f1":0.9322916666666659,"seconds":1.4564022421836853e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":30.296875,"distances_sum":300.1561222448945}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.267663744198041,"state":{"bsize":2},"perf":{"precision":0.9322916666666659,"recall":0.9322916666666659,"f1":0.9322916666666659,"seconds":1.4564022421836853e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":30.296875,"distances_sum":300.1561222448945}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.267663744198041,"state":{"bsize":2},"perf":{"precision":0.9322916666666659,"recall":0.9322916666666659,"f1":0.9322916666666659,"seconds":1.4564022421836853e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":30.296875,"distances_sum":300.1561222448945}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.267663744198041,"state":{"bsize":2},"perf":{"precision":0.9322916666666659,"recall":0.9322916666666659,"f1":0.9322916666666659,"seconds":1.4564022421836853e-5,"exhaustive_search_seconds":6.459653377532959e-6,"evaluations":30.296875,"distances_sum":300.1561222448945}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.512396694214875, conf: {"bsize":4}, perf: {"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":3.055855631828308e-5,"exhaustive_search_seconds":2.728961408138275e-5,"evaluations":60.5,"distances_sum":123.20888960454613}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.512396694214875,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":3.055855631828308e-5,"exhaustive_search_seconds":2.728961408138275e-5,"evaluations":60.5,"distances_sum":123.20888960454613}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.512396694214875,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":3.055855631828308e-5,"exhaustive_search_seconds":2.728961408138275e-5,"evaluations":60.5,"distances_sum":123.20888960454613}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.512396694214875,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":3.055855631828308e-5,"exhaustive_search_seconds":2.728961408138275e-5,"evaluations":60.5,"distances_sum":123.20888960454613}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.62562929061785, conf: {"bsize":7}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.673376679420471e-5,"exhaustive_search_seconds":0.00031382031738758087,"evaluations":102.421875,"distances_sum":52.66793508594856}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.10713201820941, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.491955041885376e-5,"exhaustive_search_seconds":0.00031382031738758087,"evaluations":102.96875,"distances_sum":52.66793508594856}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.62562929061785,"state":{"bsize":7},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.673376679420471e-5,"exhaustive_search_seconds":0.00031382031738758087,"evaluations":102.421875,"distances_sum":52.66793508594856}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.62562929061785,"state":{"bsize":7},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.673376679420471e-5,"exhaustive_search_seconds":0.00031382031738758087,"evaluations":102.421875,"distances_sum":52.66793508594856}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.62562929061785,"state":{"bsize":7},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.673376679420471e-5,"exhaustive_search_seconds":0.00031382031738758087,"evaluations":102.421875,"distances_sum":52.66793508594856}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(7), SatNeighborhood(32), 2020-08-27T18:28:41.696
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9593, 0.030910399f0), Item(5540, 0.033428058f0), Item(6227, 0.03555623f0), Item(3100, 0.042977273f0), Item(2892, 0.051385943f0), Item(8572, 0.05446258f0), Item(8454, 0.056648176f0), Item(7436, 0.057233635f0), Item(6608, 0.063691236f0), Item(9914, 0.06374957f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
