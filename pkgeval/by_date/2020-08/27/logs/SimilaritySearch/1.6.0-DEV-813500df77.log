Julia Version 1.6.0-DEV.740
Commit 813500df77 (2020-08-27 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.18.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Compat ───────────── v3.14.0
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_GJTcti/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_GJTcti/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(27, 0.009914875f0), Item(26, 0.02229619f0), Item(34, 0.02376926f0), Item(32, 0.031004071f0)])
Vsorted = Item[Item(27, 0.009914875f0), Item(26, 0.02229619f0), Item(34, 0.02376926f0), Item(32, 0.031004071f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004394038518269857, 0.0047410329182942705, 301.0, 50.8515894562006))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004880372683207194, 0.006950600941975912, 301.0, 74.74245977401733))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00431830088297526, 0.004955466588338216, 301.0, 41.335193514823914))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039853334426879885, 0.004646698633829753, 301.0, 9.529552501393482))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004017853736877441, 0.00567320187886556, 301.0, 45.91524097323418))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015724500020345051, 0.0001322031021118164, 301.0, 184.9170733243227))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.256103515625e-5, 0.012651936213175455, 300.0, 25.89636637107469)
p = PerformanceResult(1.0, 1.0, 1.0, 6.44842783610026e-5, 2.9834111531575522e-5, 300.0, 25.89636637107469)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00412143071492513, 0.003743433952331543, 300.0, 1.315840953631323)
p = PerformanceResult(1.0, 1.0, 1.0, 5.155934227837457e-5, 2.3372968037923177e-5, 300.0, 1.315840953631323)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.256103515625e-5, 0.012651936213175455, 300.0, 25.89636637107469), PerformanceResult(1.0, 1.0, 1.0, 6.44842783610026e-5, 2.9834111531575522e-5, 300.0, 25.89636637107469), PerformanceResult(1.0, 1.0, 1.0, 0.00412143071492513, 0.003743433952331543, 300.0, 1.315840953631323), PerformanceResult(1.0, 1.0, 1.0, 5.155934227837457e-5, 2.3372968037923177e-5, 300.0, 1.315840953631323))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007834569613138834, 0.003951366742451986, 347.6666666666667, 28705.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007650907834370931, 0.003652199109395345, 302.26666666666665, 6931.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3142496744791666e-5, 1.316070556640625e-5, 91.3, 50.88398488610983))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.342859903971354e-5, 1.1698404947916667e-5, 82.83333333333333, 74.88840508460999))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 7.178783416748047e-5, 1.6530354817708332e-5, 84.93333333333334, 41.3730605840683))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.608731587727864e-5, 0.0001618067423502604, 91.16666666666667, 45.93951942026615))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8099999999999999, 0.8099999999999999, 0.8099999999999999, 5.458196004231771e-5, 0.00014443397521972655, 68.53333333333333, 195.16900293529034))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-28T02:10:56.109
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9180000000000003, 0.9180000000000003, 0.9180000000000003, 2.245664596557617e-5, 2.4468898773193358e-5, 154.23, 48.23501384793781))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.180337905883789e-5, 1.8341541290283205e-5, 158.1, 0.0))
*** advance 1 from 1000; 2020-08-28T02:10:56.823
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8978888888888891, 0.8970000000000001, 0.8974210526315792, 2.2132396697998046e-5, 2.4259090423583984e-5, 152.46, 73.08556974073872))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.215147018432617e-5, 1.9659996032714842e-5, 156.09, 0.0))
*** advance 1 from 1000; 2020-08-28T02:10:57.553
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8935555555555557, 0.892, 0.8927368421052633, 4.493236541748047e-5, 4.2829513549804684e-5, 154.77, 39.58293858496472))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5427341461181642e-5, 3.399848937988281e-5, 158.66, 0.0))
*** advance 1 from 1000; 2020-08-28T02:10:58.445
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9099999999999998, 0.9099999999999998, 0.9099999999999998, 0.00010123014450073242, 0.0005119585990905762, 153.98, 43.52834664552938))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010245561599731446, 0.0005380797386169433, 157.81, 0.0))
*** advance 1 from 1000; 2020-08-28T02:10:59.018
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.884, 0.884, 0.884, 8.546590805053712e-5, 0.0004039692878723144, 151.9, 192.8044043420814))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.752107620239257e-5, 0.0004325103759765625, 155.58, 0.0))
*** advance 1 from 1000; 2020-08-28T02:11:00.240
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9180000000000003, 0.9180000000000003, 0.9180000000000003, 3.4880638122558596e-5, 7.316112518310547e-5, 154.23, 48.24347017146647))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.58271598815918e-5, 7.062911987304688e-5, 158.1, 0.016368885204428807))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:02.178
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7639999999999998, 0.7639999999999998, 0.7639999999999998, 0.001639888286590576, 8.635044097900391e-5, 198.48, 190.23333564400673))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:03.364
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.765, 0.765, 0.765, 0.0015979743003845216, 7.155895233154297e-5, 202.03, 109.18492264300585))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:04.223
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6419999999999999, 0.6419999999999999, 0.6419999999999999, 0.0016783308982849122, 7.069826126098632e-5, 267.19, 1.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:05.215
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9580000000000003, 0.9580000000000003, 0.9580000000000003, 0.0020041537284851076, 2.9339790344238282e-5, 221.9, 601.8000204265118))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:06.468
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.597, 0.597, 0.597, 0.0023819303512573244, 0.0005027890205383301, 254.17, 2328.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:07.747
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.43800000000000006, 0.43800000000000006, 0.43800000000000006, 0.0018201947212219238, 0.0004156208038330078, 247.37, 3618.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-28T02:11:08.791
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6249999999999999, 0.6249999999999999, 0.6249999999999999, 0.0015393209457397461, 3.261089324951172e-5, 247.35, 2349.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0656799259944494, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216123,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.4453125,"distances_sum":658.5549699142575}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0588235294117645, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9659054487179493,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.5,"distances_sum":663.3736924603581}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0656799259944494,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216123,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.4453125,"distances_sum":658.5549699142575}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.089877010406812, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9485347985347992,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.2578125,"distances_sum":636.0325337722898}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.089877010406812,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9485347985347992,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.2578125,"distances_sum":636.0325337722898}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.089877010406812,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9485347985347992,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.2578125,"distances_sum":636.0325337722898}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.089877010406812,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9485347985347992,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":2.3208558559417725e-6,"evaluations":8.2578125,"distances_sum":636.0325337722898}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.834129396439427, conf: {"restarts":9}, perf: {"precision":0.91579861111111,"recall":0.91579861111111,"f1":0.91579861111111,"seconds":2.3113563656806946e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":53.9765625,"distances_sum":282.3204886056483}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.834129396439427,"state":{"restarts":9},"perf":{"precision":0.91579861111111,"recall":0.91579861111111,"f1":0.91579861111111,"seconds":2.3113563656806946e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":53.9765625,"distances_sum":282.3204886056483}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.024604569420035, conf: {"restarts":7}, perf: {"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":2.3614615201950073e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":48.8984375,"distances_sum":281.93842055276036}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.369483919222139, conf: {"restarts":4}, perf: {"precision":0.9010416666666654,"recall":0.9010416666666654,"f1":0.9010416666666654,"seconds":2.000480890274048e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":41.78125,"distances_sum":282.4389057941735}, best_list's length: 10, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.905850503835163, conf: {"restarts":8}, perf: {"precision":0.9236111111111098,"recall":0.9236111111111098,"f1":0.9236111111111098,"seconds":2.5913119316101074e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":51.9453125,"distances_sum":281.2948476411402}, best_list's length: 11, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0811299063885698, conf: {"restarts":6}, perf: {"precision":0.9123263888888878,"recall":0.9123263888888878,"f1":0.9123263888888878,"seconds":2.382136881351471e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":47.5703125,"distances_sum":281.2986310906708}, best_list's length: 12, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.2045929018789145, conf: {"restarts":5}, perf: {"precision":0.9175347222222212,"recall":0.9175347222222212,"f1":0.9175347222222212,"seconds":2.2942200303077698e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":44.90625,"distances_sum":281.55536422505975}, best_list's length: 13, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.369483919222139,"state":{"restarts":4},"perf":{"precision":0.9010416666666654,"recall":0.9010416666666654,"f1":0.9010416666666654,"seconds":2.000480890274048e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":41.78125,"distances_sum":282.4389057941735}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.369483919222139,"state":{"restarts":4},"perf":{"precision":0.9010416666666654,"recall":0.9010416666666654,"f1":0.9010416666666654,"seconds":2.000480890274048e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":41.78125,"distances_sum":282.4389057941735}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.369483919222139,"state":{"restarts":4},"perf":{"precision":0.9010416666666654,"recall":0.9010416666666654,"f1":0.9010416666666654,"seconds":2.000480890274048e-5,"exhaustive_search_seconds":7.061287760734558e-6,"evaluations":41.78125,"distances_sum":282.4389057941735}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999987, conf: {"restarts":13}, perf: {"precision":0.8749999999999987,"recall":0.8749999999999987,"f1":0.8749999999999987,"seconds":6.441399455070496e-5,"exhaustive_search_seconds":3.1149014830589294e-5,"evaluations":147.8359375,"distances_sum":125.00326922908425}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555539, conf: {"restarts":7}, perf: {"precision":0.8680555555555539,"recall":0.8680555555555539,"f1":0.8680555555555539,"seconds":5.1641836762428284e-5,"exhaustive_search_seconds":3.1149014830589294e-5,"evaluations":107.1953125,"distances_sum":125.03439945355058}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999987,"state":{"restarts":13},"perf":{"precision":0.8749999999999987,"recall":0.8749999999999987,"f1":0.8749999999999987,"seconds":6.441399455070496e-5,"exhaustive_search_seconds":3.1149014830589294e-5,"evaluations":147.8359375,"distances_sum":125.00326922908425}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8749999999999987,"state":{"restarts":13},"perf":{"precision":0.8749999999999987,"recall":0.8749999999999987,"f1":0.8749999999999987,"seconds":6.441399455070496e-5,"exhaustive_search_seconds":3.1149014830589294e-5,"evaluations":147.8359375,"distances_sum":125.00326922908425}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999987,"state":{"restarts":13},"perf":{"precision":0.8593749999999987,"recall":0.8593749999999987,"f1":0.8593749999999987,"seconds":0.00012822076678276062,"exhaustive_search_seconds":0.0003811083734035492,"evaluations":240.859375,"distances_sum":56.58362441067584}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8593749999999987,"state":{"restarts":13},"perf":{"precision":0.8593749999999987,"recall":0.8593749999999987,"f1":0.8593749999999987,"seconds":0.00012822076678276062,"exhaustive_search_seconds":0.0003811083734035492,"evaluations":240.859375,"distances_sum":56.58362441067584}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(13), SatNeighborhood(32), 2020-08-28T02:11:16.821
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5551, 0.03289408f0), Item(1450, 0.03324885f0), Item(306, 0.04116381f0), Item(263, 0.048925936f0), Item(1712, 0.054118834f0), Item(48, 0.05464296f0), Item(2427, 0.06466637f0), Item(7633, 0.06476079f0), Item(6874, 0.0711802f0), Item(3673, 0.0730324f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0676552363299354, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590029761904767,"seconds":7.277354598045349e-6,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.4296875,"distances_sum":646.276537232101}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0786516853932584, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9520318223443226,"seconds":6.8284571170806885e-6,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.34375,"distances_sum":640.9853745624423}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0786516853932584,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9520318223443226,"seconds":6.8284571170806885e-6,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.34375,"distances_sum":640.9853745624423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0786516853932584,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9520318223443226,"seconds":6.8284571170806885e-6,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.34375,"distances_sum":640.9853745624423}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0786516853932584,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9520318223443226,"seconds":6.8284571170806885e-6,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.34375,"distances_sum":640.9853745624423}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.933333333333333, conf: {"bsize":3}, perf: {"precision":0.9756944444444442,"recall":0.9756944444444442,"f1":0.9756944444444442,"seconds":1.5910714864730835e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":33.75,"distances_sum":295.72850316390395}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.933333333333333,"state":{"bsize":3},"perf":{"precision":0.9756944444444442,"recall":0.9756944444444442,"f1":0.9756944444444442,"seconds":1.5910714864730835e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":33.75,"distances_sum":295.72850316390395}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.041036717062635, conf: {"bsize":2}, perf: {"precision":0.9513888888888882,"recall":0.9513888888888882,"f1":0.9513888888888882,"seconds":1.554936170578003e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":32.5546875,"distances_sum":298.24630343541503}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.041036717062635,"state":{"bsize":2},"perf":{"precision":0.9513888888888882,"recall":0.9513888888888882,"f1":0.9513888888888882,"seconds":1.554936170578003e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":32.5546875,"distances_sum":298.24630343541503}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.041036717062635,"state":{"bsize":2},"perf":{"precision":0.9513888888888882,"recall":0.9513888888888882,"f1":0.9513888888888882,"seconds":1.554936170578003e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":32.5546875,"distances_sum":298.24630343541503}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.041036717062635,"state":{"bsize":2},"perf":{"precision":0.9513888888888882,"recall":0.9513888888888882,"f1":0.9513888888888882,"seconds":1.554936170578003e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":32.5546875,"distances_sum":298.24630343541503}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.229470745018403, conf: {"bsize":4}, perf: {"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":2.9940158128738403e-5,"exhaustive_search_seconds":2.7710571885108948e-5,"evaluations":61.5546875,"distances_sum":123.12221862841398}, best_list's length: 5, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.229470745018403,"state":{"bsize":4},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":2.9940158128738403e-5,"exhaustive_search_seconds":2.7710571885108948e-5,"evaluations":61.5546875,"distances_sum":123.12221862841398}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.229470745018403,"state":{"bsize":4},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":2.9940158128738403e-5,"exhaustive_search_seconds":2.7710571885108948e-5,"evaluations":61.5546875,"distances_sum":123.12221862841398}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.229470745018403,"state":{"bsize":4},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":2.9940158128738403e-5,"exhaustive_search_seconds":2.7710571885108948e-5,"evaluations":61.5546875,"distances_sum":123.12221862841398}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":94.72231985940246,"state":{"bsize":4},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":0.00028629228472709656,"exhaustive_search_seconds":0.0007543899118900299,"evaluations":106.6875,"distances_sum":54.757265963125974}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":94.72231985940246,"state":{"bsize":4},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":0.00028629228472709656,"exhaustive_search_seconds":0.0007543899118900299,"evaluations":106.6875,"distances_sum":54.757265963125974}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(4), SatNeighborhood(32), 2020-08-28T02:11:21.020
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3876, 0.030908031f0), Item(2626, 0.0334428f0), Item(9111, 0.043365877f0), Item(6119, 0.05629701f0), Item(8298, 0.06303299f0), Item(9377, 0.064976394f0), Item(9486, 0.06532373f0), Item(2075, 0.066701144f0), Item(7649, 0.067301735f0), Item(6790, 0.06914727f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
