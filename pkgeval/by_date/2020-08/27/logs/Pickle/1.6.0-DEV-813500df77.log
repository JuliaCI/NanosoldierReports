Julia Version 1.6.0-DEV.740
Commit 813500df77 (2020-08-27 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed InternedStrings ──── v0.7.0
  Installed Zlib_jll ─────────── v1.2.11+16
  Installed TupleTools ───────── v1.2.0
  Installed ZipFile ──────────── v0.9.2
  Installed Strided ──────────── v1.0.1
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed Pickle ───────────── v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [fbb45041] + Pickle v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [864edb3b] + DataStructures v0.17.20
  [7d512f48] + InternedStrings v0.7.0
  [bac558e1] + OrderedCollections v1.3.0
  [fbb45041] + Pickle v0.2.0
  [5e0ebb24] + Strided v1.0.1
  [9d95972d] + TupleTools v1.2.0
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Pickle
Status `/tmp/jl_UOXzDI/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [e30172f5] Documenter v0.25.2
  [7d512f48] InternedStrings v0.7.0
  [fbb45041] Pickle v0.2.0
  [438e738f] PyCall v1.91.4
  [5e0ebb24] Strided v1.0.1
  [a5390f91] ZipFile v0.9.2
  [9e88b42a] Serialization
  [8dfed614] Test
Status `/tmp/jl_UOXzDI/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [864edb3b] DataStructures v0.17.20
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [7d512f48] InternedStrings v0.7.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [fbb45041] Pickle v0.2.0
  [438e738f] PyCall v1.91.4
  [5e0ebb24] Strided v1.0.1
  [9d95972d] TupleTools v1.2.0
  [81def892] VersionParsing v1.2.0
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
ERROR: LoadError: LoadError: PyError (PyImport_ImportModule

The Python package torch could not be found by pyimport. Usually this means
that you did not install torch in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the torch module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the torch module, you can use `pyimport_conda("torch", PKG)`,
where PKG is the Anaconda package the contains the module torch,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'torch'",)

Stacktrace:
 [1] pyimport(name::String)
   @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
 [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
   @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
 [3] pyimport_conda(modulename::String, condapkg::String)
   @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:693
 [4] top-level scope
   @ ~/.julia/packages/Pickle/Njhfn/test/torch/thscript.jl:1
 [5] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [6] top-level scope
   @ ~/.julia/packages/Pickle/Njhfn/test/runtests.jl:6
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [8] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/Pickle/Njhfn/test/torch/thscript.jl:1
in expression starting at /home/pkgeval/.julia/packages/Pickle/Njhfn/test/runtests.jl:6
ERROR: Package Pickle errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
