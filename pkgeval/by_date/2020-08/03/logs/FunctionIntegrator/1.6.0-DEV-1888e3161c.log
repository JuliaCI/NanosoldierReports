Julia Version 1.6.0-DEV.572
Commit 1888e3161c (2020-08-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_qlAazM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_qlAazM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.948340 seconds (1.37 M allocations: 72.847 MiB, 3.46% gc time)
Running: chebyshev_quadrature with k=1
  1.938398 seconds (2.24 M allocations: 128.750 MiB, 2.62% gc time)
Running: chebyshev_quadrature with k=2
  0.326646 seconds (425.06 k allocations: 24.385 MiB)
Running: chebyshev_quadrature with k=3
  0.443955 seconds (544.94 k allocations: 29.877 MiB, 14.49% gc time)
Running: chebyshev_quadrature with k=4
  0.310762 seconds (487.81 k allocations: 26.412 MiB)
Running: jacobi_quadrature with α=β=1
 41.977508 seconds (39.39 M allocations: 3.138 GiB, 12.27% gc time)
Running: laguerre_quadrature with k=1
  3.068066 seconds (3.33 M allocations: 185.518 MiB, 2.96% gc time)
Running: legendre_quadrature
  0.246056 seconds (215.06 k allocations: 12.311 MiB, 19.59% gc time)
Running: lobatto_quadrature
  0.472276 seconds (343.64 k allocations: 20.593 MiB)
Running: radau_quadrature
  0.391399 seconds (325.98 k allocations: 19.583 MiB, 9.45% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.862104 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.159765 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.840991 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.549165 seconds (752.72 k allocations: 43.378 MiB, 6.17% gc time)
Running: simpsons_rule
  0.039937 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.093560 seconds (113.26 k allocations: 5.987 MiB)
Running: trapezoidal_rule
  0.287238 seconds (1.52 M allocations: 25.809 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.092217 seconds (32.63 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.423652 seconds (276.01 k allocations: 14.001 MiB)
Running: chebyshev_quadrature with k=2
  0.147344 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.145211 seconds (105.23 k allocations: 3.649 MiB)
Running: chebyshev_quadrature with k=4
  0.142602 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  1.862505 seconds (536.34 k allocations: 163.510 MiB, 11.24% gc time)
Running: legendre_quadrature
  0.161963 seconds (62.41 k allocations: 3.482 MiB)
Running: lobatto_quadrature
  0.020414 seconds (16.74 k allocations: 1.032 MiB)
Running: radau_quadrature
  0.020878 seconds (16.72 k allocations: 1.032 MiB)
Running: rectangle_rule_left
 31.314018 seconds (471.41 M allocations: 7.025 GiB, 2.27% gc time)
Running: rectangle_rule_midpoint
  0.000043 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.910116 seconds (476.96 M allocations: 7.107 GiB, 2.21% gc time)
Running: rombergs_method
  0.414152 seconds (360.38 k allocations: 20.320 MiB, 2.41% gc time)
Running: simpsons_rule
  0.000045 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064893 seconds (19.90 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.063181 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031760 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.104578 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.107458 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.115527 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.105711 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.383006 seconds (379.00 k allocations: 19.814 MiB, 16.78% gc time)
Running: legendre_quadrature
  0.056838 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000145 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000041 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000511 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000357 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000524 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.064110 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000036 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023885 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.019862 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065080 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.186794 seconds (240.26 k allocations: 13.488 MiB)
Running: chebyshev_quadrature with k=2
  0.214464 seconds (295.46 k allocations: 16.575 MiB)
Running: chebyshev_quadrature with k=3
  0.204560 seconds (275.42 k allocations: 14.968 MiB)
Running: chebyshev_quadrature with k=4
  0.199302 seconds (275.45 k allocations: 14.907 MiB)
Running: jacobi_quadrature with α=β=1
  2.431039 seconds (465.77 k allocations: 164.201 MiB, 11.73% gc time)
Running: legendre_quadrature
  0.145483 seconds (193.01 k allocations: 11.105 MiB)
Running: lobatto_quadrature
  0.186673 seconds (204.22 k allocations: 11.829 MiB)
Running: radau_quadrature
  0.241634 seconds (204.21 k allocations: 11.812 MiB, 11.45% gc time)
Running: rectangle_rule_left
  1.433065 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027783 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.355160 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.139492 seconds (139.92 k allocations: 8.064 MiB)
Running: simpsons_rule
  0.030886 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.036823 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.027040 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037544 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.185504 seconds (247.36 k allocations: 13.592 MiB)
Running: chebyshev_quadrature with k=2
  0.240929 seconds (303.09 k allocations: 16.585 MiB, 8.53% gc time)
Running: chebyshev_quadrature with k=3
  0.203146 seconds (282.83 k allocations: 14.999 MiB)
Running: chebyshev_quadrature with k=4
  0.203594 seconds (282.87 k allocations: 15.012 MiB)
Running: hermite_quadrature with k=2
 15.588693 seconds (22.12 M allocations: 1.148 GiB, 10.17% gc time)
Running: jacobi_quadrature with α=β=1
  0.431481 seconds (475.80 k allocations: 50.440 MiB, 10.09% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.207116 seconds (288.36 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.159797 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.240473 seconds (225.73 k allocations: 37.631 MiB, 15.27% gc time)
Running: radau_quadrature
  0.214309 seconds (222.32 k allocations: 30.297 MiB, 9.86% gc time)
Running: rectangle_rule_left
  0.028505 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.026194 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.023259 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.113092 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.035672 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.039394 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.042960 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.035577 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.207596 seconds (242.49 k allocations: 13.352 MiB, 12.57% gc time)
Running: chebyshev_quadrature with k=2
  0.223616 seconds (297.81 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.197546 seconds (277.69 k allocations: 14.771 MiB)
Running: chebyshev_quadrature with k=4
  0.195600 seconds (277.72 k allocations: 14.787 MiB)
Running: hermite_quadrature with k=2
  0.163894 seconds (177.72 k allocations: 10.161 MiB, 16.42% gc time)
Running: jacobi_quadrature with α=β=1
  9.129994 seconds (468.37 k allocations: 1.176 GiB, 18.67% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.218529 seconds (283.22 k allocations: 15.696 MiB)
Running: legendre_quadrature
  0.166825 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.269610 seconds (216.09 k allocations: 23.334 MiB)
Running: radau_quadrature
  0.419059 seconds (215.24 k allocations: 21.263 MiB, 44.37% gc time)
Running: rectangle_rule_left
  0.026606 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025624 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022799 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.108553 seconds (138.21 k allocations: 7.923 MiB)
Running: simpsons_rule
  0.032584 seconds (33.50 k allocations: 1.933 MiB)
Running: simpsons38_rule
  0.038839 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.027800 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033066 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.238426 seconds (240.82 k allocations: 13.568 MiB)
Running: chebyshev_quadrature with k=2
  0.254691 seconds (296.04 k allocations: 16.653 MiB, 15.83% gc time)
Running: chebyshev_quadrature with k=3
  0.215430 seconds (276.01 k allocations: 14.978 MiB)
Running: chebyshev_quadrature with k=4
  0.197257 seconds (276.05 k allocations: 14.812 MiB)
Running: jacobi_quadrature with α=β=1
  2.849006 seconds (466.41 k allocations: 195.314 MiB, 5.93% gc time)
Running: legendre_quadrature
  0.137379 seconds (193.57 k allocations: 11.138 MiB)
Running: lobatto_quadrature
  0.177966 seconds (204.78 k allocations: 11.840 MiB)
Running: radau_quadrature
  0.277890 seconds (204.78 k allocations: 11.865 MiB, 7.83% gc time)
Running: rectangle_rule_left
  0.344433 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.053164 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.123197 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.146111 seconds (151.29 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.032710 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.037957 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.026962 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034289 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.208620 seconds (241.39 k allocations: 13.512 MiB)
Running: chebyshev_quadrature with k=2
  0.284332 seconds (296.64 k allocations: 16.567 MiB, 13.26% gc time)
Running: chebyshev_quadrature with k=3
  0.295899 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.215694 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  2.168731 seconds (467.08 k allocations: 149.925 MiB, 7.21% gc time)
Running: legendre_quadrature
  0.195893 seconds (194.15 k allocations: 11.151 MiB)
Running: lobatto_quadrature
  0.185644 seconds (205.36 k allocations: 11.951 MiB)
Running: radau_quadrature
  0.232238 seconds (205.35 k allocations: 11.861 MiB, 15.36% gc time)
Running: rectangle_rule_left
  1.225027 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.027826 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.356592 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.163206 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.035965 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.039233 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.030992 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.159666 seconds (152.91 k allocations: 9.087 MiB)
Running: chebyshev_quadrature with k=1
  0.143845 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.152284 seconds (127.17 k allocations: 3.998 MiB)
Running: chebyshev_quadrature with k=3
  0.150042 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.233802 seconds (95.28 k allocations: 3.423 MiB, 31.04% gc time)
Running: jacobi_quadrature with α=β=1
  2.024093 seconds (510.01 k allocations: 169.337 MiB, 1.88% gc time)
Running: legendre_quadrature
  0.184864 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000127 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000052 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 51.469824 seconds (590.00 M allocations: 8.792 GiB, 3.13% gc time)
Running: rectangle_rule_midpoint
  0.000066 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 52.426717 seconds (592.75 M allocations: 8.833 GiB, 2.67% gc time)
Running: rombergs_method
  0.123437 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000096 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026459 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021274 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.469565 seconds (629.34 M allocations: 9.388 GiB, 4.40% gc time)
Running: chebyshev_quadrature with k=1
  0.584123 seconds (439.16 k allocations: 24.262 MiB)
Running: chebyshev_quadrature with k=2
 15.365708 seconds (496.53 k allocations: 4.042 GiB, 3.98% gc time)
Running: chebyshev_quadrature with k=3
  6.866731 seconds (290.51 k allocations: 1.643 GiB, 4.78% gc time)
Running: chebyshev_quadrature with k=4
  8.767489 seconds (290.55 k allocations: 2.262 GiB, 2.55% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.010974 seconds (505.25 k allocations: 13.255 GiB, 3.38% gc time)
Running: legendre_quadrature.
  7.407308 seconds (232.84 k allocations: 1.976 GiB, 2.59% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 66.428390 seconds (8.24 M allocations: 13.384 GiB, 5.10% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.452297 seconds (7.24 M allocations: 13.369 GiB, 3.46% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.433430 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.286515 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.514075 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.414915 seconds (456.61 k allocations: 153.715 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.938863 seconds (600.04 M allocations: 8.943 GiB, 8.35% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.952350 seconds (600.05 M allocations: 8.944 GiB, 7.36% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.501256 seconds (600.04 M allocations: 8.943 GiB, 8.41% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064513 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.232560 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.208130 seconds (284.14 k allocations: 15.181 MiB)
Running: chebyshev_quadrature with k=3
  0.205780 seconds (260.63 k allocations: 13.459 MiB)
Running: chebyshev_quadrature with k=4
  0.213452 seconds (260.66 k allocations: 13.456 MiB)
Running: jacobi_quadrature with α=β=1
  0.378020 seconds (405.38 k allocations: 35.856 MiB)
Running: laguerre_quadrature with k=2
  0.285921 seconds (187.98 k allocations: 10.872 MiB)
Running: legendre_quadrature
  0.147614 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.040879 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.034990 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.059350 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.063636 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.060681 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.268872 seconds (171.25 k allocations: 9.765 MiB)
Running: simpsons_rule
  0.001921 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054063 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.231901 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002134 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.098304 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.127978 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.164918 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.178128 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.046498 seconds (402.17 k allocations: 906.502 MiB, 4.47% gc time)
Running: legendre_quadrature
  0.068447 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000208 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000135 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.603324 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000438 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.504056 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073795 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000826 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000803 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.117504 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.101419 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.123398 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.111450 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.034763 seconds (388.45 k allocations: 253.764 MiB)
Running: legendre_quadrature
  0.059563 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000102 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000048 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.680498 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001075 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.466114 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.087991 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001666 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
