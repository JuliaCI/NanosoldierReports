Julia Version 1.6.0-DEV.572
Commit 1888e3161c (2020-08-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.22
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed SLEEFPirates ──────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_LzceZX/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_LzceZX/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [5.2804427497221695e-12, 1.7637002969195237e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4771296125436493e-12, -2.3182566977197894e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [3.723688024592775e-13, 9.121592370320286e-13, -1.3273049326301134e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0944956879986876e-10, -4.1174919029884904e-10, 3.7612046810409083e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [5.960343330002615e-12, 4.366529360311233e-11, 7.365219545363288e-12, 9.174505599673921e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.099120794378905e-12, -5.411227022023013e-13, 2.119859843219274e-12, -1.1761702722878908e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [4.030642486441138e-11, -2.891176187347355e-11, 5.924150059399835e-11, -5.96699356592012e-11, 6.930767071366972e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.15065776088386e-11, -2.1300738950458253e-12, -1.1472245375898638e-10, -6.391775997371951e-12, 3.735478593114294e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1640910457799691e-11, 1.7124524021028265e-11, -4.9971138338378296e-12, -2.2882473693641714e-11, 3.370304035854588e-11, -8.56303916663137e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.9741542562078394e-11, -1.8192558570717665e-11, 6.296008159267785e-11, 6.422040677023233e-11, -2.381528307893177e-11, 1.3414003241507544e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-4.6572412593093304e-11, 8.522293981627627e-11, 2.069235893742416e-10, -7.837996918169665e-11, 1.7099632820816169e-10, 4.058229308157024e-10, -9.936051981185301e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8597590134561415e-10, -3.5571545708990016e-12, -1.741761179729906e-10, 3.6470582109870975e-10, -1.3913981078417237e-11, -3.700710848875133e-10, 1.1337153438262249e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [6.172773403534393e-11, 4.9054982298457617e-11, 3.914202295618452e-12, -2.106892438291652e-11, 1.2555245731959985e-10, 8.96807073047512e-11, 3.889333299866848e-12, -3.6355696231282764e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0416889573150456e-11, 5.310862860596899e-12, 6.651923456502118e-11, -6.88563650541596e-11, -2.911948460138092e-11, 7.890577080615913e-12, 1.3176659763303178e-10, -1.5071910386410536e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [4.5417447580575754e-11, 5.6145754712133566e-11, -4.4335646265381e-11, -3.646860591288714e-11, 9.179168536377347e-11, 1.1107403885546319e-10, -8.79145645171775e-11, -6.225198134757193e-11, -1.103406255253958e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.677169514380239e-11, -6.151057441172725e-11, -6.706857291760571e-12, -1.3135825760457465e-11, 3.47295525671143e-11, -1.201914123782899e-10, -1.205480160137995e-11, -2.8635649407249275e-11, -4.892752869523065e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4929213421055465e-10, 3.270006487809951e-11, 1.8658519174152843e-10, 1.460422893728719e-10, -3.884859101077609e-11, -2.8409008479002296e-10, 6.1875615742224e-11, 3.5126301867194343e-10, 2.9624191988375514e-10, -8.230549575216628e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.147140408861105e-10, -8.143952179295866e-11, -3.510886026347748e-10, -4.500844141830385e-12, -6.442235633841165e-11, 8.32484747803619e-10, -1.3921974684194538e-10, -7.222558107145005e-10, -7.837397397736368e-12, -1.24231069875691e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.8131719176371917e-11, 2.1714630094038512e-11, 3.6688208027158e-11, -2.9907520904259854e-11, 3.8546943414985435e-13, 5.408407055540465e-11, 4.453770685586278e-11, 7.313949446086099e-11, -5.875910868979872e-11, -7.882583474838611e-15, 1.9206858326015208e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0218048629440091e-10, -2.386533193288187e-10, -5.6480708998662976e-11, 2.695044187817075e-11, 3.4768921075567505e-10, 1.922177972346617e-10, -4.830550404122391e-10, -1.1605061356334545e-10, 4.354827609631684e-11, 7.197247242629601e-10, 7.407785496127417e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [6.864908641546208e-11, 1.2567502594151847e-10, -8.386102923196859e-11, 7.662737111502338e-11, 1.0822698293111443e-10, 9.386758037521759e-11, 1.2557177520022833e-10, 2.532045684233708e-10, -1.6474144270972602e-10, 1.6012347003879768e-10, 2.1699841923350505e-10, 1.88650872701146e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.687450510549752e-11, -5.46837020110047e-11, 1.2135403792967736e-11, -3.08619796385301e-11, -1.967648266543165e-11, -2.0809687306666547e-11, 1.0150080775872539e-10, -1.212786537863053e-10, 2.23354668094089e-11, -4.638645023646859e-11, -3.449840413338734e-11, -4.303046807763167e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [4.872990899684737e-12, -2.6180946299803054e-11, -1.3461454173580023e-12, -2.2902235663480042e-11, 1.714550723619368e-10, 2.1505464076199132e-11, 5.526246127374179e-12, -5.078171216865712e-11, 1.0508927061891882e-11, -4.549760568295369e-11, 3.40536487897225e-10, 4.933808916973703e-11, -2.2698509738461325e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.211877347946256e-10, 1.3855760983005894e-10, -5.227229760151886e-11, -8.616307667352885e-11, -1.5313661450022664e-10, 4.736100400748455e-11, 4.533011743745874e-10, 2.6906232797330176e-10, -1.0140566164551501e-10, -1.809640215455488e-10, -3.022101457972326e-10, 9.568967840323239e-11, 4.0123460109953157e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [4.4442671764954866e-11, -5.852907047909639e-11, -9.831035985286007e-11, 1.5736012493050566e-10, -7.81852360631774e-12, -8.607559109918839e-11, 3.8930858536900814e-11, 9.320166860504742e-11, -1.1149070555660501e-10, -1.9667789619148834e-10, 3.1126523580837784e-10, -1.706124130862463e-11, -1.6765366872562026e-10, 8.13502598617788e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.602762615490974e-11, 4.669931108480796e-11, 2.2096990903719416e-11, 9.422773672440599e-11, -1.304180097250196e-10, 4.8440584876630055e-11, -4.77974326784647e-11, 7.950795577471581e-11, 8.426992437193803e-11, 5.4492854673071633e-11, 2.1169443975566082e-10, -2.5335544773241736e-10, 1.0823297813544741e-10, -9.458078764623679e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.808775351719305e-11, -8.661604766757591e-11, -1.2293810414121253e-10, -1.6877277353444242e-11, -2.502735796383604e-10, 1.3962053735383506e-10, 2.4132251752462253e-11, 3.873079634786336e-11, -1.6478785003215535e-10, -2.539707333326646e-10, -4.56356064049146e-11, -4.930287289539592e-10, 2.766993301150933e-10, 4.53974635661325e-11, -9.821032875834135e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.052424896703542e-11, 2.5974111750315387e-11, 1.2179146580137967e-11, 1.170619157164765e-11, 2.1125545757172404e-11, 1.0726308730113487e-11, 8.846035015608322e-12, 4.012723486823688e-11, 5.023359506139968e-11, 2.3749668898176424e-11, 2.2516211117817875e-11, 4.30795399353201e-11, 2.1588952847650944e-11, 1.9998003253363095e-11, -3.725575403734638e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-9.89097692638552e-12, -1.20919718682444e-10, 5.7123639152223404e-11, -1.480693345712325e-11, -2.678890442808779e-11, 1.3439471757692445e-11, -2.3807067428549544e-11, -6.924716355882765e-11, -2.0761170560490427e-11, -2.3442936480932985e-10, 1.1922951514975466e-10, -2.7217117448685713e-11, -5.7735372038791866e-11, 2.6794566565513378e-11, -4.728017977129184e-11, -1.3797962772343908e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.345379611692124e-11, -5.968636695996565e-11, -5.504174893644631e-11, 1.914335356900665e-11, -4.3464676302562566e-11, 4.1916914383932635e-11, -4.1391778893284936e-11, -1.8082046970846477e-10, -8.78236372514607e-11, -1.1507816921607628e-10, -1.1456779969165609e-10, 3.7527092544564766e-11, -8.449729804738126e-11, 7.732792184356185e-11, -8.70887806314613e-11, -3.5758707106481324e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.642930236300799e-11, 1.042463892986234e-10, -7.905820442744016e-11, 6.182543366151094e-11, 3.8199221563672836e-11, -5.481803899698434e-11, -2.7060464979911103e-11, 1.0127187977104768e-10, 3.4010572136367045e-11, 2.0597812344647082e-10, -1.58552726503558e-10, 1.2343237543177565e-10, 7.877920538135186e-11, -1.0885969903284831e-10, -5.486744392158016e-11, 2.0309731674217346e-10, 1.5429879596240426e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.6874725495295024e-11, 1.5119483443015724e-10, -6.206313241108319e-11, -5.736633390540646e-12, -7.715938998842375e-12, 3.539923909556819e-11, 6.336731139811036e-11, -8.453315825107666e-11, 7.387068734487912e-11, 3.0498759073793735e-10, -1.2701173446316716e-10, -1.7938650564985892e-11, -1.422262307926303e-11, 6.796385676466343e-11, 1.3322232206292028e-10, -1.6959689208562168e-10, 2.858824288409778e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-3.42337269643167e-11, 1.2630119172740706e-11, -5.970435257296458e-11, -9.263145805959994e-11, 1.4223910937971596e-10, 1.9849055732379384e-10, 7.221578890437286e-11, -4.614419957249538e-12, -5.654665624632571e-11, -6.975731103864291e-11, 2.9742430740498094e-11, -1.2250567227312104e-10, -1.8746071361874783e-10, 2.8575075639025727e-10, 4.1310621590184837e-10, 1.364026669392615e-10, -2.0317081350640365e-14, -1.1823253487364127e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4491186028919856e-11, -7.153344583343824e-11, -1.1281975353938378e-11, 4.9639625743225224e-11, -1.0834932950842813e-10, 1.262323578998803e-12, 1.2534195903413092e-11, 6.730394019882624e-12, -8.6861629000623e-12, -3.035982576449214e-11, -1.4664613967596551e-10, -2.0283552615296685e-11, 9.711453863303632e-11, -2.1783164161348623e-10, 3.637534717881863e-12, 2.5999646879881766e-11, 1.4084289290394736e-11, -1.725275478037247e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-3.838951379009359e-11, -2.31280550266888e-11, -1.4792078673053766e-10, -6.83934020528909e-11, -6.328837454105951e-11, 2.6863178348435213e-11, -4.896738570181469e-11, -3.913269708277767e-11, 1.1912759667609407e-10, -7.237954680050507e-11, -5.954803317109736e-11, -2.898030704301391e-10, -1.3505607743269366e-10, -1.132625104816043e-10, 4.96642726943719e-11, -9.412648438456017e-11, -7.750800001815605e-11, 2.3965496254163554e-10, 5.5857984904150726e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.482048479725336e-11, 2.0786350418688926e-10, -3.272904169904223e-11, -6.068057167851748e-11, -9.451150972950018e-11, -1.3064327397671605e-11, -2.0717427773320196e-11, 2.8136604157680267e-11, -2.1793677973391823e-11, -1.8655665900979557e-10, 4.2305980940682275e-10, -6.50243192623634e-11, -1.3380063723644753e-10, -1.8323775829998112e-10, -2.286637545978465e-11, -4.5724646291489535e-11, 5.0010884322659876e-11, -4.532507702492694e-11, 8.284040120543068e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [6.872058477824794e-12, 5.169686900785564e-11, 1.5939249919938447e-11, 2.8138824603729518e-11, -2.3027135753750372e-11, 2.099653784171096e-11, 1.816014005839861e-11, 2.0273338563470134e-11, -1.052824494252036e-11, 4.756484095480573e-11, 1.3341772131525431e-11, 1.0326584032327446e-10, 3.092814893079776e-11, 5.347011722278694e-11, -4.487255012008973e-11, 4.5737413856272724e-11, 3.651923208281005e-11, 4.3467673904729054e-11, -2.7670421509640164e-11, 9.381295740240603e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4305667761504992e-11, -8.422307296029885e-11, 4.369571371398706e-11, 6.855493950297387e-11, -5.781708445340428e-11, -6.793388074299855e-11, 5.12352382742165e-11, 8.207434731843932e-12, -4.235145567577092e-11, -5.558997706600621e-11, 3.11972669919669e-11, -1.6925250090338295e-10, 8.946132723508526e-11, 1.3081646876855757e-10, -1.1257994536606475e-10, -1.4246503976522717e-10, 1.0243517145624992e-10, 1.5616397064377452e-11, -8.672129681031038e-11, -1.1283951550922211e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [2.408273580556397e-11, 2.2565282975506307e-11, -1.1260659071865575e-11, -2.36816122267669e-11, -7.036593530074242e-12, -4.689393318102475e-11, -6.135092434078615e-13, -1.2868806020804868e-10, -5.075428965994888e-11, -5.959899240792765e-12, 4.7308601480722245e-11, 4.814260101682066e-11, -2.311972835400411e-11, -4.86907181240781e-11, -1.2845613461820449e-11, -9.195466610378844e-11, 1.354694134647616e-12, -2.6856061818847365e-10, -1.017661510616108e-10, -1.2375322988589232e-11, -1.5143331033584673e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.481437360619566e-12, 1.4055423491754482e-12, 6.083578085736008e-12, 5.149880522026251e-12, 3.9046543776066756e-12, -6.299738508630526e-12, -4.084954596805801e-12, 2.3647750424515834e-13, 5.987432771803469e-12, 3.6846081741259695e-12, 7.029710147321566e-12, 2.3567814366742823e-12, 1.2149392603078013e-11, 1.0174971976084635e-11, 7.957412506698347e-12, -1.2818524020019595e-11, -7.986278305338601e-12, 7.154277170684509e-13, 1.1901590823981678e-11, 7.519540545786185e-12, -1.446620601086579e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [2.485367467386368e-11, -2.4271029630540397e-11, 2.898059570100031e-11, -6.3765659419345866e-12, 4.4439119051276066e-11, 9.208855900055823e-12, -3.407552018330762e-11, 8.77939942967032e-11, -1.455136011685454e-11, -1.0655165638695507e-10, 9.901257591593549e-11, 5.405986769346782e-11, -5.079270337660091e-11, 6.432188115468307e-11, -1.3558043576722412e-11, 9.268763534464597e-11, 1.6284751325201796e-11, -5.874711828113277e-11, 1.8233192733418946e-10, -2.9005908785961765e-11, -2.2654655928988632e-10, 1.990463349699212e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.195776893643142e-11, 2.550648581234327e-11, -2.547684285758578e-11, -1.58789648097013e-11, -6.048606060460315e-12, -1.8915535804353567e-11, 2.2422730339144437e-11, -2.473676818937065e-11, -7.57360840708543e-12, -4.584932433715494e-11, -1.1583844994333958e-11, -4.354427929342819e-11, 5.159495053419505e-11, -4.890732263618247e-11, -3.7240210915001626e-11, -9.250045174269417e-12, -3.55567797427625e-11, 4.364708594550848e-11, -4.384137497481788e-11, -1.4777068457760834e-11, -9.18869424992863e-11, -2.1819435147563127e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-3.418465510662827e-11, -8.664180484174722e-12, 5.222156040929349e-11, -9.005440837484002e-11, -6.580047617887885e-11, -2.616662442278539e-11, -7.19310166985565e-11, 1.6072232433828049e-10, -8.749667657070859e-13, 1.1507461650239748e-11, 6.046207978727125e-11, -8.059819478489771e-11, -1.580557906777358e-11, 1.1091838558741074e-10, -1.8154500125433515e-10, -1.347034706000727e-10, -5.6046833840639465e-11, -1.6396317636946378e-10, 3.2238212099855446e-10, -1.5595302826909574e-11, 2.0811796730413334e-11, 1.1874234928654914e-10, 4.64273064437748e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.7911983835338106e-10, -1.523675630110688e-10, 3.835909367921886e-11, -3.983635643578509e-11, -3.319096109066777e-10, 2.4021495903525647e-10, 2.5469715225767686e-10, 1.0395106997407311e-10, -3.79496434277371e-12, -4.865944314147441e-10, 2.113162977934735e-10, 5.521538781749769e-10, -2.934316123415215e-10, 7.498401899397322e-11, -7.236555799039479e-11, -6.59835408534093e-10, 4.820328580734667e-10, 5.081037812715294e-10, 2.0447687987257268e-10, 2.4580337765200966e-12, -9.804053124895518e-10, 4.279470111612227e-10, 2.368327756130384e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8907876920291073e-11, -4.138234199757562e-11, 6.679568009815284e-11, 3.26352278534614e-11, -1.058253484842453e-11, 6.133049623713305e-11, 1.9428769704177284e-10, 9.471867734589523e-11, -9.876954809584504e-11, -1.0843848041730553e-10, -6.712164157818279e-11, 7.631140164221506e-11, -7.56416040914587e-11, -8.176226362621719e-11, 1.2290390927205408e-10, 5.916467316069429e-11, -2.4823920696803725e-11, 1.247004721705025e-10, 3.9861114409234233e-10, 1.8701751258731747e-10, -1.942132010768205e-10, -2.1938750816019592e-10, -1.3777001761638985e-10, 1.5258772023685196e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.282446371320134e-10, 1.6781753764405494e-10, 9.09234909585166e-11, 1.0082557011514837e-10, -1.126141402352232e-10, 6.423528375876231e-11, 7.2588601796041985e-12, 2.1216584045191667e-11, 2.8768099014087056e-10, -8.948941587760828e-11, 1.145541439484532e-10, 1.414623973516882e-10, -2.447038127684209e-10, 3.42911921080713e-10, 1.8458146122668495e-10, 2.033735402307002e-10, -2.1863211241424096e-10, 1.27160282303862e-10, 1.2176260000273942e-11, 3.7491343363171836e-11, 5.784326351232494e-10, -1.8270485124816105e-10, 2.2913293484805308e-10, 2.7607982566735245e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
