Julia Version 1.6.0-DEV.1130
Commit ff20ff072b (2020-10-05 16:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Lfb9gZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Lfb9gZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04694025781672275 0.32160956294615506; -0.04694025781672275 0.0 -0.080696876791922; -0.32160956294615506 0.080696876791922 0.0])
dAA = so3([0.0 0.13422452057641363 0.012737351753648755; -0.13422452057641363 0.0 -0.07431052390820449; -0.012737351753648755 0.07431052390820449 0.0])
dAA = so3([0.0 -0.08909174523040295 -0.157674012288844; 0.08909174523040295 0.0 -0.09766728054750352; 0.157674012288844 0.09766728054750352 0.0])
dAA = Quaternion(0.9931684395661206, [-0.01445266648107914, -0.08437681722689311, -0.0792976909880964])
dAA = SO3([0.9914012649746973 0.1127710817555606 -0.06637932604547549; -0.10465691314773078 0.9878240645279401 0.11511102497106492; 0.07855229046284527 -0.10717416040810145 0.9911323004543138])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9438900880408562 0.3302596333159498 0.0002762249795333793; -0.3244165522648897 0.9273464067632544 -0.1865007841266164; -0.06184983682102194 0.17594662959345103 0.9824547731167669]), [0.80696876791922, 3.21609562946155, -0.46940257816722747])
xj = SE3(SO3([0.8356239093962113 0.3811174705614025 -0.39557825480967845; -0.3649870587376533 0.9234198050299423 0.11866048471374205; 0.4105083787201295 0.04522540559621197 0.9107346121067481]), [0.9766728054750352, -1.57674012288844, 0.8909174523040294])
Dx = SE3(SO3([0.8817550923885041 0.057363149444889745 -0.4682066062463275; 0.009730974127460226 0.9901550118931036 0.13963653019714833; 0.471607108925927 -0.12768132795648568 0.8725160246676261]), [1.6309216373897146, -4.149228895402925, 2.2303674094004875])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
