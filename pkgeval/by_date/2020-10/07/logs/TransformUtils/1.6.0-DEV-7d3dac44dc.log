Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_wJNer3/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_wJNer3/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.018024569682210667 0.05296275915450225; 0.018024569682210667 0.0 0.04714458533376387; -0.05296275915450225 -0.04714458533376387 0.0])
dAA = so3([0.0 -0.161846715345158 0.011287660213423527; 0.161846715345158 0.0 0.03800564180761104; -0.011287660213423527 -0.03800564180761104 0.0])
dAA = so3([0.0 0.07268620894109147 -0.03346586723462473; -0.07268620894109147 0.0 -0.02479008860041604; 0.03346586723462473 0.02479008860041604 0.0])
dAA = Quaternion(0.9984217401467859, [0.029818463879403102, 0.04413766997415289, -0.017797587010308716])
dAA = SO3([0.9974972941546246 0.05975359763623225 0.03779756240459413; -0.05909181913365452 0.9980831301749785 -0.018390817589007406; -0.03882402691217629 0.016111264061020873 0.9991161704750245])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9189271507815758 -0.39433646559892044 0.008464245708067654; 0.39169379926887565 0.9148706469093653 0.09791663310159938; -0.04635578896717063 -0.08666286011083936 0.9951586252988215]), [-0.4714458533376387, 0.5296275915450225, 0.18024569682210667])
xj = SE3(SO3([0.9718418810906305 0.0976924138607522 0.21442842729517972; -0.06539366572960677 0.9860799377728925 -0.15287257701842083; -0.22637806130601332 0.1345457119192881 0.9647022466872681]), [0.2479008860041604, -0.3346586723462473, -0.7268620894109147])
Dx = SE3(SO3([0.8779315310597703 0.46977663610294806 0.09244532948097428; -0.42344086752097965 0.8519517931663823 -0.3080194374283319; -0.22345929939057735 0.23127484578393795 0.9468779684961985]), [0.36454137635699796, -0.9957622289094721, -0.9812554109906181])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
