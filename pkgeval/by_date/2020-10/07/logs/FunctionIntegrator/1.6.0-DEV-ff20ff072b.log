Julia Version 1.6.0-DEV.1130
Commit ff20ff072b (2020-10-05 16:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_sAcxBX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_sAcxBX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.256482 seconds (379.95 k allocations: 15.446 MiB, 12.51% gc time, 93.06% compilation time)
Running: chebyshev_quadrature with k=1
  1.360784 seconds (2.20 M allocations: 126.771 MiB, 3.69% gc time, 98.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.190741 seconds (409.38 k allocations: 23.569 MiB, 83.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.266766 seconds (473.74 k allocations: 26.611 MiB, 4.90% gc time, 88.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.249546 seconds (418.56 k allocations: 23.269 MiB, 5.43% gc time, 90.74% compilation time)
Running: jacobi_quadrature with α=β=1
 31.984797 seconds (36.42 M allocations: 3.001 GiB, 13.06% gc time, 78.36% compilation time)
Running: laguerre_quadrature with k=1
  2.574372 seconds (3.17 M allocations: 177.058 MiB, 3.16% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.216037 seconds (206.24 k allocations: 11.842 MiB, 99.14% compilation time)
Running: lobatto_quadrature
  0.345784 seconds (329.62 k allocations: 19.910 MiB, 99.36% compilation time)
Running: radau_quadrature
  0.306798 seconds (447.53 k allocations: 27.323 MiB, 8.55% gc time, 99.36% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.440638 seconds (100.02 M allocations: 1.491 GiB, 0.56% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.095666 seconds (172.46 k allocations: 3.827 MiB, 24.95% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.055666 seconds (100.02 M allocations: 1.491 GiB, 0.46% gc time, 0.05% compilation time)
Running: rombergs_method
  0.461597 seconds (722.93 k allocations: 41.723 MiB, 5.36% gc time, 99.54% compilation time)
Running: simpsons_rule
  0.029572 seconds (45.77 k allocations: 2.043 MiB, 94.17% compilation time)
Running: simpsons38_rule
  0.064646 seconds (108.54 k allocations: 5.758 MiB, 96.87% compilation time)
Running: trapezoidal_rule
  0.191698 seconds (1.51 M allocations: 25.678 MiB, 6.49% gc time, 27.63% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.074908 seconds (30.99 k allocations: 1.865 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.373584 seconds (290.42 k allocations: 15.362 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.142066 seconds (93.80 k allocations: 2.675 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.146819 seconds (82.06 k allocations: 2.476 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.155828 seconds (64.67 k allocations: 2.122 MiB, 98.96% compilation time)
Running: jacobi_quadrature with α=β=1
  2.315127 seconds (503.90 k allocations: 161.812 MiB, 3.70% gc time, 24.87% compilation time)
Running: legendre_quadrature
  0.154330 seconds (41.29 k allocations: 2.382 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.017632 seconds (15.68 k allocations: 1001.825 KiB, 99.04% compilation time)
Running: radau_quadrature
  0.019178 seconds (15.79 k allocations: 1009.040 KiB, 98.93% compilation time)
Running: rectangle_rule_left
 14.386804 seconds (471.41 M allocations: 7.025 GiB, 6.62% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.066470 seconds (476.96 M allocations: 7.107 GiB, 6.36% gc time)
Running: rombergs_method
  0.332847 seconds (326.47 k allocations: 18.530 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000016 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055763 seconds (18.92 k allocations: 1.147 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.064365 seconds (17.41 k allocations: 1.054 MiB, 99.87% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027720 seconds (1.99 k allocations: 53.594 KiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.090157 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.123497 seconds (2.71 k allocations: 124.266 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.109653 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.104363 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.263160 seconds (363.66 k allocations: 18.977 MiB, 99.26% compilation time)
Running: legendre_quadrature
  0.069649 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000088 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000042 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000344 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000234 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000328 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072878 seconds (1.04 k allocations: 56.531 KiB, 99.77% compilation time)
Running: simpsons_rule
  0.000025 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024523 seconds (923 allocations: 39.281 KiB, 99.71% compilation time)
Running: trapezoidal_rule
  0.023435 seconds (44.33 k allocations: 704.859 KiB, 94.44% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.050523 seconds (72.31 k allocations: 4.214 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.185837 seconds (230.61 k allocations: 12.965 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.214432 seconds (283.17 k allocations: 15.881 MiB, 13.89% gc time, 98.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.174797 seconds (234.76 k allocations: 13.149 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.178068 seconds (234.76 k allocations: 13.068 MiB, 93.38% compilation time)
Running: jacobi_quadrature with α=β=1
  1.570117 seconds (446.74 k allocations: 163.188 MiB, 6.71% gc time, 26.07% compilation time)
Running: legendre_quadrature
  0.156245 seconds (185.44 k allocations: 10.708 MiB, 98.92% compilation time)
Running: lobatto_quadrature
  0.181890 seconds (196.62 k allocations: 11.416 MiB, 9.05% gc time, 98.97% compilation time)
Running: radau_quadrature
  0.140214 seconds (196.62 k allocations: 11.414 MiB, 98.68% compilation time)
Running: rectangle_rule_left
  0.653279 seconds (18.82 k allocations: 1.147 MiB, 3.44% compilation time)
Running: rectangle_rule_midpoint
  0.023756 seconds (24.67 k allocations: 1.555 MiB, 99.30% compilation time)
Running: rectangle_rule_right
  0.653708 seconds (17.39 k allocations: 1.065 MiB, 3.51% compilation time)
Running: rombergs_method
  0.111435 seconds (134.27 k allocations: 7.759 MiB, 97.63% compilation time)
Running: simpsons_rule
  0.024393 seconds (27.54 k allocations: 1.729 MiB, 99.34% compilation time)
Running: simpsons38_rule
  0.030266 seconds (42.37 k allocations: 2.678 MiB, 99.45% compilation time)
Running: trapezoidal_rule
  0.026109 seconds (44.10 k allocations: 1.772 MiB, 97.46% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.047713 seconds (99.53 k allocations: 2.979 MiB, 96.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.188497 seconds (237.20 k allocations: 13.058 MiB, 9.98% gc time, 99.01% compilation time)
Running: chebyshev_quadrature with k=2
  0.183918 seconds (290.20 k allocations: 15.871 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=3
  0.169865 seconds (241.33 k allocations: 13.117 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.166435 seconds (241.34 k allocations: 13.122 MiB, 11.10% gc time, 98.90% compilation time)
Running: hermite_quadrature with k=2
 12.830796 seconds (20.10 M allocations: 1.056 GiB, 8.60% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.378007 seconds (455.91 k allocations: 49.402 MiB, 8.77% gc time, 84.22% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.235196 seconds (276.26 k allocations: 15.328 MiB, 20.86% gc time, 98.55% compilation time)
Running: legendre_quadrature
  0.133828 seconds (191.98 k allocations: 11.043 MiB, 98.34% compilation time)
Running: lobatto_quadrature
  0.342932 seconds (217.28 k allocations: 37.186 MiB, 41.73% gc time, 91.46% compilation time)
Running: radau_quadrature
  0.168729 seconds (213.86 k allocations: 29.846 MiB, 85.93% compilation time)
Running: rectangle_rule_left
  0.023789 seconds (21.73 k allocations: 1.293 MiB, 99.30% compilation time)
Running: rectangle_rule_midpoint
  0.024265 seconds (26.47 k allocations: 1.642 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.017594 seconds (18.50 k allocations: 1.117 MiB, 99.16% compilation time)
Running: rombergs_method
  0.134067 seconds (136.74 k allocations: 7.808 MiB, 15.70% gc time, 98.24% compilation time)
Running: simpsons_rule
  0.034130 seconds (39.38 k allocations: 2.061 MiB, 99.01% compilation time)
Running: simpsons38_rule
  0.035246 seconds (57.34 k allocations: 3.063 MiB, 98.86% compilation time)
Running: trapezoidal_rule
  0.024421 seconds (30.13 k allocations: 1.697 MiB, 98.49% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.030864 seconds (59.92 k allocations: 2.280 MiB, 96.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.195339 seconds (232.72 k allocations: 12.824 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.188430 seconds (285.38 k allocations: 15.643 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=3
  0.236931 seconds (236.87 k allocations: 12.928 MiB, 7.29% gc time, 99.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.143763 seconds (236.87 k allocations: 12.929 MiB, 98.28% compilation time)
Running: hermite_quadrature with k=2
  0.146561 seconds (170.79 k allocations: 9.790 MiB, 96.30% compilation time)
Running: jacobi_quadrature with α=β=1
  6.665967 seconds (449.18 k allocations: 1.175 GiB, 19.41% gc time, 5.22% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.222771 seconds (271.55 k allocations: 15.063 MiB, 6.73% gc time, 97.95% compilation time)
Running: legendre_quadrature
  0.142918 seconds (187.55 k allocations: 10.817 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.176647 seconds (208.03 k allocations: 22.913 MiB, 91.20% compilation time)
Running: radau_quadrature
  0.196593 seconds (207.19 k allocations: 20.846 MiB, 7.91% gc time, 85.68% compilation time)
Running: rectangle_rule_left
  0.024493 seconds (19.52 k allocations: 1.188 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.026604 seconds (25.36 k allocations: 1.591 MiB, 99.49% compilation time)
Running: rectangle_rule_right
  0.020763 seconds (17.36 k allocations: 1.062 MiB, 99.43% compilation time)
Running: rombergs_method
  0.121907 seconds (132.58 k allocations: 7.622 MiB, 98.08% compilation time)
Running: simpsons_rule
  0.037666 seconds (31.90 k allocations: 1.853 MiB, 99.38% compilation time)
Running: simpsons38_rule
  0.027796 seconds (48.16 k allocations: 2.821 MiB, 98.97% compilation time)
Running: trapezoidal_rule
  0.028798 seconds (25.05 k allocations: 1.535 MiB, 99.24% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025519 seconds (30.87 k allocations: 1.875 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.178360 seconds (231.10 k allocations: 13.042 MiB, 10.74% gc time, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.228197 seconds (283.67 k allocations: 15.985 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.158015 seconds (235.25 k allocations: 13.146 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.178760 seconds (235.25 k allocations: 12.975 MiB, 10.27% gc time, 98.67% compilation time)
Running: jacobi_quadrature with α=β=1
  2.005375 seconds (447.28 k allocations: 194.241 MiB, 4.13% gc time, 18.04% compilation time)
Running: legendre_quadrature
  0.136533 seconds (185.93 k allocations: 10.745 MiB, 98.26% compilation time)
Running: lobatto_quadrature
  0.166815 seconds (197.11 k allocations: 11.441 MiB, 10.66% gc time, 98.61% compilation time)
Running: radau_quadrature
  0.157686 seconds (197.11 k allocations: 11.440 MiB, 98.25% compilation time)
Running: rectangle_rule_left
  0.351240 seconds (19.34 k allocations: 1.173 MiB, 6.65% compilation time)
Running: rectangle_rule_midpoint
  0.027597 seconds (25.01 k allocations: 1.573 MiB, 99.54% compilation time)
Running: rectangle_rule_right
  0.161229 seconds (17.73 k allocations: 1.081 MiB, 15.66% compilation time)
Running: rombergs_method
  0.109094 seconds (145.02 k allocations: 8.483 MiB, 96.67% compilation time)
Running: simpsons_rule
  0.024820 seconds (28.23 k allocations: 1.758 MiB, 99.15% compilation time)
Running: simpsons38_rule
  0.030576 seconds (43.08 k allocations: 2.708 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.019729 seconds (45.03 k allocations: 1.805 MiB, 96.82% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033159 seconds (31.65 k allocations: 1.828 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=1
  0.221775 seconds (231.69 k allocations: 12.988 MiB, 9.11% gc time, 98.79% compilation time)
Running: chebyshev_quadrature with k=2
  0.180346 seconds (284.30 k allocations: 15.892 MiB, 97.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.199100 seconds (235.84 k allocations: 13.067 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.184492 seconds (235.84 k allocations: 13.142 MiB, 12.30% gc time, 98.56% compilation time)
Running: jacobi_quadrature with α=β=1
  1.569349 seconds (447.99 k allocations: 148.917 MiB, 8.40% gc time, 27.43% compilation time)
Running: legendre_quadrature
  0.151410 seconds (186.53 k allocations: 10.812 MiB, 98.48% compilation time)
Running: lobatto_quadrature
  0.193324 seconds (197.71 k allocations: 11.461 MiB, 98.67% compilation time)
Running: radau_quadrature
  0.166946 seconds (197.71 k allocations: 11.454 MiB, 11.75% gc time, 98.48% compilation time)
Running: rectangle_rule_left
  0.721856 seconds (19.59 k allocations: 1.186 MiB, 3.44% compilation time)
Running: rectangle_rule_midpoint
  0.022074 seconds (25.01 k allocations: 1.574 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.719904 seconds (17.69 k allocations: 1.078 MiB, 3.29% compilation time)
Running: rombergs_method
  0.112395 seconds (135.49 k allocations: 7.815 MiB, 96.85% compilation time)
Running: simpsons_rule
  0.025438 seconds (28.93 k allocations: 1.785 MiB, 99.31% compilation time)
Running: simpsons38_rule
  0.028677 seconds (43.78 k allocations: 2.734 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.024825 seconds (57.27 k allocations: 2.006 MiB, 96.29% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.129380 seconds (146.69 k allocations: 8.788 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.142897 seconds (69.93 k allocations: 2.205 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.141221 seconds (105.09 k allocations: 2.868 MiB, 97.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.130683 seconds (92.57 k allocations: 2.654 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.143631 seconds (72.10 k allocations: 2.248 MiB, 98.11% compilation time)
Running: jacobi_quadrature with α=β=1
  2.236212 seconds (480.21 k allocations: 167.764 MiB, 3.50% gc time, 21.93% compilation time)
Running: legendre_quadrature
  0.103211 seconds (18.73 k allocations: 1.094 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000093 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 22.345697 seconds (590.00 M allocations: 8.792 GiB, 5.22% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.390745 seconds (592.75 M allocations: 8.833 GiB, 5.17% gc time)
Running: rombergs_method
  0.169694 seconds (20.51 k allocations: 1.165 MiB, 99.73% compilation time)
Running: simpsons_rule
  0.000025 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025976 seconds (463 allocations: 22.578 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.022636 seconds (179 allocations: 8.766 KiB, 99.57% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.243607 seconds (629.32 M allocations: 9.387 GiB, 4.03% gc time, 0.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.391440 seconds (414.13 k allocations: 22.966 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=2
 18.076214 seconds (468.78 k allocations: 4.040 GiB, 2.59% gc time, 2.44% compilation time)
Running: chebyshev_quadrature with k=3
  8.316236 seconds (249.12 k allocations: 1.642 GiB, 3.81% gc time, 2.52% compilation time)
Running: chebyshev_quadrature with k=4
 11.254765 seconds (249.12 k allocations: 2.260 GiB, 2.22% gc time, 1.62% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.656458 seconds (484.19 k allocations: 13.254 GiB, 7.43% gc time, 1.18% compilation time)
Running: legendre_quadrature.
 10.247517 seconds (223.39 k allocations: 1.976 GiB, 1.04% gc time, 2.00% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.299238 seconds (8.23 M allocations: 13.383 GiB, 10.51% gc time, 0.57% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.241252 seconds (7.23 M allocations: 13.369 GiB, 7.44% gc time, 0.66% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.150564 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.723813 seconds (30.45 k allocations: 1.884 MiB, 0.23% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.774956 seconds (22.45 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.944851 seconds (438.25 k allocations: 152.742 MiB, 1.93% gc time, 10.81% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.764598 seconds (600.04 M allocations: 8.943 GiB, 5.73% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.231689 seconds (600.05 M allocations: 8.943 GiB, 5.84% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.580550 seconds (600.03 M allocations: 8.943 GiB, 6.01% gc time, 0.11% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.043843 seconds (180.45 k allocations: 4.404 MiB, 86.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.157150 seconds (247.70 k allocations: 13.449 MiB, 97.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.179778 seconds (272.34 k allocations: 14.586 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.163390 seconds (220.25 k allocations: 11.631 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.162430 seconds (220.25 k allocations: 11.626 MiB, 99.03% compilation time)
Running: jacobi_quadrature with α=β=1
  0.315207 seconds (388.85 k allocations: 34.972 MiB, 92.32% compilation time)
Running: laguerre_quadrature with k=2
  0.186827 seconds (180.54 k allocations: 10.477 MiB, 76.74% compilation time)
Running: legendre_quadrature
  0.119860 seconds (145.99 k allocations: 8.098 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.021464 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018996 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.044302 seconds (18.88 k allocations: 1.122 MiB, 61.16% compilation time)
Running: rectangle_rule_midpoint
  0.035282 seconds (25.48 k allocations: 1.576 MiB, 66.28% compilation time)
Running: rectangle_rule_right
  0.054226 seconds (17.48 k allocations: 1.049 MiB, 67.48% compilation time)
Running: rombergs_method
  0.212137 seconds (172.11 k allocations: 9.861 MiB, 98.59% compilation time)
Running: simpsons_rule
  0.001053 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.180900 seconds (78.86 k allocations: 3.384 MiB, 70.12% gc time, 99.43% compilation time)
Running: trapezoidal_rule
  0.085550 seconds (2.39 M allocations: 37.691 MiB, 30.86% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001155 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.112685 seconds (2.46 k allocations: 1.691 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=2
  0.118029 seconds (2.71 k allocations: 2.355 MiB, 97.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.103249 seconds (2.31 k allocations: 2.028 MiB, 96.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.104320 seconds (2.31 k allocations: 1.469 MiB, 97.60% compilation time)
Running: jacobi_quadrature with α=β=1
  5.704434 seconds (365.93 k allocations: 904.798 MiB, 3.07% gc time, 5.68% compilation time)
Running: legendre_quadrature
  0.065019 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000167 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000111 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.828316 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.852094 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060572 seconds (997 allocations: 56.672 KiB, 99.63% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000601 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000234 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.127722 seconds (2.53 k allocations: 579.203 KiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.104886 seconds (2.79 k allocations: 780.188 KiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.102180 seconds (2.39 k allocations: 661.047 KiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.100524 seconds (2.39 k allocations: 491.547 KiB, 99.30% compilation time)
Running: jacobi_quadrature with α=β=1
  2.652951 seconds (372.50 k allocations: 252.963 MiB, 5.59% gc time, 11.00% compilation time)
Running: legendre_quadrature
  0.068396 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000076 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000034 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.331604 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000138 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.311066 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065524 seconds (1.21 k allocations: 64.938 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000277 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
