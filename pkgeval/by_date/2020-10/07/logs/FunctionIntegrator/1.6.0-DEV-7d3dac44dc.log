Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_k3b8h5/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_k3b8h5/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.221301 seconds (379.77 k allocations: 15.430 MiB, 5.64% gc time, 92.11% compilation time)
Running: chebyshev_quadrature with k=1
  1.247014 seconds (2.19 M allocations: 126.581 MiB, 3.78% gc time, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.200826 seconds (409.38 k allocations: 23.549 MiB, 83.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.253572 seconds (473.75 k allocations: 26.612 MiB, 9.90% gc time, 87.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.251302 seconds (418.55 k allocations: 23.251 MiB, 5.00% gc time, 91.33% compilation time)
Running: jacobi_quadrature with α=β=1
 28.620601 seconds (36.41 M allocations: 3.000 GiB, 11.00% gc time, 79.14% compilation time)
Running: laguerre_quadrature with k=1
  2.264554 seconds (3.17 M allocations: 177.113 MiB, 2.78% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.177649 seconds (206.11 k allocations: 11.831 MiB, 98.93% compilation time)
Running: lobatto_quadrature
  0.261705 seconds (329.53 k allocations: 19.894 MiB, 99.27% compilation time)
Running: radau_quadrature
  0.306219 seconds (443.89 k allocations: 27.121 MiB, 7.51% gc time, 99.36% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.374026 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.095544 seconds (172.46 k allocations: 3.827 MiB, 26.04% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 48.080259 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time, 0.05% compilation time)
Running: rombergs_method
  0.428352 seconds (723.09 k allocations: 41.726 MiB, 4.10% gc time, 99.52% compilation time)
Running: simpsons_rule
  0.024699 seconds (45.77 k allocations: 2.043 MiB, 92.70% compilation time)
Running: simpsons38_rule
  0.066306 seconds (108.38 k allocations: 5.744 MiB, 97.27% compilation time)
Running: trapezoidal_rule
  0.204091 seconds (1.51 M allocations: 25.665 MiB, 8.88% gc time, 27.99% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.067030 seconds (30.98 k allocations: 1.865 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.344434 seconds (290.20 k allocations: 15.342 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.129355 seconds (93.80 k allocations: 2.675 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.147611 seconds (82.06 k allocations: 2.476 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.137837 seconds (64.67 k allocations: 2.122 MiB, 99.14% compilation time)
Running: jacobi_quadrature with α=β=1
  2.576601 seconds (504.14 k allocations: 161.820 MiB, 7.04% gc time, 19.38% compilation time)
Running: legendre_quadrature
  0.144456 seconds (41.16 k allocations: 2.371 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.017861 seconds (15.55 k allocations: 990.622 KiB, 99.01% compilation time)
Running: radau_quadrature
  0.017833 seconds (15.66 k allocations: 997.837 KiB, 99.16% compilation time)
Running: rectangle_rule_left
 14.318158 seconds (471.41 M allocations: 7.025 GiB, 5.40% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.255492 seconds (476.96 M allocations: 7.107 GiB, 5.44% gc time)
Running: rombergs_method
  0.326038 seconds (326.49 k allocations: 18.526 MiB, 99.86% compilation time)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.093010 seconds (18.91 k allocations: 1.146 MiB, 99.91% compilation time)
Running: trapezoidal_rule
  0.059069 seconds (17.40 k allocations: 1.054 MiB, 17.42% gc time, 99.87% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023907 seconds (1.99 k allocations: 53.594 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.098358 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.098928 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.097255 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.097919 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.237064 seconds (364.10 k allocations: 18.999 MiB, 99.22% compilation time)
Running: legendre_quadrature
  0.085715 seconds (1.28 k allocations: 65.891 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000085 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000250 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000147 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000204 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.083402 seconds (1.04 k allocations: 56.531 KiB, 99.79% compilation time)
Running: simpsons_rule
  0.000023 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021959 seconds (923 allocations: 39.281 KiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.017149 seconds (44.33 k allocations: 704.859 KiB, 92.37% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.044396 seconds (72.31 k allocations: 4.214 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.131694 seconds (230.61 k allocations: 12.965 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.193454 seconds (283.17 k allocations: 15.897 MiB, 10.81% gc time, 98.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.152114 seconds (234.76 k allocations: 13.150 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.155561 seconds (234.76 k allocations: 13.067 MiB, 98.57% compilation time)
Running: jacobi_quadrature with α=β=1
  1.709250 seconds (447.18 k allocations: 163.211 MiB, 3.11% gc time, 22.40% compilation time)
Running: legendre_quadrature
  0.119687 seconds (185.44 k allocations: 10.708 MiB, 98.53% compilation time)
Running: lobatto_quadrature
  0.149122 seconds (196.77 k allocations: 11.423 MiB, 98.70% compilation time)
Running: radau_quadrature
  0.147975 seconds (196.76 k allocations: 11.417 MiB, 98.71% compilation time)
Running: rectangle_rule_left
  0.643923 seconds (18.82 k allocations: 1.147 MiB, 4.22% compilation time)
Running: rectangle_rule_midpoint
  0.020150 seconds (24.67 k allocations: 1.555 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.643899 seconds (17.39 k allocations: 1.065 MiB, 3.50% compilation time)
Running: rombergs_method
  0.120575 seconds (134.27 k allocations: 7.759 MiB, 97.73% compilation time)
Running: simpsons_rule
  0.023684 seconds (27.54 k allocations: 1.729 MiB, 99.29% compilation time)
Running: simpsons38_rule
  0.025328 seconds (42.37 k allocations: 2.678 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.019821 seconds (44.10 k allocations: 1.772 MiB, 96.89% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031604 seconds (99.53 k allocations: 2.979 MiB, 94.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.216828 seconds (237.20 k allocations: 13.055 MiB, 9.10% gc time, 99.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.180021 seconds (290.20 k allocations: 15.887 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.157235 seconds (241.33 k allocations: 13.116 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.160949 seconds (241.34 k allocations: 13.121 MiB, 98.81% compilation time)
Running: hermite_quadrature with k=2
 12.476928 seconds (20.10 M allocations: 1.056 GiB, 11.26% gc time, 99.96% compilation time)
Running: jacobi_quadrature with α=β=1
  0.419609 seconds (456.36 k allocations: 49.425 MiB, 15.08% gc time, 77.79% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.238712 seconds (276.26 k allocations: 15.318 MiB, 18.49% gc time, 98.61% compilation time)
Running: legendre_quadrature
  0.182589 seconds (191.98 k allocations: 11.070 MiB, 98.74% compilation time)
Running: lobatto_quadrature
  0.249829 seconds (217.42 k allocations: 37.193 MiB, 10.03% gc time, 86.82% compilation time)
Running: radau_quadrature
  0.193852 seconds (214.01 k allocations: 29.856 MiB, 84.30% compilation time)
Running: rectangle_rule_left
  0.022889 seconds (21.73 k allocations: 1.293 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.030381 seconds (26.47 k allocations: 1.642 MiB, 99.55% compilation time)
Running: rectangle_rule_right
  0.025063 seconds (18.50 k allocations: 1.117 MiB, 99.44% compilation time)
Running: rombergs_method
  0.199805 seconds (136.74 k allocations: 7.808 MiB, 18.79% gc time, 98.83% compilation time)
Running: simpsons_rule
  0.042586 seconds (39.38 k allocations: 2.061 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.038168 seconds (57.34 k allocations: 3.063 MiB, 98.96% compilation time)
Running: trapezoidal_rule
  0.025845 seconds (30.13 k allocations: 1.697 MiB, 98.99% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031714 seconds (59.92 k allocations: 2.280 MiB, 96.86% compilation time)
Running: chebyshev_quadrature with k=1
  0.184515 seconds (232.72 k allocations: 12.824 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.195457 seconds (285.38 k allocations: 15.643 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.189967 seconds (236.87 k allocations: 12.932 MiB, 13.91% gc time, 98.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.150552 seconds (236.87 k allocations: 12.929 MiB, 98.60% compilation time)
Running: hermite_quadrature with k=2
  0.131895 seconds (170.78 k allocations: 9.790 MiB, 98.36% compilation time)
Running: jacobi_quadrature with α=β=1
  6.771528 seconds (449.62 k allocations: 1.175 GiB, 17.28% gc time, 6.00% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.182549 seconds (271.55 k allocations: 15.063 MiB, 98.04% compilation time)
Running: legendre_quadrature
  0.134830 seconds (187.55 k allocations: 10.817 MiB, 98.28% compilation time)
Running: lobatto_quadrature
  0.148439 seconds (208.18 k allocations: 22.921 MiB, 89.67% compilation time)
Running: radau_quadrature
  0.193380 seconds (207.34 k allocations: 20.853 MiB, 8.72% gc time, 84.19% compilation time)
Running: rectangle_rule_left
  0.066061 seconds (19.52 k allocations: 1.188 MiB, 99.81% compilation time)
Running: rectangle_rule_midpoint
  0.029782 seconds (25.36 k allocations: 1.591 MiB, 99.60% compilation time)
Running: rectangle_rule_right
  0.014840 seconds (17.36 k allocations: 1.062 MiB, 99.26% compilation time)
Running: rombergs_method
  0.085387 seconds (132.58 k allocations: 7.622 MiB, 97.56% compilation time)
Running: simpsons_rule
  0.027365 seconds (31.90 k allocations: 1.853 MiB, 98.95% compilation time)
Running: simpsons38_rule
  0.031691 seconds (48.16 k allocations: 2.821 MiB, 99.17% compilation time)
Running: trapezoidal_rule
  0.020144 seconds (25.05 k allocations: 1.535 MiB, 99.03% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025061 seconds (30.87 k allocations: 1.875 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=1
  0.163580 seconds (231.10 k allocations: 13.042 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.248793 seconds (283.67 k allocations: 15.985 MiB, 8.41% gc time, 98.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.171462 seconds (235.25 k allocations: 13.146 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.182712 seconds (235.25 k allocations: 12.971 MiB, 98.42% compilation time)
Running: jacobi_quadrature with α=β=1
  1.675119 seconds (447.72 k allocations: 194.255 MiB, 7.75% gc time, 24.32% compilation time)
Running: legendre_quadrature
  0.121628 seconds (185.93 k allocations: 10.746 MiB, 98.29% compilation time)
Running: lobatto_quadrature
  0.179470 seconds (197.26 k allocations: 11.449 MiB, 98.68% compilation time)
Running: radau_quadrature
  0.159306 seconds (197.26 k allocations: 11.451 MiB, 98.51% compilation time)
Running: rectangle_rule_left
  0.352020 seconds (19.34 k allocations: 1.173 MiB, 6.35% compilation time)
Running: rectangle_rule_midpoint
  0.018907 seconds (25.01 k allocations: 1.573 MiB, 99.33% compilation time)
Running: rectangle_rule_right
  0.155991 seconds (17.73 k allocations: 1.081 MiB, 12.80% compilation time)
Running: rombergs_method
  0.143338 seconds (145.02 k allocations: 8.483 MiB, 15.57% gc time, 97.55% compilation time)
Running: simpsons_rule
  0.025010 seconds (28.23 k allocations: 1.758 MiB, 99.38% compilation time)
Running: simpsons38_rule
  0.025194 seconds (43.08 k allocations: 2.708 MiB, 99.34% compilation time)
Running: trapezoidal_rule
  0.020764 seconds (45.03 k allocations: 1.805 MiB, 97.38% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028548 seconds (31.64 k allocations: 1.826 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.167837 seconds (231.69 k allocations: 12.988 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.185300 seconds (284.30 k allocations: 15.891 MiB, 97.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.181358 seconds (235.84 k allocations: 13.067 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.159293 seconds (235.84 k allocations: 13.146 MiB, 98.24% compilation time)
Running: jacobi_quadrature with α=β=1
  1.597828 seconds (448.43 k allocations: 148.940 MiB, 3.36% gc time, 25.21% compilation time)
Running: legendre_quadrature
  0.125495 seconds (186.53 k allocations: 10.750 MiB, 98.21% compilation time)
Running: lobatto_quadrature
  0.193142 seconds (197.86 k allocations: 11.468 MiB, 98.61% compilation time)
Running: radau_quadrature
  0.143762 seconds (197.85 k allocations: 11.462 MiB, 98.16% compilation time)
Running: rectangle_rule_left
  0.714025 seconds (19.59 k allocations: 1.186 MiB, 3.40% compilation time)
Running: rectangle_rule_midpoint
  0.021287 seconds (25.01 k allocations: 1.574 MiB, 99.09% compilation time)
Running: rectangle_rule_right
  0.629550 seconds (17.69 k allocations: 1.078 MiB, 3.40% compilation time)
Running: rombergs_method
  0.100726 seconds (135.49 k allocations: 7.815 MiB, 96.66% compilation time)
Running: simpsons_rule
  0.026379 seconds (28.93 k allocations: 1.785 MiB, 99.20% compilation time)
Running: simpsons38_rule
  0.027281 seconds (43.78 k allocations: 2.734 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.022124 seconds (57.27 k allocations: 2.006 MiB, 95.88% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.120926 seconds (146.69 k allocations: 8.789 MiB, 99.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.179215 seconds (69.93 k allocations: 2.205 MiB, 12.17% gc time, 86.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.144345 seconds (105.09 k allocations: 2.868 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.143293 seconds (92.57 k allocations: 2.654 MiB, 97.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.137958 seconds (72.10 k allocations: 2.248 MiB, 98.25% compilation time)
Running: jacobi_quadrature with α=β=1
  1.984507 seconds (480.58 k allocations: 167.780 MiB, 4.51% gc time, 18.67% compilation time)
Running: legendre_quadrature
  0.092870 seconds (18.73 k allocations: 1.094 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000078 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000032 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.681268 seconds (590.00 M allocations: 8.792 GiB, 6.48% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.167493 seconds (592.75 M allocations: 8.833 GiB, 6.47% gc time)
Running: rombergs_method
  0.155149 seconds (20.51 k allocations: 1.165 MiB, 99.58% compilation time)
Running: simpsons_rule
  0.000070 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.046200 seconds (463 allocations: 22.578 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.019942 seconds (179 allocations: 8.766 KiB, 99.37% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.882969 seconds (629.32 M allocations: 9.387 GiB, 5.31% gc time, 0.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.390901 seconds (414.01 k allocations: 23.017 MiB, 5.61% gc time, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
 17.949766 seconds (468.65 k allocations: 4.040 GiB, 2.41% gc time, 2.19% compilation time)
Running: chebyshev_quadrature with k=3
  8.278454 seconds (249.12 k allocations: 1.642 GiB, 3.55% gc time, 1.90% compilation time)
Running: chebyshev_quadrature with k=4
 11.159874 seconds (249.12 k allocations: 2.260 GiB, 1.96% gc time, 1.40% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.522574 seconds (484.50 k allocations: 13.254 GiB, 6.21% gc time, 1.09% compilation time)
Running: legendre_quadrature.
 10.175024 seconds (223.26 k allocations: 1.976 GiB, 2.24% gc time, 2.09% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.215896 seconds (8.23 M allocations: 13.383 GiB, 9.10% gc time, 0.54% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.515070 seconds (7.23 M allocations: 13.369 GiB, 6.50% gc time, 0.57% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.183458 seconds (22.25 k allocations: 1.347 MiB, 0.18% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.711455 seconds (30.45 k allocations: 1.884 MiB, 0.24% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.736480 seconds (22.45 k allocations: 1.357 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.901633 seconds (438.11 k allocations: 152.668 MiB, 2.09% gc time, 11.47% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.419319 seconds (600.04 M allocations: 8.943 GiB, 5.79% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.031252 seconds (600.05 M allocations: 8.943 GiB, 5.95% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.274611 seconds (600.03 M allocations: 8.943 GiB, 5.97% gc time, 0.11% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058577 seconds (180.45 k allocations: 4.406 MiB, 89.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.218852 seconds (247.70 k allocations: 13.449 MiB, 96.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.186175 seconds (272.34 k allocations: 14.523 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.160141 seconds (220.25 k allocations: 11.631 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=4
  0.176613 seconds (220.25 k allocations: 11.626 MiB, 99.25% compilation time)
Running: jacobi_quadrature with α=β=1
  0.382438 seconds (389.30 k allocations: 34.988 MiB, 93.77% compilation time)
Running: laguerre_quadrature with k=2
  0.171768 seconds (180.54 k allocations: 10.483 MiB, 77.94% compilation time)
Running: legendre_quadrature
  0.127533 seconds (145.99 k allocations: 8.082 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.019042 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017553 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.041362 seconds (18.88 k allocations: 1.122 MiB, 58.47% compilation time)
Running: rectangle_rule_midpoint
  0.039586 seconds (25.48 k allocations: 1.576 MiB, 69.54% compilation time)
Running: rectangle_rule_right
  0.045898 seconds (17.48 k allocations: 1.049 MiB, 63.28% compilation time)
Running: rombergs_method
  0.221713 seconds (170.84 k allocations: 9.796 MiB, 98.77% compilation time)
Running: simpsons_rule
  0.000971 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.201377 seconds (78.86 k allocations: 3.384 MiB, 70.70% gc time, 99.51% compilation time)
Running: trapezoidal_rule
  0.086870 seconds (2.39 M allocations: 37.691 MiB, 31.34% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000930 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.117572 seconds (2.46 k allocations: 1.691 MiB, 97.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.166273 seconds (2.71 k allocations: 2.355 MiB, 97.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.090432 seconds (2.31 k allocations: 2.028 MiB, 96.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.097851 seconds (2.31 k allocations: 1.469 MiB, 97.63% compilation time)
Running: jacobi_quadrature with α=β=1
  4.327322 seconds (366.38 k allocations: 904.821 MiB, 6.77% gc time, 9.58% compilation time)
Running: legendre_quadrature
  0.096318 seconds (1.27 k allocations: 68.203 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000134 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000093 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.789933 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000342 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.864536 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.106096 seconds (997 allocations: 56.672 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000643 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001083 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.093856 seconds (2.53 k allocations: 579.203 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.097014 seconds (2.79 k allocations: 780.188 KiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.103930 seconds (2.39 k allocations: 661.047 KiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.107340 seconds (2.39 k allocations: 491.547 KiB, 99.37% compilation time)
Running: jacobi_quadrature with α=β=1
  1.989913 seconds (372.95 k allocations: 253.064 MiB, 7.46% gc time, 20.48% compilation time)
Running: legendre_quadrature
  0.058279 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000075 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000029 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.250310 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000070 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.203010 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073596 seconds (1.21 k allocations: 64.938 KiB, 98.86% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000277 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
