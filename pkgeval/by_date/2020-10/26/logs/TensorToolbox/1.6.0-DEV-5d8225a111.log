Current time is 2020-10-27T04:43:52.959
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T04:43:54.187
   Resolving package versions...
   Installed TensorToolbox â”€ v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [9c690861] + TensorToolbox v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9c690861] + TensorToolbox v1.0.1
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [8dfed614] + Test
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mTensorToolbox
1 dependency successfully precompiled
Starting tests at 2020-10-27T04:43:58.012
     Testing TensorToolbox
Status `/tmp/jl_pZ7ts0/Project.toml`
  [9c690861] TensorToolbox v1.0.1
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_pZ7ts0/Manifest.toml`
  [9c690861] TensorToolbox v1.0.1
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
     Testing Running tests...
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = neye(dims::Vector{Int64}) at tensor.jl:416
â”” @ TensorToolbox ~/.julia/packages/TensorToolbox/6LauI/src/tensor.jl:416
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = diagt(v::Vector{Int64}) at tensor.jl:164
â”” @ TensorToolbox ~/.julia/packages/TensorToolbox/6LauI/src/tensor.jl:164
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = tkron(X1::Array{Float64, 3}, X2::Array{Float64, 3}) at tensor.jl:592
â”” @ TensorToolbox ~/.julia/packages/TensorToolbox/6LauI/src/tensor.jl:592



**** Testing tensor.jl

**Test tensor X of size: (20, 10, 50, 5)

...Testing functions matten and tenmat (by mode).
Size of 1-mode matricization: [20, 2500]
Check if it folds back correctly: true
Size of 2-mode matricization: [10, 5000]
Check if it folds back correctly: true
Size of 3-mode matricization: [50, 1000]
Check if it folds back correctly: true
Size of 4-mode matricization: [5, 10000]
Check if it folds back correctly: true

...Testing functions matten and tenmat (by rows and columns).
Size of R=[2, 1] and C=[4, 3] matricization: [200, 250]
Check if it folds back correctly: true

...Testing function ttm.
Created 4 matrices with 5 rows and appropriate number of columns.
Size of tensor Y=ttm(X,M): (5, 5, 5, 5)
Multiplication error: 9.576724409568073e-12

...Testing function ttv.
Multiplying a tensor X by a vector v in mode 2.
Size of tensor Y=ttv(X,v): (3, 2)

...Testing function krontm.
Created two tensors X and Y of order 3 and sizes (5, 4, 3) and (2, 5, 4).
Multiplying tkron(X,Y) by random matrix in mode 3.
Multiplication error: 1.2811378111958704e-14
Multiplying tkron(X,Y) by random matrices in modes [3, 2].
Multiplication error: 1.0099295556649024e-13
Multiplying tkron(X,Y) by random matrices in all modes.
Multiplication error: 5.925474855089757e-13

...Testing function mkrontv.
Multiplying mode-1 matricized tkron(X,Y) by a random vector.
Multiplication error: 2.5121479338940402e-14
Multiplication error: 2.4734407333389844e-15

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 0.0

...Testing function dropdims.
Tensor X of size :(5, 4, 1, 3, 6, 1) squeezed to size :(5, 4, 3, 6).

...Testing contraction (contract).
Error: 0.0


****Testing ttensor.jl

...Test tensor X of size: (20, 10, 50, 5)

...Testing hosvd.

Creating exact decomposition with rank = size(X):
Results:
Type of output T: ttensor
Core tensor size: (20, 10, 50, 5)
Factor matrices sizes: (20, 20) (10, 10) (50, 50) (5, 5) 

...Testing function full, i.e. n-mode multiplication (ttm): norm(full(T)-X) = 2.147836659978044e-13

...Testing ttm for ttensor T and array of matrices A : norm(full(ttm(T,A))-ttm(full(T),A)) = 5.897487585272273e-12

...Testing hosvd with smaller multilinear rank: [5, 5, 5, 5]
Results:
Type of output T: ttensor
Core tensor size: (5, 5, 5, 5)
Factor matrices sizes: (20, 5) (10, 5) (50, 5) (5, 5) 

...Testing size of ttensor T : (20, 10, 50, 5)

...Testing ndims of ttensor T : 4

...Testing nrank of ttensor T for mode 1: 5

...Testing mrank of ttensor T: (5, 5, 5, 5)

...Testing functions matten and tenmat (by mode).


...Testing hosvd for tensor with noise.
For ttensor T, X=full(T) tensor of size (60, 50, 40) and rank [5, 5, 5] , N noise tensor and S=hosvd(X+N,[5, 5, 5]).
Error( norm(T-S) ): 0.01474375631738253. Noise norm: 0.17352428428368433.


...Testing hosvd with eps_abs=1e-5 on function defined tensor X of size (20, 20, 20) and multlinear rank(13, 13, 13)
Results:
Type of output T: ttensor
Core tensor size: (7, 7, 7)
Factor matrices sizes: (20, 7) (20, 7) (20, 7) 

...Testing hosvd with eps_rel=1e-5 on function defined tensor X of size (20, 20, 20)
Results:
Type of output T: ttensor
Core tensor size: (6, 6, 6)
Factor matrices sizes: (20, 6) (20, 6) (20, 6) 

...Testing if factor matrices of ttensor T are orthogonal: true


...Recompress Tucker tensor T to smaller rank: [3, 3, 3]
Results:
Type of output T: ttensor
Core tensor size: (3, 3, 3)
Factor matrices sizes: (20, 3) (20, 3) (20, 3) 

...Testing orthogonal flag and reorthogonalization for random ttensor S of size (4, 5, 2).
Has orthogonal factor matrices: false
After reorthogonalization: true


...Testing norm of ttensor T.
|norm(T) - norm(full(T))| = 0.0


...Testing scalar multiplication 3*T.
norm(full(3*T) - 3*full(T)) = 3.11024972780411e-14


...Creating two random ttensors X and Y of size (6, 8, 2, 5, 4).

...Testing addition.
norm(full(X+Y) - (full(X)+full(Y))) = 1.5988718329798568e-13


...Testing inner product.
|innerprod(X,Y) - innerprod(full(X),full(Y))| = 2.2737367544323206e-12


...Testing Hadamard product.
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = tkron(X1::Array{Float64, 5}, X2::Array{Float64, 5}) at tensor.jl:592
â”” @ TensorToolbox ~/.julia/packages/TensorToolbox/6LauI/src/tensor.jl:592
norm(full(ewprod(X,Y)) - full(X).*full(Y)) = 1.650491860542235e-12


...Testing singular values of matricizations of Tucker Tensor.

Singular values of matricizations of random Tucker tensor of size (10, 9, 8), rank [3, 3, 3] and norm 106.1365482366316.
Mode-1 singular values error: 5.0867118742119833e-14
Mode-2 singular values error: 2.040878629308206e-14
Mode-3 singular values error: 3.5704330589399866e-14

Singular values of matricizations of random Tucker tensor of size (20, 20, 20, 20), rank [5, 5, 5, 5] and norm 9805.234780815412.
Mode-1 singular values error: 5.92918004731714e-12
Mode-2 singular values error: 5.084229945850415e-12
Mode-3 singular values error: 3.722267489080173e-12
Mode-4 singular values error: 2.7284841053187847e-12

...Testing function mhadtv.


...Creating two random ttensors X and Y of size (5, 4, 3).
Multiplying mode-1 matricized ewprod(X,Y) by a random vector.
Multiplication error: 4.658969933925513e-15
Multiplication error: 2.802076229740705e-15
Multiplication error: 6.591696189872022e-14

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 1.1865284505116684e-14

...Testing cp_als on ttensor.
Test rank-1 ttensor T of size: (5, 4, 3)
norm(full(Tcp)-T) = 4.856389276179449e-16


****Testing ktensor.jl

**Test rank-1 tensor X of size: (5, 4, 3)
...Testing cp_als.
norm(full(Xcp)-X) = 1.6965349486026494e-16

**Test ktensors X and Y of size: (4, 3, 2)

...Testing function ndims.
X is of order: 3
...Testing function ttensor and full.
...Testing scalar multiplication.
norm(full(3*X) - 3*full(X)) = 5.003709432505417e-16
...Testing functions plus and minus.
norm(full(Z)-(full(X)+full(Y))) = 6.995561441862952e-16
norm(full(Z)-(full(X)-full(Y))) = 2.607399605677454e-16
...Testing function innerprod.
norm(innerprod(X,Y)-innerprod(full(X),full(Y))) = 8.881784197001252e-16
...Testing function norm.
...Testing functions arrange and arrange!.
norm(full(X)-full(Z)) = 1.8430633329595604e-16
...Testing functions normalize and normalize!.
norm(full(X)-full(Z)) = 1.458412729731288e-16
...Testing functions redistribute and redistribute!.
norm(full(X)-full(Z)) = 2.2492625290613865e-16
...Testing functions fixsigns, fixsigns! and isequal.
norm(full(X)-full(Z)) = 0.0
...Testing functions ttm and ttv.

...Testing function tocell.
Is the output MatrixCell: true

...Testing function tenmat by mode 2.

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 2.3800361837210756e-15


****Testing dimtree.jl

...Testing creating a dimtree.
...Testing function non (number-of-nodes).

...Created two dimtrees for tensor of order 5, with 9 nodes.

...Testing functions:
 - height
 - children
 - sibling
 - parent
 - is_leaf
 - is_left
 - is_right
 - count_leaves
 - dims
 - lvl
 - nodes_on_lvl
 - node2ind
 - subnodes
 - left_child_length


Testing truncation of tensor X of size (2, 2, 2, 2, 2) to htensor.
norm(full(H)-X) = 1.1755977508314564e-13
norm(full(H)-X) = 5.111706013773555e-14


...Testing size of htensor H : (5, 4, 3, 2, 4, 2)

...Testing ndims of htensor H : 6

...Testing ttm for ttensor H and array of matrices A : norm(full(ttm(H,A))-ttm(full(H),A)) = 1.6301491171406862e-12


...Testing norm of htensor H.
|norm(H) - norm(full(H))| = 1.4210854715202004e-14


...Testing scalar multiplication 3*H.
norm(full(3*H) - 3*full(H)) = 2.0639724462410134e-14


Testing functions plus and minus for htensors H1 and H2.
norm(full(H1+H2) - (full(H1)+full(H2))) = 1.1490942388994425e-15
norm(full(H1+H2) - (full(H1)+full(H2))) = 8.023954015375792e-16


...Testing inner product.
|innerprod(H1,H2) - innerprod(full(H1),full(H2))| = 7.105427357601002e-15


Testing function dropdims for squeezed tensor X and squeezed htensor Y.
norm(full(Y)-dropdims(X,dims=1)) = 2.8182845285115197e-15
norm(full(Y)-dropdims(X,dims=2)) = 4.636697464381332e-15
norm(full(Y)-dropdims(X,dims=3)) = 5.170952009001573e-15
norm(full(Y)-dropdims(X,dims=4)) = 5.3034400637785254e-15
norm(full(Y)-dropdims(X,dims=5)) = 4.433753666185922e-15


...Testing reorthogonalization for random htensor H of size (4, 5, 2).
Has orthogonal factor matrices: false
After reorthogonalization: true
Testing hrank: [1, 2, 2, 2, 2]


****Testing TTtensor.jl

...Test core tensors G of sizes: 
(1, 4, 3)
(3, 6, 4)
(4, 3, 1)

...Test size of TTtensor T: (4, 6, 3)

...Test ndims of TTtensor T: 3

...Test TTsvd of TTtensor T: (3, 4)

...Test addition: 

...Test dot product: 

...Test tensor X of size: (5, 4, 3, 2)

...Testing TTsvd.
Results:
Type of output T: TTtensor

...Testing function full, i.e. contracted product (conprod): norm(full(T)-X) = 3.401690545661253e-15

...Testing TTsvd with requested rank.
Created tensor x of size (6, 5, 6, 5), with TTrank = (4, 4, 4).
T1=TTsvd(X,reqrank=[4, 4, 4])
norm(X-full(T1)) = 1.2599754752896452e-13

...Testing recompression.
S=TTsvd(T): norm(full(S)-X) = 7.53605126834496e-14

...Testing reorthogonalization - function reorth.
Test TT-tensor T of size: (6, 5, 4, 3) with flags T.lorth = false and T.rorth = false.

Performing (default) left orthogonalization: Tl=reorth(T).
Flags: Tl.lorth = true, Tl.rorth = false.

Performing right orthogonalization: Tr=reorth(T,"right").
Flags: Tr.lorth = false, Tr.rorth = true.
norm(Diagonal(ones(size(Gn, 1))) - Gn * Gn') = 5.356370902890671e-16
norm(Diagonal(ones(size(Gn, 1))) - Gn * Gn') = 6.951281262933879e-16

...Testing reorthogonalization with overwriting - function reorth!.

Performing (default) left orthogonalization: reorth!(T)
Flags: T.lorth = true, T.rorth = false.

Performing right orthogonalization: reorth!(T,"right")
Flags: T.lorth = true, T.rorth = true.

...Testing TTsvd on TT-tensors.

Fixed precision problem with Ïµ = 1.0e-8.
Created TT-tensor T of size (6, 5, 6, 5), with TTrank = (4, 4, 4), but its actual TT-rank is (2,2,2)
T1=TTsvd(T,Ïµ)
TTrank(T1) = (2, 2, 2)
norm(full(T)-full(T1)) = 6.389273220647926e-14

Fixed rank problem with reqrank = [2, 2, 2].
Created TT-tensor T of size (6, 5, 4, 3), with TTrank = (6, 12, 3).
T1=TTsvd(T,reqrank=[2, 2, 2])
TTrank(T1) = (2, 2, 2)

... Testing contraction with vectors - function TTtv.
â”Œ Warning: Assignment to `L` in soft scope is ambiguous because a global variable by the same name exists: `L` will be treated as a new local. Disambiguate by using `local L` to suppress this warning or `global L` to assign to the existing global variable.
â”” @ ~/.julia/packages/TensorToolbox/6LauI/test/TTtensorTest.jl:166
â”Œ Warning: Assignment to `v` in soft scope is ambiguous because a global variable by the same name exists: `v` will be treated as a new local. Disambiguate by using `local v` to suppress this warning or `global v` to assign to the existing global variable.
â”” @ ~/.julia/packages/TensorToolbox/6LauI/test/TTtensorTest.jl:167
â”Œ Warning: Assignment to `T` in soft scope is ambiguous because a global variable by the same name exists: `T` will be treated as a new local. Disambiguate by using `local T` to suppress this warning or `global T` to assign to the existing global variable.
â”” @ ~/.julia/packages/TensorToolbox/6LauI/test/TTtensorTest.jl:169

... Testing transformation of ktensor to TTtensor - function kten2TT.
Test ktensor T of size (5, 4, 3, 2), and k-rank = 3, transofrming to TTtensor Ttt.
norm(full(T)-full(Ttt)) = 0.0

... Testing contraction of full tensor to TTtensor - function contract.

... Testing element-wise product of two TTtensor - function ewprod.



     Testing TensorToolbox tests passed 
Finished at 2020-10-27T05:02:18.148
