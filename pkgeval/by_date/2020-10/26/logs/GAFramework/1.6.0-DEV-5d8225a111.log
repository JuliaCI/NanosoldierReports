Current time is 2020-10-27T05:04:14.835
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T05:04:16.467
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-27T05:04:28.419
     Testing GAFramework
Status `/tmp/jl_NaNj81/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_NaNj81/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2167581585031322
curgen: 20 fitness: 0.21723336750542505
curgen: 30 fitness: 0.21723336750542505
curgen: 40 fitness: 0.21723336750542505
curgen: 50 fitness: 0.21723336750542505
CoordinateCreature{Vector{Float64}}([-0.22247144437226024], -0.21723336750542505) -0.22247144437226024 -0.21723336750542505
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579571032806567
curgen: 100 fitness: 3.258177213979919
curgen: 150 fitness: 3.2582885982032614
curgen: 200 fitness: 3.2582885982032614
curgen: 250 fitness: 3.2583507856118583
curgen: 300 fitness: 3.2584387658744216
curgen: 350 fitness: 3.2584438425836506
curgen: 400 fitness: 3.2584443981950217
curgen: 450 fitness: 3.258446316284
curgen: 500 fitness: 3.258446316284
CoordinateCreature{Vector{Float64}}([0.2224648211942157, -0.22268307512992883, 0.2225852533218312, -0.22309874307435168, 0.22218455401937698, -0.222434546646809, 0.22249922054457533, -0.22316326070913045, 0.22226053772829998, -0.2224583538522129, -0.22244817507126968, -0.22229312126987227, -0.22221416587435985, 0.22246105643686068, 0.22213224925399402], -3.258446316284) [0.2224648211942157, -0.22268307512992883, 0.2225852533218312, -0.22309874307435168, 0.22218455401937698, -0.222434546646809, 0.22249922054457533, -0.22316326070913045, 0.22226053772829998, -0.2224583538522129, -0.22244817507126968, -0.22229312126987227, -0.22221416587435985, 0.22246105643686068, 0.22213224925399402] -3.258446316284
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002439593702803222
curgen: 100 fitness: -0.002439593702803222
curgen: 150 fitness: -0.0024391235142218193
curgen: 200 fitness: -0.0024216272803698757
curgen: 250 fitness: -0.00205012519680281
curgen: 300 fitness: -0.00205012519680281
curgen: 350 fitness: -0.001030775057330402
curgen: 400 fitness: -0.001030775057330402
curgen: 450 fitness: -0.0008146455807036546
curgen: 500 fitness: -0.0006413388806549847
CoordinateCreature{Vector{Float64}}([-0.00014487470979419664, 0.0003274403819980967, 0.00013716046676499544, -0.0008085750906621327, -0.0003054545482135387, -0.00019200330637537093, -0.00019227009498943909, -0.0003167404137802591, -0.0003114159817210465, -0.0005174202909557718, -0.001091890433834564, -3.7306101539520237e-6, 0.0003955125205287884, 0.0006462735057641237, -0.00018269194855216034], 0.0006413388806549847) [-0.00014487470979419664, 0.0003274403819980967, 0.00013716046676499544, -0.0008085750906621327, -0.0003054545482135387, -0.00019200330637537093, -0.00019227009498943909, -0.0003167404137802591, -0.0003114159817210465, -0.0005174202909557718, -0.001091890433834564, -3.7306101539520237e-6, 0.0003955125205287884, 0.0006462735057641237, -0.00018269194855216034] 0.0006413388806549847
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-27T05:04:58.047
