Current time is 2020-10-27T06:12:53.839
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T06:12:54.895
   Resolving package versions...
   Installed JuliennedArrays â”€ v0.2.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5cadff95] + JuliennedArrays v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5cadff95] + JuliennedArrays v0.2.2
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mJuliennedArrays
1 dependency successfully precompiled
Starting tests at 2020-10-27T06:12:56.859
     Testing JuliennedArrays
Status `/tmp/jl_jgh1JW/Project.toml`
  [e30172f5] Documenter v0.25.2
  [5cadff95] JuliennedArrays v0.2.2
  [8dfed614] Test
Status `/tmp/jl_jgh1JW/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [5cadff95] JuliennedArrays v0.2.2
  [69de0a69] Parsers v1.0.11
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:208-227
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> slices = [[1, 2], [3, 4]];
â”‚ 
â”‚ julia> aligned = Align(slices, False(), True())
â”‚ 2Ã—2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
â”‚  1  2
â”‚  3  4
â”‚ 
â”‚ julia> aligned[1, :] == slices[1]
â”‚ true
â”‚ 
â”‚ julia> aligned[1, 1] = 0;
â”‚ 
â”‚ julia> slices
â”‚ 2-element Array{Array{Int64,1},1}:
â”‚  [0, 2]
â”‚  [3, 4]
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ aligned = Align(slices, False(), True())
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2Ã—2 Align{Int64, 2, Vector{Vector{Int64}}, Tuple{False, True}}:
â”‚  1  2
â”‚  3  4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2Ã—2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
â”‚  1  2
â”‚  3  4
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2Ã—2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
â”‚     Align{Int64, 2, Vector{Vector{Int64}}, Tuple{False, True}}:
â”‚     1  2
â”‚     3  4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:208-227
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> slices = [[1, 2], [3, 4]];
â”‚ 
â”‚ julia> aligned = Align(slices, False(), True())
â”‚ 2Ã—2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
â”‚  1  2
â”‚  3  4
â”‚ 
â”‚ julia> aligned[1, :] == slices[1]
â”‚ true
â”‚ 
â”‚ julia> aligned[1, 1] = 0;
â”‚ 
â”‚ julia> slices
â”‚ 2-element Array{Array{Int64,1},1}:
â”‚  [0, 2]
â”‚  [3, 4]
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ slices
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2-element Vector{Vector{Int64}}:
â”‚  [0, 2]
â”‚  [3, 4]
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2-element Array{Array{Int64,1},1}:
â”‚  [0, 2]
â”‚  [3, 4]
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2-element Array{Array{Int64,1},1}:
â”‚     Vector{Vector{Int64}}:
â”‚     [0, 2]
â”‚     [3, 4]
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:238-265
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> input = reshape(1:8, 2, 2, 2)
â”‚ 2Ã—2Ã—2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ 
â”‚ julia> slices = collect(Slices(input, 1, 3))
â”‚ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚ julia> Align(slices, 1, 3)
â”‚ 2Ã—2Ã—2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ slices = collect(Slices(input, 1, 3))
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2-element Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
â”‚     Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}:
â”‚     [1 5; 2 6]
â”‚     [3 7; 4 8]
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:238-265
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> input = reshape(1:8, 2, 2, 2)
â”‚ 2Ã—2Ã—2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ 
â”‚ julia> slices = collect(Slices(input, 1, 3))
â”‚ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚ julia> Align(slices, 1, 3)
â”‚ 2Ã—2Ã—2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ Align(slices, 1, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2Ã—2Ã—2 Align{Int64, 3, Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}, Tuple{True, False, True}}:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2Ã—2Ã—2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2Ã—2Ã—2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
â”‚    Align{Int64, 3, Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}, Tuple{True, False, True}}:
â”‚    [:, :, 1] =
â”‚     1  3
â”‚     2  4
â”‚    
â”‚    [:, :, 2] =
â”‚     5  7
â”‚     6  8
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:103-129
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> whole = [1 2; 3 4];
â”‚ 
â”‚ julia> slices = Slices(whole, False(), True())
â”‚ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
â”‚  [1, 2]
â”‚  [3, 4]
â”‚ 
â”‚ julia> slices[1] == whole[1, :]
â”‚ true
â”‚ 
â”‚ julia> slices[1] = [2, 1];
â”‚ 
â”‚ julia> whole
â”‚ 2Ã—2 Array{Int64,2}:
â”‚  2  1
â”‚  3  4
â”‚ 
â”‚ julia> larger = rand(5, 5, 5);
â”‚ 
â”‚ julia> larger_slices = Slices(larger, True(), False(), False());
â”‚ 
â”‚ julia> size(first(larger_slices))
â”‚ (5,)
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ slices = Slices(whole, False(), True())
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2-element Slices{SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.OneTo{Int64}}, true}, 1, Matrix{Int64}, Tuple{False, True}}:
â”‚  [1, 2]
â”‚  [3, 4]
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
â”‚  [1, 2]
â”‚  [3, 4]
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
â”‚     Slices{SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.OneTo{Int64}}, true}, 1, Matrix{Int64}, Tuple{False, True}}:
â”‚     [1, 2]
â”‚     [3, 4]
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:103-129
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> whole = [1 2; 3 4];
â”‚ 
â”‚ julia> slices = Slices(whole, False(), True())
â”‚ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
â”‚  [1, 2]
â”‚  [3, 4]
â”‚ 
â”‚ julia> slices[1] == whole[1, :]
â”‚ true
â”‚ 
â”‚ julia> slices[1] = [2, 1];
â”‚ 
â”‚ julia> whole
â”‚ 2Ã—2 Array{Int64,2}:
â”‚  2  1
â”‚  3  4
â”‚ 
â”‚ julia> larger = rand(5, 5, 5);
â”‚ 
â”‚ julia> larger_slices = Slices(larger, True(), False(), False());
â”‚ 
â”‚ julia> size(first(larger_slices))
â”‚ (5,)
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ whole
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2Ã—2 Matrix{Int64}:
â”‚  2  1
â”‚  3  4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2Ã—2 Array{Int64,2}:
â”‚  2  1
â”‚  3  4
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2Ã—2 Array{Int64,2}:
â”‚     Matrix{Int64}:
â”‚     2  1
â”‚     3  4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:145-162
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using JuliennedArrays
â”‚ 
â”‚ julia> input = reshape(1:8, 2, 2, 2)
â”‚ 2Ã—2Ã—2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
â”‚ [:, :, 1] =
â”‚  1  3
â”‚  2  4
â”‚ 
â”‚ [:, :, 2] =
â”‚  5  7
â”‚  6  8
â”‚ 
â”‚ julia> Slices(input, 1, 3)
â”‚ 2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ Slices(input, 1, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2-element Slices{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}, 1, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{True, False, True}}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
â”‚  [1 5; 2 6]
â”‚  [3 7; 4 8]
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
â”‚     Slices{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}, 1, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{True, False, True}}:
â”‚     [1 5; 2 6]
â”‚     [3 7; 4 8]
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
ERROR: LoadError: `makedocs` encountered a doctest error. Terminating build
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
   @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
 [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
   @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
 [4] #2
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
 [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
   @ Base.Filesystem ./file.jl:104
 [6] #makedocs#1
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240 [inlined]
 [7] top-level scope
   @ ~/.julia/packages/JuliennedArrays/furG7/test/runtests.jl:4
 [8] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [9] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/JuliennedArrays/furG7/test/runtests.jl:4
ERROR: Package JuliennedArrays errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
