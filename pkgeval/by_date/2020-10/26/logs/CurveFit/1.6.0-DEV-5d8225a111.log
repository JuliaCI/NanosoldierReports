Current time is 2020-10-27T03:35:15.101
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T03:35:16.277
   Resolving package versions...
   Installed ExprTools â”€â”€â”€â”€ v0.1.3
   Installed CurveFit â”€â”€â”€â”€â”€ v0.3.2
   Installed Mocking â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed XML2_jll â”€â”€â”€â”€â”€ v2.9.10+3
   Installed Zlib_jll â”€â”€â”€â”€â”€ v1.2.11+18
   Installed Libiconv_jll â”€ v1.16.0+7
   Installed RecipesBase â”€â”€ v1.1.0
   Installed TimeZones â”€â”€â”€â”€ v1.4.0
   Installed Intervals â”€â”€â”€â”€ v1.5.0
   Installed JLLWrappers â”€â”€ v1.1.3
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Polynomials â”€â”€ v0.8.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [5a033b19] + CurveFit v0.3.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5a033b19] + CurveFit v0.3.2
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.5.0
  [692b3bcd] + JLLWrappers v1.1.3
  [78c3b35d] + Mocking v0.7.1
  [f27b6e38] + Polynomials v0.8.0
  [3cdcf5f2] + RecipesBase v1.1.0
  [f269a46b] + TimeZones v1.4.0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mIntervals[39m
[32m  âœ“ [39m[90mPolynomials[39m
[32m  âœ“ [39mCurveFit
9 dependencies successfully precompiled (3 already precompiled)
Starting tests at 2020-10-27T03:35:41.461
     Testing CurveFit
Status `/tmp/jl_UYYrDW/Project.toml`
  [5a033b19] CurveFit v0.3.2
  [f27b6e38] Polynomials v0.8.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_UYYrDW/Manifest.toml`
  [5a033b19] CurveFit v0.3.2
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [d8418881] Intervals v1.5.0
  [692b3bcd] JLLWrappers v1.1.3
  [78c3b35d] Mocking v0.7.1
  [f27b6e38] Polynomials v0.8.0
  [3cdcf5f2] RecipesBase v1.1.0
  [f269a46b] TimeZones v1.4.0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly(a::Vector{Float64}) at Poly.jl:26
â”” @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
â”Œ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
â”‚   caller = Poly at Poly.jl:26 [inlined]
â”” @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
     Testing CurveFit tests passed 
Finished at 2020-10-27T03:35:54.867
