Current time is 2020-10-27T05:48:45.986
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T05:48:47.218
   Resolving package versions...
     Cloning [d833ac1a-14c4-4847-a042-dd2b1840831c] TheFix from https://github.com/MikaelSlevinsky/TheFix.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed TheFix â”€ v0.2.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [d833ac1a] + TheFix v0.2.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [d833ac1a] + TheFix v0.2.3
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mTheFix
1 dependency successfully precompiled
Starting tests at 2020-10-27T05:51:00.905
     Testing TheFix
Status `/tmp/jl_aSl5CZ/Project.toml`
  [d833ac1a] TheFix v0.2.3
  [3fa0cd96] REPL
  [8dfed614] Test
Status `/tmp/jl_aSl5CZ/Manifest.toml`
  [d833ac1a] TheFix v0.2.3
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [3fa0cd96] REPL
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
[ Info: Fixing UndefVarError(:xx) with x.
[ Info: Fixing UndefVarError(:exo) with exp.
[ Info: Fixing UndefVarError(:sim) with sin.
[ Info: Fixing UndefVarError(:factorrial) with factorial.
[ Info: Fixing UndefVarError(:factoreal) with factorial.
[ Info: Fixing DomainError(-1.0, "sqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).") with sqrt(Complex(-1.0)).
[ Info: Fixing DomainError(-1.0, "sqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).") with sqrt.(Complex.((-1.0, 2.0))).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 ^ float(1 - 3).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 .^ float.(-2:2).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 .^ float.((-2, -1, 0, 1, 2)).
[ Info: Fixing DomainError(-2.0, "NaN result for non-NaN input.") with log2(Complex(-2.0)).
â”Œ Warning: Exception ErrorException("syntax: invalid syntax 2 1") not implemented.
â”” @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:223
â”Œ Warning: Exception ErrorException("syntax: invalid syntax 1 0") not implemented.
â”” @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:223
[ Info: Fixing DomainError(-2, "Cannot raise an integer matrix x to a negative power -2.\nMake x a float matrix by adding a zero decimal (e.g., [2.0 1.0;1.0 0.0]^-2 instead of [2 1;1 0]^-2), or write float(x)^-2 or Rational.(x)^-2") with [2 1; 1 0] ^ float(1 - 3).
â”Œ Warning: Exception DomainError(0.0, "Cannot be subnormal converted to 0.") not implemented.
â”” @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:93
[ Info: Fixing OverflowError("21 is too large to look up in the table; consider using `factorial(big(21))` instead") with factorial(big(21)).
[ Info: Fixing UndefVarError(:factorrial) with factorial.
[ Info: Fixing UndefVarError(:factoreal) with factorial.
[ Info: Fixing OverflowError("24 is too large to look up in the table; consider using `factorial(big(24))` instead") with factorial(big(factorial(4))).
[ Info: Fixing OverflowError("21 is too large to look up in the table; consider using `factorial(big(21))` instead") with factorial.(big.((21, 22))).
[ Info: Fixing OverflowError("binomial(67, 30) overflows") with binomial(widen(67), widen(30)).
[ Info: Fixing OverflowError("gcd(-9223372036854775808, -9223372036854775808) overflows") with gcd(widen(typemin(Int)), widen(typemin(Int))).
[ Info: Fixing OverflowError("checked arithmetic: cannot compute |x| for x = -9223372036854775808::Int64") with gcd(widen.([typemin(Int), 1])).
[ Info: Fixing OverflowError("gcd(-9223372036854775808, -9223372036854775808) overflows") with gcd.(widen.((typemin(Int), 1)), widen.((typemin(Int), 2))).
[ Info: Fixing OverflowError("checked arithmetic: cannot compute |x| for x = -9223372036854775808::Int64") with gcd(widen(typemin(Int)), widen(Int(0))).
[ Info: Fixing OverflowError("1323457 * 12349812309487 overflowed for type Int64") with (var"#1#2"())(widen(1323457 // 20345)).
[ Info: Fixing OverflowError("1323457 * 12349812309487 overflowed for type Int64") with (var"#1#2"()).(widen.([1323457 // 20345, 1323458 // 20345])).
â”Œ Warning: Exception OverflowError("cannot negate unsigned number") not implemented.
â”” @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:141
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with 2 - 0 * (2 / 0).
[ Info: Fixing DivideError() with 2 - 0 * (2 / 0).
[ Info: Fixing DivideError() with 2 - 0 * round(2 / 0, RoundDown).
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with (2 / 0, 2 - 0 * (2 / 0)).
[ Info: Fixing DivideError() with (2 / 0, 2 - 0 * round(2 / 0, RoundNearest)).
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (7,)) with A[clamp(7, extrema(eachindex(A))...)].
[ Info: Fixing UndefVarError(:B) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (1:7,)) with A[intersect(1:7, eachindex(A))].
[ Info: Fixing UndefVarError(:D) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (3, 3)) with A[clamp(3, extrema(axes(A, 1))...), 3].
[ Info: Fixing UndefVarError(:E) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (3, 4)) with A[clamp(3, extrema(axes(A, 1))...), clamp(4, extrema(axes(A, 2))...)].
[ Info: Fixing UndefVarError(:F) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (1:5, 1:5)) with A[intersect(1:5, axes(A, 1)), intersect(1:5, axes(A, 2))].
[ Info: Fixing UndefVarError(:printline) with println.
1:2
1:2
1
2
[ Info: Fixing UndefVarError(:printline) with println.
1:2
1:2
1
2
[ Info: Fixing UndefVarError(:logarithm) with log.
[ Info: Fixing UndefVarError(:sine) with sin.
[ Info: Fixing UndefVarError(:expp1) with expm1.
[ Info: Fixing UndefVarError(:printline) with println.
t = 1.718281828459045
t = 19.085536923187668
t = 53.598150033144236
t = 147.4131591025766
t = 402.4287934927351
t = 1095.6331584284585
t = 2979.9579870417283
t = 8102.083927575384
t = 1.718281828459045
t = 6.38905609893065
t = 19.085536923187668
t = 53.598150033144236
t = 147.4131591025766
t = 402.4287934927351
t = 1095.6331584284585
t = 2979.9579870417283
t = 8102.083927575384
Test Summary: | Pass  Total
Fixed Errors  |   39     39
     Testing TheFix tests passed 
Finished at 2020-10-27T05:51:09.065
