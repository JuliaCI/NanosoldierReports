Current time is 2020-10-27T06:35:58.435
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T06:35:59.899
   Resolving package versions...
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed Codecs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.1
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.11
   Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.17.20
   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.12
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed MathOptInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed Clustering â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.14.2
   Installed Distances â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed WeakRefStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
   Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.19.4
   Installed YAML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.2
   Installed JuMP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.19.2
   Installed NearestNeighbors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.7
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed CSV â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.23
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed TimeSeriesClustering â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
   Installed CapacityExpansion â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed IteratorInterfaceExtensions â”€â”€ v1.0.0
   Installed FilePathsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed CategoricalArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.7
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed JLD2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.14
     Cloning [1914dd2f-81c6-5fcd-8719-6d5c9610ff09] MacroTools from https://github.com/FluxML/MacroTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
     Cloning [3bb67fe8-82b1-5028-8e26-92a6c54297fa] TranscodingStreams from https://github.com/bicycle1885/TranscodingStreams.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed TranscodingStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
     Cloning [e2d170a0-9d28-54be-80f0-106bbe20a464] DataValueInterfaces from https://github.com/queryverse/DataValueInterfaces.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
     Cloning [77ba4419-2d1f-58cd-9bb1-8ffee604a2e3] NaNMath from https://github.com/mlubin/NaNMath.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
     Cloning [5789e2e9-d7fb-5bc7-8068-2c6fae9b9549] FileIO from https://github.com/JuliaIO/FileIO.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed FileIO â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.4
     Cloning [163ba53b-c6d8-5494-b064-1a9d43ac40c5] DiffResults from https://github.com/JuliaDiff/DiffResults.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [c5f7ca31] + CapacityExpansion v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [336ed68f] + CSV v0.5.23
  [49dc2e85] + Calculus v0.5.1
  [c5f7ca31] + CapacityExpansion v0.2.2
  [324d7699] + CategoricalArrays v0.7.7
  [aaaa29a8] + Clustering v0.14.2
  [944b1d66] + CodecZlib v0.7.0
  [19ecbf4d] + Codecs v0.5.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v2.2.1
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.2
  [5789e2e9] + FileIO v1.4.4
  [48062228] + FilePathsBase v0.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [033835bb] + JLD2 v0.1.14
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [4076af6c] + JuMP v0.19.2
  [1914dd2f] + MacroTools v0.5.6
  [b8f27783] + MathOptInterface v0.8.4
  [e1d29d7a] + Missings v0.4.4
  [77ba4419] + NaNMath v0.3.4
  [b8a86587] + NearestNeighbors v0.4.7
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v0.3.12
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [61e8395a] + TimeSeriesClustering v0.5.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [ea10d353] + WeakRefStrings v0.6.2
  [ddb6d928] + YAML v0.3.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mInvertedIndices[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCodecs[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDistances[39m
[32m  âœ“ [39m[90mPooledArrays[39m
[32m  âœ“ [39m[90mCalculus[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mTranscodingStreams[39m
[32m  âœ“ [39m[90mWeakRefStrings[39m
[32m  âœ“ [39m[90mFilePathsBase[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mCodecZlib[39m
[32m  âœ“ [39m[90mYAML[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mNearestNeighbors[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mJLD2[39m
[32m  âœ“ [39m[90mClustering[39m
[32m  âœ“ [39m[90mCategoricalArrays[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mDataFrames[39m
[32m  âœ“ [39m[90mMathOptInterface[39m
[32m  âœ“ [39m[90mCSV[39m
[32m  âœ“ [39m[90mJuMP[39m
[32m  âœ“ [39m[90mTimeSeriesClustering[39m
[32m  âœ“ [39mCapacityExpansion
47 dependencies successfully precompiled
Starting tests at 2020-10-27T06:39:28.871
     Testing CapacityExpansion
Status `/tmp/jl_q72rhY/Project.toml`
  [c5f7ca31] CapacityExpansion v0.2.2
  [e2554f3b] Clp v0.6.2
  [8dfed614] Test
Status `/tmp/jl_q72rhY/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.10
  [336ed68f] CSV v0.5.23
  [49dc2e85] Calculus v0.5.1
  [c5f7ca31] CapacityExpansion v0.2.2
  [324d7699] CategoricalArrays v0.7.7
  [e2554f3b] Clp v0.6.2
  [aaaa29a8] Clustering v0.14.2
  [944b1d66] CodecZlib v0.7.0
  [19ecbf4d] Codecs v0.5.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v2.2.1
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [5789e2e9] FileIO v1.4.4
  [48062228] FilePathsBase v0.7.0
  [f6369f11] ForwardDiff v0.10.12
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.1.14
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [4076af6c] JuMP v0.19.2
  [f8899e07] LinQuadOptInterface v0.6.0
  [1914dd2f] MacroTools v0.5.6
  [b8f27783] MathOptInterface v0.8.4
  [fdba3010] MathProgBase v0.7.8
  [e1d29d7a] Missings v0.4.4
  [77ba4419] NaNMath v0.3.4
  [b8a86587] NearestNeighbors v0.4.7
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v0.3.12
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [61e8395a] TimeSeriesClustering v0.5.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.6.2
  [ddb6d928] YAML v0.3.2
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
â”‚   caller = add_timeseries_data!(dt::Dict{String, Array}, data_name::SubString{String}, data::DataFrames.DataFrame; K::Int64, T::Int64, years::Vector{Int64}) at load_data.jl:132
â”” @ TimeSeriesClustering ~/.julia/packages/TimeSeriesClustering/3T6SG/src/utils/load_data.jl:132
WARNING: both JuMP and StatsBase export "mode"; uses of it in module CapacityExpansion must be qualified
â”Œ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
â”‚   caller = load_cep_data_nodes(data_path::String, techs::OptVariable{OptDataCEPTech, 1, Tuple{Vector{Any}}, Tuple{Dict{Any, Int64}}}) at load_data.jl:118
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/load_data.jl:118
â”Œ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
â”‚   caller = load_cep_data_costs(data_path::String, techs::OptVariable{OptDataCEPTech, 1, Tuple{Vector{Any}}, Tuple{Dict{Any, Int64}}}, nodes::OptVariable{OptDataCEPNode, 2, Tuple{Vector{Any}, Vector{String}}, Tuple{Dict{Any, Int64}, Dict{String, Int64}}}) at load_data.jl:241
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/load_data.jl:241
[ Info: Solved Scenario : OPTIMAL min COST: 2.714e10 [USD] â‡¨ 58.5 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario co2: OPTIMAL min COST: 2.286e10 [EUR] â‡¨ 45.19 [EUR per MWh] s.t. CO2-Emission â‰¤ 1000 [kg-CO2-eq. per MWh-electricity],
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario slack: OPTIMAL min COST: 1.629e10 [EUR] â‡¨ 32.2 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario ex: OPTIMAL min COST: 6.429e9 [EUR] â‡¨ 12.71 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario simple storage: OPTIMAL min COST: 1.629e10 [EUR] â‡¨ 32.2 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario seasonal storage: OPTIMAL min COST: 1.629e10 [EUR] â‡¨ 32.2 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario des&op: OPTIMAL min COST: 1.629e10 [EUR] â‡¨ 32.2 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-germany"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario des&op: OPTIMAL min COST: 1.64e10 [EUR] â‡¨ 32.41 [EUR per MWh] with LL: 606417.46 [MWh] s.t.  + 0.0 (violation) [kg-COâ‚‚-eq. per MWh]
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario co2: OPTIMAL min COST: 1.213e10 [USD] â‡¨ 52.48 [USD per MWh] s.t. CO2-Emission â‰¤ 1000 [kg-CO2-eq. per MWh-electricity],
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario slack: OPTIMAL min COST: 1.213e10 [USD] â‡¨ 52.48 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario ex: OPTIMAL min COST: 7.812e9 [USD] â‡¨ 33.8 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario simple storage: OPTIMAL min COST: 1.213e10 [USD] â‡¨ 52.48 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario seasonal storage: OPTIMAL min COST: 1.213e10 [USD] â‡¨ 52.48 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario des&op: OPTIMAL min COST: 1.213e10 [USD] â‡¨ 52.48 [USD per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-california"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario des&op: OPTIMAL min COST: 1.218e10 [USD] â‡¨ 52.69 [USD per MWh] with LL: 392095.0 [MWh] s.t.  + 0.0 (violation) [kg-COâ‚‚-eq. per MWh]
â”Œ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
â”‚   caller = load_cep_data_lines(data_path::String, techs::OptVariable{OptDataCEPTech, 1, Tuple{Vector{Any}}, Tuple{Dict{Any, Int64}}}) at load_data.jl:162
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/load_data.jl:162
â”Œ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
â”‚   caller = load_cep_data_lines(data_path::String, techs::OptVariable{OptDataCEPTech, 1, Tuple{Vector{Any}}, Tuple{Dict{Any, Int64}}}) at load_data.jl:162
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/load_data.jl:162
[ Info: Solved Scenario trans: OPTIMAL min COST: 1.624e10 [EUR] â‡¨ 32.03 [EUR per MWh] s.t. 
â”Œ Warning: Limit is reached for techs ["demand-CCT", "demand-CVA", "demand-ECA", "demand-ELU", "demand-FRE", "demand-LAX", "demand-NCT", "demand-NVA", "demand-PAC", "demand-SDG"]
â”” @ CapacityExpansion ~/.julia/packages/CapacityExpansion/dh4aY/src/utils/utils.jl:249
[ Info: Solved Scenario trans: OPTIMAL min COST: 1.22e10 [USD] â‡¨ 52.79 [USD per MWh] s.t. 
â”Œ Warning: saved type OptResult is missing field config in workspace type; reconstructing
â”” @ JLD2 ~/.julia/packages/JLD2/4AJn8/src/data.jl:402
Test Summary: | Pass  Total
CEP           |   65     65
     Testing CapacityExpansion tests passed 
Finished at 2020-10-27T06:44:30.062
