Current time is 2020-10-27T05:51:45.359
Julia Version 1.6.0-DEV.1331
Commit bac321d949 (2020-10-25 22:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T05:51:47.229
   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-27T05:52:02.255
     Testing FunctionIntegrator
Status `/tmp/jl_B7odwY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_B7odwY/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.169736 seconds (293.15 k allocations: 13.814 MiB, 92.17% compilation time)
Running: chebyshev_quadrature with k=1
  1.135833 seconds (2.25 M allocations: 130.533 MiB, 3.20% gc time, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.180216 seconds (417.67 k allocations: 24.217 MiB, 83.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.248790 seconds (483.50 k allocations: 27.371 MiB, 4.83% gc time, 88.18% compilation time)
Running: chebyshev_quadrature with k=4
  0.203660 seconds (427.02 k allocations: 23.935 MiB, 92.57% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 26.556995 seconds (35.45 M allocations: 2.978 GiB, 11.16% gc time, 79.46% compilation time)
Running: laguerre_quadrature with k=1
  1.840313 seconds (3.24 M allocations: 182.183 MiB, 3.74% gc time, 99.86% compilation time)
Running: legendre_quadrature
  0.142767 seconds (211.51 k allocations: 12.245 MiB, 99.16% compilation time)
Running: lobatto_quadrature
  0.312812 seconds (339.58 k allocations: 20.638 MiB, 7.93% gc time, 99.50% compilation time)
Running: radau_quadrature
  0.218436 seconds (457.47 k allocations: 28.111 MiB, 10.64% gc time, 99.33% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 35.420741 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.079158 seconds (173.35 k allocations: 3.888 MiB, 9.81% gc time, 21.89% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 36.030797 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time, 0.04% compilation time)
Running: rombergs_method
  0.379968 seconds (740.57 k allocations: 43.091 MiB, 5.05% gc time, 99.49% compilation time)
Running: simpsons_rule
  0.017165 seconds (48.05 k allocations: 2.634 MiB, 92.08% compilation time)
Running: simpsons38_rule
  0.071735 seconds (111.34 k allocations: 5.952 MiB, 20.22% gc time, 98.12% compilation time)
Running: trapezoidal_rule
  0.222322 seconds (1.72 M allocations: 28.727 MiB, 15.25% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037982 seconds (30.73 k allocations: 1.831 MiB, 99.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.285840 seconds (295.61 k allocations: 15.748 MiB, 8.30% gc time, 99.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.125503 seconds (94.22 k allocations: 2.707 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=3
  0.137520 seconds (82.47 k allocations: 2.508 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.106020 seconds (65.08 k allocations: 2.154 MiB, 98.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.180920 seconds (509.31 k allocations: 162.202 MiB, 6.04% gc time, 31.97% compilation time)
Running: legendre_quadrature
  0.124600 seconds (42.19 k allocations: 2.450 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.015993 seconds (16.16 k allocations: 1.009 MiB, 99.12% compilation time)
Running: radau_quadrature
  0.012859 seconds (16.27 k allocations: 1.016 MiB, 99.16% compilation time)
Running: rectangle_rule_left
  9.873497 seconds (471.41 M allocations: 7.025 GiB, 4.21% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 10.074890 seconds (476.96 M allocations: 7.107 GiB, 4.27% gc time)
Running: rombergs_method
  0.256712 seconds (333.88 k allocations: 19.132 MiB, 1.16% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000017 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.046477 seconds (19.43 k allocations: 1.184 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.026109 seconds (16.97 k allocations: 1.034 MiB, 99.71% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.013946 seconds (1.03 k allocations: 34.125 KiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=1
  0.066489 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.070852 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.061437 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.071040 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.195421 seconds (368.03 k allocations: 19.430 MiB, 9.24% gc time, 99.25% compilation time)
Running: legendre_quadrature
  0.049982 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000091 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000342 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000234 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000350 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.053994 seconds (1.04 k allocations: 56.469 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000014 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.014647 seconds (923 allocations: 39.281 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.013693 seconds (44.29 k allocations: 702.859 KiB, 89.63% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.031130 seconds (83.49 k allocations: 5.002 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=1
  0.111019 seconds (235.65 k allocations: 13.404 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.130588 seconds (289.13 k allocations: 16.379 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.156676 seconds (239.80 k allocations: 13.552 MiB, 13.46% gc time, 93.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.114316 seconds (239.80 k allocations: 13.470 MiB, 98.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.244133 seconds (453.64 k allocations: 163.844 MiB, 9.64% gc time, 24.93% compilation time)
Running: legendre_quadrature
  0.100468 seconds (190.36 k allocations: 11.084 MiB, 98.28% compilation time)
Running: lobatto_quadrature
  0.116333 seconds (201.44 k allocations: 11.785 MiB, 98.45% compilation time)
Running: radau_quadrature
  0.110253 seconds (201.44 k allocations: 11.783 MiB, 11.04% gc time, 98.64% compilation time)
Running: rectangle_rule_left
  0.432610 seconds (19.37 k allocations: 1.189 MiB, 3.80% compilation time)
Running: rectangle_rule_midpoint
  0.013520 seconds (25.55 k allocations: 1.616 MiB, 99.04% compilation time)
Running: rectangle_rule_right
  0.387994 seconds (17.90 k allocations: 1.099 MiB, 5.35% compilation time)
Running: rombergs_method
  0.076644 seconds (137.77 k allocations: 8.026 MiB, 97.33% compilation time)
Running: simpsons_rule
  0.019066 seconds (37.98 k allocations: 2.442 MiB, 99.06% compilation time)
Running: simpsons38_rule
  0.024776 seconds (43.94 k allocations: 2.785 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.017148 seconds (43.20 k allocations: 1.730 MiB, 96.32% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025461 seconds (68.44 k allocations: 3.060 MiB, 96.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.133478 seconds (242.24 k allocations: 13.474 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.148912 seconds (296.17 k allocations: 16.373 MiB, 7.82% gc time, 98.61% compilation time)
Running: chebyshev_quadrature with k=3
  0.116567 seconds (246.37 k allocations: 13.522 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=4
  0.110041 seconds (246.37 k allocations: 13.520 MiB, 98.59% compilation time)
Running: hermite_quadrature with k=2
  8.502682 seconds (20.49 M allocations: 1.088 GiB, 10.04% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.364490 seconds (462.81 k allocations: 50.049 MiB, 26.21% gc time, 94.51% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.130332 seconds (282.35 k allocations: 15.726 MiB, 97.93% compilation time)
Running: legendre_quadrature
  0.112411 seconds (196.90 k allocations: 11.429 MiB, 10.68% gc time, 98.18% compilation time)
Running: lobatto_quadrature
  0.128456 seconds (222.10 k allocations: 37.560 MiB, 81.99% compilation time)
Running: radau_quadrature
  0.122435 seconds (218.69 k allocations: 30.248 MiB, 8.01% gc time, 80.80% compilation time)
Running: rectangle_rule_left
  0.014276 seconds (22.28 k allocations: 1.333 MiB, 99.19% compilation time)
Running: rectangle_rule_midpoint
  0.015170 seconds (27.36 k allocations: 1.703 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.015621 seconds (19.02 k allocations: 1.153 MiB, 99.24% compilation time)
Running: rombergs_method
  0.065150 seconds (140.11 k allocations: 8.068 MiB, 96.98% compilation time)
Running: simpsons_rule
  0.019787 seconds (45.46 k allocations: 2.710 MiB, 98.82% compilation time)
Running: simpsons38_rule
  0.037856 seconds (58.91 k allocations: 3.170 MiB, 37.94% gc time, 99.29% compilation time)
Running: trapezoidal_rule
  0.013898 seconds (29.23 k allocations: 1.655 MiB, 98.77% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.023795 seconds (52.41 k allocations: 2.720 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.179673 seconds (237.76 k allocations: 13.270 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.119696 seconds (291.35 k allocations: 16.145 MiB, 98.17% compilation time)
Running: chebyshev_quadrature with k=3
  0.129721 seconds (241.91 k allocations: 13.334 MiB, 8.61% gc time, 98.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.109628 seconds (241.91 k allocations: 13.331 MiB, 98.36% compilation time)
Running: hermite_quadrature with k=2
  0.088663 seconds (175.13 k allocations: 10.126 MiB, 98.02% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.774106 seconds (456.08 k allocations: 1.175 GiB, 19.97% gc time, 3.85% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.161943 seconds (277.64 k allocations: 15.553 MiB, 8.48% gc time, 98.26% compilation time)
Running: legendre_quadrature
  0.114092 seconds (192.47 k allocations: 11.252 MiB, 98.31% compilation time)
Running: lobatto_quadrature
  0.126902 seconds (212.86 k allocations: 23.287 MiB, 88.43% compilation time)
Running: radau_quadrature
  0.131175 seconds (212.01 k allocations: 21.218 MiB, 9.44% gc time, 83.58% compilation time)
Running: rectangle_rule_left
  0.015328 seconds (20.07 k allocations: 1.228 MiB, 99.21% compilation time)
Running: rectangle_rule_midpoint
  0.014904 seconds (26.25 k allocations: 1.652 MiB, 99.20% compilation time)
Running: rectangle_rule_right
  0.017061 seconds (17.88 k allocations: 1.099 MiB, 99.37% compilation time)
Running: rombergs_method
  0.154796 seconds (135.95 k allocations: 7.879 MiB, 98.61% compilation time)
Running: simpsons_rule
  0.013170 seconds (40.80 k allocations: 2.541 MiB, 98.96% compilation time)
Running: simpsons38_rule
  0.018155 seconds (49.73 k allocations: 2.931 MiB, 99.01% compilation time)
Running: trapezoidal_rule
  0.012564 seconds (24.14 k allocations: 1.492 MiB, 98.98% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.013426 seconds (40.61 k allocations: 2.580 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.119954 seconds (236.14 k allocations: 13.461 MiB, 8.98% gc time, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.122919 seconds (289.64 k allocations: 16.487 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.110451 seconds (240.29 k allocations: 13.552 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.129904 seconds (240.28 k allocations: 13.373 MiB, 8.89% gc time, 98.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.423556 seconds (454.18 k allocations: 194.872 MiB, 7.20% gc time, 29.58% compilation time)
Running: legendre_quadrature
  0.116149 seconds (190.86 k allocations: 11.114 MiB, 98.50% compilation time)
Running: lobatto_quadrature
  0.135578 seconds (201.94 k allocations: 11.808 MiB, 11.92% gc time, 98.87% compilation time)
Running: radau_quadrature
  0.095327 seconds (201.94 k allocations: 11.818 MiB, 98.09% compilation time)
Running: rectangle_rule_left
  0.288398 seconds (19.89 k allocations: 1.214 MiB, 5.88% compilation time)
Running: rectangle_rule_midpoint
  0.012571 seconds (25.89 k allocations: 1.634 MiB, 99.08% compilation time)
Running: rectangle_rule_right
  0.136533 seconds (18.25 k allocations: 1.118 MiB, 14.67% compilation time)
Running: rombergs_method
  0.069446 seconds (149.07 k allocations: 8.786 MiB, 96.39% compilation time)
Running: simpsons_rule
  0.014742 seconds (38.61 k allocations: 2.470 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.016853 seconds (44.65 k allocations: 2.815 MiB, 99.12% compilation time)
Running: trapezoidal_rule
  0.011121 seconds (44.13 k allocations: 1.763 MiB, 96.90% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.067800 seconds (40.35 k allocations: 2.510 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.133987 seconds (236.73 k allocations: 13.418 MiB, 11.54% gc time, 98.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.131923 seconds (290.27 k allocations: 16.409 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.108796 seconds (240.88 k allocations: 13.484 MiB, 97.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.124686 seconds (240.87 k allocations: 13.545 MiB, 9.43% gc time, 98.15% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.796232 seconds (454.89 k allocations: 149.565 MiB, 3.47% gc time, 37.99% compilation time)
Running: legendre_quadrature
  0.105547 seconds (191.45 k allocations: 11.126 MiB, 98.58% compilation time)
Running: lobatto_quadrature
  0.103893 seconds (202.54 k allocations: 11.835 MiB, 97.94% compilation time)
Running: radau_quadrature
  0.100374 seconds (202.53 k allocations: 11.829 MiB, 98.04% compilation time)
Running: rectangle_rule_left
  0.476662 seconds (20.14 k allocations: 1.227 MiB, 3.85% compilation time)
Running: rectangle_rule_midpoint
  0.015009 seconds (25.89 k allocations: 1.635 MiB, 98.66% compilation time)
Running: rectangle_rule_right
  0.475922 seconds (18.20 k allocations: 1.115 MiB, 3.82% compilation time)
Running: rombergs_method
  0.095439 seconds (138.99 k allocations: 8.144 MiB, 96.52% compilation time)
Running: simpsons_rule
  0.036281 seconds (39.09 k allocations: 2.490 MiB, 99.49% compilation time)
Running: simpsons38_rule
  0.017522 seconds (45.35 k allocations: 2.842 MiB, 99.30% compilation time)
Running: trapezoidal_rule
  0.011306 seconds (56.28 k allocations: 1.959 MiB, 93.79% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.193911 seconds (152.11 k allocations: 9.114 MiB, 99.86% compilation time)
Running: chebyshev_quadrature with k=1
  0.092252 seconds (70.34 k allocations: 2.237 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.110035 seconds (105.50 k allocations: 2.900 MiB, 24.16% gc time, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.096259 seconds (92.98 k allocations: 2.686 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.094785 seconds (72.52 k allocations: 2.280 MiB, 98.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.960814 seconds (484.23 k allocations: 168.081 MiB, 5.64% gc time, 29.92% compilation time)
Running: legendre_quadrature
  0.071577 seconds (19.14 k allocations: 1.125 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000064 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000023 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 14.906165 seconds (590.00 M allocations: 8.792 GiB, 7.22% gc time)
Running: rectangle_rule_midpoint
  0.000011 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 14.703468 seconds (592.75 M allocations: 8.833 GiB, 7.48% gc time)
Running: rombergs_method
  0.077133 seconds (20.91 k allocations: 1.198 MiB, 99.58% compilation time)
Running: simpsons_rule
  0.000014 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.016296 seconds (463 allocations: 22.578 KiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.010480 seconds (171 allocations: 7.859 KiB, 99.45% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.725450 seconds (209.94 M allocations: 3.138 GiB, 2.65% gc time, 0.53% compilation time)
Running: chebyshev_quadrature with k=1
  0.298851 seconds (422.98 k allocations: 23.680 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
 13.914615 seconds (478.55 k allocations: 4.041 GiB, 2.63% gc time, 2.02% compilation time)
Running: chebyshev_quadrature with k=3
  6.243127 seconds (254.26 k allocations: 1.642 GiB, 3.27% gc time, 2.34% compilation time)
Running: chebyshev_quadrature with k=4
  8.574363 seconds (254.26 k allocations: 2.261 GiB, 1.69% gc time, 1.66% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 28.930018 seconds (491.75 k allocations: 13.255 GiB, 5.95% gc time, 1.13% compilation time)
Running: legendre_quadrature.
  7.229841 seconds (228.90 k allocations: 1.976 GiB, 4.04% gc time, 1.74% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.371869 seconds (8.24 M allocations: 13.384 GiB, 9.84% gc time, 0.49% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.265077 seconds (7.24 M allocations: 13.369 GiB, 11.20% gc time, 2.61% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.393041 seconds (22.88 k allocations: 1.394 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.331800 seconds (31.46 k allocations: 1.956 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 10.830003 seconds (23.09 k allocations: 1.403 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.188771 seconds (448.68 k allocations: 153.516 MiB, 1.72% gc time, 10.37% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.388515 seconds (200.04 M allocations: 2.983 GiB, 2.17% gc time, 0.92% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 22.836481 seconds (600.05 M allocations: 8.944 GiB, 5.23% gc time, 0.19% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.255422 seconds (600.03 M allocations: 8.943 GiB, 3.53% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.125743 seconds (111.10 k allocations: 4.245 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.125238 seconds (252.71 k allocations: 13.877 MiB, 97.35% compilation time)
Running: chebyshev_quadrature with k=2
  0.115413 seconds (277.25 k allocations: 14.964 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.184163 seconds (224.24 k allocations: 11.980 MiB, 46.12% gc time, 99.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.096304 seconds (224.24 k allocations: 11.976 MiB, 98.87% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.192663 seconds (393.47 k allocations: 35.463 MiB, 90.08% compilation time)
Running: laguerre_quadrature with k=2
  0.176639 seconds (185.19 k allocations: 10.841 MiB, 84.13% compilation time)
Running: legendre_quadrature
  0.074291 seconds (149.17 k allocations: 8.338 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.014759 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012811 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.024481 seconds (19.35 k allocations: 1.157 MiB, 65.76% compilation time)
Running: rectangle_rule_midpoint
  0.027048 seconds (26.33 k allocations: 1.636 MiB, 58.75% compilation time)
Running: rectangle_rule_right
  0.028190 seconds (17.96 k allocations: 1.084 MiB, 68.24% compilation time)
Running: rombergs_method
  0.128535 seconds (174.63 k allocations: 10.095 MiB, 98.49% compilation time)
Running: simpsons_rule
  0.000296 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.025150 seconds (80.36 k allocations: 3.491 MiB, 96.69% compilation time)
Running: trapezoidal_rule
  0.065072 seconds (2.39 M allocations: 37.744 MiB, 36.05% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000414 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.068460 seconds (2.46 k allocations: 1.691 MiB, 98.05% compilation time)
Running: chebyshev_quadrature with k=2
  0.064605 seconds (2.71 k allocations: 2.355 MiB, 96.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.068275 seconds (2.31 k allocations: 2.028 MiB, 97.19% compilation time)
Running: chebyshev_quadrature with k=4
  0.073295 seconds (2.31 k allocations: 1.469 MiB, 97.74% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.501955 seconds (370.31 k allocations: 905.283 MiB, 6.08% gc time, 6.79% compilation time)
Running: legendre_quadrature
  0.042441 seconds (1.27 k allocations: 68.203 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000130 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000092 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.670610 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000196 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.709431 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.039496 seconds (993 allocations: 56.609 KiB, 99.48% compilation time)
Running: simpsons_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000922 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000096 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.076852 seconds (2.53 k allocations: 579.203 KiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=2
  0.071900 seconds (2.79 k allocations: 780.188 KiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.076586 seconds (2.39 k allocations: 661.047 KiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=4
  0.066197 seconds (2.39 k allocations: 491.547 KiB, 99.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.574411 seconds (376.87 k allocations: 253.363 MiB, 16.13% compilation time)
Running: legendre_quadrature
  0.048180 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000064 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000096 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.714905 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000060 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.648905 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.051094 seconds (1.21 k allocations: 64.875 KiB, 99.65% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000024 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000356 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-27T05:59:50.944
