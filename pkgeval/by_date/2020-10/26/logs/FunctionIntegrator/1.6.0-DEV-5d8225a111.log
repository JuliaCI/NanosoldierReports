Current time is 2020-10-27T05:12:10.830
Julia Version 1.6.0-DEV.1341
Commit 5d8225a111 (2020-10-26 21:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T05:12:12.082
   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-27T05:12:28.010
     Testing FunctionIntegrator
Status `/tmp/jl_kq2ShY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_kq2ShY/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.172814 seconds (293.31 k allocations: 13.822 MiB, 88.25% compilation time)
Running: chebyshev_quadrature with k=1
  1.213962 seconds (2.25 M allocations: 130.855 MiB, 3.25% gc time, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.280916 seconds (417.67 k allocations: 24.228 MiB, 90.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.250125 seconds (483.50 k allocations: 27.373 MiB, 5.19% gc time, 89.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.228150 seconds (427.02 k allocations: 23.934 MiB, 90.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 32.306723 seconds (35.46 M allocations: 2.979 GiB, 13.59% gc time, 76.26% compilation time)
Running: laguerre_quadrature with k=1
  2.047825 seconds (3.24 M allocations: 182.263 MiB, 3.63% gc time, 99.88% compilation time)
Running: legendre_quadrature
  0.132525 seconds (211.56 k allocations: 12.248 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.262087 seconds (340.12 k allocations: 20.671 MiB, 9.79% gc time, 99.30% compilation time)
Running: radau_quadrature
  0.282661 seconds (461.83 k allocations: 28.339 MiB, 99.38% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 37.487424 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.125173 seconds (173.35 k allocations: 3.888 MiB, 17.89% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 36.875040 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.05% compilation time)
Running: rombergs_method
  0.298578 seconds (741.48 k allocations: 43.143 MiB, 3.98% gc time, 99.29% compilation time)
Running: simpsons_rule
  0.026221 seconds (48.05 k allocations: 2.634 MiB, 94.36% compilation time)
Running: simpsons38_rule
  0.052862 seconds (111.42 k allocations: 5.954 MiB, 97.22% compilation time)
Running: trapezoidal_rule
  0.214340 seconds (1.72 M allocations: 28.728 MiB, 5.02% gc time, 16.78% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.076761 seconds (30.71 k allocations: 1.830 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.323945 seconds (295.73 k allocations: 15.758 MiB, 9.73% gc time, 99.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.100305 seconds (94.22 k allocations: 2.707 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.100185 seconds (82.47 k allocations: 2.508 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.100678 seconds (65.08 k allocations: 2.154 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.409250 seconds (510.65 k allocations: 162.277 MiB, 7.48% gc time, 26.93% compilation time)
Running: legendre_quadrature
  0.123801 seconds (42.24 k allocations: 2.453 MiB, 10.19% gc time, 99.83% compilation time)
Running: lobatto_quadrature
  0.018095 seconds (16.22 k allocations: 1.012 MiB, 99.26% compilation time)
Running: radau_quadrature
  0.012959 seconds (16.32 k allocations: 1.019 MiB, 99.01% compilation time)
Running: rectangle_rule_left
  9.596132 seconds (471.41 M allocations: 7.025 GiB, 4.85% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  9.232207 seconds (476.96 M allocations: 7.107 GiB, 4.82% gc time)
Running: rombergs_method
  0.245445 seconds (334.37 k allocations: 19.159 MiB, 1.46% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000015 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.035473 seconds (19.42 k allocations: 1.184 MiB, 99.77% compilation time)
Running: trapezoidal_rule
  0.027680 seconds (16.96 k allocations: 1.034 MiB, 99.75% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015040 seconds (1.03 k allocations: 34.125 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.070426 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.069282 seconds (2.71 k allocations: 124.266 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.070146 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.070548 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.195478 seconds (369.34 k allocations: 19.504 MiB, 10.02% gc time, 99.28% compilation time)
Running: legendre_quadrature
  0.064295 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000077 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000028 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000179 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000127 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000302 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.061630 seconds (1.04 k allocations: 56.469 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000012 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.015219 seconds (923 allocations: 39.281 KiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.011286 seconds (44.29 k allocations: 702.859 KiB, 91.99% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.030573 seconds (83.49 k allocations: 5.002 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=1
  0.109541 seconds (235.66 k allocations: 13.403 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.109044 seconds (289.14 k allocations: 16.401 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.116680 seconds (239.80 k allocations: 13.536 MiB, 14.32% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=4
  0.106060 seconds (239.80 k allocations: 13.470 MiB, 98.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.041661 seconds (454.95 k allocations: 163.919 MiB, 4.39% gc time, 37.36% compilation time)
Running: legendre_quadrature
  0.092777 seconds (190.36 k allocations: 11.084 MiB, 98.49% compilation time)
Running: lobatto_quadrature
  0.098216 seconds (201.88 k allocations: 11.810 MiB, 98.45% compilation time)
Running: radau_quadrature
  0.098365 seconds (201.87 k allocations: 11.807 MiB, 98.38% compilation time)
Running: rectangle_rule_left
  0.422755 seconds (19.37 k allocations: 1.189 MiB, 4.62% compilation time)
Running: rectangle_rule_midpoint
  0.014154 seconds (25.55 k allocations: 1.616 MiB, 99.17% compilation time)
Running: rectangle_rule_right
  0.366599 seconds (17.90 k allocations: 1.099 MiB, 4.19% compilation time)
Running: rombergs_method
  0.073951 seconds (137.77 k allocations: 8.029 MiB, 96.83% compilation time)
Running: simpsons_rule
  0.015664 seconds (37.98 k allocations: 2.442 MiB, 98.95% compilation time)
Running: simpsons38_rule
  0.027276 seconds (43.94 k allocations: 2.785 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.016279 seconds (43.20 k allocations: 1.730 MiB, 97.12% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024627 seconds (68.44 k allocations: 3.060 MiB, 96.59% compilation time)
Running: chebyshev_quadrature with k=1
  0.114003 seconds (242.24 k allocations: 13.474 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.149734 seconds (296.17 k allocations: 16.376 MiB, 11.39% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.133199 seconds (246.37 k allocations: 13.522 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.122944 seconds (246.37 k allocations: 13.520 MiB, 98.55% compilation time)
Running: hermite_quadrature with k=2
  8.628105 seconds (20.49 M allocations: 1.088 GiB, 10.29% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.350829 seconds (464.12 k allocations: 50.101 MiB, 31.64% gc time, 93.14% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.163468 seconds (282.35 k allocations: 15.726 MiB, 98.36% compilation time)
Running: legendre_quadrature
  0.109737 seconds (196.90 k allocations: 11.414 MiB, 11.26% gc time, 98.25% compilation time)
Running: lobatto_quadrature
  0.124540 seconds (222.53 k allocations: 37.584 MiB, 81.38% compilation time)
Running: radau_quadrature
  0.121641 seconds (219.12 k allocations: 30.267 MiB, 8.25% gc time, 80.04% compilation time)
Running: rectangle_rule_left
  0.013816 seconds (22.28 k allocations: 1.333 MiB, 99.33% compilation time)
Running: rectangle_rule_midpoint
  0.012931 seconds (27.36 k allocations: 1.703 MiB, 99.35% compilation time)
Running: rectangle_rule_right
  0.012159 seconds (19.02 k allocations: 1.153 MiB, 99.31% compilation time)
Running: rombergs_method
  0.071238 seconds (140.11 k allocations: 8.068 MiB, 97.36% compilation time)
Running: simpsons_rule
  0.014909 seconds (45.46 k allocations: 2.710 MiB, 99.05% compilation time)
Running: simpsons38_rule
  0.035206 seconds (58.91 k allocations: 3.170 MiB, 27.61% gc time, 99.08% compilation time)
Running: trapezoidal_rule
  0.019407 seconds (29.23 k allocations: 1.655 MiB, 98.80% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.020785 seconds (52.41 k allocations: 2.720 MiB, 97.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.115929 seconds (237.76 k allocations: 13.243 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.131245 seconds (291.35 k allocations: 16.175 MiB, 97.83% compilation time)
Running: chebyshev_quadrature with k=3
  0.131801 seconds (241.91 k allocations: 13.347 MiB, 10.56% gc time, 98.64% compilation time)
Running: chebyshev_quadrature with k=4
  0.114847 seconds (241.91 k allocations: 13.331 MiB, 98.68% compilation time)
Running: hermite_quadrature with k=2
  0.090592 seconds (175.13 k allocations: 10.130 MiB, 97.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.045352 seconds (457.39 k allocations: 1.176 GiB, 23.59% gc time, 3.41% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.134379 seconds (277.64 k allocations: 15.561 MiB, 6.72% gc time, 98.14% compilation time)
Running: legendre_quadrature
  0.094099 seconds (192.47 k allocations: 11.190 MiB, 98.29% compilation time)
Running: lobatto_quadrature
  0.130169 seconds (213.29 k allocations: 23.312 MiB, 8.16% gc time, 91.22% compilation time)
Running: radau_quadrature
  0.132478 seconds (212.45 k allocations: 21.243 MiB, 92.06% compilation time)
Running: rectangle_rule_left
  0.021901 seconds (20.07 k allocations: 1.228 MiB, 99.45% compilation time)
Running: rectangle_rule_midpoint
  0.020813 seconds (26.25 k allocations: 1.652 MiB, 99.43% compilation time)
Running: rectangle_rule_right
  0.018577 seconds (17.88 k allocations: 1.099 MiB, 99.32% compilation time)
Running: rombergs_method
  0.086170 seconds (135.95 k allocations: 7.879 MiB, 97.62% compilation time)
Running: simpsons_rule
  0.022063 seconds (40.80 k allocations: 2.541 MiB, 99.14% compilation time)
Running: simpsons38_rule
  0.023954 seconds (49.73 k allocations: 2.931 MiB, 99.16% compilation time)
Running: trapezoidal_rule
  0.015155 seconds (24.14 k allocations: 1.492 MiB, 98.89% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.032693 seconds (40.61 k allocations: 2.580 MiB, 40.92% gc time, 99.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.117413 seconds (236.14 k allocations: 13.462 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=2
  0.148743 seconds (289.64 k allocations: 16.502 MiB, 97.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.132384 seconds (240.28 k allocations: 13.548 MiB, 14.06% gc time, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.128502 seconds (240.28 k allocations: 13.373 MiB, 98.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.246056 seconds (455.48 k allocations: 194.945 MiB, 6.40% gc time, 27.14% compilation time)
Running: legendre_quadrature
  0.334218 seconds (190.86 k allocations: 11.114 MiB, 99.47% compilation time)
Running: lobatto_quadrature
  0.130097 seconds (202.37 k allocations: 11.832 MiB, 8.48% gc time, 98.32% compilation time)
Running: radau_quadrature
  0.107655 seconds (202.37 k allocations: 11.838 MiB, 98.20% compilation time)
Running: rectangle_rule_left
  0.296426 seconds (19.89 k allocations: 1.214 MiB, 5.51% compilation time)
Running: rectangle_rule_midpoint
  0.013376 seconds (25.89 k allocations: 1.634 MiB, 99.01% compilation time)
Running: rectangle_rule_right
  0.133261 seconds (18.25 k allocations: 1.118 MiB, 11.12% compilation time)
Running: rombergs_method
  0.097041 seconds (149.07 k allocations: 8.790 MiB, 96.77% compilation time)
Running: simpsons_rule
  0.015503 seconds (38.61 k allocations: 2.470 MiB, 98.92% compilation time)
Running: simpsons38_rule
  0.021403 seconds (44.65 k allocations: 2.815 MiB, 99.08% compilation time)
Running: trapezoidal_rule
  0.020027 seconds (44.13 k allocations: 1.763 MiB, 96.90% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015466 seconds (40.35 k allocations: 2.510 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.122957 seconds (236.73 k allocations: 13.418 MiB, 9.20% gc time, 98.40% compilation time)
Running: chebyshev_quadrature with k=2
  0.156501 seconds (290.27 k allocations: 16.392 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.112299 seconds (240.88 k allocations: 13.468 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.124327 seconds (240.88 k allocations: 13.546 MiB, 9.24% gc time, 98.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.860280 seconds (456.19 k allocations: 149.630 MiB, 12.43% gc time, 34.01% compilation time)
Running: legendre_quadrature
  0.087356 seconds (191.45 k allocations: 11.126 MiB, 97.63% compilation time)
Running: lobatto_quadrature
  0.123848 seconds (202.97 k allocations: 11.921 MiB, 8.98% gc time, 98.23% compilation time)
Running: radau_quadrature
  0.101405 seconds (202.97 k allocations: 11.852 MiB, 98.06% compilation time)
Running: rectangle_rule_left
  0.495638 seconds (20.14 k allocations: 1.227 MiB, 4.06% compilation time)
Running: rectangle_rule_midpoint
  0.013557 seconds (25.89 k allocations: 1.635 MiB, 98.86% compilation time)
Running: rectangle_rule_right
  0.494182 seconds (18.20 k allocations: 1.115 MiB, 2.72% compilation time)
Running: rombergs_method
  0.079724 seconds (138.99 k allocations: 8.082 MiB, 96.37% compilation time)
Running: simpsons_rule
  0.019446 seconds (39.09 k allocations: 2.489 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.018594 seconds (45.35 k allocations: 2.842 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.011961 seconds (56.28 k allocations: 1.959 MiB, 95.04% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.082823 seconds (152.11 k allocations: 9.115 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.116542 seconds (70.34 k allocations: 2.237 MiB, 17.64% gc time, 98.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.096483 seconds (105.50 k allocations: 2.900 MiB, 97.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.103313 seconds (92.98 k allocations: 2.686 MiB, 97.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.249733 seconds (72.52 k allocations: 2.280 MiB, 99.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.931814 seconds (485.54 k allocations: 168.154 MiB, 6.08% gc time, 29.99% compilation time)
Running: legendre_quadrature
  0.075931 seconds (19.14 k allocations: 1.125 MiB, 99.71% compilation time)
Running: lobatto_quadrature
  0.000077 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000027 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 13.743398 seconds (590.00 M allocations: 8.792 GiB, 6.46% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 13.792080 seconds (592.75 M allocations: 8.833 GiB, 6.49% gc time)
Running: rombergs_method
  0.092938 seconds (20.91 k allocations: 1.197 MiB, 99.44% compilation time)
Running: simpsons_rule
  0.000038 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024322 seconds (463 allocations: 22.578 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.011773 seconds (171 allocations: 7.859 KiB, 99.25% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.647337 seconds (209.94 M allocations: 3.138 GiB, 1.75% gc time, 0.56% compilation time)
Running: chebyshev_quadrature with k=1
  0.271548 seconds (423.04 k allocations: 23.684 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
 14.164682 seconds (478.60 k allocations: 4.041 GiB, 2.64% gc time, 1.91% compilation time)
Running: chebyshev_quadrature with k=3
  6.344912 seconds (254.26 k allocations: 1.642 GiB, 3.31% gc time, 2.13% compilation time)
Running: chebyshev_quadrature with k=4
  8.938528 seconds (254.25 k allocations: 2.261 GiB, 1.84% gc time, 1.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.329076 seconds (493.08 k allocations: 13.255 GiB, 6.05% gc time, 6.65% compilation time)
Running: legendre_quadrature.
  7.781988 seconds (228.95 k allocations: 1.976 GiB, 1.06% gc time, 6.21% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.528998 seconds (8.24 M allocations: 13.384 GiB, 9.45% gc time, 0.57% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.542934 seconds (7.24 M allocations: 13.369 GiB, 17.05% gc time, 0.60% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.159186 seconds (22.88 k allocations: 1.394 MiB, 0.25% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.390929 seconds (31.46 k allocations: 1.956 MiB, 1.27% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.895156 seconds (23.09 k allocations: 1.403 MiB, 0.25% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.496034 seconds (448.73 k allocations: 153.519 MiB, 1.63% gc time, 11.91% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 22.844281 seconds (200.04 M allocations: 2.983 GiB, 2.05% gc time, 0.15% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.206449 seconds (600.05 M allocations: 8.944 GiB, 5.27% gc time, 0.16% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.068822 seconds (600.03 M allocations: 8.943 GiB, 3.56% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.038342 seconds (111.10 k allocations: 4.245 MiB, 94.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.169280 seconds (252.71 k allocations: 13.877 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.131707 seconds (277.25 k allocations: 14.964 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.201981 seconds (224.24 k allocations: 11.980 MiB, 43.17% gc time, 99.43% compilation time)
Running: chebyshev_quadrature with k=4
  0.112105 seconds (224.24 k allocations: 11.976 MiB, 99.02% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.225060 seconds (394.78 k allocations: 35.536 MiB, 84.15% compilation time)
Running: laguerre_quadrature with k=2
  0.108341 seconds (185.19 k allocations: 10.841 MiB, 76.78% compilation time)
Running: legendre_quadrature
  0.065089 seconds (149.17 k allocations: 8.338 MiB, 99.74% compilation time)
Running: lobatto_quadrature
  0.017024 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017342 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.025535 seconds (19.35 k allocations: 1.157 MiB, 67.03% compilation time)
Running: rectangle_rule_midpoint
  0.020993 seconds (26.33 k allocations: 1.636 MiB, 71.62% compilation time)
Running: rectangle_rule_right
  0.023150 seconds (17.96 k allocations: 1.084 MiB, 60.38% compilation time)
Running: rombergs_method
  0.154878 seconds (176.03 k allocations: 10.166 MiB, 98.45% compilation time)
Running: simpsons_rule
  0.000269 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.028348 seconds (80.36 k allocations: 3.491 MiB, 97.84% compilation time)
Running: trapezoidal_rule
  0.074919 seconds (2.39 M allocations: 37.744 MiB, 32.67% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000426 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.076948 seconds (2.46 k allocations: 1.691 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.073999 seconds (2.71 k allocations: 2.355 MiB, 96.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.069085 seconds (2.31 k allocations: 2.028 MiB, 96.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.068359 seconds (2.31 k allocations: 1.469 MiB, 97.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.579965 seconds (371.61 k allocations: 905.356 MiB, 2.86% gc time, 4.73% compilation time)
Running: legendre_quadrature
  0.048334 seconds (1.27 k allocations: 68.203 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000147 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000102 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.047367 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000203 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.799121 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.039490 seconds (993 allocations: 56.609 KiB, 99.56% compilation time)
Running: simpsons_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000019 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000539 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000085 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.067705 seconds (2.53 k allocations: 579.203 KiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.070735 seconds (2.79 k allocations: 780.188 KiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.069082 seconds (2.39 k allocations: 661.047 KiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.058791 seconds (2.39 k allocations: 491.547 KiB, 99.32% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.090283 seconds (378.17 k allocations: 253.436 MiB, 24.24% compilation time)
Running: legendre_quadrature
  0.043246 seconds (1.32 k allocations: 67.859 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000058 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000028 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.675822 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000110 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.611600 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.041307 seconds (1.21 k allocations: 64.875 KiB, 99.68% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000004 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000206 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-27T05:20:39.221
