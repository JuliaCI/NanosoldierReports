Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed Parsers ──────────── v1.0.11
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_PxsyIZ/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_PxsyIZ/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(48, 0.0072627068f0), Item(35, 0.037979245f0), Item(30, 0.081065536f0), Item(43, 0.1346823f0)])
Vsorted = Item[Item(48, 0.0072627068f0), Item(35, 0.037979245f0), Item(30, 0.081065536f0), Item(43, 0.1346823f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00386200745900472, 0.00419926643371582, 301.0, 50.60261072590947))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003714140256245931, 0.00543210506439209, 301.0, 73.38968300819397))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0036466042200724285, 0.004566462834676107, 301.0, 41.33559203147888))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00370943546295166, 0.004874865214029948, 301.0, 9.301207096665166))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0034077644348144533, 0.0043727636337280275, 301.0, 45.93068618327379))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.9807955423990886e-5, 2.5733311971028647e-5, 301.0, 181.28274478018284))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 2.288023630777995e-5, 0.008407298723856609, 300.0, 27.803908629342914)
p = PerformanceResult(1.0, 1.0, 1.0, 3.215471903483073e-5, 1.79290771484375e-5, 300.0, 27.803908629342914)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003034377098083496, 0.0026949405670166015, 300.0, 1.5427933446044335)
p = PerformanceResult(1.0, 1.0, 1.0, 3.0575858222113714e-5, 1.4964739481608073e-5, 300.0, 1.5427933446044335)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 2.288023630777995e-5, 0.008407298723856609, 300.0, 27.803908629342914), PerformanceResult(1.0, 1.0, 1.0, 3.215471903483073e-5, 1.79290771484375e-5, 300.0, 27.803908629342914), PerformanceResult(1.0, 1.0, 1.0, 0.003034377098083496, 0.0026949405670166015, 300.0, 1.5427933446044335), PerformanceResult(1.0, 1.0, 1.0, 3.0575858222113714e-5, 1.4964739481608073e-5, 300.0, 1.5427933446044335))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 123.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007719365755716959, 0.0033140659332275392, 347.1333333333333, 28618.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.005977900822957357, 0.0026912689208984375, 303.0, 6943.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6069412231445314e-5, 7.764498392740886e-6, 93.16666666666667, 50.71436878666282))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0774205525716147e-5, 6.1353047688802086e-6, 83.76666666666667, 73.46623706817627))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5584627787272134e-5, 7.033348083496094e-6, 88.16666666666667, 41.41335344314575))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.6520093282063802e-5, 6.1798095703125e-5, 94.4, 46.03926581889391))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8, 0.8, 0.8, 1.3915697733561198e-5, 1.5234947204589843e-5, 69.63333333333334, 190.40938146412373))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-12T05:35:22.364
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9099999999999998, 0.9089999999999999, 0.9094736842105262, 1.8012523651123046e-5, 1.8050670623779295e-5, 153.88, 49.62162963137962))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.565694808959961e-5, 1.2578964233398437e-5, 157.5, 0.0))
*** advance 1 from 1000; 2020-10-12T05:35:22.958
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9070833333333332, 0.903, 0.9048538011695907, 1.6045570373535156e-5, 1.3971328735351563e-5, 154.52, 74.17030685395002))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.469135284423828e-5, 9.729862213134766e-6, 158.24, 0.0))
*** advance 1 from 1000; 2020-10-12T05:35:23.524
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9157500000000001, 0.909, 0.9117222222222223, 1.645803451538086e-5, 1.7640590667724608e-5, 154.51, 39.24887381121516))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.814842224121094e-5, 1.4748573303222656e-5, 157.93, 0.0))
*** advance 1 from 1000; 2020-10-12T05:35:24.046
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9075000000000003, 0.9060000000000002, 0.906666666666667, 5.037546157836914e-5, 0.00025352001190185545, 154.03, 44.547269539674744))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.9834976196289065e-5, 0.00026550054550170896, 157.56, 0.0))
*** advance 1 from 1000; 2020-10-12T05:35:24.490
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9630000000000003, 0.9630000000000003, 0.9630000000000003, 2.657890319824219e-5, 7.781028747558594e-5, 168.23, 187.2779941521585))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 7.416009902954102e-5, 7.123947143554688e-5, 173.05, 0.0))
*** advance 1 from 1000; 2020-10-12T05:35:25.302
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9099999999999998, 0.9089999999999999, 0.9094736842105262, 2.1126270294189453e-5, 4.614830017089844e-5, 153.88, 49.63117066421546))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.965761184692383e-5, 4.608869552612305e-5, 157.5, 0.015518112224526703))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:27.078
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.742, 0.742, 0.742, 0.0016477394104003906, 5.3369998931884764e-5, 199.88, 188.10000187158585))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:28.162
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.747, 0.747, 0.747, 0.0014797282218933106, 6.30497932434082e-5, 202.3, 107.81270069628954))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:28.947
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.608, 0.608, NaN, 0.001446080207824707, 6.217002868652344e-5, 268.29, 4.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:29.944
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9480000000000003, 0.9480000000000003, 0.9480000000000003, 0.0013865399360656738, 1.271963119506836e-5, 220.76, 599.6000205725431))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:30.799
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6050000000000003, 0.6050000000000003, 0.6050000000000003, 0.0013965415954589845, 0.0005071783065795899, 256.62, 2324.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:31.612
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37699999999999984, 0.37699999999999984, NaN, 0.001430661678314209, 0.00035778999328613283, 249.32, 3650.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:35:32.466
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.593, 0.593, 0.593, 0.0012550926208496093, 2.1181106567382813e-5, 248.4, 2385.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.037837837837838, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.671875,"distances_sum":558.5158435702324}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.037837837837838,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.671875,"distances_sum":558.5158435702324}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.037837837837838,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.671875,"distances_sum":558.5158435702324}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.037837837837838,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.671875,"distances_sum":558.5158435702324}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.747380033094319, conf: {"restarts":11}, perf: {"precision":0.912326388888888,"recall":0.912326388888888,"f1":0.912326388888888,"seconds":1.759268343448639e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":56.65625,"distances_sum":282.74156847503036}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8346604893586216, conf: {"restarts":9}, perf: {"precision":0.9010416666666656,"recall":0.9010416666666656,"f1":0.9010416666666656,"seconds":3.0510127544403076e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":53.9609375,"distances_sum":283.7299650153145}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8906249999999987, conf: {"restarts":5}, perf: {"precision":0.8906249999999987,"recall":0.8906249999999987,"f1":0.8906249999999987,"seconds":1.3319775462150574e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":43.9921875,"distances_sum":283.9336571088061}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8346604893586216,"state":{"restarts":9},"perf":{"precision":0.9010416666666656,"recall":0.9010416666666656,"f1":0.9010416666666656,"seconds":3.0510127544403076e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":53.9609375,"distances_sum":283.7299650153145}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.99057492931197, conf: {"restarts":8}, perf: {"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":2.178177237510681e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":49.734375,"distances_sum":283.3258774271235}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.99057492931197,"state":{"restarts":8},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":2.178177237510681e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":49.734375,"distances_sum":283.3258774271235}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.99057492931197,"state":{"restarts":8},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":2.178177237510681e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":49.734375,"distances_sum":283.3258774271235}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.99057492931197,"state":{"restarts":8},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":2.178177237510681e-5,"exhaustive_search_seconds":4.664063453674316e-6,"evaluations":49.734375,"distances_sum":283.3258774271235}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":9}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":null,"seconds":2.841651439666748e-5,"exhaustive_search_seconds":1.8795952200889587e-5,"evaluations":119.25,"distances_sum":125.27155079413205}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222209, conf: {"restarts":6}, perf: {"precision":0.8628472222222209,"recall":0.8628472222222209,"f1":0.8628472222222209,"seconds":2.420879900455475e-5,"exhaustive_search_seconds":1.8795952200889587e-5,"evaluations":101.2265625,"distances_sum":124.32738397736102}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555545, conf: {"restarts":18}, perf: {"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":4.311464726924896e-5,"exhaustive_search_seconds":1.8795952200889587e-5,"evaluations":175.4609375,"distances_sum":123.95406404230744}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555545,"state":{"restarts":18},"perf":{"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":4.311464726924896e-5,"exhaustive_search_seconds":1.8795952200889587e-5,"evaluations":175.4609375,"distances_sum":123.95406404230744}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8680555555555545,"state":{"restarts":18},"perf":{"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":4.311464726924896e-5,"exhaustive_search_seconds":1.8795952200889587e-5,"evaluations":175.4609375,"distances_sum":123.95406404230744}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999991, conf: {"restarts":26}, perf: {"precision":0.8515624999999991,"recall":0.8515624999999991,"f1":0.8515624999999991,"seconds":0.0001254510134458542,"exhaustive_search_seconds":0.00021417997777462006,"evaluations":346.1796875,"distances_sum":56.5816889074631}, best_list's length: 2, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999991,"state":{"restarts":26},"perf":{"precision":0.8515624999999991,"recall":0.8515624999999991,"f1":0.8515624999999991,"seconds":0.0001254510134458542,"exhaustive_search_seconds":0.00021417997777462006,"evaluations":346.1796875,"distances_sum":56.5816889074631}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8515624999999991,"state":{"restarts":26},"perf":{"precision":0.8515624999999991,"recall":0.8515624999999991,"f1":0.8515624999999991,"seconds":0.0001254510134458542,"exhaustive_search_seconds":0.00021417997777462006,"evaluations":346.1796875,"distances_sum":56.5816889074631}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(26), SatNeighborhood(32), 2020-10-12T05:35:38.441
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9128, 0.029082479f0), Item(1906, 0.030568745f0), Item(5376, 0.035521675f0), Item(8495, 0.037066773f0), Item(9961, 0.040720344f0), Item(8767, 0.04170228f0), Item(940, 0.042675696f0), Item(9545, 0.04373426f0), Item(9601, 0.051777616f0), Item(183, 0.05846622f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.072625698324022, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570741758241764,"seconds":3.777444362640381e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.390625,"distances_sum":527.3323406279087}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0294906166219837, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285718,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":559.6762946546078}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.097142857142857, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.940713973526474,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.203125,"distances_sum":507.77126552164555}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.097142857142857,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.940713973526474,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.203125,"distances_sum":507.77126552164555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.097142857142857,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.940713973526474,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.203125,"distances_sum":507.77126552164555}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.097142857142857,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.940713973526474,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.203125,"distances_sum":507.77126552164555}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.6378018318068275,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":1.230090856552124e-5,"exhaustive_search_seconds":4.63239848613739e-6,"evaluations":37.53125,"distances_sum":272.9918390121311}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.6378018318068275,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":1.230090856552124e-5,"exhaustive_search_seconds":4.63239848613739e-6,"evaluations":37.53125,"distances_sum":272.9918390121311}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.358193680440067, conf: {"bsize":3}, perf: {"precision":0.9774305555555551,"recall":0.9774305555555551,"f1":0.9774305555555551,"seconds":1.5681609511375427e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":61.0703125,"distances_sum":119.6281564887613}, best_list's length: 3, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.370759185763667, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.6080215573310852e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":61.0234375,"distances_sum":119.23129549436271}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.370759185763667,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.6080215573310852e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":61.0234375,"distances_sum":119.23129549436271}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.80757097791798, conf: {"bsize":4}, perf: {"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":1.5145167708396912e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":59.4375,"distances_sum":119.27380186133087}, best_list's length: 8, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.80757097791798,"state":{"bsize":4},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":1.5145167708396912e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":59.4375,"distances_sum":119.27380186133087}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.80757097791798,"state":{"bsize":4},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":1.5145167708396912e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":59.4375,"distances_sum":119.27380186133087}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.80757097791798,"state":{"bsize":4},"perf":{"precision":0.9947916666666666,"recall":0.9947916666666666,"f1":0.9947916666666666,"seconds":1.5145167708396912e-5,"exhaustive_search_seconds":2.0796433091163635e-5,"evaluations":59.4375,"distances_sum":119.27380186133087}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.5484882418813, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.197470843791962e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":104.6484375,"distances_sum":53.451537588611245}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.93939393939394, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.285387694835663e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":102.09375,"distances_sum":53.451537588611245}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.03692072003064, conf: {"bsize":5}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.76837158203125e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":101.9921875,"distances_sum":53.451537588611245}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.03692072003064,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.76837158203125e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":101.9921875,"distances_sum":53.451537588611245}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.03692072003064,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.76837158203125e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":101.9921875,"distances_sum":53.451537588611245}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.03692072003064,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.76837158203125e-5,"exhaustive_search_seconds":0.00019960850477218628,"evaluations":101.9921875,"distances_sum":53.451537588611245}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-10-12T05:35:41.861
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1995, 0.04104627f0), Item(1998, 0.044013415f0), Item(7635, 0.045292526f0), Item(5533, 0.050549112f0), Item(7179, 0.055554092f0), Item(5551, 0.059363343f0), Item(3244, 0.06271135f0), Item(861, 0.0647172f0), Item(6835, 0.06479664f0), Item(1448, 0.06771105f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
