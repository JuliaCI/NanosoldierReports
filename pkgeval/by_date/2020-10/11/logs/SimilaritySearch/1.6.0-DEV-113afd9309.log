Julia Version 1.6.0-DEV.1177
Commit 113afd9309 (2020-10-10 16:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.11
  Installed StatsBase ────────── v0.32.2
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_zB4IBY/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_zB4IBY/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(11, 0.036267996f0), Item(49, 0.040685892f0), Item(18, 0.045472383f0), Item(22, 0.051761746f0)])
Vsorted = Item[Item(11, 0.036267996f0), Item(49, 0.040685892f0), Item(18, 0.045472383f0), Item(22, 0.051761746f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033992926279703775, 0.004008197784423828, 301.0, 49.5966223962605))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0036562283833821616, 0.0035181045532226562, 301.0, 72.5688898563385))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038061936696370444, 0.004045597712198893, 301.0, 40.248127579689026))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003871019681294759, 0.003602933883666992, 301.0, 9.189147249853704))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0035202662150065106, 0.004659231503804525, 301.0, 44.88638714328408))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.47137451171875e-5, 2.1465619405110677e-5, 301.0, 178.43985875695944))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.512700398763021e-5, 0.009238664309183757, 300.0, 27.614380281767808)
p = PerformanceResult(1.0, 1.0, 1.0, 3.541310628255208e-5, 2.0631154378255208e-5, 300.0, 27.614380281767808)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003237191836039225, 0.002854029337565104, 300.0, 1.589889513994649)
p = PerformanceResult(1.0, 1.0, 1.0, 2.506573994954427e-5, 1.3367335001627605e-5, 300.0, 1.589889513994649)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.512700398763021e-5, 0.009238664309183757, 300.0, 27.614380281767808), PerformanceResult(1.0, 1.0, 1.0, 3.541310628255208e-5, 2.0631154378255208e-5, 300.0, 27.614380281767808), PerformanceResult(1.0, 1.0, 1.0, 0.003237191836039225, 0.002854029337565104, 300.0, 1.589889513994649), PerformanceResult(1.0, 1.0, 1.0, 2.506573994954427e-5, 1.3367335001627605e-5, 300.0, 1.589889513994649))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 129.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007469979921976725, 0.0036525328954060874, 346.5, 28656.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006681418418884278, 0.0031690677007039387, 302.8, 6977.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7746289571126303e-5, 8.265177408854166e-6, 95.4, 49.494286362081766))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6450881958007812e-5, 5.9604644775390625e-6, 86.96666666666667, 72.4345897436142))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.831849416097005e-5, 9.799003601074219e-6, 90.03333333333333, 40.05560004711151))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.237724304199219e-5, 6.384054819742838e-5, 95.2, 44.75135290250182))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7733333333333333, 0.7733333333333333, 0.7733333333333333, 1.8644332885742188e-5, 2.5463104248046874e-5, 71.33333333333333, 189.68236189335585))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-12T05:53:25.408
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9111388888888889, 0.907, 0.9088654970760234, 1.5871524810791014e-5, 1.5811920166015623e-5, 151.76, 51.03737870184705))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5473365783691408e-5, 1.2090206146240235e-5, 155.83, 0.0))
*** advance 1 from 1000; 2020-10-12T05:53:25.971
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8889523809523808, 0.8809999999999999, 0.8843157894736842, 1.5947818756103516e-5, 1.44195556640625e-5, 152.24, 76.7914264537394))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5442371368408202e-5, 1.0771751403808594e-5, 156.38, 0.0))
*** advance 1 from 1000; 2020-10-12T05:53:26.535
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8736666666666667, 0.872, 0.8727894736842106, 1.7321109771728517e-5, 2.2568702697753905e-5, 152.24, 41.9844259172678))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8584728240966798e-5, 1.9121170043945313e-5, 156.29, 0.0))
*** advance 1 from 1000; 2020-10-12T05:53:27.062
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8930000000000001, 0.8930000000000001, 0.8930000000000001, 4.355192184448242e-5, 0.0001979207992553711, 151.86, 46.72360901499633))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.4522285461425783e-5, 0.00020866870880126954, 155.96, 0.0))
*** advance 1 from 1000; 2020-10-12T05:53:27.418
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.96, 0.96, 0.96, 2.582550048828125e-5, 6.808042526245117e-5, 168.08, 197.4679684904404))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.737998962402344e-5, 7.490873336791992e-5, 173.84, 0.0))
*** advance 1 from 1000; 2020-10-12T05:53:28.156
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9111388888888889, 0.907, 0.9088654970760234, 1.6353130340576173e-5, 2.99382209777832e-5, 151.76, 51.0467665346805))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9969940185546876e-5, 4.8820972442626956e-5, 155.83, 0.010002578725107014))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:29.907
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7350000000000001, 0.7350000000000001, 0.7350000000000001, 0.0014317131042480469, 6.820917129516601e-5, 198.88, 202.05000221729279))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:30.791
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.755, 0.755, 0.755, 0.0014286041259765625, 5.9840679168701174e-5, 205.21, 114.98174855858088))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:31.528
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6329999999999999, 0.6329999999999999, 0.6329999999999999, 0.0015465378761291503, 6.34598731994629e-5, 241.22, 3.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:32.289
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9660000000000002, 0.9660000000000002, 0.9660000000000002, 0.0014501714706420899, 9.961128234863282e-6, 221.69, 600.6000211983919))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:33.149
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5739999999999998, 0.5739999999999998, 0.5739999999999998, 0.0013524222373962403, 0.00036040067672729495, 251.98, 2349.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:33.931
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37699999999999995, 0.37699999999999995, NaN, 0.0014926791191101074, 0.0003541684150695801, 249.88, 3664.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T05:53:34.707
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5899999999999997, 0.5899999999999997, 0.5899999999999997, 0.0013927245140075684, 1.935005187988281e-5, 240.82, 2363.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0539798719121682, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692311,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.5390625,"distances_sum":572.1598233878613}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0539798719121682,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692311,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.5390625,"distances_sum":572.1598233878613}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.084745762711864, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9517513736263744,"seconds":3.084540367126465e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.296875,"distances_sum":549.6545196473598}, best_list's length: 6, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.084745762711864,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9517513736263744,"seconds":3.084540367126465e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.296875,"distances_sum":549.6545196473598}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0857681432610744, conf: {"restarts":2}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.950789835164836,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.2890625,"distances_sum":547.3525644540787}, best_list's length: 7, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0857681432610744,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.950789835164836,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.2890625,"distances_sum":547.3525644540787}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0857681432610744,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.950789835164836,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.2890625,"distances_sum":547.3525644540787}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8897569444444432, conf: {"restarts":8}, perf: {"precision":0.8897569444444432,"recall":0.8897569444444432,"f1":0.8897569444444432,"seconds":1.494772732257843e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":51.2890625,"distances_sum":280.59864139929414}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8845486111111102, conf: {"restarts":7}, perf: {"precision":0.8845486111111102,"recall":0.8845486111111102,"f1":0.8845486111111102,"seconds":1.5331432223320007e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":49.5,"distances_sum":280.6151298619807}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8897569444444432,"state":{"restarts":8},"perf":{"precision":0.8897569444444432,"recall":0.8897569444444432,"f1":0.8897569444444432,"seconds":1.494772732257843e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":51.2890625,"distances_sum":280.59864139929414}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5623227715448156, conf: {"restarts":15}, perf: {"precision":0.9149305555555544,"recall":0.9149305555555544,"f1":0.9149305555555544,"seconds":2.0001083612442017e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":63.3671875,"distances_sum":277.90601681545377}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.692985971943888, conf: {"restarts":12}, perf: {"precision":0.914062499999999,"recall":0.914062499999999,"f1":0.914062499999999,"seconds":1.895800232887268e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":58.4765625,"distances_sum":278.0542749799788}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.692985971943888,"state":{"restarts":12},"perf":{"precision":0.914062499999999,"recall":0.914062499999999,"f1":0.914062499999999,"seconds":1.895800232887268e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":58.4765625,"distances_sum":278.0542749799788}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.692985971943888,"state":{"restarts":12},"perf":{"precision":0.914062499999999,"recall":0.914062499999999,"f1":0.914062499999999,"seconds":1.895800232887268e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":58.4765625,"distances_sum":278.0542749799788}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.692985971943888,"state":{"restarts":12},"perf":{"precision":0.914062499999999,"recall":0.914062499999999,"f1":0.914062499999999,"seconds":1.895800232887268e-5,"exhaustive_search_seconds":5.062669515609741e-6,"evaluations":58.4765625,"distances_sum":278.0542749799788}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8611111111111098,"state":{"restarts":12},"perf":{"precision":0.8611111111111098,"recall":0.8611111111111098,"f1":0.8611111111111098,"seconds":3.890693187713623e-5,"exhaustive_search_seconds":1.9008293747901917e-5,"evaluations":141.4140625,"distances_sum":125.3098044032231}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8611111111111098,"state":{"restarts":12},"perf":{"precision":0.8611111111111098,"recall":0.8611111111111098,"f1":0.8611111111111098,"seconds":3.890693187713623e-5,"exhaustive_search_seconds":1.9008293747901917e-5,"evaluations":141.4140625,"distances_sum":125.3098044032231}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666655, conf: {"restarts":1}, perf: {"precision":0.8385416666666655,"recall":0.8385416666666655,"f1":0.8385416666666655,"seconds":4.936009645462036e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":130.9375,"distances_sum":57.61199127137661}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777768, conf: {"restarts":7}, perf: {"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":7.057562470436096e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":194.7734375,"distances_sum":57.159421944990754}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444433, conf: {"restarts":16}, perf: {"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":9.124726057052612e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":256.7109375,"distances_sum":57.286058040335774}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8585069444444433,"state":{"restarts":16},"perf":{"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":9.124726057052612e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":256.7109375,"distances_sum":57.286058040335774}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8585069444444433,"state":{"restarts":16},"perf":{"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":9.124726057052612e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":256.7109375,"distances_sum":57.286058040335774}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8585069444444433,"state":{"restarts":16},"perf":{"precision":0.8585069444444433,"recall":0.8585069444444433,"f1":0.8585069444444433,"seconds":9.124726057052612e-5,"exhaustive_search_seconds":0.00021705403923988342,"evaluations":256.7109375,"distances_sum":57.286058040335774}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(16), SatNeighborhood(32), 2020-10-12T05:53:40.602
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(202, 0.030498749f0), Item(6482, 0.034340993f0), Item(7603, 0.042219605f0), Item(9923, 0.04587947f0), Item(1817, 0.046860125f0), Item(1537, 0.05727625f0), Item(1157, 0.061617408f0), Item(5191, 0.062773876f0), Item(6275, 0.06353341f0), Item(1983, 0.065845f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.052054794520548, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9666531385281389,"seconds":4.284083843231201e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.5546875,"distances_sum":579.3860190808773}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.087818696883853, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9433160589410592,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.2734375,"distances_sum":550.9664141535759}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.094017094017094, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9425485972360977,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.2265625,"distances_sum":547.9566784501076}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9425485972360977,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.2265625,"distances_sum":547.9566784501076}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9425485972360977,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.2265625,"distances_sum":547.9566784501076}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.094017094017094,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9425485972360977,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.2265625,"distances_sum":547.9566784501076}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.5574167507568113, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":1.3504177331924438e-5,"exhaustive_search_seconds":4.7031790018081665e-6,"evaluations":38.7109375,"distances_sum":281.15848226472735}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.222787385554425, conf: {"bsize":2}, perf: {"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4059245586395264e-5,"exhaustive_search_seconds":4.7031790018081665e-6,"evaluations":30.71875,"distances_sum":284.8500186316669}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.222787385554425,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4059245586395264e-5,"exhaustive_search_seconds":4.7031790018081665e-6,"evaluations":30.71875,"distances_sum":284.8500186316669}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.222787385554425,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4059245586395264e-5,"exhaustive_search_seconds":4.7031790018081665e-6,"evaluations":30.71875,"distances_sum":284.8500186316669}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.222787385554425,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4059245586395264e-5,"exhaustive_search_seconds":4.7031790018081665e-6,"evaluations":30.71875,"distances_sum":284.8500186316669}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 18.24271844660194, conf: {"bsize":4}, perf: {"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":1.3504177331924438e-5,"exhaustive_search_seconds":1.917034387588501e-5,"evaluations":57.9375,"distances_sum":121.59203669801354}, best_list's length: 3, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.24271844660194,"state":{"bsize":4},"perf":{"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":1.3504177331924438e-5,"exhaustive_search_seconds":1.917034387588501e-5,"evaluations":57.9375,"distances_sum":121.59203669801354}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.24271844660194,"state":{"bsize":4},"perf":{"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":1.3504177331924438e-5,"exhaustive_search_seconds":1.917034387588501e-5,"evaluations":57.9375,"distances_sum":121.59203669801354}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.24271844660194,"state":{"bsize":4},"perf":{"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":1.3504177331924438e-5,"exhaustive_search_seconds":1.917034387588501e-5,"evaluations":57.9375,"distances_sum":121.59203669801354}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.8794738452126, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.553981125354767e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":102.15625,"distances_sum":54.73462887806818}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.33018867924528, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.485808312892914e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":106.0,"distances_sum":54.73365207342431}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.8794738452126,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.553981125354767e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":102.15625,"distances_sum":54.73462887806818}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.52748267898383, conf: {"bsize":3}, perf: {"precision":0.9765624999999993,"recall":0.9765624999999993,"f1":0.9765624999999993,"seconds":4.0786340832710266e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":101.484375,"distances_sum":54.92053215159103}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.52748267898383,"state":{"bsize":3},"perf":{"precision":0.9765624999999993,"recall":0.9765624999999993,"f1":0.9765624999999993,"seconds":4.0786340832710266e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":101.484375,"distances_sum":54.92053215159103}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.52748267898383,"state":{"bsize":3},"perf":{"precision":0.9765624999999993,"recall":0.9765624999999993,"f1":0.9765624999999993,"seconds":4.0786340832710266e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":101.484375,"distances_sum":54.92053215159103}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.52748267898383,"state":{"bsize":3},"perf":{"precision":0.9765624999999993,"recall":0.9765624999999993,"f1":0.9765624999999993,"seconds":4.0786340832710266e-5,"exhaustive_search_seconds":0.00018614716827869415,"evaluations":101.484375,"distances_sum":54.92053215159103}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(3), SatNeighborhood(32), 2020-10-12T05:53:43.981
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2804, 0.03553263f0), Item(6480, 0.038728353f0), Item(2717, 0.04100948f0), Item(8866, 0.04300387f0), Item(230, 0.044945255f0), Item(7814, 0.04859685f0), Item(7708, 0.05013749f0), Item(9364, 0.051848605f0), Item(2753, 0.052611772f0), Item(4411, 0.054218903f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
