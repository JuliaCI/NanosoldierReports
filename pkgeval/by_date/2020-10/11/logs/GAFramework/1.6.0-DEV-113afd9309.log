Julia Version 1.6.0-DEV.1177
Commit 113afd9309 (2020-10-10 16:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_NmEiAZ/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_NmEiAZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721727932575172
curgen: 20 fitness: 0.2172327888717051
curgen: 30 fitness: 0.2172327888717051
curgen: 40 fitness: 0.2172327888717051
curgen: 50 fitness: 0.2172327888717051
CoordinateCreature{Vector{Float64}}([0.2224105359760962], -0.2172327888717051) 0.2224105359760962 -0.2172327888717051
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258108261480369
curgen: 100 fitness: 3.258180866336086
curgen: 150 fitness: 3.2583238704884856
curgen: 200 fitness: 3.2583466526594576
curgen: 250 fitness: 3.258348151723607
curgen: 300 fitness: 3.258348151723607
curgen: 350 fitness: 3.2583603275259785
curgen: 400 fitness: 3.258427889549866
curgen: 450 fitness: 3.2584699213432233
curgen: 500 fitness: 3.2584699213432233
CoordinateCreature{Vector{Float64}}([0.22248359382530863, 0.22271791211795328, 0.22240427946702504, -0.22265980971005309, 0.22255318018919953, -0.2222272027860275, 0.22257131935540694, -0.22248891419356054, 0.22241535235733315, -0.22265285059869713, -0.22317160373472436, 0.2228334461126034, 0.22260650276062344, -0.2227971489637364, 0.2223400221278392], -3.2584699213432233) [0.22248359382530863, 0.22271791211795328, 0.22240427946702504, -0.22265980971005309, 0.22255318018919953, -0.2222272027860275, 0.22257131935540694, -0.22248891419356054, 0.22241535235733315, -0.22265285059869713, -0.22317160373472436, 0.2228334461126034, 0.22260650276062344, -0.2227971489637364, 0.2223400221278392] -3.2584699213432233
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031613725771819645
curgen: 100 fitness: -0.002902255343485649
curgen: 150 fitness: -0.002902255343485649
curgen: 200 fitness: -0.0021260845869619516
curgen: 250 fitness: -0.0020951131847937177
curgen: 300 fitness: -0.0014711898817552083
curgen: 350 fitness: -0.0013884837661350957
curgen: 400 fitness: -0.0010035907721430704
curgen: 450 fitness: -0.001002198013566158
curgen: 500 fitness: -0.0009293108212489187
CoordinateCreature{Vector{Float64}}([0.00020098121451539788, 0.0005553382115293052, -0.0003873245287723051, 0.0008209258809988167, -0.00018154690130706792, 0.0015915896674226337, 0.00032705032474245055, -1.2159598387931521e-5, 0.00021890053105361963, 0.00029988156032202846, 0.0005994578566162437, 7.027281307363627e-5, -0.0004062462536107538, -0.00027867816894392653, 0.00030568680593024756], 0.0009293108212489187) [0.00020098121451539788, 0.0005553382115293052, -0.0003873245287723051, 0.0008209258809988167, -0.00018154690130706792, 0.0015915896674226337, 0.00032705032474245055, -1.2159598387931521e-5, 0.00021890053105361963, 0.00029988156032202846, 0.0005994578566162437, 7.027281307363627e-5, -0.0004062462536107538, -0.00027867816894392653, 0.00030568680593024756] 0.0009293108212489187
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
