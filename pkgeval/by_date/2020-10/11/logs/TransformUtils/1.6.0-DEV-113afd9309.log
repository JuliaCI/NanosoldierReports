Julia Version 1.6.0-DEV.1177
Commit 113afd9309 (2020-10-10 16:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ZW6NCZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ZW6NCZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.05982199167463025 0.050923723571868376; -0.05982199167463025 0.0 0.18679193907219288; -0.050923723571868376 -0.18679193907219288 0.0])
dAA = so3([0.0 0.006260698086937759 -0.01993710386398836; -0.006260698086937759 0.0 0.10206752744374448; 0.01993710386398836 -0.10206752744374448 0.0])
dAA = so3([0.0 0.07802422359084185 0.1356093762605345; -0.07802422359084185 0.0 0.024592091970971126; -0.1356093762605345 -0.024592091970971126 0.0])
dAA = Quaternion(0.993540157733887, [-0.10097055301458414, 0.012411571561035156, -0.05028772499763236])
dAA = SO3([0.9912560137644391 0.12932751486401928 -0.02618986588226417; -0.13078377042676026 0.9892888816808842 -0.06483142737551094; 0.01752485574247549 0.06768975167396139 0.9975524933303124])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9986430584703907 0.021798664003567145 -0.0472954545021327; -0.009152084827539469 0.9675062722005725 0.25268132617164507; 0.05126676420658164 -0.25190560037484544 0.9663929259817537]), [-1.8679193907219287, 0.5092372357186837, -0.5982199167463025])
xj = SE3(SO3([0.9673320053796246 0.2338953346795305 0.09778427165645946; -0.25183548506836706 0.8422737213496192 0.4766066163873981; 0.029114941672860793 -0.4856623834918807 0.8736614730159339]), [-0.24592091970971125, 1.3560937626053449, -0.7802422359084185])
Dx = SE3(SO3([0.9698168409801661 0.2009710529420383 0.13807943666824488; -0.22990008286313204 0.9423447884211553 0.24317123932532175; -0.0812480575200192 -0.26757603707143957 0.9601051075451934]), [1.6027153158382967, 0.9005488426908868, -0.038633406206513954])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
