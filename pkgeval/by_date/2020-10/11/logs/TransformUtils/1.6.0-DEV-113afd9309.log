Julia Version 1.6.0-DEV.1177
Commit 113afd9309 (2020-10-10 16:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Zyp9ie/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Zyp9ie/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0029228597153027024 -0.06503396044545849; 0.0029228597153027024 0.0 0.01521664046803665; 0.06503396044545849 -0.01521664046803665 0.0])
dAA = so3([0.0 -0.004639268503783523 -0.0166542055174724; 0.004639268503783523 0.0 0.05197673120052814; 0.0166542055174724 -0.05197673120052814 0.0])
dAA = so3([0.0 0.07771735967771855 0.018020700101679756; -0.07771735967771855 0.0 -0.22418949880142003; -0.018020700101679756 0.22418949880142003 0.0])
dAA = Quaternion(0.9877889310661301, [0.08164052802105541, -0.08641426637328536, 0.10069968428372919])
dAA = SO3([0.9886886313607796 0.1480258393599478 -0.02414831463542189; -0.13912791472772523 0.9653060405229655 0.22096984290483992; 0.05601976045524662 -0.21511066689417743 0.9749816344049148])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9990674419230954 -0.00886108266267602 -0.0422578714949971; 0.014262827975748385 0.9915035920380155 0.1292950065309818; 0.04075313763842822 -0.12977714818009234 0.9907053414526772]), [-0.1521664046803665, -0.6503396044545848, 0.02922859715302702])
xj = SE3(SO3([0.7878372491762811 -0.5111179166677543 -0.3436145283185286; 0.3463512098478891 0.8290252269723044 -0.43904215342085606; 0.5092674231160421 0.22688245481908387 0.8301632631284117]), [2.2418949880142, 0.18020700101679754, -0.7771735967771854])
Dx = SE3(SO3([0.8127967383005439 -0.48957085341746687 -0.3157243127985083; 0.27033610384818385 0.7970663905846194 -0.5400032962460423; 0.5160231130135365 0.3535612372482315 0.7802016395466743]), [2.3708113151647154, 0.906928543794101, -0.7926893707907328])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
