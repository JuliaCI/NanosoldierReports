Julia Version 1.6.0-DEV.1240
Commit 47d6067ffe (2020-10-15 19:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled
    Testing FunctionIntegrator
Status `/tmp/jl_OdoAgX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_OdoAgX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.369144 seconds (294.26 k allocations: 13.890 MiB, 4.72% gc time, 93.89% compilation time)
Running: chebyshev_quadrature with k=1
  1.696737 seconds (2.25 M allocations: 130.577 MiB, 4.04% gc time, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.442532 seconds (417.68 k allocations: 24.229 MiB, 92.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.413918 seconds (483.51 k allocations: 27.390 MiB, 21.53% gc time, 91.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.308382 seconds (427.02 k allocations: 23.923 MiB, 92.76% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 41.854059 seconds (35.48 M allocations: 2.980 GiB, 14.80% gc time, 82.17% compilation time)
Running: laguerre_quadrature with k=1
  2.742349 seconds (3.24 M allocations: 182.161 MiB, 3.75% gc time, 99.88% compilation time)
Running: legendre_quadrature
  0.203400 seconds (211.56 k allocations: 12.253 MiB, 20.32% gc time, 99.19% compilation time)
Running: lobatto_quadrature
  0.278586 seconds (340.21 k allocations: 20.668 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.301035 seconds (462.06 k allocations: 28.346 MiB, 99.29% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.570491 seconds (100.02 M allocations: 1.491 GiB, 0.62% gc time, 0.12% compilation time)
Running: rectangle_rule_midpoint.
  0.099362 seconds (173.35 k allocations: 3.888 MiB, 27.05% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 45.614007 seconds (100.02 M allocations: 1.491 GiB, 0.56% gc time, 0.06% compilation time)
Running: rombergs_method
  0.629271 seconds (741.79 k allocations: 43.179 MiB, 17.56% gc time, 96.62% compilation time)
Running: simpsons_rule
  0.024599 seconds (48.04 k allocations: 2.633 MiB, 91.62% compilation time)
Running: simpsons38_rule
  0.063629 seconds (111.30 k allocations: 5.948 MiB, 96.91% compilation time)
Running: trapezoidal_rule
  0.284498 seconds (1.72 M allocations: 28.723 MiB, 18.44% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.172213 seconds (30.72 k allocations: 1.831 MiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=1
  0.401801 seconds (297.70 k allocations: 15.862 MiB, 3.53% gc time, 99.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.129072 seconds (94.22 k allocations: 2.707 MiB, 97.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.178653 seconds (82.47 k allocations: 2.508 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.163960 seconds (65.08 k allocations: 2.154 MiB, 98.87% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.710515 seconds (511.34 k allocations: 162.426 MiB, 2.32% gc time, 23.43% compilation time)
Running: legendre_quadrature
  0.242392 seconds (42.23 k allocations: 2.454 MiB, 4.99% gc time, 99.88% compilation time)
Running: lobatto_quadrature
  0.019393 seconds (16.21 k allocations: 1.013 MiB, 99.05% compilation time)
Running: radau_quadrature
  0.019462 seconds (16.32 k allocations: 1.020 MiB, 99.09% compilation time)
Running: rectangle_rule_left
 15.425940 seconds (471.41 M allocations: 7.025 GiB, 12.29% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.230862 seconds (476.96 M allocations: 7.107 GiB, 14.10% gc time)
Running: rombergs_method
  0.708024 seconds (334.52 k allocations: 19.169 MiB, 99.53% compilation time)
Running: simpsons_rule
  0.000034 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.064204 seconds (19.43 k allocations: 1.184 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.046391 seconds (16.97 k allocations: 1.034 MiB, 99.76% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.385439 seconds (1.03 k allocations: 34.125 KiB, 99.98% compilation time)
Running: chebyshev_quadrature with k=1
  0.387526 seconds (2.46 k allocations: 116.359 KiB, 25.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.074381 seconds (2.71 k allocations: 124.266 KiB, 97.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.123942 seconds (2.31 k allocations: 109.297 KiB, 58.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.100152 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.260819 seconds (369.80 k allocations: 19.514 MiB, 8.01% gc time, 99.19% compilation time)
Running: legendre_quadrature
  0.047677 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000107 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000315 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000215 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000314 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.048954 seconds (1.04 k allocations: 56.469 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.015257 seconds (923 allocations: 39.281 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.010744 seconds (44.29 k allocations: 702.859 KiB, 92.23% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.036725 seconds (83.49 k allocations: 5.003 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.101815 seconds (235.65 k allocations: 13.386 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.138076 seconds (289.14 k allocations: 16.384 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.101387 seconds (239.80 k allocations: 13.577 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=4
  0.143560 seconds (239.80 k allocations: 13.452 MiB, 12.06% gc time, 98.82% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.851594 seconds (455.41 k allocations: 163.924 MiB, 2.94% gc time, 31.54% compilation time)
Running: legendre_quadrature
  0.176602 seconds (190.36 k allocations: 11.082 MiB, 99.17% compilation time)
Running: lobatto_quadrature
  0.370823 seconds (202.03 k allocations: 11.817 MiB, 3.76% gc time, 85.67% compilation time)
Running: radau_quadrature
  0.715667 seconds (202.03 k allocations: 11.884 MiB, 99.71% compilation time)
Running: rectangle_rule_left
  0.481894 seconds (19.37 k allocations: 1.189 MiB, 4.54% compilation time)
Running: rectangle_rule_midpoint
  0.145185 seconds (25.55 k allocations: 1.616 MiB, 99.45% compilation time)
Running: rectangle_rule_right
  0.487000 seconds (17.90 k allocations: 1.099 MiB, 4.45% compilation time)
Running: rombergs_method
  0.110099 seconds (137.77 k allocations: 8.045 MiB, 96.88% compilation time)
Running: simpsons_rule
  0.017796 seconds (37.98 k allocations: 2.442 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.019399 seconds (43.94 k allocations: 2.785 MiB, 99.20% compilation time)
Running: trapezoidal_rule
  0.013807 seconds (43.20 k allocations: 1.730 MiB, 96.94% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.017709 seconds (68.44 k allocations: 3.060 MiB, 96.67% compilation time)
Running: chebyshev_quadrature with k=1
  0.117699 seconds (242.24 k allocations: 13.467 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.205523 seconds (296.17 k allocations: 16.374 MiB, 6.60% gc time, 96.68% compilation time)
Running: chebyshev_quadrature with k=3
  0.186017 seconds (246.37 k allocations: 13.521 MiB, 98.94% compilation time)
Running: chebyshev_quadrature with k=4
  0.165236 seconds (246.37 k allocations: 13.525 MiB, 98.84% compilation time)
Running: hermite_quadrature with k=2
 17.907771 seconds (20.49 M allocations: 1.088 GiB, 13.87% gc time, 99.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.367857 seconds (464.58 k allocations: 50.130 MiB, 12.72% gc time, 91.59% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.153012 seconds (282.35 k allocations: 15.735 MiB, 97.91% compilation time)
Running: legendre_quadrature
  0.093264 seconds (196.90 k allocations: 11.410 MiB, 97.61% compilation time)
Running: lobatto_quadrature
  0.158387 seconds (222.69 k allocations: 37.618 MiB, 15.99% gc time, 69.91% compilation time)
Running: radau_quadrature
  0.340230 seconds (219.27 k allocations: 30.252 MiB, 65.36% gc time, 95.82% compilation time)
Running: rectangle_rule_left
  0.018936 seconds (22.28 k allocations: 1.333 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.438595 seconds (27.36 k allocations: 1.703 MiB, 99.97% compilation time)
Running: rectangle_rule_right
  0.021535 seconds (19.02 k allocations: 1.153 MiB, 99.25% compilation time)
Running: rombergs_method
  0.147837 seconds (140.11 k allocations: 8.065 MiB, 97.95% compilation time)
Running: simpsons_rule
  0.031327 seconds (45.46 k allocations: 2.710 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.053427 seconds (58.91 k allocations: 3.170 MiB, 99.20% compilation time)
Running: trapezoidal_rule
  0.047099 seconds (29.23 k allocations: 1.655 MiB, 99.38% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.051338 seconds (52.41 k allocations: 2.720 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=1
  0.212530 seconds (237.76 k allocations: 13.249 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.387810 seconds (291.35 k allocations: 16.145 MiB, 13.02% gc time, 99.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.172962 seconds (241.90 k allocations: 13.330 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.216958 seconds (241.91 k allocations: 13.331 MiB, 98.97% compilation time)
Running: hermite_quadrature with k=2
  0.245694 seconds (175.13 k allocations: 10.126 MiB, 8.80% gc time, 99.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 12.758778 seconds (457.85 k allocations: 1.176 GiB, 46.25% gc time, 3.69% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.304909 seconds (277.64 k allocations: 15.547 MiB, 98.92% compilation time)
Running: legendre_quadrature
  0.435598 seconds (192.47 k allocations: 11.194 MiB, 65.68% compilation time)
Running: lobatto_quadrature
  0.696432 seconds (213.45 k allocations: 23.321 MiB, 97.12% compilation time)
Running: radau_quadrature
  0.514404 seconds (212.60 k allocations: 21.251 MiB, 62.47% compilation time)
Running: rectangle_rule_left
  0.052348 seconds (20.07 k allocations: 1.228 MiB, 98.62% compilation time)
Running: rectangle_rule_midpoint
  0.057815 seconds (26.25 k allocations: 1.652 MiB, 99.74% compilation time)
Running: rectangle_rule_right
  0.032672 seconds (17.87 k allocations: 1.098 MiB, 99.52% compilation time)
Running: rombergs_method
  0.200696 seconds (135.95 k allocations: 7.879 MiB, 94.56% compilation time)
Running: simpsons_rule
  0.029232 seconds (40.80 k allocations: 2.543 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.077777 seconds (49.73 k allocations: 2.929 MiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.022674 seconds (24.14 k allocations: 1.492 MiB, 99.01% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027131 seconds (40.61 k allocations: 2.580 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=1
  0.192810 seconds (236.14 k allocations: 13.461 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.754944 seconds (289.64 k allocations: 16.497 MiB, 43.42% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.148808 seconds (240.28 k allocations: 13.544 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.242572 seconds (240.28 k allocations: 13.378 MiB, 99.00% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.495699 seconds (455.94 k allocations: 195.031 MiB, 8.27% gc time, 25.65% compilation time)
Running: legendre_quadrature
  0.502995 seconds (190.85 k allocations: 11.108 MiB, 49.51% compilation time)
Running: lobatto_quadrature
  0.607819 seconds (202.53 k allocations: 11.846 MiB, 33.27% compilation time)
Running: radau_quadrature
  0.345877 seconds (202.53 k allocations: 11.848 MiB, 11.34% gc time, 99.27% compilation time)
Running: rectangle_rule_left
  0.396721 seconds (19.89 k allocations: 1.214 MiB, 18.79% compilation time)
Running: rectangle_rule_midpoint
  0.072561 seconds (25.89 k allocations: 1.634 MiB, 83.37% compilation time)
Running: rectangle_rule_right
  0.215011 seconds (18.24 k allocations: 1.118 MiB, 22.15% compilation time)
Running: rombergs_method
  0.308795 seconds (149.07 k allocations: 8.789 MiB, 78.88% compilation time)
Running: simpsons_rule
  0.023777 seconds (38.61 k allocations: 2.470 MiB, 99.12% compilation time)
Running: simpsons38_rule
  0.033148 seconds (44.65 k allocations: 2.815 MiB, 99.40% compilation time)
Running: trapezoidal_rule
  0.021263 seconds (44.13 k allocations: 1.763 MiB, 96.76% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.031008 seconds (40.35 k allocations: 2.510 MiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=1
  0.612724 seconds (236.73 k allocations: 13.415 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.263897 seconds (290.27 k allocations: 16.455 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.154156 seconds (240.88 k allocations: 13.470 MiB, 10.47% gc time, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.134448 seconds (240.88 k allocations: 13.546 MiB, 98.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.275978 seconds (456.66 k allocations: 149.782 MiB, 15.75% gc time, 32.90% compilation time)
Running: legendre_quadrature
  1.706117 seconds (191.45 k allocations: 11.126 MiB, 48.58% compilation time)
Running: lobatto_quadrature
  0.188359 seconds (203.13 k allocations: 11.867 MiB, 82.82% compilation time)
Running: radau_quadrature
  0.505453 seconds (203.12 k allocations: 11.860 MiB, 19.12% gc time, 99.38% compilation time)
Running: rectangle_rule_left
  0.803627 seconds (20.14 k allocations: 1.227 MiB, 6.13% compilation time)
Running: rectangle_rule_midpoint
  0.028789 seconds (25.89 k allocations: 1.635 MiB, 99.13% compilation time)
Running: rectangle_rule_right
  0.667004 seconds (18.20 k allocations: 1.115 MiB, 4.10% compilation time)
Running: rombergs_method
  1.005156 seconds (138.99 k allocations: 8.082 MiB, 85.93% compilation time)
Running: simpsons_rule
  0.027817 seconds (39.09 k allocations: 2.489 MiB, 98.86% compilation time)
Running: simpsons38_rule
  0.031399 seconds (45.35 k allocations: 2.842 MiB, 99.16% compilation time)
Running: trapezoidal_rule
  0.021212 seconds (56.28 k allocations: 1.959 MiB, 94.36% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.835348 seconds (152.11 k allocations: 9.113 MiB, 99.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.141136 seconds (70.34 k allocations: 2.237 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.121252 seconds (105.50 k allocations: 2.900 MiB, 97.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.244344 seconds (92.98 k allocations: 2.686 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=4
  0.164723 seconds (72.52 k allocations: 2.280 MiB, 98.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.524298 seconds (486.23 k allocations: 168.244 MiB, 9.67% gc time, 27.12% compilation time)
Running: legendre_quadrature
  0.113246 seconds (19.14 k allocations: 1.125 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000102 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000064 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.927793 seconds (590.00 M allocations: 8.792 GiB, 10.83% gc time)
Running: rectangle_rule_midpoint
  0.000061 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.919848 seconds (592.75 M allocations: 8.833 GiB, 13.22% gc time)
Running: rombergs_method
  0.316076 seconds (20.91 k allocations: 1.197 MiB, 99.82% compilation time)
Running: simpsons_rule
  0.000045 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026887 seconds (463 allocations: 22.578 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.022432 seconds (171 allocations: 7.859 KiB, 99.44% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.112212 seconds (209.94 M allocations: 3.138 GiB, 5.49% gc time, 4.21% compilation time)
Running: chebyshev_quadrature with k=1
  0.392677 seconds (423.03 k allocations: 23.685 MiB, 80.64% compilation time)
Running: chebyshev_quadrature with k=2
 20.928119 seconds (478.60 k allocations: 4.041 GiB, 27.05% gc time, 3.68% compilation time)
Running: chebyshev_quadrature with k=3
  7.854228 seconds (254.26 k allocations: 1.642 GiB, 14.84% gc time, 4.34% compilation time)
Running: chebyshev_quadrature with k=4
 10.314237 seconds (254.26 k allocations: 2.261 GiB, 4.67% gc time, 5.24% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.105510 seconds (493.54 k allocations: 13.255 GiB, 9.91% gc time, 4.64% compilation time)
Running: legendre_quadrature.
  8.000429 seconds (228.94 k allocations: 1.976 GiB, 1.19% gc time, 2.05% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.367928 seconds (8.24 M allocations: 13.384 GiB, 17.34% gc time, 0.77% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.583874 seconds (7.24 M allocations: 13.369 GiB, 11.25% gc time, 0.80% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.431467 seconds (22.88 k allocations: 1.394 MiB, 0.27% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.302021 seconds (31.46 k allocations: 1.956 MiB, 1.33% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.213479 seconds (23.09 k allocations: 1.403 MiB, 1.11% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.149304 seconds (448.73 k allocations: 153.530 MiB, 2.75% gc time, 21.01% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.739050 seconds (200.04 M allocations: 2.983 GiB, 2.33% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.202941 seconds (600.05 M allocations: 8.944 GiB, 6.10% gc time, 0.42% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.149061 seconds (600.03 M allocations: 8.943 GiB, 4.12% gc time, 0.22% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.105697 seconds (111.10 k allocations: 4.244 MiB, 96.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.196368 seconds (252.71 k allocations: 13.877 MiB, 97.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.468547 seconds (277.25 k allocations: 14.962 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.190929 seconds (224.24 k allocations: 11.983 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.367766 seconds (224.24 k allocations: 12.011 MiB, 36.02% gc time, 99.61% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.464971 seconds (395.24 k allocations: 35.566 MiB, 94.97% compilation time)
Running: laguerre_quadrature with k=2
  0.166912 seconds (185.19 k allocations: 10.835 MiB, 77.37% compilation time)
Running: legendre_quadrature
  0.280352 seconds (149.17 k allocations: 8.338 MiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.023688 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.020020 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.108471 seconds (19.35 k allocations: 1.157 MiB, 87.81% compilation time)
Running: rectangle_rule_midpoint
  0.413030 seconds (26.33 k allocations: 1.636 MiB, 98.48% compilation time)
Running: rectangle_rule_right
  0.409578 seconds (17.96 k allocations: 1.084 MiB, 97.77% compilation time)
Running: rombergs_method
  0.293276 seconds (176.05 k allocations: 10.125 MiB, 99.09% compilation time)
Running: simpsons_rule
  0.000481 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.409680 seconds (80.36 k allocations: 3.491 MiB, 99.74% compilation time)
Running: trapezoidal_rule
  0.095407 seconds (2.39 M allocations: 37.744 MiB, 32.40% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000780 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.120972 seconds (2.46 k allocations: 1.691 MiB, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.136814 seconds (2.71 k allocations: 2.355 MiB, 94.81% compilation time)
Running: chebyshev_quadrature with k=3
  0.147766 seconds (2.31 k allocations: 2.028 MiB, 94.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.099665 seconds (2.31 k allocations: 1.469 MiB, 98.11% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.317310 seconds (372.07 k allocations: 905.349 MiB, 4.81% gc time, 9.05% compilation time)
Running: legendre_quadrature
  0.071814 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000170 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000106 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.503874 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000221 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.608157 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065083 seconds (993 allocations: 56.609 KiB, 99.33% compilation time)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000999 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000263 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.100203 seconds (2.53 k allocations: 579.203 KiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=2
  0.182450 seconds (2.79 k allocations: 780.188 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.104486 seconds (2.39 k allocations: 661.047 KiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.110018 seconds (2.39 k allocations: 491.547 KiB, 99.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.042317 seconds (378.63 k allocations: 253.460 MiB, 14.50% compilation time)
Running: legendre_quadrature
  0.086779 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000144 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.054321 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000128 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.998128 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.105402 seconds (1.21 k allocations: 64.875 KiB, 99.61% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000417 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
