Julia Version 1.6.0-DEV.1227
Commit 86bbe0941c (2020-10-15 00:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled
    Testing FunctionIntegrator
Status `/tmp/jl_QXUkt2/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_QXUkt2/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.275776 seconds (294.29 k allocations: 13.891 MiB, 84.87% compilation time)
Running: chebyshev_quadrature with k=1
  1.754824 seconds (2.25 M allocations: 130.599 MiB, 3.78% gc time, 98.77% compilation time)
Running: chebyshev_quadrature with k=2
  0.244100 seconds (417.68 k allocations: 24.229 MiB, 84.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.500453 seconds (483.50 k allocations: 27.370 MiB, 5.96% gc time, 93.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.283663 seconds (427.02 k allocations: 23.922 MiB, 91.18% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 45.561072 seconds (35.48 M allocations: 2.980 GiB, 28.38% gc time, 82.06% compilation time)
Running: laguerre_quadrature with k=1
  3.718177 seconds (3.24 M allocations: 182.159 MiB, 3.30% gc time, 99.77% compilation time)
Running: legendre_quadrature
  0.188317 seconds (211.36 k allocations: 12.238 MiB, 99.03% compilation time)
Running: lobatto_quadrature
  0.333971 seconds (340.22 k allocations: 20.687 MiB, 8.38% gc time, 99.40% compilation time)
Running: radau_quadrature
  0.466895 seconds (463.38 k allocations: 28.454 MiB, 99.45% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 45.358848 seconds (100.02 M allocations: 1.491 GiB, 0.62% gc time, 0.09% compilation time)
Running: rectangle_rule_midpoint.
  0.094686 seconds (173.35 k allocations: 3.888 MiB, 24.12% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 46.283775 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time, 0.07% compilation time)
Running: rombergs_method
  0.761922 seconds (741.34 k allocations: 43.167 MiB, 2.28% gc time, 99.44% compilation time)
Running: simpsons_rule
  0.058360 seconds (48.04 k allocations: 2.633 MiB, 96.43% compilation time)
Running: simpsons38_rule
  0.091814 seconds (111.29 k allocations: 5.950 MiB, 18.16% gc time, 79.55% compilation time)
Running: trapezoidal_rule
  0.267389 seconds (1.72 M allocations: 28.724 MiB, 19.80% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.061768 seconds (30.72 k allocations: 1.831 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.450231 seconds (295.77 k allocations: 15.777 MiB, 19.82% gc time, 99.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.118213 seconds (94.22 k allocations: 2.707 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.143063 seconds (82.47 k allocations: 2.508 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.129929 seconds (65.08 k allocations: 2.154 MiB, 98.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.221203 seconds (510.66 k allocations: 162.388 MiB, 19.37% gc time, 28.41% compilation time)
Running: legendre_quadrature
  0.189685 seconds (42.04 k allocations: 2.440 MiB, 99.20% compilation time)
Running: lobatto_quadrature
  0.019474 seconds (16.02 k allocations: 1022.810 KiB, 99.21% compilation time)
Running: radau_quadrature
  0.026618 seconds (16.12 k allocations: 1.006 MiB, 99.45% compilation time)
Running: rectangle_rule_left
 13.364366 seconds (471.41 M allocations: 7.025 GiB, 5.31% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.869245 seconds (476.96 M allocations: 7.107 GiB, 6.37% gc time)
Running: rombergs_method
  0.466428 seconds (334.19 k allocations: 19.148 MiB, 99.91% compilation time)
Running: simpsons_rule
  0.000024 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.061587 seconds (19.43 k allocations: 1.184 MiB, 99.85% compilation time)
Running: trapezoidal_rule
  0.095992 seconds (16.97 k allocations: 1.034 MiB, 99.90% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.054938 seconds (1.03 k allocations: 34.125 KiB, 78.02% compilation time)
Running: chebyshev_quadrature with k=1
  0.115095 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.099553 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.083721 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.095745 seconds (2.31 k allocations: 109.297 KiB, 98.10% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.302091 seconds (369.35 k allocations: 19.525 MiB, 99.40% compilation time)
Running: legendre_quadrature
  0.061629 seconds (1.28 k allocations: 65.891 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000038 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000340 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000225 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000326 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.059551 seconds (1.04 k allocations: 56.531 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000014 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.019019 seconds (923 allocations: 39.281 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.015283 seconds (44.29 k allocations: 702.859 KiB, 90.93% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.052506 seconds (83.54 k allocations: 5.004 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.192997 seconds (235.65 k allocations: 13.448 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.250822 seconds (289.14 k allocations: 16.381 MiB, 20.26% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.198670 seconds (239.80 k allocations: 13.561 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.146576 seconds (239.80 k allocations: 13.448 MiB, 98.70% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.807362 seconds (454.96 k allocations: 163.901 MiB, 5.91% gc time, 16.82% compilation time)
Running: legendre_quadrature
  0.309371 seconds (190.36 k allocations: 11.085 MiB, 93.41% compilation time)
Running: lobatto_quadrature
  0.355630 seconds (201.88 k allocations: 11.872 MiB, 9.44% gc time, 99.47% compilation time)
Running: radau_quadrature
  0.212514 seconds (201.88 k allocations: 11.810 MiB, 84.11% compilation time)
Running: rectangle_rule_left
  0.666931 seconds (19.37 k allocations: 1.189 MiB, 3.38% compilation time)
Running: rectangle_rule_midpoint
  0.150421 seconds (25.55 k allocations: 1.616 MiB, 12.06% compilation time)
Running: rectangle_rule_right
  0.627891 seconds (17.90 k allocations: 1.099 MiB, 3.48% compilation time)
Running: rombergs_method
  0.183636 seconds (137.80 k allocations: 8.045 MiB, 98.57% compilation time)
Running: simpsons_rule
  0.100137 seconds (37.98 k allocations: 2.442 MiB, 99.82% compilation time)
Running: simpsons38_rule
  0.170250 seconds (43.94 k allocations: 2.785 MiB, 99.87% compilation time)
Running: trapezoidal_rule
  0.049505 seconds (43.20 k allocations: 1.730 MiB, 98.58% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.040633 seconds (68.44 k allocations: 3.060 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=1
  0.248198 seconds (242.23 k allocations: 13.451 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.178843 seconds (296.17 k allocations: 16.373 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.322475 seconds (246.37 k allocations: 13.521 MiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.266064 seconds (246.37 k allocations: 13.525 MiB, 10.80% gc time, 99.28% compilation time)
Running: hermite_quadrature with k=2
 17.780240 seconds (20.49 M allocations: 1.088 GiB, 9.09% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.407763 seconds (464.13 k allocations: 50.107 MiB, 16.51% gc time, 74.86% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.275721 seconds (282.35 k allocations: 15.735 MiB, 98.85% compilation time)
Running: legendre_quadrature
  0.253851 seconds (196.90 k allocations: 11.410 MiB, 30.50% gc time, 99.05% compilation time)
Running: lobatto_quadrature
  2.280403 seconds (222.54 k allocations: 37.614 MiB, 87.65% gc time, 98.35% compilation time)
Running: radau_quadrature
  0.463107 seconds (219.12 k allocations: 30.245 MiB, 95.55% compilation time)
Running: rectangle_rule_left
  0.020712 seconds (22.28 k allocations: 1.333 MiB, 99.27% compilation time)
Running: rectangle_rule_midpoint
  0.019762 seconds (27.36 k allocations: 1.703 MiB, 99.31% compilation time)
Running: rectangle_rule_right
  0.019454 seconds (19.02 k allocations: 1.153 MiB, 99.36% compilation time)
Running: rombergs_method
  0.179270 seconds (140.13 k allocations: 8.061 MiB, 98.32% compilation time)
Running: simpsons_rule
  0.027848 seconds (45.46 k allocations: 2.710 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.112439 seconds (58.91 k allocations: 3.170 MiB, 16.41% gc time, 99.59% compilation time)
Running: trapezoidal_rule
  0.025369 seconds (29.23 k allocations: 1.655 MiB, 98.96% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.049875 seconds (52.41 k allocations: 2.720 MiB, 98.94% compilation time)
Running: chebyshev_quadrature with k=1
  0.291037 seconds (237.76 k allocations: 13.249 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.294860 seconds (291.35 k allocations: 16.145 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.205104 seconds (241.90 k allocations: 13.330 MiB, 8.13% gc time, 98.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.256060 seconds (241.91 k allocations: 13.331 MiB, 99.17% compilation time)
Running: hermite_quadrature with k=2
  0.269836 seconds (175.13 k allocations: 10.127 MiB, 81.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 10.511793 seconds (457.40 k allocations: 1.175 GiB, 38.51% gc time, 3.53% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.462861 seconds (277.64 k allocations: 15.547 MiB, 8.66% gc time, 99.22% compilation time)
Running: legendre_quadrature
  0.665640 seconds (192.47 k allocations: 11.194 MiB, 99.67% compilation time)
Running: lobatto_quadrature
  0.329847 seconds (213.30 k allocations: 23.314 MiB, 95.24% compilation time)
Running: radau_quadrature
  0.221514 seconds (212.45 k allocations: 21.243 MiB, 7.32% gc time, 84.74% compilation time)
Running: rectangle_rule_left
  0.048372 seconds (20.07 k allocations: 1.228 MiB, 99.72% compilation time)
Running: rectangle_rule_midpoint
  0.022531 seconds (26.25 k allocations: 1.652 MiB, 99.48% compilation time)
Running: rectangle_rule_right
  0.022928 seconds (17.87 k allocations: 1.098 MiB, 99.43% compilation time)
Running: rombergs_method
  0.174173 seconds (135.98 k allocations: 7.880 MiB, 96.22% compilation time)
Running: simpsons_rule
  0.037055 seconds (40.80 k allocations: 2.543 MiB, 99.42% compilation time)
Running: simpsons38_rule
  0.041994 seconds (49.73 k allocations: 2.929 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.056716 seconds (24.14 k allocations: 1.492 MiB, 99.64% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.114550 seconds (40.61 k allocations: 2.580 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.467193 seconds (236.14 k allocations: 13.461 MiB, 21.75% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.216756 seconds (289.64 k allocations: 16.497 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=3
  0.333980 seconds (240.28 k allocations: 13.543 MiB, 81.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.364828 seconds (240.29 k allocations: 13.441 MiB, 9.80% gc time, 94.38% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.532353 seconds (455.50 k allocations: 194.947 MiB, 11.93% gc time, 23.06% compilation time)
Running: legendre_quadrature
  0.165654 seconds (190.85 k allocations: 11.108 MiB, 98.62% compilation time)
Running: lobatto_quadrature
  0.231557 seconds (202.38 k allocations: 11.842 MiB, 12.51% gc time, 99.06% compilation time)
Running: radau_quadrature
  0.270791 seconds (202.38 k allocations: 11.836 MiB, 99.15% compilation time)
Running: rectangle_rule_left
  0.348392 seconds (19.89 k allocations: 1.214 MiB, 10.08% compilation time)
Running: rectangle_rule_midpoint
  0.089514 seconds (25.89 k allocations: 1.634 MiB, 95.81% compilation time)
Running: rectangle_rule_right
  0.218225 seconds (18.24 k allocations: 1.118 MiB, 36.38% compilation time)
Running: rombergs_method
  0.220522 seconds (149.10 k allocations: 8.789 MiB, 98.26% compilation time)
Running: simpsons_rule
  0.019161 seconds (38.61 k allocations: 2.470 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.051701 seconds (44.65 k allocations: 2.815 MiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.068753 seconds (44.13 k allocations: 1.763 MiB, 86.55% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.104261 seconds (40.35 k allocations: 2.510 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.236098 seconds (236.73 k allocations: 13.474 MiB, 14.37% gc time, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.185662 seconds (290.27 k allocations: 16.408 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.135264 seconds (240.88 k allocations: 13.470 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.280413 seconds (240.88 k allocations: 13.549 MiB, 8.49% gc time, 99.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.517070 seconds (456.21 k allocations: 149.630 MiB, 5.32% gc time, 29.24% compilation time)
Running: legendre_quadrature
  0.425303 seconds (191.45 k allocations: 11.126 MiB, 99.50% compilation time)
Running: lobatto_quadrature
  0.228007 seconds (202.98 k allocations: 12.109 MiB, 7.21% gc time, 98.93% compilation time)
Running: radau_quadrature
  0.184445 seconds (202.97 k allocations: 11.857 MiB, 98.40% compilation time)
Running: rectangle_rule_left
  0.717365 seconds (20.14 k allocations: 1.227 MiB, 3.63% compilation time)
Running: rectangle_rule_midpoint
  0.038489 seconds (25.89 k allocations: 1.635 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.657135 seconds (18.20 k allocations: 1.115 MiB, 6.25% compilation time)
Running: rombergs_method
  0.178420 seconds (139.02 k allocations: 8.098 MiB, 92.53% compilation time)
Running: simpsons_rule
  0.045323 seconds (39.09 k allocations: 2.491 MiB, 99.50% compilation time)
Running: simpsons38_rule
  0.028510 seconds (45.35 k allocations: 2.842 MiB, 99.30% compilation time)
Running: trapezoidal_rule
  0.019706 seconds (56.28 k allocations: 1.959 MiB, 94.43% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.115970 seconds (152.11 k allocations: 9.113 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.195477 seconds (70.34 k allocations: 2.237 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.237597 seconds (105.50 k allocations: 2.900 MiB, 40.21% gc time, 58.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.311019 seconds (92.98 k allocations: 2.686 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.173715 seconds (72.52 k allocations: 2.280 MiB, 98.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.003237 seconds (485.75 k allocations: 168.222 MiB, 7.97% gc time, 27.61% compilation time)
Running: legendre_quadrature
  0.159442 seconds (19.14 k allocations: 1.125 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.144349 seconds (590.00 M allocations: 8.792 GiB, 7.47% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.349382 seconds (592.75 M allocations: 8.833 GiB, 7.85% gc time)
Running: rombergs_method
  0.186655 seconds (20.92 k allocations: 1.198 MiB, 99.64% compilation time)
Running: simpsons_rule
  0.000042 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.045681 seconds (463 allocations: 22.578 KiB, 73.68% compilation time)
Running: trapezoidal_rule
  0.019331 seconds (171 allocations: 7.859 KiB, 99.35% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.469612 seconds (209.94 M allocations: 3.138 GiB, 1.97% gc time, 0.53% compilation time)
Running: chebyshev_quadrature with k=1
  0.464888 seconds (422.88 k allocations: 23.734 MiB, 4.07% gc time, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
 18.866581 seconds (478.46 k allocations: 4.041 GiB, 5.92% gc time, 2.38% compilation time)
Running: chebyshev_quadrature with k=3
  8.123801 seconds (254.30 k allocations: 1.642 GiB, 3.92% gc time, 3.21% compilation time)
Running: chebyshev_quadrature with k=4
 11.137431 seconds (254.30 k allocations: 2.261 GiB, 1.98% gc time, 2.45% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.648393 seconds (492.96 k allocations: 13.255 GiB, 7.88% gc time, 1.55% compilation time)
Running: legendre_quadrature.
 10.130719 seconds (228.79 k allocations: 1.976 GiB, 7.40% gc time, 5.87% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.497356 seconds (8.24 M allocations: 13.384 GiB, 19.95% gc time, 2.66% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.512369 seconds (7.24 M allocations: 13.369 GiB, 11.50% gc time, 0.76% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.877187 seconds (22.89 k allocations: 1.394 MiB, 0.91% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.901555 seconds (31.47 k allocations: 1.956 MiB, 0.61% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.813242 seconds (23.10 k allocations: 1.403 MiB, 0.25% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.949745 seconds (448.61 k allocations: 153.517 MiB, 1.98% gc time, 13.40% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.210981 seconds (200.04 M allocations: 2.983 GiB, 2.39% gc time, 0.20% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.837429 seconds (600.05 M allocations: 8.944 GiB, 6.03% gc time, 0.44% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.423252 seconds (600.03 M allocations: 8.943 GiB, 4.12% gc time, 0.12% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.049183 seconds (111.10 k allocations: 4.244 MiB, 92.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.352624 seconds (252.71 k allocations: 13.877 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.217321 seconds (277.25 k allocations: 14.962 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.206045 seconds (224.24 k allocations: 11.983 MiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.360068 seconds (224.24 k allocations: 12.011 MiB, 48.68% gc time, 99.57% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.233551 seconds (394.79 k allocations: 35.544 MiB, 97.53% compilation time)
Running: laguerre_quadrature with k=2
  0.347103 seconds (185.19 k allocations: 10.835 MiB, 88.88% compilation time)
Running: legendre_quadrature
  0.214705 seconds (149.17 k allocations: 8.338 MiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.019571 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.022989 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.063035 seconds (19.35 k allocations: 1.157 MiB, 73.33% compilation time)
Running: rectangle_rule_midpoint
  0.096795 seconds (26.33 k allocations: 1.636 MiB, 87.74% compilation time)
Running: rectangle_rule_right
  0.048233 seconds (17.96 k allocations: 1.084 MiB, 70.00% compilation time)
Running: rombergs_method
  0.510417 seconds (176.51 k allocations: 10.149 MiB, 98.87% compilation time)
Running: simpsons_rule
  0.000412 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.086219 seconds (80.36 k allocations: 3.491 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.155183 seconds (2.39 M allocations: 37.744 MiB, 44.50% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000688 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.145201 seconds (2.46 k allocations: 1.691 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.111571 seconds (2.71 k allocations: 2.355 MiB, 96.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.101259 seconds (2.31 k allocations: 2.028 MiB, 93.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.148597 seconds (2.31 k allocations: 1.469 MiB, 96.00% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.193665 seconds (371.63 k allocations: 905.326 MiB, 3.85% gc time, 6.98% compilation time)
Running: legendre_quadrature
  0.084929 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000176 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000116 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.631709 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.992353 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062993 seconds (997 allocations: 56.672 KiB, 99.38% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001043 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000136 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.156006 seconds (2.53 k allocations: 579.203 KiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.125451 seconds (2.79 k allocations: 780.188 KiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.111234 seconds (2.39 k allocations: 661.047 KiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.110581 seconds (2.39 k allocations: 491.547 KiB, 99.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.712341 seconds (378.19 k allocations: 253.437 MiB, 22.12% compilation time)
Running: legendre_quadrature
  0.066056 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000069 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.386998 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000141 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.272746 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.096882 seconds (1.21 k allocations: 64.938 KiB, 99.63% compilation time)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000460 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
