Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed OrderedCollections â”€ v1.3.1
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_N1Z4zY/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_N1Z4zY/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(13, 0.05637777f0), Item(41, 0.05682552f0), Item(23, 0.057112098f0), Item(26, 0.09143579f0)])
Vsorted = Item[Item(13, 0.05637777f0), Item(41, 0.05682552f0), Item(23, 0.057112098f0), Item(26, 0.09143579f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00301971435546875, 0.003194705645243327, 301.0, 51.787323506549))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003175687789916992, 0.002564366658528646, 301.0, 75.73605406284332))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003339854876200358, 0.0034114996592203776, 301.0, 41.547484278678894))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0034738381703694663, 0.003084834416707357, 301.0, 9.843545686104335))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003668554623921712, 0.005031728744506836, 301.0, 46.640967873856425))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.015763600667318e-5, 2.620220184326172e-5, 301.0, 185.57408242672682))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.37521235148112e-5, 0.007899133364359538, 300.0, 26.563080997671932)
p = PerformanceResult(1.0, 1.0, 1.0, 3.387928009033203e-5, 1.9566218058268228e-5, 300.0, 26.563080997671932)
p = PerformanceResult(1.0, 1.0, 1.0, 0.005076177914937337, 0.0028536637624104817, 300.0, 1.4022195722518518)
p = PerformanceResult(1.0, 1.0, 1.0, 2.6626057094997833e-5, 1.4368693033854166e-5, 300.0, 1.4022195722518518)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.37521235148112e-5, 0.007899133364359538, 300.0, 26.563080997671932), PerformanceResult(1.0, 1.0, 1.0, 3.387928009033203e-5, 1.9566218058268228e-5, 300.0, 26.563080997671932), PerformanceResult(1.0, 1.0, 1.0, 0.005076177914937337, 0.0028536637624104817, 300.0, 1.4022195722518518), PerformanceResult(1.0, 1.0, 1.0, 2.6626057094997833e-5, 1.4368693033854166e-5, 300.0, 1.4022195722518518))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007598980267842611, 0.003589963912963867, 347.53333333333336, 28701.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0060888926188151045, 0.0017808993657430013, 303.8666666666667, 7007.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.1308987935384114e-5, 9.902318318684895e-6, 91.26666666666667, 51.787323506549))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5497207641601562e-5, 8.400281270345052e-6, 84.63333333333334, 75.73605406284332))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.949469248453776e-5, 5.936622619628906e-6, 87.6, 41.547484278678894))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.4390220642089843e-5, 5.0004323323567705e-5, 92.63333333333334, 46.640967873856425))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7666666666666668, 0.7666666666666668, 0.7666666666666668, 1.1873245239257812e-5, 1.4694531758626302e-5, 70.56666666666666, 196.78561674803495))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-22T10:21:04.809
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9160000000000004, 0.9120000000000004, 0.9135000000000002, 1.5921592712402344e-5, 1.4259815216064454e-5, 152.32, 50.01380532886833))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5070438385009766e-5, 1.2788772583007813e-5, 156.01, 0.0))
*** advance 1 from 1000; 2020-10-22T10:21:05.428
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8889999999999999, 0.8889999999999999, 0.8889999999999999, 1.5130043029785156e-5, 1.3461112976074219e-5, 152.19, 76.7460325639695))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4481544494628907e-5, 1.0988712310791016e-5, 155.71, 0.0))
*** advance 1 from 1000; 2020-10-22T10:21:06.134
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8839999999999999, 0.878, 0.8797142857142858, 1.4085769653320312e-5, 1.619100570678711e-5, 151.18, 40.96870588697493))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4224052429199218e-5, 1.5799999237060546e-5, 154.54, 0.0))
*** advance 1 from 1000; 2020-10-22T10:21:06.625
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8890000000000003, 0.8830000000000005, 0.884714285714286, 3.865718841552734e-5, 0.00017899036407470703, 150.97, 45.09468054538593))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.666162490844727e-5, 0.00020084142684936523, 154.39, 0.0))
*** advance 1 from 1000; 2020-10-22T10:21:06.966
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8619999999999999, 0.8619999999999999, 0.8619999999999999, 2.231121063232422e-5, 6.99615478515625e-5, 151.67, 203.61484678648412))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.233743667602539e-5, 7.248878479003907e-5, 155.13, 0.0))
*** advance 1 from 1000; 2020-10-22T10:21:07.585
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9160000000000004, 0.9120000000000004, 0.9135000000000002, 1.7385482788085938e-5, 4.262924194335938e-5, 152.32, 50.02379239036236))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0012855529785156e-5, 0.00010999917984008789, 156.01, 0.015744902339065447))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:09.285
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7519999999999999, 0.7519999999999999, 0.7519999999999999, 0.0013464975357055664, 5.9988498687744144e-5, 199.58, 189.65000224113464))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:10.104
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7229999999999999, 0.7229999999999999, 0.7229999999999999, 0.0012069106101989745, 6.016016006469727e-5, 199.69, 110.12143060564995))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:10.823
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6159999999999998, 0.6159999999999998, 0.6159999999999998, 0.0013337111473083496, 4.8370361328125e-5, 256.55, 4.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:11.696
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9410000000000001, 0.937, 0.9387777777777778, 0.0013894200325012206, 1.1880397796630859e-5, 219.25, 594.8000203222036))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:12.697
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.581, 0.581, 0.581, 0.0016263508796691894, 0.00022754192352294922, 254.75, 2353.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:13.478
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3919999999999999, 0.3919999999999999, NaN, 0.0014223098754882813, 0.0002671313285827637, 246.0, 3652.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T10:21:14.433
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.601, 0.601, 0.601, 0.00130918025970459, 3.8180351257324215e-5, 248.1, 2375.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.033183856502242, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9797275641025645,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7109375,"distances_sum":634.8089971244335}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.033183856502242,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9797275641025645,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7109375,"distances_sum":634.8089971244335}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.033183856502242,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9797275641025645,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7109375,"distances_sum":634.8089971244335}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6165327210103326, conf: {"restarts":14}, perf: {"precision":0.9071180555555544,"recall":0.9071180555555544,"f1":0.9071180555555544,"seconds":1.798197627067566e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":61.2421875,"distances_sum":302.95758260414004}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.644646333549643, conf: {"restarts":13}, perf: {"precision":0.9140624999999988,"recall":0.9140624999999988,"f1":0.9140624999999988,"seconds":1.8458813428878784e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":60.1953125,"distances_sum":302.52956637367606}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.835457705677868, conf: {"restarts":10}, perf: {"precision":0.9097222222222209,"recall":0.9097222222222209,"f1":0.9097222222222209,"seconds":1.6087666153907776e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":53.9375,"distances_sum":303.31435580179095}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.835457705677868,"state":{"restarts":10},"perf":{"precision":0.9097222222222209,"recall":0.9097222222222209,"f1":0.9097222222222209,"seconds":1.6087666153907776e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":53.9375,"distances_sum":303.31435580179095}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.130105900151286, conf: {"restarts":6}, perf: {"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4264136552810669e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":46.4765625,"distances_sum":304.4505003504455}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.130105900151286,"state":{"restarts":6},"perf":{"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4264136552810669e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":46.4765625,"distances_sum":304.4505003504455}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.130105900151286,"state":{"restarts":6},"perf":{"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4264136552810669e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":46.4765625,"distances_sum":304.4505003504455}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.130105900151286,"state":{"restarts":6},"perf":{"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4264136552810669e-5,"exhaustive_search_seconds":4.023313522338867e-6,"evaluations":46.4765625,"distances_sum":304.4505003504455}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555544, conf: {"restarts":7}, perf: {"precision":0.8524305555555544,"recall":0.8524305555555544,"f1":null,"seconds":3.238581120967865e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":107.625,"distances_sum":127.49999629333615}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.84548611111111, conf: {"restarts":11}, perf: {"precision":0.84548611111111,"recall":0.84548611111111,"f1":0.84548611111111,"seconds":3.2339245080947876e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":135.4765625,"distances_sum":125.92377085611224}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333321, conf: {"restarts":10}, perf: {"precision":0.8489583333333321,"recall":0.8489583333333321,"f1":0.8489583333333321,"seconds":2.5879591703414917e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":128.328125,"distances_sum":126.10730286315084}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8524305555555544,"state":{"restarts":7},"perf":{"precision":0.8524305555555544,"recall":0.8524305555555544,"f1":null,"seconds":3.238581120967865e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":107.625,"distances_sum":127.49999629333615}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222209, conf: {"restarts":21}, perf: {"precision":0.8628472222222209,"recall":0.8628472222222209,"f1":0.8628472222222209,"seconds":5.150213837623596e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":198.625,"distances_sum":125.56509019434452}, best_list's length: 11, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8628472222222209,"state":{"restarts":21},"perf":{"precision":0.8628472222222209,"recall":0.8628472222222209,"f1":0.8628472222222209,"seconds":5.150213837623596e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":198.625,"distances_sum":125.56509019434452}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777766, conf: {"restarts":30}, perf: {"precision":0.8637152777777766,"recall":0.8637152777777766,"f1":0.8637152777777766,"seconds":4.451721906661987e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":241.4453125,"distances_sum":125.1571330614388}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999988, conf: {"restarts":22}, perf: {"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":4.0592625737190247e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":201.71875,"distances_sum":125.24147471413016}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8671874999999988,"state":{"restarts":22},"perf":{"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":4.0592625737190247e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":201.71875,"distances_sum":125.24147471413016}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8671874999999988,"state":{"restarts":22},"perf":{"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":4.0592625737190247e-5,"exhaustive_search_seconds":5.1703304052352905e-5,"evaluations":201.71875,"distances_sum":125.24147471413016}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555542, conf: {"restarts":32}, perf: {"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":8.127279579639435e-5,"exhaustive_search_seconds":0.0002008434385061264,"evaluations":395.9453125,"distances_sum":55.246009739348665}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555544, conf: {"restarts":17}, perf: {"precision":0.8524305555555544,"recall":0.8524305555555544,"f1":0.8524305555555544,"seconds":7.510930299758911e-5,"exhaustive_search_seconds":0.0002008434385061264,"evaluations":266.46875,"distances_sum":55.0903038571123}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.856770833333332, conf: {"restarts":27}, perf: {"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":9.704194962978363e-5,"exhaustive_search_seconds":0.0002008434385061264,"evaluations":354.4921875,"distances_sum":55.15453953132965}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.856770833333332,"state":{"restarts":27},"perf":{"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":9.704194962978363e-5,"exhaustive_search_seconds":0.0002008434385061264,"evaluations":354.4921875,"distances_sum":55.15453953132965}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.856770833333332,"state":{"restarts":27},"perf":{"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":9.704194962978363e-5,"exhaustive_search_seconds":0.0002008434385061264,"evaluations":354.4921875,"distances_sum":55.15453953132965}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(27), SatNeighborhood(32), 2020-10-22T10:21:20.617
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(453, 0.013034091f0), Item(7343, 0.017267022f0), Item(2836, 0.022369707f0), Item(4845, 0.035028223f0), Item(7332, 0.047270395f0), Item(2329, 0.050486688f0), Item(5388, 0.058479544f0), Item(6260, 0.060071528f0), Item(4230, 0.06386034f0), Item(4760, 0.067179956f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0837253057384757, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.946317224442225,"seconds":2.1886080503463745e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3046875,"distances_sum":581.9719577133656}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0837253057384757,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.946317224442225,"seconds":2.1886080503463745e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3046875,"distances_sum":581.9719577133656}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0837253057384757,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.946317224442225,"seconds":2.1886080503463745e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3046875,"distances_sum":581.9719577133656}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.320754716981132, conf: {"bsize":2}, perf: {"precision":0.9305555555555545,"recall":0.9305555555555545,"f1":0.9305555555555545,"seconds":9.933486580848694e-6,"exhaustive_search_seconds":4.421919584274292e-6,"evaluations":29.8125,"distances_sum":302.4400845877826}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.320754716981132,"state":{"bsize":2},"perf":{"precision":0.9305555555555545,"recall":0.9305555555555545,"f1":0.9305555555555545,"seconds":9.933486580848694e-6,"exhaustive_search_seconds":4.421919584274292e-6,"evaluations":29.8125,"distances_sum":302.4400845877826}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.320754716981132,"state":{"bsize":2},"perf":{"precision":0.9305555555555545,"recall":0.9305555555555545,"f1":0.9305555555555545,"seconds":9.933486580848694e-6,"exhaustive_search_seconds":4.421919584274292e-6,"evaluations":29.8125,"distances_sum":302.4400845877826}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.320754716981132,"state":{"bsize":2},"perf":{"precision":0.9305555555555545,"recall":0.9305555555555545,"f1":0.9305555555555545,"seconds":9.933486580848694e-6,"exhaustive_search_seconds":4.421919584274292e-6,"evaluations":29.8125,"distances_sum":302.4400845877826}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.959151193633954, conf: {"bsize":4}, perf: {"precision":0.9913194444444443,"recall":0.9913194444444443,"f1":0.9913194444444443,"seconds":1.2682750821113586e-5,"exhaustive_search_seconds":1.986883580684662e-5,"evaluations":58.90625,"distances_sum":121.47505925223231}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.959151193633954,"state":{"bsize":4},"perf":{"precision":0.9913194444444443,"recall":0.9913194444444443,"f1":0.9913194444444443,"seconds":1.2682750821113586e-5,"exhaustive_search_seconds":1.986883580684662e-5,"evaluations":58.90625,"distances_sum":121.47505925223231}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.959151193633954,"state":{"bsize":4},"perf":{"precision":0.9913194444444443,"recall":0.9913194444444443,"f1":0.9913194444444443,"seconds":1.2682750821113586e-5,"exhaustive_search_seconds":1.986883580684662e-5,"evaluations":58.90625,"distances_sum":121.47505925223231}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.959151193633954,"state":{"bsize":4},"perf":{"precision":0.9913194444444443,"recall":0.9913194444444443,"f1":0.9913194444444443,"seconds":1.2682750821113586e-5,"exhaustive_search_seconds":1.986883580684662e-5,"evaluations":58.90625,"distances_sum":121.47505925223231}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.94642442984151, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.324689507484436e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":101.0546875,"distances_sum":54.26385525660589}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.61818320494241, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.769993782043457e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":102.4296875,"distances_sum":54.262544334400445}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.77725674091442, conf: {"bsize":3}, perf: {"precision":0.9713541666666663,"recall":0.9713541666666663,"f1":0.9713541666666663,"seconds":2.3128464818000793e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":106.625,"distances_sum":54.40993219660595}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.94642442984151,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.324689507484436e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":101.0546875,"distances_sum":54.26385525660589}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.94642442984151,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.324689507484436e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":101.0546875,"distances_sum":54.26385525660589}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.94642442984151,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.324689507484436e-5,"exhaustive_search_seconds":0.00011442974209785461,"evaluations":101.0546875,"distances_sum":54.26385525660589}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-10-22T10:21:23.624
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6053, 0.030746669f0), Item(7256, 0.032608353f0), Item(9854, 0.03567919f0), Item(9399, 0.037456483f0), Item(6388, 0.043419328f0), Item(7635, 0.045859512f0), Item(3582, 0.04857422f0), Item(8748, 0.0496326f0), Item(4704, 0.049643572f0), Item(1688, 0.04975852f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
