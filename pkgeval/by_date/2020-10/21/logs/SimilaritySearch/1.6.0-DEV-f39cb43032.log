Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed OrderedCollections â”€ v1.3.1
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed SortingAlgorithms â”€â”€ v0.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_Hs8PYX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Hs8PYX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(30, 0.026478171f0), Item(45, 0.043119192f0), Item(8, 0.043527484f0), Item(6, 0.08684027f0)])
Vsorted = Item[Item(30, 0.026478171f0), Item(45, 0.043119192f0), Item(8, 0.043527484f0), Item(6, 0.08684027f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004187870025634766, 0.005941931406656901, 301.0, 52.61054043471813))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038820584615071613, 0.0034655014673868815, 301.0, 76.08016359806061))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003627665837605794, 0.0043724695841471355, 301.0, 42.878002762794495))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035367409388224282, 0.005257232983907064, 301.0, 10.253488590358756))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003863827387491862, 0.005150699615478515, 301.0, 47.66932600736618))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.5347213745117185e-5, 2.8236707051595053e-5, 301.0, 185.79223956167698))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.1781196594238284e-5, 0.01908543109893799, 300.0, 24.073282967321575)
p = PerformanceResult(1.0, 1.0, 1.0, 3.119309743245443e-5, 1.9073486328125e-5, 300.0, 24.073282967321575)
p = PerformanceResult(1.0, 1.0, 1.0, 0.008130685488382975, 0.00447543462117513, 300.0, 1.1662052776118799)
p = PerformanceResult(1.0, 1.0, 1.0, 2.5320053100585938e-5, 1.3701121012369792e-5, 300.0, 1.1662052776118799)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.1781196594238284e-5, 0.01908543109893799, 300.0, 24.073282967321575), PerformanceResult(1.0, 1.0, 1.0, 3.119309743245443e-5, 1.9073486328125e-5, 300.0, 24.073282967321575), PerformanceResult(1.0, 1.0, 1.0, 0.008130685488382975, 0.00447543462117513, 300.0, 1.1662052776118799), PerformanceResult(1.0, 1.0, 1.0, 2.5320053100585938e-5, 1.3701121012369792e-5, 300.0, 1.1662052776118799))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 129.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007605417569478353, 0.003744769096374512, 346.73333333333335, 28622.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.011027900377909343, 0.004993836085001628, 303.03333333333336, 7001.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0236104329427083e-5, 8.193651835123698e-6, 90.73333333333333, 52.61054043471813))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6053517659505207e-5, 5.435943603515625e-6, 81.13333333333334, 76.08016359806061))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4591217041015626e-5, 9.799003601074219e-6, 87.63333333333334, 42.878002762794495))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.164609273274739e-5, 6.109873453776041e-5, 91.26666666666667, 47.66932600736618))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.81, 0.81, 0.8100000000000002, 1.903374989827474e-5, 2.8332074483235676e-5, 67.96666666666667, 197.8419881016016))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-22T06:17:44.444
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9075714285714285, 0.9039999999999999, 0.9055325077399381, 1.5997886657714842e-5, 1.5659332275390627e-5, 152.72, 50.33525606500916))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5866756439208984e-5, 1.1868476867675782e-5, 156.41, 0.0))
*** advance 1 from 1000; 2020-10-22T06:17:45.527
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9117777777777776, 0.9109999999999999, 0.9113684210526316, 1.4879703521728515e-5, 2.4318695068359375e-5, 153.09, 75.15843668207526))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4226436614990235e-5, 1.123189926147461e-5, 156.78, 0.0))
*** advance 1 from 1000; 2020-10-22T06:17:46.219
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8945714285714287, 0.892, 0.8930588235294118, 1.110553741455078e-5, 1.9528865814208984e-5, 152.54, 40.94624808616936))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4553070068359375e-5, 2.7840137481689452e-5, 156.22, 0.0))
*** advance 1 from 1000; 2020-10-22T06:17:47.059
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9080000000000001, 0.9060000000000002, 0.9069473684210527, 4.174470901489258e-5, 0.00023593902587890626, 153.51, 45.59180509811267))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.3363571166992186e-5, 0.00020587921142578125, 157.3, 0.0))
*** advance 1 from 1000; 2020-10-22T06:17:47.479
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9520000000000001, 0.9520000000000001, 0.9520000000000001, 3.108978271484375e-5, 7.920026779174805e-5, 167.15, 192.2144680498168))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.9587745666503905e-5, 8.088111877441406e-5, 172.36, 0.0))
*** advance 1 from 1000; 2020-10-22T06:17:48.555
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9075714285714285, 0.9039999999999999, 0.9055325077399381, 2.0167827606201173e-5, 3.797054290771484e-5, 152.72, 50.34548913128674))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8835067749023438e-5, 4.6851634979248045e-5, 156.41, 0.017985481361392885))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:50.936
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7490000000000002, 0.7490000000000002, 0.7490000000000002, 0.0013808822631835938, 6.880044937133789e-5, 200.95, 188.55000227689743))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:52.283
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7630000000000002, 0.7630000000000002, 0.7630000000000002, 0.0012105441093444825, 0.0001132512092590332, 205.88, 106.60952588170767))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:53.405
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6599999999999997, 0.6599999999999997, 0.6599999999999997, 0.0025057268142700197, 6.311893463134766e-5, 275.53, 3.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:54.716
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9680000000000003, 0.9680000000000003, 0.9680000000000003, 0.0012785434722900391, 1.3709068298339844e-5, 223.44, 596.6000210493803))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:55.898
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5740000000000002, 0.5740000000000002, 0.5740000000000002, 0.0018068623542785644, 0.00023619890213012697, 260.52, 2369.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:57.067
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.35100000000000003, 0.35100000000000003, NaN, 0.0012917041778564454, 0.00036829233169555664, 260.22, 3642.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-22T06:17:58.660
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5699999999999998, 0.5699999999999998, NaN, 0.00143141508102417, 1.873016357421875e-5, 250.39, 2398.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0472727272727274,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717261904761909,"seconds":0.0020024459809064865,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.59375,"distances_sum":547.9017061442137}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0472727272727274,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717261904761909,"seconds":0.0020024459809064865,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.59375,"distances_sum":547.9017061442137}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9522415652441842,"state":{"restarts":8},"perf":{"precision":0.9027777777777765,"recall":0.9027777777777765,"f1":0.9027777777777765,"seconds":1.5972182154655457e-5,"exhaustive_search_seconds":4.930421710014343e-6,"evaluations":50.7109375,"distances_sum":299.6723523363471}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9522415652441842,"state":{"restarts":8},"perf":{"precision":0.9027777777777765,"recall":0.9027777777777765,"f1":0.9027777777777765,"seconds":1.5972182154655457e-5,"exhaustive_search_seconds":4.930421710014343e-6,"evaluations":50.7109375,"distances_sum":299.6723523363471}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444434, conf: {"restarts":3}, perf: {"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":2.4573877453804016e-5,"exhaustive_search_seconds":2.1727755665779114e-5,"evaluations":81.7109375,"distances_sum":125.05124925263226}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777769, conf: {"restarts":10}, perf: {"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":3.40733677148819e-5,"exhaustive_search_seconds":2.1727755665779114e-5,"evaluations":125.5,"distances_sum":124.84040123969316}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222212, conf: {"restarts":6}, perf: {"precision":0.8628472222222212,"recall":0.8628472222222212,"f1":0.8628472222222212,"seconds":2.568773925304413e-5,"exhaustive_search_seconds":2.1727755665779114e-5,"evaluations":102.328125,"distances_sum":124.40022197365761}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8637152777777769,"state":{"restarts":10},"perf":{"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":3.40733677148819e-5,"exhaustive_search_seconds":2.1727755665779114e-5,"evaluations":125.5,"distances_sum":124.84040123969316}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8637152777777769,"state":{"restarts":10},"perf":{"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":3.40733677148819e-5,"exhaustive_search_seconds":2.1727755665779114e-5,"evaluations":125.5,"distances_sum":124.84040123969316}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444434, conf: {"restarts":22}, perf: {"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":0.00017936713993549347,"exhaustive_search_seconds":0.0001890081912279129,"evaluations":314.6015625,"distances_sum":56.610524899326265}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8585069444444434,"state":{"restarts":22},"perf":{"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":0.00017936713993549347,"exhaustive_search_seconds":0.0001890081912279129,"evaluations":314.6015625,"distances_sum":56.610524899326265}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8585069444444434,"state":{"restarts":22},"perf":{"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":0.00017936713993549347,"exhaustive_search_seconds":0.0001890081912279129,"evaluations":314.6015625,"distances_sum":56.610524899326265}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(22), SatNeighborhood(32), 2020-10-22T06:18:09.702
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6862, 0.079556964f0), Item(6779, 0.081216715f0), Item(227, 0.08222888f0), Item(4765, 0.08310461f0), Item(7898, 0.0856967f0), Item(7806, 0.08777055f0), Item(9465, 0.10659003f0), Item(4483, 0.1165833f0), Item(387, 0.11803536f0), Item(382, 0.11854815f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.061751152073733,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9626347610722615,"seconds":0.003433920443058014,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.4765625,"distances_sum":537.5033567845821}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.061751152073733,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9626347610722615,"seconds":0.003433920443058014,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.4765625,"distances_sum":537.5033567845821}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.262615859938208,"state":{"bsize":3},"perf":{"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.0594725608825684e-5,"exhaustive_search_seconds":4.945322871208191e-6,"evaluations":30.34375,"distances_sum":290.7704546302557}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.262615859938208,"state":{"bsize":3},"perf":{"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.0594725608825684e-5,"exhaustive_search_seconds":4.945322871208191e-6,"evaluations":30.34375,"distances_sum":290.7704546302557}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.92772041302621,"state":{"bsize":3},"perf":{"precision":0.9809027777777773,"recall":0.9809027777777773,"f1":0.9809027777777773,"seconds":1.7054378986358643e-5,"exhaustive_search_seconds":1.9155442714691162e-5,"evaluations":59.015625,"distances_sum":120.59231820795685}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.92772041302621,"state":{"bsize":3},"perf":{"precision":0.9809027777777773,"recall":0.9809027777777773,"f1":0.9809027777777773,"seconds":1.7054378986358643e-5,"exhaustive_search_seconds":1.9155442714691162e-5,"evaluations":59.015625,"distances_sum":120.59231820795685}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.36139135672339, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":9.20463353395462e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":103.765625,"distances_sum":54.42949417512864}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.60338983050848, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.291961133480072e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":101.40625,"distances_sum":54.42949417512864}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.60338983050848,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.291961133480072e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":101.40625,"distances_sum":54.42949417512864}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.51574527641708, conf: {"bsize":4}, perf: {"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.082863986492157e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":100.4765625,"distances_sum":54.500036302022636}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.51574527641708,"state":{"bsize":4},"perf":{"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.082863986492157e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":100.4765625,"distances_sum":54.500036302022636}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.51574527641708,"state":{"bsize":4},"perf":{"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.082863986492157e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":100.4765625,"distances_sum":54.500036302022636}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.51574527641708,"state":{"bsize":4},"perf":{"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.082863986492157e-5,"exhaustive_search_seconds":0.00019265525043010712,"evaluations":100.4765625,"distances_sum":54.500036302022636}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(4), SatNeighborhood(32), 2020-10-22T06:18:14.842
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(476, 0.024706703f0), Item(831, 0.029243717f0), Item(7718, 0.030388083f0), Item(8020, 0.030958017f0), Item(9539, 0.04366722f0), Item(4679, 0.047861453f0), Item(4352, 0.05599924f0), Item(3091, 0.059358966f0), Item(1945, 0.062527984f0), Item(1459, 0.068609424f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
