Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_wdm7sY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_wdm7sY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171690042037086
curgen: 20 fitness: 0.2172048949143458
curgen: 30 fitness: 0.2172319053816339
curgen: 40 fitness: 0.2172319053816339
curgen: 50 fitness: 0.2172319053816339
CoordinateCreature{Vector{Float64}}([0.2227455268209722], -0.2172319053816339) 0.2227455268209722 -0.2172319053816339
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579635144046852
curgen: 100 fitness: 3.258251834370598
curgen: 150 fitness: 3.258256155478767
curgen: 200 fitness: 3.2582895168455694
curgen: 250 fitness: 3.258365431282738
curgen: 300 fitness: 3.2584360217114403
curgen: 350 fitness: 3.258452514055125
curgen: 400 fitness: 3.258452514055125
curgen: 450 fitness: 3.258461999216084
curgen: 500 fitness: 3.2584674906103746
CoordinateCreature{Vector{Float64}}([0.2222589889401393, 0.22303162155027603, -0.22233507347166273, 0.2223063941250432, -0.22249891157158774, 0.22256648942345675, 0.2225823613659221, 0.22243457465315886, 0.2223478696206956, 0.22266204854442295, -0.22250670166436579, -0.2229185407560113, -0.22263050462954143, 0.22211829326750868, 0.222435691644968], -3.2584674906103746) [0.2222589889401393, 0.22303162155027603, -0.22233507347166273, 0.2223063941250432, -0.22249891157158774, 0.22256648942345675, 0.2225823613659221, 0.22243457465315886, 0.2223478696206956, 0.22266204854442295, -0.22250670166436579, -0.2229185407560113, -0.22263050462954143, 0.22211829326750868, 0.222435691644968] -3.2584674906103746
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018850090119428842
curgen: 100 fitness: -0.0007574839172264092
curgen: 150 fitness: -0.0006335096169607368
curgen: 200 fitness: -0.0006335096169607368
curgen: 250 fitness: -0.0005937488717506767
curgen: 300 fitness: -0.0005937488717506767
curgen: 350 fitness: -0.0005937488717506767
curgen: 400 fitness: -0.0005937488717506767
curgen: 450 fitness: -0.0004545626404990344
curgen: 500 fitness: -0.0004545626404990344
CoordinateCreature{Vector{Float64}}([0.00014319498453915541, -0.0005455282376982024, -9.331395235810127e-5, -0.0002043968605633205, -0.0005297513660227898, -0.00018877900977759326, -0.0002797796069109863, 6.328672912143624e-5, 4.0032874892402786e-5, -0.0004078962901929729, 9.06156446312794e-5, -0.0006367397139767864, -0.0007842459662176381, 0.00023877390818836564, 0.0005200035835133907], 0.0004545626404990344) [0.00014319498453915541, -0.0005455282376982024, -9.331395235810127e-5, -0.0002043968605633205, -0.0005297513660227898, -0.00018877900977759326, -0.0002797796069109863, 6.328672912143624e-5, 4.0032874892402786e-5, -0.0004078962901929729, 9.06156446312794e-5, -0.0006367397139767864, -0.0007842459662176381, 0.00023877390818836564, 0.0005200035835133907] 0.0004545626404990344
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
