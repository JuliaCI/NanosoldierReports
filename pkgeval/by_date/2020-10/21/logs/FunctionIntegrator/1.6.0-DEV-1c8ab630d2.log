Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_7rSXoZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_7rSXoZ/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.305803 seconds (293.32 k allocations: 13.822 MiB, 93.01% compilation time)
Running: chebyshev_quadrature with k=1
  2.359849 seconds (2.25 M allocations: 130.522 MiB, 3.51% gc time, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.554628 seconds (417.67 k allocations: 24.215 MiB, 22.38% gc time, 94.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.271581 seconds (483.50 k allocations: 27.370 MiB, 89.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.268357 seconds (427.02 k allocations: 23.934 MiB, 12.86% gc time, 92.13% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 63.223262 seconds (35.47 M allocations: 2.979 GiB, 20.44% gc time, 82.45% compilation time)
Running: laguerre_quadrature with k=1
  4.655442 seconds (3.24 M allocations: 182.150 MiB, 3.08% gc time, 99.93% compilation time)
Running: legendre_quadrature
  0.378044 seconds (211.55 k allocations: 12.246 MiB, 45.14% gc time, 99.51% compilation time)
Running: lobatto_quadrature
  0.699765 seconds (340.05 k allocations: 20.664 MiB, 99.68% compilation time)
Running: radau_quadrature
  0.563120 seconds (462.74 k allocations: 28.388 MiB, 3.47% gc time, 99.62% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.133640 seconds (100.02 M allocations: 1.491 GiB, 0.62% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.134557 seconds (173.35 k allocations: 3.888 MiB, 39.05% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 45.896628 seconds (100.02 M allocations: 1.491 GiB, 0.46% gc time, 0.20% compilation time)
Running: rombergs_method
  0.683115 seconds (741.47 k allocations: 43.144 MiB, 3.37% gc time, 99.67% compilation time)
Running: simpsons_rule
  0.031353 seconds (48.05 k allocations: 2.634 MiB, 93.06% compilation time)
Running: simpsons38_rule
  0.098308 seconds (111.42 k allocations: 5.954 MiB, 97.93% compilation time)
Running: trapezoidal_rule
  0.293855 seconds (1.72 M allocations: 28.729 MiB, 20.24% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.094562 seconds (30.72 k allocations: 1.831 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.594748 seconds (297.68 k allocations: 15.856 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.184844 seconds (94.22 k allocations: 2.707 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=3
  0.232788 seconds (82.47 k allocations: 2.508 MiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.184497 seconds (65.08 k allocations: 2.154 MiB, 99.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.447559 seconds (510.63 k allocations: 162.277 MiB, 8.30% gc time, 25.60% compilation time)
Running: legendre_quadrature
  0.177265 seconds (42.23 k allocations: 2.451 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.018873 seconds (16.20 k allocations: 1.010 MiB, 99.06% compilation time)
Running: radau_quadrature
  0.018996 seconds (16.31 k allocations: 1.017 MiB, 99.00% compilation time)
Running: rectangle_rule_left
 12.740661 seconds (471.41 M allocations: 7.025 GiB, 4.79% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.923586 seconds (476.96 M allocations: 7.107 GiB, 5.58% gc time)
Running: rombergs_method
  0.342291 seconds (334.36 k allocations: 19.158 MiB, 99.88% compilation time)
Running: simpsons_rule
  0.000046 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.067933 seconds (19.43 k allocations: 1.184 MiB, 99.88% compilation time)
Running: trapezoidal_rule
  0.137249 seconds (16.97 k allocations: 1.034 MiB, 99.94% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.011589 seconds (1.03 k allocations: 34.125 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=1
  0.074117 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.081937 seconds (2.71 k allocations: 124.266 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.093888 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.138307 seconds (2.31 k allocations: 109.297 KiB, 99.94% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.259875 seconds (369.33 k allocations: 19.504 MiB, 99.22% compilation time)
Running: legendre_quadrature
  0.055127 seconds (1.28 k allocations: 65.891 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000308 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000211 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000298 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.114041 seconds (1.04 k allocations: 56.469 KiB, 99.81% compilation time)
Running: simpsons_rule
  0.000021 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.028627 seconds (923 allocations: 39.281 KiB, 99.74% compilation time)
Running: trapezoidal_rule
  0.018050 seconds (44.29 k allocations: 702.859 KiB, 91.58% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.067512 seconds (83.49 k allocations: 5.002 MiB, 99.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.229082 seconds (235.65 k allocations: 13.387 MiB, 15.43% gc time, 99.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.271337 seconds (289.14 k allocations: 16.397 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.509438 seconds (239.80 k allocations: 13.536 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.361247 seconds (239.80 k allocations: 13.470 MiB, 7.50% gc time, 99.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.877390 seconds (454.94 k allocations: 163.900 MiB, 29.34% gc time, 32.02% compilation time)
Running: legendre_quadrature
  0.118543 seconds (190.36 k allocations: 11.086 MiB, 98.49% compilation time)
Running: lobatto_quadrature
  0.182263 seconds (201.88 k allocations: 11.842 MiB, 99.05% compilation time)
Running: radau_quadrature
  0.250578 seconds (201.87 k allocations: 11.807 MiB, 94.37% compilation time)
Running: rectangle_rule_left
  0.496468 seconds (19.37 k allocations: 1.189 MiB, 4.56% compilation time)
Running: rectangle_rule_midpoint
  0.034200 seconds (25.55 k allocations: 1.616 MiB, 99.56% compilation time)
Running: rectangle_rule_right
  0.778300 seconds (17.90 k allocations: 1.099 MiB, 37.11% compilation time)
Running: rombergs_method
  0.109965 seconds (137.77 k allocations: 8.030 MiB, 94.93% compilation time)
Running: simpsons_rule
  0.046979 seconds (37.98 k allocations: 2.442 MiB, 99.65% compilation time)
Running: simpsons38_rule
  0.084233 seconds (43.94 k allocations: 2.785 MiB, 47.74% gc time, 99.80% compilation time)
Running: trapezoidal_rule
  0.022845 seconds (43.20 k allocations: 1.730 MiB, 96.92% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.051891 seconds (68.44 k allocations: 3.060 MiB, 98.03% compilation time)
Running: chebyshev_quadrature with k=1
  0.242668 seconds (242.24 k allocations: 13.474 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=2
  0.514437 seconds (296.17 k allocations: 16.372 MiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.232797 seconds (246.37 k allocations: 13.522 MiB, 11.27% gc time, 99.22% compilation time)
Running: chebyshev_quadrature with k=4
  0.452433 seconds (246.37 k allocations: 13.536 MiB, 99.61% compilation time)
Running: hermite_quadrature with k=2
 26.696071 seconds (20.49 M allocations: 1.088 GiB, 5.45% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.122146 seconds (464.12 k allocations: 50.105 MiB, 31.51% gc time, 65.91% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.262381 seconds (282.35 k allocations: 15.789 MiB, 12.94% gc time, 98.65% compilation time)
Running: legendre_quadrature
  0.187328 seconds (196.90 k allocations: 11.413 MiB, 97.95% compilation time)
Running: lobatto_quadrature
  0.336209 seconds (222.53 k allocations: 37.584 MiB, 4.56% gc time, 85.93% compilation time)
Running: radau_quadrature
  0.171950 seconds (219.12 k allocations: 30.267 MiB, 8.58% gc time, 88.73% compilation time)
Running: rectangle_rule_left
  0.095895 seconds (22.28 k allocations: 1.333 MiB, 99.86% compilation time)
Running: rectangle_rule_midpoint
  0.030573 seconds (27.36 k allocations: 1.703 MiB, 99.59% compilation time)
Running: rectangle_rule_right
  0.020006 seconds (19.02 k allocations: 1.153 MiB, 99.31% compilation time)
Running: rombergs_method
  0.175758 seconds (140.11 k allocations: 8.068 MiB, 98.68% compilation time)
Running: simpsons_rule
  0.041027 seconds (45.46 k allocations: 2.710 MiB, 99.44% compilation time)
Running: simpsons38_rule
  0.032703 seconds (58.91 k allocations: 3.170 MiB, 98.71% compilation time)
Running: trapezoidal_rule
  0.022609 seconds (29.23 k allocations: 1.655 MiB, 98.81% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.161685 seconds (52.41 k allocations: 2.720 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.183536 seconds (237.76 k allocations: 13.243 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.355063 seconds (291.35 k allocations: 16.171 MiB, 6.70% gc time, 99.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.280623 seconds (241.91 k allocations: 13.331 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.305003 seconds (241.91 k allocations: 13.331 MiB, 99.26% compilation time)
Running: hermite_quadrature with k=2
  0.224013 seconds (175.13 k allocations: 10.126 MiB, 9.98% gc time, 99.06% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  9.097503 seconds (457.38 k allocations: 1.175 GiB, 36.99% gc time, 11.78% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.319154 seconds (277.64 k allocations: 15.553 MiB, 98.94% compilation time)
Running: legendre_quadrature
  0.505623 seconds (192.47 k allocations: 11.190 MiB, 3.37% gc time, 99.55% compilation time)
Running: lobatto_quadrature
  0.140435 seconds (213.29 k allocations: 23.312 MiB, 87.88% compilation time)
Running: radau_quadrature
  0.381076 seconds (212.45 k allocations: 21.243 MiB, 4.38% gc time, 81.10% compilation time)
Running: rectangle_rule_left
  0.022352 seconds (20.07 k allocations: 1.228 MiB, 99.45% compilation time)
Running: rectangle_rule_midpoint
  0.035158 seconds (26.25 k allocations: 1.652 MiB, 99.64% compilation time)
Running: rectangle_rule_right
  0.020445 seconds (17.88 k allocations: 1.099 MiB, 99.38% compilation time)
Running: rombergs_method
  0.139025 seconds (135.95 k allocations: 7.879 MiB, 98.26% compilation time)
Running: simpsons_rule
  0.089450 seconds (40.80 k allocations: 2.541 MiB, 99.76% compilation time)
Running: simpsons38_rule
  0.302289 seconds (49.73 k allocations: 2.931 MiB, 99.91% compilation time)
Running: trapezoidal_rule
  0.032509 seconds (24.14 k allocations: 1.492 MiB, 99.41% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.056999 seconds (40.61 k allocations: 2.580 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.377651 seconds (236.14 k allocations: 13.462 MiB, 3.66% gc time, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.808793 seconds (289.64 k allocations: 16.487 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.911814 seconds (240.28 k allocations: 13.548 MiB, 99.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.532220 seconds (240.28 k allocations: 13.373 MiB, 3.64% gc time, 99.75% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.826964 seconds (455.49 k allocations: 194.947 MiB, 7.00% gc time, 38.47% compilation time)
Running: legendre_quadrature
  0.412091 seconds (190.86 k allocations: 11.114 MiB, 99.05% compilation time)
Running: lobatto_quadrature
  0.259270 seconds (202.37 k allocations: 11.832 MiB, 99.08% compilation time)
Running: radau_quadrature
  0.221052 seconds (202.37 k allocations: 11.838 MiB, 6.21% gc time, 98.90% compilation time)
Running: rectangle_rule_left
  0.390682 seconds (19.89 k allocations: 1.214 MiB, 21.74% compilation time)
Running: rectangle_rule_midpoint
  0.028545 seconds (25.89 k allocations: 1.634 MiB, 99.51% compilation time)
Running: rectangle_rule_right
  0.156602 seconds (18.25 k allocations: 1.118 MiB, 13.45% compilation time)
Running: rombergs_method
  0.545876 seconds (149.07 k allocations: 8.791 MiB, 99.15% compilation time)
Running: simpsons_rule
  0.263857 seconds (38.61 k allocations: 2.470 MiB, 99.93% compilation time)
Running: simpsons38_rule
  0.096766 seconds (44.65 k allocations: 2.815 MiB, 99.80% compilation time)
Running: trapezoidal_rule
  0.091092 seconds (44.13 k allocations: 1.763 MiB, 99.40% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.021451 seconds (40.35 k allocations: 2.510 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=1
  0.340414 seconds (236.73 k allocations: 13.422 MiB, 6.75% gc time, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.226069 seconds (290.27 k allocations: 16.392 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.191063 seconds (240.88 k allocations: 13.468 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.200853 seconds (240.87 k allocations: 13.545 MiB, 9.72% gc time, 98.66% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.670203 seconds (456.19 k allocations: 149.629 MiB, 8.38% gc time, 21.75% compilation time)
Running: legendre_quadrature
  0.244561 seconds (191.45 k allocations: 11.126 MiB, 99.01% compilation time)
Running: lobatto_quadrature
  0.290794 seconds (202.97 k allocations: 11.875 MiB, 97.15% compilation time)
Running: radau_quadrature
  0.146248 seconds (202.97 k allocations: 11.856 MiB, 9.36% gc time, 98.42% compilation time)
Running: rectangle_rule_left
  0.563212 seconds (20.14 k allocations: 1.227 MiB, 4.10% compilation time)
Running: rectangle_rule_midpoint
  0.020146 seconds (25.89 k allocations: 1.635 MiB, 99.10% compilation time)
Running: rectangle_rule_right
  0.684184 seconds (18.20 k allocations: 1.115 MiB, 3.46% compilation time)
Running: rombergs_method
  0.197559 seconds (138.99 k allocations: 8.082 MiB, 98.18% compilation time)
Running: simpsons_rule
  0.032005 seconds (39.09 k allocations: 2.489 MiB, 71.57% compilation time)
Running: simpsons38_rule
  0.062126 seconds (45.35 k allocations: 2.842 MiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.019707 seconds (56.28 k allocations: 1.959 MiB, 95.07% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.147031 seconds (152.12 k allocations: 9.116 MiB, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.217424 seconds (70.34 k allocations: 2.237 MiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.156593 seconds (105.50 k allocations: 2.900 MiB, 97.73% compilation time)
Running: chebyshev_quadrature with k=3
  0.151152 seconds (92.98 k allocations: 2.686 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.241840 seconds (72.52 k allocations: 2.280 MiB, 98.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.637704 seconds (485.54 k allocations: 168.217 MiB, 5.70% gc time, 39.29% compilation time)
Running: legendre_quadrature
  0.103482 seconds (19.14 k allocations: 1.126 MiB, 99.73% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000037 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.275952 seconds (590.00 M allocations: 8.792 GiB, 6.10% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.131591 seconds (592.75 M allocations: 8.833 GiB, 6.76% gc time)
Running: rombergs_method
  0.180493 seconds (20.91 k allocations: 1.197 MiB, 99.77% compilation time)
Running: simpsons_rule
  0.000020 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.017661 seconds (463 allocations: 22.578 KiB, 99.38% compilation time)
Running: trapezoidal_rule
  0.011402 seconds (171 allocations: 7.859 KiB, 98.96% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.839133 seconds (209.94 M allocations: 3.138 GiB, 2.21% gc time, 2.08% compilation time)
Running: chebyshev_quadrature with k=1
  0.446287 seconds (423.02 k allocations: 23.686 MiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
 19.902622 seconds (478.59 k allocations: 4.041 GiB, 12.72% gc time, 4.56% compilation time)
Running: chebyshev_quadrature with k=3
  7.698574 seconds (254.26 k allocations: 1.642 GiB, 4.53% gc time, 2.77% compilation time)
Running: chebyshev_quadrature with k=4
 10.508498 seconds (254.26 k allocations: 2.261 GiB, 2.37% gc time, 1.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.371552 seconds (493.07 k allocations: 13.255 GiB, 12.61% gc time, 1.20% compilation time)
Running: legendre_quadrature.
  9.118524 seconds (228.94 k allocations: 1.976 GiB, 1.13% gc time, 3.35% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.796549 seconds (8.24 M allocations: 13.384 GiB, 16.96% gc time, 0.82% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.057884 seconds (7.24 M allocations: 13.369 GiB, 13.34% gc time, 2.33% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.594332 seconds (22.88 k allocations: 1.394 MiB, 1.00% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.231765 seconds (31.46 k allocations: 1.956 MiB, 2.33% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.313320 seconds (23.09 k allocations: 1.403 MiB, 1.41% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.164552 seconds (448.72 k allocations: 153.518 MiB, 1.60% gc time, 24.69% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.480630 seconds (200.04 M allocations: 2.983 GiB, 2.63% gc time, 0.39% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.110846 seconds (600.05 M allocations: 8.944 GiB, 5.87% gc time, 0.46% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.036980 seconds (600.03 M allocations: 8.943 GiB, 3.91% gc time, 0.44% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.104646 seconds (111.10 k allocations: 4.245 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.251462 seconds (252.71 k allocations: 13.877 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.225737 seconds (277.25 k allocations: 14.964 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=3
  0.246390 seconds (224.24 k allocations: 11.980 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.398696 seconds (224.24 k allocations: 11.976 MiB, 99.63% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.403449 seconds (394.78 k allocations: 35.536 MiB, 94.19% compilation time)
Running: laguerre_quadrature with k=2
  0.203263 seconds (185.19 k allocations: 11.091 MiB, 81.68% compilation time)
Running: legendre_quadrature
  0.223092 seconds (149.17 k allocations: 8.338 MiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.027088 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016750 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.057901 seconds (19.35 k allocations: 1.157 MiB, 70.03% compilation time)
Running: rectangle_rule_midpoint
  0.125174 seconds (26.33 k allocations: 1.636 MiB, 90.92% compilation time)
Running: rectangle_rule_right
  0.047722 seconds (17.96 k allocations: 1.084 MiB, 49.16% compilation time)
Running: rombergs_method
  0.269534 seconds (176.51 k allocations: 10.191 MiB, 97.83% compilation time)
Running: simpsons_rule
  0.000575 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.072945 seconds (80.36 k allocations: 3.491 MiB, 98.38% compilation time)
Running: trapezoidal_rule
  0.107527 seconds (2.39 M allocations: 37.744 MiB, 26.52% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000634 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.112363 seconds (2.46 k allocations: 1.691 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.107564 seconds (2.71 k allocations: 2.355 MiB, 96.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.093362 seconds (2.31 k allocations: 2.028 MiB, 96.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.133928 seconds (2.31 k allocations: 1.469 MiB, 98.13% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.451426 seconds (371.61 k allocations: 905.325 MiB, 7.92% gc time, 7.08% compilation time)
Running: legendre_quadrature
  0.044451 seconds (1.27 k allocations: 68.203 KiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000124 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000090 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.342112 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000393 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.359349 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.052368 seconds (993 allocations: 56.609 KiB, 99.63% compilation time)
Running: simpsons_rule
  0.000023 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000591 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000142 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.102887 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.104407 seconds (2.79 k allocations: 780.188 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.101417 seconds (2.39 k allocations: 661.047 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.105049 seconds (2.39 k allocations: 491.547 KiB, 99.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.497742 seconds (378.17 k allocations: 253.499 MiB, 31.91% compilation time)
Running: legendre_quadrature
  0.065681 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000040 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.098488 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000066 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.008057 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.107168 seconds (1.21 k allocations: 64.875 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000448 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
