Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_WZJB8Y/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_WZJB8Y/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.321424 seconds (293.10 k allocations: 13.808 MiB, 92.02% compilation time)
Running: chebyshev_quadrature with k=1
  3.014315 seconds (2.25 M allocations: 130.583 MiB, 3.55% gc time, 99.03% compilation time)
Running: chebyshev_quadrature with k=2
  1.537224 seconds (417.67 k allocations: 24.228 MiB, 80.09% gc time, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.428016 seconds (483.51 k allocations: 27.374 MiB, 94.48% compilation time)
Running: chebyshev_quadrature with k=4
  1.581282 seconds (427.02 k allocations: 23.934 MiB, 47.55% gc time, 88.78% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 57.974841 seconds (35.46 M allocations: 2.979 GiB, 17.29% gc time, 80.75% compilation time)
Running: laguerre_quadrature with k=1
  3.555647 seconds (3.24 M allocations: 182.189 MiB, 4.05% gc time, 99.78% compilation time)
Running: legendre_quadrature
  0.232895 seconds (211.60 k allocations: 12.253 MiB, 16.29% gc time, 99.19% compilation time)
Running: lobatto_quadrature
  0.545324 seconds (340.11 k allocations: 20.669 MiB, 99.51% compilation time)
Running: radau_quadrature
  0.812986 seconds (462.72 k allocations: 28.386 MiB, 9.76% gc time, 98.43% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 43.562212 seconds (100.02 M allocations: 1.491 GiB, 0.51% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.117862 seconds (173.35 k allocations: 3.888 MiB, 46.21% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.003136 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.07% compilation time)
Running: rombergs_method
  0.875324 seconds (741.53 k allocations: 43.161 MiB, 4.95% gc time, 99.57% compilation time)
Running: simpsons_rule
  0.243567 seconds (48.05 k allocations: 2.634 MiB, 96.18% compilation time)
Running: simpsons38_rule
  0.344473 seconds (111.31 k allocations: 5.947 MiB, 99.55% compilation time)
Running: trapezoidal_rule
  0.379791 seconds (1.72 M allocations: 28.722 MiB, 3.66% gc time, 43.68% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.187762 seconds (30.72 k allocations: 1.831 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.439283 seconds (295.70 k allocations: 15.755 MiB, 99.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.185476 seconds (94.22 k allocations: 2.707 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.261633 seconds (82.47 k allocations: 2.508 MiB, 20.52% gc time, 78.86% compilation time)
Running: chebyshev_quadrature with k=4
  0.124088 seconds (65.08 k allocations: 2.154 MiB, 98.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.389968 seconds (510.69 k allocations: 162.296 MiB, 1.35% gc time, 44.78% compilation time)
Running: legendre_quadrature
  0.186144 seconds (42.28 k allocations: 2.456 MiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.039760 seconds (16.25 k allocations: 1.015 MiB, 99.55% compilation time)
Running: radau_quadrature
  0.104919 seconds (16.36 k allocations: 1.022 MiB, 96.88% compilation time)
Running: rectangle_rule_left
 12.938708 seconds (471.41 M allocations: 7.025 GiB, 8.08% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.677661 seconds (476.96 M allocations: 7.107 GiB, 7.88% gc time)
Running: rombergs_method
  0.632774 seconds (334.41 k allocations: 19.162 MiB, 2.96% gc time, 99.92% compilation time)
Running: simpsons_rule
  0.000039 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.055134 seconds (19.43 k allocations: 1.184 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.039772 seconds (16.97 k allocations: 1.034 MiB, 99.75% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015427 seconds (1.03 k allocations: 34.125 KiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=1
  0.133751 seconds (2.46 k allocations: 116.359 KiB, 97.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.110033 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.109555 seconds (2.31 k allocations: 109.297 KiB, 97.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.079872 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.479692 seconds (369.34 k allocations: 19.522 MiB, 99.57% compilation time)
Running: legendre_quadrature
  0.067336 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000706 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000031 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000215 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000130 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000223 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.102690 seconds (1.04 k allocations: 56.469 KiB, 99.84% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023652 seconds (923 allocations: 39.281 KiB, 70.86% compilation time)
Running: trapezoidal_rule
  0.022040 seconds (44.29 k allocations: 702.859 KiB, 74.57% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.325347 seconds (83.49 k allocations: 5.001 MiB, 15.56% gc time, 99.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.271197 seconds (235.65 k allocations: 13.387 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.407457 seconds (289.13 k allocations: 16.379 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.177406 seconds (239.80 k allocations: 13.536 MiB, 14.55% gc time, 98.79% compilation time)
Running: chebyshev_quadrature with k=4
  0.212333 seconds (239.80 k allocations: 13.486 MiB, 99.03% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.335717 seconds (454.95 k allocations: 163.917 MiB, 4.56% gc time, 28.09% compilation time)
Running: legendre_quadrature
  0.205803 seconds (190.36 k allocations: 11.084 MiB, 99.09% compilation time)
Running: lobatto_quadrature
  0.324800 seconds (201.88 k allocations: 11.810 MiB, 98.58% compilation time)
Running: radau_quadrature
  0.181098 seconds (201.87 k allocations: 11.807 MiB, 98.94% compilation time)
Running: rectangle_rule_left
  0.484769 seconds (19.37 k allocations: 1.189 MiB, 5.20% compilation time)
Running: rectangle_rule_midpoint
  0.039212 seconds (25.55 k allocations: 1.616 MiB, 46.44% gc time, 99.56% compilation time)
Running: rectangle_rule_right
  0.626963 seconds (17.90 k allocations: 1.099 MiB, 3.66% compilation time)
Running: rombergs_method
  0.232662 seconds (137.77 k allocations: 8.029 MiB, 98.81% compilation time)
Running: simpsons_rule
  0.041227 seconds (37.98 k allocations: 2.442 MiB, 88.08% compilation time)
Running: simpsons38_rule
  0.062545 seconds (43.94 k allocations: 2.785 MiB, 99.74% compilation time)
Running: trapezoidal_rule
  0.106540 seconds (43.20 k allocations: 1.730 MiB, 99.12% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.032053 seconds (68.44 k allocations: 3.060 MiB, 97.01% compilation time)
Running: chebyshev_quadrature with k=1
  0.393829 seconds (242.24 k allocations: 13.474 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.307623 seconds (296.17 k allocations: 16.372 MiB, 9.93% gc time, 99.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.163241 seconds (246.37 k allocations: 13.527 MiB, 96.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.314226 seconds (246.37 k allocations: 13.520 MiB, 97.37% compilation time)
Running: hermite_quadrature with k=2
 29.975127 seconds (20.49 M allocations: 1.088 GiB, 15.37% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.407224 seconds (464.12 k allocations: 50.164 MiB, 48.09% gc time, 92.47% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.253250 seconds (282.35 k allocations: 15.789 MiB, 97.50% compilation time)
Running: legendre_quadrature
  0.284750 seconds (196.91 k allocations: 11.476 MiB, 9.40% gc time, 98.83% compilation time)
Running: lobatto_quadrature
  0.426210 seconds (222.53 k allocations: 37.585 MiB, 93.07% compilation time)
Running: radau_quadrature
  0.186250 seconds (219.12 k allocations: 30.267 MiB, 5.19% gc time, 85.40% compilation time)
Running: rectangle_rule_left
  0.037433 seconds (22.28 k allocations: 1.333 MiB, 99.66% compilation time)
Running: rectangle_rule_midpoint
  0.173268 seconds (27.36 k allocations: 1.703 MiB, 99.87% compilation time)
Running: rectangle_rule_right
  0.022013 seconds (19.02 k allocations: 1.153 MiB, 99.38% compilation time)
Running: rombergs_method
  0.367654 seconds (140.11 k allocations: 8.068 MiB, 99.24% compilation time)
Running: simpsons_rule
  0.027248 seconds (45.46 k allocations: 2.710 MiB, 98.98% compilation time)
Running: simpsons38_rule
  0.027611 seconds (58.91 k allocations: 3.170 MiB, 98.60% compilation time)
Running: trapezoidal_rule
  0.146888 seconds (29.23 k allocations: 1.655 MiB, 72.98% gc time, 97.89% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.053476 seconds (52.41 k allocations: 2.720 MiB, 97.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.422222 seconds (237.76 k allocations: 13.243 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.185565 seconds (291.35 k allocations: 16.171 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.401840 seconds (241.90 k allocations: 13.330 MiB, 5.64% gc time, 99.50% compilation time)
Running: chebyshev_quadrature with k=4
  0.241451 seconds (241.91 k allocations: 13.394 MiB, 99.08% compilation time)
Running: hermite_quadrature with k=2
  0.197995 seconds (175.13 k allocations: 10.126 MiB, 98.84% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 11.300783 seconds (457.38 k allocations: 1.175 GiB, 40.05% gc time, 5.71% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.487222 seconds (277.64 k allocations: 15.553 MiB, 99.19% compilation time)
Running: legendre_quadrature
  0.374484 seconds (192.47 k allocations: 11.190 MiB, 11.15% gc time, 99.37% compilation time)
Running: lobatto_quadrature
  0.306735 seconds (213.29 k allocations: 23.311 MiB, 94.47% compilation time)
Running: radau_quadrature
  0.282056 seconds (212.45 k allocations: 21.243 MiB, 5.65% gc time, 93.90% compilation time)
Running: rectangle_rule_left
  0.020740 seconds (20.07 k allocations: 1.229 MiB, 99.27% compilation time)
Running: rectangle_rule_midpoint
  0.050146 seconds (26.25 k allocations: 1.652 MiB, 99.72% compilation time)
Running: rectangle_rule_right
  0.036936 seconds (17.87 k allocations: 1.098 MiB, 99.64% compilation time)
Running: rombergs_method
  0.152168 seconds (135.95 k allocations: 7.879 MiB, 98.44% compilation time)
Running: simpsons_rule
  0.087969 seconds (40.80 k allocations: 2.541 MiB, 99.71% compilation time)
Running: simpsons38_rule
  0.076358 seconds (49.73 k allocations: 2.931 MiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.066657 seconds (24.14 k allocations: 1.492 MiB, 99.63% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.041963 seconds (40.61 k allocations: 2.580 MiB, 94.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.385637 seconds (236.14 k allocations: 13.461 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.517600 seconds (289.64 k allocations: 16.487 MiB, 6.19% gc time, 98.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.223531 seconds (240.29 k allocations: 13.569 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.262124 seconds (240.28 k allocations: 13.373 MiB, 99.04% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.454759 seconds (455.48 k allocations: 194.961 MiB, 12.54% gc time, 32.97% compilation time)
Running: legendre_quadrature
  0.461486 seconds (190.86 k allocations: 11.114 MiB, 99.48% compilation time)
Running: lobatto_quadrature
  0.506717 seconds (202.37 k allocations: 11.832 MiB, 99.55% compilation time)
Running: radau_quadrature
  0.353820 seconds (202.37 k allocations: 11.838 MiB, 7.07% gc time, 99.16% compilation time)
Running: rectangle_rule_left
  0.368668 seconds (19.89 k allocations: 1.214 MiB, 10.81% compilation time)
Running: rectangle_rule_midpoint
  0.117426 seconds (25.89 k allocations: 1.634 MiB, 99.85% compilation time)
Running: rectangle_rule_right
  0.348087 seconds (18.25 k allocations: 1.118 MiB, 59.40% compilation time)
Running: rombergs_method
  0.173992 seconds (149.07 k allocations: 8.790 MiB, 97.74% compilation time)
Running: simpsons_rule
  0.101819 seconds (38.61 k allocations: 2.470 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.048178 seconds (44.65 k allocations: 2.815 MiB, 98.46% compilation time)
Running: trapezoidal_rule
  0.020163 seconds (44.13 k allocations: 1.763 MiB, 96.48% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024713 seconds (40.35 k allocations: 2.510 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.339501 seconds (236.73 k allocations: 13.418 MiB, 8.31% gc time, 99.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.244176 seconds (290.27 k allocations: 16.393 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.368989 seconds (240.88 k allocations: 13.484 MiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=4
  0.333192 seconds (240.88 k allocations: 13.545 MiB, 12.15% gc time, 99.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.902335 seconds (456.19 k allocations: 149.645 MiB, 6.01% gc time, 30.89% compilation time)
Running: legendre_quadrature
  0.190762 seconds (191.45 k allocations: 11.126 MiB, 98.80% compilation time)
Running: lobatto_quadrature
  0.390983 seconds (202.97 k allocations: 11.859 MiB, 99.42% compilation time)
Running: radau_quadrature
  0.270912 seconds (202.97 k allocations: 11.852 MiB, 9.12% gc time, 99.07% compilation time)
Running: rectangle_rule_left
  0.616300 seconds (20.14 k allocations: 1.227 MiB, 3.46% compilation time)
Running: rectangle_rule_midpoint
  0.052753 seconds (25.89 k allocations: 1.635 MiB, 99.69% compilation time)
Running: rectangle_rule_right
  0.572797 seconds (18.20 k allocations: 1.115 MiB, 4.74% compilation time)
Running: rombergs_method
  0.230536 seconds (138.99 k allocations: 8.082 MiB, 80.84% compilation time)
Running: simpsons_rule
  0.023949 seconds (39.09 k allocations: 2.489 MiB, 99.12% compilation time)
Running: simpsons38_rule
  0.280802 seconds (45.35 k allocations: 2.842 MiB, 99.93% compilation time)
Running: trapezoidal_rule
  0.019486 seconds (56.28 k allocations: 1.959 MiB, 95.20% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.407845 seconds (152.11 k allocations: 9.114 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.180153 seconds (70.34 k allocations: 2.237 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.121195 seconds (105.50 k allocations: 2.900 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.130884 seconds (92.98 k allocations: 2.686 MiB, 97.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.167812 seconds (72.52 k allocations: 2.280 MiB, 98.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.201268 seconds (485.53 k allocations: 168.158 MiB, 9.15% gc time, 29.20% compilation time)
Running: legendre_quadrature
  0.305173 seconds (19.14 k allocations: 1.125 MiB, 88.84% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000032 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.375040 seconds (590.00 M allocations: 8.792 GiB, 7.54% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.178161 seconds (592.75 M allocations: 8.833 GiB, 6.65% gc time)
Running: rombergs_method
  0.130151 seconds (20.91 k allocations: 1.197 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.000036 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.018455 seconds (463 allocations: 22.578 KiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.016688 seconds (171 allocations: 7.859 KiB, 99.21% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.127415 seconds (209.94 M allocations: 3.138 GiB, 1.91% gc time, 1.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.765383 seconds (423.07 k allocations: 23.686 MiB, 1.29% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
 17.503456 seconds (478.64 k allocations: 4.041 GiB, 5.36% gc time, 2.68% compilation time)
Running: chebyshev_quadrature with k=3
  7.656816 seconds (254.26 k allocations: 1.642 GiB, 4.64% gc time, 4.14% compilation time)
Running: chebyshev_quadrature with k=4
 10.768588 seconds (254.26 k allocations: 2.261 GiB, 2.22% gc time, 3.07% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 37.469450 seconds (493.13 k allocations: 13.255 GiB, 12.24% gc time, 2.12% compilation time)
Running: legendre_quadrature.
  9.438360 seconds (228.99 k allocations: 1.976 GiB, 4.00% gc time, 4.48% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.106699 seconds (8.24 M allocations: 13.384 GiB, 15.90% gc time, 1.48% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.786961 seconds (7.24 M allocations: 13.369 GiB, 13.88% gc time, 2.28% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.005315 seconds (22.88 k allocations: 1.394 MiB, 0.37% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.749173 seconds (31.46 k allocations: 1.956 MiB, 0.40% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.968210 seconds (23.09 k allocations: 1.403 MiB, 0.49% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.150894 seconds (448.77 k allocations: 153.522 MiB, 1.92% gc time, 24.56% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.169603 seconds (200.04 M allocations: 2.983 GiB, 2.20% gc time, 0.36% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.945325 seconds (600.05 M allocations: 8.944 GiB, 5.93% gc time, 0.47% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.789155 seconds (600.03 M allocations: 8.943 GiB, 4.53% gc time, 0.18% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.128102 seconds (111.10 k allocations: 4.246 MiB, 60.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.442606 seconds (252.71 k allocations: 13.877 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.208614 seconds (277.25 k allocations: 14.964 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=3
  0.432301 seconds (224.24 k allocations: 11.980 MiB, 27.17% gc time, 99.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.234717 seconds (224.24 k allocations: 11.976 MiB, 99.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.353333 seconds (394.78 k allocations: 35.540 MiB, 93.55% compilation time)
Running: laguerre_quadrature with k=2
  0.440767 seconds (185.19 k allocations: 10.841 MiB, 92.17% compilation time)
Running: legendre_quadrature
  0.363390 seconds (149.17 k allocations: 8.338 MiB, 99.95% compilation time)
Running: lobatto_quadrature
  0.021048 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.040461 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.088526 seconds (19.35 k allocations: 1.157 MiB, 80.80% compilation time)
Running: rectangle_rule_midpoint
  0.147894 seconds (26.33 k allocations: 1.636 MiB, 94.26% compilation time)
Running: rectangle_rule_right
  0.052958 seconds (17.96 k allocations: 1.084 MiB, 66.55% compilation time)
Running: rombergs_method
  0.197115 seconds (176.49 k allocations: 10.190 MiB, 98.30% compilation time)
Running: simpsons_rule
  0.000499 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.045065 seconds (80.36 k allocations: 3.491 MiB, 98.62% compilation time)
Running: trapezoidal_rule
  0.148120 seconds (2.39 M allocations: 37.744 MiB, 45.80% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000706 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.141198 seconds (2.46 k allocations: 1.691 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.134081 seconds (2.71 k allocations: 2.355 MiB, 97.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.099021 seconds (2.31 k allocations: 2.028 MiB, 97.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.104810 seconds (2.31 k allocations: 1.469 MiB, 97.14% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.277098 seconds (371.61 k allocations: 905.325 MiB, 5.49% gc time, 14.69% compilation time)
Running: legendre_quadrature
  0.062127 seconds (1.27 k allocations: 68.203 KiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000194 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000140 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.328346 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.002962 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.428695 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062941 seconds (993 allocations: 56.609 KiB, 99.58% compilation time)
Running: simpsons_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001049 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000188 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.094954 seconds (2.53 k allocations: 579.203 KiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.160782 seconds (2.79 k allocations: 780.188 KiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.106947 seconds (2.39 k allocations: 661.047 KiB, 93.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.097167 seconds (2.39 k allocations: 491.547 KiB, 99.22% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.268962 seconds (378.17 k allocations: 253.436 MiB, 20.64% compilation time)
Running: legendre_quadrature
  0.075036 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000116 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000072 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.080714 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000130 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.010492 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.051787 seconds (1.21 k allocations: 64.875 KiB, 99.58% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000448 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
