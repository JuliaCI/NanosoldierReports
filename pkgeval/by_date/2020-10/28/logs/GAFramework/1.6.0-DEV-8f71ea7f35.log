################################################################################
# Set-up: 2020-10-28T08:32:22.756
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T08:32:25.722
#

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled


################################################################################
# Testing: 2020-10-28T08:32:46.363
#

     Testing GAFramework
Status `/tmp/jl_Ojw3gZ/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Ojw3gZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21718957023188096
curgen: 20 fitness: 0.21723333946775727
curgen: 30 fitness: 0.21723333946775727
curgen: 40 fitness: 0.21723333946775727
curgen: 50 fitness: 0.21723333946775727
CoordinateCreature{Vector{Float64}}([0.2224674255451889], -0.21723333946775727) 0.2224674255451889 -0.21723333946775727
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258087234353074
curgen: 100 fitness: 3.258358218974436
curgen: 150 fitness: 3.258390694010042
curgen: 200 fitness: 3.258408945858854
curgen: 250 fitness: 3.2584351277125525
curgen: 300 fitness: 3.258450724997426
curgen: 350 fitness: 3.2584538674828414
curgen: 400 fitness: 3.258454169838991
curgen: 450 fitness: 3.2584638393704712
curgen: 500 fitness: 3.258467791093301
CoordinateCreature{Vector{Float64}}([0.22281112913616868, 0.2224364748419744, 0.22240079471653956, -0.22255160283845316, 0.2230312066122529, -0.22272244584089687, -0.22262521046728315, 0.22263997795437504, 0.2222074595407184, 0.22249864954449072, -0.2220083898447404, 0.2226126285640832, 0.22263965029995755, -0.22261891962286026, -0.22241377307670543], -3.258467791093301) [0.22281112913616868, 0.2224364748419744, 0.22240079471653956, -0.22255160283845316, 0.2230312066122529, -0.22272244584089687, -0.22262521046728315, 0.22263997795437504, 0.2222074595407184, 0.22249864954449072, -0.2220083898447404, 0.2226126285640832, 0.22263965029995755, -0.22261891962286026, -0.22241377307670543] -3.258467791093301
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0017673249835468141
curgen: 100 fitness: -0.0017673249835468141
curgen: 150 fitness: -0.0017673249835468141
curgen: 200 fitness: -0.001286311093764425
curgen: 250 fitness: -0.001286311093764425
curgen: 300 fitness: -0.001286311093764425
curgen: 350 fitness: -0.0010511037218350339
curgen: 400 fitness: -0.0008342882109104721
curgen: 450 fitness: -0.0007786330168357836
curgen: 500 fitness: -0.0005538862886567131
CoordinateCreature{Vector{Float64}}([8.632302928734568e-5, -0.0012209717826547795, 0.0001640211201463706, 0.0009188820182921909, -0.00020614446561733658, -0.00013265761148705045, -0.0003497139104369668, 3.120325135535758e-5, 0.00022591338709584494, -5.810573316230767e-5, -0.0002918244960103248, -0.00010300378101889729, -6.822976418165632e-5, 4.314843521821424e-5, -0.00028696200560971493], 0.0005538862886567131) [8.632302928734568e-5, -0.0012209717826547795, 0.0001640211201463706, 0.0009188820182921909, -0.00020614446561733658, -0.00013265761148705045, -0.0003497139104369668, 3.120325135535758e-5, 0.00022591338709584494, -5.810573316230767e-5, -0.0002918244960103248, -0.00010300378101889729, -6.822976418165632e-5, 4.314843521821424e-5, -0.00028696200560971493] 0.0005538862886567131
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 


################################################################################
# Teardown: 2020-10-28T08:33:35.856
#

CPU usage: 53.02s (45.51s user, 7.61s kernel)

Network usage:
- eth0: 365.447 KiB received, 9.702 KiB sent
