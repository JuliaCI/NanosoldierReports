################################################################################
# PkgEval set-up: 2020-10-29T06:11:35.385
#

Julia Version 1.6.0-DEV.1363
Commit f727f4ba82 (2020-10-28 23:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-29T06:11:36.777
#

   Resolving package versions...
   Installed ArrayInterface ─────────────── v2.13.7
   Installed Arpack ─────────────────────── v0.4.0
   Installed Reexport ───────────────────── v0.2.0
   Installed DataValueInterfaces ────────── v1.0.0
   Installed Requires ───────────────────── v1.1.0
   Installed Tables ─────────────────────── v1.1.0
   Installed InvertedIndices ────────────── v1.0.0
   Installed LowRankModels ──────────────── v1.1.0
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed NaNMath ────────────────────── v0.3.4
   Installed OrderedCollections ─────────── v1.3.1
   Installed MacroTools ─────────────────── v0.5.6
   Installed DataStructures ─────────────── v0.18.8
   Installed Parameters ─────────────────── v0.12.1
   Installed StatsBase ──────────────────── v0.33.2
   Installed Optim ──────────────────────── v1.2.0
   Installed PositiveFactorizations ─────── v0.2.3
   Installed ScikitLearnBase ────────────── v0.5.0
   Installed IteratorInterfaceExtensions ── v1.0.0
   Installed SpecialFunctions ───────────── v0.10.3
   Installed LineSearches ───────────────── v7.1.0
   Installed ForwardDiff ────────────────── v0.10.12
   Installed DiffResults ────────────────── v1.0.2
   Installed Parsers ────────────────────── v1.0.11
   Installed TableTraits ────────────────── v1.0.0
   Installed Compat ─────────────────────── v3.23.0
   Installed NMF ────────────────────────── v0.4.1
   Installed NLSolversBase ──────────────── v7.7.1
   Installed JLLWrappers ────────────────── v1.1.3
   Installed DiffRules ──────────────────── v1.0.1
   Installed CategoricalArrays ──────────── v0.8.3
   Installed StructTypes ────────────────── v1.1.0
   Installed PooledArrays ───────────────── v0.5.3
   Installed FillArrays ─────────────────── v0.9.7
   Installed OpenBLAS_jll ───────────────── v0.3.10+0
   Installed DataAPI ────────────────────── v1.3.0
   Installed FiniteDiff ─────────────────── v2.7.0
   Installed CommonSubexpressions ───────── v0.3.0
   Installed JSON ───────────────────────── v0.21.1
   Installed Arpack_jll ─────────────────── v3.5.0+3
   Installed UnPack ─────────────────────── v1.0.2
   Installed DataFrames ─────────────────── v0.21.8
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed Missings ───────────────────── v0.4.4
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed StaticArrays ───────────────── v0.12.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [15d4e49f] + LowRankModels v1.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [4fba245c] + ArrayInterface v2.13.7
  [324d7699] + CategoricalArrays v0.8.3
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.23.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.8
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [1a297f60] + FillArrays v0.9.7
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [d3d80556] + LineSearches v7.1.0
  [15d4e49f] + LowRankModels v1.1.0
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [d41bc354] + NLSolversBase v7.7.1
  [6ef6ca0d] + NMF v0.4.1
  [77ba4419] + NaNMath v0.3.4
  [429524aa] + Optim v1.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [6e75b9c4] + ScikitLearnBase v0.5.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.33.2
  [856f2bd8] + StructTypes v1.1.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [3a884ed6] + UnPack v1.0.2
  [68821587] + Arpack_jll v3.5.0+3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-29T06:11:41.972
#


     Testing LowRankModels
Status `/tmp/jl_yYMb28/Project.toml`
  [7d9fca2a] Arpack v0.4.0
  [a93c6f00] DataFrames v0.21.8
  [15d4e49f] LowRankModels v1.1.0
  [6ef6ca0d] NMF v0.4.1
  [429524aa] Optim v1.2.0
  [ce6b1742] RDatasets v0.6.10
  [ae029012] Requires v1.1.0
  [6e75b9c4] ScikitLearnBase v0.5.0
  [2913bbd2] StatsBase v0.33.2
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [1a1011a3] SharedArrays
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_yYMb28/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [4fba245c] ArrayInterface v2.13.7
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.3
  [944b1d66] CodecZlib v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.23.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.8
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.4.4
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [d3d80556] LineSearches v7.1.0
  [15d4e49f] LowRankModels v1.1.0
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.1
  [6ef6ca0d] NMF v0.4.1
  [77ba4419] NaNMath v0.3.4
  [429524aa] Optim v1.2.0
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [df47a6cb] RData v0.7.2
  [ce6b1742] RDatasets v0.6.10
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [6e75b9c4] ScikitLearnBase v0.5.0
  [91c51154] SentinelArrays v1.2.16
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.33.2
  [856f2bd8] StructTypes v1.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [f269a46b] TimeZones v1.4.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [68821587] Arpack_jll v3.5.0+3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
  7.009261 seconds (13.63 M allocations: 709.205 MiB, 6.11% gc time, 93.62% compilation time)
successfully fit matrix
successfully fit matrix with some entries unobserved
successfully fit dataframe
successfully imputed entries
old scale:5.5407232668952195
new scale:0.08432173961300722
old scale:6.971413858793028
new scale:0.04658599387542715
old scale:5.5407232668952195
new scale:0.08432173961300722
old scale:6.971413858793028
new scale:0.04658599387542715
successfully sampled from model
successfully fit sparse GLRM
Fitting GLRM
Iteration 10: objective value = 5.050854477844201
SparseProxGradParams(1.0, 100, 1, 1.0e-5, 0.01)
Fitting GLRM
obj went up to 717687.067684904; reducing step size to 0.6666666666666666
obj went up to 7495.539876570217; reducing step size to 0.5145000000000001
obj went up to 166.3884357084192; reducing step size to 0.3970653750000001
Iteration 10: objective value = 20.418717916775908
SVD initialization
  6.039801 seconds (7.99 M allocations: 476.010 MiB, 9.56% gc time, 99.75% compilation time)
Streaming fit
  1.889395 seconds (2.38 M allocations: 135.839 MiB, 3.56% gc time, 96.35% compilation time)
Standard fit
Fitting GLRM
Iteration 10: objective value = 5378.896914617166
  1.662856 seconds (20.93 M allocations: 624.995 MiB, 7.11% gc time, 7.82% compilation time)
Streaming GLRM performs 0.92 times worse than SVD initialization
Streaming GLRM performs 0.93 times worse than standard GLRM
Streaming impute
  0.231565 seconds (385.13 k allocations: 28.340 MiB, 6.18% gc time, 65.27% compilation time)
censored data example
fitting train GLRM for reg_param 100.0
Fitting GLRM
Iteration 10: objective value = 6018.999520765
computing train and test error for reg_param 100.0:
	train error: 0.9999999384299292
	test error:  0.99999993987323
	sum of solution, one norm of solution:  (-0.0341050461196374, 0.0341050461196374)
fitting train GLRM for reg_param 1.0
Fitting GLRM
Iteration 10: objective value = 95.74761135123084
computing train and test error for reg_param 1.0:
	train error: 0.0002236386155124051
	test error:  0.00023874263419652287
	sum of solution, one norm of solution:  (-198.4738880377805, 198.4738880377805)
fitting train GLRM for reg_param 0.01
Fitting GLRM
Iteration 10: objective value = 5.244510922059888
computing train and test error for reg_param 0.01:
	train error: 0.0005106426843740895
	test error:  0.0005668619062795066
	sum of solution, one norm of solution:  (200.36314615528062, 200.36314615528062)
3×5 DataFrame
│ Row │ train_error │ test_error  │ train_time │ reg_param │ solution_1norm │
│     │ Float64     │ Float64     │ Float64    │ Float64   │ Float64        │
├─────┼─────────────┼─────────────┼────────────┼───────────┼────────────────┤
│ 1   │ 1.0         │ 1.0         │ 0.274203   │ 100.0     │ 0.034105       │
│ 2   │ 0.000223639 │ 0.000238743 │ 0.423064   │ 1.0       │ 198.474        │
│ 3   │ 0.000510643 │ 0.000566862 │ 0.569424   │ 0.01      │ 200.363        │
[(-0.0341050461196374, 0.0341050461196374), (-198.4738880377805, 198.4738880377805), (200.36314615528062, 200.36314615528062)]
cross validation example
Computing cross validation error for each fold
flattening observations
computing CV folds

forming train and test GLRM for fold 1
training model on 2000 samples and testing on 500
fitting train GLRM for fold 1
Fitting GLRM
Iteration 10: objective value = 302.0899300347453
Iteration 20: objective value = 257.6230089911022
Iteration 30: objective value = 256.3849606918013
Iteration 40: objective value = 255.4466506849803
Iteration 50: objective value = 254.68132823091184
Iteration 60: objective value = 254.1244816946712
Iteration 70: objective value = 253.7141140912879
Iteration 80: objective value = 253.39094431684197
computing train and test error for fold 1:
	train error: 0.11633700173206155
	test error:  0.11388753308553949

forming train and test GLRM for fold 2
training model on 2006 samples and testing on 494
fitting train GLRM for fold 2
Fitting GLRM
Iteration 10: objective value = 307.02204939849526
Iteration 20: objective value = 241.00725554929758
Iteration 30: objective value = 239.8529386108896
Iteration 40: objective value = 238.9649696139723
Iteration 50: objective value = 238.20232474274874
Iteration 60: objective value = 237.60186312705997
Iteration 70: objective value = 237.11853422537473
Iteration 80: objective value = 236.7632492193902
Iteration 90: objective value = 236.47381333801982
computing train and test error for fold 2:
	train error: 0.10866700461919171
	test error:  0.14793291058026947

forming train and test GLRM for fold 3
training model on 1986 samples and testing on 514
fitting train GLRM for fold 3
Fitting GLRM
Iteration 10: objective value = 354.3651513508219
Iteration 20: objective value = 277.7143518268859
Iteration 30: objective value = 276.1792601937759
Iteration 40: objective value = 274.6561663560085
Iteration 50: objective value = 272.9880801032184
Iteration 60: objective value = 270.8067338336658
Iteration 70: objective value = 267.82832137000054
Iteration 80: objective value = 262.9702707318137
Iteration 90: objective value = 257.50388180130585
Iteration 100: objective value = 253.7775890174768
computing train and test error for fold 3:
	train error: 0.11760940216741908
	test error:  0.12028973943362224

forming train and test GLRM for fold 4
training model on 1993 samples and testing on 507
fitting train GLRM for fold 4
Fitting GLRM
Iteration 10: objective value = 311.0724259168958
Iteration 20: objective value = 209.50188679063865
Iteration 30: objective value = 208.15284223911007
Iteration 40: objective value = 207.1591372819591
Iteration 50: objective value = 206.40830181095376
Iteration 60: objective value = 205.83538951777342
Iteration 70: objective value = 205.42104737452436
Iteration 80: objective value = 205.12371126558853
Iteration 90: objective value = 204.85613566804912
Iteration 100: objective value = 204.6110330516612
computing train and test error for fold 4:
	train error: 0.09258638290005007
	test error:  0.20153786383561267

forming train and test GLRM for fold 5
training model on 2015 samples and testing on 485
fitting train GLRM for fold 5
Fitting GLRM
Iteration 10: objective value = 333.6699633603418
Iteration 20: objective value = 290.0510278256145
Iteration 30: objective value = 288.1335684434171
Iteration 40: objective value = 286.19751267654004
Iteration 50: objective value = 283.9642265247198
Iteration 60: objective value = 281.5593675636171
Iteration 70: objective value = 279.04514290745607
Iteration 80: objective value = 277.0335184056188
Iteration 90: objective value = 275.76007124318176
Iteration 100: objective value = 275.0538292878296
computing train and test error for fold 5:
	train error: 0.1266742837050127
	test error:  0.07603848198438774
Computing training and testing error as a function of iteration number
 train error  test error        time
  3.4767e+03  1.4274e+00  1.3211e-02
Computing regularization path
flattening observations
splitting train and test sets
forming train and test GLRMs
training model on 2237 samples and testing on 263
params = ProxGradParams(1.0, 50, 1, 1, 1.0e-5, 0.0001, 0.01)
fitting train GLRM for reg_param 100.0
Fitting GLRM
Iteration 10: objective value = 2957.8990970485283
computing mean train and test error for reg_param 100.0:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 51.7947467923121
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 51.7947467923121:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 26.826957952797258
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 26.826957952797258:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 13.894954943731374
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 13.894954943731374:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 7.196856730011519
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 7.196856730011519:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 3.72759372031494
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 3.72759372031494:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 1.93069772888325
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 1.93069772888325:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 1.0
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 1.0:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.5179474679231212
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.5179474679231212:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.2682695795279726
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.2682695795279726:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.13894954943731377
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.13894954943731377:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.07196856730011521
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.07196856730011521:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.0372759372031494
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.0372759372031494:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.019306977288832506
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.019306977288832506:
	train error: 1.3222615543355067
	test error:  1.329653192479264
fitting train GLRM for reg_param 0.01
Fitting GLRM
Iteration 10: objective value = 2957.8990970485256
computing mean train and test error for reg_param 0.01:
	train error: 1.3222615543355067
	test error:  1.329653192479264
15×4 DataFrame
│ Row │ train_error │ test_error │ train_time │ reg_param │
│     │ Float64     │ Float64    │ Float64    │ Float64   │
├─────┼─────────────┼────────────┼────────────┼───────────┤
│ 1   │ 1.32226     │ 1.32965    │ 0.0497112  │ 100.0     │
│ 2   │ 1.32226     │ 1.32965    │ 0.127943   │ 51.7947   │
│ 3   │ 1.32226     │ 1.32965    │ 0.18934    │ 26.827    │
│ 4   │ 1.32226     │ 1.32965    │ 0.273576   │ 13.895    │
│ 5   │ 1.32226     │ 1.32965    │ 0.334904   │ 7.19686   │
│ 6   │ 1.32226     │ 1.32965    │ 0.411486   │ 3.72759   │
│ 7   │ 1.32226     │ 1.32965    │ 0.472752   │ 1.9307    │
│ 8   │ 1.32226     │ 1.32965    │ 0.548085   │ 1.0       │
│ 9   │ 1.32226     │ 1.32965    │ 0.610235   │ 0.517947  │
│ 10  │ 1.32226     │ 1.32965    │ 0.681368   │ 0.26827   │
│ 11  │ 1.32226     │ 1.32965    │ 0.742243   │ 0.13895   │
│ 12  │ 1.32226     │ 1.32965    │ 0.811352   │ 0.0719686 │
│ 13  │ 1.32226     │ 1.32965    │ 0.872501   │ 0.0372759 │
│ 14  │ 1.32226     │ 1.32965    │ 0.942827   │ 0.019307  │
│ 15  │ 1.32226     │ 1.32965    │ 1.00557    │ 0.01      │
max value of A is 0.9889738759614509 which is less than 1
fitting train GLRM for reg_param 100.0
Fitting GLRM
Iteration 10: objective value = 6000.999994301118
computing train error and precision at k for reg_param 100.0:
	train error: 0.9999999992683333
	test error: 1.254290950600029
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (-0.0037147240710988707, 0.0037147240710988707)
fitting train GLRM for reg_param 1.0
Fitting GLRM
Iteration 10: objective value = 88.14323895893668
computing train error and precision at k for reg_param 1.0:
	train error: 0.0002266903447056017
	test error: 0.39678604133256457
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (-198.83721141997995, 198.83721141997995)
fitting train GLRM for reg_param 0.01
Fitting GLRM
Iteration 10: objective value = 1.3340005855020538
computing train error and precision at k for reg_param 0.01:
	train error: 5.342122363895452e-6
	test error: 0.41154553302826863
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (-200.18327297103724, 200.18327297103724)
fitting train GLRM for reg_param 0.0001
Fitting GLRM
Iteration 10: objective value = 0.2718157982033534
computing train error and precision at k for reg_param 0.0001:
	train error: 6.2888773876370385e-6
	test error: 0.4120518763334452
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (-213.07610875181828, 213.07610875181828)
fitting train GLRM for reg_param 1.0e-6
Fitting GLRM
Iteration 10: objective value = 1.226872941191549
computing train error and precision at k for reg_param 1.0e-6:
	train error: 1.162548722491194e-5
	test error: 0.4119781213628574
	prec_at_k:  0.6
	sum of solution, one norm of solution:  (-200.0971322007731, 200.0971322007731)
fitting train GLRM for reg_param 1.0e-8
Fitting GLRM
Iteration 10: objective value = 0.10406625183005243
computing train error and precision at k for reg_param 1.0e-8:
	train error: 1.3295735291561486e-5
	test error: 0.4123651797437823
	prec_at_k:  0.7
	sum of solution, one norm of solution:  (-200.73408652908552, 200.73408652908552)
fitting train GLRM for reg_param 1.0e-10
Fitting GLRM
Iteration 10: objective value = 0.600052761038592
computing train error and precision at k for reg_param 1.0e-10:
	train error: 1.4278497859537879e-6
	test error: 0.41208324049369627
	prec_at_k:  0.9
	sum of solution, one norm of solution:  (201.81313667200413, 201.81313667200413)
fitting train GLRM for reg_param 1.0e-12
Fitting GLRM
Iteration 10: objective value = 2.1356126356159733
computing train error and precision at k for reg_param 1.0e-12:
	train error: 1.6783145441729856e-5
	test error: 0.413417939991612
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (200.03966166372294, 200.03966166372294)
fitting train GLRM for reg_param 1.0e-14
Fitting GLRM
Iteration 10: objective value = 0.30823474928947864
computing train error and precision at k for reg_param 1.0e-14:
	train error: 2.457466349995148e-6
	test error: 0.4121578566509217
	prec_at_k:  1.0
	sum of solution, one norm of solution:  (224.53151356970892, 224.53151356970892)
9×5 DataFrame
│ Row │ train_error │ prec_at_k │ train_time │ reg_param │ solution_1norm │
│     │ Float64     │ Float64   │ Float64    │ Float64   │ Float64        │
├─────┼─────────────┼───────────┼────────────┼───────────┼────────────────┤
│ 1   │ 1.0         │ 1.0       │ 0.150432   │ 100.0     │ 0.00371472     │
│ 2   │ 0.00022669  │ 1.0       │ 0.299708   │ 1.0       │ 198.837        │
│ 3   │ 5.34212e-6  │ 1.0       │ 0.462503   │ 0.01      │ 200.183        │
│ 4   │ 6.28888e-6  │ 1.0       │ 0.620001   │ 0.0001    │ 213.076        │
│ 5   │ 1.16255e-5  │ 0.6       │ 0.791944   │ 1.0e-6    │ 200.097        │
│ 6   │ 1.32957e-5  │ 0.7       │ 0.938152   │ 1.0e-8    │ 200.734        │
│ 7   │ 1.42785e-6  │ 0.9       │ 1.1075     │ 1.0e-10   │ 201.813        │
│ 8   │ 1.67831e-5  │ 1.0       │ 1.301      │ 1.0e-12   │ 200.04         │
│ 9   │ 2.45747e-6  │ 1.0       │ 1.4551     │ 1.0e-14   │ 224.532        │
simple glrm examples
Fitting GLRM
Iteration 10: objective value = 1.0913209957582521
Convergence history:[34516.18600147212, 15212.084906336806, 8151.538808478841, 3746.5709640437253, 244.7513447245982, 53.66741960662018, 25.55884428802381, 17.368480948548502, 14.540682559658379, 2.9867391131959473, 1.0913209957582521, 0.26316639560831656, 0.09035811042929051, 0.04196826831183741]
Fitting GLRM
Iteration 10: objective value = 60.85330375575213
Iteration 20: objective value = 29.951203750818895
Iteration 30: objective value = 28.221181956933993
Iteration 40: objective value = 26.81585757261439
Convergence history:[41985.676669561624, 19247.796920491783, 9436.037580247315, 8571.812295784699, 7768.033725624757, 6656.717976090316, 3147.652132498922, 237.75327697678162, 108.60223577741019, 72.62946887640204, 60.85330375575213, 55.90872420122816, 54.65890239662942, 34.98767546772317, 31.71073842974695, 30.937298584262354, 30.64453043259668, 30.461415839246605, 30.300847373398266, 30.138760191255315, 29.951203750818895, 29.704091216922716, 29.514904239508066, 29.359882606143916, 29.21346637998186, 29.06737330571236, 28.926055447883876, 28.768326743484803, 28.59083648011659, 28.389122722045315, 28.221181956933993, 28.08403529345973, 27.955727150171594, 27.830017252086698, 27.700095919505923, 27.55368586827464, 27.395480198614244, 27.215234634460295, 27.066821786866814, 26.940867455151817, 26.81585757261439, 26.696862380197977, 26.587337459357077, 26.442823075224588, 26.304468819926917, 26.179025794186764, 26.06505090640816, 25.940490464365116, 25.827044846840547, 25.72888696029478]
Fitting GLRM
Iteration 10: objective value = 227.9136594937312
Iteration 20: objective value = 107.42167735600646
Iteration 30: objective value = 104.48468058192437
Iteration 40: objective value = 102.63323060242064
Convergence history:[39777.70277450988, 20576.387431962386, 12944.712288105953, 8767.14427930868, 5876.313177930361, 3790.964149989323, 2286.983990840229, 1536.1703765548775, 1003.585854791302, 354.7445902209522, 227.9136594937312, 165.9024436155331, 137.08254506879626, 122.69892264345981, 115.8590844490839, 112.27740953134392, 110.31289079540959, 109.25876348477871, 108.39156042332739, 107.81327804978318, 107.42167735600646, 107.00303355562635, 106.65089305803463, 106.34633920388563, 106.05372075837194, 105.76753755908618, 105.50206189698774, 105.24414916915849, 104.98770845405397, 104.73674403723356, 104.48468058192437, 104.23833967286303, 104.00758952200182, 103.78523934047497, 103.5769754805481, 103.3823092645308, 103.20308493322196, 103.03973126287819, 102.8968525976319, 102.76279937958651, 102.63323060242064, 102.51116800695874, 102.3975709225801, 102.29284958631044, 102.1967760632684]
Fitting GLRM
Iteration 10: objective value = 9755.565777440266
Iteration 20: objective value = 932.0077956398535
Iteration 30: objective value = 505.7726152331923
Convergence history:[76908.49792244303, 38316.20820678221, 27290.809644362158, 20610.548134296474, 15908.70819065907, 13535.383291302353, 12139.301452535983, 11379.556063958797, 10801.140912713146, 10283.715742652787, 9755.565777440266, 9042.999186641953, 8004.632461419571, 6367.750623998922, 4615.988899755396, 3085.961340329673, 2264.4723664836765, 1603.475422033071, 1238.5424645838207, 1028.735049153812, 932.0077956398535, 891.308894259019, 849.4419325523321, 785.3382324699952, 685.9275197494343, 601.6664552269035, 535.2366227185074, 512.7953573406814, 508.5631927812965, 506.7247344606505, 505.7726152331923, 505.2377606771903, 504.81454372243167, 504.5223887823419, 504.270528365874, 504.0614897285658, 503.88593307828967]
Fitting GLRM
Iteration 10: objective value = 1461.3443448705486
Iteration 20: objective value = 1412.834546673658
Convergence history:[Inf, 3701.1887872849597, 2433.0839077468136, 1844.137578603518, 1680.3476735827, 1601.6117666944979, 1553.3852332717934, 1519.7376490841766, 1494.8524957550937, 1475.9372004140407, 1461.3443448705486, 1449.9857338756483, 1441.095927093849, 1434.113526882058, 1428.614681488195, 1424.2736735706915, 1420.8381079471415, 1418.112015591158, 1415.9434118641857, 1414.2146181724322, 1412.834546673658, 1411.7325420827533, 1410.8535233673385, 1410.1542153874163, 1409.6002776096775, 1409.164152255355, 1408.8234745590846, 1408.559911756604, 1408.358321698619, 1408.2061441575577, 1408.0929569038722]
Fitting GLRM
Iteration 10: objective value = 20.66875838847994
Convergence history:[Inf, 6616.2820140517515, 532.263580872581, 295.8760221576176, 178.73791586153743, 97.4824473809902, 56.01869505101994, 35.359320506725865, 26.681146661087062, 23.313481451064852, 20.66875838847994, 19.979169459578483, 19.706843654372825, 19.603022444533075, 19.55628548210123, 19.530403108473525, 19.512970819116777]
ERROR: LoadError: LoadError: LoadError: type CategoricalValue has no field value
Stacktrace:
  [1] getproperty(x::CategoricalValue{String, UInt8}, f::Symbol)
    @ Base ./Base.jl:33
  [2] isnan(x::CategoricalValue{String, UInt8})
    @ LowRankModels ~/.julia/packages/LowRankModels/92oQP/src/fit_dataframe.jl:275
  [3] (::LowRankModels.var"#147#148"{DataFrame, Int64})(::Tuple{Int64, CategoricalValue{String, UInt8}})
    @ LowRankModels ./none:0
  [4] iterate
    @ ./generator.jl:47 [inlined]
  [5] collect(itr::Base.Generator{Base.Iterators.Enumerate{CategoricalVector{String, UInt8, String, CategoricalValue{String, UInt8}, Union{}}}, LowRankModels.var"#147#148"{DataFrame, Int64}})
    @ Base ./array.jl:664
  [6] NaNs_to_Missing!(df::DataFrame)
    @ LowRankModels ~/.julia/packages/LowRankModels/92oQP/src/fit_dataframe.jl:281
  [7] GLRM(df::DataFrame, k::Int64; losses::Vector{Loss}, rx::QuadReg, ry::QuadReg, offset::Bool, scale::Bool, prob_scale::Bool, NaNs_to_Missing::Bool)
    @ LowRankModels ~/.julia/packages/LowRankModels/92oQP/src/fit_dataframe_w_type_imputation.jl:17
  [8] GLRM(df::DataFrame, k::Int64)
    @ LowRankModels ~/.julia/packages/LowRankModels/92oQP/src/fit_dataframe_w_type_imputation.jl:15
  [9] top-level scope
    @ ~/.julia/packages/LowRankModels/92oQP/examples/fit_rdataset.jl:9
 [10] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [11] top-level scope
    @ ~/.julia/packages/LowRankModels/92oQP/examples/runexamples.jl:17
 [12] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [13] top-level scope
    @ ~/.julia/packages/LowRankModels/92oQP/test/runtests.jl:34
 [14] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [15] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/LowRankModels/92oQP/examples/fit_rdataset.jl:9
in expression starting at /home/pkgeval/.julia/packages/LowRankModels/92oQP/examples/runexamples.jl:17
in expression starting at /home/pkgeval/.julia/packages/LowRankModels/92oQP/test/runtests.jl:34

PkgEval failed: Package LowRankModels errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-29T06:15:58.251
CPU usage: 259.39s (245.43s user, 14.62s kernel)

Network usage:
- eth0: 21.119 MiB received, 282.834 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":12,"op":"Read","minor":0},{"major":259,"value":9,"op":"Write","minor":0},{"major":259,"value":12,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":21,"op":"Total","minor":0},{"major":253,"value":12,"op":"Read","minor":2},{"major":253,"value":9,"op":"Write","minor":2},{"major":253,"value":12,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":21,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":49152,"op":"Read","minor":0},{"major":259,"value":57344,"op":"Write","minor":0},{"major":259,"value":49152,"op":"Sync","minor":0},{"major":259,"value":57344,"op":"Async","minor":0},{"major":259,"value":106496,"op":"Total","minor":0},{"major":253,"value":49152,"op":"Read","minor":2},{"major":253,"value":57344,"op":"Write","minor":2},{"major":253,"value":49152,"op":"Sync","minor":2},{"major":253,"value":57344,"op":"Async","minor":2},{"major":253,"value":106496,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":340312064,"max_usage":1683537920,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":238264320,"inactive_file":8192,"inactive_anon":65417216,"total_pgfault":4605254,"total_cache":90300416,"total_rss_huge":0,"total_active_anon":262656000,"total_pgmajfault":0,"pgpgin":3016503,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":2936287,"hierarchical_memsw_limit":0,"cache":90300416,"active_file":462848,"pgfault":4605254,"total_mapped_file":0,"total_pgpgout":2936287,"total_writeback":0,"rss":238264320,"unevictable":0,"total_inactive_anon":65417216,"total_pgpgin":3016503,"active_anon":262656000,"total_active_file":462848},"limit":540972998656},"name":"/LowRankModels-gANhRTF7","networks":{"eth0":{"rx_bytes":22145064,"rx_packets":3722,"tx_packets":2943,"tx_bytes":289622,"tx_dropped":0,"rx_dropped":9,"tx_errors":0,"rx_errors":0}},"id":"d3832a8c0ee38db22278afc52d045a8c67eac1673678c9befc6ff3ff8d1b4433","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":102628414210000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":245430000000,"usage_in_kernelmode":14620000000,"total_usage":259392241057,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,259392241057,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-29T06:15:58.586697353Z"}