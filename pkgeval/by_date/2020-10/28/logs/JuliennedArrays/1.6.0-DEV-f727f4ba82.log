################################################################################
# PkgEval set-up: 2020-10-29T05:22:05.256
#

Julia Version 1.6.0-DEV.1363
Commit f727f4ba82 (2020-10-28 23:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-29T05:22:06.743
#

   Resolving package versions...
   Installed JuliennedArrays ─ v0.2.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5cadff95] + JuliennedArrays v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5cadff95] + JuliennedArrays v0.2.2


################################################################################
# Testing: 2020-10-29T05:22:08.344
#


     Testing JuliennedArrays
Status `/tmp/jl_U48Q34/Project.toml`
  [e30172f5] Documenter v0.25.3
  [5cadff95] JuliennedArrays v0.2.2
  [8dfed614] Test
Status `/tmp/jl_U48Q34/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.3
  [b5f81e59] IOCapture v0.1.1
  [682c06a0] JSON v0.21.1
  [5cadff95] JuliennedArrays v0.2.2
  [69de0a69] Parsers v1.0.11
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:208-227
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> slices = [[1, 2], [3, 4]];
│ 
│ julia> aligned = Align(slices, False(), True())
│ 2×2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
│  1  2
│  3  4
│ 
│ julia> aligned[1, :] == slices[1]
│ true
│ 
│ julia> aligned[1, 1] = 0;
│ 
│ julia> slices
│ 2-element Array{Array{Int64,1},1}:
│  [0, 2]
│  [3, 4]
│ ```
│ 
│ Subexpression:
│ 
│ aligned = Align(slices, False(), True())
│ 
│ Evaluated output:
│ 
│ 2×2 Align{Int64, 2, Vector{Vector{Int64}}, Tuple{False, True}}:
│  1  2
│  3  4
│ 
│ Expected output:
│ 
│ 2×2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
│  1  2
│  3  4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
│     Align{Int64, 2, Vector{Vector{Int64}}, Tuple{False, True}}:
│     1  2
│     3  4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:208-227
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> slices = [[1, 2], [3, 4]];
│ 
│ julia> aligned = Align(slices, False(), True())
│ 2×2 Align{Int64,2,Array{Array{Int64,1},1},Tuple{False,True}}:
│  1  2
│  3  4
│ 
│ julia> aligned[1, :] == slices[1]
│ true
│ 
│ julia> aligned[1, 1] = 0;
│ 
│ julia> slices
│ 2-element Array{Array{Int64,1},1}:
│  [0, 2]
│  [3, 4]
│ ```
│ 
│ Subexpression:
│ 
│ slices
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Vector{Int64}}:
│  [0, 2]
│  [3, 4]
│ 
│ Expected output:
│ 
│ 2-element Array{Array{Int64,1},1}:
│  [0, 2]
│  [3, 4]
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Array{Int64,1},1}:
│     Vector{Vector{Int64}}:
│     [0, 2]
│     [3, 4]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:238-265
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> input = reshape(1:8, 2, 2, 2)
│ 2×2×2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ 
│ julia> slices = collect(Slices(input, 1, 3))
│ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│ julia> Align(slices, 1, 3)
│ 2×2×2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ ```
│ 
│ Subexpression:
│ 
│ slices = collect(Slices(input, 1, 3))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│ Expected output:
│ 
│ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
│     Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}:
│     [1 5; 2 6]
│     [3 7; 4 8]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:238-265
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> input = reshape(1:8, 2, 2, 2)
│ 2×2×2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ 
│ julia> slices = collect(Slices(input, 1, 3))
│ 2-element Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│ julia> Align(slices, 1, 3)
│ 2×2×2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ ```
│ 
│ Subexpression:
│ 
│ Align(slices, 1, 3)
│ 
│ Evaluated output:
│ 
│ 2×2×2 Align{Int64, 3, Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}, Tuple{True, False, True}}:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ 
│ Expected output:
│ 
│ 2×2×2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2×2 Align{Int64,3,Array{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1},Tuple{True,False,True}}:
│    Align{Int64, 3, Vector{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}}, Tuple{True, False, True}}:
│    [:, :, 1] =
│     1  3
│     2  4
│    
│    [:, :, 2] =
│     5  7
│     6  8
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:103-129
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> whole = [1 2; 3 4];
│ 
│ julia> slices = Slices(whole, False(), True())
│ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
│  [1, 2]
│  [3, 4]
│ 
│ julia> slices[1] == whole[1, :]
│ true
│ 
│ julia> slices[1] = [2, 1];
│ 
│ julia> whole
│ 2×2 Array{Int64,2}:
│  2  1
│  3  4
│ 
│ julia> larger = rand(5, 5, 5);
│ 
│ julia> larger_slices = Slices(larger, True(), False(), False());
│ 
│ julia> size(first(larger_slices))
│ (5,)
│ ```
│ 
│ Subexpression:
│ 
│ slices = Slices(whole, False(), True())
│ 
│ Evaluated output:
│ 
│ 2-element Slices{SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.OneTo{Int64}}, true}, 1, Matrix{Int64}, Tuple{False, True}}:
│  [1, 2]
│  [3, 4]
│ 
│ Expected output:
│ 
│ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
│  [1, 2]
│  [3, 4]
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
│     Slices{SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.OneTo{Int64}}, true}, 1, Matrix{Int64}, Tuple{False, True}}:
│     [1, 2]
│     [3, 4]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:103-129
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> whole = [1 2; 3 4];
│ 
│ julia> slices = Slices(whole, False(), True())
│ 2-element Slices{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},Tuple{False,True}}:
│  [1, 2]
│  [3, 4]
│ 
│ julia> slices[1] == whole[1, :]
│ true
│ 
│ julia> slices[1] = [2, 1];
│ 
│ julia> whole
│ 2×2 Array{Int64,2}:
│  2  1
│  3  4
│ 
│ julia> larger = rand(5, 5, 5);
│ 
│ julia> larger_slices = Slices(larger, True(), False(), False());
│ 
│ julia> size(first(larger_slices))
│ (5,)
│ ```
│ 
│ Subexpression:
│ 
│ whole
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Int64}:
│  2  1
│  3  4
│ 
│ Expected output:
│ 
│ 2×2 Array{Int64,2}:
│  2  1
│  3  4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Int64,2}:
│     Matrix{Int64}:
│     2  1
│     3  4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/JuliennedArrays/furG7/src/JuliennedArrays.jl:145-162
│ 
│ ```jldoctest
│ julia> using JuliennedArrays
│ 
│ julia> input = reshape(1:8, 2, 2, 2)
│ 2×2×2 reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
│ [:, :, 1] =
│  1  3
│  2  4
│ 
│ [:, :, 2] =
│  5  7
│  6  8
│ 
│ julia> Slices(input, 1, 3)
│ 2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ ```
│ 
│ Subexpression:
│ 
│ Slices(input, 1, 3)
│ 
│ Evaluated output:
│ 
│ 2-element Slices{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}, 1, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{True, False, True}}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│ Expected output:
│ 
│ 2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
│  [1 5; 2 6]
│  [3 7; 4 8]
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Slices{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{True,False,True}}:
│     Slices{SubArray{Int64, 2, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{Base.OneTo{Int64}, Int64, Base.OneTo{Int64}}, false}, 1, Base.ReshapedArray{Int64, 3, UnitRange{Int64}, Tuple{}}, Tuple{True, False, True}}:
│     [1 5; 2 6]
│     [3 7; 4 8]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
ERROR: LoadError: `makedocs` encountered a doctest error. Terminating build
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
   @ Documenter.Builder ~/.julia/packages/Documenter/3Y8Kg/src/Builder.jl:217
 [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
   @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Selectors.jl:170
 [4] #2
   @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:245 [inlined]
 [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
   @ Base.Filesystem ./file.jl:104
 [6] #makedocs#1
   @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:244 [inlined]
 [7] top-level scope
   @ ~/.julia/packages/JuliennedArrays/furG7/test/runtests.jl:4
 [8] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [9] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/JuliennedArrays/furG7/test/runtests.jl:4

PkgEval failed: Package JuliennedArrays errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-29T05:22:47.559
CPU usage: 41.48s (38.69s user, 2.92s kernel)

Network usage:
- eth0: 620.379 KiB received, 18.676 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":1,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":1,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":6,"op":"Total","minor":0},{"major":253,"value":1,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":1,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":6,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":4096,"op":"Read","minor":0},{"major":259,"value":20480,"op":"Write","minor":0},{"major":259,"value":4096,"op":"Sync","minor":0},{"major":259,"value":20480,"op":"Async","minor":0},{"major":259,"value":24576,"op":"Total","minor":0},{"major":253,"value":4096,"op":"Read","minor":2},{"major":253,"value":20480,"op":"Write","minor":2},{"major":253,"value":4096,"op":"Sync","minor":2},{"major":253,"value":20480,"op":"Async","minor":2},{"major":253,"value":24576,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":212406272,"max_usage":761909248,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":199610368,"inactive_file":12288,"inactive_anon":2945024,"total_pgfault":709357,"total_cache":7028736,"total_rss_huge":0,"total_active_anon":203640832,"total_pgmajfault":0,"pgpgin":327443,"rss_huge":0,"mapped_file":0,"total_inactive_file":12288,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":276994,"hierarchical_memsw_limit":0,"cache":7028736,"active_file":4096,"pgfault":709357,"total_mapped_file":0,"total_pgpgout":276994,"total_writeback":0,"rss":199610368,"unevictable":0,"total_inactive_anon":2945024,"total_pgpgin":327443,"active_anon":203640832,"total_active_file":4096},"limit":540972998656},"name":"/JuliennedArrays-k3OLectS","networks":{"eth0":{"rx_bytes":635268,"rx_packets":243,"tx_packets":146,"tx_bytes":19124,"tx_dropped":0,"rx_dropped":2,"tx_errors":0,"rx_errors":0}},"id":"8fe4dae41aada9f55714f40c8cc1a6c34e38c13ec8f23e6cdc2009e0e7cbbf5f","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":102221216060000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":38690000000,"usage_in_kernelmode":2920000000,"total_usage":41482972980,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41482956260,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16720,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-29T05:22:47.561717991Z"}