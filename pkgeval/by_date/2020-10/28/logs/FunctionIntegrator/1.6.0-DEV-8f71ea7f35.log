################################################################################
# Set-up: 2020-10-28T09:29:23.244
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T09:29:26.299
#

   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled


################################################################################
# Testing: 2020-10-28T09:29:51.188
#

     Testing FunctionIntegrator
Status `/tmp/jl_2gNvzZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_2gNvzZ/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.279335 seconds (293.23 k allocations: 13.816 MiB, 93.63% compilation time)
Running: chebyshev_quadrature with k=1
  2.167339 seconds (2.31 M allocations: 134.489 MiB, 2.88% gc time, 99.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.293675 seconds (417.93 k allocations: 24.229 MiB, 89.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.268052 seconds (483.75 k allocations: 27.401 MiB, 5.95% gc time, 92.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.939115 seconds (427.27 k allocations: 23.960 MiB, 98.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 52.101491 seconds (35.49 M allocations: 2.981 GiB, 13.75% gc time, 85.63% compilation time)
Running: laguerre_quadrature with k=1
  3.640471 seconds (3.24 M allocations: 182.217 MiB, 3.45% gc time, 98.49% compilation time)
Running: legendre_quadrature
  0.278354 seconds (211.84 k allocations: 12.265 MiB, 99.42% compilation time)
Running: lobatto_quadrature
  0.584267 seconds (340.89 k allocations: 20.819 MiB, 4.77% gc time, 99.39% compilation time)
Running: radau_quadrature
  0.389651 seconds (462.86 k allocations: 28.460 MiB, 95.31% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 37.947566 seconds (100.02 M allocations: 1.491 GiB, 0.51% gc time, 0.18% compilation time)
Running: rectangle_rule_midpoint.
  0.155299 seconds (173.35 k allocations: 3.888 MiB, 60.14% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 40.457788 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time, 0.08% compilation time)
Running: rombergs_method
  0.634991 seconds (742.44 k allocations: 43.204 MiB, 3.29% gc time, 99.68% compilation time)
Running: simpsons_rule
  0.038586 seconds (48.05 k allocations: 2.634 MiB, 94.67% compilation time)
Running: simpsons38_rule
  0.059965 seconds (111.36 k allocations: 5.950 MiB, 96.88% compilation time)
Running: trapezoidal_rule
  0.314458 seconds (1.72 M allocations: 28.725 MiB, 4.38% gc time, 27.65% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.091357 seconds (30.73 k allocations: 1.832 MiB, 34.00% gc time, 99.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.414499 seconds (296.21 k allocations: 15.816 MiB, 99.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.140668 seconds (94.25 k allocations: 2.709 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.166425 seconds (82.50 k allocations: 2.510 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.192190 seconds (65.11 k allocations: 2.156 MiB, 99.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.530313 seconds (512.94 k allocations: 162.434 MiB, 12.86% gc time, 26.20% compilation time)
Running: legendre_quadrature
  0.119685 seconds (42.30 k allocations: 2.457 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.020290 seconds (16.24 k allocations: 1.014 MiB, 99.19% compilation time)
Running: radau_quadrature
  0.084780 seconds (16.35 k allocations: 1.021 MiB, 99.79% compilation time)
Running: rectangle_rule_left
 11.463708 seconds (471.41 M allocations: 7.025 GiB, 5.50% gc time)
Running: rectangle_rule_midpoint
  0.000012 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 10.861739 seconds (476.96 M allocations: 7.107 GiB, 4.65% gc time)
Running: rombergs_method
  0.259080 seconds (334.75 k allocations: 19.183 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000015 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.035532 seconds (19.43 k allocations: 1.184 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.032099 seconds (16.97 k allocations: 1.034 MiB, 99.76% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014876 seconds (1.03 k allocations: 34.125 KiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.086168 seconds (2.46 k allocations: 116.609 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.095402 seconds (2.72 k allocations: 124.422 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.089872 seconds (2.32 k allocations: 109.453 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.071730 seconds (2.32 k allocations: 109.453 KiB, 99.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.216116 seconds (370.05 k allocations: 19.561 MiB, 10.96% gc time, 99.11% compilation time)
Running: legendre_quadrature
  0.049976 seconds (1.28 k allocations: 66.047 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000034 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000307 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000210 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000307 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.055877 seconds (1.05 k allocations: 56.688 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000018 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.017961 seconds (923 allocations: 39.281 KiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.014313 seconds (44.29 k allocations: 702.859 KiB, 91.67% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.030736 seconds (83.49 k allocations: 5.002 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.108517 seconds (235.90 k allocations: 13.421 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.172029 seconds (289.38 k allocations: 16.413 MiB, 13.03% gc time, 98.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.117968 seconds (240.04 k allocations: 13.551 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.111286 seconds (240.04 k allocations: 13.464 MiB, 98.54% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.123531 seconds (455.66 k allocations: 163.962 MiB, 9.50% gc time, 33.06% compilation time)
Running: legendre_quadrature
  0.316753 seconds (190.61 k allocations: 11.178 MiB, 99.53% compilation time)
Running: lobatto_quadrature
  0.104022 seconds (202.28 k allocations: 11.832 MiB, 10.69% gc time, 98.65% compilation time)
Running: radau_quadrature
  0.095597 seconds (202.27 k allocations: 11.834 MiB, 98.36% compilation time)
Running: rectangle_rule_left
  0.398930 seconds (19.37 k allocations: 1.189 MiB, 3.80% compilation time)
Running: rectangle_rule_midpoint
  0.013636 seconds (25.55 k allocations: 1.616 MiB, 99.12% compilation time)
Running: rectangle_rule_right
  0.369633 seconds (17.90 k allocations: 1.099 MiB, 3.91% compilation time)
Running: rombergs_method
  0.187284 seconds (138.02 k allocations: 8.040 MiB, 45.98% compilation time)
Running: simpsons_rule
  0.014337 seconds (37.98 k allocations: 2.442 MiB, 99.25% compilation time)
Running: simpsons38_rule
  0.328038 seconds (43.94 k allocations: 2.785 MiB, 99.95% compilation time)
Running: trapezoidal_rule
  0.016831 seconds (43.20 k allocations: 1.730 MiB, 96.80% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015624 seconds (68.44 k allocations: 3.060 MiB, 96.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.108597 seconds (242.49 k allocations: 13.489 MiB, 9.98% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.192848 seconds (296.42 k allocations: 16.388 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.112334 seconds (246.62 k allocations: 13.538 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.146979 seconds (246.62 k allocations: 13.537 MiB, 12.63% gc time, 98.96% compilation time)
Running: hermite_quadrature with k=2
  9.695939 seconds (20.51 M allocations: 1.088 GiB, 9.06% gc time, 99.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.345984 seconds (464.83 k allocations: 50.140 MiB, 12.29% gc time, 78.75% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.166256 seconds (282.61 k allocations: 15.742 MiB, 28.55% gc time, 98.52% compilation time)
Running: legendre_quadrature
  0.087922 seconds (197.15 k allocations: 11.428 MiB, 97.98% compilation time)
Running: lobatto_quadrature
  0.367763 seconds (222.93 k allocations: 37.606 MiB, 65.03% gc time, 93.14% compilation time)
Running: radau_quadrature
  0.160127 seconds (219.52 k allocations: 30.292 MiB, 90.38% compilation time)
Running: rectangle_rule_left
  0.017813 seconds (22.28 k allocations: 1.333 MiB, 99.39% compilation time)
Running: rectangle_rule_midpoint
  0.018764 seconds (27.36 k allocations: 1.703 MiB, 99.43% compilation time)
Running: rectangle_rule_right
  0.017880 seconds (19.02 k allocations: 1.153 MiB, 99.35% compilation time)
Running: rombergs_method
  0.099701 seconds (140.35 k allocations: 8.082 MiB, 12.75% gc time, 97.93% compilation time)
Running: simpsons_rule
  0.020459 seconds (45.46 k allocations: 2.710 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.036447 seconds (58.91 k allocations: 3.170 MiB, 99.04% compilation time)
Running: trapezoidal_rule
  0.020695 seconds (29.23 k allocations: 1.655 MiB, 98.87% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.028717 seconds (52.41 k allocations: 2.720 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=1
  0.135830 seconds (238.00 k allocations: 13.286 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.148268 seconds (291.60 k allocations: 16.160 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.250260 seconds (242.15 k allocations: 13.347 MiB, 6.87% gc time, 68.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.123803 seconds (242.15 k allocations: 13.414 MiB, 98.58% compilation time)
Running: hermite_quadrature with k=2
  0.089663 seconds (175.38 k allocations: 10.141 MiB, 97.88% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.774360 seconds (458.10 k allocations: 1.176 GiB, 33.84% gc time, 5.19% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.142762 seconds (277.90 k allocations: 15.561 MiB, 8.38% gc time, 98.06% compilation time)
Running: legendre_quadrature
  0.099682 seconds (192.72 k allocations: 11.205 MiB, 98.14% compilation time)
Running: lobatto_quadrature
  0.122646 seconds (213.69 k allocations: 23.335 MiB, 9.52% gc time, 88.93% compilation time)
Running: radau_quadrature
  0.131592 seconds (212.84 k allocations: 21.265 MiB, 92.79% compilation time)
Running: rectangle_rule_left
  0.021470 seconds (20.07 k allocations: 1.228 MiB, 98.64% compilation time)
Running: rectangle_rule_midpoint
  0.018377 seconds (26.25 k allocations: 1.652 MiB, 99.40% compilation time)
Running: rectangle_rule_right
  0.014668 seconds (17.88 k allocations: 1.099 MiB, 99.23% compilation time)
Running: rombergs_method
  0.055884 seconds (136.20 k allocations: 7.895 MiB, 97.04% compilation time)
Running: simpsons_rule
  0.027924 seconds (40.80 k allocations: 2.541 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.023515 seconds (49.73 k allocations: 2.931 MiB, 99.05% compilation time)
Running: trapezoidal_rule
  0.012950 seconds (24.14 k allocations: 1.492 MiB, 98.93% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.066700 seconds (40.61 k allocations: 2.580 MiB, 21.48% gc time, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.136412 seconds (236.38 k allocations: 13.478 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.155038 seconds (289.89 k allocations: 16.502 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.195488 seconds (240.53 k allocations: 13.564 MiB, 9.64% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=4
  0.179758 seconds (240.53 k allocations: 13.389 MiB, 98.85% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.329360 seconds (456.20 k allocations: 194.984 MiB, 5.78% gc time, 25.49% compilation time)
Running: legendre_quadrature
  0.104910 seconds (191.10 k allocations: 11.129 MiB, 98.48% compilation time)
Running: lobatto_quadrature
  0.121188 seconds (202.77 k allocations: 11.855 MiB, 11.31% gc time, 87.17% compilation time)
Running: radau_quadrature
  0.106479 seconds (202.77 k allocations: 11.861 MiB, 98.22% compilation time)
Running: rectangle_rule_left
  0.298144 seconds (19.89 k allocations: 1.214 MiB, 5.17% compilation time)
Running: rectangle_rule_midpoint
  0.015274 seconds (25.89 k allocations: 1.634 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.137444 seconds (18.25 k allocations: 1.118 MiB, 11.70% compilation time)
Running: rombergs_method
  0.070934 seconds (149.32 k allocations: 8.805 MiB, 95.50% compilation time)
Running: simpsons_rule
  0.022944 seconds (38.61 k allocations: 2.470 MiB, 99.31% compilation time)
Running: simpsons38_rule
  0.017359 seconds (44.65 k allocations: 2.815 MiB, 99.22% compilation time)
Running: trapezoidal_rule
  0.011169 seconds (44.13 k allocations: 1.763 MiB, 96.38% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.029058 seconds (40.35 k allocations: 2.510 MiB, 51.92% gc time, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.192380 seconds (236.98 k allocations: 13.434 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.158755 seconds (290.52 k allocations: 16.409 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.144931 seconds (241.12 k allocations: 13.484 MiB, 11.97% gc time, 98.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.124736 seconds (241.12 k allocations: 13.561 MiB, 98.14% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.963654 seconds (456.91 k allocations: 149.673 MiB, 9.63% gc time, 36.44% compilation time)
Running: legendre_quadrature
  0.101132 seconds (191.69 k allocations: 11.140 MiB, 98.29% compilation time)
Running: lobatto_quadrature
  0.188071 seconds (203.37 k allocations: 11.882 MiB, 98.83% compilation time)
Running: radau_quadrature
  0.098899 seconds (203.36 k allocations: 11.875 MiB, 98.04% compilation time)
Running: rectangle_rule_left
  0.481301 seconds (20.14 k allocations: 1.227 MiB, 3.25% compilation time)
Running: rectangle_rule_midpoint
  0.013695 seconds (25.89 k allocations: 1.635 MiB, 98.69% compilation time)
Running: rectangle_rule_right
  0.501820 seconds (18.20 k allocations: 1.115 MiB, 3.07% compilation time)
Running: rombergs_method
  0.095696 seconds (139.24 k allocations: 8.097 MiB, 89.23% compilation time)
Running: simpsons_rule
  0.092749 seconds (39.09 k allocations: 2.489 MiB, 87.66% compilation time)
Running: simpsons38_rule
  0.028320 seconds (45.35 k allocations: 2.842 MiB, 99.47% compilation time)
Running: trapezoidal_rule
  0.015892 seconds (56.28 k allocations: 1.959 MiB, 93.74% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.088125 seconds (152.10 k allocations: 9.115 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.091844 seconds (70.38 k allocations: 2.238 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.098779 seconds (105.54 k allocations: 2.901 MiB, 97.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.095760 seconds (93.02 k allocations: 2.688 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.100868 seconds (72.55 k allocations: 2.282 MiB, 98.32% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.112956 seconds (487.78 k allocations: 168.286 MiB, 17.63% gc time, 28.54% compilation time)
Running: legendre_quadrature
  0.073385 seconds (19.17 k allocations: 1.127 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (155 allocations: 4.562 KiB)
Running: radau_quadrature
  0.000033 seconds (155 allocations: 4.641 KiB)
Running: rectangle_rule_left
 14.661641 seconds (590.00 M allocations: 8.792 GiB, 8.24% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 14.381256 seconds (592.75 M allocations: 8.833 GiB, 6.77% gc time)
Running: rombergs_method
  0.080296 seconds (20.96 k allocations: 1.199 MiB, 99.35% compilation time)
Running: simpsons_rule
  0.000028 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.016951 seconds (463 allocations: 22.578 KiB, 99.43% compilation time)
Running: trapezoidal_rule
  0.011265 seconds (171 allocations: 7.859 KiB, 99.35% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.784029 seconds (209.94 M allocations: 3.138 GiB, 1.72% gc time, 0.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.247678 seconds (423.40 k allocations: 23.703 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
 13.871337 seconds (478.96 k allocations: 4.041 GiB, 3.13% gc time, 1.77% compilation time)
Running: chebyshev_quadrature with k=3
  6.120741 seconds (254.50 k allocations: 1.642 GiB, 3.87% gc time, 1.82% compilation time)
Running: chebyshev_quadrature with k=4
  8.428600 seconds (254.50 k allocations: 2.261 GiB, 1.76% gc time, 1.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 26.373110 seconds (493.85 k allocations: 13.255 GiB, 6.20% gc time, 0.76% compilation time)
Running: legendre_quadrature.
  6.266911 seconds (229.23 k allocations: 1.976 GiB, 0.83% gc time, 1.68% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.930279 seconds (8.24 M allocations: 13.384 GiB, 7.94% gc time, 0.41% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.354090 seconds (7.24 M allocations: 13.369 GiB, 4.75% gc time, 0.46% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  9.722617 seconds (22.88 k allocations: 1.394 MiB, 0.16% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  9.680891 seconds (31.46 k allocations: 1.956 MiB, 0.28% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  9.631739 seconds (23.09 k allocations: 1.403 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.966860 seconds (449.16 k allocations: 153.548 MiB, 1.83% gc time, 8.63% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.291520 seconds (200.04 M allocations: 2.983 GiB, 1.74% gc time, 0.12% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.756718 seconds (600.05 M allocations: 8.944 GiB, 4.92% gc time, 0.12% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.951481 seconds (600.03 M allocations: 8.943 GiB, 3.39% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.033039 seconds (111.10 k allocations: 4.245 MiB, 94.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.096552 seconds (252.96 k allocations: 13.955 MiB, 97.98% compilation time)
Running: chebyshev_quadrature with k=2
  0.095391 seconds (277.51 k allocations: 14.980 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.153330 seconds (224.48 k allocations: 12.016 MiB, 43.58% gc time, 99.36% compilation time)
Running: chebyshev_quadrature with k=4
  0.087238 seconds (224.48 k allocations: 11.991 MiB, 98.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.164172 seconds (395.49 k allocations: 35.575 MiB, 91.63% compilation time)
Running: laguerre_quadrature with k=2
  0.093043 seconds (185.44 k allocations: 10.856 MiB, 75.06% compilation time)
Running: legendre_quadrature
  0.066487 seconds (149.42 k allocations: 8.353 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.014313 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.011581 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.022217 seconds (19.35 k allocations: 1.157 MiB, 64.97% compilation time)
Running: rectangle_rule_midpoint
  0.017686 seconds (26.33 k allocations: 1.636 MiB, 68.77% compilation time)
Running: rectangle_rule_right
  0.018971 seconds (17.96 k allocations: 1.084 MiB, 59.51% compilation time)
Running: rombergs_method
  0.109152 seconds (165.06 k allocations: 9.480 MiB, 98.50% compilation time)
Running: simpsons_rule
  0.000252 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.021525 seconds (80.36 k allocations: 3.491 MiB, 97.46% compilation time)
Running: trapezoidal_rule
  0.055406 seconds (2.39 M allocations: 37.744 MiB, 30.40% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000403 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.060707 seconds (2.46 k allocations: 1.691 MiB, 97.85% compilation time)
Running: chebyshev_quadrature with k=2
  0.061049 seconds (2.72 k allocations: 2.355 MiB, 96.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.056524 seconds (2.32 k allocations: 2.029 MiB, 96.79% compilation time)
Running: chebyshev_quadrature with k=4
  0.055800 seconds (2.32 k allocations: 1.469 MiB, 96.79% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.171851 seconds (372.33 k allocations: 905.364 MiB, 9.43% gc time, 7.75% compilation time)
Running: legendre_quadrature
  0.041412 seconds (1.27 k allocations: 68.422 KiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000141 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000107 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.558956 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000188 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.521628 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.035516 seconds (999 allocations: 56.766 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000022 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000018 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000568 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000083 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.057100 seconds (2.54 k allocations: 579.391 KiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.058074 seconds (2.79 k allocations: 780.344 KiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.058049 seconds (2.39 k allocations: 661.203 KiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.058263 seconds (2.39 k allocations: 491.703 KiB, 99.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.959934 seconds (378.89 k allocations: 253.475 MiB, 31.73% compilation time)
Running: legendre_quadrature
  0.039499 seconds (1.32 k allocations: 68.016 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000058 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000027 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.641663 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000059 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.582487 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.040644 seconds (1.22 k allocations: 65.094 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000205 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 


################################################################################
# Teardown: 2020-10-28T09:37:55.495
#

CPU usage: 550.09s (401.36s user, 142.02s kernel)

Network usage:
- eth0: 236.626 KiB received, 26.038 KiB sent
