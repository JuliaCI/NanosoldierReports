################################################################################
# Set-up: 2020-10-28T09:17:18.172
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T09:17:21.449
#

   Resolving package versions...
   Installed VersionParsing â”€ v1.2.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
   Installed MacroTools â”€â”€â”€â”€â”€ v0.5.6
   Installed PyCall â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.92.1
   Installed GAlgebra â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [ace2154a] + GAlgebra v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [ace2154a] + GAlgebra v0.1.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [69de0a69] + Parsers v1.0.11
  [438e738f] + PyCall v1.92.1
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [4ec0a83e] + Unicode
    Building Conda â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7a58bb32ce5d85f8bf7559aa7c2842f9aecf52fc/build.log`
    Building PyCall â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/b6dff5fa725eff4f775f472acd86756d6e31fb02/build.log`
    Building GAlgebra â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7fcd6dc3029b1f73764521f4359d57d4f7def576/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mGAlgebra
1 dependency successfully precompiled (6 already precompiled)


################################################################################
# Testing: 2020-10-28T09:19:33.399
#

     Testing GAlgebra
Status `/tmp/jl_LUzlWW/Project.toml`
  [ace2154a] GAlgebra v0.1.0
  [438e738f] PyCall v1.92.1
  [24249f21] SymPy v1.0.31
  [8dfed614] Test
Status `/tmp/jl_LUzlWW/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [ace2154a] GAlgebra v0.1.0
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [69de0a69] Parsers v1.0.11
  [438e738f] PyCall v1.92.1
  [3cdcf5f2] RecipesBase v1.1.0
  [276daf66] SpecialFunctions v0.10.3
  [24249f21] SymPy v1.0.31
  [81def892] VersionParsing v1.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
 23.631343 seconds (4.21 M allocations: 246.921 MiB, 9.88% gc time, 86.63% compilation time)
 40.791187 seconds (267.76 k allocations: 15.219 MiB, 1.37% compilation time)
  0.307080 seconds (8.08 k allocations: 250.242 KiB)
  2.286841 seconds (13.40 k allocations: 391.883 KiB)
  0.239694 seconds (8.17 k allocations: 252.492 KiB)
  0.148166 seconds (7.77 k allocations: 240.195 KiB)
 47.942561 seconds (21.25 k allocations: 626.992 KiB)
  4.190722 seconds (13.97 k allocations: 421.648 KiB)
 22.821976 seconds (20.99 k allocations: 617.414 KiB)
 45.618830 seconds (21.17 k allocations: 621.711 KiB)
Test Summary: | Pass  Broken  Total
GAlgebra.jl   | 2876       1   2877
!!!!If I**2 = 0, I cannot be normalized!!!!
!!!!If I**2 = 0, I cannot be normalized!!!!
!!!!If I**2 = 0, I cannot be normalized!!!!
     Testing GAlgebra tests passed 


################################################################################
# Teardown: 2020-10-28T09:23:46.843
#

CPU usage: 291.50s (271.73s user, 20.27s kernel)

Network usage:
- eth0: 259.407 MiB received, 965.561 KiB sent
