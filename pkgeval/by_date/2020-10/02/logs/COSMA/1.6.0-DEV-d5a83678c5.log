Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed COSMA_jll ──────────────────── v2.2.0+0
  Installed MPICH_jll ──────────────────── v3.3.2+10
  Installed COSMA ──────────────────────── v0.1.2
  Installed DistributedArrays ──────────── v0.6.5
  Installed MPIClusterManagers ─────────── v0.2.0
  Installed Requires ───────────────────── v1.1.0
  Installed DocStringExtensions ────────── v0.8.3
  Installed MPI ────────────────────────── v0.14.3
  Installed MicrosoftMPI_jll ───────────── v10.1.2+3
  Installed Primes ─────────────────────── v0.4.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenBLAS_jll ───────────────── v0.3.10+0
  Installed OpenMPI_jll ────────────────── v4.0.2+2
Updating `~/.julia/environments/v1.6/Project.toml`
  [ff1143b4] + COSMA v0.1.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ff1143b4] + COSMA v0.1.2
  [0efae8bf] + COSMA_jll v2.2.0+0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [aaf54ef3] + DistributedArrays v0.6.5
  [ffbed154] + DocStringExtensions v0.8.3
  [da04e1cc] + MPI v0.14.3
  [7cb0a576] + MPICH_jll v3.3.2+10
  [e7922434] + MPIClusterManagers v0.2.0
  [9237b28f] + MicrosoftMPI_jll v10.1.2+3
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [fe0851c0] + OpenMPI_jll v4.0.2+2
  [27ebfcd6] + Primes v0.4.0
  [ae029012] + Requires v1.1.0
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building MPI → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/0fc37a7feb384b51bd6e841ea6cfc424623aab74/build.log`
    Testing COSMA
Status `/tmp/jl_mKITs3/Project.toml`
  [ff1143b4] COSMA v0.1.2
  [0efae8bf] COSMA_jll v2.2.0+0
  [aaf54ef3] DistributedArrays v0.6.5
  [da04e1cc] MPI v0.14.3
  [e7922434] MPIClusterManagers v0.2.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_mKITs3/Manifest.toml`
  [ff1143b4] COSMA v0.1.2
  [0efae8bf] COSMA_jll v2.2.0+0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [aaf54ef3] DistributedArrays v0.6.5
  [ffbed154] DocStringExtensions v0.8.3
  [da04e1cc] MPI v0.14.3
  [7cb0a576] MPICH_jll v3.3.2+10
  [e7922434] MPIClusterManagers v0.2.0
  [9237b28f] MicrosoftMPI_jll v10.1.2+3
  [4536629a] OpenBLAS_jll v0.3.10+0
  [fe0851c0] OpenMPI_jll v4.0.2+2
  [27ebfcd6] Primes v0.4.0
  [ae029012] Requires v1.1.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:      | Pass  Total
Incompatible sizes |    4      4
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                   | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                   | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                 | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float64) | No tests
Test Summary:                                                | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float64) | No tests
Test Summary:                                                 | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                               | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
    Testing COSMA tests passed 
