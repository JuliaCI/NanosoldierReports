Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_BhthCW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_BhthCW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.249774 seconds (379.98 k allocations: 15.444 MiB, 5.31% gc time, 93.20% compilation time)
Running: chebyshev_quadrature with k=1
  1.452643 seconds (2.19 M allocations: 126.594 MiB, 3.88% gc time, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.208818 seconds (409.38 k allocations: 23.568 MiB, 86.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.296446 seconds (473.75 k allocations: 26.619 MiB, 7.74% gc time, 84.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.267570 seconds (418.55 k allocations: 23.251 MiB, 5.08% gc time, 91.77% compilation time)
Running: jacobi_quadrature with α=β=1
 30.746286 seconds (36.43 M allocations: 3.001 GiB, 11.52% gc time, 80.10% compilation time)
Running: laguerre_quadrature with k=1
  2.260473 seconds (3.17 M allocations: 177.129 MiB, 4.50% gc time, 99.88% compilation time)
Running: legendre_quadrature
  0.180831 seconds (206.26 k allocations: 11.842 MiB, 99.05% compilation time)
Running: lobatto_quadrature
  0.271740 seconds (329.77 k allocations: 19.914 MiB, 99.26% compilation time)
Running: radau_quadrature
  0.298486 seconds (447.70 k allocations: 27.346 MiB, 8.10% gc time, 99.35% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 49.651754 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.094906 seconds (172.46 k allocations: 3.827 MiB, 24.24% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.303059 seconds (100.02 M allocations: 1.491 GiB, 0.46% gc time, 0.09% compilation time)
Running: rombergs_method
  0.409388 seconds (723.24 k allocations: 41.756 MiB, 5.07% gc time, 99.48% compilation time)
Running: simpsons_rule
  0.029792 seconds (45.77 k allocations: 2.043 MiB, 94.25% compilation time)
Running: simpsons38_rule
  0.069751 seconds (108.59 k allocations: 5.758 MiB, 97.02% compilation time)
Running: trapezoidal_rule
  0.197938 seconds (1.51 M allocations: 25.679 MiB, 8.02% gc time, 28.51% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.074900 seconds (30.98 k allocations: 1.865 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.366311 seconds (290.39 k allocations: 15.358 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.140861 seconds (93.80 k allocations: 2.675 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.148219 seconds (82.06 k allocations: 2.476 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.144674 seconds (64.67 k allocations: 2.123 MiB, 98.79% compilation time)
Running: jacobi_quadrature with α=β=1
  2.167053 seconds (504.19 k allocations: 161.829 MiB, 6.56% gc time, 26.35% compilation time)
Running: legendre_quadrature
  0.179010 seconds (41.32 k allocations: 2.382 MiB, 12.09% gc time, 99.87% compilation time)
Running: lobatto_quadrature
  0.017199 seconds (15.71 k allocations: 1001.919 KiB, 99.16% compilation time)
Running: radau_quadrature
  0.016942 seconds (15.81 k allocations: 1009.134 KiB, 99.10% compilation time)
Running: rectangle_rule_left
 15.456198 seconds (471.41 M allocations: 7.025 GiB, 6.32% gc time)
Running: rectangle_rule_midpoint
  0.000012 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.811749 seconds (476.96 M allocations: 7.107 GiB, 6.19% gc time)
Running: rombergs_method
  0.354399 seconds (326.64 k allocations: 18.537 MiB, 3.52% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055170 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.051991 seconds (17.40 k allocations: 1.054 MiB, 99.84% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023692 seconds (1.99 k allocations: 53.594 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.088690 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.098598 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.103239 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.103707 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.247769 seconds (364.11 k allocations: 19.082 MiB, 99.19% compilation time)
Running: legendre_quadrature
  0.069289 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000357 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000338 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.073885 seconds (1.04 k allocations: 56.531 KiB, 93.38% compilation time)
Running: simpsons_rule
  0.000023 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022233 seconds (923 allocations: 39.281 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.019560 seconds (44.33 k allocations: 704.859 KiB, 93.43% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.050545 seconds (72.31 k allocations: 4.214 MiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.152872 seconds (230.61 k allocations: 12.965 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.251508 seconds (283.17 k allocations: 15.882 MiB, 20.23% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.178188 seconds (234.76 k allocations: 13.134 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.185600 seconds (234.76 k allocations: 13.067 MiB, 98.71% compilation time)
Running: jacobi_quadrature with α=β=1
  2.123592 seconds (447.19 k allocations: 163.230 MiB, 6.33% gc time, 21.80% compilation time)
Running: legendre_quadrature
  0.128584 seconds (185.44 k allocations: 10.708 MiB, 98.67% compilation time)
Running: lobatto_quadrature
  0.139632 seconds (196.77 k allocations: 11.419 MiB, 98.67% compilation time)
Running: radau_quadrature
  0.162985 seconds (196.76 k allocations: 11.417 MiB, 8.73% gc time, 98.86% compilation time)
Running: rectangle_rule_left
  0.644125 seconds (18.82 k allocations: 1.147 MiB, 3.45% compilation time)
Running: rectangle_rule_midpoint
  0.022610 seconds (24.67 k allocations: 1.555 MiB, 99.30% compilation time)
Running: rectangle_rule_right
  0.654975 seconds (17.39 k allocations: 1.065 MiB, 3.32% compilation time)
Running: rombergs_method
  0.115198 seconds (134.27 k allocations: 7.759 MiB, 97.10% compilation time)
Running: simpsons_rule
  0.021192 seconds (27.54 k allocations: 1.729 MiB, 99.11% compilation time)
Running: simpsons38_rule
  0.031131 seconds (42.37 k allocations: 2.678 MiB, 99.40% compilation time)
Running: trapezoidal_rule
  0.020382 seconds (44.10 k allocations: 1.772 MiB, 96.79% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.057598 seconds (99.53 k allocations: 2.979 MiB, 96.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.190605 seconds (237.20 k allocations: 13.054 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.228894 seconds (290.20 k allocations: 15.891 MiB, 10.14% gc time, 98.83% compilation time)
Running: chebyshev_quadrature with k=3
  0.170976 seconds (241.33 k allocations: 13.116 MiB, 96.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.153601 seconds (241.34 k allocations: 13.137 MiB, 98.84% compilation time)
Running: hermite_quadrature with k=2
 11.720406 seconds (20.10 M allocations: 1.056 GiB, 10.65% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.335733 seconds (456.36 k allocations: 49.425 MiB, 9.19% gc time, 82.25% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.240309 seconds (276.26 k allocations: 15.240 MiB, 11.91% gc time, 98.58% compilation time)
Running: legendre_quadrature
  0.136689 seconds (191.98 k allocations: 11.070 MiB, 98.35% compilation time)
Running: lobatto_quadrature
  0.189866 seconds (217.43 k allocations: 37.194 MiB, 11.45% gc time, 86.79% compilation time)
Running: radau_quadrature
  0.165889 seconds (214.01 k allocations: 29.854 MiB, 88.39% compilation time)
Running: rectangle_rule_left
  0.021808 seconds (21.73 k allocations: 1.293 MiB, 99.38% compilation time)
Running: rectangle_rule_midpoint
  0.021663 seconds (26.47 k allocations: 1.642 MiB, 99.35% compilation time)
Running: rectangle_rule_right
  0.020901 seconds (18.50 k allocations: 1.117 MiB, 99.40% compilation time)
Running: rombergs_method
  0.100761 seconds (136.74 k allocations: 7.808 MiB, 97.09% compilation time)
Running: simpsons_rule
  0.029848 seconds (39.38 k allocations: 2.061 MiB, 98.88% compilation time)
Running: simpsons38_rule
  0.053371 seconds (57.34 k allocations: 3.063 MiB, 39.58% gc time, 59.57% compilation time)
Running: trapezoidal_rule
  0.024381 seconds (30.13 k allocations: 1.697 MiB, 98.96% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.032233 seconds (59.92 k allocations: 2.280 MiB, 97.17% compilation time)
Running: chebyshev_quadrature with k=1
  0.150638 seconds (232.72 k allocations: 12.824 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.179577 seconds (285.38 k allocations: 15.643 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.193773 seconds (236.87 k allocations: 12.928 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.182522 seconds (236.87 k allocations: 12.929 MiB, 13.28% gc time, 98.78% compilation time)
Running: hermite_quadrature with k=2
  0.159271 seconds (170.79 k allocations: 9.853 MiB, 98.68% compilation time)
Running: jacobi_quadrature with α=β=1
  6.273793 seconds (449.62 k allocations: 1.175 GiB, 15.40% gc time, 5.63% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.175222 seconds (271.55 k allocations: 15.080 MiB, 97.94% compilation time)
Running: legendre_quadrature
  0.155823 seconds (187.55 k allocations: 10.817 MiB, 98.54% compilation time)
Running: lobatto_quadrature
  0.218011 seconds (208.19 k allocations: 22.937 MiB, 82.88% compilation time)
Running: radau_quadrature
  0.182476 seconds (207.34 k allocations: 20.852 MiB, 9.91% gc time, 91.81% compilation time)
Running: rectangle_rule_left
  0.024547 seconds (19.52 k allocations: 1.188 MiB, 99.44% compilation time)
Running: rectangle_rule_midpoint
  0.021728 seconds (25.36 k allocations: 1.591 MiB, 99.37% compilation time)
Running: rectangle_rule_right
  0.019573 seconds (17.36 k allocations: 1.062 MiB, 99.35% compilation time)
Running: rombergs_method
  0.200338 seconds (132.58 k allocations: 7.622 MiB, 98.83% compilation time)
Running: simpsons_rule
  0.028267 seconds (31.90 k allocations: 1.853 MiB, 99.15% compilation time)
Running: simpsons38_rule
  0.040475 seconds (48.16 k allocations: 2.821 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.022630 seconds (25.05 k allocations: 1.535 MiB, 99.10% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026295 seconds (30.87 k allocations: 1.875 MiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.148637 seconds (231.10 k allocations: 13.042 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.179236 seconds (283.67 k allocations: 15.985 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.273010 seconds (235.25 k allocations: 13.146 MiB, 12.11% gc time, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.156548 seconds (235.25 k allocations: 12.971 MiB, 98.48% compilation time)
Running: jacobi_quadrature with α=β=1
  2.108703 seconds (447.72 k allocations: 194.259 MiB, 7.27% gc time, 23.19% compilation time)
Running: legendre_quadrature
  0.163507 seconds (185.93 k allocations: 10.745 MiB, 98.65% compilation time)
Running: lobatto_quadrature
  0.164002 seconds (197.26 k allocations: 11.445 MiB, 98.55% compilation time)
Running: radau_quadrature
  0.183502 seconds (197.26 k allocations: 11.451 MiB, 98.63% compilation time)
Running: rectangle_rule_left
  0.349381 seconds (19.34 k allocations: 1.173 MiB, 6.82% compilation time)
Running: rectangle_rule_midpoint
  0.019022 seconds (25.01 k allocations: 1.573 MiB, 99.17% compilation time)
Running: rectangle_rule_right
  0.163264 seconds (17.73 k allocations: 1.081 MiB, 12.56% compilation time)
Running: rombergs_method
  0.115487 seconds (145.02 k allocations: 8.483 MiB, 97.08% compilation time)
Running: simpsons_rule
  0.027444 seconds (28.23 k allocations: 1.759 MiB, 99.20% compilation time)
Running: simpsons38_rule
  0.033893 seconds (43.08 k allocations: 2.708 MiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.021549 seconds (45.03 k allocations: 1.805 MiB, 96.98% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027248 seconds (31.64 k allocations: 1.826 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=1
  0.224864 seconds (231.69 k allocations: 12.988 MiB, 10.15% gc time, 98.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.228741 seconds (284.30 k allocations: 15.891 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.206615 seconds (235.84 k allocations: 13.130 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.157430 seconds (235.84 k allocations: 13.142 MiB, 98.23% compilation time)
Running: jacobi_quadrature with α=β=1
  1.568333 seconds (448.43 k allocations: 148.940 MiB, 4.01% gc time, 22.58% compilation time)
Running: legendre_quadrature
  0.140647 seconds (186.53 k allocations: 10.750 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.131525 seconds (197.86 k allocations: 11.468 MiB, 98.18% compilation time)
Running: radau_quadrature
  0.161032 seconds (197.85 k allocations: 11.462 MiB, 98.57% compilation time)
Running: rectangle_rule_left
  0.710771 seconds (19.59 k allocations: 1.186 MiB, 3.28% compilation time)
Running: rectangle_rule_midpoint
  0.020588 seconds (25.01 k allocations: 1.574 MiB, 99.05% compilation time)
Running: rectangle_rule_right
  0.672408 seconds (17.69 k allocations: 1.078 MiB, 3.43% compilation time)
Running: rombergs_method
  0.121421 seconds (135.49 k allocations: 7.893 MiB, 97.24% compilation time)
Running: simpsons_rule
  0.028595 seconds (28.93 k allocations: 1.786 MiB, 99.29% compilation time)
Running: simpsons38_rule
  0.020070 seconds (43.78 k allocations: 2.734 MiB, 99.19% compilation time)
Running: trapezoidal_rule
  0.034825 seconds (57.27 k allocations: 2.006 MiB, 97.50% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.133363 seconds (146.66 k allocations: 8.788 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.117636 seconds (69.93 k allocations: 2.205 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.155116 seconds (105.09 k allocations: 2.868 MiB, 97.64% compilation time)
Running: chebyshev_quadrature with k=3
  0.148989 seconds (92.57 k allocations: 2.654 MiB, 97.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.144184 seconds (72.10 k allocations: 2.248 MiB, 98.10% compilation time)
Running: jacobi_quadrature with α=β=1
  2.284078 seconds (480.48 k allocations: 167.774 MiB, 5.31% gc time, 23.54% compilation time)
Running: legendre_quadrature
  0.110419 seconds (18.73 k allocations: 1.094 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000033 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 22.888510 seconds (590.00 M allocations: 8.792 GiB, 5.45% gc time)
Running: rectangle_rule_midpoint
  0.000032 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.628416 seconds (592.75 M allocations: 8.833 GiB, 5.51% gc time)
Running: rombergs_method
  0.120159 seconds (20.51 k allocations: 1.166 MiB, 99.49% compilation time)
Running: simpsons_rule
  0.000023 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024666 seconds (463 allocations: 22.578 KiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.027103 seconds (179 allocations: 8.766 KiB, 99.52% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.437832 seconds (629.32 M allocations: 9.387 GiB, 4.25% gc time, 0.38% compilation time)
Running: chebyshev_quadrature with k=1
  0.391236 seconds (414.16 k allocations: 22.970 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=2
 18.491715 seconds (468.80 k allocations: 4.040 GiB, 2.52% gc time, 2.51% compilation time)
Running: chebyshev_quadrature with k=3
  8.273623 seconds (249.12 k allocations: 1.642 GiB, 3.92% gc time, 1.97% compilation time)
Running: chebyshev_quadrature with k=4
 11.710414 seconds (249.12 k allocations: 2.260 GiB, 2.08% gc time, 1.52% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.697351 seconds (484.66 k allocations: 13.254 GiB, 6.06% gc time, 1.04% compilation time)
Running: legendre_quadrature.
  9.832994 seconds (223.42 k allocations: 1.976 GiB, 1.99% gc time, 1.52% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.574965 seconds (8.23 M allocations: 13.383 GiB, 8.86% gc time, 1.36% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.877937 seconds (7.23 M allocations: 13.369 GiB, 7.95% gc time, 0.56% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.656548 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.660392 seconds (30.45 k allocations: 1.884 MiB, 0.42% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.182332 seconds (22.45 k allocations: 1.357 MiB, 1.62% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.104278 seconds (438.26 k allocations: 152.679 MiB, 1.83% gc time, 15.26% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.111770 seconds (600.04 M allocations: 8.943 GiB, 5.66% gc time, 0.19% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.264458 seconds (600.05 M allocations: 8.943 GiB, 5.92% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.001607 seconds (600.03 M allocations: 8.943 GiB, 5.76% gc time, 0.18% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.039102 seconds (180.45 k allocations: 4.404 MiB, 88.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.202248 seconds (247.70 k allocations: 13.449 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.171208 seconds (272.34 k allocations: 14.523 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.232824 seconds (220.25 k allocations: 11.631 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.205054 seconds (220.25 k allocations: 11.626 MiB, 99.32% compilation time)
Running: jacobi_quadrature with α=β=1
  0.369899 seconds (389.30 k allocations: 34.995 MiB, 92.03% compilation time)
Running: laguerre_quadrature with k=2
  0.191270 seconds (180.54 k allocations: 10.477 MiB, 78.55% compilation time)
Running: legendre_quadrature
  0.162979 seconds (145.99 k allocations: 8.082 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.021680 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018836 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.056442 seconds (18.88 k allocations: 1.122 MiB, 69.70% compilation time)
Running: rectangle_rule_midpoint
  0.055452 seconds (25.48 k allocations: 1.576 MiB, 84.35% compilation time)
Running: rectangle_rule_right
  0.036284 seconds (17.48 k allocations: 1.049 MiB, 46.42% compilation time)
Running: rombergs_method
  0.302281 seconds (172.16 k allocations: 9.925 MiB, 98.80% compilation time)
Running: simpsons_rule
  0.001264 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.055665 seconds (78.86 k allocations: 3.384 MiB, 98.49% compilation time)
Running: trapezoidal_rule
  0.128854 seconds (2.39 M allocations: 37.691 MiB, 20.19% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001095 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.100858 seconds (2.46 k allocations: 1.691 MiB, 98.00% compilation time)
Running: chebyshev_quadrature with k=2
  0.102737 seconds (2.71 k allocations: 2.355 MiB, 96.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.094568 seconds (2.31 k allocations: 2.028 MiB, 96.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.107099 seconds (2.31 k allocations: 1.469 MiB, 97.54% compilation time)
Running: jacobi_quadrature with α=β=1
  5.606423 seconds (366.38 k allocations: 904.821 MiB, 7.85% gc time, 8.16% compilation time)
Running: legendre_quadrature
  0.082335 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000194 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000129 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.754951 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000347 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.530536 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.244454 seconds (997 allocations: 56.672 KiB, 99.86% compilation time)
Running: simpsons_rule
  0.000023 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000025 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000370 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000173 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.113826 seconds (2.53 k allocations: 579.203 KiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.071837 seconds (2.79 k allocations: 780.188 KiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.073563 seconds (2.39 k allocations: 661.047 KiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.256805 seconds (2.39 k allocations: 491.547 KiB, 99.78% compilation time)
Running: jacobi_quadrature with α=β=1
  2.941963 seconds (372.94 k allocations: 252.986 MiB, 24.12% gc time, 16.28% compilation time)
Running: legendre_quadrature
  0.069157 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000052 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.097755 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000130 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.891428 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.067654 seconds (1.21 k allocations: 64.938 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000257 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
