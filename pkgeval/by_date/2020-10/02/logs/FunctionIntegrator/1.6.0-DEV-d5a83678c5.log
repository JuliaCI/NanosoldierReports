Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_iqC390/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_iqC390/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.252659 seconds (379.98 k allocations: 15.444 MiB, 8.84% gc time, 92.02% compilation time)
Running: chebyshev_quadrature with k=1
  1.548187 seconds (2.19 M allocations: 126.594 MiB, 4.25% gc time, 97.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.286084 seconds (409.38 k allocations: 23.568 MiB, 82.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.334217 seconds (473.75 k allocations: 26.619 MiB, 9.91% gc time, 88.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.267476 seconds (418.55 k allocations: 23.251 MiB, 4.84% gc time, 90.33% compilation time)
Running: jacobi_quadrature with α=β=1
 32.988823 seconds (36.43 M allocations: 3.001 GiB, 11.21% gc time, 79.57% compilation time)
Running: laguerre_quadrature with k=1
  2.704479 seconds (3.17 M allocations: 177.129 MiB, 3.78% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.194139 seconds (206.26 k allocations: 11.842 MiB, 99.11% compilation time)
Running: lobatto_quadrature
  0.308066 seconds (329.77 k allocations: 19.914 MiB, 99.33% compilation time)
Running: radau_quadrature
  0.342237 seconds (447.70 k allocations: 27.346 MiB, 7.78% gc time, 99.39% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 61.115907 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.112948 seconds (172.46 k allocations: 3.827 MiB, 21.81% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 60.944342 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time, 0.08% compilation time)
Running: rombergs_method
  0.375194 seconds (723.24 k allocations: 41.756 MiB, 99.40% compilation time)
Running: simpsons_rule
  0.032792 seconds (45.77 k allocations: 2.043 MiB, 93.37% compilation time)
Running: simpsons38_rule
  0.076740 seconds (108.59 k allocations: 5.758 MiB, 96.45% compilation time)
Running: trapezoidal_rule
  0.248082 seconds (1.51 M allocations: 25.679 MiB, 11.43% gc time, 24.91% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.067266 seconds (30.98 k allocations: 1.865 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.383022 seconds (290.39 k allocations: 15.358 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.145755 seconds (93.80 k allocations: 2.675 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.147022 seconds (82.06 k allocations: 2.476 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.148991 seconds (64.67 k allocations: 2.123 MiB, 98.95% compilation time)
Running: jacobi_quadrature with α=β=1
  2.002030 seconds (504.19 k allocations: 161.829 MiB, 9.92% gc time, 20.04% compilation time)
Running: legendre_quadrature
  0.156240 seconds (41.32 k allocations: 2.382 MiB, 8.29% gc time, 99.84% compilation time)
Running: lobatto_quadrature
  0.017951 seconds (15.71 k allocations: 1001.919 KiB, 99.07% compilation time)
Running: radau_quadrature
  0.017691 seconds (15.81 k allocations: 1009.134 KiB, 99.20% compilation time)
Running: rectangle_rule_left
 16.334597 seconds (471.41 M allocations: 7.025 GiB, 6.08% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 16.217464 seconds (476.96 M allocations: 7.107 GiB, 6.17% gc time)
Running: rombergs_method
  0.333858 seconds (326.64 k allocations: 18.537 MiB, 2.79% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.060178 seconds (18.91 k allocations: 1.146 MiB, 99.82% compilation time)
Running: trapezoidal_rule
  0.055391 seconds (17.40 k allocations: 1.054 MiB, 99.83% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027134 seconds (1.99 k allocations: 53.594 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.092130 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.099517 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.093092 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.089149 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with α=β=1
  0.282867 seconds (364.11 k allocations: 19.082 MiB, 99.29% compilation time)
Running: legendre_quadrature
  0.105655 seconds (1.28 k allocations: 65.891 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000125 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000061 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000416 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000300 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000396 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.098063 seconds (1.04 k allocations: 56.531 KiB, 99.79% compilation time)
Running: simpsons_rule
  0.000025 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024599 seconds (923 allocations: 39.281 KiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.019131 seconds (44.33 k allocations: 704.859 KiB, 93.51% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.051201 seconds (72.31 k allocations: 4.215 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.179115 seconds (230.61 k allocations: 12.965 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.197374 seconds (283.17 k allocations: 15.882 MiB, 11.05% gc time, 98.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.146901 seconds (234.76 k allocations: 13.134 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.159106 seconds (234.76 k allocations: 13.067 MiB, 98.72% compilation time)
Running: jacobi_quadrature with α=β=1
  1.752962 seconds (447.19 k allocations: 163.230 MiB, 7.57% gc time, 20.67% compilation time)
Running: legendre_quadrature
  0.130346 seconds (185.44 k allocations: 10.708 MiB, 98.51% compilation time)
Running: lobatto_quadrature
  0.161209 seconds (196.77 k allocations: 11.419 MiB, 98.85% compilation time)
Running: radau_quadrature
  0.156135 seconds (196.76 k allocations: 11.417 MiB, 9.73% gc time, 98.74% compilation time)
Running: rectangle_rule_left
  0.674966 seconds (18.82 k allocations: 1.147 MiB, 3.54% compilation time)
Running: rectangle_rule_midpoint
  0.028531 seconds (24.67 k allocations: 1.555 MiB, 99.51% compilation time)
Running: rectangle_rule_right
  0.781401 seconds (17.39 k allocations: 1.065 MiB, 2.84% compilation time)
Running: rombergs_method
  0.147280 seconds (134.27 k allocations: 7.759 MiB, 97.88% compilation time)
Running: simpsons_rule
  0.029484 seconds (27.54 k allocations: 1.729 MiB, 99.31% compilation time)
Running: simpsons38_rule
  0.028858 seconds (42.37 k allocations: 2.678 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.021318 seconds (44.10 k allocations: 1.772 MiB, 97.19% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034394 seconds (99.53 k allocations: 2.979 MiB, 94.54% compilation time)
Running: chebyshev_quadrature with k=1
  0.171016 seconds (237.20 k allocations: 13.054 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.223398 seconds (290.20 k allocations: 15.891 MiB, 6.80% gc time, 98.76% compilation time)
Running: chebyshev_quadrature with k=3
  0.170370 seconds (241.33 k allocations: 13.116 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.163885 seconds (241.34 k allocations: 13.137 MiB, 98.82% compilation time)
Running: hermite_quadrature with k=2
 11.711713 seconds (20.10 M allocations: 1.056 GiB, 10.03% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.358563 seconds (456.36 k allocations: 49.428 MiB, 7.81% gc time, 84.21% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.228843 seconds (276.26 k allocations: 15.240 MiB, 11.79% gc time, 98.39% compilation time)
Running: legendre_quadrature
  0.133717 seconds (191.98 k allocations: 11.070 MiB, 98.28% compilation time)
Running: lobatto_quadrature
  0.191303 seconds (217.43 k allocations: 37.194 MiB, 10.83% gc time, 86.77% compilation time)
Running: radau_quadrature
  0.216565 seconds (214.01 k allocations: 29.854 MiB, 89.65% compilation time)
Running: rectangle_rule_left
  0.022335 seconds (21.73 k allocations: 1.293 MiB, 99.38% compilation time)
Running: rectangle_rule_midpoint
  0.029293 seconds (26.47 k allocations: 1.642 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.019137 seconds (18.50 k allocations: 1.117 MiB, 99.33% compilation time)
Running: rombergs_method
  0.100013 seconds (136.74 k allocations: 7.809 MiB, 97.76% compilation time)
Running: simpsons_rule
  0.029544 seconds (39.38 k allocations: 2.061 MiB, 98.79% compilation time)
Running: simpsons38_rule
  0.051382 seconds (57.34 k allocations: 3.063 MiB, 43.65% gc time, 99.20% compilation time)
Running: trapezoidal_rule
  0.025195 seconds (30.13 k allocations: 1.697 MiB, 98.99% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.033259 seconds (59.92 k allocations: 2.280 MiB, 97.03% compilation time)
Running: chebyshev_quadrature with k=1
  0.183629 seconds (232.72 k allocations: 12.824 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.209414 seconds (285.38 k allocations: 15.643 MiB, 97.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.163456 seconds (236.87 k allocations: 12.928 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.167669 seconds (236.87 k allocations: 12.929 MiB, 98.72% compilation time)
Running: hermite_quadrature with k=2
  0.135251 seconds (170.79 k allocations: 9.852 MiB, 98.43% compilation time)
Running: jacobi_quadrature with α=β=1
  5.356487 seconds (449.63 k allocations: 1.175 GiB, 25.46% gc time, 6.90% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.202136 seconds (271.55 k allocations: 15.080 MiB, 9.42% gc time, 98.16% compilation time)
Running: legendre_quadrature
  0.153001 seconds (187.55 k allocations: 10.817 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.168134 seconds (208.19 k allocations: 22.937 MiB, 89.42% compilation time)
Running: radau_quadrature
  0.175051 seconds (207.34 k allocations: 20.852 MiB, 8.63% gc time, 82.27% compilation time)
Running: rectangle_rule_left
  0.020431 seconds (19.52 k allocations: 1.188 MiB, 99.23% compilation time)
Running: rectangle_rule_midpoint
  0.021387 seconds (25.36 k allocations: 1.591 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.020065 seconds (17.36 k allocations: 1.062 MiB, 99.20% compilation time)
Running: rombergs_method
  0.107134 seconds (132.58 k allocations: 7.622 MiB, 97.68% compilation time)
Running: simpsons_rule
  0.028233 seconds (31.90 k allocations: 1.853 MiB, 98.98% compilation time)
Running: simpsons38_rule
  0.028694 seconds (48.16 k allocations: 2.821 MiB, 98.94% compilation time)
Running: trapezoidal_rule
  0.026604 seconds (25.05 k allocations: 1.535 MiB, 99.05% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026286 seconds (30.87 k allocations: 1.875 MiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=1
  0.228587 seconds (231.10 k allocations: 13.042 MiB, 7.78% gc time, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.214773 seconds (283.67 k allocations: 15.985 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.231924 seconds (235.25 k allocations: 13.146 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=4
  0.186361 seconds (235.25 k allocations: 13.033 MiB, 10.47% gc time, 98.70% compilation time)
Running: jacobi_quadrature with α=β=1
  1.571872 seconds (447.72 k allocations: 194.259 MiB, 7.73% gc time, 27.70% compilation time)
Running: legendre_quadrature
  0.125254 seconds (185.93 k allocations: 10.745 MiB, 96.02% compilation time)
Running: lobatto_quadrature
  0.166642 seconds (197.26 k allocations: 11.445 MiB, 98.56% compilation time)
Running: radau_quadrature
  0.168190 seconds (197.26 k allocations: 11.451 MiB, 9.86% gc time, 98.58% compilation time)
Running: rectangle_rule_left
  0.336703 seconds (19.34 k allocations: 1.173 MiB, 6.61% compilation time)
Running: rectangle_rule_midpoint
  0.018929 seconds (25.01 k allocations: 1.573 MiB, 99.15% compilation time)
Running: rectangle_rule_right
  0.159021 seconds (17.73 k allocations: 1.081 MiB, 13.51% compilation time)
Running: rombergs_method
  0.109792 seconds (145.02 k allocations: 8.483 MiB, 95.90% compilation time)
Running: simpsons_rule
  0.024876 seconds (28.23 k allocations: 1.758 MiB, 99.20% compilation time)
Running: simpsons38_rule
  0.026097 seconds (43.08 k allocations: 2.708 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.021015 seconds (45.03 k allocations: 1.805 MiB, 96.93% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028678 seconds (31.64 k allocations: 1.826 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=1
  0.204108 seconds (231.69 k allocations: 12.988 MiB, 10.14% gc time, 98.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.178277 seconds (284.30 k allocations: 15.891 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.201668 seconds (235.84 k allocations: 13.130 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.207175 seconds (235.84 k allocations: 13.142 MiB, 98.64% compilation time)
Running: jacobi_quadrature with α=β=1
  1.736879 seconds (448.43 k allocations: 148.940 MiB, 8.51% gc time, 26.20% compilation time)
Running: legendre_quadrature
  0.152876 seconds (186.53 k allocations: 10.750 MiB, 98.45% compilation time)
Running: lobatto_quadrature
  0.151145 seconds (197.86 k allocations: 11.468 MiB, 98.46% compilation time)
Running: radau_quadrature
  0.177912 seconds (197.85 k allocations: 11.462 MiB, 10.00% gc time, 98.61% compilation time)
Running: rectangle_rule_left
  0.847935 seconds (19.59 k allocations: 1.186 MiB, 2.79% compilation time)
Running: rectangle_rule_midpoint
  0.025771 seconds (25.01 k allocations: 1.574 MiB, 99.29% compilation time)
Running: rectangle_rule_right
  0.843629 seconds (17.69 k allocations: 1.078 MiB, 2.93% compilation time)
Running: rombergs_method
  0.125732 seconds (135.49 k allocations: 7.893 MiB, 97.09% compilation time)
Running: simpsons_rule
  0.028117 seconds (28.93 k allocations: 1.785 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.027813 seconds (43.78 k allocations: 2.734 MiB, 99.06% compilation time)
Running: trapezoidal_rule
  0.022787 seconds (57.27 k allocations: 2.006 MiB, 96.43% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.146675 seconds (146.66 k allocations: 8.788 MiB, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.127080 seconds (69.93 k allocations: 2.205 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=2
  0.138208 seconds (105.09 k allocations: 2.868 MiB, 97.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.161593 seconds (92.57 k allocations: 2.654 MiB, 97.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.210219 seconds (72.10 k allocations: 2.248 MiB, 98.70% compilation time)
Running: jacobi_quadrature with α=β=1
  1.034358 seconds (480.48 k allocations: 167.774 MiB, 7.49% gc time, 45.82% compilation time)
Running: legendre_quadrature
  0.100924 seconds (18.73 k allocations: 1.094 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.000090 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.687931 seconds (590.00 M allocations: 8.792 GiB, 6.77% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.230640 seconds (592.75 M allocations: 8.833 GiB, 6.70% gc time)
Running: rombergs_method
  0.110951 seconds (20.51 k allocations: 1.166 MiB, 99.49% compilation time)
Running: simpsons_rule
  0.000019 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027536 seconds (463 allocations: 22.578 KiB, 93.44% compilation time)
Running: trapezoidal_rule
  0.025798 seconds (179 allocations: 8.766 KiB, 99.57% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.277425 seconds (629.32 M allocations: 9.387 GiB, 5.21% gc time, 0.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.485040 seconds (414.16 k allocations: 22.970 MiB, 2.51% gc time, 99.06% compilation time)
Running: chebyshev_quadrature with k=2
 18.300119 seconds (468.80 k allocations: 4.040 GiB, 2.46% gc time, 2.70% compilation time)
Running: chebyshev_quadrature with k=3
  8.289365 seconds (249.12 k allocations: 1.642 GiB, 3.52% gc time, 1.77% compilation time)
Running: chebyshev_quadrature with k=4
 11.313858 seconds (249.12 k allocations: 2.260 GiB, 1.88% gc time, 1.61% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.779977 seconds (484.66 k allocations: 13.254 GiB, 6.30% gc time, 1.16% compilation time)
Running: legendre_quadrature.
  9.843773 seconds (223.42 k allocations: 1.976 GiB, 1.12% gc time, 2.11% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.464291 seconds (8.23 M allocations: 13.383 GiB, 8.32% gc time, 0.62% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.073888 seconds (7.23 M allocations: 13.369 GiB, 8.36% gc time, 0.66% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.915157 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.852278 seconds (30.45 k allocations: 1.884 MiB, 0.28% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.906992 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.053117 seconds (438.26 k allocations: 152.679 MiB, 1.79% gc time, 13.19% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.516052 seconds (600.04 M allocations: 8.943 GiB, 5.55% gc time, 0.12% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.306996 seconds (600.05 M allocations: 8.943 GiB, 5.47% gc time, 0.14% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.553204 seconds (600.03 M allocations: 8.943 GiB, 6.36% gc time, 0.13% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.041956 seconds (180.45 k allocations: 4.404 MiB, 90.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.191391 seconds (247.70 k allocations: 13.449 MiB, 97.66% compilation time)
Running: chebyshev_quadrature with k=2
  0.199650 seconds (272.34 k allocations: 14.523 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.143417 seconds (220.25 k allocations: 11.631 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.173511 seconds (220.25 k allocations: 11.626 MiB, 99.24% compilation time)
Running: jacobi_quadrature with α=β=1
  0.235678 seconds (389.30 k allocations: 34.995 MiB, 91.58% compilation time)
Running: laguerre_quadrature with k=2
  0.134803 seconds (180.54 k allocations: 10.477 MiB, 81.22% compilation time)
Running: legendre_quadrature
  0.095200 seconds (145.99 k allocations: 8.082 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.018065 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019828 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.045199 seconds (18.88 k allocations: 1.122 MiB, 76.33% compilation time)
Running: rectangle_rule_midpoint
  0.022665 seconds (25.48 k allocations: 1.576 MiB, 73.39% compilation time)
Running: rectangle_rule_right
  0.026513 seconds (17.48 k allocations: 1.049 MiB, 54.57% compilation time)
Running: rombergs_method
  0.245170 seconds (172.16 k allocations: 9.862 MiB, 34.12% gc time, 98.93% compilation time)
Running: simpsons_rule
  0.000485 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.026325 seconds (78.86 k allocations: 3.384 MiB, 97.61% compilation time)
Running: trapezoidal_rule
  0.090969 seconds (2.39 M allocations: 37.691 MiB, 21.13% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001147 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.102519 seconds (2.46 k allocations: 1.691 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.110714 seconds (2.71 k allocations: 2.355 MiB, 96.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.111788 seconds (2.31 k allocations: 2.028 MiB, 96.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.102613 seconds (2.31 k allocations: 1.469 MiB, 97.56% compilation time)
Running: jacobi_quadrature with α=β=1
  5.168514 seconds (366.38 k allocations: 904.821 MiB, 3.49% gc time, 9.02% compilation time)
Running: legendre_quadrature
  0.074244 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000268 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000173 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.847724 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.975910 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070643 seconds (997 allocations: 56.672 KiB, 99.46% compilation time)
Running: simpsons_rule
  0.000033 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000586 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000279 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.124075 seconds (2.53 k allocations: 579.203 KiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.089992 seconds (2.79 k allocations: 780.188 KiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.103094 seconds (2.39 k allocations: 661.047 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.104615 seconds (2.39 k allocations: 491.547 KiB, 99.31% compilation time)
Running: jacobi_quadrature with α=β=1
  1.879389 seconds (372.94 k allocations: 252.986 MiB, 12.15% gc time, 20.69% compilation time)
Running: legendre_quadrature
  0.070005 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000138 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000079 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.335205 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000141 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.327802 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081174 seconds (1.21 k allocations: 64.938 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000287 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
