Julia Version 1.6.0-DEV.1101
Commit 2fe2b43606 (2020-10-01 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_bkjr2o/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_bkjr2o/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.222522 seconds (379.94 k allocations: 15.440 MiB, 6.54% gc time, 91.05% compilation time)
Running: chebyshev_quadrature with k=1
  1.357393 seconds (2.19 M allocations: 126.456 MiB, 4.59% gc time, 97.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.295827 seconds (409.39 k allocations: 23.586 MiB, 83.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.242653 seconds (473.75 k allocations: 26.627 MiB, 84.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.248924 seconds (418.55 k allocations: 23.254 MiB, 10.25% gc time, 88.99% compilation time)
Running: jacobi_quadrature with α=β=1
 29.382621 seconds (36.41 M allocations: 3.000 GiB, 11.56% gc time, 82.51% compilation time)
Running: laguerre_quadrature with k=1
  2.427783 seconds (3.17 M allocations: 177.044 MiB, 4.08% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.200128 seconds (206.11 k allocations: 11.829 MiB, 99.21% compilation time)
Running: lobatto_quadrature
  0.329492 seconds (329.63 k allocations: 19.911 MiB, 99.39% compilation time)
Running: radau_quadrature
  0.364447 seconds (447.66 k allocations: 27.311 MiB, 6.93% gc time, 99.41% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 60.554559 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.111063 seconds (172.46 k allocations: 3.827 MiB, 23.22% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 60.570698 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time, 0.04% compilation time)
Running: rombergs_method
  0.467547 seconds (723.09 k allocations: 41.724 MiB, 4.98% gc time, 99.52% compilation time)
Running: simpsons_rule
  0.027687 seconds (45.77 k allocations: 2.043 MiB, 92.99% compilation time)
Running: simpsons38_rule
  0.096764 seconds (108.55 k allocations: 5.754 MiB, 97.35% compilation time)
Running: trapezoidal_rule
  0.306832 seconds (1.51 M allocations: 25.675 MiB, 9.11% gc time, 29.18% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.069501 seconds (30.98 k allocations: 1.864 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.344566 seconds (290.27 k allocations: 15.346 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.133227 seconds (93.80 k allocations: 2.675 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.135454 seconds (82.06 k allocations: 2.476 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.139047 seconds (64.67 k allocations: 2.123 MiB, 98.91% compilation time)
Running: jacobi_quadrature with α=β=1
  2.115418 seconds (504.13 k allocations: 161.819 MiB, 10.36% gc time, 21.84% compilation time)
Running: legendre_quadrature
  0.138299 seconds (41.17 k allocations: 2.369 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.016411 seconds (15.56 k allocations: 988.903 KiB, 99.04% compilation time)
Running: radau_quadrature
  0.016323 seconds (15.67 k allocations: 996.118 KiB, 99.03% compilation time)
Running: rectangle_rule_left
 14.747502 seconds (471.41 M allocations: 7.025 GiB, 4.32% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.181389 seconds (476.96 M allocations: 7.107 GiB, 3.77% gc time)
Running: rombergs_method
  0.273532 seconds (326.49 k allocations: 18.524 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000012 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.056588 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.042152 seconds (17.40 k allocations: 1.054 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026025 seconds (1.99 k allocations: 53.594 KiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.098954 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.100329 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.094409 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.093325 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with α=β=1
  0.249144 seconds (364.11 k allocations: 19.015 MiB, 99.18% compilation time)
Running: legendre_quadrature
  0.061730 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000091 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000050 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000351 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000237 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000330 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.061882 seconds (1.04 k allocations: 56.531 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000023 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.020878 seconds (923 allocations: 39.281 KiB, 99.64% compilation time)
Running: trapezoidal_rule
  0.018035 seconds (44.33 k allocations: 704.859 KiB, 92.60% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.045281 seconds (72.31 k allocations: 4.214 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.141642 seconds (230.61 k allocations: 12.965 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.171149 seconds (283.17 k allocations: 15.897 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.161812 seconds (234.76 k allocations: 13.134 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.157205 seconds (234.76 k allocations: 13.067 MiB, 98.72% compilation time)
Running: jacobi_quadrature with α=β=1
  1.494315 seconds (447.19 k allocations: 163.211 MiB, 11.40% gc time, 24.74% compilation time)
Running: legendre_quadrature
  0.138252 seconds (185.44 k allocations: 10.709 MiB, 98.76% compilation time)
Running: lobatto_quadrature
  0.147341 seconds (196.77 k allocations: 11.482 MiB, 98.74% compilation time)
Running: radau_quadrature
  0.162273 seconds (196.76 k allocations: 11.417 MiB, 9.24% gc time, 98.85% compilation time)
Running: rectangle_rule_left
  0.663536 seconds (18.82 k allocations: 1.147 MiB, 5.48% compilation time)
Running: rectangle_rule_midpoint
  0.022640 seconds (24.67 k allocations: 1.558 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.601126 seconds (17.39 k allocations: 1.062 MiB, 3.59% compilation time)
Running: rombergs_method
  0.098439 seconds (134.27 k allocations: 7.759 MiB, 97.39% compilation time)
Running: simpsons_rule
  0.021296 seconds (27.54 k allocations: 1.729 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.024878 seconds (42.37 k allocations: 2.678 MiB, 99.34% compilation time)
Running: trapezoidal_rule
  0.019141 seconds (44.10 k allocations: 1.772 MiB, 96.59% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.027622 seconds (99.53 k allocations: 2.979 MiB, 93.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.158314 seconds (237.20 k allocations: 13.074 MiB, 10.96% gc time, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.150371 seconds (290.20 k allocations: 15.871 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.141819 seconds (241.33 k allocations: 13.116 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.165005 seconds (241.34 k allocations: 13.121 MiB, 98.90% compilation time)
Running: hermite_quadrature with k=2
 11.522002 seconds (20.10 M allocations: 1.056 GiB, 10.73% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.349155 seconds (456.36 k allocations: 49.425 MiB, 8.68% gc time, 83.59% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.208244 seconds (276.26 k allocations: 15.239 MiB, 16.65% gc time, 98.32% compilation time)
Running: legendre_quadrature
  0.127488 seconds (191.98 k allocations: 11.070 MiB, 98.25% compilation time)
Running: lobatto_quadrature
  0.186179 seconds (217.43 k allocations: 37.194 MiB, 11.88% gc time, 85.94% compilation time)
Running: radau_quadrature
  0.160227 seconds (214.01 k allocations: 29.857 MiB, 87.97% compilation time)
Running: rectangle_rule_left
  0.022316 seconds (21.73 k allocations: 1.293 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.021885 seconds (26.47 k allocations: 1.642 MiB, 99.33% compilation time)
Running: rectangle_rule_right
  0.019254 seconds (18.50 k allocations: 1.117 MiB, 99.27% compilation time)
Running: rombergs_method
  0.092440 seconds (136.74 k allocations: 7.809 MiB, 97.63% compilation time)
Running: simpsons_rule
  0.029304 seconds (39.38 k allocations: 2.061 MiB, 98.62% compilation time)
Running: simpsons38_rule
  0.053768 seconds (57.34 k allocations: 3.063 MiB, 40.60% gc time, 99.25% compilation time)
Running: trapezoidal_rule
  0.020040 seconds (30.13 k allocations: 1.697 MiB, 98.69% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034899 seconds (59.92 k allocations: 2.280 MiB, 97.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.163755 seconds (232.72 k allocations: 12.824 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.168169 seconds (285.38 k allocations: 15.643 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.139551 seconds (236.87 k allocations: 12.928 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.239911 seconds (236.87 k allocations: 12.929 MiB, 9.70% gc time, 99.08% compilation time)
Running: hermite_quadrature with k=2
  0.140804 seconds (170.78 k allocations: 9.790 MiB, 98.00% compilation time)
Running: jacobi_quadrature with α=β=1
  5.995424 seconds (449.62 k allocations: 1.175 GiB, 13.29% gc time, 5.91% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.193099 seconds (271.55 k allocations: 15.064 MiB, 6.71% gc time, 98.31% compilation time)
Running: legendre_quadrature
  0.136056 seconds (187.55 k allocations: 10.817 MiB, 98.22% compilation time)
Running: lobatto_quadrature
  0.157071 seconds (208.18 k allocations: 22.921 MiB, 89.97% compilation time)
Running: radau_quadrature
  0.150061 seconds (207.34 k allocations: 20.868 MiB, 91.60% compilation time)
Running: rectangle_rule_left
  0.038944 seconds (19.52 k allocations: 1.188 MiB, 44.15% gc time, 99.62% compilation time)
Running: rectangle_rule_midpoint
  0.019863 seconds (25.36 k allocations: 1.591 MiB, 99.27% compilation time)
Running: rectangle_rule_right
  0.018872 seconds (17.36 k allocations: 1.062 MiB, 99.27% compilation time)
Running: rombergs_method
  0.110340 seconds (132.58 k allocations: 7.622 MiB, 97.89% compilation time)
Running: simpsons_rule
  0.026694 seconds (31.90 k allocations: 1.853 MiB, 98.98% compilation time)
Running: simpsons38_rule
  0.041814 seconds (48.16 k allocations: 2.821 MiB, 99.08% compilation time)
Running: trapezoidal_rule
  0.022444 seconds (25.05 k allocations: 1.535 MiB, 98.90% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028241 seconds (30.87 k allocations: 1.877 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.143465 seconds (231.10 k allocations: 13.042 MiB, 98.09% compilation time)
Running: chebyshev_quadrature with k=2
  0.222541 seconds (283.67 k allocations: 15.986 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.221892 seconds (235.25 k allocations: 13.146 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.170343 seconds (235.25 k allocations: 12.971 MiB, 11.49% gc time, 98.67% compilation time)
Running: jacobi_quadrature with α=β=1
  1.478945 seconds (447.72 k allocations: 194.260 MiB, 8.78% gc time, 33.24% compilation time)
Running: legendre_quadrature
  0.124247 seconds (185.93 k allocations: 10.749 MiB, 98.12% compilation time)
Running: lobatto_quadrature
  0.138987 seconds (197.26 k allocations: 11.508 MiB, 98.21% compilation time)
Running: radau_quadrature
  0.135789 seconds (197.26 k allocations: 11.451 MiB, 98.22% compilation time)
Running: rectangle_rule_left
  0.353801 seconds (19.34 k allocations: 1.173 MiB, 7.76% compilation time)
Running: rectangle_rule_midpoint
  0.017361 seconds (25.01 k allocations: 1.573 MiB, 99.14% compilation time)
Running: rectangle_rule_right
  0.161851 seconds (17.73 k allocations: 1.081 MiB, 11.93% compilation time)
Running: rombergs_method
  0.125497 seconds (145.02 k allocations: 8.483 MiB, 97.07% compilation time)
Running: simpsons_rule
  0.022994 seconds (28.23 k allocations: 1.758 MiB, 98.88% compilation time)
Running: simpsons38_rule
  0.023618 seconds (43.08 k allocations: 2.708 MiB, 99.15% compilation time)
Running: trapezoidal_rule
  0.018923 seconds (45.03 k allocations: 1.805 MiB, 96.45% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.024146 seconds (31.64 k allocations: 1.826 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=1
  0.178371 seconds (231.69 k allocations: 12.988 MiB, 15.66% gc time, 98.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.164310 seconds (284.30 k allocations: 15.892 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=3
  0.141964 seconds (235.84 k allocations: 13.071 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.138819 seconds (235.84 k allocations: 13.142 MiB, 98.17% compilation time)
Running: jacobi_quadrature with α=β=1
  0.881344 seconds (448.44 k allocations: 149.002 MiB, 5.34% gc time, 39.63% compilation time)
Running: legendre_quadrature
  0.142458 seconds (186.53 k allocations: 10.750 MiB, 9.69% gc time, 98.46% compilation time)
Running: lobatto_quadrature
  0.159795 seconds (197.86 k allocations: 11.468 MiB, 98.48% compilation time)
Running: radau_quadrature
  0.170318 seconds (197.85 k allocations: 11.462 MiB, 98.63% compilation time)
Running: rectangle_rule_left
  0.689945 seconds (19.59 k allocations: 1.186 MiB, 3.46% compilation time)
Running: rectangle_rule_midpoint
  0.019523 seconds (25.01 k allocations: 1.574 MiB, 98.96% compilation time)
Running: rectangle_rule_right
  0.716929 seconds (17.69 k allocations: 1.078 MiB, 2.99% compilation time)
Running: rombergs_method
  0.104310 seconds (135.49 k allocations: 7.815 MiB, 96.60% compilation time)
Running: simpsons_rule
  0.022828 seconds (28.93 k allocations: 1.785 MiB, 99.14% compilation time)
Running: simpsons38_rule
  0.025631 seconds (43.78 k allocations: 2.734 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.021271 seconds (57.27 k allocations: 2.006 MiB, 96.65% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.158243 seconds (146.68 k allocations: 8.788 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.139048 seconds (69.93 k allocations: 2.205 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.127563 seconds (105.09 k allocations: 2.868 MiB, 97.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.144735 seconds (92.57 k allocations: 2.654 MiB, 97.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.135499 seconds (72.10 k allocations: 2.248 MiB, 98.53% compilation time)
Running: jacobi_quadrature with α=β=1
  1.484547 seconds (480.56 k allocations: 167.790 MiB, 11.31% gc time, 28.46% compilation time)
Running: legendre_quadrature
  0.110003 seconds (18.73 k allocations: 1.095 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000039 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 24.288930 seconds (590.00 M allocations: 8.792 GiB, 6.31% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.566120 seconds (592.75 M allocations: 8.833 GiB, 6.53% gc time)
Running: rombergs_method
  0.105702 seconds (20.51 k allocations: 1.165 MiB, 99.57% compilation time)
Running: simpsons_rule
  0.000017 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024217 seconds (463 allocations: 22.578 KiB, 99.53% compilation time)
Running: trapezoidal_rule
  0.020533 seconds (179 allocations: 8.766 KiB, 99.40% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.807519 seconds (629.32 M allocations: 9.387 GiB, 5.07% gc time, 0.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.376930 seconds (414.01 k allocations: 22.953 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
 17.818643 seconds (468.65 k allocations: 4.040 GiB, 2.40% gc time, 2.20% compilation time)
Running: chebyshev_quadrature with k=3
  8.222125 seconds (249.12 k allocations: 1.642 GiB, 3.35% gc time, 2.25% compilation time)
Running: chebyshev_quadrature with k=4
 11.002691 seconds (249.12 k allocations: 2.260 GiB, 2.05% gc time, 1.46% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.333907 seconds (484.51 k allocations: 13.254 GiB, 7.61% gc time, 1.36% compilation time)
Running: legendre_quadrature.
  9.685452 seconds (223.27 k allocations: 1.976 GiB, 1.30% gc time, 3.46% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.546425 seconds (8.23 M allocations: 13.383 GiB, 7.51% gc time, 0.65% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.876808 seconds (7.23 M allocations: 13.369 GiB, 6.61% gc time, 0.70% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.858868 seconds (22.25 k allocations: 1.347 MiB, 0.15% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.585366 seconds (30.45 k allocations: 1.884 MiB, 0.21% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.464471 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.843083 seconds (438.11 k allocations: 152.666 MiB, 2.10% gc time, 9.89% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.592430 seconds (600.04 M allocations: 8.943 GiB, 5.59% gc time, 0.12% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.398282 seconds (600.05 M allocations: 8.943 GiB, 5.63% gc time, 0.16% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.747930 seconds (600.03 M allocations: 8.943 GiB, 5.65% gc time, 0.15% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.040745 seconds (180.45 k allocations: 4.404 MiB, 85.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.171153 seconds (247.70 k allocations: 13.449 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.171745 seconds (272.34 k allocations: 14.525 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.160000 seconds (220.25 k allocations: 11.631 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.153453 seconds (220.25 k allocations: 11.658 MiB, 99.08% compilation time)
Running: jacobi_quadrature with α=β=1
  0.309336 seconds (389.30 k allocations: 34.995 MiB, 92.77% compilation time)
Running: laguerre_quadrature with k=2
  0.207453 seconds (180.54 k allocations: 10.477 MiB, 82.60% compilation time)
Running: legendre_quadrature
  0.108478 seconds (145.99 k allocations: 8.082 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.017980 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017570 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.041551 seconds (18.88 k allocations: 1.121 MiB, 59.58% compilation time)
Running: rectangle_rule_midpoint
  0.036108 seconds (25.48 k allocations: 1.576 MiB, 67.94% compilation time)
Running: rectangle_rule_right
  0.037880 seconds (17.48 k allocations: 1.049 MiB, 56.79% compilation time)
Running: rombergs_method
  0.220562 seconds (172.16 k allocations: 9.863 MiB, 98.71% compilation time)
Running: simpsons_rule
  0.000942 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.158388 seconds (78.86 k allocations: 3.384 MiB, 75.40% gc time, 99.36% compilation time)
Running: trapezoidal_rule
  0.093026 seconds (2.39 M allocations: 37.691 MiB, 33.21% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001172 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.114194 seconds (2.46 k allocations: 1.691 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.118103 seconds (2.71 k allocations: 2.355 MiB, 96.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.112213 seconds (2.31 k allocations: 2.028 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.103069 seconds (2.31 k allocations: 1.469 MiB, 97.79% compilation time)
Running: jacobi_quadrature with α=β=1
  5.164929 seconds (366.38 k allocations: 904.821 MiB, 7.67% gc time, 6.27% compilation time)
Running: legendre_quadrature
  0.074019 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000164 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000114 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.791663 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000374 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.759573 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065950 seconds (997 allocations: 56.672 KiB, 99.32% compilation time)
Running: simpsons_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000593 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000253 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.101537 seconds (2.53 k allocations: 579.203 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.099305 seconds (2.79 k allocations: 780.188 KiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.097834 seconds (2.39 k allocations: 661.047 KiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.087898 seconds (2.39 k allocations: 491.547 KiB, 99.34% compilation time)
Running: jacobi_quadrature with α=β=1
  2.324177 seconds (372.94 k allocations: 252.986 MiB, 7.42% gc time, 21.88% compilation time)
Running: legendre_quadrature
  0.107792 seconds (1.32 k allocations: 67.859 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000211 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000058 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.353261 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000134 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.358808 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.069906 seconds (1.21 k allocations: 64.938 KiB, 99.58% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000280 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
