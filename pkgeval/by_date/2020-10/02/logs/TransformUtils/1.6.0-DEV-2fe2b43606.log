Julia Version 1.6.0-DEV.1101
Commit 2fe2b43606 (2020-10-01 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ylTfHB/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ylTfHB/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.17462876446453046 0.052585507331094954; -0.17462876446453046 0.0 -0.19733067243800922; -0.052585507331094954 0.19733067243800922 0.0])
dAA = so3([0.0 -0.2080525560940848 -0.02960469008455152; 0.2080525560940848 0.0 0.01173375651354168; 0.02960469008455152 -0.01173375651354168 0.0])
dAA = so3([0.0 -0.03153381640535894 -0.08199913662192268; 0.03153381640535894 0.0 0.23766016653035815; 0.08199913662192268 -0.23766016653035815 0.0])
dAA = Quaternion(0.9965612840886001, [-0.02279866312007985, 0.06076610326618129, -0.05151027770709166])
dAA = SO3([0.9943167792971174 0.09913191487662812 0.03882017337803575; -0.10021615222289768 0.9945978287367309 0.027053315985618515; -0.03592861313556094 -0.03078997442469993 0.9988799288368356])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8651477853250011 -0.4953988681903993 -0.07809782930989241; 0.4975203238018988 0.8674036225338301 0.00919146447758587; 0.06318889895622111 -0.04680723246315992 0.996903328331208]), [1.9733067243800921, 0.5258550733109495, -1.7462876446453044])
xj = SE3(SO3([0.9215047271845708 0.23913089564440357 0.30601544491217275; -0.2773240233444746 0.9567893781793657 0.0874383890472371; -0.2718831069642301 -0.1654403232330258 0.9480026769983453]), [-2.3766016653035815, -0.8199913662192267, 0.3153381640535894])
Dx = SE3(SO3([0.6420834418239961 0.6724517341434988 0.36815420543958444; -0.6843381655535119 0.7192012012514271 -0.12012871132813552; -0.34555770705094235 -0.17480931715988554 0.9219715688305088]), [-4.302627701172746, 0.8910486174786632, 2.382589733655403])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
