Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_soIc3W/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_soIc3W/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.11204539056599493 -0.17317587556835462; -0.11204539056599493 0.0 0.03068826783371084; 0.17317587556835462 -0.03068826783371084 0.0])
dAA = so3([0.0 0.12174780679076809 -0.18627729202911586; -0.12174780679076809 0.0 -0.03655505919071131; 0.18627729202911586 0.03655505919071131 0.0])
dAA = so3([0.0 0.08520652349556047 -0.06038359083786472; -0.08520652349556047 0.0 -0.06990948834849763; 0.06038359083786472 0.06990948834849763 0.0])
dAA = Quaternion(0.9935919701102424, [0.032694458918898335, 0.1039248750761876, 0.03009467774950651])
dAA = SO3([0.978517527741502 -0.12044506535447026 0.1673213499061502; 0.11423965202874083 0.9923753337928404 0.046265524787912404; -0.1716180346205234 -0.026156894144873433 0.9848162605692915])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8493005684664741 0.26777765304592743 -0.45495458337260314; -0.3092208226940701 0.9508272283622381 -0.01760865177652087; 0.4278680020928492 0.15563646852264168 0.8903405317353997]), [-0.3068826783371084, -1.731758755683546, -1.1204539056599492])
xj = SE3(SO3([0.8568635131427711 -0.11547045861211848 0.5024455125011418; 0.20670798422478642 0.9697750607214424 -0.12964621421564188; -0.472288819582206 0.21494860965037596 0.854833531225242]), [0.6990948834849763, -0.6038359083786472, -0.8520652349556047])
Dx = SE3(SO3([0.46173898222548554 -0.3059741360810908 0.8325724835369004; 0.3524871162483568 0.9246219672371365 0.1443158015653341; -0.8139717103022007 0.22683484245582197 0.5347859469692078]), [0.6204350086595786, 1.3836091301308535, -0.23857799138326452])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
