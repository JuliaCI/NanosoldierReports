Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Pf4ZJ8/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Pf4ZJ8/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.12152121914637959 0.16100914261275395; -0.12152121914637959 0.0 0.0028988645956271827; -0.16100914261275395 -0.0028988645956271827 0.0])
dAA = so3([0.0 0.026307383370278294 -0.016398015740309416; -0.026307383370278294 0.0 -0.10535164628272115; 0.016398015740309416 0.10535164628272115 0.0])
dAA = so3([0.0 0.029766872222282182 0.03263986204877303; -0.029766872222282182 0.0 -0.03456803509143714; -0.03263986204877303 0.03456803509143714 0.0])
dAA = Quaternion(0.9937103385222265, [0.09522703512263656, -0.04112871976952982, 0.0421900853982752])
dAA = SO3([0.9962131020652848 -0.08693746372494963 -0.0011544152354037093; 0.08662996758328913 0.9936439983254363 -0.07188082712628487; 0.007396214571045107 0.07150861481607403 0.9974125595846012])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9970157737497297 0.05958056050408172 -0.049088732966406444; -0.07031014805990221 0.9633838391963316 -0.25874323460746024; 0.031875225081908556 0.2614225223376059 0.9646980018848498]), [-0.028988645956271826, 1.6100914261275394, -1.2152121914637959])
xj = SE3(SO3([0.9576073632620649 -0.2327495168613295 -0.16975217296722164; 0.12999462041677307 0.8749833578502537 -0.46637487298073216; 0.2570788526677659 0.4245371431169629 0.868146691305745]), [0.3456803509143714, 0.32639862048773033, -0.2976687222228218])
Dx = SE3(SO3([0.953804151515256 -0.28004293209129233 -0.10878233651643429; 0.24949570204203547 0.9400610506266607 -0.23245884744885736; 0.16736049478540252 0.19457948833423086 0.9665036407095288]), [0.493054435647477, -0.9744993865255618, 1.1989071538546565])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
