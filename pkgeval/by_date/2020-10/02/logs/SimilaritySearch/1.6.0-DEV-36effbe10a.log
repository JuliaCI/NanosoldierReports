Julia Version 1.6.0-DEV.1117
Commit 36effbe10a (2020-10-02 17:38 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_MLaQw0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_MLaQw0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(15, 0.030608773f0), Item(28, 0.062479377f0), Item(2, 0.078877926f0), Item(38, 0.10689044f0)])
Vsorted = Item[Item(15, 0.030608773f0), Item(28, 0.062479377f0), Item(2, 0.078877926f0), Item(38, 0.10689044f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004015604654947917, 0.0039954026540120445, 301.0, 48.15728701464832))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038640737533569337, 0.0039020617802937823, 301.0, 70.24483036994934))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037618001302083333, 0.0036939700444539388, 301.0, 39.53462028503418))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037617921829223634, 0.0034844636917114257, 301.0, 8.513977008871734))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003524931271870931, 0.004761107762654622, 301.0, 43.70762379281223))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.7217140197753905e-5, 2.392927805582682e-5, 301.0, 174.074435852468))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.591378529866536e-5, 0.008308831850687664, 300.0, 25.031483341008425)
p = PerformanceResult(1.0, 1.0, 1.0, 3.20275624593099e-5, 1.9637743631998696e-5, 300.0, 25.031483341008425)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0033843358357747394, 0.0032405932744344074, 300.0, 1.28620909187066)
p = PerformanceResult(1.0, 1.0, 1.0, 2.5987625122070312e-5, 1.4336903889973958e-5, 300.0, 1.28620909187066)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.591378529866536e-5, 0.008308831850687664, 300.0, 25.031483341008425), PerformanceResult(1.0, 1.0, 1.0, 3.20275624593099e-5, 1.9637743631998696e-5, 300.0, 25.031483341008425), PerformanceResult(1.0, 1.0, 1.0, 0.0033843358357747394, 0.0032405932744344074, 300.0, 1.28620909187066), PerformanceResult(1.0, 1.0, 1.0, 2.5987625122070312e-5, 1.4336903889973958e-5, 300.0, 1.28620909187066))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007120649019877116, 0.003270530700683594, 347.3, 28689.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007154981295267741, 0.00446773370107015, 303.3333333333333, 6937.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7515818277994792e-5, 8.400281270345052e-6, 96.9, 48.08968694321811))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.796881357828776e-5, 9.965896606445312e-6, 87.03333333333333, 70.19391691684723))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7730394999186196e-5, 9.671847025553386e-6, 90.46666666666667, 39.447683215141296))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.43481699625651e-5, 6.476243336995443e-5, 96.96666666666667, 43.62333775870502))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.82, 0.82, 0.82, 1.9335746765136717e-5, 2.529621124267578e-5, 70.7, 182.6897679194808))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-02T20:00:19.197
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9007777777777777, 0.8839999999999998, 0.8899517543859646, 1.5413761138916017e-5, 1.5599727630615236e-5, 153.15, 48.566973793902434))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.540660858154297e-5, 1.2569427490234375e-5, 156.93, 0.0))
*** advance 1 from 1000; 2020-10-02T20:00:20.155
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9092857142857145, 0.9020000000000001, 0.9042436974789918, 1.4107227325439454e-5, 1.3680458068847657e-5, 152.21, 73.6358624715358))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5854835510253906e-5, 1.001119613647461e-5, 155.92, 0.0))
*** advance 1 from 1000; 2020-10-02T20:00:20.699
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9187500000000002, 0.9010000000000001, 0.9067063492063493, 1.4588832855224609e-5, 2.061128616333008e-5, 154.92, 39.199325224384665))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.559257507324219e-5, 1.5170574188232422e-5, 158.82, 0.0))
*** advance 1 from 1000; 2020-10-02T20:00:21.369
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9205, 0.9069999999999999, 0.9121666666666667, 4.0471553802490234e-5, 0.00022217988967895507, 153.55, 43.69225873646792))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.927635192871094e-5, 0.00022932052612304688, 157.33, 0.0))
*** advance 1 from 1000; 2020-10-02T20:00:21.750
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8850000000000005, 0.8790000000000003, 0.880714285714286, 2.4559497833251954e-5, 7.506132125854492e-5, 151.86, 196.50104789016768))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.460479736328125e-5, 7.740020751953125e-5, 155.36, 0.0))
*** advance 1 from 1000; 2020-10-02T20:00:22.467
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9007777777777777, 0.8839999999999998, 0.8899517543859646, 1.9767284393310546e-5, 4.589080810546875e-5, 153.15, 48.575987532851286))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.947164535522461e-5, 4.7760009765625e-5, 156.93, 0.017320910294074565))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:24.008
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7669999999999999, 0.7669999999999999, 0.767, 0.0014667320251464844, 6.916999816894531e-5, 199.78, 191.60000191628933))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:24.807
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7759999999999998, 0.7759999999999998, 0.7759999999999998, 0.0013338160514831544, 6.413936614990234e-5, 202.07, 108.74127229303122))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:25.464
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.622, 0.622, 0.622, 0.0013736510276794434, 6.0529708862304686e-5, 240.4, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:26.176
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9690000000000002, 0.9690000000000002, 0.9690000000000002, 0.0014316225051879882, 1.2478828430175782e-5, 225.6, 592.800021007657))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:27.084
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5780000000000001, 0.5780000000000001, 0.5780000000000001, 0.001464869976043701, 0.00032460927963256836, 248.77, 2346.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:27.869
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.408, 0.408, 0.408, 0.0014816975593566894, 0.0003316307067871094, 242.06, 3654.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:00:28.676
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.586, 0.586, 0.586, 0.0013795900344848633, 1.9140243530273438e-5, 242.62, 2375.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.072625698324022, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9581101190476194,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.390625,"distances_sum":732.0446069091558}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0607734806629834, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9646577380952385,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.484375,"distances_sum":743.8670025318861}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.072625698324022,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9581101190476194,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.390625,"distances_sum":732.0446069091558}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0796626054358014, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9544642857142864,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.3359375,"distances_sum":722.3372789472342}, best_list's length: 7, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0929791271347247, conf: {"restarts":2}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9469494047619054,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.234375,"distances_sum":710.1732160896063}, best_list's length: 8, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0929791271347247,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9469494047619054,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.234375,"distances_sum":710.1732160896063}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0929791271347247,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9469494047619054,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.234375,"distances_sum":710.1732160896063}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0929791271347247,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9469494047619054,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.234375,"distances_sum":710.1732160896063}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8871527777777767, conf: {"restarts":6}, perf: {"precision":0.8871527777777767,"recall":0.8871527777777767,"f1":0.8871527777777767,"seconds":1.946091651916504e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":46.953125,"distances_sum":285.5418062079698}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8871527777777767,"state":{"restarts":6},"perf":{"precision":0.8871527777777767,"recall":0.8871527777777767,"f1":0.8871527777777767,"seconds":1.946091651916504e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":46.953125,"distances_sum":285.5418062079698}}, beam: 3, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.771564378582413, conf: {"restarts":10}, perf: {"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.4648383259773254e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":55.8828125,"distances_sum":284.42397971637547}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999989, conf: {"restarts":11}, perf: {"precision":0.8984374999999989,"recall":0.8984374999999989,"f1":0.8984374999999989,"seconds":2.2193416953086853e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":56.953125,"distances_sum":284.7761306334287}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.771564378582413,"state":{"restarts":10},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.4648383259773254e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":55.8828125,"distances_sum":284.42397971637547}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.771564378582413,"state":{"restarts":10},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.4648383259773254e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":55.8828125,"distances_sum":284.42397971637547}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.771564378582413,"state":{"restarts":10},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.4648383259773254e-5,"exhaustive_search_seconds":6.2193721532821655e-6,"evaluations":55.8828125,"distances_sum":284.42397971637547}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555542,"state":{"restarts":10},"perf":{"precision":0.8602430555555542,"recall":0.8602430555555542,"f1":0.8602430555555542,"seconds":3.9171427488327026e-5,"exhaustive_search_seconds":2.2444874048233032e-5,"evaluations":126.9296875,"distances_sum":127.5787698882632}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555542,"state":{"restarts":10},"perf":{"precision":0.8602430555555542,"recall":0.8602430555555542,"f1":0.8602430555555542,"seconds":3.9171427488327026e-5,"exhaustive_search_seconds":2.2444874048233032e-5,"evaluations":126.9296875,"distances_sum":127.5787698882632}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444434, conf: {"restarts":20}, perf: {"precision":0.8663194444444434,"recall":0.8663194444444434,"f1":0.8663194444444434,"seconds":9.690225124359131e-5,"exhaustive_search_seconds":0.00020942091941833496,"evaluations":294.2109375,"distances_sum":57.32956115738489}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444434,"state":{"restarts":20},"perf":{"precision":0.8663194444444434,"recall":0.8663194444444434,"f1":0.8663194444444434,"seconds":9.690225124359131e-5,"exhaustive_search_seconds":0.00020942091941833496,"evaluations":294.2109375,"distances_sum":57.32956115738489}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8663194444444434,"state":{"restarts":20},"perf":{"precision":0.8663194444444434,"recall":0.8663194444444434,"f1":0.8663194444444434,"seconds":9.690225124359131e-5,"exhaustive_search_seconds":0.00020942091941833496,"evaluations":294.2109375,"distances_sum":57.32956115738489}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(20), SatNeighborhood(32), 2020-10-02T20:00:34.491
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2330, 0.032029837f0), Item(4520, 0.035178613f0), Item(9400, 0.039408755f0), Item(561, 0.045854855f0), Item(3496, 0.047162917f0), Item(4208, 0.04780091f0), Item(2095, 0.04930342f0), Item(9631, 0.0553754f0), Item(5736, 0.058297146f0), Item(5497, 0.061063737f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.070631970260223, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9547910422910425,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.40625,"distances_sum":730.4089617580175}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0472727272727274, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9689019314019318,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.59375,"distances_sum":756.8847526758909}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0313339301700983, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.978781114718615,"seconds":3.9655715227127075e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7265625,"distances_sum":769.2920809239149}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.070631970260223,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9547910422910425,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.40625,"distances_sum":730.4089617580175}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.070631970260223,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9547910422910425,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.40625,"distances_sum":730.4089617580175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.070631970260223,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9547910422910425,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.40625,"distances_sum":730.4089617580175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.59672131147541, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.2133270502090454e-5,"exhaustive_search_seconds":4.913657903671265e-6,"evaluations":38.125,"distances_sum":289.2175762653351}, best_list's length: 4, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.0824616881537334, conf: {"bsize":2}, perf: {"precision":0.9331597222222212,"recall":0.9331597222222212,"f1":0.9331597222222212,"seconds":9.747222065925598e-6,"exhaustive_search_seconds":4.913657903671265e-6,"evaluations":32.1171875,"distances_sum":293.1230343133211}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.0824616881537334,"state":{"bsize":2},"perf":{"precision":0.9331597222222212,"recall":0.9331597222222212,"f1":0.9331597222222212,"seconds":9.747222065925598e-6,"exhaustive_search_seconds":4.913657903671265e-6,"evaluations":32.1171875,"distances_sum":293.1230343133211}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.0824616881537334,"state":{"bsize":2},"perf":{"precision":0.9331597222222212,"recall":0.9331597222222212,"f1":0.9331597222222212,"seconds":9.747222065925598e-6,"exhaustive_search_seconds":4.913657903671265e-6,"evaluations":32.1171875,"distances_sum":293.1230343133211}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.0824616881537334,"state":{"bsize":2},"perf":{"precision":0.9331597222222212,"recall":0.9331597222222212,"f1":0.9331597222222212,"seconds":9.747222065925598e-6,"exhaustive_search_seconds":4.913657903671265e-6,"evaluations":32.1171875,"distances_sum":293.1230343133211}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.83855675533316,"state":{"bsize":2},"perf":{"precision":0.9470486111111103,"recall":0.9470486111111103,"f1":0.9470486111111103,"seconds":1.8551945686340332e-5,"exhaustive_search_seconds":1.981109380722046e-5,"evaluations":59.328125,"distances_sum":120.21206246875226}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.83855675533316,"state":{"bsize":2},"perf":{"precision":0.9470486111111103,"recall":0.9470486111111103,"f1":0.9470486111111103,"seconds":1.8551945686340332e-5,"exhaustive_search_seconds":1.981109380722046e-5,"evaluations":59.328125,"distances_sum":120.21206246875226}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.98692240627724, conf: {"bsize":8}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.345551133155823e-5,"exhaustive_search_seconds":0.00018553994596004486,"evaluations":107.53125,"distances_sum":54.715926157310605}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 102.43223965763195, conf: {"bsize":5}, perf: {"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":3.431178629398346e-5,"exhaustive_search_seconds":0.00018553994596004486,"evaluations":98.578125,"distances_sum":54.7340008597821}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":102.43223965763195,"state":{"bsize":5},"perf":{"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":3.431178629398346e-5,"exhaustive_search_seconds":0.00018553994596004486,"evaluations":98.578125,"distances_sum":54.7340008597821}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":102.43223965763195,"state":{"bsize":5},"perf":{"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":3.431178629398346e-5,"exhaustive_search_seconds":0.00018553994596004486,"evaluations":98.578125,"distances_sum":54.7340008597821}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":102.43223965763195,"state":{"bsize":5},"perf":{"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":3.431178629398346e-5,"exhaustive_search_seconds":0.00018553994596004486,"evaluations":98.578125,"distances_sum":54.7340008597821}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-10-02T20:00:37.608
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5413, 0.019672675f0), Item(8021, 0.023660475f0), Item(4149, 0.04434296f0), Item(8215, 0.044432636f0), Item(5340, 0.045228455f0), Item(6084, 0.048086595f0), Item(6493, 0.050276387f0), Item(5940, 0.055340014f0), Item(4417, 0.060607724f0), Item(8191, 0.061411884f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
