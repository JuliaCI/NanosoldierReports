Julia Version 1.6.0-DEV.1109
Commit d5a83678c5 (2020-10-02 08:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_2rYmi0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_2rYmi0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(21, 0.0015773773f0), Item(17, 0.06516647f0), Item(11, 0.08210933f0), Item(13, 0.085165024f0)])
Vsorted = Item[Item(21, 0.0015773773f0), Item(17, 0.06516647f0), Item(11, 0.08210933f0), Item(13, 0.085165024f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037266016006469727, 0.003966403007507324, 301.0, 51.05731167085469))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035239060719807944, 0.0034759044647216797, 301.0, 73.71314823627472))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038355191548665366, 0.0034017006556193033, 301.0, 41.828131794929504))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003542343775431315, 0.0034124374389648436, 301.0, 9.704633072891738))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003074494997660319, 0.004759764671325684, 301.0, 46.39560277201235))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.5381317138671876e-5, 2.482732137044271e-5, 301.0, 179.6072518453002))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.174146016438802e-5, 0.008542132377624512, 300.0, 27.643010671250522)
p = PerformanceResult(1.0, 1.0, 1.0, 3.151098887125651e-5, 1.9367535909016927e-5, 300.0, 27.643010671250522)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003921310106913249, 0.002928900718688965, 300.0, 1.529228273393528)
p = PerformanceResult(1.0, 1.0, 1.0, 2.7579731411404083e-5, 1.479784647623698e-5, 300.0, 1.529228273393528)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.174146016438802e-5, 0.008542132377624512, 300.0, 27.643010671250522), PerformanceResult(1.0, 1.0, 1.0, 3.151098887125651e-5, 1.9367535909016927e-5, 300.0, 27.643010671250522), PerformanceResult(1.0, 1.0, 1.0, 0.003921310106913249, 0.002928900718688965, 300.0, 1.529228273393528), PerformanceResult(1.0, 1.0, 1.0, 2.7579731411404083e-5, 1.479784647623698e-5, 300.0, 1.529228273393528))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007919088999430338, 0.003778735796610514, 348.1666666666667, 28599.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006250333786010742, 0.0027091344197591144, 303.06666666666666, 6893.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8246968587239583e-5, 8.368492126464844e-6, 98.76666666666667, 51.101684430614114))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.621246337890625e-5, 8.535385131835937e-6, 88.4, 73.79482412338257))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.735687255859375e-5, 9.298324584960938e-6, 91.96666666666667, 41.84481978416443))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.6575724283854167e-5, 5.1705042521158856e-5, 99.46666666666667, 46.430621134117246))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7933333333333334, 0.7933333333333334, 0.7933333333333334, 1.1523564656575521e-5, 1.4098485310872396e-5, 72.76666666666667, 192.84175961464643))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-02T20:43:13.318
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9070000000000004, 0.9070000000000004, 0.9070000000000004, 1.519918441772461e-5, 1.5299320220947266e-5, 151.89, 51.48459095531143))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4634132385253907e-5, 1.146078109741211e-5, 155.44, 0.0))
*** advance 1 from 1000; 2020-10-02T20:43:13.846
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9139999999999999, 0.9139999999999999, 0.9139999999999999, 1.5058517456054687e-5, 1.3420581817626953e-5, 152.5, 75.77873131632805))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.35040283203125e-5, 9.698867797851562e-6, 155.97, 0.0))
*** advance 1 from 1000; 2020-10-02T20:43:14.412
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8959999999999998, 0.8939999999999998, 0.8947499999999998, 9.908676147460938e-6, 1.2841224670410156e-5, 152.44, 41.941645831801))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6107559204101563e-5, 1.67393684387207e-5, 155.96, 0.0))
*** advance 1 from 1000; 2020-10-02T20:43:14.929
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9134444444444445, 0.912, 0.9126842105263158, 4.651308059692383e-5, 0.00019392967224121093, 152.23, 46.60555291653145))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.6420822143554685e-5, 0.00021157026290893554, 155.6, 0.0))
*** advance 1 from 1000; 2020-10-02T20:43:15.194
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8699999999999993, 0.8699999999999993, 0.8699999999999993, 2.254962921142578e-5, 5.733013153076172e-5, 151.63, 201.5912014390342))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.2640228271484374e-5, 6.276130676269531e-5, 155.1, 0.0))
*** advance 1 from 1000; 2020-10-02T20:43:15.917
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9070000000000004, 0.9070000000000004, 0.9070000000000004, 1.226186752319336e-5, 2.705097198486328e-5, 151.89, 51.49628968699835))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2581348419189454e-5, 2.6581287384033202e-5, 155.44, 0.012799164047464728))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:17.200
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.773, 0.773, 0.773, 0.001280813217163086, 5.077838897705078e-5, 203.81, 191.95000207424164))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:17.820
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.755, 0.755, 0.755, 0.001304450035095215, 6.064176559448242e-5, 206.6, 110.03730384260416))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:18.429
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.657, 0.657, 0.657, 0.0012571573257446288, 5.951881408691406e-5, 254.89, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:18.992
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9660000000000002, 0.9620000000000002, 0.963777777777778, 0.0008775067329406739, 7.469654083251953e-6, 223.89, 595.4000205993652))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:19.564
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.605, 0.605, 0.605, 0.0010441231727600097, 0.00021078824996948243, 262.34, 2325.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:20.080
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3779999999999999, 0.3779999999999999, 0.3779999999999999, 0.0017699146270751954, 0.0003119993209838867, 247.78, 3676.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T20:43:20.800
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6249999999999997, 0.6249999999999997, 0.6249999999999997, 0.0014319109916687011, 1.4030933380126953e-5, 252.33, 2329.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.091943127962085, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9469207875457881,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2421875,"distances_sum":622.9943789727986}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0463215258855585, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9730654761904766,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.6015625,"distances_sum":657.2011445350945}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.044424297370807, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9739583333333337,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.6171875,"distances_sum":656.2531866319478}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9469207875457881,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2421875,"distances_sum":622.9943789727986}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9469207875457881,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2421875,"distances_sum":622.9943789727986}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9469207875457881,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.2421875,"distances_sum":622.9943789727986}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8862847222222212, conf: {"restarts":8}, perf: {"precision":0.8862847222222212,"recall":0.8862847222222212,"f1":0.8862847222222212,"seconds":1.0473653674125671e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":48.7421875,"distances_sum":299.3913161754608}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8993055555555545, conf: {"restarts":10}, perf: {"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":1.6566365957260132e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":52.953125,"distances_sum":297.2768140435219}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8993055555555545,"state":{"restarts":10},"perf":{"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":1.6566365957260132e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":52.953125,"distances_sum":297.2768140435219}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.730202075368651, conf: {"restarts":12}, perf: {"precision":0.9071180555555544,"recall":0.9071180555555544,"f1":0.9071180555555544,"seconds":1.8680468201637268e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":57.21875,"distances_sum":296.2781742364168}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6717678100263855, conf: {"restarts":14}, perf: {"precision":0.9036458333333325,"recall":0.9036458333333325,"f1":0.9036458333333325,"seconds":1.9293278455734253e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":59.21875,"distances_sum":296.7006158679724}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6414507772020723, conf: {"restarts":15}, perf: {"precision":0.904513888888888,"recall":0.904513888888888,"f1":0.904513888888888,"seconds":1.9719824194908142e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":60.3125,"distances_sum":297.91538348048925}, best_list's length: 8, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8993055555555546, conf: {"restarts":13}, perf: {"precision":0.8993055555555546,"recall":0.8993055555555546,"f1":0.8993055555555546,"seconds":1.4767050743103027e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":57.2109375,"distances_sum":298.12824169546366}, best_list's length: 12, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.730202075368651,"state":{"restarts":12},"perf":{"precision":0.9071180555555544,"recall":0.9071180555555544,"f1":0.9071180555555544,"seconds":1.8680468201637268e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":57.21875,"distances_sum":296.2781742364168}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.790336253178864, conf: {"restarts":11}, perf: {"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.6668811440467834e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":55.296875,"distances_sum":298.27622575312853}, best_list's length: 9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.790336253178864,"state":{"restarts":11},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.6668811440467834e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":55.296875,"distances_sum":298.27622575312853}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.790336253178864,"state":{"restarts":11},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.6668811440467834e-5,"exhaustive_search_seconds":4.218891263008118e-6,"evaluations":55.296875,"distances_sum":298.27622575312853}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444435, conf: {"restarts":19}, perf: {"precision":0.8585069444444435,"recall":0.8585069444444435,"f1":0.8585069444444435,"seconds":5.222111940383911e-5,"exhaustive_search_seconds":1.9680708646774292e-5,"evaluations":183.7109375,"distances_sum":128.1465439000167}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999991, conf: {"restarts":21}, perf: {"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00016555935144424438,"exhaustive_search_seconds":1.9680708646774292e-5,"evaluations":191.3125,"distances_sum":127.68371890718117}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999991,"state":{"restarts":21},"perf":{"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00016555935144424438,"exhaustive_search_seconds":1.9680708646774292e-5,"evaluations":191.3125,"distances_sum":127.68371890718117}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8593749999999991,"state":{"restarts":21},"perf":{"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":0.00016555935144424438,"exhaustive_search_seconds":1.9680708646774292e-5,"evaluations":191.3125,"distances_sum":127.68371890718117}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444434, conf: {"restarts":17}, perf: {"precision":0.8428819444444434,"recall":0.8428819444444434,"f1":null,"seconds":7.268041372299194e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":268.078125,"distances_sum":58.085534791694954}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333323, conf: {"restarts":8}, perf: {"precision":0.8489583333333323,"recall":0.8489583333333323,"f1":null,"seconds":5.3649768233299255e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":191.234375,"distances_sum":58.12176635232754}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111099, conf: {"restarts":23}, perf: {"precision":0.8454861111111099,"recall":0.8454861111111099,"f1":null,"seconds":0.00011827051639556885,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":321.4921875,"distances_sum":58.153774361358956}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.846354166666666, conf: {"restarts":27}, perf: {"precision":0.846354166666666,"recall":0.846354166666666,"f1":0.846354166666666,"seconds":9.006261825561523e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":352.8671875,"distances_sum":57.99575260025449}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888877, conf: {"restarts":13}, perf: {"precision":0.8498263888888877,"recall":0.8498263888888877,"f1":0.8498263888888877,"seconds":6.802752614021301e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":229.796875,"distances_sum":58.055962088750675}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666656, conf: {"restarts":25}, perf: {"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":null,"seconds":9.250640869140625e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":336.8671875,"distances_sum":58.05404066038318}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444435, conf: {"restarts":33}, perf: {"precision":0.8585069444444435,"recall":0.8585069444444435,"f1":0.8585069444444435,"seconds":0.00011515617370605469,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":403.3984375,"distances_sum":57.471727594034746}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8585069444444435,"state":{"restarts":33},"perf":{"precision":0.8585069444444435,"recall":0.8585069444444435,"f1":0.8585069444444435,"seconds":0.00011515617370605469,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":403.3984375,"distances_sum":57.471727594034746}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222209, conf: {"restarts":38}, perf: {"precision":0.8628472222222209,"recall":0.8628472222222209,"f1":0.8628472222222209,"seconds":0.00026749446988105774,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":444.5390625,"distances_sum":57.613865341292694}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777767, conf: {"restarts":3}, perf: {"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":5.052611231803894e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":143.0859375,"distances_sum":57.719139450462535}, best_list's length: 14, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8637152777777767,"state":{"restarts":3},"perf":{"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":5.052611231803894e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":143.0859375,"distances_sum":57.719139450462535}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8637152777777767,"state":{"restarts":3},"perf":{"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":5.052611231803894e-5,"exhaustive_search_seconds":0.00018336623907089233,"evaluations":143.0859375,"distances_sum":57.719139450462535}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(3), SatNeighborhood(32), 2020-10-02T20:43:27.002
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(477, 0.038297668f0), Item(5943, 0.041701376f0), Item(6523, 0.042173263f0), Item(9266, 0.049854178f0), Item(1136, 0.05620374f0), Item(4691, 0.05652956f0), Item(1473, 0.065234855f0), Item(6264, 0.07083645f0), Item(341, 0.07345794f0), Item(9464, 0.07519576f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0539798719121682, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9644209956709962,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.5390625,"distances_sum":654.1963321454823}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0539798719121682,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9644209956709962,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.5390625,"distances_sum":654.1963321454823}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0539798719121682,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9644209956709962,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.5390625,"distances_sum":654.1963321454823}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.9907953740854376, conf: {"bsize":3}, perf: {"precision":0.9626736111111104,"recall":0.9626736111111104,"f1":0.9626736111111104,"seconds":1.0505318641662598e-5,"exhaustive_search_seconds":4.390254616737366e-6,"evaluations":33.1015625,"distances_sum":281.2910639308393}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.061609084319884, conf: {"bsize":2}, perf: {"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":9.022653102874756e-6,"exhaustive_search_seconds":4.390254616737366e-6,"evaluations":32.3359375,"distances_sum":284.47717801854014}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.061609084319884,"state":{"bsize":2},"perf":{"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":9.022653102874756e-6,"exhaustive_search_seconds":4.390254616737366e-6,"evaluations":32.3359375,"distances_sum":284.47717801854014}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.061609084319884,"state":{"bsize":2},"perf":{"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":9.022653102874756e-6,"exhaustive_search_seconds":4.390254616737366e-6,"evaluations":32.3359375,"distances_sum":284.47717801854014}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.061609084319884,"state":{"bsize":2},"perf":{"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":9.022653102874756e-6,"exhaustive_search_seconds":4.390254616737366e-6,"evaluations":32.3359375,"distances_sum":284.47717801854014}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.689115113547377, conf: {"bsize":3}, perf: {"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.9175931811332703e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":59.859375,"distances_sum":120.6822126666084}, best_list's length: 3, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.689115113547377,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.9175931811332703e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":59.859375,"distances_sum":120.6822126666084}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.689115113547377,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.9175931811332703e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":59.859375,"distances_sum":120.6822126666084}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.689115113547377,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.9175931811332703e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":59.859375,"distances_sum":120.6822126666084}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.06485025895068, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.3200328946113586e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":104.0859375,"distances_sum":55.24525793455541}, best_list's length: 3, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.06485025895068,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.3200328946113586e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":104.0859375,"distances_sum":55.24525793455541}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.85702270815811, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.064105451107025e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":102.1796875,"distances_sum":55.249276073649526}, best_list's length: 12, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.17348720674208, conf: {"bsize":4}, perf: {"precision":0.9913194444444442,"recall":0.9913194444444442,"f1":0.9913194444444442,"seconds":3.86945903301239e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":102.8984375,"distances_sum":55.2988077159971}, best_list's length: 13, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.85702270815811,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.064105451107025e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":102.1796875,"distances_sum":55.249276073649526}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.85702270815811,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.064105451107025e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":102.1796875,"distances_sum":55.249276073649526}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.85702270815811,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.064105451107025e-5,"exhaustive_search_seconds":0.00023350678384304047,"evaluations":102.1796875,"distances_sum":55.249276073649526}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-10-02T20:43:29.887
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(734, 0.018187173f0), Item(4482, 0.024786793f0), Item(4957, 0.025734155f0), Item(7318, 0.032586727f0), Item(8206, 0.032980893f0), Item(7394, 0.056320574f0), Item(5155, 0.05643398f0), Item(2863, 0.056959625f0), Item(7204, 0.057014342f0), Item(5641, 0.05827044f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
