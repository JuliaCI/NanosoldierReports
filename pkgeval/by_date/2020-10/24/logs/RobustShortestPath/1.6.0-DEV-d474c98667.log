Current time is 2020-10-25T13:43:20.744
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T13:43:22.585
   Resolving package versions...
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed SimpleTraits â”€â”€â”€â”€â”€â”€â”€ v0.9.3
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed OrderedCollections â”€ v1.3.1
   Installed ArnoldiMethod â”€â”€â”€â”€â”€â”€ v0.0.4
   Installed RobustShortestPath â”€ v0.4.0
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed LightGraphs â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Inflate â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed DataStructures â”€â”€â”€â”€â”€ v0.18.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [16f6c422] + RobustShortestPath v0.4.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.0.4
  [34da2185] + Compat v3.22.0
  [864edb3b] + DataStructures v0.18.8
  [d25df0c9] + Inflate v0.1.2
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.6
  [bac558e1] + OrderedCollections v1.3.1
  [16f6c422] + RobustShortestPath v0.4.0
  [699a6c99] + SimpleTraits v0.9.3
  [90137ffa] + StaticArrays v0.12.4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mInflate[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mSimpleTraits[39m
[32m  âœ“ [39m[90mArnoldiMethod[39m
[32m  âœ“ [39m[90mLightGraphs[39m
[32m  âœ“ [39mRobustShortestPath
10 dependencies successfully precompiled
Starting tests at 2020-10-25T13:46:16.275
     Testing RobustShortestPath
Status `/tmp/jl_IEokYW/Project.toml`
  [093fc24a] LightGraphs v1.3.0
  [16f6c422] RobustShortestPath v0.4.0
Status `/tmp/jl_IEokYW/Manifest.toml`
  [ec485272] ArnoldiMethod v0.0.4
  [34da2185] Compat v3.22.0
  [864edb3b] DataStructures v0.18.8
  [d25df0c9] Inflate v0.1.2
  [093fc24a] LightGraphs v1.3.0
  [1914dd2f] MacroTools v0.5.6
  [bac558e1] OrderedCollections v1.3.1
  [16f6c422] RobustShortestPath v0.4.0
  [699a6c99] SimpleTraits v0.9.3
  [90137ffa] StaticArrays v0.12.4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Origin=1, Destination=15
----------------------------------------------------
Single Coefficient Case
Gamma=0: Robust Path is [1 2 4 3 8 12 14 15] and the worst-case cost is 6060.0.
Gamma=1: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 15024.0.
Gamma=2: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 20864.0.
Gamma=3: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 26604.0.
Gamma=4: Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31293.0.
Gamma=5: Robust Path is [1 4 3 8 12 15] and the worst-case cost is 32291.0.
----------------------------------------------------
Two Coefficient Case
(Gamma_u,Gamma_v)=(1,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 15024.0.
(Gamma_u,Gamma_v)=(1,2): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 19474.0.
(Gamma_u,Gamma_v)=(1,3): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 20650.0.
(Gamma_u,Gamma_v)=(1,4): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 21590.0.
(Gamma_u,Gamma_v)=(1,5): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 22020.0.
(Gamma_u,Gamma_v)=(2,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 17070.0.
(Gamma_u,Gamma_v)=(2,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 21822.0.
(Gamma_u,Gamma_v)=(2,3): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 25314.0.
(Gamma_u,Gamma_v)=(2,4): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 26490.0.
(Gamma_u,Gamma_v)=(2,5): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 27067.0.
(Gamma_u,Gamma_v)=(3,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 18870.0.
(Gamma_u,Gamma_v)=(3,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 23622.0.
(Gamma_u,Gamma_v)=(3,3): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 27662.0.
(Gamma_u,Gamma_v)=(3,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 29013.0.
(Gamma_u,Gamma_v)=(3,5): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 29953.0.
(Gamma_u,Gamma_v)=(4,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 19554.0.
(Gamma_u,Gamma_v)=(4,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 24610.0.
(Gamma_u,Gamma_v)=(4,3): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 28650.0.
(Gamma_u,Gamma_v)=(4,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31293.0.
(Gamma_u,Gamma_v)=(4,5): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 31619.0.
(Gamma_u,Gamma_v)=(5,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 20162.0.
(Gamma_u,Gamma_v)=(5,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 25294.0.
(Gamma_u,Gamma_v)=(5,3): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 29315.0.
(Gamma_u,Gamma_v)=(5,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31965.0.
(Gamma_u,Gamma_v)=(5,5): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 32291.0.
32291.0
     Testing RobustShortestPath tests passed 
Finished at 2020-10-25T13:47:39.461
