Current time is 2020-10-25T07:06:05.930
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T07:06:10.056
   Resolving package versions...
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed OrderedCollections â”€ v1.3.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
     Cloning [682c06a0-de6a-54ab-a142-c8b1cf79cde6] JSON from https://github.com/JuliaIO/JSON.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
     Cloning [2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91] StatsBase from https://github.com/JuliaStats/StatsBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
     Cloning [864edb3b-99cc-5e75-8d2d-829cb0a9cfe8] DataStructures from https://github.com/JuliaCollections/DataStructures.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
Starting tests at 2020-10-25T07:10:16.166
     Testing SimilaritySearch
Status `/tmp/jl_OSgR7Y/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_OSgR7Y/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(48, 0.0053144693f0), Item(10, 0.009759426f0), Item(11, 0.04201424f0), Item(35, 0.044774532f0)])
Vsorted = Item[Item(48, 0.0053144693f0), Item(10, 0.009759426f0), Item(11, 0.04201424f0), Item(35, 0.044774532f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.009117754300435384, 0.004983925819396972, 301.0, 48.706123650074005))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.006604703267415365, 0.004653263092041016, 301.0, 71.29196918010712))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037238200505574546, 0.006473104159037272, 301.0, 39.565850496292114))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00680081844329834, 0.007250197728474935, 301.0, 8.628901225689333))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.002745358149210612, 0.0045963684717814125, 301.0, 44.10044611804187))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.4135907491048177e-5, 1.3335545857747395e-5, 301.0, 177.76021743565798))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.3132235209147136e-5, 0.03148483435312907, 300.0, 27.74622195586562)
p = PerformanceResult(1.0, 1.0, 1.0, 3.09149424235026e-5, 1.8469492594401042e-5, 300.0, 27.74622195586562)
p = PerformanceResult(1.0, 1.0, 1.0, 0.005605228741963704, 0.002446595827738444, 300.0, 1.539004859754641)
p = PerformanceResult(1.0, 1.0, 1.0, 2.2668308681911894e-5, 1.2596448262532553e-5, 300.0, 1.539004859754641)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.3132235209147136e-5, 0.03148483435312907, 300.0, 27.74622195586562), PerformanceResult(1.0, 1.0, 1.0, 3.09149424235026e-5, 1.8469492594401042e-5, 300.0, 27.74622195586562), PerformanceResult(1.0, 1.0, 1.0, 0.005605228741963704, 0.002446595827738444, 300.0, 1.539004859754641), PerformanceResult(1.0, 1.0, 1.0, 2.2668308681911894e-5, 1.2596448262532553e-5, 300.0, 1.539004859754641))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.011863032976786295, 0.0061357339223225916, 348.93333333333334, 28687.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.01090257167816162, 0.0023821036020914713, 303.6333333333333, 7005.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6458829243977864e-5, 9.099642435709635e-6, 96.43333333333334, 48.706123650074005))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5823046366373696e-5, 5.062421162923177e-6, 88.63333333333334, 71.29196918010712))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0002058585484822591, 5.539258321126302e-6, 93.13333333333334, 39.565850496292114))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.58422597249349e-5, 6.423791249593099e-5, 97.03333333333333, 44.10044611804187))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8599999999999998, 0.8599999999999998, 0.8599999999999998, 1.3605753580729167e-5, 1.663366953531901e-5, 72.73333333333333, 183.6232836022973))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-25T07:12:05.212
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8799444444444441, 0.8779999999999997, 0.8788771929824558, 1.608133316040039e-5, 1.5599727630615236e-5, 152.27, 51.49140193266794))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2521743774414063e-5, 1.2211799621582031e-5, 155.59, 0.0))
*** advance 1 from 1000; 2020-10-25T07:12:06.933
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8762698412698413, 0.8740000000000001, 0.874969040247678, 8.618831634521484e-6, 9.069442749023437e-6, 152.28, 77.84453080035746))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 8.418560028076172e-6, 6.270408630371094e-6, 155.83, 0.0))
*** advance 1 from 1000; 2020-10-25T07:12:08.348
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8838611111111111, 0.8809999999999999, 0.8823040935672514, 1.2664794921875e-5, 1.6689300537109375e-5, 151.98, 41.69633846916258))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.125263214111328e-5, 1.636028289794922e-5, 155.43, 0.0))
*** advance 1 from 1000; 2020-10-25T07:12:09.938
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8951944444444446, 0.8930000000000001, 0.8939883040935673, 0.0009821033477783203, 0.00015475988388061524, 152.94, 45.92453716392629))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.202075958251953e-5, 0.00024827003479003905, 156.32, 0.0))
*** advance 1 from 1000; 2020-10-25T07:12:10.432
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8724444444444446, 0.872, 0.8722105263157895, 2.5796890258789063e-5, 7.638931274414062e-5, 151.78, 203.5261696865782))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.5687217712402343e-5, 0.0001478910446166992, 155.19, 0.0))
*** advance 1 from 1000; 2020-10-25T07:12:11.500
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8799444444444441, 0.8779999999999997, 0.8788771929824558, 1.851320266723633e-5, 4.572868347167969e-5, 152.27, 51.50219059525989))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.861572265625e-5, 4.757881164550781e-5, 155.59, 0.011519348248839378))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:14.410
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7099999999999999, 0.7099999999999999, 0.7099999999999999, 0.001309082508087158, 5.556821823120117e-5, 199.12, 197.81666885316372))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:16.417
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7049999999999997, 0.7049999999999997, 0.7049999999999997, 0.0010606646537780762, 4.693031311035156e-5, 201.04, 113.91666883975267))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:18.995
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6169999999999999, 0.6169999999999999, NaN, 0.0016222906112670899, 4.281044006347656e-5, 264.73, 0.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:21.042
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9530000000000001, 0.9530000000000001, 0.9530000000000001, 0.0024076008796691892, 1.5268325805664064e-5, 216.39, 602.4000200927258))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:23.975
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5720000000000003, 0.5720000000000003, 0.5720000000000003, 0.0016197299957275391, 0.00020210981369018556, 260.13, 2375.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:25.274
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3829999999999999, 0.3829999999999999, NaN, 0.004220888614654541, 0.0003633999824523926, 252.57, 3668.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T07:12:28.158
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.595, 0.595, 0.595, 0.0017160367965698242, 1.2760162353515626e-5, 246.39, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.094017094017094, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9464915293040297,"seconds":2.166256308555603e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2265625,"distances_sum":738.8251066207886}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.094017094017094,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9464915293040297,"seconds":2.166256308555603e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2265625,"distances_sum":738.8251066207886}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0960989533777354, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9455929487179494,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2109375,"distances_sum":739.6460298895836}, best_list's length: 6, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0960989533777354,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9455929487179494,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2109375,"distances_sum":739.6460298895836}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0960989533777354,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9455929487179494,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2109375,"distances_sum":739.6460298895836}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8092518560822386, conf: {"restarts":10}, perf: {"precision":0.9166666666666659,"recall":0.9166666666666659,"f1":0.9166666666666659,"seconds":1.975521445274353e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":54.71875,"distances_sum":294.08960473537445}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.978763272954404, conf: {"restarts":7}, perf: {"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":1.956149935722351e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":50.03125,"distances_sum":294.7383459061384}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.978763272954404,"state":{"restarts":7},"perf":{"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":1.956149935722351e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":50.03125,"distances_sum":294.7383459061384}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.381507235482052, conf: {"restarts":4}, perf: {"precision":0.903645833333332,"recall":0.903645833333332,"f1":0.903645833333332,"seconds":1.232139766216278e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":41.5703125,"distances_sum":295.32248985767365}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.381507235482052,"state":{"restarts":4},"perf":{"precision":0.903645833333332,"recall":0.903645833333332,"f1":0.903645833333332,"seconds":1.232139766216278e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":41.5703125,"distances_sum":295.32248985767365}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.381507235482052,"state":{"restarts":4},"perf":{"precision":0.903645833333332,"recall":0.903645833333332,"f1":0.903645833333332,"seconds":1.232139766216278e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":41.5703125,"distances_sum":295.32248985767365}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.381507235482052,"state":{"restarts":4},"perf":{"precision":0.903645833333332,"recall":0.903645833333332,"f1":0.903645833333332,"seconds":1.232139766216278e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":41.5703125,"distances_sum":295.32248985767365}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.865451388888888, conf: {"restarts":7}, perf: {"precision":0.865451388888888,"recall":0.865451388888888,"f1":0.865451388888888,"seconds":2.8360635042190552e-5,"exhaustive_search_seconds":1.8054619431495667e-5,"evaluations":109.4765625,"distances_sum":127.91341171693057}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":13}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":3.518536686897278e-5,"exhaustive_search_seconds":1.8054619431495667e-5,"evaluations":148.46875,"distances_sum":127.7111993310973}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.865451388888888,"state":{"restarts":7},"perf":{"precision":0.865451388888888,"recall":0.865451388888888,"f1":0.865451388888888,"seconds":2.8360635042190552e-5,"exhaustive_search_seconds":1.8054619431495667e-5,"evaluations":109.4765625,"distances_sum":127.91341171693057}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.865451388888888,"state":{"restarts":7},"perf":{"precision":0.865451388888888,"recall":0.865451388888888,"f1":0.865451388888888,"seconds":2.8360635042190552e-5,"exhaustive_search_seconds":1.8054619431495667e-5,"evaluations":109.4765625,"distances_sum":127.91341171693057}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777766, conf: {"restarts":9}, perf: {"precision":0.8559027777777766,"recall":0.8559027777777766,"f1":0.8559027777777766,"seconds":4.219263792037964e-5,"exhaustive_search_seconds":0.00015851669013500214,"evaluations":193.65625,"distances_sum":56.812956761568785}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8567708333333321, conf: {"restarts":19}, perf: {"precision":0.8567708333333321,"recall":0.8567708333333321,"f1":0.8567708333333321,"seconds":9.252876043319702e-5,"exhaustive_search_seconds":0.00015851669013500214,"evaluations":280.7734375,"distances_sum":56.92118618451059}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8567708333333321,"state":{"restarts":19},"perf":{"precision":0.8567708333333321,"recall":0.8567708333333321,"f1":0.8567708333333321,"seconds":9.252876043319702e-5,"exhaustive_search_seconds":0.00015851669013500214,"evaluations":280.7734375,"distances_sum":56.92118618451059}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8567708333333321,"state":{"restarts":19},"perf":{"precision":0.8567708333333321,"recall":0.8567708333333321,"f1":0.8567708333333321,"seconds":9.252876043319702e-5,"exhaustive_search_seconds":0.00015851669013500214,"evaluations":280.7734375,"distances_sum":56.92118618451059}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(19), SatNeighborhood(32), 2020-10-25T07:12:45.250
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(794, 0.021703068f0), Item(8493, 0.03472635f0), Item(5053, 0.035515405f0), Item(9493, 0.036069945f0), Item(2582, 0.047523163f0), Item(5374, 0.04890437f0), Item(7668, 0.05373708f0), Item(5295, 0.054959077f0), Item(6131, 0.05977473f0), Item(5176, 0.06638164f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9367824883449889,"seconds":0.0035253334790468216,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.234375,"distances_sum":742.2887411117554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9367824883449889,"seconds":0.0035253334790468216,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.234375,"distances_sum":742.2887411117554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.033030157970321,"state":{"bsize":3},"perf":{"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.1546537280082703e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":32.640625,"distances_sum":291.4055292531848}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.033030157970321,"state":{"bsize":3},"perf":{"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.1546537280082703e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":32.640625,"distances_sum":291.4055292531848}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 16.594146341463414, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":1.44224613904953e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":64.0625,"distances_sum":123.4232666362077}, best_list's length: 2, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.594146341463414,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":1.44224613904953e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":64.0625,"distances_sum":123.4232666362077}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 16.761370639714038, conf: {"bsize":2}, perf: {"precision":0.9435763888888883,"recall":0.9435763888888883,"f1":0.9435763888888883,"seconds":1.971423625946045e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":63.3828125,"distances_sum":124.56799450330436}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.761370639714038,"state":{"bsize":2},"perf":{"precision":0.9435763888888883,"recall":0.9435763888888883,"f1":0.9435763888888883,"seconds":1.971423625946045e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":63.3828125,"distances_sum":124.56799450330436}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.531609566903686, conf: {"bsize":4}, perf: {"precision":0.9887152777777777,"recall":0.9887152777777777,"f1":0.9887152777777777,"seconds":1.8583610653877258e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":60.4296875,"distances_sum":123.53598760999739}, best_list's length: 5, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.531609566903686,"state":{"bsize":4},"perf":{"precision":0.9887152777777777,"recall":0.9887152777777777,"f1":0.9887152777777777,"seconds":1.8583610653877258e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":60.4296875,"distances_sum":123.53598760999739}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.531609566903686,"state":{"bsize":4},"perf":{"precision":0.9887152777777777,"recall":0.9887152777777777,"f1":0.9887152777777777,"seconds":1.8583610653877258e-5,"exhaustive_search_seconds":1.2312084436416626e-5,"evaluations":60.4296875,"distances_sum":123.53598760999739}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.97688126770267, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.0953437089920044e-5,"exhaustive_search_seconds":0.0002086404711008072,"evaluations":102.0546875,"distances_sum":54.77607390843332}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.97688126770267,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.0953437089920044e-5,"exhaustive_search_seconds":0.0002086404711008072,"evaluations":102.0546875,"distances_sum":54.77607390843332}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.97688126770267,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.0953437089920044e-5,"exhaustive_search_seconds":0.0002086404711008072,"evaluations":102.0546875,"distances_sum":54.77607390843332}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.97688126770267,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.0953437089920044e-5,"exhaustive_search_seconds":0.0002086404711008072,"evaluations":102.0546875,"distances_sum":54.77607390843332}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-10-25T07:12:51.803
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2450, 0.029299935f0), Item(7013, 0.033558056f0), Item(4902, 0.045136146f0), Item(4070, 0.048375163f0), Item(8870, 0.04939331f0), Item(421, 0.051035218f0), Item(317, 0.05654696f0), Item(1679, 0.060647253f0), Item(2183, 0.06359292f0), Item(5958, 0.06381961f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
Finished at 2020-10-25T07:12:51.933
