Current time is 2020-10-25T11:34:31.011
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T11:34:32.325
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-25T11:34:41.574
     Testing GAFramework
Status `/tmp/jl_JDg64Y/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JDg64Y/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720241643563085
curgen: 20 fitness: 0.21720241643563085
curgen: 30 fitness: 0.21723001091701685
curgen: 40 fitness: 0.21723001091701685
curgen: 50 fitness: 0.21723001091701685
CoordinateCreature{Vector{Float64}}([-0.22283422289042956], -0.21723001091701685) -0.22283422289042956 -0.21723001091701685
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2582321557670104
curgen: 100 fitness: 3.2583304989772484
curgen: 150 fitness: 3.2583390832301684
curgen: 200 fitness: 3.2583573726949817
curgen: 250 fitness: 3.258358041966626
curgen: 300 fitness: 3.2584098096105123
curgen: 350 fitness: 3.258457922190037
curgen: 400 fitness: 3.2584584771105622
curgen: 450 fitness: 3.2584629191997494
curgen: 500 fitness: 3.2584644504072613
CoordinateCreature{Vector{Float64}}([-0.22278152303576562, -0.2222324384101845, 0.22242622495601735, 0.22259636240759106, 0.2225818158477228, -0.22250241590859615, -0.22262437161069548, 0.22251901000000046, -0.22242794555672452, 0.22271784937773317, -0.22279182239150103, 0.22299164015119746, 0.2224258690861653, 0.2231743868716423, 0.22267891962167266], -3.2584644504072613) [-0.22278152303576562, -0.2222324384101845, 0.22242622495601735, 0.22259636240759106, 0.2225818158477228, -0.22250241590859615, -0.22262437161069548, 0.22251901000000046, -0.22242794555672452, 0.22271784937773317, -0.22279182239150103, 0.22299164015119746, 0.2224258690861653, 0.2231743868716423, 0.22267891962167266] -3.2584644504072613
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0017080406107368162
curgen: 100 fitness: -0.0017080406107368162
curgen: 150 fitness: -0.0017080406107368162
curgen: 200 fitness: -0.0014840010414332028
curgen: 250 fitness: -0.0014840010414332028
curgen: 300 fitness: -0.0010684672388094896
curgen: 350 fitness: -0.0010571035279269836
curgen: 400 fitness: -0.0010284611945792221
curgen: 450 fitness: -0.0010284611945792221
curgen: 500 fitness: -0.0009903888677911254
CoordinateCreature{Vector{Float64}}([-0.00019209336041293285, 2.325472339425906e-5, -0.00044958512774163835, -0.0002553422019137422, 0.0005345428151699357, 0.00017749676015276308, 0.001100845407501974, 0.0013269174895327311, 0.00018502922706075536, -0.0002199843657353333, -0.0002585601597796412, 0.0007112100487316475, 0.0005019717268993761, 0.00047943569189309344, -0.0005102746794671705], 0.0009903888677911254) [-0.00019209336041293285, 2.325472339425906e-5, -0.00044958512774163835, -0.0002553422019137422, 0.0005345428151699357, 0.00017749676015276308, 0.001100845407501974, 0.0013269174895327311, 0.00018502922706075536, -0.0002199843657353333, -0.0002585601597796412, 0.0007112100487316475, 0.0005019717268993761, 0.00047943569189309344, -0.0005102746794671705] 0.0009903888677911254
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-25T11:35:08.880
