Current time is 2020-10-25T05:47:58.680
Julia Version 1.6.0-DEV.1324
Commit ae789ca1df (2020-10-24 01:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T05:48:01.352
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-25T05:48:19.845
     Testing GAFramework
Status `/tmp/jl_JL2Xu0/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JL2Xu0/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722504916022908
curgen: 20 fitness: 0.21722504916022908
curgen: 30 fitness: 0.21722504916022908
curgen: 40 fitness: 0.2172322960049614
curgen: 50 fitness: 0.2172322960049614
CoordinateCreature{Vector{Float64}}([-0.222374794097279], -0.2172322960049614) -0.222374794097279 -0.2172322960049614
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257852471151433
curgen: 100 fitness: 3.257904952524524
curgen: 150 fitness: 3.2580725246790383
curgen: 200 fitness: 3.258270117112505
curgen: 250 fitness: 3.258272651847484
curgen: 300 fitness: 3.258272651847484
curgen: 350 fitness: 3.2584271156691953
curgen: 400 fitness: 3.2584494837549256
curgen: 450 fitness: 3.2584494837549256
curgen: 500 fitness: 3.2584506575662813
CoordinateCreature{Vector{Float64}}([-0.2225297464234661, -0.2225004486658661, 0.22274159677046676, 0.22260650720395117, -0.22251893114648005, -0.22245325797220739, -0.22256965385735522, -0.22238384544735185, -0.2225846959785469, 0.2227184699245853, -0.22173708074353543, 0.2219759634368094, 0.22265034736540348, -0.22273918903066303, 0.22280665814055653], -3.2584506575662813) [-0.2225297464234661, -0.2225004486658661, 0.22274159677046676, 0.22260650720395117, -0.22251893114648005, -0.22245325797220739, -0.22256965385735522, -0.22238384544735185, -0.2225846959785469, 0.2227184699245853, -0.22173708074353543, 0.2219759634368094, 0.22265034736540348, -0.22273918903066303, 0.22280665814055653] -3.2584506575662813
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003963602395060661
curgen: 100 fitness: -0.003796470412112285
curgen: 150 fitness: -0.003796470412112285
curgen: 200 fitness: -0.0029405143746146223
curgen: 250 fitness: -0.0022264071412507747
curgen: 300 fitness: -0.0008801386317998094
curgen: 350 fitness: -0.000764726443321706
curgen: 400 fitness: -0.000764726443321706
curgen: 450 fitness: -0.000764726443321706
curgen: 500 fitness: -0.0006933320427719991
CoordinateCreature{Vector{Float64}}([-1.392638892829326e-5, -0.0006366723748252937, 0.0009218697568929769, 0.0004945530960605415, -0.0003200722366274707, -0.0009712376712530169, -0.0002227149923056869, 8.354623863091526e-6, 7.119730248704697e-5, -0.0004791415879649816, -0.0006705520570449599, -5.263310435578677e-5, 1.879365336036323e-5, -0.0003777622801646231, 0.00026316731356683604], 0.0006933320427719991) [-1.392638892829326e-5, -0.0006366723748252937, 0.0009218697568929769, 0.0004945530960605415, -0.0003200722366274707, -0.0009712376712530169, -0.0002227149923056869, 8.354623863091526e-6, 7.119730248704697e-5, -0.0004791415879649816, -0.0006705520570449599, -5.263310435578677e-5, 1.879365336036323e-5, -0.0003777622801646231, 0.00026316731356683604] 0.0006933320427719991
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-25T05:49:28.059
