Current time is 2020-10-25T14:23:27.149
Julia Version 1.6.0-DEV.1324
Commit ae789ca1df (2020-10-24 01:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T14:23:28.993
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-25T14:26:53.090
     Testing FunctionIntegrator
Status `/tmp/jl_ySZp1W/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ySZp1W/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.452903 seconds (293.10 k allocations: 13.808 MiB, 91.67% compilation time)
Running: chebyshev_quadrature with k=1
  4.404417 seconds (2.25 M allocations: 130.725 MiB, 23.89% gc time, 98.78% compilation time)
Running: chebyshev_quadrature with k=2
  1.431200 seconds (417.67 k allocations: 24.215 MiB, 68.37% gc time, 97.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.440905 seconds (483.50 k allocations: 27.369 MiB, 94.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.850393 seconds (427.02 k allocations: 23.953 MiB, 28.49% gc time, 85.84% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 58.157424 seconds (35.47 M allocations: 2.979 GiB, 17.37% gc time, 85.12% compilation time)
Running: laguerre_quadrature with k=1
  4.776418 seconds (3.24 M allocations: 182.240 MiB, 1.88% gc time, 99.06% compilation time)
Running: legendre_quadrature
  0.367048 seconds (211.60 k allocations: 12.251 MiB, 17.64% gc time, 99.55% compilation time)
Running: lobatto_quadrature
  0.443936 seconds (340.68 k allocations: 20.737 MiB, 99.54% compilation time)
Running: radau_quadrature
  1.495801 seconds (462.92 k allocations: 28.476 MiB, 2.21% gc time, 98.44% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 43.367958 seconds (100.02 M allocations: 1.491 GiB, 1.13% gc time, 0.09% compilation time)
Running: rectangle_rule_midpoint.
  0.093801 seconds (173.35 k allocations: 3.888 MiB, 42.59% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.060195 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time, 0.10% compilation time)
Running: rombergs_method
  0.805026 seconds (741.52 k allocations: 43.148 MiB, 2.56% gc time, 99.75% compilation time)
Running: simpsons_rule
  0.099734 seconds (48.05 k allocations: 2.634 MiB, 97.84% compilation time)
Running: simpsons38_rule
  0.077133 seconds (111.30 k allocations: 5.947 MiB, 91.05% compilation time)
Running: trapezoidal_rule
  0.456771 seconds (1.72 M allocations: 28.721 MiB, 3.08% gc time, 43.89% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.508964 seconds (30.73 k allocations: 1.831 MiB, 99.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.522851 seconds (296.25 k allocations: 15.822 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=2
  0.129031 seconds (94.22 k allocations: 2.707 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.373295 seconds (82.47 k allocations: 2.508 MiB, 29.08% gc time, 97.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.174622 seconds (65.08 k allocations: 2.154 MiB, 99.15% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.183458 seconds (510.68 k allocations: 162.279 MiB, 6.10% gc time, 49.12% compilation time)
Running: legendre_quadrature
  0.228697 seconds (42.27 k allocations: 2.455 MiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.034373 seconds (16.25 k allocations: 1.015 MiB, 99.53% compilation time)
Running: radau_quadrature
  0.018867 seconds (16.36 k allocations: 1.022 MiB, 99.12% compilation time)
Running: rectangle_rule_left
 13.467475 seconds (471.41 M allocations: 7.025 GiB, 17.39% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.806899 seconds (476.96 M allocations: 7.107 GiB, 12.92% gc time)
Running: rombergs_method
  1.377595 seconds (334.40 k allocations: 19.162 MiB, 0.89% gc time, 99.97% compilation time)
Running: simpsons_rule
  0.000017 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.259065 seconds (19.43 k allocations: 1.184 MiB, 99.96% compilation time)
Running: trapezoidal_rule
  0.115352 seconds (16.97 k allocations: 1.034 MiB, 99.92% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.072099 seconds (1.03 k allocations: 34.125 KiB, 99.84% compilation time)
Running: chebyshev_quadrature with k=1
  0.094873 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.149256 seconds (2.71 k allocations: 124.266 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.130879 seconds (2.31 k allocations: 109.297 KiB, 64.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.087402 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.533181 seconds (369.33 k allocations: 19.503 MiB, 99.52% compilation time)
Running: legendre_quadrature
  0.041889 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000065 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000030 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000190 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000116 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000163 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.062860 seconds (1.04 k allocations: 56.469 KiB, 99.79% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.101588 seconds (923 allocations: 39.281 KiB, 99.94% compilation time)
Running: trapezoidal_rule
  0.020120 seconds (44.29 k allocations: 702.859 KiB, 92.82% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.259567 seconds (83.49 k allocations: 5.002 MiB, 7.25% gc time, 99.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.390545 seconds (235.66 k allocations: 13.391 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.429773 seconds (289.14 k allocations: 16.398 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.355233 seconds (239.80 k allocations: 13.536 MiB, 9.53% gc time, 98.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.528621 seconds (239.80 k allocations: 13.470 MiB, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.027330 seconds (454.94 k allocations: 163.901 MiB, 22.46% gc time, 30.03% compilation time)
Running: legendre_quadrature
  0.110439 seconds (190.36 k allocations: 11.102 MiB, 98.39% compilation time)
Running: lobatto_quadrature
  0.647671 seconds (201.88 k allocations: 11.810 MiB, 99.66% compilation time)
Running: radau_quadrature
  0.720758 seconds (201.87 k allocations: 11.807 MiB, 99.77% compilation time)
Running: rectangle_rule_left
  0.613759 seconds (19.37 k allocations: 1.189 MiB, 6.13% compilation time)
Running: rectangle_rule_midpoint
  0.044922 seconds (25.55 k allocations: 1.616 MiB, 67.77% compilation time)
Running: rectangle_rule_right
  0.547349 seconds (17.90 k allocations: 1.099 MiB, 5.26% compilation time)
Running: rombergs_method
  0.327078 seconds (137.77 k allocations: 8.025 MiB, 5.54% gc time, 99.17% compilation time)
Running: simpsons_rule
  0.288031 seconds (37.98 k allocations: 2.442 MiB, 99.94% compilation time)
Running: simpsons38_rule
  0.049181 seconds (43.94 k allocations: 2.785 MiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.015536 seconds (43.20 k allocations: 1.730 MiB, 97.03% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.064648 seconds (68.44 k allocations: 3.060 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=1
  0.409133 seconds (242.24 k allocations: 13.489 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.231590 seconds (296.17 k allocations: 16.372 MiB, 10.06% gc time, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.303936 seconds (246.37 k allocations: 13.522 MiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=4
  0.809577 seconds (246.37 k allocations: 13.524 MiB, 93.86% compilation time)
Running: hermite_quadrature with k=2
 28.132227 seconds (20.49 M allocations: 1.088 GiB, 7.97% gc time, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.906190 seconds (464.12 k allocations: 50.101 MiB, 56.76% gc time, 94.08% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.463312 seconds (282.35 k allocations: 15.726 MiB, 99.26% compilation time)
Running: legendre_quadrature
  0.430985 seconds (196.90 k allocations: 11.429 MiB, 99.08% compilation time)
Running: lobatto_quadrature
  0.944286 seconds (222.54 k allocations: 37.600 MiB, 41.60% gc time, 46.45% compilation time)
Running: radau_quadrature
  0.481449 seconds (219.12 k allocations: 30.267 MiB, 6.24% gc time, 86.94% compilation time)
Running: rectangle_rule_left
  0.030221 seconds (22.28 k allocations: 1.333 MiB, 99.60% compilation time)
Running: rectangle_rule_midpoint
  0.052560 seconds (27.36 k allocations: 1.703 MiB, 99.76% compilation time)
Running: rectangle_rule_right
  0.019586 seconds (19.02 k allocations: 1.153 MiB, 99.37% compilation time)
Running: rombergs_method
  0.169900 seconds (140.11 k allocations: 8.068 MiB, 98.60% compilation time)
Running: simpsons_rule
  0.200175 seconds (45.46 k allocations: 2.710 MiB, 97.59% compilation time)
Running: simpsons38_rule
  0.084477 seconds (58.91 k allocations: 3.170 MiB, 99.51% compilation time)
Running: trapezoidal_rule
  0.031413 seconds (29.23 k allocations: 1.655 MiB, 99.30% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.071434 seconds (52.41 k allocations: 2.720 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.333473 seconds (237.76 k allocations: 13.243 MiB, 14.00% gc time, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.401540 seconds (291.35 k allocations: 16.175 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.318001 seconds (241.91 k allocations: 13.331 MiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.316737 seconds (241.91 k allocations: 13.331 MiB, 8.74% gc time, 95.21% compilation time)
Running: hermite_quadrature with k=2
  0.149284 seconds (175.13 k allocations: 10.126 MiB, 98.53% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 10.527004 seconds (457.38 k allocations: 1.176 GiB, 36.98% gc time, 7.67% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.371205 seconds (277.64 k allocations: 15.553 MiB, 86.92% compilation time)
Running: legendre_quadrature
  0.292124 seconds (192.47 k allocations: 11.190 MiB, 98.14% compilation time)
Running: lobatto_quadrature
  0.626213 seconds (213.30 k allocations: 23.313 MiB, 2.32% gc time, 95.86% compilation time)
Running: radau_quadrature
  0.719720 seconds (212.45 k allocations: 21.243 MiB, 94.92% compilation time)
Running: rectangle_rule_left
  0.134340 seconds (20.07 k allocations: 1.228 MiB, 25.11% gc time, 99.90% compilation time)
Running: rectangle_rule_midpoint
  0.052671 seconds (26.25 k allocations: 1.652 MiB, 99.75% compilation time)
Running: rectangle_rule_right
  0.020747 seconds (17.88 k allocations: 1.099 MiB, 99.40% compilation time)
Running: rombergs_method
  0.241330 seconds (135.95 k allocations: 7.879 MiB, 99.01% compilation time)
Running: simpsons_rule
  0.066725 seconds (40.80 k allocations: 2.541 MiB, 99.69% compilation time)
Running: simpsons38_rule
  0.057000 seconds (49.73 k allocations: 2.931 MiB, 99.58% compilation time)
Running: trapezoidal_rule
  0.053031 seconds (24.14 k allocations: 1.492 MiB, 99.59% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.028963 seconds (40.61 k allocations: 2.580 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.558659 seconds (236.14 k allocations: 13.461 MiB, 84.98% compilation time)
Running: chebyshev_quadrature with k=2
  0.404150 seconds (289.64 k allocations: 16.487 MiB, 7.99% gc time, 98.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.451733 seconds (240.28 k allocations: 13.548 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.437238 seconds (240.28 k allocations: 13.373 MiB, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.372947 seconds (455.48 k allocations: 194.945 MiB, 4.12% gc time, 40.02% compilation time)
Running: legendre_quadrature
  0.273018 seconds (190.86 k allocations: 11.114 MiB, 99.29% compilation time)
Running: lobatto_quadrature
  0.274354 seconds (202.37 k allocations: 11.836 MiB, 98.80% compilation time)
Running: radau_quadrature
  0.453727 seconds (202.37 k allocations: 11.838 MiB, 99.49% compilation time)
Running: rectangle_rule_left
  0.334669 seconds (19.89 k allocations: 1.214 MiB, 11.51% compilation time)
Running: rectangle_rule_midpoint
  0.110503 seconds (25.89 k allocations: 1.634 MiB, 18.42% gc time, 99.87% compilation time)
Running: rectangle_rule_right
  0.228028 seconds (18.25 k allocations: 1.118 MiB, 40.67% compilation time)
Running: rombergs_method
  0.372409 seconds (149.07 k allocations: 8.791 MiB, 98.93% compilation time)
Running: simpsons_rule
  0.131933 seconds (38.61 k allocations: 2.470 MiB, 99.89% compilation time)
Running: simpsons38_rule
  0.043725 seconds (44.65 k allocations: 2.815 MiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.053422 seconds (44.13 k allocations: 1.763 MiB, 94.64% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.123314 seconds (40.35 k allocations: 2.510 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.300729 seconds (236.73 k allocations: 13.480 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.491499 seconds (290.27 k allocations: 16.397 MiB, 11.70% gc time, 92.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.669761 seconds (240.88 k allocations: 13.484 MiB, 99.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.603795 seconds (240.87 k allocations: 13.545 MiB, 81.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.393783 seconds (456.19 k allocations: 149.629 MiB, 14.15% gc time, 41.65% compilation time)
Running: legendre_quadrature
  0.284705 seconds (191.45 k allocations: 11.126 MiB, 99.28% compilation time)
Running: lobatto_quadrature
  0.341501 seconds (202.97 k allocations: 11.859 MiB, 99.12% compilation time)
Running: radau_quadrature
  0.299550 seconds (202.97 k allocations: 11.915 MiB, 99.19% compilation time)
Running: rectangle_rule_left
  0.795798 seconds (20.14 k allocations: 1.227 MiB, 9.81% compilation time)
Running: rectangle_rule_midpoint
  0.107438 seconds (25.89 k allocations: 1.635 MiB, 36.13% gc time, 99.79% compilation time)
Running: rectangle_rule_right
  0.738130 seconds (18.20 k allocations: 1.115 MiB, 14.08% compilation time)
Running: rombergs_method
  0.354791 seconds (138.99 k allocations: 8.082 MiB, 98.98% compilation time)
Running: simpsons_rule
  0.017828 seconds (39.09 k allocations: 2.489 MiB, 99.00% compilation time)
Running: simpsons38_rule
  0.036897 seconds (45.35 k allocations: 2.842 MiB, 99.53% compilation time)
Running: trapezoidal_rule
  0.113253 seconds (56.28 k allocations: 1.959 MiB, 99.05% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.421091 seconds (152.09 k allocations: 9.115 MiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=1
  0.167244 seconds (70.34 k allocations: 2.237 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.381173 seconds (105.51 k allocations: 2.962 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.236561 seconds (92.98 k allocations: 2.686 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.138732 seconds (72.52 k allocations: 2.280 MiB, 98.25% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.090068 seconds (485.54 k allocations: 168.154 MiB, 30.87% gc time, 46.43% compilation time)
Running: legendre_quadrature
  0.155279 seconds (19.14 k allocations: 1.126 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000097 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000047 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.432846 seconds (590.00 M allocations: 8.792 GiB, 8.98% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 18.666175 seconds (592.75 M allocations: 8.833 GiB, 7.76% gc time)
Running: rombergs_method
  0.324979 seconds (20.91 k allocations: 1.197 MiB, 98.69% compilation time)
Running: simpsons_rule
  0.000042 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.042760 seconds (463 allocations: 22.578 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.024980 seconds (171 allocations: 7.859 KiB, 99.46% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.153358 seconds (209.94 M allocations: 3.138 GiB, 2.03% gc time, 2.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.780804 seconds (423.07 k allocations: 23.686 MiB, 90.79% compilation time)
Running: chebyshev_quadrature with k=2
 20.506516 seconds (478.63 k allocations: 4.041 GiB, 16.94% gc time, 6.06% compilation time)
Running: chebyshev_quadrature with k=3
  8.067443 seconds (254.26 k allocations: 1.642 GiB, 4.38% gc time, 6.90% compilation time)
Running: chebyshev_quadrature with k=4
 11.250052 seconds (254.25 k allocations: 2.261 GiB, 1.94% gc time, 3.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 37.450114 seconds (493.11 k allocations: 13.255 GiB, 13.44% gc time, 1.81% compilation time)
Running: legendre_quadrature.
  8.964222 seconds (228.99 k allocations: 1.976 GiB, 0.95% gc time, 9.31% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.373351 seconds (8.24 M allocations: 13.384 GiB, 10.88% gc time, 1.85% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.268089 seconds (7.24 M allocations: 13.369 GiB, 16.70% gc time, 1.35% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.519390 seconds (22.88 k allocations: 1.394 MiB, 0.25% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.458369 seconds (31.46 k allocations: 1.956 MiB, 1.82% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.020658 seconds (23.09 k allocations: 1.403 MiB, 0.52% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.561638 seconds (448.77 k allocations: 153.522 MiB, 1.50% gc time, 31.61% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.864621 seconds (200.04 M allocations: 2.983 GiB, 2.45% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.159135 seconds (600.05 M allocations: 8.944 GiB, 6.46% gc time, 0.35% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.630745 seconds (600.03 M allocations: 8.943 GiB, 4.26% gc time, 0.11% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.053851 seconds (111.10 k allocations: 4.245 MiB, 94.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.476959 seconds (252.71 k allocations: 13.877 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.219659 seconds (277.26 k allocations: 14.965 MiB, 95.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.253154 seconds (224.24 k allocations: 11.981 MiB, 48.86% gc time, 99.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.229768 seconds (224.24 k allocations: 11.976 MiB, 99.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.540748 seconds (394.78 k allocations: 35.536 MiB, 94.87% compilation time)
Running: laguerre_quadrature with k=2
  0.390897 seconds (185.19 k allocations: 10.841 MiB, 89.49% compilation time)
Running: legendre_quadrature
  0.103839 seconds (149.17 k allocations: 8.338 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.021684 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016645 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.058392 seconds (19.35 k allocations: 1.157 MiB, 71.91% compilation time)
Running: rectangle_rule_midpoint
  0.060430 seconds (26.33 k allocations: 1.636 MiB, 73.53% compilation time)
Running: rectangle_rule_right
  0.083094 seconds (17.96 k allocations: 1.084 MiB, 79.04% compilation time)
Running: rombergs_method
  0.383835 seconds (175.98 k allocations: 10.163 MiB, 84.40% compilation time)
Running: simpsons_rule
  0.000457 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.040090 seconds (80.36 k allocations: 3.491 MiB, 97.59% compilation time)
Running: trapezoidal_rule
  0.164251 seconds (2.39 M allocations: 37.744 MiB, 56.85% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000681 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.110198 seconds (2.46 k allocations: 1.691 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.096176 seconds (2.71 k allocations: 2.355 MiB, 96.60% compilation time)
Running: chebyshev_quadrature with k=3
  0.136291 seconds (2.31 k allocations: 2.028 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.131561 seconds (2.31 k allocations: 1.469 MiB, 98.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.576842 seconds (371.61 k allocations: 905.325 MiB, 5.86% gc time, 10.15% compilation time)
Running: legendre_quadrature
  0.075118 seconds (1.27 k allocations: 68.203 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000131 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000101 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.596028 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000221 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.552167 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.090705 seconds (993 allocations: 56.609 KiB, 99.54% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001027 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000083 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.069708 seconds (2.53 k allocations: 579.203 KiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.081198 seconds (2.79 k allocations: 780.188 KiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.118496 seconds (2.39 k allocations: 661.047 KiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.106697 seconds (2.39 k allocations: 491.547 KiB, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.965545 seconds (378.17 k allocations: 253.436 MiB, 24.84% compilation time)
Running: legendre_quadrature
  0.100255 seconds (1.32 k allocations: 67.859 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000047 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.215245 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000092 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.202494 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.126778 seconds (1.21 k allocations: 64.875 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000007 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000240 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-25T14:38:50.615
