Current time is 2020-10-25T05:42:44.339
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T05:42:46.645
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-25T05:44:53.409
     Testing FunctionIntegrator
Status `/tmp/jl_JYt6YZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_JYt6YZ/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.252190 seconds (293.38 k allocations: 13.825 MiB, 91.15% compilation time)
Running: chebyshev_quadrature with k=1
  2.065689 seconds (2.25 M allocations: 130.776 MiB, 2.83% gc time, 98.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.293390 seconds (417.68 k allocations: 24.253 MiB, 18.49% gc time, 88.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.322574 seconds (483.50 k allocations: 27.372 MiB, 4.83% gc time, 85.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.217988 seconds (427.02 k allocations: 23.948 MiB, 90.06% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 44.032382 seconds (35.47 M allocations: 2.979 GiB, 18.27% gc time, 80.75% compilation time)
Running: laguerre_quadrature with k=1
  3.945207 seconds (3.24 M allocations: 182.139 MiB, 14.22% gc time, 99.92% compilation time)
Running: legendre_quadrature
  0.237680 seconds (211.40 k allocations: 12.234 MiB, 99.27% compilation time)
Running: lobatto_quadrature
  0.509929 seconds (340.48 k allocations: 20.721 MiB, 99.56% compilation time)
Running: radau_quadrature
  0.492870 seconds (463.95 k allocations: 28.524 MiB, 4.55% gc time, 99.57% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.149487 seconds (100.02 M allocations: 1.491 GiB, 0.70% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.091340 seconds (173.35 k allocations: 3.888 MiB, 26.15% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.792914 seconds (100.02 M allocations: 1.491 GiB, 0.53% gc time, 0.19% compilation time)
Running: rombergs_method
  0.471108 seconds (741.34 k allocations: 43.136 MiB, 94.47% compilation time)
Running: simpsons_rule
  0.062865 seconds (48.05 k allocations: 2.634 MiB, 96.63% compilation time)
Running: simpsons38_rule
  0.164422 seconds (111.45 k allocations: 5.956 MiB, 19.72% gc time, 98.69% compilation time)
Running: trapezoidal_rule
  0.320964 seconds (1.72 M allocations: 28.730 MiB, 27.84% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.098765 seconds (30.72 k allocations: 1.831 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.484508 seconds (298.12 k allocations: 15.914 MiB, 99.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.156223 seconds (94.22 k allocations: 2.707 MiB, 13.57% gc time, 99.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.198938 seconds (82.47 k allocations: 2.508 MiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.173281 seconds (65.08 k allocations: 2.154 MiB, 99.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.874656 seconds (510.51 k allocations: 162.280 MiB, 1.56% gc time, 17.85% compilation time)
Running: legendre_quadrature
  0.271879 seconds (42.08 k allocations: 2.439 MiB, 99.44% compilation time)
Running: lobatto_quadrature
  0.038768 seconds (16.06 k allocations: 1022.310 KiB, 99.56% compilation time)
Running: radau_quadrature
  0.018470 seconds (16.16 k allocations: 1.005 MiB, 99.10% compilation time)
Running: rectangle_rule_left
 13.076234 seconds (471.41 M allocations: 7.025 GiB, 7.07% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.643579 seconds (476.96 M allocations: 7.107 GiB, 6.86% gc time)
Running: rombergs_method
  0.397171 seconds (334.21 k allocations: 19.146 MiB, 2.00% gc time, 99.04% compilation time)
Running: simpsons_rule
  0.000022 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.101568 seconds (19.43 k allocations: 1.184 MiB, 99.92% compilation time)
Running: trapezoidal_rule
  0.050898 seconds (16.97 k allocations: 1.034 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014747 seconds (1.03 k allocations: 34.125 KiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=1
  0.096187 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.105130 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.103632 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.104524 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.442925 seconds (369.35 k allocations: 19.504 MiB, 99.52% compilation time)
Running: legendre_quadrature
  0.077468 seconds (1.28 k allocations: 65.891 KiB, 93.47% compilation time)
Running: lobatto_quadrature
  0.000621 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000102 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000628 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000241 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000749 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071699 seconds (1.04 k allocations: 56.469 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000021 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.024687 seconds (923 allocations: 39.281 KiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.019928 seconds (44.29 k allocations: 702.859 KiB, 91.86% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.189124 seconds (83.49 k allocations: 5.002 MiB, 10.80% gc time, 99.87% compilation time)
Running: chebyshev_quadrature with k=1
  0.303262 seconds (235.65 k allocations: 13.387 MiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.253326 seconds (289.14 k allocations: 16.397 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=3
  0.201900 seconds (239.80 k allocations: 13.552 MiB, 98.94% compilation time)
Running: chebyshev_quadrature with k=4
  0.175261 seconds (239.80 k allocations: 13.470 MiB, 98.86% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.906901 seconds (454.96 k allocations: 163.902 MiB, 5.75% gc time, 40.67% compilation time)
Running: legendre_quadrature
  0.174750 seconds (190.36 k allocations: 11.084 MiB, 95.63% compilation time)
Running: lobatto_quadrature
  0.275106 seconds (201.88 k allocations: 11.811 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.319821 seconds (201.88 k allocations: 11.808 MiB, 5.58% gc time, 99.49% compilation time)
Running: rectangle_rule_left
  0.615180 seconds (19.37 k allocations: 1.189 MiB, 3.77% compilation time)
Running: rectangle_rule_midpoint
  0.045072 seconds (25.55 k allocations: 1.616 MiB, 99.58% compilation time)
Running: rectangle_rule_right
  0.725568 seconds (17.90 k allocations: 1.099 MiB, 25.84% compilation time)
Running: rombergs_method
  0.236854 seconds (137.77 k allocations: 8.026 MiB, 98.89% compilation time)
Running: simpsons_rule
  0.022360 seconds (37.98 k allocations: 2.442 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.029623 seconds (43.94 k allocations: 2.785 MiB, 99.44% compilation time)
Running: trapezoidal_rule
  0.018634 seconds (43.20 k allocations: 1.730 MiB, 96.36% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027274 seconds (68.44 k allocations: 3.060 MiB, 96.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.203327 seconds (242.24 k allocations: 13.474 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.159609 seconds (296.17 k allocations: 16.388 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.411725 seconds (246.37 k allocations: 13.522 MiB, 5.86% gc time, 99.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.162878 seconds (246.37 k allocations: 13.537 MiB, 98.93% compilation time)
Running: hermite_quadrature with k=2
 15.887393 seconds (20.49 M allocations: 1.088 GiB, 11.30% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.407975 seconds (464.13 k allocations: 50.103 MiB, 7.91% gc time, 92.18% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.138634 seconds (282.35 k allocations: 15.726 MiB, 97.76% compilation time)
Running: legendre_quadrature
  0.172744 seconds (196.90 k allocations: 11.414 MiB, 98.84% compilation time)
Running: lobatto_quadrature
  0.201717 seconds (222.54 k allocations: 37.584 MiB, 10.84% gc time, 78.60% compilation time)
Running: radau_quadrature
  0.170851 seconds (219.12 k allocations: 30.267 MiB, 8.56% gc time, 78.10% compilation time)
Running: rectangle_rule_left
  0.049986 seconds (22.28 k allocations: 1.333 MiB, 97.45% compilation time)
Running: rectangle_rule_midpoint
  0.026725 seconds (27.36 k allocations: 1.703 MiB, 99.52% compilation time)
Running: rectangle_rule_right
  0.018878 seconds (19.02 k allocations: 1.153 MiB, 99.31% compilation time)
Running: rombergs_method
  0.205754 seconds (140.11 k allocations: 8.068 MiB, 98.83% compilation time)
Running: simpsons_rule
  0.076346 seconds (45.46 k allocations: 2.710 MiB, 99.70% compilation time)
Running: simpsons38_rule
  0.049936 seconds (58.91 k allocations: 3.170 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.032799 seconds (29.23 k allocations: 1.655 MiB, 99.23% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.047520 seconds (52.41 k allocations: 2.720 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.201682 seconds (237.76 k allocations: 13.243 MiB, 11.14% gc time, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.190154 seconds (291.35 k allocations: 16.171 MiB, 98.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.113741 seconds (241.91 k allocations: 13.334 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.229709 seconds (241.91 k allocations: 13.331 MiB, 99.07% compilation time)
Running: hermite_quadrature with k=2
  0.190177 seconds (175.13 k allocations: 10.126 MiB, 9.54% gc time, 98.65% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  7.732921 seconds (457.40 k allocations: 1.176 GiB, 29.28% gc time, 5.06% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.216392 seconds (277.64 k allocations: 15.624 MiB, 98.27% compilation time)
Running: legendre_quadrature
  0.259319 seconds (192.47 k allocations: 11.191 MiB, 8.68% gc time, 99.06% compilation time)
Running: lobatto_quadrature
  0.206360 seconds (213.30 k allocations: 23.311 MiB, 92.48% compilation time)
Running: radau_quadrature
  0.121828 seconds (212.45 k allocations: 21.244 MiB, 89.52% compilation time)
Running: rectangle_rule_left
  0.019680 seconds (20.07 k allocations: 1.228 MiB, 99.39% compilation time)
Running: rectangle_rule_midpoint
  0.020779 seconds (26.25 k allocations: 1.652 MiB, 99.40% compilation time)
Running: rectangle_rule_right
  0.017539 seconds (17.88 k allocations: 1.099 MiB, 99.25% compilation time)
Running: rombergs_method
  0.096479 seconds (135.95 k allocations: 7.879 MiB, 97.71% compilation time)
Running: simpsons_rule
  0.058909 seconds (40.80 k allocations: 2.541 MiB, 99.61% compilation time)
Running: simpsons38_rule
  0.043958 seconds (49.73 k allocations: 2.931 MiB, 74.26% compilation time)
Running: trapezoidal_rule
  0.049894 seconds (24.14 k allocations: 1.492 MiB, 40.46% gc time, 99.54% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.022832 seconds (40.61 k allocations: 2.580 MiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=1
  0.163758 seconds (236.14 k allocations: 13.461 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.167964 seconds (289.64 k allocations: 16.487 MiB, 97.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.132761 seconds (240.28 k allocations: 13.548 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=4
  0.142150 seconds (240.28 k allocations: 13.373 MiB, 98.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.449117 seconds (455.50 k allocations: 194.946 MiB, 5.35% gc time, 38.64% compilation time)
Running: legendre_quadrature
  0.165494 seconds (190.86 k allocations: 11.114 MiB, 10.65% gc time, 98.62% compilation time)
Running: lobatto_quadrature
  0.158296 seconds (202.38 k allocations: 11.836 MiB, 98.75% compilation time)
Running: radau_quadrature
  0.223950 seconds (202.38 k allocations: 11.842 MiB, 98.96% compilation time)
Running: rectangle_rule_left
  0.353369 seconds (19.89 k allocations: 1.214 MiB, 10.81% compilation time)
Running: rectangle_rule_midpoint
  0.013370 seconds (25.89 k allocations: 1.634 MiB, 99.25% compilation time)
Running: rectangle_rule_right
  0.138863 seconds (18.25 k allocations: 1.118 MiB, 10.80% compilation time)
Running: rombergs_method
  0.084465 seconds (149.07 k allocations: 8.790 MiB, 96.31% compilation time)
Running: simpsons_rule
  0.029166 seconds (38.61 k allocations: 2.470 MiB, 99.45% compilation time)
Running: simpsons38_rule
  0.038693 seconds (44.65 k allocations: 2.815 MiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.021738 seconds (44.13 k allocations: 1.763 MiB, 97.44% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.019986 seconds (40.35 k allocations: 2.510 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=1
  0.174672 seconds (236.73 k allocations: 13.418 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.348716 seconds (290.27 k allocations: 16.392 MiB, 6.08% gc time, 98.81% compilation time)
Running: chebyshev_quadrature with k=3
  0.253492 seconds (240.88 k allocations: 13.468 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.183431 seconds (240.87 k allocations: 13.545 MiB, 98.56% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.670644 seconds (456.21 k allocations: 149.638 MiB, 10.40% gc time, 28.45% compilation time)
Running: legendre_quadrature
  0.329552 seconds (191.45 k allocations: 11.126 MiB, 4.87% gc time, 99.26% compilation time)
Running: lobatto_quadrature
  0.269456 seconds (202.98 k allocations: 11.875 MiB, 99.08% compilation time)
Running: radau_quadrature
  0.289876 seconds (202.97 k allocations: 11.869 MiB, 99.29% compilation time)
Running: rectangle_rule_left
  0.570245 seconds (20.14 k allocations: 1.227 MiB, 7.26% compilation time)
Running: rectangle_rule_midpoint
  0.015421 seconds (25.89 k allocations: 1.635 MiB, 98.94% compilation time)
Running: rectangle_rule_right
  0.586880 seconds (18.20 k allocations: 1.115 MiB, 3.62% compilation time)
Running: rombergs_method
  0.133481 seconds (138.99 k allocations: 8.082 MiB, 97.61% compilation time)
Running: simpsons_rule
  0.022515 seconds (39.09 k allocations: 2.491 MiB, 99.35% compilation time)
Running: simpsons38_rule
  0.023502 seconds (45.35 k allocations: 2.842 MiB, 99.40% compilation time)
Running: trapezoidal_rule
  0.025531 seconds (56.28 k allocations: 1.959 MiB, 96.99% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.147810 seconds (152.10 k allocations: 9.115 MiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.106397 seconds (70.34 k allocations: 2.237 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.142973 seconds (105.50 k allocations: 2.900 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.244488 seconds (92.98 k allocations: 2.686 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.201297 seconds (72.52 k allocations: 2.280 MiB, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.430710 seconds (485.56 k allocations: 168.222 MiB, 8.38% gc time, 33.22% compilation time)
Running: legendre_quadrature
  0.135938 seconds (19.14 k allocations: 1.125 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000074 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000033 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.590758 seconds (590.00 M allocations: 8.792 GiB, 7.00% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.241211 seconds (592.75 M allocations: 8.833 GiB, 6.02% gc time)
Running: rombergs_method
  0.120301 seconds (20.91 k allocations: 1.197 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.000036 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031225 seconds (463 allocations: 22.578 KiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.019889 seconds (171 allocations: 7.859 KiB, 99.33% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.915616 seconds (209.94 M allocations: 3.138 GiB, 2.23% gc time, 0.98% compilation time)
Running: chebyshev_quadrature with k=1
  0.502206 seconds (422.88 k allocations: 23.670 MiB, 3.94% gc time, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
 16.220383 seconds (478.44 k allocations: 4.041 GiB, 2.78% gc time, 2.66% compilation time)
Running: chebyshev_quadrature with k=3
  7.624314 seconds (254.26 k allocations: 1.642 GiB, 3.75% gc time, 2.05% compilation time)
Running: chebyshev_quadrature with k=4
 10.390031 seconds (254.25 k allocations: 2.261 GiB, 2.29% gc time, 2.34% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.717750 seconds (492.93 k allocations: 13.255 GiB, 7.22% gc time, 0.84% compilation time)
Running: legendre_quadrature.
  7.939536 seconds (228.79 k allocations: 1.976 GiB, 0.80% gc time, 2.44% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.764281 seconds (8.24 M allocations: 13.384 GiB, 8.65% gc time, 0.49% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.528106 seconds (7.24 M allocations: 13.369 GiB, 8.53% gc time, 0.93% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.169586 seconds (22.88 k allocations: 1.394 MiB, 0.15% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.738974 seconds (31.46 k allocations: 1.956 MiB, 0.26% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.076153 seconds (23.09 k allocations: 1.403 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.120724 seconds (448.57 k allocations: 153.506 MiB, 2.69% gc time, 17.25% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.889507 seconds (200.04 M allocations: 2.983 GiB, 2.12% gc time, 0.44% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.228782 seconds (600.05 M allocations: 8.944 GiB, 6.16% gc time, 0.16% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.644542 seconds (600.03 M allocations: 8.943 GiB, 4.45% gc time, 0.05% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.058810 seconds (111.10 k allocations: 4.245 MiB, 94.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.170814 seconds (252.71 k allocations: 13.877 MiB, 97.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.181358 seconds (277.25 k allocations: 14.964 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.348655 seconds (224.24 k allocations: 11.981 MiB, 41.19% gc time, 99.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.159621 seconds (224.24 k allocations: 11.976 MiB, 99.06% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.425889 seconds (394.79 k allocations: 35.537 MiB, 93.99% compilation time)
Running: laguerre_quadrature with k=2
  0.186746 seconds (185.19 k allocations: 10.857 MiB, 80.17% compilation time)
Running: legendre_quadrature
  0.103903 seconds (149.17 k allocations: 8.338 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.019706 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018107 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.037437 seconds (19.35 k allocations: 1.157 MiB, 74.30% compilation time)
Running: rectangle_rule_midpoint
  0.031535 seconds (26.33 k allocations: 1.636 MiB, 63.90% compilation time)
Running: rectangle_rule_right
  0.040862 seconds (17.96 k allocations: 1.084 MiB, 56.19% compilation time)
Running: rombergs_method
  0.226115 seconds (176.58 k allocations: 10.195 MiB, 98.85% compilation time)
Running: simpsons_rule
  0.000283 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.037308 seconds (80.36 k allocations: 3.491 MiB, 97.51% compilation time)
Running: trapezoidal_rule
  0.104454 seconds (2.39 M allocations: 37.744 MiB, 43.96% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000647 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.106352 seconds (2.46 k allocations: 1.691 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.095448 seconds (2.71 k allocations: 2.355 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.114624 seconds (2.31 k allocations: 2.028 MiB, 87.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.096288 seconds (2.31 k allocations: 1.469 MiB, 84.13% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.337510 seconds (371.63 k allocations: 905.326 MiB, 5.62% gc time, 6.05% compilation time)
Running: legendre_quadrature
  0.063539 seconds (1.27 k allocations: 68.203 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000153 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000113 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.649225 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000459 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.602106 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077639 seconds (993 allocations: 56.609 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001088 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000154 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.107073 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.104219 seconds (2.79 k allocations: 780.188 KiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=3
  0.105973 seconds (2.39 k allocations: 661.047 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.101471 seconds (2.39 k allocations: 491.547 KiB, 99.34% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.204717 seconds (378.19 k allocations: 253.437 MiB, 16.54% compilation time)
Running: legendre_quadrature
  0.066052 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.047662 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000064 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.992266 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081029 seconds (1.21 k allocations: 64.875 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000470 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-25T05:55:05.230
