Julia Version 1.6.0-DEV.1122
Commit 9392bbe347 (2020-10-03 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Compat ───────────── v3.18.0
  Installed TimerOutputs ─────── v0.5.6
  Installed CEnum ────────────── v0.4.1
  Installed GPUCompiler ──────── v0.7.3
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.18.6
  Installed LLVM ─────────────── v3.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [61eb1bfa] + GPUCompiler v0.7.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fa961155] + CEnum v0.4.1
  [34da2185] + Compat v3.18.0
  [864edb3b] + DataStructures v0.18.6
  [61eb1bfa] + GPUCompiler v0.7.3
  [929cbde3] + LLVM v3.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [a759f4b9] + TimerOutputs v0.5.6
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GPUCompiler
Status `/tmp/jl_3XqW0X/Project.toml`
  [864edb3b] DataStructures v0.18.6
  [61eb1bfa] GPUCompiler v0.7.3
  [929cbde3] LLVM v3.2.0
  [a759f4b9] TimerOutputs v0.5.6
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [44cfe95a] Pkg
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_3XqW0X/Manifest.toml`
  [fa961155] CEnum v0.4.1
  [34da2185] Compat v3.18.0
  [864edb3b] DataStructures v0.18.6
  [61eb1bfa] GPUCompiler v0.7.3
  [929cbde3] LLVM v3.2.0
  [bac558e1] OrderedCollections v1.3.1
  [a759f4b9] TimerOutputs v0.5.6
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Compilation: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:7
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#29")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#29")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] compile(target::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:39
    [9] #native_code_execution#90
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:49 [inlined]
   [10] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:10
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:8
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [22] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
basic reflection: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function valid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#valid_kernel#35")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function valid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#valid_kernel#35")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [10] (::var"#4#37"{var"#valid_kernel#35"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:71
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:71
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:68
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
child functions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:89
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent(Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent#40"{var"#child#39"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent(Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent#40"{var"#child#39"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [11] native_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:28 [inlined]
   [12] (::var"#5#41"{var"#parent#40"{var"#child#39"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:94
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:94
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:91
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
sysimg: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:98
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function foobar(Ptr{Int64}, Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#foobar#42")(::Ptr{Int64}, ::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function foobar(Ptr{Int64}, Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#foobar#42")(::Ptr{Int64}, ::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [11] native_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:28 [inlined]
   [12] (::var"#6#43"{var"#foobar#42"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:105
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:105
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:101
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
tracked pointers: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:109
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel #477#kernel(Vector{Int64}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#477#kernel#44")(::Vector{Int64})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel #477#kernel(Vector{Int64}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#477#kernel#44")(::Vector{Int64})], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::Base.DevNull, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:116
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:110
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ none:6
   [24] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [25] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [26] _start()
      @ Base ./client.jl:485
CUDAnative.jl#278: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:120
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function checked_sub(Int64, Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for checked_sub(::Int64, ::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function checked_sub(Int64, Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for checked_sub(::Int64, ::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::Base.DevNull, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [10] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:125
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:125
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ none:6
   [23] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [24] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [25] _start()
      @ Base ./client.jl:485
LLVM D32593: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:134
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function D32593(Ptr{D32593_struct}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#D32593#45")(::Ptr{D32593_struct})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function D32593(Ptr{D32593_struct}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#D32593#45")(::Ptr{D32593_struct})], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::Base.DevNull, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [11] native_code_llvm(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:28
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:142
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:135
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
Julia-level throw lowering: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:145
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel #478#kernel(Ptr{Float32}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#478#kernel#46")(::Ptr{Float32})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel #478#kernel(Ptr{Float32}) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#478#kernel#46")(::Ptr{Float32})], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] compile(target::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:39
    [9] compile
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:35 [inlined]
   [10] #native_code_execution#90
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:49 [inlined]
   [11] native_code_execution(func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:48
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:148
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:146
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:67
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
basic reflection: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:161
  Test threw exception
  Expression: native_code_native(devnull, valid_kernel, Tuple{}) == nothing
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #480#valid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#480#valid_kernel#47")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #480#valid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#480#valid_kernel#47")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #native_code_native#86
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:34 [inlined]
   [11] native_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:161
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:158
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:157
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
basic reflection: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:162
  Test threw exception
  Expression: native_code_native(devnull, invalid_kernel, Tuple{}) == nothing
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #479#invalid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#479#invalid_kernel#48")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #479#invalid_kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#479#invalid_kernel#48")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #native_code_native#86
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:34 [inlined]
   [11] native_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:162
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:158
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:157
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
idempotency: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:166
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #481#kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#481#kernel#49")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #481#kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#481#kernel#49")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #native_code_native#86
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:34 [inlined]
   [11] native_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:170
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:169
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:157
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
compile for host after gpu: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:174
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function fromptx() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#fromptx#52"{var"#482#child#50"})()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function fromptx() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#fromptx#52"{var"#482#child#50"})()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #native_code_native#86
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:34 [inlined]
   [11] native_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:187
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:176
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:157
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
base intrinsics: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #483#foobar(Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#483#foobar#53")(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #483#foobar(Int64) for NativeCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#483#foobar#53")(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::Base.DevNull, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #native_code_llvm#85
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:29 [inlined]
   [11] native_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/native.jl:28 [inlined]
   [12] #8
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:205 [inlined]
   [13] withenv(f::var"#8#55"{var"#483#foobar#53"}, keyvals::Pair{String, Nothing})
      @ Base ./env.jl:161
   [14] (::var"#7#54"{var"#483#foobar#53"})()
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:204
   [15] with_logstate(f::Function, logstate::Any)
      @ Base.CoreLogging ./logging.jl:491
   [16] with_logger
      @ ./logging.jl:603 [inlined]
   [17] #collect_test_logs#46
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:51 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:203
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:200
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
   [27] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [28] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] top-level scope
      @ none:6
   [31] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [32] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [33] _start()
      @ Base ./client.jl:485
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{BigInt}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:233
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #163#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:233
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("passing and using non-bitstype argument", msg) && occursin("BigInt", msg)
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:233
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{Any}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:240
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #191#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:240
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("passing and using non-bitstype argument", msg) && occursin("Any", msg)
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:240
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{Union{Int32, Int64}}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:246
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #219#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:246
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("passing and using non-bitstype argument", msg) && occursin("Union{Int32, Int64}", msg)
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:246
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{Union{Int32, Int64}}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:252
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #247#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:252
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("passing and using non-bitstype argument", msg) && occursin("Union{Int32, Int64}", msg)
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:252
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{CleverType{BigInt}}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:259
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #275#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:259
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("passing and using non-bitstype argument", msg) && (occursin("CleverType", msg) && occursin("BigInt", msg))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:259
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:231
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
invalid LLVM IR: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{Int}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:270
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:268
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #309#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:270
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:268
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
invalid LLVM IR: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("invalid LLVM IR", msg) && (occursin(GPUCompiler.RUNTIME_FUNCTION, msg) && (occursin("[1] println", msg) && occursin(r"\[2\] .+foobar", msg)))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:270
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:268
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
invalid LLVM IR (ccall): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(foobar, Tuple{Ptr{Int}}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:282
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:280
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #343#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:282
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:280
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
invalid LLVM IR (ccall): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("invalid LLVM IR", msg) && (occursin(GPUCompiler.POINTER_FUNCTION, msg) && occursin(r"\[1\] .+foobar", msg))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:282
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:280
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
delayed bindings: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(kernel, Tuple{}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:293
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:291
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #377#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:293
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:291
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
delayed bindings: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("invalid LLVM IR", msg) && (occursin(GPUCompiler.DELAYED_BINDING, msg) && (occursin("use of 'undefined'", msg) && occursin(r"\[1\] .+kernel", msg)))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:293
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:291
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
dynamic call (invoke): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(kernel, Tuple{Int, Ptr{Int}}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:306
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:303
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #411#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:306
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:303
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
dynamic call (invoke): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("invalid LLVM IR", msg) && (occursin(GPUCompiler.DYNAMIC_CALL, msg) && (occursin("call to nospecialize_child", msg) && occursin(r"\[1\] .+kernel", msg)))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:306
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:303
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
dynamic call (apply): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(native_code_execution(func, Tuple{}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:5
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:318
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:316
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
┌ Error: Exception while generating log record in module Main at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│   exception =
│    UndefVarError: #445#msg not defined
│    Stacktrace:
│      [1] top-level scope
│        @ logging.jl:340
│      [2] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
│      [3] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:318
│      [4] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [5] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:316
│      [6] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [7] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
│      [8] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│      [9] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
│     [10] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [11] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:18
│     [12] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [13] top-level scope
│        @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Main ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:14
dynamic call (apply): Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
  Expression: ($(Expr(:escape, :((msg,)->begin
          occursin("invalid LLVM IR", msg) && (occursin(GPUCompiler.DYNAMIC_CALL, msg) && (occursin("call to println", msg) && occursin("[2] func", msg)))
      end))))(msg)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/util.jl:16
 [2] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:318
 [3] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [4] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:316
 [5] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [6] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:199
 [7] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [8] top-level scope
   @ ~/.julia/packages/GPUCompiler/5xT46/test/native.jl:3
exceptions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:9
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function foobar() for sm_70, Core.MethodInstance[MethodInstance for (::var"#foobar#115")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function foobar() for sm_70, Core.MethodInstance[MethodInstance for (::var"#foobar#115")()], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #ptx_code_llvm#164
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:33 [inlined]
   [11] ptx_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:32 [inlined]
   [12] (::var"#91#116"{var"#foobar#115"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:11
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:11
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:10
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:9
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
kernel argument attributes: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:20
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function kernel(Aggregate) for sm_70, Core.MethodInstance[MethodInstance for (::var"#kernel#117")(::Aggregate)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function kernel(Aggregate) for sm_70, Core.MethodInstance[MethodInstance for (::var"#kernel#117")(::Aggregate)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #ptx_code_llvm#164
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:33 [inlined]
   [11] ptx_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:32 [inlined]
   [12] (::var"#92#118"{var"#kernel#117"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:27
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:27
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:21
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:20
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:9
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [26] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
property_annotations: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:42
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #826#kernel() for sm_70, Core.MethodInstance[MethodInstance for (::var"#826#kernel#120")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #826#kernel() for sm_70, Core.MethodInstance[MethodInstance for (::var"#826#kernel#120")()], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #ptx_code_llvm#164
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:33 [inlined]
   [10] (::var"#94#121"{var"#826#kernel#120"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:45
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:45
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:43
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:20
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:9
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
calling convention: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:77
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #828#kernel() for sm_70, Core.MethodInstance[MethodInstance for (::var"#828#kernel#127")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #828#kernel() for sm_70, Core.MethodInstance[MethodInstance for (::var"#828#kernel#127")()], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #ptx_code_llvm#164
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:33 [inlined]
   [10] (::var"#100#128"{var"#828#kernel#127"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:80
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:80
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:78
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:20
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:9
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
child functions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function parent(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#parent#131"{var"#child#130"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function parent(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#parent#131"{var"#child#130"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37 [inlined]
   [12] (::var"#102#132"{var"#parent#131"{var"#child#130"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:104
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:104
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:98
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
kernel functions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:108
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of kernel entry(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#entry#134"{var"#nonentry#133"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of kernel entry(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#entry#134"{var"#nonentry#133"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] (::var"#103#135"{var"#entry#134"{var"#nonentry#133"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:115
   [12] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [13] sprint(::Function)
      @ Base ./strings/io.jl:101
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:115
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:109
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
child function reuse: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:144
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function parent1(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#parent1#142"{var"#831#child#141"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function parent1(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#parent1#142"{var"#831#child#141"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37 [inlined]
   [12] (::var"#109#143"{var"#parent1#142"{var"#831#child#141"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:154
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:154
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:148
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
child function reuse bis: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:166
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #833#parent1(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#833#parent1#148"{var"#child2#147", var"#child1#146"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #833#parent1(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#833#parent1#148"{var"#child2#147", var"#child1#146"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] #code_native#119
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:175
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:169
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
indirect sysimg function use: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:184
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #835#kernel(Ptr{Int32}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#835#kernel#150")(::Ptr{Int32})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #835#kernel(Ptr{Int32}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#835#kernel#150")(::Ptr{Int32})], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37 [inlined]
   [12] (::var"#111#151"{var"#835#kernel#150"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:196
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:196
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:190
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
LLVM intrinsics: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:201
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #836#kernel(Float64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#836#kernel#152")(::Float64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #836#kernel(Float64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#836#kernel#152")(::Float64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] #code_native#119
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:207
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:203
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
exception arguments: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:210
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #837#kernel(Ptr{Float64}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#837#kernel#153")(::Ptr{Float64})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #837#kernel(Ptr{Float64}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#837#kernel#153")(::Ptr{Float64})], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] #code_native#119
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:216
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:211
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
GC and TLS lowering: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:219
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #839#kernel(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#839#kernel#155"{var"#inner#154"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #839#kernel(Int64) for sm_70, Core.MethodInstance[MethodInstance for (::var"#839#kernel#155"{var"#inner#154"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #ptx_code_native#165
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:38 [inlined]
   [11] ptx_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:37 [inlined]
   [12] (::var"#112#156"{var"#839#kernel#155"{var"#inner#154"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:235
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:235
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:220
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
float boxes: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:261
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #841#kernel(Float32, Ptr{Float32}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#841#kernel#159")(::Float32, ::Ptr{Float32})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function #841#kernel(Float32, Ptr{Float32}) for sm_70, Core.MethodInstance[MethodInstance for (::var"#841#kernel#159")(::Float32, ::Ptr{Float32})], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #ptx_code_llvm#164
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:33 [inlined]
   [11] ptx_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/ptx.jl:32 [inlined]
   [12] (::var"#114#160"{var"#841#kernel#159"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:272
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:272
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:262
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:95
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/ptx.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:19
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
  Resolving package versions...
  Installed SPIRV_LLVM_Translator_jll ─ v9.0.0+1
  Installed SPIRV_Tools_jll ─────────── v2020.2.0+1
Updating `/tmp/jl_3XqW0X/Project.toml`
  [4a5d46fc] + SPIRV_LLVM_Translator_jll v9.0.0+1
  [6ac6d60f] + SPIRV_Tools_jll v2020.2.0+1
Updating `/tmp/jl_3XqW0X/Manifest.toml`
  [4a5d46fc] + SPIRV_LLVM_Translator_jll v9.0.0+1
  [6ac6d60f] + SPIRV_Tools_jll v2020.2.0+1
calling convention: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:10
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function kernel() for SPIRVCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#172")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function kernel() for SPIRVCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#172")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #spirv_code_llvm#179
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/spirv.jl:22 [inlined]
   [10] (::var"#170#173"{var"#kernel#172"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:13
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:13
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:11
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:10
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:9
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/spirv.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:22
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
kernel calling convention: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:9
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function kernel() for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#193")()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function kernel() for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#kernel#193")()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #gcn_code_llvm#225
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:29 [inlined]
   [10] (::var"#183#194"{var"#kernel#193"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:12
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:12
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:10
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:9
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
alloca addrspace: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:20
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #972#kernel(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#972#kernel#196")(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #972#kernel(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#972#kernel#196")(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] #gcn_code_llvm#225
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:29 [inlined]
   [10] (::var"#185#197"{var"#972#kernel#196"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:26
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:26
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:21
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:9
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
skip scalar trap: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #973#kernel() for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#973#kernel#200"{var"#trap#199", var"#workitem_idx_x#198"})()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #973#kernel() for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#973#kernel#200"{var"#trap#199", var"#workitem_idx_x#198"})()], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [11] gcn_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:33 [inlined]
   [12] (::var"#186#201"{var"#973#kernel#200"{var"#trap#199", var"#workitem_idx_x#198"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:47
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:47
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:38
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
child functions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:55
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent#203"{var"#child#202"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent#203"{var"#child#202"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [10] (::var"#187#204"{var"#parent#203"{var"#child#202"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:64
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:64
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:58
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
kernel functions: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:69
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel entry(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#entry#206"{var"#nonentry#205"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel entry(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#entry#206"{var"#nonentry#205"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [10] (::var"#188#207"{var"#entry#206"{var"#nonentry#205"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:76
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:76
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:70
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
child function reuse: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:82
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent1(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent1#209"{var"#977#child#208"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function parent1(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#parent1#209"{var"#977#child#208"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [10] (::var"#189#210"{var"#parent1#209"{var"#977#child#208"}})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:92
   [11] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(::Function)
      @ Base ./strings/io.jl:101
   [13] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:92
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:86
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ none:6
   [26] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [27] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [28] _start()
      @ Base ./client.jl:485
child function reuse bis: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:104
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #979#parent1(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#979#parent1#215"{var"#child2#214", var"#child1#213"})(::Int64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #979#parent1(Int64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#979#parent1#215"{var"#child2#214", var"#child1#213"})(::Int64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [11] gcn_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:113
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:107
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
indirect sysimg function use: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:122
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #981#kernel(Ptr{Int32}) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#981#kernel#217")(::Ptr{Int32})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #981#kernel(Ptr{Int32}) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#981#kernel#217")(::Ptr{Int32})], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::IOBuffer, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [11] gcn_code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:33 [inlined]
   [12] (::var"#191#218"{var"#981#kernel#217"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:134
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:134
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:128
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
LLVM intrinsics: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:139
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #982#kernel(Float64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#982#kernel#219")(::Float64)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #982#kernel(Float64) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#982#kernel#219")(::Float64)], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_native(io::Base.DevNull, job::CompilerJob; raw::Bool, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115
    [9] code_native
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:115 [inlined]
   [10] #gcn_code_native#226
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:34 [inlined]
   [11] gcn_code_native(io::Base.DevNull, func::Any, types::Any)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:33
   [12] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:145
   [13] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:141
   [15] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [16] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
float boxes: Error During Test at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:205
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #984#kernel(Float32, Ptr{Float32}) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#984#kernel#220")(::Float32, ::Ptr{Float32})], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of function #984#kernel(Float32, Ptr{Float32}) for GCNCompilerTarget, Core.MethodInstance[MethodInstance for (::var"#984#kernel#220")(::Float32, ::Ptr{Float32})], #undef)), gnu_pubnames=false, debug_info_kind=2)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
    [5] macro expansion
      @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
    [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
    [8] code_llvm(io::IOBuffer, job::CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93
    [9] code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/src/reflection.jl:93 [inlined]
   [10] #gcn_code_llvm#225
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:29 [inlined]
   [11] gcn_code_llvm
      @ ~/.julia/packages/GPUCompiler/5xT46/test/definitions/gcn.jl:28 [inlined]
   [12] (::var"#192#221"{var"#984#kernel#220"})(io::IOBuffer)
      @ Main ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:216
   [13] sprint(::Function; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [14] sprint(::Function)
      @ Base ./strings/io.jl:101
   [15] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:216
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:206
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:37
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/gcn.jl:3
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:23
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:14
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
ERROR: LoadError: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for kernel()], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(CompilerJob of kernel kernel() for NativeCompilerTarget, Core.MethodInstance[MethodInstance for kernel()], #undef)), gnu_pubnames=false, debug_info_kind=2)
Closest candidates are:
  Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
  [5] macro expansion
    @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [7] codegen(output::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
  [8] compile(target::Symbol, job::CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:39
  [9] compile
    @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:35 [inlined]
 [10] main()
    @ Main ~/.julia/packages/GPUCompiler/5xT46/examples/kernel.jl:28
 [11] top-level scope
    @ ~/.julia/packages/GPUCompiler/5xT46/examples/kernel.jl:31
in expression starting at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/examples/kernel.jl:31
example = kernel.jl: Test Failed at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/examples.jl:27
  Expression: success(pipeline(`$cmd $example`, stderr = stderr))
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/GPUCompiler/5xT46/test/examples.jl:27 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
 [3] (::var"#233#237"{String})()
   @ Main ~/.julia/packages/GPUCompiler/5xT46/test/examples.jl:21
 ──────────────────────────────────────────────────────────────────────────
                                   Time                   Allocations      
                           ──────────────────────   ───────────────────────
     Tot / % measured:          48.9s / 0.76%           1.70GiB / 0.67%    

 Section           ncalls     time   %tot     avg     alloc   %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 validation            49    206ms  55.2%  4.20ms   8.38MiB  71.7%   175KiB
 IR generation         47    166ms  44.6%  3.54ms   3.29MiB  28.2%  71.7KiB
   emission            47    166ms  44.6%  3.53ms   3.29MiB  28.1%  71.7KiB
 Julia front-end       48    777μs  0.21%  16.2μs   13.5KiB  0.11%     289B
 ──────────────────────────────────────────────────────────────────────────
Test Summary:                      | Pass  Fail  Error  Broken  Total
GPUCompiler                        |    2    21     37       2     62
  native                           |    2    20     13             35
    Compilation                    |                 1              1
    IR                             |    1            7              8
      basic reflection             |                 1              1
      unbound typevars             |    1                           1
      child functions              |                 1              1
      sysimg                       |                 1              1
      tracked pointers             |                 1              1
      CUDAnative.jl#278            |                 1              1
      LLVM D32593                  |                 1              1
      Julia-level throw lowering   |                 1              1
    assembly                       |    1            4              5
      basic reflection             |    1            2              3
      idempotency                  |                 1              1
      compile for host after gpu   |                 1              1
    errors                         |         20      1             21
      base intrinsics              |                 1              1
      non-isbits arguments         |         10                    10
      invalid LLVM IR              |          2                     2
      invalid LLVM IR (ccall)      |          2                     2
      delayed bindings             |          2                     2
      dynamic call (invoke)        |          2                     2
      dynamic call (apply)         |          2                     2
  PTX                              |                13             13
    IR                             |                 4              4
      exceptions                   |                 1              1
      kernel functions             |                 3              3
        kernel argument attributes |                 1              1
        property_annotations       |                 1              1
        calling convention         |                 1              1
    assembly                       |                 9              9
      child functions              |                 1              1
      kernel functions             |                 1              1
      child function reuse         |                 1              1
      child function reuse bis     |                 1              1
      indirect sysimg function use |                 1              1
      LLVM intrinsics              |                 1              1
      exception arguments          |                 1              1
      GC and TLS lowering          |                 1              1
      float boxes                  |                 1              1
  SPIR-V                           |                 1              1
    IR                             |                 1              1
      kernel functions             |                 1              1
        calling convention         |                 1              1
  GCN                              |                10       2     12
    IR                             |                 2              2
      kernel calling convention    |                 1              1
      alloca addrspace             |                 1              1
    assembly                       |                 8       2     10
      skip scalar trap             |                 1              1
      child functions              |                 1              1
      kernel functions             |                 1              1
      child function reuse         |                 1              1
      child function reuse bis     |                 1              1
      indirect sysimg function use |                 1              1
      LLVM intrinsics              |                 1              1
      float boxes                  |                 1              1
  examples                         |          1                     1
    example = kernel.jl            |          1                     1
ERROR: LoadError: Some tests did not pass: 2 passed, 21 failed, 37 errored, 2 broken.
in expression starting at /home/pkgeval/.julia/packages/GPUCompiler/5xT46/test/runtests.jl:12
ERROR: Package GPUCompiler errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
