Julia Version 1.6.0-DEV.1122
Commit 9392bbe347 (2020-10-03 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ts7n20/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ts7n20/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.246138 seconds (379.87 k allocations: 15.437 MiB, 5.52% gc time, 93.79% compilation time)
Running: chebyshev_quadrature with k=1
  1.336928 seconds (2.19 M allocations: 126.618 MiB, 2.67% gc time, 98.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.209239 seconds (409.38 k allocations: 23.548 MiB, 82.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.275241 seconds (473.75 k allocations: 26.613 MiB, 10.61% gc time, 89.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.247165 seconds (418.55 k allocations: 23.274 MiB, 6.37% gc time, 91.19% compilation time)
Running: jacobi_quadrature with α=β=1
 29.743123 seconds (36.40 M allocations: 3.000 GiB, 10.96% gc time, 80.85% compilation time)
Running: laguerre_quadrature with k=1
  2.162650 seconds (3.17 M allocations: 177.107 MiB, 4.66% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.182321 seconds (206.03 k allocations: 11.824 MiB, 99.12% compilation time)
Running: lobatto_quadrature
  0.253869 seconds (329.38 k allocations: 19.887 MiB, 99.20% compilation time)
Running: radau_quadrature
  0.282493 seconds (443.69 k allocations: 27.114 MiB, 8.30% gc time, 99.31% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.929926 seconds (100.02 M allocations: 1.491 GiB, 0.59% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.103680 seconds (172.46 k allocations: 3.827 MiB, 24.91% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 48.871582 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.05% compilation time)
Running: rombergs_method
  0.456924 seconds (722.71 k allocations: 41.720 MiB, 4.97% gc time, 99.52% compilation time)
Running: simpsons_rule
  0.031011 seconds (45.77 k allocations: 2.043 MiB, 94.25% compilation time)
Running: simpsons38_rule
  0.066444 seconds (108.48 k allocations: 5.751 MiB, 97.31% compilation time)
Running: trapezoidal_rule
  0.198081 seconds (1.51 M allocations: 25.672 MiB, 37.36% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.066294 seconds (30.98 k allocations: 1.865 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.403559 seconds (290.20 k allocations: 15.343 MiB, 7.93% gc time, 99.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.133192 seconds (93.80 k allocations: 2.675 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.193519 seconds (82.06 k allocations: 2.476 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.151137 seconds (64.67 k allocations: 2.122 MiB, 98.69% compilation time)
Running: jacobi_quadrature with α=β=1
  1.232710 seconds (503.48 k allocations: 161.784 MiB, 7.96% gc time, 34.40% compilation time)
Running: legendre_quadrature
  0.148454 seconds (41.09 k allocations: 2.364 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.016541 seconds (15.48 k allocations: 983.716 KiB, 99.04% compilation time)
Running: radau_quadrature
  0.017388 seconds (15.59 k allocations: 990.931 KiB, 99.13% compilation time)
Running: rectangle_rule_left
 15.564246 seconds (471.41 M allocations: 7.025 GiB, 5.89% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.247157 seconds (476.96 M allocations: 7.107 GiB, 6.05% gc time)
Running: rombergs_method
  0.281589 seconds (326.26 k allocations: 18.512 MiB, 2.68% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000059 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055470 seconds (18.91 k allocations: 1.146 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.047413 seconds (17.40 k allocations: 1.054 MiB, 99.81% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.020928 seconds (1.99 k allocations: 53.594 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=1
  0.080818 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.086401 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.096399 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.093381 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.241030 seconds (363.64 k allocations: 18.992 MiB, 99.19% compilation time)
Running: legendre_quadrature
  0.073583 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000050 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000346 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000235 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000329 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.080967 seconds (1.04 k allocations: 56.531 KiB, 99.78% compilation time)
Running: simpsons_rule
  0.000029 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024009 seconds (923 allocations: 39.281 KiB, 99.71% compilation time)
Running: trapezoidal_rule
  0.020773 seconds (44.33 k allocations: 704.859 KiB, 93.72% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.047984 seconds (72.31 k allocations: 4.214 MiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.175576 seconds (230.61 k allocations: 12.965 MiB, 10.85% gc time, 98.77% compilation time)
Running: chebyshev_quadrature with k=2
  0.173561 seconds (283.17 k allocations: 15.881 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.169744 seconds (234.76 k allocations: 13.133 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.169148 seconds (234.76 k allocations: 13.089 MiB, 98.83% compilation time)
Running: jacobi_quadrature with α=β=1
  2.507189 seconds (446.73 k allocations: 163.220 MiB, 4.04% gc time, 16.00% compilation time)
Running: legendre_quadrature
  0.138520 seconds (185.44 k allocations: 10.708 MiB, 98.36% compilation time)
Running: lobatto_quadrature
  0.150700 seconds (196.61 k allocations: 11.411 MiB, 98.72% compilation time)
Running: radau_quadrature
  0.141831 seconds (196.61 k allocations: 11.409 MiB, 98.54% compilation time)
Running: rectangle_rule_left
  0.676330 seconds (18.82 k allocations: 1.147 MiB, 3.09% gc time, 6.61% compilation time)
Running: rectangle_rule_midpoint
  0.019956 seconds (24.67 k allocations: 1.555 MiB, 99.26% compilation time)
Running: rectangle_rule_right
  0.638110 seconds (17.39 k allocations: 1.065 MiB, 3.52% compilation time)
Running: rombergs_method
  0.098596 seconds (134.27 k allocations: 7.759 MiB, 97.38% compilation time)
Running: simpsons_rule
  0.022464 seconds (27.54 k allocations: 1.729 MiB, 99.33% compilation time)
Running: simpsons38_rule
  0.027563 seconds (42.37 k allocations: 2.678 MiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.021151 seconds (44.10 k allocations: 1.772 MiB, 97.17% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.024353 seconds (99.53 k allocations: 2.979 MiB, 94.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.142152 seconds (237.20 k allocations: 13.054 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.183043 seconds (290.20 k allocations: 15.871 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=3
  0.197536 seconds (241.33 k allocations: 13.116 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.175083 seconds (241.34 k allocations: 13.138 MiB, 10.82% gc time, 98.92% compilation time)
Running: hermite_quadrature with k=2
 11.996357 seconds (20.10 M allocations: 1.056 GiB, 9.53% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.346428 seconds (455.90 k allocations: 49.401 MiB, 8.33% gc time, 91.25% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.214612 seconds (276.26 k allocations: 15.239 MiB, 98.31% compilation time)
Running: legendre_quadrature
  0.136726 seconds (191.98 k allocations: 11.070 MiB, 98.31% compilation time)
Running: lobatto_quadrature
  0.206670 seconds (217.27 k allocations: 37.185 MiB, 12.35% gc time, 74.89% compilation time)
Running: radau_quadrature
  0.286450 seconds (213.85 k allocations: 29.846 MiB, 16.11% gc time, 92.22% compilation time)
Running: rectangle_rule_left
  0.020802 seconds (21.73 k allocations: 1.293 MiB, 99.27% compilation time)
Running: rectangle_rule_midpoint
  0.021118 seconds (26.47 k allocations: 1.642 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.019773 seconds (18.50 k allocations: 1.117 MiB, 99.29% compilation time)
Running: rombergs_method
  0.108568 seconds (136.74 k allocations: 7.808 MiB, 97.99% compilation time)
Running: simpsons_rule
  0.026937 seconds (39.38 k allocations: 2.061 MiB, 98.67% compilation time)
Running: simpsons38_rule
  0.029740 seconds (57.34 k allocations: 3.063 MiB, 98.56% compilation time)
Running: trapezoidal_rule
  0.022152 seconds (30.13 k allocations: 1.697 MiB, 98.69% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.057894 seconds (59.92 k allocations: 2.280 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.187030 seconds (232.72 k allocations: 12.824 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.217752 seconds (285.38 k allocations: 15.647 MiB, 12.17% gc time, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.178486 seconds (236.87 k allocations: 12.928 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=4
  0.196204 seconds (236.87 k allocations: 12.991 MiB, 98.81% compilation time)
Running: hermite_quadrature with k=2
  0.138432 seconds (170.78 k allocations: 9.790 MiB, 98.40% compilation time)
Running: jacobi_quadrature with α=β=1
  6.620859 seconds (449.16 k allocations: 1.175 GiB, 19.45% gc time, 6.28% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.169982 seconds (271.55 k allocations: 15.064 MiB, 98.07% compilation time)
Running: legendre_quadrature
  0.189687 seconds (187.55 k allocations: 10.817 MiB, 10.36% gc time, 98.68% compilation time)
Running: lobatto_quadrature
  0.214535 seconds (208.03 k allocations: 22.913 MiB, 85.44% compilation time)
Running: radau_quadrature
  0.184598 seconds (207.18 k allocations: 20.849 MiB, 89.25% compilation time)
Running: rectangle_rule_left
  0.025010 seconds (19.52 k allocations: 1.188 MiB, 99.43% compilation time)
Running: rectangle_rule_midpoint
  0.021247 seconds (25.36 k allocations: 1.591 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.020423 seconds (17.36 k allocations: 1.062 MiB, 99.32% compilation time)
Running: rombergs_method
  0.094785 seconds (132.58 k allocations: 7.622 MiB, 97.41% compilation time)
Running: simpsons_rule
  0.021500 seconds (31.90 k allocations: 1.853 MiB, 99.00% compilation time)
Running: simpsons38_rule
  0.023183 seconds (48.16 k allocations: 2.821 MiB, 98.92% compilation time)
Running: trapezoidal_rule
  0.018042 seconds (25.05 k allocations: 1.535 MiB, 98.84% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.061975 seconds (30.87 k allocations: 1.875 MiB, 42.83% gc time, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.169572 seconds (231.10 k allocations: 13.042 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=2
  0.222751 seconds (283.67 k allocations: 15.986 MiB, 98.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.154603 seconds (235.25 k allocations: 13.150 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.155343 seconds (235.25 k allocations: 12.971 MiB, 98.46% compilation time)
Running: jacobi_quadrature with α=β=1
  1.869778 seconds (447.26 k allocations: 194.232 MiB, 7.45% gc time, 24.55% compilation time)
Running: legendre_quadrature
  0.176873 seconds (185.93 k allocations: 10.745 MiB, 98.58% compilation time)
Running: lobatto_quadrature
  0.189466 seconds (197.11 k allocations: 11.437 MiB, 14.32% gc time, 98.63% compilation time)
Running: radau_quadrature
  0.160466 seconds (197.11 k allocations: 11.443 MiB, 98.50% compilation time)
Running: rectangle_rule_left
  0.340105 seconds (19.34 k allocations: 1.173 MiB, 7.22% compilation time)
Running: rectangle_rule_midpoint
  0.020167 seconds (25.01 k allocations: 1.573 MiB, 99.35% compilation time)
Running: rectangle_rule_right
  0.161630 seconds (17.73 k allocations: 1.081 MiB, 13.37% compilation time)
Running: rombergs_method
  0.174721 seconds (145.02 k allocations: 8.483 MiB, 98.00% compilation time)
Running: simpsons_rule
  0.027724 seconds (28.23 k allocations: 1.758 MiB, 99.26% compilation time)
Running: simpsons38_rule
  0.026518 seconds (43.08 k allocations: 2.708 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.019240 seconds (45.03 k allocations: 1.805 MiB, 97.11% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030644 seconds (31.64 k allocations: 1.826 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=1
  0.167463 seconds (231.69 k allocations: 12.988 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.188095 seconds (284.30 k allocations: 15.891 MiB, 11.74% gc time, 98.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.159224 seconds (235.84 k allocations: 13.067 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.153022 seconds (235.84 k allocations: 13.142 MiB, 98.33% compilation time)
Running: jacobi_quadrature with α=β=1
  1.189881 seconds (447.97 k allocations: 148.920 MiB, 10.61% gc time, 38.26% compilation time)
Running: legendre_quadrature
  0.144878 seconds (186.53 k allocations: 10.750 MiB, 98.31% compilation time)
Running: lobatto_quadrature
  0.166126 seconds (197.71 k allocations: 11.461 MiB, 98.48% compilation time)
Running: radau_quadrature
  0.173252 seconds (197.70 k allocations: 11.454 MiB, 12.47% gc time, 98.45% compilation time)
Running: rectangle_rule_left
  0.752001 seconds (19.59 k allocations: 1.186 MiB, 3.93% compilation time)
Running: rectangle_rule_midpoint
  0.021131 seconds (25.01 k allocations: 1.574 MiB, 99.09% compilation time)
Running: rectangle_rule_right
  0.711957 seconds (17.69 k allocations: 1.078 MiB, 3.09% compilation time)
Running: rombergs_method
  0.122053 seconds (135.49 k allocations: 7.816 MiB, 97.02% compilation time)
Running: simpsons_rule
  0.027225 seconds (28.93 k allocations: 1.785 MiB, 99.33% compilation time)
Running: simpsons38_rule
  0.024507 seconds (43.78 k allocations: 2.734 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.019512 seconds (57.27 k allocations: 2.006 MiB, 95.13% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.135566 seconds (146.68 k allocations: 8.789 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.146551 seconds (69.93 k allocations: 2.205 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=2
  0.150819 seconds (105.09 k allocations: 2.868 MiB, 97.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.152824 seconds (92.57 k allocations: 2.654 MiB, 97.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.149592 seconds (72.10 k allocations: 2.248 MiB, 98.03% compilation time)
Running: jacobi_quadrature with α=β=1
  1.995226 seconds (479.98 k allocations: 167.751 MiB, 8.91% gc time, 26.14% compilation time)
Running: legendre_quadrature
  0.104443 seconds (18.73 k allocations: 1.094 MiB, 99.78% compilation time)
Running: lobatto_quadrature
  0.000088 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000043 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 24.663259 seconds (590.00 M allocations: 8.792 GiB, 6.61% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.906839 seconds (592.75 M allocations: 8.833 GiB, 6.43% gc time)
Running: rombergs_method
  0.143535 seconds (20.51 k allocations: 1.165 MiB, 96.79% compilation time)
Running: simpsons_rule
  0.000046 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.037774 seconds (463 allocations: 22.578 KiB, 99.72% compilation time)
Running: trapezoidal_rule
  0.024080 seconds (179 allocations: 8.766 KiB, 99.53% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.834093 seconds (629.32 M allocations: 9.387 GiB, 5.14% gc time, 0.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.397928 seconds (413.93 k allocations: 22.948 MiB, 5.68% gc time, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
 18.011887 seconds (468.57 k allocations: 4.040 GiB, 2.43% gc time, 2.60% compilation time)
Running: chebyshev_quadrature with k=3
  8.295698 seconds (249.12 k allocations: 1.642 GiB, 4.05% gc time, 2.44% compilation time)
Running: chebyshev_quadrature with k=4
 10.298812 seconds (249.12 k allocations: 2.260 GiB, 1.84% gc time, 3.82% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.902405 seconds (483.98 k allocations: 13.254 GiB, 9.69% gc time, 1.47% compilation time)
Running: legendre_quadrature.
 10.078929 seconds (223.19 k allocations: 1.976 GiB, 1.38% gc time, 2.59% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.184115 seconds (8.23 M allocations: 13.383 GiB, 8.18% gc time, 0.78% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.092732 seconds (7.23 M allocations: 13.369 GiB, 9.52% gc time, 0.64% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.247623 seconds (22.25 k allocations: 1.347 MiB, 0.21% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.865270 seconds (30.45 k allocations: 1.884 MiB, 0.23% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.216575 seconds (22.45 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.775156 seconds (438.04 k allocations: 152.661 MiB, 1.85% gc time, 12.48% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.503336 seconds (600.04 M allocations: 8.943 GiB, 6.37% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.117050 seconds (600.05 M allocations: 8.943 GiB, 5.41% gc time, 1.44% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.296669 seconds (600.03 M allocations: 8.943 GiB, 5.90% gc time, 0.18% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.041856 seconds (180.45 k allocations: 4.404 MiB, 87.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.158420 seconds (247.70 k allocations: 13.449 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.169924 seconds (272.34 k allocations: 14.527 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.180619 seconds (220.25 k allocations: 11.631 MiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=4
  0.161812 seconds (220.25 k allocations: 11.626 MiB, 99.15% compilation time)
Running: jacobi_quadrature with α=β=1
  0.307732 seconds (388.84 k allocations: 34.971 MiB, 92.54% compilation time)
Running: laguerre_quadrature with k=2
  0.198519 seconds (180.54 k allocations: 10.477 MiB, 81.37% compilation time)
Running: legendre_quadrature
  0.107839 seconds (145.99 k allocations: 8.082 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.018955 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.025908 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.045248 seconds (18.88 k allocations: 1.122 MiB, 61.93% compilation time)
Running: rectangle_rule_midpoint
  0.028466 seconds (25.48 k allocations: 1.576 MiB, 66.39% compilation time)
Running: rectangle_rule_right
  0.039302 seconds (17.48 k allocations: 1.049 MiB, 55.98% compilation time)
Running: rombergs_method
  0.202387 seconds (170.74 k allocations: 9.790 MiB, 98.71% compilation time)
Running: simpsons_rule
  0.001020 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.149241 seconds (78.86 k allocations: 3.384 MiB, 76.04% gc time, 99.54% compilation time)
Running: trapezoidal_rule
  0.091376 seconds (2.39 M allocations: 37.691 MiB, 31.48% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.006534 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.131555 seconds (2.46 k allocations: 1.691 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.112098 seconds (2.71 k allocations: 2.355 MiB, 97.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.104336 seconds (2.31 k allocations: 2.028 MiB, 96.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.103728 seconds (2.31 k allocations: 1.469 MiB, 97.77% compilation time)
Running: jacobi_quadrature with α=β=1
  4.845494 seconds (365.92 k allocations: 904.797 MiB, 6.63% gc time, 7.76% compilation time)
Running: legendre_quadrature
  0.064978 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000158 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000110 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.658324 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000353 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.780943 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.059397 seconds (997 allocations: 56.672 KiB, 99.65% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000583 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000250 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.099725 seconds (2.53 k allocations: 579.203 KiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.098940 seconds (2.79 k allocations: 780.188 KiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.150483 seconds (2.39 k allocations: 661.047 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.122139 seconds (2.39 k allocations: 491.547 KiB, 99.28% compilation time)
Running: jacobi_quadrature with α=β=1
  1.210090 seconds (372.48 k allocations: 252.962 MiB, 13.30% gc time, 31.83% compilation time)
Running: legendre_quadrature
  0.071833 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000073 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000033 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.322582 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000138 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.332518 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074226 seconds (1.21 k allocations: 64.938 KiB, 98.94% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000287 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
