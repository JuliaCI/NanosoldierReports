Julia Version 1.6.0-DEV.1122
Commit 9392bbe347 (2020-10-03 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_qVg9Me/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_qVg9Me/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.012329146442630693 -0.03892723066778265; -0.012329146442630693 0.0 -0.20317780654011885; 0.03892723066778265 0.20317780654011885 0.0])
dAA = so3([0.0 0.07658086238813029 -0.14081002726104494; -0.07658086238813029 0.0 -0.034410830705459694; 0.14081002726104494 0.034410830705459694 0.0])
dAA = so3([0.0 0.10310048836877311 0.25435105473075165; -0.10310048836877311 0.0 0.2075175604375744; -0.25435105473075165 -0.2075175604375744 0.0])
dAA = Quaternion(0.9995456577204126, [-0.02025767497786438, -0.01944171326264216, -0.010960133309970232])
dAA = SO3([0.994913134442105 -0.03467983710646666 -0.09457887614501939; 0.023370042146665753 0.9927186212459734 -0.11816759353374656; 0.09798824442069082 0.11535617855044702 0.988479264337694])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9208298077721444 0.1712060199261166 -0.3503726071760945; -0.20106816229936328 0.978279324214388 -0.05040989906950033; 0.3341317991868966 0.11686771391491517 0.9352528418649306]), [2.0317780654011885, -0.3892723066778265, -0.12329146442630692])
xj = SE3(SO3([0.993783612202802 0.0575728335263487 -0.09528641538487075; -0.047733673420041506 0.9935872412619806 0.10249824595199414; 0.10057648104293378 -0.09731270647327614 0.9901588804933612]), [-2.075175604375744, 2.5435105473075166, -1.031004883687731])
Dx = SE3(SO3([0.9583090951529413 -0.1792792491533373 0.22249186270550722; 0.13519901455050704 0.9704899570733188 0.19967591162781742; -0.25172386579687367 -0.16127056161260106 0.9542677304328349]), [-4.674790535067619, 2.059863244441885, 0.44218122220583056])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
