Julia Version 1.6.0-DEV.1122
Commit 9392bbe347 (2020-10-03 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_fAVsLY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_fAVsLY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723347099161633
curgen: 20 fitness: 0.21723347099161633
curgen: 30 fitness: 0.21723347099161633
curgen: 40 fitness: 0.21723347099161633
curgen: 50 fitness: 0.21723347099161633
CoordinateCreature{Vector{Float64}}([0.22248858189746334], -0.21723347099161633) 0.22248858189746334 -0.21723347099161633
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257977617966415
curgen: 100 fitness: 3.258319281027224
curgen: 150 fitness: 3.258361267867955
curgen: 200 fitness: 3.258457790340386
curgen: 250 fitness: 3.258457790340386
curgen: 300 fitness: 3.25846550361074
curgen: 350 fitness: 3.2584666315813244
curgen: 400 fitness: 3.2584666315813244
curgen: 450 fitness: 3.258485477960839
curgen: 500 fitness: 3.258485477960839
CoordinateCreature{Vector{Float64}}([-0.2225440520691049, -0.22290138752984973, -0.2226905996063139, 0.22233625296175102, -0.22253746061439428, 0.2225316097733714, 0.2224162789315101, 0.2224756860040816, 0.22245664623411432, 0.22248502757762498, -0.2224873373546032, -0.2226962514068513, -0.2221349618399592, -0.22250534835165245, 0.22248425509948458], -3.258485477960839) [-0.2225440520691049, -0.22290138752984973, -0.2226905996063139, 0.22233625296175102, -0.22253746061439428, 0.2225316097733714, 0.2224162789315101, 0.2224756860040816, 0.22245664623411432, 0.22248502757762498, -0.2224873373546032, -0.2226962514068513, -0.2221349618399592, -0.22250534835165245, 0.22248425509948458] -3.258485477960839
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0009166910659246241
curgen: 100 fitness: -0.0007685621698101386
curgen: 150 fitness: -0.0007375265464588665
curgen: 200 fitness: -0.0007323085062296286
curgen: 250 fitness: -0.000617971385167948
curgen: 300 fitness: -0.000617971385167948
curgen: 350 fitness: -0.000617971385167948
curgen: 400 fitness: -0.000617971385167948
curgen: 450 fitness: -0.0005663911629198992
curgen: 500 fitness: -0.0005624552648271219
CoordinateCreature{Vector{Float64}}([0.0006572374361893665, 0.0005548293544651306, 0.0004439418987306869, -0.00022938020892699891, -0.0007288349964870147, 0.0004459627972631269, 0.000302953602294191, 0.0002102792978888644, 4.872733463246598e-5, -7.669985341158929e-5, 9.812327015880975e-5, 0.0007423752163768963, 0.0004161776834823111, -0.00018230665505313947, -0.0004517173699227883], 0.0005624552648271219) [0.0006572374361893665, 0.0005548293544651306, 0.0004439418987306869, -0.00022938020892699891, -0.0007288349964870147, 0.0004459627972631269, 0.000302953602294191, 0.0002102792978888644, 4.872733463246598e-5, -7.669985341158929e-5, 9.812327015880975e-5, 0.0007423752163768963, 0.0004161776834823111, -0.00018230665505313947, -0.0004517173699227883] 0.0005624552648271219
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
