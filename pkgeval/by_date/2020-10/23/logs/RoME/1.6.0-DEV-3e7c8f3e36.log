Current time is 2020-10-24T14:18:34.803
Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T14:18:36.974
   Resolving package versions...
   Installed ZygoteRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed ArnoldiMethod â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
   Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed PropertyDicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed RoME â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed ProgressMeter â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed PositiveFactorizations â”€â”€â”€â”€â”€â”€â”€ v0.2.3
   Installed TranscodingStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed ApproxManifoldProducts â”€â”€â”€â”€â”€â”€â”€ v0.1.4
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed JLD2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.4
   Installed Combinatorics â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed NamedDims â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.28
   Installed MbedTLS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.16.8+0
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed FunctionalStateMachine â”€â”€â”€â”€â”€â”€â”€ v0.2.9
   Installed TensorCast â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.2
   Installed VectorizationBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.33
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
   Installed FixedPointNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed Unmarshal â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.8
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed LazyJSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed LightGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed SLEEFPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.5
   Installed TransformUtils â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.6
   Installed Nullables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed CpuId â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed CategoricalArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.33.2
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed PDMats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.1
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed Inflate â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed SIMDPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.25
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed FileIO â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.3
   Installed Rotations â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed LazyStack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.7
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed Graphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed IteratorInterfaceExtensions â”€â”€ v1.0.0
   Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.9
   Installed JSON2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.2
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed Neo4j â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.0
   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.7
   Installed StatsFuns â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed MetaGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.6
   Installed NLsolve â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.4.1
   Installed DistributedFactorGraphs â”€â”€â”€â”€â”€â”€ v0.10.6
   Installed BSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.6
   Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed StructTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed Distributions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.23.12
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed IncrementalInference â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.16.2
   Installed Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
   Installed CoordinateTransformations â”€â”€â”€â”€ v0.6.0
   Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed SimpleTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.3
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
   Installed Rmath_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2+1
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
   Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed Distances â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
   Installed KernelDensityEstimate â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.4.1
   Installed LineSearches â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.1.0
   Installed FiniteDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.0
     Cloning [d41bc354-129a-5804-8e4c-c37616107c6c] NLSolversBase from https://github.com/JuliaNLSolvers/NLSolversBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed NLSolversBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.7.1
     Cloning [429524aa-4258-5aef-a3af-852621145aeb] Optim from https://github.com/JuliaNLSolvers/Optim.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Optim â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.0
     Cloning [189a3867-3050-52da-a836-e630ba90ab69] Reexport from https://github.com/simonster/Reexport.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
     Cloning [02c8fc9c-b97f-50b9-bbe4-9be30ff0a78a] XML2_jll from https://github.com/JuliaBinaryWrappers/XML2_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
     Cloning [f6369f11-7733-5829-9624-2563aa707210] ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
Updating `~/.julia/environments/v1.6/Project.toml`
  [91fb55c2] + RoME v0.9.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9bbbb610] + ApproxManifoldProducts v0.1.4
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.13.6
  [fbb218c0] + BSON v0.2.6
  [324d7699] + CategoricalArrays v0.8.3
  [944b1d66] + CodecZlib v0.7.0
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.22.0
  [150eb455] + CoordinateTransformations v0.6.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.8
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.2
  [b5cc3c7e] + DistributedFactorGraphs v0.10.6
  [31c24e10] + Distributions v0.23.12
  [ffbed154] + DocStringExtensions v0.8.3
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [5789e2e9] + FileIO v1.4.3
  [1a297f60] + FillArrays v0.9.7
  [6a86dc24] + FiniteDiff v2.7.0
  [53c48c17] + FixedPointNumbers v0.8.4
  [f6369f11] + ForwardDiff v0.10.12
  [3e9e306e] + FunctionalStateMachine v0.2.9
  [86223c79] + Graphs v0.10.3
  [cd3eb016] + HTTP v0.8.19
  [904591bb] + IncrementalInference v0.16.2
  [d25df0c9] + Inflate v0.1.2
  [83e8ac13] + IniFile v0.5.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [033835bb] + JLD2 v0.2.4
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [2535ab7d] + JSON2 v0.3.2
  [2472808a] + KernelDensityEstimate v0.5.2
  [fc18253b] + LazyJSON v0.2.2
  [1fad7336] + LazyStack v0.0.7
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.2
  [626554b9] + MetaGraphs v0.6.6
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.1
  [2774e3e8] + NLsolve v4.4.1
  [77ba4419] + NaNMath v0.3.4
  [356022a1] + NamedDims v0.2.28
  [d2adbeaf] + Neo4j v2.0.0
  [4d1e1d77] + Nullables v1.0.0
  [6fe1bfb0] + OffsetArrays v1.3.1
  [429524aa] + Optim v1.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.10.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [92933f4c] + ProgressMeter v1.4.0
  [f8a19df8] + PropertyDicts v0.1.0
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [91fb55c2] + RoME v0.9.2
  [6038ab10] + Rotations v1.0.1
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [699a6c99] + SimpleTraits v0.9.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.2
  [4c63d2b9] + StatsFuns v0.9.5
  [856f2bd8] + StructTypes v1.1.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [02d47bb6] + TensorCast v0.3.2
  [f269a46b] + TimeZones v1.4.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [9b8138ad] + TransformUtils v0.2.6
  [3a884ed6] + UnPack v1.0.2
  [cbff2730] + Unmarshal v0.4.0
  [3d5dd08c] + VectorizationBase v0.12.33
  [700de1a5] + ZygoteRules v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building SLEEFPirates â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
    Building TimeZones â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mPropertyDicts[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mTransformUtils[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mPositiveFactorizations[39m
[32m  âœ“ [39m[90mNullables[39m
[32m  âœ“ [39m[90mInvertedIndices[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mPDMats[39m
[32m  âœ“ [39m[90mOffsetArrays[39m
[32m  âœ“ [39m[90mDocStringExtensions[39m
[32m  âœ“ [39m[90mStructTypes[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mProgressMeter[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mInflate[39m
[32m  âœ“ [39m[90mDistances[39m
[32m  âœ“ [39m[90mBSON[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mPooledArrays[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mCombinatorics[39m
[32m  âœ“ [39m[90mFillArrays[39m
[32m  âœ“ [39m[90mTranscodingStreams[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mRmath_jll[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mRmath[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mFixedPointNumbers[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mNamedDims[39m
[32m  âœ“ [39m[90mFunctionalStateMachine[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mSIMDPirates[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mJSON2[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSLEEFPirates[39m
[32m  âœ“ [39m[90mHTTP[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mZygoteRules[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mSimpleTraits[39m
[91m  âœ— [39m[90mCodecZlib[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mArnoldiMethod[39m
[32m  âœ“ [39m[90mCoordinateTransformations[39m
[32m  âœ“ [39m[90mRotations[39m
[32m  âœ“ [39m[90mLazyJSON[39m
[32m  âœ“ [39m[90mFiniteDiff[39m
[32m  âœ“ [39m[90mColorTypes[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mCategoricalArrays[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mLazyStack[39m
[32m  âœ“ [39m[90mQuadGK[39m
[32m  âœ“ [39m[90mGraphs[39m
[32m  âœ“ [39m[90mUnmarshal[39m
[91m  âœ— [39m[90mJLD2[39m
[32m  âœ“ [39m[90mColors[39m
[32m  âœ“ [39m[90mStatsFuns[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39m[90mLightGraphs[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mTensorCast[39m
[32m  âœ“ [39m[90mDataFrames[39m
[32m  âœ“ [39m[90mNLSolversBase[39m
[32m  âœ“ [39m[90mDistributions[39m
[91m  âœ— [39m[90mMetaGraphs[39m
[32m  âœ“ [39m[90mNeo4j[39m
[32m  âœ“ [39m[90mLineSearches[39m
[32m  âœ“ [39m[90mNLsolve[39m
[32m  âœ“ [39m[90mOptim[39m
[32m  âœ“ [39m[90mKernelDensityEstimate[39m
[32m  âœ“ [39m[90mDistributedFactorGraphs[39m
[32m  âœ“ [39m[90mApproxManifoldProducts[39m
[91m  âœ— [39m[90mIncrementalInference[39m
[91m  âœ— [39mRoME
91 dependencies successfully precompiled, 5 errored (5 already precompiled)
Starting tests at 2020-10-24T15:04:00.757
     Testing RoME
Status `/tmp/jl_vlYbp0/Project.toml`
  [9bbbb610] ApproxManifoldProducts v0.1.4
  [150eb455] CoordinateTransformations v0.6.0
  [b5cc3c7e] DistributedFactorGraphs v0.10.6
  [31c24e10] Distributions v0.23.12
  [ffbed154] DocStringExtensions v0.8.3
  [5789e2e9] FileIO v1.4.3
  [587475ba] Flux v0.11.1
  [86223c79] Graphs v0.10.3
  [904591bb] IncrementalInference v0.16.2
  [033835bb] JLD2 v0.2.4
  [2472808a] KernelDensityEstimate v0.5.2
  [429524aa] Optim v1.2.0
  [92933f4c] ProgressMeter v1.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [91fb55c2] RoME v0.9.2
  [6038ab10] Rotations v1.0.1
  [02d47bb6] TensorCast v0.3.2
  [9b8138ad] TransformUtils v0.2.6
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_vlYbp0/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [9bbbb610] ApproxManifoldProducts v0.1.4
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.6
  [4c555306] ArrayLayouts v0.4.10
  [fbb218c0] BSON v0.2.6
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [324d7699] CategoricalArrays v0.8.3
  [082447d4] ChainRules v0.7.31
  [d360d2e6] ChainRulesCore v0.9.17
  [cdddcdb0] ChainRulesTestUtils v0.5.3
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [150eb455] CoordinateTransformations v0.6.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.8
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [b5cc3c7e] DistributedFactorGraphs v0.10.6
  [31c24e10] Distributions v0.23.12
  [ffbed154] DocStringExtensions v0.8.3
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.4.3
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [26cc04aa] FiniteDifferences v0.11.2
  [53c48c17] FixedPointNumbers v0.8.4
  [587475ba] Flux v0.11.1
  [f6369f11] ForwardDiff v0.10.12
  [3e9e306e] FunctionalStateMachine v0.2.9
  [d9f16b24] Functors v0.1.0
  [0c68f7d7] GPUArrays v5.2.1
  [61eb1bfa] GPUCompiler v0.6.1
  [86223c79] Graphs v0.10.3
  [cd3eb016] HTTP v0.8.19
  [7869d1d1] IRTools v0.4.1
  [904591bb] IncrementalInference v0.16.2
  [d25df0c9] Inflate v0.1.2
  [83e8ac13] IniFile v0.5.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.2.4
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [2535ab7d] JSON2 v0.3.2
  [e5e0dc1b] Juno v0.8.4
  [2472808a] KernelDensityEstimate v0.5.2
  [929cbde3] LLVM v2.0.0
  [fc18253b] LazyJSON v0.2.2
  [1fad7336] LazyStack v0.0.7
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.2
  [e89f7d12] Media v0.5.0
  [626554b9] MetaGraphs v0.6.6
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [356022a1] NamedDims v0.2.28
  [d2adbeaf] Neo4j v2.0.0
  [4d1e1d77] Nullables v1.0.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [429524aa] Optim v1.2.0
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.10.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.4.0
  [f8a19df8] PropertyDicts v0.1.0
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [708f8203] Richardson v1.2.0
  [79098fc4] Rmath v0.6.1
  [91fb55c2] RoME v0.9.2
  [6038ab10] Rotations v1.0.1
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [856f2bd8] StructTypes v1.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [02d47bb6] TensorCast v0.3.2
  [f269a46b] TimeZones v1.4.0
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [9b8138ad] TransformUtils v0.2.6
  [3a884ed6] UnPack v1.0.2
  [cbff2730] Unmarshal v0.4.0
  [3d5dd08c] VectorizationBase v0.12.33
  [a5390f91] ZipFile v0.9.3
  [e88e6eb3] Zygote v0.5.9
  [700de1a5] ZygoteRules v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [f50d1b31] Rmath_jll v0.2.2+1
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: Multithreaded  convolutions possible, Threads.nthreads()=2.  See `addFactor!(.;threadmodel=MultiThreaded)`.
[ Info: KernelDensityEstimate.FORCE_EVAL_DIRECT = true
â”Œ Warning: The call to compilecache failed to create a usable precompiled cache file for DistributedFactorGraphs [b5cc3c7e-6572-11e9-2517-99fb8daf2f04]
â”‚   exception = Required dependency Nullables [4d1e1d77-625e-5b40-9113-a560ec7a8ecd] failed to load from a cache file.
â”” @ Base loading.jl:1045
[ Info: KernelDensityEstimate.FORCE_EVAL_DIRECT = true
â”Œ Warning: BREAKING CHANGE coming to DistributedFactorGraphs v0.12: deprecating AbstractRelativeFactor, use AbstractRelativeRoots instead
â”” @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/zZz24/src/DistributedFactorGraphs.jl:309
â”Œ Warning: BREAKING CHANGE coming to DistributedFactorGraphs v0.12: deprecating AbstractRelativeFactorMinimize, use AbstractRelativeMinimize instead
â”” @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/zZz24/src/DistributedFactorGraphs.jl:310
WARNING: ignoring conflicting import of DistributedFactorGraphs.compare into RoME
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:29
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:32
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:43
â”Œ Warning: The call to compilecache failed to create a usable precompiled cache file for RoME [91fb55c2-4c03-5a59-ba21-f4ea956187b8]
â”‚   exception = Required dependency DistributedFactorGraphs [b5cc3c7e-6572-11e9-2517-99fb8daf2f04] failed to load from a cache file.
â”” @ Base loading.jl:1045
[ Info: FunctionalStateMachine.jl is adding Graphs.jl related tools (Visualization).
â”Œ Warning: BREAKING CHANGE coming to DistributedFactorGraphs v0.12: deprecating AbstractRelativeFactor, use AbstractRelativeRoots instead
â”” @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/zZz24/src/DistributedFactorGraphs.jl:309
â”Œ Warning: BREAKING CHANGE coming to DistributedFactorGraphs v0.12: deprecating AbstractRelativeFactorMinimize, use AbstractRelativeMinimize instead
â”” @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/zZz24/src/DistributedFactorGraphs.jl:310
[ Info: Including InteractiveUtils related functions in IncrementalInference.
WARNING: ignoring conflicting import of DistributedFactorGraphs.compare into RoME
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:29
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:32
WARNING: Rotations.Quat is deprecated, use UnitQuaternion instead.
  likely near /home/pkgeval/.julia/packages/RoME/DiyHF/src/RobotUtils.jl:43
â”Œ Error: must restore testG2oParser.jl
â”” @ Main ~/.julia/packages/RoME/DiyHF/test/runtests.jl:8
[TEST] testPose3Pose3NH.jl
Test Summary:                                       | Pass  Total
Test syntax for null hypothesis matrix substitution |    1      1
Test Summary:                                 |
Test if null hypothesis occurs as expected... | No tests
[ Info: try doautoinit! of x1
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1]
[ Info: do init of x1
â”Œ Warning: findRelatedFromPotential likely to be deprecated, use `lsf` or `productbelief(fg, variableSym, ...) instead`
â”” @ IncrementalInference ~/.julia/packages/IncrementalInference/OyZSe/src/Deprecated.jl:48
â”Œ Warning: updateVariableSolverData with solveKey parameter might change in the future, see DFG #565. Future warnings are suppressed
â”” @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/zZz24/src/services/DFGVariable.jl:522
Test Summary:                 |
Adding PriorPose3 to graph... | No tests
Test Summary:                         | Pass  Total
Ensure variables initialized properly |    4      4
[ Info: try doautoinit! of x2
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: try doautoinit! of x3
Test Summary:                    | Pass  Total
Testing PriorPose3 evaluation... |    2      2
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x3 is not initialized, and will do so now...
[ Info: try doautoinit! of x3
[ Info: init with useinitfct [:x2x3f1]
[ Info: do init of x3
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x2, :x1]
WARNING: both Optim and ApproxManifoldProducts export "Manifold"; uses of it in module IncrementalInference must be qualified
WARNING: both LinearAlgebra and ApproxManifoldProducts export "rotate!"; uses of it in module IncrementalInference must be qualified
â”Œ Warning: `getSetDownMessagesComplete!(x...; kw...)` is deprecated, use `prepSetCliqueMsgDownConsolidated!(x...; kw...)` instead.
â”‚   caller = doCliqDownSolve_StateMachine(csmc::CliqStateMachineContainer{BayesTreeNodeData, LightDFG{SolverParams, DFGVariable, DFGFactor}, LightDFG{SolverParams, DFGVariable, DFGFactor}, BayesTree}) at CliqueStateMachine_fetch.jl:82
â”” @ IncrementalInference ~/.julia/packages/IncrementalInference/OyZSe/src/CliqueStateMachine_fetch.jl:82
[ Info: Finished tree based init-inference
Test Summary:                    | Pass  Total
Testing Pose3Pose3 evaluation... |    2      2
Test Summary:                            | [ Info: monitorCSMs: all tasks done
Pass  Total
Adding Pose3Pose3 w nullhypo to graph... |    1      1
Test Summary:                        | Pass  Total
loading validation data for testing. |    2      2
[SUCCESS]



[TEST] testPoint2Point2WorldBearing.jl
[ Info: try doautoinit! of x0
[ Info: x0 is not initialized, and will do so now...
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
â”Œ Warning: Point2Point2WorldBearing is being deprecated, use Point2, Point2Polar or Point2BearingRange instead.
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/Deprecated.jl:165
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x2
â”Œ Warning: Point2Point2WorldBearing is being deprecated, use Point2, Point2Polar or Point2BearingRange instead.
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/Deprecated.jl:165
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x2f1]
[ Info: do init of x2
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1, :x2x1f1]
[ Info: do init of x1
[ Info: [2x0p,d2,N100],
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x2, :x1]
[ Info: Finished tree based init-inference
Test Summary:                                   | Pass  Total
test Point2Point2WorldBearing factor is working |    6      6
[SUCCESS]



[TEST] testBeehive2D_CliqByCliq.jl
STEP 1: Driving around a bit[ Info: monitorCSMs: all tasks done

â”Œ Error: Note tree init test has been reduced as part of v0.9.0 upgrade and will be restored as a dedidicated effort later.
â”” @ Main ~/.julia/packages/RoME/DiyHF/test/testBeehive2D_CliqByCliq.jl:18
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x0 is not initialized, and will do so now...
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: x2 is not initialized, and will do so now...
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: x3 is not initialized, and will do so now...
[ Info: try doautoinit! of x3
[ Info: init with useinitfct [:x2x3f1]
[ Info: do init of x3
[ Info: x4 is not initialized, and will do so now...
[ Info: try doautoinit! of x4
[ Info: init with useinitfct [:x3x4f1]
[ Info: do init of x4
[ Info: x5 is not initialized, and will do so now...
[ Info: try doautoinit! of x5
[ Info: init with useinitfct [:x4x5f1]
[ Info: do init of x5
[ Info: x6 is not initialized, and will do so now...
[ Info: try doautoinit! of x6
[ Info: init with useinitfct [:x5x6f1]
[ Info: do init of x6
[ Info: l1 is not initialized, and will do so now...
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x0l1f1, :x6l1f1]
[ Info: do init of l1
[ Info: [2x0p,d2,N100],
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x2, :x4]
[ Info: Finished tree based init-inference
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: monitorCSMs: all tasks done
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x2, :x4]
[ Info: Finished tree based init-inference
Test Summary:               | Pass  Total
sanity check on Hex example |   22     22
[SUCCESS]



[TEST] testhigherdimroots.jl
Test Summary:                         | [ Info: monitorCSMs: all tasks done
Pass  Total
Increased dimension root finding test |    2      2
â”Œ Warning: `numericRootGenericRandomizedFnc!(w...; kw...)` is deprecated, use `numericSolutionCCW!(w...; kw...)` instead.
â”‚   caller = macro expansion at testhigherdimroots.jl:107 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testhigherdimroots.jl:107
Test Summary:                    | Pass  Total
test CommonConvWrapper functions |   55     55
[SUCCESS]



[TEST] testManifoldsPose2Equivalent.jl
Test Summary:                                           |
Testing hand constructed product of SE(2) equivalent... | No tests
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1, :x1f2]
[ Info: do init of x1
[ Info: [2x0p,d3,N100],
[ Info: [2x0p,d3,N100],
Test Summary:                                                    | Pass  Total
Factor graph based test of SE(2) equivalent using only Priors... |    3      3
â”Œ Warning: not implemented yet
â”” @ Main ~/.julia/packages/RoME/DiyHF/test/testManifoldsPose2Equivalent.jl:202
Test Summary:                                                                           |
Factor graph based test of SE(2) equivalent using Priors and Conditional Likelihoods... | No tests
[SUCCESS]



[TEST] testDidsonFunctions.jl
zDim = size(measurement[1], 1) = 3
  0.118750 seconds (118.49 k allocations: 6.402 MiB, 99.89% compilation time)
  0.123968 seconds (207.84 k allocations: 10.717 MiB, 99.94% compilation time)
â”Œ Warning: `numericRootGenericRandomizedFnc!(w...; kw...)` is deprecated, use `numericSolutionCCW!(w...; kw...)` instead.
â”‚   caller = macro expansion at testDidsonFunctions.jl:41 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDidsonFunctions.jl:41
  0.171557 seconds (744.90 k allocations: 56.239 MiB, 9.54% gc time, 47.99% compilation time)
â”Œ Warning: still need to insert kld(..) test to ensure this is working
â”” @ Main ~/.julia/packages/RoME/DiyHF/test/testDidsonFunctions.jl:46
Test back projection from 
  0.000046 seconds (17 allocations: 1.625 KiB)
  0.000030 seconds (15 allocations: 1.312 KiB)
â”Œ Warning: `numericRootGenericRandomizedFnc!(w...; kw...)` is deprecated, use `numericSolutionCCW!(w...; kw...)` instead.
â”‚   caller = macro expansion at testDidsonFunctions.jl:78 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDidsonFunctions.jl:78
  0.212704 seconds (1.27 M allocations: 102.466 MiB, 16.42% gc time, 2.55% compilation time)
â”Œ Warning: Breaks if not set to 100
â”” @ Main ~/.julia/packages/RoME/DiyHF/test/testDidsonFunctions.jl:103
Adding PriorPose3 to graph...
[ Info: try doautoinit! of x1
Adding LinearRangeBearingElevation to graph...
  0.000007 seconds
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of l1
[ Info: l1 is not initialized, and will do so now...
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x1l1f1]
[ Info: do init of l1
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x1, :l1]
[ Info: Finished tree based init-inference
[SUCCESS]



[TEST] testPoint2Point2.jl
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: Solving over the Bayes (Junction) tree.
[ Info: monitorCSMs: all tasks done

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
Test Summary:           | Pass  Total
basic Point2Point2 test |    2      2
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of l1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x0l1f1, :x1l1f1]
[ Info: do init of l1
[ Info: [2x0p,d2,N100],
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:l1, :x0]
[ Info: Finished tree based init-inference
Test Summary:                | Pass  Total
test Point2Point2Range{T}... |    8      8
[SUCCESS]



[TEST] testPoint2Point2Init.jl
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x0 is not initialized, and will do so now...
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1]
[ Info: do init of x1
[ Info: l1 is not initialized, and will do so now...
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x0l1f1, :x1l1f1]
[ Info: do init of l1
[ Info: [2x0p,d2,N100],
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: monitorCSMs: all tasks done
[ Info: transferUpdateSubGraph! -- syms=[:l1, :x0]
[ Info: Finished tree based init-inference
Test Summary:                                                     | Pass  Total
test tree based autoinit on small bimodal point2 trilateration... |   16     16
[SUCCESS]



[TEST] testBasicPose2Stationary.jl
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
Test Summary:                                        | Pass  Total
basic pose2 trivial case without forcing autoinit... |    9      9
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: x2 is not initialized, and will do so now...
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
Test Summary:                                  | Pass  Total
basic pose2 with forcing bad initialization... |    9      9
[ Info: Ensure variables are all initialized (graphinit)
[ Info: monitorCSMs: all tasks done
[ Info: x0 is not initialized, and will do so now...
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
Test Summary:                | Pass  Total
test basic banana (split)... |    6      6
[SUCCESS]



[TEST] TestPoseAndPoint2Constraints.jl
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: monitorCSMs: all tasks done
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
[ Info: try doautoinit! of x2
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x2 is not initialized, and will do so now...
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: Solving over the Bayes (Junction) tree.
[ Info: monitorCSMs: all tasks done

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: monitorCSMs: all tasks done
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
test bearing range evaluations
[ Info: try doautoinit! of l1
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x0l1f1, :l1f1]
[ Info: do init of l1
[ Info: [2x0p,d2,N100],
Test Summary:                       | Pass  Total
test pose and point combinations... |   18     18
[SUCCESS]



[TEST] testDynPoint2D.jl
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = ip:0x0
â”” @ Core :-1
â”Œ Warning: Softtype DynPoint2, will be required to be a singleton type in the future and can no longer have fields. *.ut called. Further warnings are suppressed
â”‚   caller = macro expansion at logging.jl:340 [inlined]
â”” @ Core ./logging.jl:340
â”Œ Warning: Nanosecond time has been specified as 0, ignoring `ut` field value: -9999999999.
â”” @ IncrementalInference ~/.julia/packages/IncrementalInference/OyZSe/src/FactorGraph.jl:424
â”Œ Warning: Nanosecond time has been specified as 1000000000, ignoring `ut` field value: 1000000.
â”” @ IncrementalInference ~/.julia/packages/IncrementalInference/OyZSe/src/FactorGraph.jl:424
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
global x0 = getKDEMax(getBelief(fg, :x0)) = [-0.005445600328444721, -0.16774753166640693, 10.092921130615396, 10.05739846950885]
global x1 = getKDEMax(getBelief(fg, :x1)) = [20.08472655723925, 19.869730846997783, 9.9238747212112, 9.85373304313523]
Test Summary:     | Pass  Total
test DynPoint2... |    4      4
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPoint2D.jl:60 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPoint2D.jl:60
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPoint2D.jl:61 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPoint2D.jl:61
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPoint2D.jl:62 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPoint2D.jl:62
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: x2 is not initialized, and will do so now...
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
global x0 = getKDEMax(getBelief(fg, :x0)) = [-0.1342608684199642, 0.025366486390367433, 9.92434105079201, 9.993356631520577]
global x1 = getKDEMax(getBelief(fg, :x1)) = [9.993748537938188, 9.957176164073887, 10.163536269603531, 9.981144603164028]
global x2 = getKDEMax(getBelief(fg, :x2)) = [19.938532985595558, 19.966577453693553, 9.964851371643663, 9.912813752274172]
Test Summary:                  | Pass  Total
test DynPoint2VelocityPrior... |    9      9
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPoint2D.jl:121 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPoint2D.jl:121
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x1f1]
[ Info: do init of x1
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPoint2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPoint2D.jl:127 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPoint2D.jl:127
Test Summary:           | Pass  Total
test VelPoint2VelPoint2 |    9      9
[SUCCESS]



[TEST] testBearingRange2D.jl
Test Summary:                             | Pass  Total
test sampling from BearingRange factor... |    4      4
res = [0.0, 0.0]
res = [1.4997597826618579e-30, 0.0]
res = [1.4997597826618579e-30, 0.0]
res = [0.0, 0.0]
Test Summary:                                 | Pass  Total
test BearingRange factor residual function... |    4      4
Test Summary:                                             | [ Info: monitorCSMs: all tasks done
Pass  Total
test unimodal bearing range factor, solve for landmark... |    5      5
abs.(Statistics.mean(pts, dims = 2)) = [0.08069658339391268; 0.0513522402222821; 0.014913308412044577]
Statistics.std(pts, dims = 2) = [1.0102640023401217; 0.7701736537131629; 0.11733199775139938]
Test Summary:                                         | Pass  Total
test unimodal bearing range factor, solve for pose... |    3      3
â”Œ Warning: `extractdistribution(str::AbstractString)` is deprecated, use `convert(SamplableBelief, str)` instead.
â”‚   caller = convert(#unused#::Type{Pose2Point2Bearing}, d::PackedPose2Point2Bearing) at Bearing2D.jl:58
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/factors/Bearing2D.jl:58
Test Summary:                                         | Pass  Total
Testing Pose2Point2Bearing Initialization and Packing |    2      2
[SUCCESS]



[TEST] testDeltaOdo.jl
Test Summary:                                           | Pass  Total
test odometry accumulation MutablePose2Pose2Gaussian... |    2      2
[SUCCESS]



[TEST] testFixedLagFG.jl
STEP 1: Driving around a bit
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: try doautoinit! of x3
[ Info: try doautoinit! of x3
[ Info: init with useinitfct [:x2x3f1]
[ Info: do init of x3
[ Info: try doautoinit! of x4
[ Info: try doautoinit! of x4
[ Info: init with useinitfct [:x3x4f1]
[ Info: do init of x4
[ Info: try doautoinit! of x5
[ Info: try doautoinit! of x5
[ Info: init with useinitfct [:x4x5f1]
[ Info: do init of x5
[ Info: try doautoinit! of x6
[ Info: try doautoinit! of l1
STEP 2: Solve graph when shorter than fixed length
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x6 is not initialized, and will do so now...
[ Info: try doautoinit! of x6
[ Info: init with useinitfct [:x5x6f1]
[ Info: do init of x6
[ Info: l1 is not initialized, and will do so now...
[ Info: try doautoinit! of l1
[ Info: init with useinitfct [:x0l1f1]
[ Info: do init of l1
[ Info: Solving over the Bayes (Junction) tree.
[ Info: Quasi fixed-lag is enabled (a feature currently in testing)!
[ Info: [fifoFreeze] QFL - Freezing nodes x0 -> x1.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x2, :x1]
[ Info: Finished tree based init-inference
STEP 3: Drive a couple more, longer than fixed lag window
[ Info: try doautoinit! of x7
[ Info: try doautoinit! of x7
[ Info: init with useinitfct [:x6x7f1]
[ Info: do init of x7
[ Info: try doautoinit! of x8
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x8
[ Info: init with useinitfct [:x7x8f1]
[ Info: do init of x8
[ Info: try doautoinit! of x9
[ Info: try doautoinit! of x9
[ Info: init with useinitfct [:x8x9f1]
[ Info: do init of x9
[ Info: try doautoinit! of x10
[ Info: try doautoinit! of x10
[ Info: init with useinitfct [:x9x10f1]
[ Info: do init of x10
[ Info: try doautoinit! of x11
[ Info: try doautoinit! of x11
[ Info: init with useinitfct [:x10x11f1]
[ Info: do init of x11
[ Info: try doautoinit! of x12
[ Info: [fifoFreeze] QFL - Freezing nodes x0 -> l1.
STEP 4: Solve graph when shorter than fixed length, and show time to solve
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x12 is not initialized, and will do so now...
[ Info: try doautoinit! of x12
[ Info: init with useinitfct [:x11x12f1]
[ Info: do init of x12
[ Info: Solving over the Bayes (Junction) tree.
[ Info: Quasi fixed-lag is enabled (a feature currently in testing)!
[ Info: [fifoFreeze] QFL - Freezing nodes x0 -> l1.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
FSM cliq1, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq2, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq2, iter=2 -- canCliqIncrRecycle_StateMachine, null
FSM cliq2, iter=3 -- isCliqUpSolved_StateMachine, null
FSM cliq2, iter=4 -- buildCliqSubgraph_StateMachine, null
FSM cliq2, iter=5 -- canCliqMargSkipUpSolve_StateMachine, null
FSM cliq2, iter=6 -- blockUntilChildrenHaveStatus_StateMachine, null
FSM cliq3, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq3, iter=2 -- canCliqIncrRecycle_StateMachine, null
FSM cliq3, iter=3 -- isCliqUpSolved_StateMachine, null
FSM cliq3, iter=4 -- buildCliqSubgraph_StateMachine, null
FSM cliq3, iter=5 -- canCliqMargSkipUpSolve_StateMachine, null
FSM cliq3, iter=6 -- blockUntilChildrenHaveStatus_StateMachine, null
FSM cliq4, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq5, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq6, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq7, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq8, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq8, iter=2 -- canCliqIncrRecycle_StateMachine, null
FSM cliq8, iter=3 -- isCliqUpSolved_StateMachine, null
FSM cliq8, iter=4 -- buildCliqSubgraph_StateMachine, null
FSM cliq8, iter=5 -- canCliqMargSkipUpSolve_StateMachine, null
FSM cliq8, iter=6 -- blockUntilChildrenHaveStatus_StateMachine, null
FSM cliq8, iter=7 -- trafficRedirectConsolidate459_StateMachine, null
FSM cliq8, iter=8 -- maybeNeedDwnMsg_StateMachine, null
FSM cliq8, iter=9 -- determineCliqNeedDownMsg_StateMachine, null
FSM cliq8, iter=10 -- towardUpOrDwnSolve_StateMachine, null
FSM cliq9, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq10, iter=1 -- canCliqMargRecycle_StateMachine, null
FSM cliq10, iter=2 -- canCliqIncrRecycle_StateMachine, null
FSM cliq10, iter=3 -- isCliqUpSolved_StateMachine, null
FSM cliq10, iter=4 -- buildCliqSubgraph_StateMachine, null
FSM cliq10, iter=5 -- canCliqMargSkipUpSolve_StateMachine, null
FSM cliq10, iter=6 -- blockUntilChildrenHaveStatus_StateMachine, null
FSM cliq10, iter=7 -- trafficRedirectConsolidate459_StateMachine, null
FSM cliq10, iter=8 -- maybeNeedDwnMsg_StateMachine, null
FSM cliq10, iter=9 -- determineCliqNeedDownMsg_StateMachine, null
FSM cliq10, iter=10 -- towardUpOrDwnSolve_StateMachine, null
FSM cliq1, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq1, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq4, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq4, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq5, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq5, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq6, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq6, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq7, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq7, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq8, iter=11 -- attemptCliqInitUp_StateMachine, null
FSM cliq8, iter=12 -- prepInitUp_StateMachine, null
FSM cliq8, iter=13 -- tryUpInitCliq_StateMachine, null
FSM cliq8, iter=14 -- doCliqUpSolveInitialized_StateMachine, initialized
FSM cliq9, iter=2 -- canCliqIncrRecycle_StateMachine, marginalized
FSM cliq9, iter=3 -- isCliqUpSolved_StateMachine, marginalized
FSM cliq10, iter=11 -- attemptCliqInitUp_StateMachine, null
FSM cliq10, iter=12 -- prepInitUp_StateMachine, null
FSM cliq10, iter=13 -- tryUpInitCliq_StateMachine, null
FSM cliq10, iter=14 -- doCliqUpSolveInitialized_StateMachine, initialized
FSM cliq1, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq1, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq1, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq1, iter=7 -- specialCaseRootDownSolve_StateMachine, marginalized
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x6, :x2]
FSM cliq4, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq4, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq4, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq4, iter=7 -- waitChangeOnParentCondition_StateMachine, marginalized
FSM cliq4, iter=8 -- doCliqDownSolve_StateMachine, marginalized
FSM cliq5, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq5, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq5, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq5, iter=7 -- waitChangeOnParentCondition_StateMachine, marginalized
FSM cliq5, iter=8 -- doCliqDownSolve_StateMachine, marginalized
FSM cliq6, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq6, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq6, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq6, iter=7 -- waitChangeOnParentCondition_StateMachine, marginalized
FSM cliq6, iter=8 -- doCliqDownSolve_StateMachine, marginalized
FSM cliq7, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq7, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq7, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq7, iter=7 -- waitChangeOnParentCondition_StateMachine, marginalized
FSM cliq7, iter=8 -- doCliqDownSolve_StateMachine, marginalized
FSM cliq3, iter=7 -- trafficRedirectConsolidate459_StateMachine, null
FSM cliq3, iter=8 -- maybeNeedDwnMsg_StateMachine, null
FSM cliq3, iter=9 -- determineCliqNeedDownMsg_StateMachine, null
FSM cliq3, iter=10 -- towardUpOrDwnSolve_StateMachine, null
FSM cliq8, iter=15 -- rmUpLikeliSaveSubFg_StateMachine, upsolved
FSM cliq8, iter=16 -- checkUpsolveFinished_StateMachine, upsolved
FSM cliq8, iter=17 -- canCliqDownSolve_StateMachine, upsolved
FSM cliq8, iter=18 -- waitChangeOnParentCondition_StateMachine, upsolved
FSM cliq9, iter=4 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq9, iter=5 -- buildCliqSubgraphForDown_StateMachine, marginalized
FSM cliq9, iter=6 -- canCliqDownSolve_StateMachine, marginalized
FSM cliq9, iter=7 -- waitChangeOnParentCondition_StateMachine, marginalized
FSM cliq9, iter=8 -- doCliqDownSolve_StateMachine, marginalized
FSM cliq10, iter=15 -- rmUpLikeliSaveSubFg_StateMachine, upsolved
FSM cliq10, iter=16 -- checkUpsolveFinished_StateMachine, upsolved
FSM cliq10, iter=17 -- canCliqDownSolve_StateMachine, upsolved
FSM cliq10, iter=18 -- waitChangeOnParentCondition_StateMachine, upsolved
FSM cliq1, iter=8 -- exitStateMachine, downsolved
FSM cliq4, iter=9 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq5, iter=9 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq6, iter=9 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq7, iter=9 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq3, iter=11 -- attemptCliqInitUp_StateMachine, null
FSM cliq3, iter=12 -- prepInitUp_StateMachine, null
FSM cliq3, iter=13 -- tryUpInitCliq_StateMachine, null
FSM cliq3, iter=14 -- doCliqUpSolveInitialized_StateMachine, initialized
FSM cliq2, iter=7 -- trafficRedirectConsolidate459_StateMachine, null
FSM cliq2, iter=8 -- maybeNeedDwnMsg_StateMachine, null
FSM cliq2, iter=9 -- determineCliqNeedDownMsg_StateMachine, null
FSM cliq2, iter=10 -- towardUpOrDwnSolve_StateMachine, null
FSM cliq9, iter=9 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq4, iter=10 -- exitStateMachine, downsolved
FSM cliq5, iter=10 -- exitStateMachine, downsolved
FSM cliq6, iter=10 -- exitStateMachine, downsolved
FSM cliq7, iter=10 -- exitStateMachine, downsolved
FSM cliq3, iter=15 -- rmUpLikeliSaveSubFg_StateMachine, upsolved
FSM cliq3, iter=16 -- checkUpsolveFinished_StateMachine, upsolved
FSM cliq3, iter=17 -- canCliqDownSolve_StateMachine, upsolved
FSM cliq3, iter=18 -- waitChangeOnParentCondition_StateMachine, upsolved
FSM cliq2, iter=11 -- attemptCliqInitUp_StateMachine, null
FSM cliq2, iter=12 -- prepInitUp_StateMachine, null
FSM cliq2, iter=13 -- tryUpInitCliq_StateMachine, null
FSM cliq2, iter=14 -- doCliqUpSolveInitialized_StateMachine, initialized
FSM cliq9, iter=10 -- exitStateMachine, downsolved
FSM cliq2, iter=15 -- rmUpLikeliSaveSubFg_StateMachine, upsolved
FSM cliq2, iter=16 -- checkUpsolveFinished_StateMachine, upsolved
FSM cliq2, iter=17 -- canCliqDownSolve_StateMachine, upsolved
FSM cliq2, iter=18 -- waitChangeOnParentCondition_StateMachine, upsolved
FSM cliq2, iter=19 -- doCliqDownSolve_StateMachine, upsolved
FSM cliq8, iter=19 -- doCliqDownSolve_StateMachine, upsolved
FSM cliq3, iter=19 -- doCliqDownSolve_StateMachine, upsolved
FSM cliq2, iter=20 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq10, iter=19 -- doCliqDownSolve_StateMachine, upsolved
FSM cliq8, iter=20 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq3, iter=20 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq2, iter=21 -- exitStateMachine, downsolved
FSM cliq10, iter=20 -- cleanupAfterDownSolve_StateMachine, downsolved
FSM cliq8, iter=21 -- exitStateMachine, downsolved
FSM cliq3, iter=21 -- exitStateMachine, downsolved
FSM cliq10, iter=21 -- exitStateMachine, downsolved
[ Info: Finished tree based init-inference
Test Summary:                      | Pass  Total
test basic fixed lag operations... |    6      6
[SUCCESS]



[TEST] testMultimodalRangeBearing.jl
[ Info: try doautoinit! of l1
[ Info: try doautoinit! of l2
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: [0x1p,d3,N100],
[ Info: try doautoinit! of l1
[ Info: allowing init from incomplete set of previously initialized hypotheses, fct=x0l1l2f1
[ Info: init with useinitfct [:l1f1, :x0l1l2f1]
[ Info: do init of l1
[ Info: not all hypotheses initialized, but at least one available -- see #427
[ Info: [2x0p,d2,N100],
[ Info: try doautoinit! of l2
[ Info: init with useinitfct [:l2f1, :x0l1l2f1]
[ Info: do init of l2
[ Info: [2x0p,d2,N100],
[ Info: [1x1p,d3,N100],
Test Summary:                                          |
test standard multimodal range bearing factor setup... | No tests
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:l1, :x0, :l2]
[ Info: Finished tree based init-inference
Test Summary:                                                             | Pass  Total
test multimodal bearing range factors calculate pose position properly... |    3      3
[ Info: try doautoinit! of x0
[ Info: try doautoinit! of l1
[ Info: try doautoinit! of l2
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of l1
[ Info: monitorCSMs: all tasks done
[ Info: allowing init from incomplete set of previously initialized hypotheses, fct=x0l1l2f1
[ Info: init with useinitfct [:l1f1, :x0l1l2f1]
[ Info: do init of l1
[ Info: not all hypotheses initialized, but at least one available -- see #427
[ Info: [2x0p,d2,N100],
[ Info: try doautoinit! of l2
[ Info: init with useinitfct [:l2f1, :x0l1l2f1]
[ Info: do init of l2
[ Info: [1x1p,d2,N100],
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:l1, :x0, :l2]
[ Info: Finished tree based init-inference
Test Summary:                                                | Pass  Total
test multimodal landmark locations are computed correclty... |    5      5
[SUCCESS]



[TEST] testDynPose2D.jl
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPose2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPose2D.jl:12 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPose2D.jl:12
[ Info: try doautoinit! of x0
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPose2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPose2D.jl:22 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPose2D.jl:22
[ Info: try doautoinit! of x1
[ Info: Ensure variables are all initialized (graphinit)
[ Info: x1 is not initialized, and will do so now...
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x1]
[ Info: Finished tree based init-inference
Test Summary:                 | Pass  Total
test DynPose2 and velocity... |    5      5
Test Summary:                          | Pass  Total
test distribution compare functions... |    3      3
â”Œ Warning: `extractdistribution(str::AbstractString)` is deprecated, use `convert(SamplableBelief, str)` instead.
â”‚   caller = convert(#unused#::Type{DynPose2VelocityPrior}, d::PackedDynPose2VelocityPrior) at DynPose2D.jl:85
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/factors/DynPose2D.jl:85
â”Œ Warning: `extractdistribution(str::AbstractString)` is deprecated, use `convert(SamplableBelief, str)` instead.
â”‚   caller = convert(#unused#::Type{DynPose2VelocityPrior}, d::PackedDynPose2VelocityPrior) at DynPose2D.jl:86
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/factors/DynPose2D.jl:86
â”Œ Warning: `extractdistribution(str::AbstractString)` is deprecated, use `convert(SamplableBelief, str)` instead.
â”‚   caller = convert(#unused#::Type{VelPose2VelPose2}, d::PackedVelPose2VelPose2) at VelPose2D.jl:66
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/factors/VelPose2D.jl:66
â”Œ Warning: `extractdistribution(str::AbstractString)` is deprecated, use `convert(SamplableBelief, str)` instead.
â”‚   caller = convert(#unused#::Type{VelPose2VelPose2}, d::PackedVelPose2VelPose2) at VelPose2D.jl:67
â”” @ RoME ~/.julia/packages/RoME/DiyHF/src/factors/VelPose2D.jl:67
Test Summary:                       | Pass  Total
test DynPose2 packing converters... |    2      2
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPose2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPose2D.jl:101 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPose2D.jl:101
[ Info: try doautoinit! of x0
â”Œ Warning: Field `ut` (microseconds) for variable type (DynPose2) has been deprecated please use DFGVariable.nstime, kwarg: nanosecondtime
â”‚   caller = macro expansion at testDynPose2D.jl:113 [inlined]
â”” @ Core ~/.julia/packages/RoME/DiyHF/test/testDynPose2D.jl:113
[ Info: monitorCSMs: all tasks done
[ Info: try doautoinit! of x0
[ Info: init with useinitfct [:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: try doautoinit! of x1
[ Info: init with useinitfct [:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: try doautoinit! of x2
[ Info: init with useinitfct [:x1x2f1]
[ Info: do init of x2
[ Info: try doautoinit! of x3
[ Info: try doautoinit! of x3
[ Info: init with useinitfct [:x2x3f1]
[ Info: do init of x3
[ Info: try doautoinit! of x4
[ Info: try doautoinit! of x4
[ Info: init with useinitfct [:x3x4f1]
[ Info: do init of x4
[ Info: try doautoinit! of x5
[ Info: try doautoinit! of x5
[ Info: init with useinitfct [:x4x5f1]
[ Info: do init of x5
[ Info: try doautoinit! of x6
[ Info: try doautoinit! of x6
[ Info: init with useinitfct [:x5x6f1]
[ Info: do init of x6
[ Info: try doautoinit! of x7
[ Info: try doautoinit! of x7
[ Info: init with useinitfct [:x6x7f1]
[ Info: do init of x7
[ Info: try doautoinit! of x8
[ Info: try doautoinit! of x8
[ Info: init with useinitfct [:x7x8f1]
[ Info: do init of x8
[ Info: try doautoinit! of x9
[ Info: try doautoinit! of x9
[ Info: init with useinitfct [:x8x9f1]
[ Info: do init of x9
[ Info: try doautoinit! of x10
[ Info: x10 is not initialized, and will do so now...
[ Info: try doautoinit! of x10
[ Info: init with useinitfct [:x9x10f1]
[ Info: do init of x10
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: transferUpdateSubGraph! -- syms=[:x0, :x9, :x2]
[ Info: Finished tree based init-inference
[ Info: Ensure variables are all initialized (graphinit)
[ Info: Solving over the Bayes (Junction) tree.

[ Info: Building Bayes net...
[ Info: Staring the Bayes tree construction from Bayes net
[ Info: Bayes Tree Complete
[ Info: Do tree based init-inference on tree
[ Info: monitorCSMs: all tasks done

signal (15): Terminated
in expression starting at none:35
