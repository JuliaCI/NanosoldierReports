Current time is 2020-10-24T13:00:16.345
Julia Version 1.6.0-DEV.1324
Commit ae789ca1df (2020-10-24 01:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T13:00:19.196
   Resolving package versions...
   Installed VersionParsing â”€ v1.2.0
   Installed MacroTools â”€â”€â”€â”€â”€ v0.5.6
   Installed Gettext â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed PyCall â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.92.1
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [a6aca261] + Gettext v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [a6aca261] + Gettext v0.2.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [69de0a69] + Parsers v1.0.11
  [438e738f] + PyCall v1.92.1
  [81def892] + VersionParsing v1.2.0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building Conda â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7a58bb32ce5d85f8bf7559aa7c2842f9aecf52fc/build.log`
    Building PyCall â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/b6dff5fa725eff4f775f472acd86756d6e31fb02/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mPyCall[39m
[32m  âœ“ [39mGettext
3 dependencies successfully precompiled (4 already precompiled)
Starting tests at 2020-10-24T13:02:42.006
â”Œ Warning: using test/REQUIRE files is deprecated and current support is lacking in some areas
â”” @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1547
     Testing Gettext
Status `/tmp/jl_zfIi70/Project.toml`
  [59287772] Formatting v0.4.1
  [a6aca261] Gettext v0.2.0
  [438e738f] PyCall v1.92.1
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_zfIi70/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [59287772] Formatting v0.4.1
  [a6aca261] Gettext v0.2.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [69de0a69] Parsers v1.0.11
  [438e738f] PyCall v1.92.1
  [81def892] VersionParsing v1.2.0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = bindtextdomain(domain::String, localedir::String) at Gettext.jl:11
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:11
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = textdomain(domain::String) at Gettext.jl:12
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:12
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = gettext(message::String) at Gettext.jl:14
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:14
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = ngettext(singular::String, plural::String, n::Int64) at Gettext.jl:16
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:16
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = dgettext(domain::String, message::String) at Gettext.jl:15
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:15
â”Œ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
â”‚   caller = dngettext(domain::String, singular::String, plural::String, n::Int64) at Gettext.jl:17
â”” @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:17
     Testing Gettext tests passed 
Finished at 2020-10-24T13:03:33.363
