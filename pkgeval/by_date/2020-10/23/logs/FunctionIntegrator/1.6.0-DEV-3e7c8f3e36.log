Current time is 2020-10-24T12:59:52.024
Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T12:59:54.482
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
     Cloning [e66e0078-7015-5450-92f7-15fbd957f2ae] CompilerSupportLibraries_jll from https://github.com/JuliaBinaryWrappers/CompilerSupportLibraries_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-24T13:05:32.069
     Testing FunctionIntegrator
Status `/tmp/jl_eRdp0Z/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_eRdp0Z/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.398028 seconds (293.30 k allocations: 13.821 MiB, 94.80% compilation time)
Running: chebyshev_quadrature with k=1
  2.909783 seconds (2.25 M allocations: 130.525 MiB, 3.26% gc time, 97.78% compilation time)
Running: chebyshev_quadrature with k=2
  1.280329 seconds (417.67 k allocations: 24.213 MiB, 67.29% gc time, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.402003 seconds (483.51 k allocations: 27.371 MiB, 81.46% compilation time)
Running: chebyshev_quadrature with k=4
  1.865964 seconds (427.02 k allocations: 23.936 MiB, 38.10% gc time, 98.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 54.493297 seconds (35.47 M allocations: 2.979 GiB, 18.10% gc time, 85.27% compilation time)
Running: laguerre_quadrature with k=1
  4.349443 seconds (3.24 M allocations: 182.229 MiB, 9.07% gc time, 98.35% compilation time)
Running: legendre_quadrature
  0.204551 seconds (211.39 k allocations: 12.234 MiB, 99.14% compilation time)
Running: lobatto_quadrature
  0.690782 seconds (339.91 k allocations: 20.651 MiB, 14.93% gc time, 99.34% compilation time)
Running: radau_quadrature
  0.385426 seconds (462.91 k allocations: 28.391 MiB, 97.70% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 43.740822 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time, 0.09% compilation time)
Running: rectangle_rule_midpoint.
  0.103363 seconds (173.35 k allocations: 3.888 MiB, 32.67% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 42.706523 seconds (100.02 M allocations: 1.491 GiB, 0.51% gc time, 0.06% compilation time)
Running: rombergs_method
  1.504977 seconds (741.31 k allocations: 43.127 MiB, 2.06% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.046248 seconds (48.05 k allocations: 2.634 MiB, 95.52% compilation time)
Running: simpsons38_rule
  0.179006 seconds (111.41 k allocations: 5.954 MiB, 10.00% gc time, 98.84% compilation time)
Running: trapezoidal_rule
  0.337213 seconds (1.72 M allocations: 28.728 MiB, 19.55% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.215317 seconds (30.71 k allocations: 1.830 MiB, 50.58% gc time, 49.31% compilation time)
Running: chebyshev_quadrature with k=1
  0.428002 seconds (295.50 k allocations: 15.737 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.207865 seconds (94.22 k allocations: 2.707 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=3
  0.147299 seconds (82.47 k allocations: 2.508 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.176680 seconds (65.08 k allocations: 2.154 MiB, 98.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.298900 seconds (510.48 k allocations: 162.263 MiB, 3.80% gc time, 18.96% compilation time)
Running: legendre_quadrature
  0.228171 seconds (42.06 k allocations: 2.438 MiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.016298 seconds (16.04 k allocations: 1021.528 KiB, 98.93% compilation time)
Running: radau_quadrature
  0.016176 seconds (16.15 k allocations: 1.005 MiB, 99.07% compilation time)
Running: rectangle_rule_left
 12.714322 seconds (471.41 M allocations: 7.025 GiB, 6.53% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.718751 seconds (476.96 M allocations: 7.107 GiB, 6.42% gc time)
Running: rombergs_method
  0.529576 seconds (334.19 k allocations: 19.145 MiB, 99.91% compilation time)
Running: simpsons_rule
  0.000045 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.085454 seconds (19.42 k allocations: 1.184 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.175914 seconds (16.96 k allocations: 1.034 MiB, 99.94% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025005 seconds (1.03 k allocations: 34.125 KiB, 99.60% compilation time)
Running: chebyshev_quadrature with k=1
  0.061174 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.077554 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.212755 seconds (2.31 k allocations: 109.297 KiB, 99.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.085130 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.243374 seconds (369.35 k allocations: 19.504 MiB, 11.12% gc time, 99.23% compilation time)
Running: legendre_quadrature
  0.069907 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000044 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000343 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000235 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000357 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.091021 seconds (1.04 k allocations: 56.469 KiB, 99.80% compilation time)
Running: simpsons_rule
  0.000076 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022548 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.023181 seconds (44.29 k allocations: 702.859 KiB, 93.29% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.044005 seconds (83.49 k allocations: 5.002 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.355160 seconds (235.65 k allocations: 13.389 MiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.498008 seconds (289.14 k allocations: 16.397 MiB, 17.96% gc time, 99.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.254002 seconds (239.80 k allocations: 13.552 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.267442 seconds (239.80 k allocations: 13.487 MiB, 87.80% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.287586 seconds (454.96 k allocations: 163.917 MiB, 33.00% gc time, 31.63% compilation time)
Running: legendre_quadrature
  0.119267 seconds (190.36 k allocations: 11.084 MiB, 98.64% compilation time)
Running: lobatto_quadrature
  0.269244 seconds (201.88 k allocations: 11.810 MiB, 5.68% gc time, 99.32% compilation time)
Running: radau_quadrature
  0.211895 seconds (201.88 k allocations: 11.808 MiB, 99.14% compilation time)
Running: rectangle_rule_left
  0.599968 seconds (19.37 k allocations: 1.189 MiB, 3.58% compilation time)
Running: rectangle_rule_midpoint
  0.017436 seconds (25.55 k allocations: 1.616 MiB, 99.19% compilation time)
Running: rectangle_rule_right
  0.591976 seconds (17.90 k allocations: 1.099 MiB, 4.01% compilation time)
Running: rombergs_method
  0.279344 seconds (137.77 k allocations: 8.025 MiB, 99.04% compilation time)
Running: simpsons_rule
  0.038174 seconds (37.98 k allocations: 2.442 MiB, 99.61% compilation time)
Running: simpsons38_rule
  0.025628 seconds (43.94 k allocations: 2.785 MiB, 99.15% compilation time)
Running: trapezoidal_rule
  0.019102 seconds (43.20 k allocations: 1.730 MiB, 96.22% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024667 seconds (68.44 k allocations: 3.060 MiB, 96.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.247391 seconds (242.24 k allocations: 13.474 MiB, 6.51% gc time, 99.23% compilation time)
Running: chebyshev_quadrature with k=2
  0.696377 seconds (296.17 k allocations: 16.388 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.419731 seconds (246.37 k allocations: 13.522 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.147253 seconds (246.37 k allocations: 13.524 MiB, 11.32% gc time, 98.79% compilation time)
Running: hermite_quadrature with k=2
 24.205142 seconds (20.49 M allocations: 1.088 GiB, 13.26% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.494382 seconds (464.13 k allocations: 50.102 MiB, 13.68% gc time, 72.10% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.632364 seconds (282.35 k allocations: 15.789 MiB, 6.19% gc time, 99.42% compilation time)
Running: legendre_quadrature
  0.154909 seconds (196.90 k allocations: 11.413 MiB, 98.55% compilation time)
Running: lobatto_quadrature
  0.230753 seconds (222.54 k allocations: 37.584 MiB, 12.43% gc time, 86.72% compilation time)
Running: radau_quadrature
  0.350872 seconds (219.12 k allocations: 30.267 MiB, 93.27% compilation time)
Running: rectangle_rule_left
  0.016786 seconds (22.28 k allocations: 1.333 MiB, 99.29% compilation time)
Running: rectangle_rule_midpoint
  0.023702 seconds (27.36 k allocations: 1.703 MiB, 99.39% compilation time)
Running: rectangle_rule_right
  0.027494 seconds (19.02 k allocations: 1.153 MiB, 99.46% compilation time)
Running: rombergs_method
  0.152548 seconds (140.11 k allocations: 8.068 MiB, 97.78% compilation time)
Running: simpsons_rule
  0.229897 seconds (45.46 k allocations: 2.710 MiB, 41.24% gc time, 99.85% compilation time)
Running: simpsons38_rule
  0.032011 seconds (58.91 k allocations: 3.170 MiB, 98.48% compilation time)
Running: trapezoidal_rule
  0.084500 seconds (29.23 k allocations: 1.655 MiB, 99.66% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.044325 seconds (52.41 k allocations: 2.720 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.508851 seconds (237.76 k allocations: 13.244 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.363528 seconds (291.35 k allocations: 16.171 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.281296 seconds (241.90 k allocations: 13.330 MiB, 10.27% gc time, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.165777 seconds (241.91 k allocations: 13.331 MiB, 98.66% compilation time)
Running: hermite_quadrature with k=2
  0.203708 seconds (175.13 k allocations: 10.126 MiB, 97.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 11.001943 seconds (457.40 k allocations: 1.175 GiB, 47.21% gc time, 5.15% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.595311 seconds (277.64 k allocations: 15.553 MiB, 99.37% compilation time)
Running: legendre_quadrature
  0.738656 seconds (192.47 k allocations: 11.190 MiB, 78.80% compilation time)
Running: lobatto_quadrature
  0.568778 seconds (213.30 k allocations: 23.315 MiB, 5.42% gc time, 55.91% compilation time)
Running: radau_quadrature
  0.524582 seconds (212.45 k allocations: 21.243 MiB, 83.49% compilation time)
Running: rectangle_rule_left
  0.072334 seconds (20.07 k allocations: 1.228 MiB, 99.79% compilation time)
Running: rectangle_rule_midpoint
  0.030800 seconds (26.25 k allocations: 1.652 MiB, 99.53% compilation time)
Running: rectangle_rule_right
  0.039399 seconds (17.88 k allocations: 1.099 MiB, 99.68% compilation time)
Running: rombergs_method
  0.531471 seconds (135.95 k allocations: 7.880 MiB, 41.32% gc time, 96.84% compilation time)
Running: simpsons_rule
  0.050751 seconds (40.80 k allocations: 2.541 MiB, 99.56% compilation time)
Running: simpsons38_rule
  0.042259 seconds (49.73 k allocations: 2.931 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.021514 seconds (24.14 k allocations: 1.492 MiB, 98.99% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048941 seconds (40.61 k allocations: 2.580 MiB, 99.67% compilation time)
Running: chebyshev_quadrature with k=1
  0.329990 seconds (236.14 k allocations: 13.462 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.268693 seconds (289.64 k allocations: 16.487 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.260130 seconds (240.28 k allocations: 13.548 MiB, 8.33% gc time, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.570899 seconds (240.28 k allocations: 13.373 MiB, 99.42% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.459755 seconds (455.50 k allocations: 194.951 MiB, 5.94% gc time, 32.03% compilation time)
Running: legendre_quadrature
  0.341253 seconds (190.86 k allocations: 11.114 MiB, 99.33% compilation time)
Running: lobatto_quadrature
  0.535943 seconds (202.38 k allocations: 11.832 MiB, 99.38% compilation time)
Running: radau_quadrature
  0.277514 seconds (202.38 k allocations: 11.838 MiB, 99.08% compilation time)
Running: rectangle_rule_left
  0.386051 seconds (19.89 k allocations: 1.214 MiB, 18.60% compilation time)
Running: rectangle_rule_midpoint
  0.035466 seconds (25.89 k allocations: 1.634 MiB, 86.05% compilation time)
Running: rectangle_rule_right
  0.180974 seconds (18.25 k allocations: 1.118 MiB, 22.24% compilation time)
Running: rombergs_method
  0.443059 seconds (149.07 k allocations: 8.790 MiB, 8.72% gc time, 98.45% compilation time)
Running: simpsons_rule
  0.034663 seconds (38.61 k allocations: 2.470 MiB, 99.44% compilation time)
Running: simpsons38_rule
  0.024974 seconds (44.65 k allocations: 2.815 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.020824 seconds (44.13 k allocations: 1.763 MiB, 97.00% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.126427 seconds (40.35 k allocations: 2.510 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.390630 seconds (236.73 k allocations: 13.418 MiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=2
  0.195649 seconds (290.27 k allocations: 16.393 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.382742 seconds (240.88 k allocations: 13.468 MiB, 92.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.197448 seconds (240.87 k allocations: 13.545 MiB, 97.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.487711 seconds (456.21 k allocations: 149.630 MiB, 15.87% gc time, 39.51% compilation time)
Running: legendre_quadrature
  0.307563 seconds (191.45 k allocations: 11.141 MiB, 99.17% compilation time)
Running: lobatto_quadrature
  0.252449 seconds (202.98 k allocations: 11.859 MiB, 97.33% compilation time)
Running: radau_quadrature
  0.158827 seconds (202.97 k allocations: 11.915 MiB, 98.43% compilation time)
Running: rectangle_rule_left
  0.732796 seconds (20.14 k allocations: 1.227 MiB, 16.38% compilation time)
Running: rectangle_rule_midpoint
  0.026142 seconds (25.89 k allocations: 1.635 MiB, 99.15% compilation time)
Running: rectangle_rule_right
  0.684413 seconds (18.20 k allocations: 1.115 MiB, 3.85% compilation time)
Running: rombergs_method
  0.432719 seconds (138.99 k allocations: 8.083 MiB, 9.90% gc time, 77.31% compilation time)
Running: simpsons_rule
  0.048713 seconds (39.09 k allocations: 2.490 MiB, 99.53% compilation time)
Running: simpsons38_rule
  0.089843 seconds (45.35 k allocations: 2.842 MiB, 99.75% compilation time)
Running: trapezoidal_rule
  0.026448 seconds (56.28 k allocations: 1.959 MiB, 95.69% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.363159 seconds (152.11 k allocations: 9.115 MiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=1
  0.139031 seconds (70.34 k allocations: 2.237 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.195885 seconds (105.50 k allocations: 2.900 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.270793 seconds (92.98 k allocations: 2.686 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.375417 seconds (72.52 k allocations: 2.280 MiB, 99.26% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.350675 seconds (485.55 k allocations: 168.155 MiB, 11.00% gc time, 30.48% compilation time)
Running: legendre_quadrature
  0.208496 seconds (19.14 k allocations: 1.125 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000039 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.290803 seconds (590.00 M allocations: 8.792 GiB, 7.20% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.609921 seconds (592.75 M allocations: 8.833 GiB, 6.73% gc time)
Running: rombergs_method
  0.201073 seconds (20.91 k allocations: 1.198 MiB, 9.64% gc time, 99.69% compilation time)
Running: simpsons_rule
  0.000033 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026984 seconds (463 allocations: 22.578 KiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.121038 seconds (171 allocations: 7.859 KiB, 99.91% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.613915 seconds (209.94 M allocations: 3.138 GiB, 2.19% gc time, 2.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.787721 seconds (422.86 k allocations: 23.669 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=2
 17.601358 seconds (478.42 k allocations: 4.041 GiB, 7.12% gc time, 3.04% compilation time)
Running: chebyshev_quadrature with k=3
  7.738386 seconds (254.26 k allocations: 1.642 GiB, 3.83% gc time, 6.65% compilation time)
Running: chebyshev_quadrature with k=4
 10.633621 seconds (254.25 k allocations: 2.261 GiB, 2.05% gc time, 3.18% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.945982 seconds (492.92 k allocations: 13.255 GiB, 13.10% gc time, 2.52% compilation time)
Running: legendre_quadrature.
 10.615304 seconds (228.78 k allocations: 1.976 GiB, 11.28% gc time, 4.48% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.297506 seconds (8.24 M allocations: 13.384 GiB, 14.41% gc time, 2.21% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.328080 seconds (7.24 M allocations: 13.369 GiB, 18.24% gc time, 2.17% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.048784 seconds (22.88 k allocations: 1.394 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.313686 seconds (31.46 k allocations: 1.956 MiB, 1.19% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.915972 seconds (23.09 k allocations: 1.403 MiB, 0.32% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.778360 seconds (448.55 k allocations: 153.505 MiB, 1.95% gc time, 13.59% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.628723 seconds (200.04 M allocations: 2.983 GiB, 2.80% gc time, 0.82% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.304017 seconds (600.05 M allocations: 8.944 GiB, 6.45% gc time, 0.17% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.633160 seconds (600.03 M allocations: 8.943 GiB, 4.49% gc time, 0.10% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.113223 seconds (111.10 k allocations: 4.245 MiB, 98.17% compilation time)
Running: chebyshev_quadrature with k=1
  0.335762 seconds (252.71 k allocations: 13.877 MiB, 97.27% compilation time)
Running: chebyshev_quadrature with k=2
  0.244144 seconds (277.26 k allocations: 14.968 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.335549 seconds (224.24 k allocations: 11.980 MiB, 30.06% gc time, 99.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.273641 seconds (224.24 k allocations: 11.976 MiB, 99.57% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.452625 seconds (394.79 k allocations: 35.537 MiB, 77.80% compilation time)
Running: laguerre_quadrature with k=2
  0.398275 seconds (185.19 k allocations: 10.841 MiB, 82.85% compilation time)
Running: legendre_quadrature
  0.153269 seconds (149.17 k allocations: 8.338 MiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.020542 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017108 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.047868 seconds (19.35 k allocations: 1.157 MiB, 62.52% compilation time)
Running: rectangle_rule_midpoint
  0.033068 seconds (26.33 k allocations: 1.636 MiB, 65.60% compilation time)
Running: rectangle_rule_right
  0.030379 seconds (17.96 k allocations: 1.084 MiB, 47.16% compilation time)
Running: rombergs_method
  0.404769 seconds (176.58 k allocations: 10.195 MiB, 99.32% compilation time)
Running: simpsons_rule
  0.000598 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.069266 seconds (80.36 k allocations: 3.491 MiB, 98.60% compilation time)
Running: trapezoidal_rule
  0.175600 seconds (2.39 M allocations: 37.744 MiB, 50.15% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.015068 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.104910 seconds (2.46 k allocations: 1.691 MiB, 98.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.108808 seconds (2.71 k allocations: 2.355 MiB, 92.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.153624 seconds (2.31 k allocations: 2.028 MiB, 94.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.122614 seconds (2.31 k allocations: 1.469 MiB, 98.10% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.424176 seconds (371.63 k allocations: 905.356 MiB, 5.33% gc time, 5.83% compilation time)
Running: legendre_quadrature
  0.074210 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000190 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000117 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.645789 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000217 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.571350 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.118327 seconds (993 allocations: 56.609 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000022 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000023 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000599 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000137 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.093719 seconds (2.53 k allocations: 579.203 KiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.121614 seconds (2.79 k allocations: 780.188 KiB, 93.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.129659 seconds (2.39 k allocations: 661.047 KiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.109428 seconds (2.39 k allocations: 491.547 KiB, 97.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.802697 seconds (378.19 k allocations: 253.437 MiB, 28.68% compilation time)
Running: legendre_quadrature
  0.069093 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000103 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000053 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.110718 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000075 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.122603 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.105136 seconds (1.21 k allocations: 64.875 KiB, 99.59% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000006 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000218 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-24T13:17:02.649
