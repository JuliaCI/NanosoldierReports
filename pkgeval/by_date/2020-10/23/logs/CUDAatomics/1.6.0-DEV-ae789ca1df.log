Current time is 2020-10-24T07:40:05.425
Julia Version 1.6.0-DEV.1324
Commit ae789ca1df (2020-10-24 01:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T07:40:07.125
   Resolving package versions...
   Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed CUDAapi â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.1.0
   Installed CUDAatomics â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed CUDAdrv â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.0.0
   Installed CuArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.7.3
   Installed CUDAnative â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.10.2
   Installed NNlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.6
   Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed OrderedCollections â”€ v1.3.1
   Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.10
   Installed TimerOutputs â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed GPUArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.1
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed LLVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.7.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7ef05209] + CUDAatomics v0.4.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.1.0
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v3.1.0
  [7ef05209] + CUDAatomics v0.4.0
  [c5f51814] + CUDAdrv v6.0.0
  [be33ccc6] + CUDAnative v2.10.2
  [3a865a2d] + CuArrays v1.7.3
  [864edb3b] + DataStructures v0.17.20
  [0c68f7d7] + GPUArrays v2.0.1
  [929cbde3] + LLVM v1.7.0
  [1914dd2f] + MacroTools v0.5.6
  [872c559c] + NNlib v0.6.6
  [bac558e1] + OrderedCollections v1.3.1
  [ae029012] + Requires v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Building NNlib â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/d9f196d911f55aeaff11b11f681b135980783824/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mCEnum[39m
[32m  âœ“ [39m[90mTimerOutputs[39m
[32m  âœ“ [39m[90mAbstractFFTs[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mCUDAapi[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mGPUArrays[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mNNlib[39m
[32m  âœ“ [39m[90mDataStructures[39m
[91m  âœ— [39m[90mCUDAdrv[39m
[32m  âœ“ [39m[90mLLVM[39m
[91m  âœ— [39m[90mCUDAnative[39m
[91m  âœ— [39m[90mCuArrays[39m
[91m  âœ— [39mCUDAatomics
12 dependencies successfully precompiled, 4 errored (1 already precompiled)
Starting tests at 2020-10-24T07:41:13.957
     Testing CUDAatomics
Status `/tmp/jl_hXBdDX/Project.toml`
  [7ef05209] CUDAatomics v0.4.0
  [be33ccc6] CUDAnative v2.10.2
  [3a865a2d] CuArrays v1.7.3
  [929cbde3] LLVM v1.7.0
  [8dfed614] Test
Status `/tmp/jl_hXBdDX/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.1.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v3.1.0
  [7ef05209] CUDAatomics v0.4.0
  [c5f51814] CUDAdrv v6.0.0
  [be33ccc6] CUDAnative v2.10.2
  [3a865a2d] CuArrays v1.7.3
  [864edb3b] DataStructures v0.17.20
  [0c68f7d7] GPUArrays v2.0.1
  [929cbde3] LLVM v1.7.0
  [1914dd2f] MacroTools v0.5.6
  [872c559c] NNlib v0.6.6
  [bac558e1] OrderedCollections v1.3.1
  [ae029012] Requires v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
ERROR: LoadError: LoadError: LoadError: AssertionError: length(body.args) == 2
Stacktrace:
  [1] var"@checked"(__source__::LineNumberNode, __module__::Module, ex::Any)
    @ CUDAapi ~/.julia/packages/CUDAapi/wYUAO/src/call.jl:87
  [2] include(mod::Module, _path::String)
    @ Base ./Base.jl:389
  [3] include(x::String)
    @ CUDAdrv ~/.julia/packages/CUDAdrv/b1mvw/src/CUDAdrv.jl:1
  [4] top-level scope
    @ ~/.julia/packages/CUDAdrv/b1mvw/src/CUDAdrv.jl:20
  [5] include
    @ ./Base.jl:389 [inlined]
  [6] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [7] top-level scope
    @ none:1
  [8] eval
    @ ./boot.jl:360 [inlined]
  [9] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [10] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/CUDAdrv/b1mvw/src/libcuda.jl:5
in expression starting at /home/pkgeval/.julia/packages/CUDAdrv/b1mvw/src/libcuda.jl:5
in expression starting at /home/pkgeval/.julia/packages/CUDAdrv/b1mvw/src/CUDAdrv.jl:1
ERROR: LoadError: Failed to precompile CUDAdrv [c5f51814-7f29-56b8-a69c-e4d8f6be1fde] to /home/pkgeval/.julia/compiled/v1.6/CUDAdrv/HMhfu_NOhBo.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
    @ Base ./loading.jl:1360
  [3] compilecache(pkg::Base.PkgId, path::String)
    @ Base ./loading.jl:1313
  [4] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1033
  [5] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:926
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:913
  [7] include
    @ ./Base.jl:389 [inlined]
  [8] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [9] top-level scope
    @ none:1
 [10] eval
    @ ./boot.jl:360 [inlined]
 [11] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [12] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/CUDAnative/hfulr/src/CUDAnative.jl:1
ERROR: LoadError: Failed to precompile CUDAnative [be33ccc6-a3ff-5ff2-a52e-74243cff1e17] to /home/pkgeval/.julia/compiled/v1.6/CUDAnative/4Zu2W_NOhBo.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
   @ Base ./loading.jl:1360
 [3] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1313
 [4] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1033
 [5] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:926
 [6] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:913
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [8] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/CUDAatomics/pOvDm/test/runtests.jl:2
ERROR: Package CUDAatomics errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
