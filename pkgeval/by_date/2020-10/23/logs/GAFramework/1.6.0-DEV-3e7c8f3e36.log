Current time is 2020-10-24T06:26:08.425
Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T06:26:10.172
   Resolving package versions...
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
   Installed GAFramework â”€ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-24T06:26:20.357
     Testing GAFramework
Status `/tmp/jl_IPGvXY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_IPGvXY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21717763057591336
curgen: 20 fitness: 0.21723350546587522
curgen: 30 fitness: 0.21723350546587522
curgen: 40 fitness: 0.2172335533026586
curgen: 50 fitness: 0.2172335533026586
CoordinateCreature{Vector{Float64}}([0.22258929413090522], -0.2172335533026586) 0.22258929413090522 -0.2172335533026586
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257906130253674
curgen: 100 fitness: 3.257923129631784
curgen: 150 fitness: 3.258019801155081
curgen: 200 fitness: 3.258055571253503
curgen: 250 fitness: 3.2581526258785
curgen: 300 fitness: 3.258392066190532
curgen: 350 fitness: 3.25839491009181
curgen: 400 fitness: 3.258472419350362
curgen: 450 fitness: 3.258472419350362
curgen: 500 fitness: 3.258472419350362
CoordinateCreature{Vector{Float64}}([-0.22260356005072832, -0.22241891706814051, -0.22248638782348315, 0.2227022637503922, 0.22258201981301268, 0.2224549692995679, -0.22266997925498486, -0.22286880489287939, -0.22209383584552428, -0.22246140503238168, -0.22267463637638768, -0.22248902350643193, -0.22207889304231593, 0.22282931057345942, -0.22242805471638383], -3.258472419350362) [-0.22260356005072832, -0.22241891706814051, -0.22248638782348315, 0.2227022637503922, 0.22258201981301268, 0.2224549692995679, -0.22266997925498486, -0.22286880489287939, -0.22209383584552428, -0.22246140503238168, -0.22267463637638768, -0.22248902350643193, -0.22207889304231593, 0.22282931057345942, -0.22242805471638383] -3.258472419350362
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0010015131418015244
curgen: 100 fitness: -0.0010015131418015244
curgen: 150 fitness: -0.0010015131418015244
curgen: 200 fitness: -0.0009505477235904891
curgen: 250 fitness: -0.0009505477235904891
curgen: 300 fitness: -0.0009505477235904891
curgen: 350 fitness: -0.0009505477235904891
curgen: 400 fitness: -0.0009505477235904891
curgen: 450 fitness: -0.0009505477235904891
curgen: 500 fitness: -0.000907468643674747
CoordinateCreature{Vector{Float64}}([-0.000757432419077525, 0.00016387408011294855, 0.0006460932694772399, 0.0001030804794649948, 1.2431241221820291e-5, -0.0005905580269855829, 0.0007858912679824655, 0.0008088098591931513, -0.0006471224377466266, 0.0004278465651651839, -0.000977317712674238, 0.0003221023621519077, 0.00012021390426795766, -0.0004416418707843564, 0.00023361136535424008], 0.000907468643674747) [-0.000757432419077525, 0.00016387408011294855, 0.0006460932694772399, 0.0001030804794649948, 1.2431241221820291e-5, -0.0005905580269855829, 0.0007858912679824655, 0.0008088098591931513, -0.0006471224377466266, 0.0004278465651651839, -0.000977317712674238, 0.0003221023621519077, 0.00012021390426795766, -0.0004416418707843564, 0.00023361136535424008] 0.000907468643674747
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-24T06:26:55.156
