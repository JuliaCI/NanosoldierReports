Current time is 2020-10-24T08:03:51.632
Julia Version 1.6.0-DEV.1324
Commit ae789ca1df (2020-10-24 01:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T08:03:53.879
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-24T08:04:12.456
     Testing GAFramework
Status `/tmp/jl_CYTq54/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_CYTq54/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723310251843594
curgen: 20 fitness: 0.21723310251843594
curgen: 30 fitness: 0.21723310251843594
curgen: 40 fitness: 0.21723310251843594
curgen: 50 fitness: 0.21723310251843594
CoordinateCreature{Vector{Float64}}([-0.22243923438386615], -0.21723310251843594) -0.22243923438386615 -0.21723310251843594
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581800368361504
curgen: 100 fitness: 3.258335426577834
curgen: 150 fitness: 3.2583490335597842
curgen: 200 fitness: 3.2583928865100225
curgen: 250 fitness: 3.2583928865100225
curgen: 300 fitness: 3.2584077522651
curgen: 350 fitness: 3.2584077522651
curgen: 400 fitness: 3.258412744264958
curgen: 450 fitness: 3.2584707465972405
curgen: 500 fitness: 3.2584819118020274
CoordinateCreature{Vector{Float64}}([-0.22252484694862476, -0.22237890849364347, 0.22259500037153315, 0.22257612610841138, 0.22267367989578707, 0.22241433684118847, 0.22228387188912274, -0.22269580812963655, 0.22267978364383023, -0.22254868858138607, -0.2225782728249666, 0.22242910744365868, -0.22249547581263632, -0.22279159764106932, 0.2230553295779229], -3.2584819118020274) [-0.22252484694862476, -0.22237890849364347, 0.22259500037153315, 0.22257612610841138, 0.22267367989578707, 0.22241433684118847, 0.22228387188912274, -0.22269580812963655, 0.22267978364383023, -0.22254868858138607, -0.2225782728249666, 0.22242910744365868, -0.22249547581263632, -0.22279159764106932, 0.2230553295779229] -3.2584819118020274
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004760241043584301
curgen: 100 fitness: -0.004184875738076244
curgen: 150 fitness: -0.004143884800470232
curgen: 200 fitness: -0.004128558671908422
curgen: 250 fitness: -0.004085789997844813
curgen: 300 fitness: -0.004085789997844813
curgen: 350 fitness: -0.003512310923753148
curgen: 400 fitness: -0.0030454222506079986
curgen: 450 fitness: -0.0030454222506079986
curgen: 500 fitness: -0.0028099698766652637
CoordinateCreature{Vector{Float64}}([0.0003633038445607351, -0.003097559915062474, 0.00023891672284599014, -0.0009664382551438739, -0.0005098883649804539, 0.00029254270212218983, -0.0007638305098207107, 0.0007221127653014232, 1.4462713910764596e-5, -0.0002050854492405725, -0.0004478478594642033, -2.670040553602246e-5, 7.517486222180064e-5, 0.0003689061631880694, -0.00025360979867987583], 0.0025032531453348383) [0.0003633038445607351, -0.003097559915062474, 0.00023891672284599014, -0.0009664382551438739, -0.0005098883649804539, 0.00029254270212218983, -0.0007638305098207107, 0.0007221127653014232, 1.4462713910764596e-5, -0.0002050854492405725, -0.0004478478594642033, -2.670040553602246e-5, 7.517486222180064e-5, 0.0003689061631880694, -0.00025360979867987583] 0.0025032531453348383
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-24T08:05:15.401
