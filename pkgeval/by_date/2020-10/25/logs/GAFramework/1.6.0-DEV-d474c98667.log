Current time is 2020-10-26T07:14:27.667
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T07:14:30.532
   Resolving package versions...
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
   Installed GAFramework â”€ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-26T07:14:48.769
     Testing GAFramework
Status `/tmp/jl_7EeiIY/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7EeiIY/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172315204583756
curgen: 20 fitness: 0.2172315204583756
curgen: 30 fitness: 0.2172315204583756
curgen: 40 fitness: 0.2172315204583756
curgen: 50 fitness: 0.2172325855100317
CoordinateCreature{Vector{Float64}}([-0.2227016834929969], -0.2172325855100317) -0.2227016834929969 -0.2172325855100317
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258169211114088
curgen: 100 fitness: 3.258222958556139
curgen: 150 fitness: 3.258285030759755
curgen: 200 fitness: 3.2582866073369914
curgen: 250 fitness: 3.258352199719577
curgen: 300 fitness: 3.2583802762755925
curgen: 350 fitness: 3.2583802762755925
curgen: 400 fitness: 3.2583946144620155
curgen: 450 fitness: 3.2584005749015676
curgen: 500 fitness: 3.258422330430032
CoordinateCreature{Vector{Float64}}([0.2226213515382102, 0.22275435372821828, -0.22174197745054208, 0.2232344659838707, -0.22272642221452366, 0.2224693658558486, -0.22250063082440466, -0.22285220036311404, -0.22233941775761765, 0.22234449720560917, -0.22222100053184196, -0.22239156743604122, -0.22212608845726536, -0.22221611652580342, -0.22276163365855678], -3.258422330430032) [0.2226213515382102, 0.22275435372821828, -0.22174197745054208, 0.2232344659838707, -0.22272642221452366, 0.2224693658558486, -0.22250063082440466, -0.22285220036311404, -0.22233941775761765, 0.22234449720560917, -0.22222100053184196, -0.22239156743604122, -0.22212608845726536, -0.22221611652580342, -0.22276163365855678] -3.258422330430032
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005899561638472051
curgen: 100 fitness: -0.005544653449391035
curgen: 150 fitness: -0.00392002882512088
curgen: 200 fitness: -0.00391086178458977
curgen: 250 fitness: -0.00391086178458977
curgen: 300 fitness: -0.0015868494608355377
curgen: 350 fitness: -0.0009465205355070339
curgen: 400 fitness: -0.0007993322532229286
curgen: 450 fitness: -0.0007959246356392669
curgen: 500 fitness: -0.0007959246356392669
CoordinateCreature{Vector{Float64}}([0.00016005266786755178, -4.3093762688950314e-5, -0.00016235942973009168, 0.00046288870776654844, 0.000531650220844945, -6.982781918297851e-5, 0.00023596280472113667, -0.00037167012822897014, 0.00023533271668747498, 0.0013628061177033645, -0.0007473511961309055, -2.439232952963644e-5, -1.4714942837263186e-5, 0.0008620309374279336, 0.00021767265282374377], 0.0007959246356392669) [0.00016005266786755178, -4.3093762688950314e-5, -0.00016235942973009168, 0.00046288870776654844, 0.000531650220844945, -6.982781918297851e-5, 0.00023596280472113667, -0.00037167012822897014, 0.00023533271668747498, 0.0013628061177033645, -0.0007473511961309055, -2.439232952963644e-5, -1.4714942837263186e-5, 0.0008620309374279336, 0.00021767265282374377] 0.0007959246356392669
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-26T07:15:44.410
