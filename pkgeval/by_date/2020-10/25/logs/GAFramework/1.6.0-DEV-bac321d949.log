Current time is 2020-10-26T13:10:49.419
Julia Version 1.6.0-DEV.1331
Commit bac321d949 (2020-10-25 22:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T13:10:51.188
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-26T13:11:03.106
     Testing GAFramework
Status `/tmp/jl_wZ3BjZ/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_wZ3BjZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723172242624297
curgen: 20 fitness: 0.21723329674124417
curgen: 30 fitness: 0.21723329674124417
curgen: 40 fitness: 0.21723329674124417
curgen: 50 fitness: 0.21723329674124417
CoordinateCreature{Vector{Float64}}([0.2226347018947968], -0.21723329674124417) 0.2226347018947968 -0.21723329674124417
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577721195183207
curgen: 100 fitness: 3.257908535334292
curgen: 150 fitness: 3.257908535334292
curgen: 200 fitness: 3.25828059313383
curgen: 250 fitness: 3.2582817586910027
curgen: 300 fitness: 3.2584169651870534
curgen: 350 fitness: 3.258431581006781
curgen: 400 fitness: 3.258431581006781
curgen: 450 fitness: 3.2584529981472885
curgen: 500 fitness: 3.2584529981472885
CoordinateCreature{Vector{Float64}}([0.2223618503708069, -0.22301397514987908, 0.2226517820473283, -0.22280347426226227, -0.2229082942705397, -0.22267105398336545, 0.2225489573401178, 0.22257469865723456, 0.22250458916089336, -0.22246908592922857, -0.2227046016509055, 0.22207006479197483, -0.22291325182482016, 0.2220453590102975, -0.22234626214525607], -3.2584529981472885) [0.2223618503708069, -0.22301397514987908, 0.2226517820473283, -0.22280347426226227, -0.2229082942705397, -0.22267105398336545, 0.2225489573401178, 0.22257469865723456, 0.22250458916089336, -0.22246908592922857, -0.2227046016509055, 0.22207006479197483, -0.22291325182482016, 0.2220453590102975, -0.22234626214525607] -3.2584529981472885
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018153488663585904
curgen: 100 fitness: -0.0017188188908221491
curgen: 150 fitness: -0.0017188188908221491
curgen: 200 fitness: -0.0013977378584399958
curgen: 250 fitness: -0.001394461972836325
curgen: 300 fitness: -0.0013933168584685518
curgen: 350 fitness: -0.0007918669488731211
curgen: 400 fitness: -0.000776358443800973
curgen: 450 fitness: -0.0007274340786977973
curgen: 500 fitness: -0.0007274340786977973
CoordinateCreature{Vector{Float64}}([0.00017218305460030194, -0.0006119567826673354, 0.0009457077975415385, -0.0004521469555119756, -0.0006394888959423813, 0.0002337893188616249, -1.0735871537492889e-5, 7.075654409843205e-5, 0.00024547901671727703, 0.0006183224464975601, 0.00022250459569147629, 0.00019973143225083222, -0.000680356380890419, -0.0008305082440777057, -0.00010187948994411114], 0.0007274340786977973) [0.00017218305460030194, -0.0006119567826673354, 0.0009457077975415385, -0.0004521469555119756, -0.0006394888959423813, 0.0002337893188616249, -1.0735871537492889e-5, 7.075654409843205e-5, 0.00024547901671727703, 0.0006183224464975601, 0.00022250459569147629, 0.00019973143225083222, -0.000680356380890419, -0.0008305082440777057, -0.00010187948994411114] 0.0007274340786977973
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-26T13:11:43.040
