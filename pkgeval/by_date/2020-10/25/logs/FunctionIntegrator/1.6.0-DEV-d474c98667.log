Current time is 2020-10-26T08:17:06.284
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T08:17:08.223
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-26T08:19:35.688
     Testing FunctionIntegrator
Status `/tmp/jl_G0hpzZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_G0hpzZ/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.220909 seconds (293.38 k allocations: 13.825 MiB, 90.60% compilation time)
Running: chebyshev_quadrature with k=1
  3.678264 seconds (2.25 M allocations: 130.776 MiB, 11.31% gc time, 99.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.243662 seconds (417.68 k allocations: 24.253 MiB, 88.59% compilation time)
Running: chebyshev_quadrature with k=3
  1.353267 seconds (483.50 k allocations: 27.372 MiB, 72.43% gc time, 98.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.879685 seconds (427.02 k allocations: 23.948 MiB, 95.67% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 50.868288 seconds (35.47 M allocations: 2.979 GiB, 17.96% gc time, 81.52% compilation time)
Running: laguerre_quadrature with k=1
  4.060121 seconds (3.24 M allocations: 182.139 MiB, 2.30% gc time, 99.94% compilation time)
Running: legendre_quadrature
  0.541558 seconds (211.40 k allocations: 12.234 MiB, 46.11% gc time, 99.72% compilation time)
Running: lobatto_quadrature
  0.597547 seconds (340.48 k allocations: 20.721 MiB, 99.49% compilation time)
Running: radau_quadrature
  0.982794 seconds (463.95 k allocations: 28.524 MiB, 4.36% gc time, 99.78% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.862758 seconds (100.02 M allocations: 1.491 GiB, 0.58% gc time, 0.16% compilation time)
Running: rectangle_rule_midpoint.
  0.085046 seconds (173.35 k allocations: 3.888 MiB, 26.07% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.860026 seconds (100.02 M allocations: 1.491 GiB, 0.31% gc time, 0.08% compilation time)
Running: rombergs_method
  0.739028 seconds (741.34 k allocations: 43.136 MiB, 3.03% gc time, 99.71% compilation time)
Running: simpsons_rule
  0.027274 seconds (48.05 k allocations: 2.634 MiB, 86.40% compilation time)
Running: simpsons38_rule
  0.136412 seconds (111.45 k allocations: 5.956 MiB, 98.49% compilation time)
Running: trapezoidal_rule
  0.350453 seconds (1.72 M allocations: 28.730 MiB, 27.96% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.080695 seconds (30.72 k allocations: 1.831 MiB, 99.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.388577 seconds (298.12 k allocations: 15.914 MiB, 99.60% compilation time)
Running: chebyshev_quadrature with k=2
  0.144029 seconds (94.22 k allocations: 2.707 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.142507 seconds (82.47 k allocations: 2.508 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.142507 seconds (65.08 k allocations: 2.154 MiB, 98.62% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.890798 seconds (510.51 k allocations: 162.280 MiB, 11.54% gc time, 29.32% compilation time)
Running: legendre_quadrature
  0.222048 seconds (42.08 k allocations: 2.439 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.019290 seconds (16.06 k allocations: 1022.310 KiB, 99.24% compilation time)
Running: radau_quadrature
  0.018974 seconds (16.16 k allocations: 1.005 MiB, 99.22% compilation time)
Running: rectangle_rule_left
 12.369925 seconds (471.41 M allocations: 7.025 GiB, 5.03% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.082824 seconds (476.96 M allocations: 7.107 GiB, 4.99% gc time)
Running: rombergs_method
  0.211548 seconds (334.21 k allocations: 19.146 MiB, 99.83% compilation time)
Running: simpsons_rule
  0.000020 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.042985 seconds (19.43 k allocations: 1.184 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.042369 seconds (16.97 k allocations: 1.034 MiB, 99.82% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.012530 seconds (1.03 k allocations: 34.125 KiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.074166 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.156583 seconds (2.71 k allocations: 124.266 KiB, 99.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.070414 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.081367 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.542336 seconds (369.35 k allocations: 19.504 MiB, 99.66% compilation time)
Running: legendre_quadrature
  0.078633 seconds (1.28 k allocations: 65.891 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000068 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000026 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000164 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000121 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000163 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.076789 seconds (1.04 k allocations: 56.469 KiB, 99.86% compilation time)
Running: simpsons_rule
  0.000019 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.019409 seconds (923 allocations: 39.281 KiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.010753 seconds (44.29 k allocations: 702.859 KiB, 92.22% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066928 seconds (83.49 k allocations: 5.002 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.263171 seconds (235.65 k allocations: 13.387 MiB, 6.14% gc time, 99.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.369536 seconds (289.14 k allocations: 16.397 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.198204 seconds (239.80 k allocations: 13.552 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.512709 seconds (239.80 k allocations: 13.470 MiB, 4.25% gc time, 99.69% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.065739 seconds (454.96 k allocations: 163.902 MiB, 21.05% gc time, 41.13% compilation time)
Running: legendre_quadrature
  0.096184 seconds (190.36 k allocations: 11.084 MiB, 9.39% gc time, 98.60% compilation time)
Running: lobatto_quadrature
  0.390203 seconds (201.88 k allocations: 11.811 MiB, 99.61% compilation time)
Running: radau_quadrature
  0.152317 seconds (201.88 k allocations: 11.808 MiB, 98.94% compilation time)
Running: rectangle_rule_left
  0.419138 seconds (19.37 k allocations: 1.189 MiB, 7.23% compilation time)
Running: rectangle_rule_midpoint
  0.025151 seconds (25.55 k allocations: 1.616 MiB, 99.58% compilation time)
Running: rectangle_rule_right
  0.359442 seconds (17.90 k allocations: 1.099 MiB, 4.07% compilation time)
Running: rombergs_method
  0.121551 seconds (137.77 k allocations: 8.026 MiB, 97.89% compilation time)
Running: simpsons_rule
  0.091131 seconds (37.98 k allocations: 2.442 MiB, 99.83% compilation time)
Running: simpsons38_rule
  0.045767 seconds (43.94 k allocations: 2.785 MiB, 37.97% gc time, 99.61% compilation time)
Running: trapezoidal_rule
  0.019353 seconds (43.20 k allocations: 1.730 MiB, 97.52% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.093161 seconds (68.44 k allocations: 3.060 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=1
  0.347770 seconds (242.24 k allocations: 13.474 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.251714 seconds (296.17 k allocations: 16.388 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.475124 seconds (246.37 k allocations: 13.522 MiB, 2.82% gc time, 99.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.632817 seconds (246.37 k allocations: 13.537 MiB, 99.72% compilation time)
Running: hermite_quadrature with k=2
 21.357129 seconds (20.49 M allocations: 1.088 GiB, 10.22% gc time, 99.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.372531 seconds (464.13 k allocations: 50.102 MiB, 13.13% gc time, 81.31% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.187317 seconds (282.35 k allocations: 15.726 MiB, 11.48% gc time, 92.46% compilation time)
Running: legendre_quadrature
  0.325080 seconds (196.90 k allocations: 11.413 MiB, 99.29% compilation time)
Running: lobatto_quadrature
  0.410954 seconds (222.54 k allocations: 37.584 MiB, 3.85% gc time, 91.23% compilation time)
Running: radau_quadrature
  0.588076 seconds (219.13 k allocations: 30.269 MiB, 91.98% compilation time)
Running: rectangle_rule_left
  0.038936 seconds (22.28 k allocations: 1.333 MiB, 99.68% compilation time)
Running: rectangle_rule_midpoint
  0.054826 seconds (27.36 k allocations: 1.703 MiB, 31.21% gc time, 99.74% compilation time)
Running: rectangle_rule_right
  0.016233 seconds (19.02 k allocations: 1.153 MiB, 99.26% compilation time)
Running: rombergs_method
  0.089027 seconds (140.11 k allocations: 8.068 MiB, 98.09% compilation time)
Running: simpsons_rule
  0.057394 seconds (45.46 k allocations: 2.710 MiB, 99.50% compilation time)
Running: simpsons38_rule
  0.133115 seconds (58.91 k allocations: 3.170 MiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.089342 seconds (29.23 k allocations: 1.655 MiB, 99.72% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.035348 seconds (52.41 k allocations: 2.720 MiB, 92.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.325930 seconds (237.76 k allocations: 13.243 MiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.703015 seconds (291.35 k allocations: 16.171 MiB, 4.12% gc time, 99.64% compilation time)
Running: chebyshev_quadrature with k=3
  0.234044 seconds (241.91 k allocations: 13.334 MiB, 89.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.410429 seconds (241.91 k allocations: 13.332 MiB, 99.58% compilation time)
Running: hermite_quadrature with k=2
  1.079848 seconds (175.13 k allocations: 10.126 MiB, 99.80% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  8.409358 seconds (457.40 k allocations: 1.176 GiB, 36.88% gc time, 7.44% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.234154 seconds (277.64 k allocations: 15.557 MiB, 87.45% compilation time)
Running: legendre_quadrature
  0.327227 seconds (192.47 k allocations: 11.190 MiB, 5.10% gc time, 91.79% compilation time)
Running: lobatto_quadrature
  0.413185 seconds (213.30 k allocations: 23.312 MiB, 96.16% compilation time)
Running: radau_quadrature
  0.471177 seconds (212.45 k allocations: 21.244 MiB, 3.43% gc time, 97.73% compilation time)
Running: rectangle_rule_left
  0.020374 seconds (20.07 k allocations: 1.228 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.024380 seconds (26.25 k allocations: 1.652 MiB, 99.52% compilation time)
Running: rectangle_rule_right
  0.017743 seconds (17.88 k allocations: 1.099 MiB, 98.26% compilation time)
Running: rombergs_method
  0.131273 seconds (135.95 k allocations: 7.879 MiB, 98.37% compilation time)
Running: simpsons_rule
  0.123737 seconds (40.80 k allocations: 2.541 MiB, 99.84% compilation time)
Running: simpsons38_rule
  0.030373 seconds (49.73 k allocations: 2.931 MiB, 99.30% compilation time)
Running: trapezoidal_rule
  0.015067 seconds (24.14 k allocations: 1.492 MiB, 98.81% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.023235 seconds (40.61 k allocations: 2.580 MiB, 99.27% compilation time)
Running: chebyshev_quadrature with k=1
  0.397455 seconds (236.14 k allocations: 13.461 MiB, 4.44% gc time, 99.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.153345 seconds (289.64 k allocations: 16.487 MiB, 97.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.233657 seconds (240.28 k allocations: 13.548 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.489647 seconds (240.28 k allocations: 13.373 MiB, 5.67% gc time, 99.46% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.688626 seconds (455.50 k allocations: 195.008 MiB, 8.06% gc time, 24.56% compilation time)
Running: legendre_quadrature
  0.137134 seconds (190.86 k allocations: 11.114 MiB, 98.28% compilation time)
Running: lobatto_quadrature
  0.788035 seconds (202.38 k allocations: 11.836 MiB, 15.69% gc time, 91.97% compilation time)
Running: radau_quadrature
  0.230128 seconds (202.38 k allocations: 11.842 MiB, 97.14% compilation time)
Running: rectangle_rule_left
  0.389671 seconds (19.89 k allocations: 1.214 MiB, 25.36% compilation time)
Running: rectangle_rule_midpoint
  0.179909 seconds (25.89 k allocations: 1.634 MiB, 99.94% compilation time)
Running: rectangle_rule_right
  0.213535 seconds (18.25 k allocations: 1.118 MiB, 42.25% compilation time)
Running: rombergs_method
  0.425694 seconds (149.07 k allocations: 8.790 MiB, 99.29% compilation time)
Running: simpsons_rule
  0.017498 seconds (38.61 k allocations: 2.470 MiB, 99.19% compilation time)
Running: simpsons38_rule
  0.022625 seconds (44.65 k allocations: 2.815 MiB, 99.37% compilation time)
Running: trapezoidal_rule
  0.019112 seconds (44.13 k allocations: 1.763 MiB, 96.83% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018962 seconds (40.35 k allocations: 2.510 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.194219 seconds (236.73 k allocations: 13.418 MiB, 7.46% gc time, 66.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.152449 seconds (290.27 k allocations: 16.392 MiB, 97.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.714792 seconds (240.88 k allocations: 13.468 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=4
  0.252229 seconds (240.87 k allocations: 13.545 MiB, 13.11% gc time, 98.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.537770 seconds (456.21 k allocations: 149.638 MiB, 2.10% gc time, 46.94% compilation time)
Running: legendre_quadrature
  0.246259 seconds (191.45 k allocations: 11.126 MiB, 99.12% compilation time)
Running: lobatto_quadrature
  0.118455 seconds (202.98 k allocations: 11.875 MiB, 9.37% gc time, 98.17% compilation time)
Running: radau_quadrature
  0.247321 seconds (202.97 k allocations: 11.869 MiB, 66.78% compilation time)
Running: rectangle_rule_left
  0.631626 seconds (20.14 k allocations: 1.227 MiB, 4.28% compilation time)
Running: rectangle_rule_midpoint
  0.049912 seconds (25.89 k allocations: 1.635 MiB, 63.86% compilation time)
Running: rectangle_rule_right
  0.475328 seconds (18.20 k allocations: 1.115 MiB, 4.88% compilation time)
Running: rombergs_method
  0.261447 seconds (138.99 k allocations: 8.082 MiB, 98.31% compilation time)
Running: simpsons_rule
  0.049430 seconds (39.09 k allocations: 2.490 MiB, 99.64% compilation time)
Running: simpsons38_rule
  0.028585 seconds (45.35 k allocations: 2.842 MiB, 99.39% compilation time)
Running: trapezoidal_rule
  0.014737 seconds (56.28 k allocations: 1.959 MiB, 95.68% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.309777 seconds (152.10 k allocations: 9.115 MiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.201076 seconds (70.34 k allocations: 2.237 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=2
  0.303261 seconds (105.50 k allocations: 2.900 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.221030 seconds (92.98 k allocations: 2.686 MiB, 24.76% gc time, 73.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.291931 seconds (72.52 k allocations: 2.280 MiB, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.450584 seconds (485.56 k allocations: 168.218 MiB, 24.97% gc time, 47.23% compilation time)
Running: legendre_quadrature
  0.170885 seconds (19.14 k allocations: 1.125 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000149 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.671474 seconds (590.00 M allocations: 8.792 GiB, 6.83% gc time)
Running: rectangle_rule_midpoint
  0.000068 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 15.957679 seconds (592.75 M allocations: 8.833 GiB, 8.30% gc time)
Running: rombergs_method
  0.139036 seconds (20.91 k allocations: 1.197 MiB, 99.45% compilation time)
Running: simpsons_rule
  0.000058 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031288 seconds (463 allocations: 22.578 KiB, 99.60% compilation time)
Running: trapezoidal_rule
  0.019773 seconds (171 allocations: 7.859 KiB, 99.39% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 23.961184 seconds (209.94 M allocations: 3.138 GiB, 2.05% gc time, 0.91% compilation time)
Running: chebyshev_quadrature with k=1
  0.409049 seconds (422.88 k allocations: 23.670 MiB, 4.84% gc time, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
 16.601413 seconds (478.44 k allocations: 4.041 GiB, 5.37% gc time, 3.12% compilation time)
Running: chebyshev_quadrature with k=3
  7.034274 seconds (254.26 k allocations: 1.642 GiB, 4.31% gc time, 4.33% compilation time)
Running: chebyshev_quadrature with k=4
  9.328229 seconds (254.25 k allocations: 2.261 GiB, 1.76% gc time, 6.25% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.349678 seconds (492.93 k allocations: 13.255 GiB, 11.54% gc time, 3.23% compilation time)
Running: legendre_quadrature.
  9.412952 seconds (228.79 k allocations: 1.976 GiB, 4.96% gc time, 5.07% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.561868 seconds (8.24 M allocations: 13.384 GiB, 24.96% gc time, 1.58% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.160806 seconds (7.24 M allocations: 13.369 GiB, 18.56% gc time, 1.26% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.579413 seconds (22.88 k allocations: 1.394 MiB, 0.39% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.864925 seconds (31.46 k allocations: 1.956 MiB, 0.26% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.739200 seconds (23.09 k allocations: 1.403 MiB, 0.33% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.083750 seconds (448.57 k allocations: 153.506 MiB, 5.29% gc time, 17.76% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.137756 seconds (200.04 M allocations: 2.983 GiB, 2.50% gc time, 0.24% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.456110 seconds (600.05 M allocations: 8.944 GiB, 5.92% gc time, 0.55% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.993474 seconds (600.03 M allocations: 8.943 GiB, 4.28% gc time, 0.15% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.122194 seconds (111.10 k allocations: 4.245 MiB, 97.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.205969 seconds (252.71 k allocations: 13.877 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=2
  0.192537 seconds (277.25 k allocations: 14.964 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=3
  0.275242 seconds (224.24 k allocations: 11.981 MiB, 44.98% gc time, 99.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.262478 seconds (224.24 k allocations: 11.976 MiB, 99.42% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.704425 seconds (394.79 k allocations: 35.541 MiB, 96.87% compilation time)
Running: laguerre_quadrature with k=2
  0.281896 seconds (185.19 k allocations: 10.857 MiB, 88.86% compilation time)
Running: legendre_quadrature
  0.118223 seconds (149.17 k allocations: 8.338 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.021428 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016784 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.203174 seconds (19.35 k allocations: 1.157 MiB, 92.47% compilation time)
Running: rectangle_rule_midpoint
  0.052240 seconds (26.33 k allocations: 1.636 MiB, 76.00% compilation time)
Running: rectangle_rule_right
  0.041146 seconds (17.96 k allocations: 1.084 MiB, 57.42% compilation time)
Running: rombergs_method
  0.270508 seconds (176.58 k allocations: 10.195 MiB, 97.83% compilation time)
Running: simpsons_rule
  0.000298 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.072440 seconds (80.36 k allocations: 3.491 MiB, 98.71% compilation time)
Running: trapezoidal_rule
  0.142934 seconds (2.39 M allocations: 37.744 MiB, 54.83% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.034914 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.158131 seconds (2.46 k allocations: 1.691 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.122573 seconds (2.71 k allocations: 2.355 MiB, 97.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.119632 seconds (2.31 k allocations: 2.028 MiB, 97.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.085606 seconds (2.31 k allocations: 1.469 MiB, 97.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.594813 seconds (371.63 k allocations: 905.326 MiB, 6.92% gc time, 10.29% compilation time)
Running: legendre_quadrature
  0.075466 seconds (1.27 k allocations: 68.203 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000168 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000118 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.329869 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000217 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.618380 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071699 seconds (993 allocations: 56.609 KiB, 99.45% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000918 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000158 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.110382 seconds (2.53 k allocations: 579.203 KiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.117067 seconds (2.79 k allocations: 780.188 KiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.113736 seconds (2.39 k allocations: 661.047 KiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.127604 seconds (2.39 k allocations: 491.547 KiB, 89.73% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.566345 seconds (378.19 k allocations: 253.437 MiB, 26.05% compilation time)
Running: legendre_quadrature
  0.108418 seconds (1.32 k allocations: 67.859 KiB, 64.58% compilation time)
Running: lobatto_quadrature
  0.000175 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000064 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.252179 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000133 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.138540 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095029 seconds (1.21 k allocations: 64.875 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000494 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-26T08:30:40.925
