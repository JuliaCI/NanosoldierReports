Current time is 2020-10-26T12:28:53.065
Julia Version 1.6.0-DEV.1331
Commit bac321d949 (2020-10-25 22:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T12:28:56.064
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-26T12:32:15.206
     Testing FunctionIntegrator
Status `/tmp/jl_JeARQX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_JeARQX/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.341917 seconds (293.15 k allocations: 13.814 MiB, 93.91% compilation time)
Running: chebyshev_quadrature with k=1
  3.159725 seconds (2.25 M allocations: 130.522 MiB, 12.44% gc time, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.683205 seconds (417.67 k allocations: 24.217 MiB, 51.25% gc time, 95.68% compilation time)
Running: chebyshev_quadrature with k=3
  0.368943 seconds (483.50 k allocations: 27.371 MiB, 93.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.281738 seconds (427.02 k allocations: 23.935 MiB, 6.09% gc time, 94.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 55.117026 seconds (35.45 M allocations: 2.978 GiB, 21.33% gc time, 81.93% compilation time)
Running: laguerre_quadrature with k=1
  6.053758 seconds (3.24 M allocations: 182.183 MiB, 22.97% gc time, 99.95% compilation time)
Running: legendre_quadrature
  0.286406 seconds (211.51 k allocations: 12.245 MiB, 99.41% compilation time)
Running: lobatto_quadrature
  0.541681 seconds (339.58 k allocations: 20.638 MiB, 6.93% gc time, 99.61% compilation time)
Running: radau_quadrature
  0.476246 seconds (457.47 k allocations: 28.111 MiB, 99.39% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.494250 seconds (100.02 M allocations: 1.491 GiB, 0.72% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.102474 seconds (173.35 k allocations: 3.888 MiB, 51.44% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 43.555281 seconds (100.02 M allocations: 1.491 GiB, 0.54% gc time, 0.06% compilation time)
Running: rombergs_method
  0.919058 seconds (740.57 k allocations: 43.091 MiB, 2.16% gc time, 99.68% compilation time)
Running: simpsons_rule
  0.140176 seconds (48.05 k allocations: 2.634 MiB, 98.52% compilation time)
Running: simpsons38_rule
  0.103081 seconds (111.34 k allocations: 5.952 MiB, 17.44% gc time, 98.52% compilation time)
Running: trapezoidal_rule
  0.248382 seconds (1.72 M allocations: 28.727 MiB, 19.14% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048907 seconds (30.73 k allocations: 1.831 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.635626 seconds (295.61 k allocations: 15.748 MiB, 24.74% gc time, 99.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.152679 seconds (94.22 k allocations: 2.707 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.146315 seconds (82.47 k allocations: 2.508 MiB, 98.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.151438 seconds (65.08 k allocations: 2.154 MiB, 98.85% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.160992 seconds (509.31 k allocations: 162.202 MiB, 17.20% gc time, 37.06% compilation time)
Running: legendre_quadrature
  0.221320 seconds (42.19 k allocations: 2.450 MiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.042773 seconds (16.16 k allocations: 1.009 MiB, 34.10% gc time, 99.61% compilation time)
Running: radau_quadrature
  0.018501 seconds (16.27 k allocations: 1.016 MiB, 99.20% compilation time)
Running: rectangle_rule_left
 12.892266 seconds (471.41 M allocations: 7.025 GiB, 7.93% gc time)
Running: rectangle_rule_midpoint
  0.000030 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.476086 seconds (476.96 M allocations: 7.107 GiB, 9.16% gc time)
Running: rombergs_method
  0.866351 seconds (333.88 k allocations: 19.132 MiB, 1.13% gc time, 99.95% compilation time)
Running: simpsons_rule
  0.000054 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.105153 seconds (19.43 k allocations: 1.184 MiB, 99.91% compilation time)
Running: trapezoidal_rule
  0.132780 seconds (16.97 k allocations: 1.034 MiB, 99.94% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016800 seconds (1.03 k allocations: 34.125 KiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=1
  0.088342 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.093902 seconds (2.71 k allocations: 124.266 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.092075 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.104800 seconds (2.31 k allocations: 109.297 KiB, 99.94% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.644795 seconds (368.03 k allocations: 19.430 MiB, 8.08% gc time, 99.68% compilation time)
Running: legendre_quadrature
  0.065594 seconds (1.28 k allocations: 65.891 KiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.000176 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000077 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000355 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000248 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000336 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.076741 seconds (1.04 k allocations: 56.469 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000031 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.020309 seconds (923 allocations: 39.281 KiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.026241 seconds (44.29 k allocations: 702.859 KiB, 93.49% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.124883 seconds (83.49 k allocations: 5.002 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.529857 seconds (235.65 k allocations: 13.404 MiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.272588 seconds (289.13 k allocations: 16.379 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.800577 seconds (239.80 k allocations: 13.552 MiB, 66.39% gc time, 98.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.330262 seconds (239.80 k allocations: 13.470 MiB, 99.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.718035 seconds (453.64 k allocations: 163.844 MiB, 43.53% gc time, 19.98% compilation time)
Running: legendre_quadrature
  0.178773 seconds (190.36 k allocations: 11.084 MiB, 99.03% compilation time)
Running: lobatto_quadrature
  0.173671 seconds (201.44 k allocations: 11.785 MiB, 98.84% compilation time)
Running: radau_quadrature
  0.177438 seconds (201.44 k allocations: 11.783 MiB, 9.85% gc time, 98.91% compilation time)
Running: rectangle_rule_left
  0.610633 seconds (19.37 k allocations: 1.189 MiB, 5.00% compilation time)
Running: rectangle_rule_midpoint
  0.238329 seconds (25.55 k allocations: 1.616 MiB, 99.92% compilation time)
Running: rectangle_rule_right
  0.517098 seconds (17.90 k allocations: 1.099 MiB, 6.52% compilation time)
Running: rombergs_method
  0.404543 seconds (137.77 k allocations: 8.026 MiB, 99.27% compilation time)
Running: simpsons_rule
  0.047348 seconds (37.98 k allocations: 2.442 MiB, 99.56% compilation time)
Running: simpsons38_rule
  0.027750 seconds (43.94 k allocations: 2.785 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.022892 seconds (43.20 k allocations: 1.730 MiB, 97.28% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.103294 seconds (68.44 k allocations: 3.060 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.370073 seconds (242.24 k allocations: 13.474 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.260151 seconds (296.17 k allocations: 16.373 MiB, 10.98% gc time, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.191599 seconds (246.37 k allocations: 13.522 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.363690 seconds (246.37 k allocations: 13.520 MiB, 98.49% compilation time)
Running: hermite_quadrature with k=2
 21.780135 seconds (20.49 M allocations: 1.088 GiB, 10.12% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.313325 seconds (462.81 k allocations: 50.049 MiB, 5.41% gc time, 94.47% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.280731 seconds (282.35 k allocations: 15.726 MiB, 98.73% compilation time)
Running: legendre_quadrature
  0.325926 seconds (196.90 k allocations: 11.429 MiB, 13.80% gc time, 99.32% compilation time)
Running: lobatto_quadrature
  0.194080 seconds (222.10 k allocations: 37.560 MiB, 86.59% compilation time)
Running: radau_quadrature
  0.592557 seconds (218.69 k allocations: 30.248 MiB, 6.76% gc time, 88.61% compilation time)
Running: rectangle_rule_left
  0.049813 seconds (22.28 k allocations: 1.333 MiB, 99.70% compilation time)
Running: rectangle_rule_midpoint
  0.046329 seconds (27.36 k allocations: 1.703 MiB, 99.64% compilation time)
Running: rectangle_rule_right
  0.020270 seconds (19.02 k allocations: 1.153 MiB, 99.30% compilation time)
Running: rombergs_method
  0.201946 seconds (140.11 k allocations: 8.068 MiB, 95.12% compilation time)
Running: simpsons_rule
  0.039170 seconds (45.46 k allocations: 2.710 MiB, 99.25% compilation time)
Running: simpsons38_rule
  0.066552 seconds (58.91 k allocations: 3.170 MiB, 73.63% compilation time)
Running: trapezoidal_rule
  0.028897 seconds (29.23 k allocations: 1.655 MiB, 99.11% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.030553 seconds (52.41 k allocations: 2.720 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=1
  0.430970 seconds (237.76 k allocations: 13.270 MiB, 5.96% gc time, 99.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.215074 seconds (291.35 k allocations: 16.145 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.222989 seconds (241.91 k allocations: 13.334 MiB, 93.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.436771 seconds (241.91 k allocations: 13.332 MiB, 6.58% gc time, 97.22% compilation time)
Running: hermite_quadrature with k=2
  0.148966 seconds (175.13 k allocations: 10.126 MiB, 98.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 11.693773 seconds (456.08 k allocations: 1.175 GiB, 50.25% gc time, 5.37% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.305148 seconds (277.64 k allocations: 15.553 MiB, 98.83% compilation time)
Running: legendre_quadrature
  0.385775 seconds (192.48 k allocations: 11.253 MiB, 4.83% gc time, 99.41% compilation time)
Running: lobatto_quadrature
  0.303729 seconds (212.86 k allocations: 23.287 MiB, 94.26% compilation time)
Running: radau_quadrature
  0.173753 seconds (212.01 k allocations: 21.218 MiB, 8.54% gc time, 84.72% compilation time)
Running: rectangle_rule_left
  0.032525 seconds (20.07 k allocations: 1.228 MiB, 99.62% compilation time)
Running: rectangle_rule_midpoint
  0.025772 seconds (26.25 k allocations: 1.652 MiB, 99.50% compilation time)
Running: rectangle_rule_right
  0.019887 seconds (17.88 k allocations: 1.099 MiB, 99.33% compilation time)
Running: rombergs_method
  0.178948 seconds (135.95 k allocations: 7.879 MiB, 98.64% compilation time)
Running: simpsons_rule
  0.045134 seconds (40.80 k allocations: 2.541 MiB, 99.57% compilation time)
Running: simpsons38_rule
  0.058626 seconds (49.73 k allocations: 2.931 MiB, 99.51% compilation time)
Running: trapezoidal_rule
  0.034069 seconds (24.14 k allocations: 1.492 MiB, 99.39% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.044680 seconds (40.61 k allocations: 2.580 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.449571 seconds (236.14 k allocations: 13.461 MiB, 8.92% gc time, 98.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.185236 seconds (289.64 k allocations: 16.487 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.313653 seconds (240.29 k allocations: 13.552 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=4
  0.243998 seconds (240.28 k allocations: 13.373 MiB, 17.44% gc time, 99.07% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.143348 seconds (454.18 k allocations: 194.872 MiB, 11.26% gc time, 28.31% compilation time)
Running: legendre_quadrature
  0.332762 seconds (190.86 k allocations: 11.114 MiB, 99.31% compilation time)
Running: lobatto_quadrature
  0.129928 seconds (201.94 k allocations: 11.808 MiB, 98.14% compilation time)
Running: radau_quadrature
  0.425516 seconds (201.94 k allocations: 11.818 MiB, 5.93% gc time, 97.85% compilation time)
Running: rectangle_rule_left
  0.382244 seconds (19.89 k allocations: 1.214 MiB, 19.07% compilation time)
Running: rectangle_rule_midpoint
  0.053771 seconds (25.89 k allocations: 1.634 MiB, 99.75% compilation time)
Running: rectangle_rule_right
  0.158073 seconds (18.25 k allocations: 1.118 MiB, 13.05% compilation time)
Running: rombergs_method
  0.168334 seconds (149.07 k allocations: 8.786 MiB, 98.12% compilation time)
Running: simpsons_rule
  0.029214 seconds (38.61 k allocations: 2.470 MiB, 83.79% compilation time)
Running: simpsons38_rule
  0.033084 seconds (44.65 k allocations: 2.815 MiB, 89.88% compilation time)
Running: trapezoidal_rule
  0.086391 seconds (44.13 k allocations: 1.763 MiB, 80.25% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014897 seconds (40.35 k allocations: 2.510 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.249063 seconds (236.73 k allocations: 13.418 MiB, 41.79% gc time, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.611158 seconds (290.27 k allocations: 16.392 MiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.296570 seconds (240.88 k allocations: 13.484 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.156661 seconds (240.87 k allocations: 13.545 MiB, 15.04% gc time, 98.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.595396 seconds (454.89 k allocations: 149.560 MiB, 5.13% gc time, 41.16% compilation time)
Running: legendre_quadrature
  0.138915 seconds (191.45 k allocations: 11.126 MiB, 98.38% compilation time)
Running: lobatto_quadrature
  0.148610 seconds (202.54 k allocations: 11.835 MiB, 13.10% gc time, 98.34% compilation time)
Running: radau_quadrature
  0.726858 seconds (202.53 k allocations: 11.829 MiB, 99.66% compilation time)
Running: rectangle_rule_left
  0.733923 seconds (20.14 k allocations: 1.227 MiB, 7.90% compilation time)
Running: rectangle_rule_midpoint
  0.023488 seconds (25.89 k allocations: 1.635 MiB, 99.17% compilation time)
Running: rectangle_rule_right
  0.624909 seconds (18.20 k allocations: 1.115 MiB, 4.66% compilation time)
Running: rombergs_method
  0.196535 seconds (138.99 k allocations: 8.144 MiB, 98.07% compilation time)
Running: simpsons_rule
  0.014914 seconds (39.09 k allocations: 2.489 MiB, 98.76% compilation time)
Running: simpsons38_rule
  0.021226 seconds (45.35 k allocations: 2.842 MiB, 98.98% compilation time)
Running: trapezoidal_rule
  0.022707 seconds (56.28 k allocations: 1.959 MiB, 94.99% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.536250 seconds (152.11 k allocations: 9.114 MiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=1
  0.319224 seconds (70.34 k allocations: 2.237 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.150933 seconds (105.50 k allocations: 2.900 MiB, 97.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.185196 seconds (92.98 k allocations: 2.686 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.290436 seconds (72.52 k allocations: 2.280 MiB, 16.90% gc time, 82.18% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.607088 seconds (484.23 k allocations: 168.081 MiB, 8.49% gc time, 26.76% compilation time)
Running: legendre_quadrature
  0.127890 seconds (19.14 k allocations: 1.125 MiB, 99.78% compilation time)
Running: lobatto_quadrature
  0.000176 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000069 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.979464 seconds (590.00 M allocations: 8.792 GiB, 6.38% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.404408 seconds (592.75 M allocations: 8.833 GiB, 5.64% gc time)
Running: rombergs_method
  0.143657 seconds (20.91 k allocations: 1.198 MiB, 99.55% compilation time)
Running: simpsons_rule
  0.000070 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025003 seconds (463 allocations: 22.578 KiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.013336 seconds (171 allocations: 7.859 KiB, 99.32% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.503409 seconds (209.94 M allocations: 3.138 GiB, 1.74% gc time, 0.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.584143 seconds (422.98 k allocations: 23.680 MiB, 3.68% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
 18.141265 seconds (478.55 k allocations: 4.041 GiB, 6.87% gc time, 3.79% compilation time)
Running: chebyshev_quadrature with k=3
  7.886135 seconds (254.26 k allocations: 1.642 GiB, 4.33% gc time, 2.66% compilation time)
Running: chebyshev_quadrature with k=4
 10.774210 seconds (254.26 k allocations: 2.261 GiB, 2.56% gc time, 1.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.624439 seconds (491.75 k allocations: 13.255 GiB, 14.79% gc time, 2.07% compilation time)
Running: legendre_quadrature.
  9.490682 seconds (228.90 k allocations: 1.976 GiB, 1.22% gc time, 6.61% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.692172 seconds (8.24 M allocations: 13.384 GiB, 14.90% gc time, 1.56% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.056520 seconds (7.24 M allocations: 13.369 GiB, 14.60% gc time, 0.88% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.230989 seconds (22.88 k allocations: 1.394 MiB, 0.18% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.283058 seconds (31.46 k allocations: 1.956 MiB, 0.94% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.887784 seconds (23.09 k allocations: 1.403 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.451870 seconds (448.68 k allocations: 153.516 MiB, 1.77% gc time, 32.27% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.334691 seconds (200.04 M allocations: 2.983 GiB, 2.30% gc time, 0.30% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.395375 seconds (600.05 M allocations: 8.944 GiB, 6.19% gc time, 0.44% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.134253 seconds (600.03 M allocations: 8.943 GiB, 4.10% gc time, 0.09% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.042261 seconds (111.10 k allocations: 4.245 MiB, 92.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.494683 seconds (252.71 k allocations: 13.877 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.222699 seconds (277.25 k allocations: 14.964 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.444689 seconds (224.24 k allocations: 11.980 MiB, 54.90% gc time, 99.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.321070 seconds (224.24 k allocations: 11.976 MiB, 99.66% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.702006 seconds (393.47 k allocations: 35.463 MiB, 96.99% compilation time)
Running: laguerre_quadrature with k=2
  0.434302 seconds (185.19 k allocations: 10.841 MiB, 90.39% compilation time)
Running: legendre_quadrature
  0.161502 seconds (149.17 k allocations: 8.338 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.063961 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017641 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.074502 seconds (19.35 k allocations: 1.157 MiB, 76.32% compilation time)
Running: rectangle_rule_midpoint
  0.034885 seconds (26.33 k allocations: 1.636 MiB, 64.66% compilation time)
Running: rectangle_rule_right
  0.053867 seconds (17.96 k allocations: 1.084 MiB, 68.10% compilation time)
Running: rombergs_method
  0.242443 seconds (174.63 k allocations: 10.095 MiB, 98.85% compilation time)
Running: simpsons_rule
  0.000515 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.039037 seconds (80.36 k allocations: 3.491 MiB, 97.52% compilation time)
Running: trapezoidal_rule
  0.108541 seconds (2.39 M allocations: 37.744 MiB, 30.13% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000631 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.102627 seconds (2.46 k allocations: 1.691 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.135865 seconds (2.71 k allocations: 2.355 MiB, 97.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.106255 seconds (2.31 k allocations: 2.028 MiB, 96.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.097032 seconds (2.31 k allocations: 1.469 MiB, 97.56% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.041374 seconds (370.31 k allocations: 905.283 MiB, 4.62% gc time, 19.22% compilation time)
Running: legendre_quadrature
  0.061269 seconds (1.27 k allocations: 68.203 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000165 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000135 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.627947 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000344 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.437529 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095095 seconds (993 allocations: 56.609 KiB, 99.55% compilation time)
Running: simpsons_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001041 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000087 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.195514 seconds (2.53 k allocations: 579.203 KiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=2
  0.095615 seconds (2.79 k allocations: 780.188 KiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=3
  0.084802 seconds (2.39 k allocations: 661.047 KiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=4
  0.104190 seconds (2.39 k allocations: 491.547 KiB, 99.46% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.323296 seconds (376.87 k allocations: 253.363 MiB, 31.22% compilation time)
Running: legendre_quadrature
  0.074578 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000119 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000060 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.204177 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000152 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.035632 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.185636 seconds (1.21 k allocations: 64.875 KiB, 99.83% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000015 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000430 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-26T12:43:40.241
