Current time is 2020-10-26T05:11:00.483
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T05:11:02.500
   Resolving package versions...
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed TreeViews â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed DiffEqGPU â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.8.0
   Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.10
   Installed GPUCompiler â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
   Installed FunctionWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
   Installed KernelAbstractions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed IteratorInterfaceExtensions â”€â”€ v1.0.0
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed RecursiveFactorization â”€â”€â”€â”€â”€â”€â”€ v0.1.4
   Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed IterativeSolvers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed ZygoteRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed CpuId â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed RecursiveArrayTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.2
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed LLVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.0
   Installed SIMDPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.25
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed SLEEFPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.5
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Roots â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.5
   Installed LoopVectorization â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.26
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed CUDA â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.3
   Installed GPUArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.2.1
   Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed NNlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.5
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
   Installed ChainRulesCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.17
   Installed Cassette â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed LabelledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.0
   Installed MuladdMacro â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed TimerOutputs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed VectorizationBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.33
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
     Cloning [621f4979-c628-5d54-868e-fcf4e3e8185c] AbstractFFTs from https://github.com/JuliaMath/AbstractFFTs.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
     Cloning [3cdcf5f2-1ef4-517c-9805-6587b60abb01] RecipesBase from https://github.com/JuliaPlots/RecipesBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
     Cloning [34da2185-b29b-5c13-b0c7-acf172513d20] Compat from https://github.com/JuliaLang/Compat.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
     Cloning [bac558e1-5e72-5ebc-8fee-abe8a469f55d] OrderedCollections from https://github.com/JuliaCollections/OrderedCollections.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
     Cloning [2b5f629d-d688-5b77-993f-72d75c75574e] DiffEqBase from https://github.com/SciML/DiffEqBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DiffEqBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.48.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [071ae1c0] + DiffEqGPU v1.8.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [4fba245c] + ArrayInterface v2.13.6
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v1.3.3
  [7057c7e9] + Cassette v0.3.3
  [d360d2e6] + ChainRulesCore v0.9.17
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.22.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.48.2
  [071ae1c0] + DiffEqGPU v1.8.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.3
  [e2ba6199] + ExprTools v0.1.3
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [0c68f7d7] + GPUArrays v5.2.1
  [61eb1bfa] + GPUCompiler v0.6.1
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [63c18a36] + KernelAbstractions v0.4.4
  [929cbde3] + LLVM v2.0.0
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.5
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [731186ca] + RecursiveArrayTools v2.7.2
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [700de1a5] + ZygoteRules v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building SLEEFPirates â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mTreeViews[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mExprTools[39m
[32m  âœ“ [39m[90mMuladdMacro[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mRecipesBase[39m
[32m  âœ“ [39m[90mCEnum[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mTimerOutputs[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mAbstractFFTs[39m
[32m  âœ“ [39m[90mOffsetArrays[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mDocStringExtensions[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mFunctionWrappers[39m
[32m  âœ“ [39m[90mCassette[39m
[32m  âœ“ [39m[90mChainRulesCore[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mRoots[39m
[32m  âœ“ [39m[90mIterativeSolvers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mGPUArrays[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mNNlib[39m
[32m  âœ“ [39m[90mSIMDPirates[39m
[32m  âœ“ [39m[90mBinaryProvider[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mZygoteRules[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSLEEFPirates[39m
[32m  âœ“ [39m[90mLLVM[39m
[32m  âœ“ [39m[90mLabelledArrays[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mLoopVectorization[39m
[32m  âœ“ [39m[90mGPUCompiler[39m
[32m  âœ“ [39m[90mRecursiveArrayTools[39m
[32m  âœ“ [39m[90mRecursiveFactorization[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mCUDA[39m
[32m  âœ“ [39m[90mDiffEqBase[39m
[32m  âœ“ [39m[90mKernelAbstractions[39m
[32m  âœ“ [39mDiffEqGPU
55 dependencies successfully precompiled (2 already precompiled)
Starting tests at 2020-10-26T05:36:10.986
     Testing DiffEqGPU
Status `/tmp/jl_75OqRZ/Project.toml`
  [052768ef] CUDA v1.3.3
  [2b5f629d] DiffEqBase v6.48.2
  [071ae1c0] DiffEqGPU v1.8.0
  [f6369f11] ForwardDiff v0.10.12
  [63c18a36] KernelAbstractions v0.4.4
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [1bc83da4] SafeTestsets v0.0.1
  [789caeaf] StochasticDiffEq v6.26.0
  [1986cc42] Unitful v1.5.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_75OqRZ/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.6
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [7057c7e9] Cassette v0.3.3
  [d360d2e6] ChainRulesCore v0.9.17
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.48.2
  [071ae1c0] DiffEqGPU v1.8.0
  [c894b116] DiffEqJump v6.10.1
  [77a26b50] DiffEqNoiseProcess v5.4.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [31c24e10] Distributions v0.24.1
  [ffbed154] DocStringExtensions v0.8.3
  [d4d017d3] ExponentialUtilities v1.8.0
  [e2ba6199] ExprTools v0.1.3
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [0c68f7d7] GPUArrays v5.2.1
  [61eb1bfa] GPUCompiler v0.6.1
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [63c18a36] KernelAbstractions v0.4.4
  [929cbde3] LLVM v2.0.0
  [2ee39098] LabelledArrays v1.3.0
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [90014a1f] PDMats v0.10.1
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [1fd47b50] QuadGK v2.4.1
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.2
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [ae5879a3] ResettableStacks v1.0.0
  [79098fc4] Rmath v0.6.1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [789caeaf] StochasticDiffEq v6.26.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.5.0
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [f50d1b31] Rmath_jll v0.2.2+1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: Explicit Methods
â”Œ Error: Could not initialize CUDA
â”‚   exception =
â”‚    could not load library "libcuda"
â”‚    libcuda.so: cannot open shared object file: No such file or directory
â”‚    Stacktrace:
â”‚      [1] dlopen(s::String, flags::UInt32; throw_error::Bool)
â”‚        @ Base.Libc.Libdl ./libdl.jl:114
â”‚      [2] dlopen
â”‚        @ ./libdl.jl:114 [inlined]
â”‚      [3] #dlopen#2
â”‚        @ ./libdl.jl:110 [inlined]
â”‚      [4] dlopen
â”‚        @ ./libdl.jl:110 [inlined]
â”‚      [5] (::CUDA.var"#2968#cache_fptr!#617")()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:31
â”‚      [6] macro expansion
â”‚        @ ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:39 [inlined]
â”‚      [7] __configure__(show_reason::Bool)
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:90
â”‚      [8] (::CUDA.var"#609#610"{Bool})()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:29
â”‚      [9] lock(f::CUDA.var"#609#610"{Bool}, l::ReentrantLock)
â”‚        @ Base ./lock.jl:168
â”‚     [10] _functional(show_reason::Bool)
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:26
â”‚     [11] functional(show_reason::Bool)
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:19
â”‚     [12] libcuda()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:50
â”‚     [13] (::CUDA.var"#651#cache_fptr!#9")()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:31
â”‚     [14] macro expansion
â”‚        @ ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:39 [inlined]
â”‚     [15] macro expansion
â”‚        @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/libcuda.jl:34 [inlined]
â”‚     [16] macro expansion
â”‚        @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/error.jl:108 [inlined]
â”‚     [17] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:93
â”‚     [18] CuDevice
â”‚        @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/devices.jl:25 [inlined]
â”‚     [19] initialize_thread(tid::Int64)
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:121
â”‚     [20] prepare_cuda_call()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:80
â”‚     [21] device()
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:227
â”‚     [22] alloc
â”‚        @ ~/.julia/packages/CUDA/dZvbp/src/pool.jl:293 [inlined]
â”‚     [23] CUDA.CuMatrix{Float32}(#unused#::UndefInitializer, dims::Tuple{Int64, Int64})
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/array.jl:116
â”‚     [24] CuArray
â”‚        @ ~/.julia/packages/CUDA/dZvbp/src/array.jl:205 [inlined]
â”‚     [25] CUDA.CuArray(A::Matrix{Float32})
â”‚        @ CUDA ~/.julia/packages/CUDA/dZvbp/src/array.jl:213
â”‚     [26] batch_solve(ensembleprob::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Vector{Float32}, Tuple{Float32, Float32}, true, Tuple{Float32, Float32, Float32}, DiffEqBase.ODEFunction{true, typeof(Main.##249.lorenz), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, DiffEqBase.StandardODEProblem}, Main.##249.var"#3#4", typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC), typeof(DiffEqBase.DEFAULT_REDUCTION), Nothing}, alg::OrdinaryDiffEq.Tsit5, ensemblealg::DiffEqGPU.EnsembleGPUArray, I::UnitRange{Int64}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:unstable_check, :saveat), Tuple{DiffEqGPU.var"#6#12", Float32}}})
â”‚        @ DiffEqGPU ~/.julia/packages/DiffEqGPU/TnpRW/src/DiffEqGPU.jl:208
â”‚     [27] macro expansion
â”‚        @ ./timing.jl:266 [inlined]
â”‚     [28] __solve(ensembleprob::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Vector{Float32}, Tuple{Float32, Float32}, true, Tuple{Float32, Float32, Float32}, DiffEqBase.ODEFunction{true, typeof(Main.##249.lorenz), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, DiffEqBase.StandardODEProblem}, Main.##249.var"#3#4", typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC), typeof(DiffEqBase.DEFAULT_REDUCTION), Nothing}, alg::OrdinaryDiffEq.Tsit5, ensemblealg::DiffEqGPU.EnsembleGPUArray; trajectories::Int64, batch_size::Int64, unstable_check::Function, kwargs::Base.Iterators.Pairs{Symbol, Float32, Tuple{Symbol}, NamedTuple{(:saveat,), Tuple{Float32}}})
â”‚        @ DiffEqGPU ~/.julia/packages/DiffEqGPU/TnpRW/src/DiffEqGPU.jl:128
â”‚     [29] #solve#459
â”‚        @ ~/.julia/packages/DiffEqBase/3iigH/src/solve.jl:100 [inlined]
â”‚     [30] top-level scope
â”‚        @ ./timing.jl:192
â”‚     [31] include(mod::Module, _path::String)
â”‚        @ Base ./Base.jl:389
â”‚     [32] include(x::String)
â”‚        @ Main.##249 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
â”‚     [33] macro expansion
â”‚        @ ~/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:18 [inlined]
â”‚     [34] macro expansion
â”‚        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
â”‚     [35] top-level scope
â”‚        @ ~/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:18
â”‚     [36] eval(m::Module, e::Any)
â”‚        @ Core ./boot.jl:360
â”‚     [37] macro expansion
â”‚        @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
â”‚     [38] top-level scope
â”‚        @ timing.jl:192
â”‚     [39] include(fname::String)
â”‚        @ Base.MainInclude ./client.jl:444
â”‚     [40] top-level scope
â”‚        @ none:5
â”‚     [41] eval(m::Module, e::Any)
â”‚        @ Core ./boot.jl:360
â”‚     [42] exec_options(opts::Base.JLOptions)
â”‚        @ Base ./client.jl:261
â”‚     [43] _start()
â”‚        @ Base ./client.jl:485
â”” @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:97
EnsembleGPUArray: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: AssertionError: CUDA.jl did not successfully initialize, and is not usable.
  Stacktrace:
    [1] libcuda()
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/initialization.jl:50
    [2] (::CUDA.var"#651#cache_fptr!#9")()
      @ CUDA ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:31
    [3] macro expansion
      @ ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:39 [inlined]
    [4] macro expansion
      @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/libcuda.jl:34 [inlined]
    [5] macro expansion
      @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/error.jl:108 [inlined]
    [6] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/lib/utils/call.jl:93
    [7] CuDevice
      @ ~/.julia/packages/CUDA/dZvbp/lib/cudadrv/devices.jl:25 [inlined]
    [8] initialize_thread(tid::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:121
    [9] prepare_cuda_call()
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:80
   [10] device()
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/state.jl:227
   [11] alloc
      @ ~/.julia/packages/CUDA/dZvbp/src/pool.jl:293 [inlined]
   [12] CUDA.CuMatrix{Float32}(#unused#::UndefInitializer, dims::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/array.jl:116
   [13] CuArray
      @ ~/.julia/packages/CUDA/dZvbp/src/array.jl:205 [inlined]
   [14] CUDA.CuArray(A::Matrix{Float32})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/array.jl:213
   [15] batch_solve(ensembleprob::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Vector{Float32}, Tuple{Float32, Float32}, true, Tuple{Float32, Float32, Float32}, DiffEqBase.ODEFunction{true, typeof(Main.##249.lorenz), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, DiffEqBase.StandardODEProblem}, Main.##249.var"#3#4", typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC), typeof(DiffEqBase.DEFAULT_REDUCTION), Nothing}, alg::OrdinaryDiffEq.Tsit5, ensemblealg::DiffEqGPU.EnsembleGPUArray, I::UnitRange{Int64}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:unstable_check, :saveat), Tuple{DiffEqGPU.var"#6#12", Float32}}})
      @ DiffEqGPU ~/.julia/packages/DiffEqGPU/TnpRW/src/DiffEqGPU.jl:208
   [16] macro expansion
      @ ./timing.jl:266 [inlined]
   [17] __solve(ensembleprob::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Vector{Float32}, Tuple{Float32, Float32}, true, Tuple{Float32, Float32, Float32}, DiffEqBase.ODEFunction{true, typeof(Main.##249.lorenz), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, DiffEqBase.StandardODEProblem}, Main.##249.var"#3#4", typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC), typeof(DiffEqBase.DEFAULT_REDUCTION), Nothing}, alg::OrdinaryDiffEq.Tsit5, ensemblealg::DiffEqGPU.EnsembleGPUArray; trajectories::Int64, batch_size::Int64, unstable_check::Function, kwargs::Base.Iterators.Pairs{Symbol, Float32, Tuple{Symbol}, NamedTuple{(:saveat,), Tuple{Float32}}})
      @ DiffEqGPU ~/.julia/packages/DiffEqGPU/TnpRW/src/DiffEqGPU.jl:128
   [18] #solve#459
      @ ~/.julia/packages/DiffEqBase/3iigH/src/solve.jl:100 [inlined]
   [19] top-level scope
      @ ./timing.jl:192
   [20] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [21] include(x::String)
      @ Main.##249 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [22] macro expansion
      @ ~/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:18 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] top-level scope
      @ ~/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:18
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [26] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [27] top-level scope
      @ timing.jl:192
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:5
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/TnpRW/test/ensemblegpuarray.jl:25
Test Summary:    | Error  Total
EnsembleGPUArray |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:18
ERROR: LoadError: failed process: Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so --depwarn=yes -g1 --startup-file=no --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/DiffEqGPU/TnpRW/test")
include("/home/pkgeval/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl")
'`, ProcessExited(1)) [1]

Stacktrace:
 [1] pipeline_error
   @ ./process.jl:525 [inlined]
 [2] run(::Cmd; wait::Bool)
   @ Base ./process.jl:440
 [3] run(::Cmd)
   @ Base ./process.jl:438
 [4] top-level scope
   @ ~/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:11
 [5] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [6] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/TnpRW/test/runtests.jl:4
ERROR: Package DiffEqGPU errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
