Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_IBa3cY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_IBa3cY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723109958337825
curgen: 20 fitness: 0.21723109958337825
curgen: 30 fitness: 0.21723109958337825
curgen: 40 fitness: 0.2172336030926035
curgen: 50 fitness: 0.2172336030926035
CoordinateCreature{Vector{Float64}}([0.2225243425801052], -0.2172336030926035) 0.2225243425801052 -0.2172336030926035
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257927126417738
curgen: 100 fitness: 3.2580854422756356
curgen: 150 fitness: 3.258164955958861
curgen: 200 fitness: 3.258233798816184
curgen: 250 fitness: 3.2583397667928655
curgen: 300 fitness: 3.258416026117963
curgen: 350 fitness: 3.2584243615933546
curgen: 400 fitness: 3.2584465986061786
curgen: 450 fitness: 3.2584465986061786
curgen: 500 fitness: 3.2584486726047945
CoordinateCreature{Vector{Float64}}([0.22261646037267852, 0.2222320603861892, 0.2224754672745555, 0.222296726357965, 0.22267097703677222, -0.22264380069306652, -0.2223936722201106, -0.22277051574009377, 0.222591992663279, 0.22309300407849744, 0.22253797806331946, -0.22184228211047435, 0.2227335084730144, 0.22253373739581972, 0.22294284539366135], -3.2584486726047945) [0.22261646037267852, 0.2222320603861892, 0.2224754672745555, 0.222296726357965, 0.22267097703677222, -0.22264380069306652, -0.2223936722201106, -0.22277051574009377, 0.222591992663279, 0.22309300407849744, 0.22253797806331946, -0.22184228211047435, 0.2227335084730144, 0.22253373739581972, 0.22294284539366135] -3.2584486726047945
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0017857803017307106
curgen: 100 fitness: -0.0017844237833344323
curgen: 150 fitness: -0.0016634356074121115
curgen: 200 fitness: -0.0016634356074121115
curgen: 250 fitness: -0.0016634356074121115
curgen: 300 fitness: -0.001211491275228127
curgen: 350 fitness: -0.001211491275228127
curgen: 400 fitness: -0.0011853991235000194
curgen: 450 fitness: -0.0011853991235000194
curgen: 500 fitness: -0.0008696556842267
CoordinateCreature{Vector{Float64}}([0.0005952384651953733, 8.66302732780962e-5, -8.976178460140919e-5, 0.0001821806400406324, -1.0238703176365747e-5, -0.00047266198565273194, -0.0005772812150719544, -0.0003252331311659716, -0.0004831110804724315, -0.00016079404001195915, -3.7153601796059137e-6, -1.6861747265970497e-5, 8.46059947117017e-5, 0.0014600036458160715, 0.0009589660254624387], 0.0008696556842267) [0.0005952384651953733, 8.66302732780962e-5, -8.976178460140919e-5, 0.0001821806400406324, -1.0238703176365747e-5, -0.00047266198565273194, -0.0005772812150719544, -0.0003252331311659716, -0.0004831110804724315, -0.00016079404001195915, -3.7153601796059137e-6, -1.6861747265970497e-5, 8.46059947117017e-5, 0.0014600036458160715, 0.0009589660254624387] 0.0008696556842267
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
