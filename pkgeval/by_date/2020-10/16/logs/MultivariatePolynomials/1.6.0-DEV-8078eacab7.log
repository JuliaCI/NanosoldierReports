Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.20.0
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed MultivariatePolynomials â”€ v0.3.11
   Installed MutableArithmetics â”€â”€â”€â”€â”€â”€ v0.2.10
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [102ac46a] + MultivariatePolynomials v0.3.11
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.20.0
  [864edb3b] + DataStructures v0.18.7
  [102ac46a] + MultivariatePolynomials v0.3.11
  [d8a4904e] + MutableArithmetics v0.2.10
  [bac558e1] + OrderedCollections v1.3.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mCompat[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mMutableArithmetics[39m
[32m  âœ“ [39mMultivariatePolynomials
5 dependencies successfully precompiled
     Testing MultivariatePolynomials
Status `/tmp/jl_kzRO4Z/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [864edb3b] DataStructures v0.18.7
  [7c1d4256] DynamicPolynomials v0.3.13
  [102ac46a] MultivariatePolynomials v0.3.11
  [d8a4904e] MutableArithmetics v0.2.10
  [afbbf031] TypedPolynomials v0.2.8
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_kzRO4Z/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [34da2185] Compat v3.20.0
  [864edb3b] DataStructures v0.18.7
  [7c1d4256] DynamicPolynomials v0.3.13
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [102ac46a] MultivariatePolynomials v0.3.11
  [d8a4904e] MutableArithmetics v0.2.10
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [189a3867] Reexport v0.2.0
  [afbbf031] TypedPolynomials v0.2.8
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#209
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#213
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#216
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#217
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
Test Summary:                     | Pass  Error  Broken  Total
MutableArithmetics with variables | 6364     42      14   6420
  Scalar                          |  504     42      14    560
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
  Quadratic                       | 2824                  2824
  Sparse                          |  268                   268
  Vector                          | 1805                  1805
  Matrix                          |  938                   938
ERROR: LoadError: LoadError: LoadError: Some tests did not pass: 6364 passed, 0 failed, 42 errored, 14 broken.
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/mutable_arithmetics.jl:75
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/commutativetests.jl:1
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/runtests.jl:19
ERROR: Package MultivariatePolynomials errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1667
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:333
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:320
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [11] top-level scope
    @ none:31
