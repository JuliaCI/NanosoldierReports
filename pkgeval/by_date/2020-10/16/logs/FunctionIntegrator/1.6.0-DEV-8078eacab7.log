Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_Cr6MGW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Cr6MGW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.192173 seconds (293.21 k allocations: 13.812 MiB, 88.99% compilation time)
Running: chebyshev_quadrature with k=1
  2.354343 seconds (2.25 M allocations: 130.532 MiB, 31.59% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.268812 seconds (417.68 k allocations: 24.220 MiB, 85.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.310011 seconds (483.50 k allocations: 27.379 MiB, 10.46% gc time, 88.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.234468 seconds (427.02 k allocations: 23.925 MiB, 90.79% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 35.068159 seconds (35.44 M allocations: 2.978 GiB, 10.75% gc time, 78.20% compilation time)
Running: laguerre_quadrature with k=1
  2.702877 seconds (3.24 M allocations: 182.160 MiB, 3.59% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.222087 seconds (211.48 k allocations: 12.243 MiB, 99.18% compilation time)
Running: lobatto_quadrature
  0.322566 seconds (340.03 k allocations: 20.690 MiB, 99.33% compilation time)
Running: radau_quadrature
  0.395611 seconds (463.01 k allocations: 28.413 MiB, 6.72% gc time, 99.47% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.777999 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time, 0.11% compilation time)
Running: rectangle_rule_midpoint.
  0.118951 seconds (173.35 k allocations: 3.888 MiB, 33.58% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.318552 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time, 0.06% compilation time)
Running: rombergs_method
  0.527247 seconds (741.41 k allocations: 43.143 MiB, 5.87% gc time, 99.50% compilation time)
Running: simpsons_rule
  0.045196 seconds (48.04 k allocations: 2.633 MiB, 96.56% compilation time)
Running: simpsons38_rule
  0.092712 seconds (111.36 k allocations: 5.951 MiB, 97.71% compilation time)
Running: trapezoidal_rule
  0.451158 seconds (1.72 M allocations: 28.726 MiB, 4.68% gc time, 24.76% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.068953 seconds (30.72 k allocations: 1.831 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.420694 seconds (295.57 k allocations: 15.749 MiB, 6.18% gc time, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.153733 seconds (94.22 k allocations: 2.707 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.144418 seconds (82.47 k allocations: 2.508 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.159956 seconds (65.08 k allocations: 2.154 MiB, 99.13% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.642299 seconds (510.79 k allocations: 162.363 MiB, 21.16% gc time, 16.76% compilation time)
Running: legendre_quadrature
  0.151266 seconds (42.16 k allocations: 2.447 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.017763 seconds (16.14 k allocations: 1.006 MiB, 98.95% compilation time)
Running: radau_quadrature
  0.019140 seconds (16.24 k allocations: 1.013 MiB, 99.05% compilation time)
Running: rectangle_rule_left
 13.295114 seconds (471.41 M allocations: 7.025 GiB, 4.31% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.265518 seconds (476.96 M allocations: 7.107 GiB, 6.10% gc time)
Running: rombergs_method
  0.390008 seconds (334.29 k allocations: 19.155 MiB, 99.88% compilation time)
Running: simpsons_rule
  0.000018 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.068435 seconds (19.43 k allocations: 1.184 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.053576 seconds (16.97 k allocations: 1.034 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015811 seconds (1.03 k allocations: 34.125 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.090485 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.080861 seconds (2.71 k allocations: 124.266 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.092780 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.081056 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.502169 seconds (369.34 k allocations: 19.505 MiB, 18.07% gc time, 99.57% compilation time)
Running: legendre_quadrature
  0.053006 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000036 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000309 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000221 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000302 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.067610 seconds (1.04 k allocations: 56.469 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.015121 seconds (923 allocations: 39.281 KiB, 99.64% compilation time)
Running: trapezoidal_rule
  0.034381 seconds (44.29 k allocations: 702.859 KiB, 95.19% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057481 seconds (83.49 k allocations: 5.003 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.163381 seconds (235.65 k allocations: 13.387 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=2
  0.176961 seconds (289.14 k allocations: 16.380 MiB, 9.39% gc time, 98.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.165157 seconds (239.80 k allocations: 13.536 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.199282 seconds (239.80 k allocations: 13.470 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.250434 seconds (454.94 k allocations: 163.900 MiB, 4.67% gc time, 19.36% compilation time)
Running: legendre_quadrature
  0.114339 seconds (190.36 k allocations: 11.084 MiB, 98.52% compilation time)
Running: lobatto_quadrature
  0.117495 seconds (201.88 k allocations: 11.810 MiB, 98.31% compilation time)
Running: radau_quadrature
  0.134213 seconds (201.87 k allocations: 11.807 MiB, 10.23% gc time, 98.71% compilation time)
Running: rectangle_rule_left
  0.494043 seconds (19.37 k allocations: 1.189 MiB, 3.16% compilation time)
Running: rectangle_rule_midpoint
  0.014522 seconds (25.55 k allocations: 1.616 MiB, 96.96% compilation time)
Running: rectangle_rule_right
  0.561960 seconds (17.90 k allocations: 1.099 MiB, 2.62% compilation time)
Running: rombergs_method
  0.103150 seconds (137.77 k allocations: 8.029 MiB, 97.76% compilation time)
Running: simpsons_rule
  0.020973 seconds (37.98 k allocations: 2.442 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.019029 seconds (43.94 k allocations: 2.785 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.011866 seconds (43.20 k allocations: 1.730 MiB, 94.56% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.039579 seconds (68.44 k allocations: 3.060 MiB, 97.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.308815 seconds (242.24 k allocations: 13.489 MiB, 5.60% gc time, 97.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.243879 seconds (296.17 k allocations: 16.372 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=3
  0.204113 seconds (246.37 k allocations: 13.523 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.181605 seconds (246.37 k allocations: 13.520 MiB, 10.01% gc time, 98.95% compilation time)
Running: hermite_quadrature with k=2
 14.722987 seconds (20.49 M allocations: 1.088 GiB, 8.52% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.451528 seconds (464.12 k allocations: 50.102 MiB, 6.28% gc time, 68.69% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.336871 seconds (282.35 k allocations: 15.773 MiB, 98.71% compilation time)
Running: legendre_quadrature
  0.409420 seconds (196.90 k allocations: 11.425 MiB, 5.87% gc time, 99.62% compilation time)
Running: lobatto_quadrature
  0.140283 seconds (222.53 k allocations: 37.584 MiB, 77.49% compilation time)
Running: radau_quadrature
  0.200911 seconds (219.12 k allocations: 30.253 MiB, 8.98% gc time, 81.53% compilation time)
Running: rectangle_rule_left
  0.021586 seconds (22.28 k allocations: 1.333 MiB, 99.15% compilation time)
Running: rectangle_rule_midpoint
  0.015539 seconds (27.36 k allocations: 1.703 MiB, 99.09% compilation time)
Running: rectangle_rule_right
  0.013633 seconds (19.02 k allocations: 1.153 MiB, 98.98% compilation time)
Running: rombergs_method
  0.080047 seconds (140.11 k allocations: 8.066 MiB, 97.41% compilation time)
Running: simpsons_rule
  0.018440 seconds (45.46 k allocations: 2.710 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.028239 seconds (58.91 k allocations: 3.170 MiB, 98.63% compilation time)
Running: trapezoidal_rule
  0.023966 seconds (29.23 k allocations: 1.655 MiB, 98.77% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.028797 seconds (52.41 k allocations: 2.720 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.156538 seconds (237.76 k allocations: 13.243 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.195670 seconds (291.35 k allocations: 16.145 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=3
  0.181963 seconds (241.90 k allocations: 13.330 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.226786 seconds (241.91 k allocations: 13.331 MiB, 10.44% gc time, 98.95% compilation time)
Running: hermite_quadrature with k=2
  0.335864 seconds (175.13 k allocations: 10.126 MiB, 99.29% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  7.462958 seconds (457.39 k allocations: 1.176 GiB, 21.08% gc time, 6.43% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.188152 seconds (277.64 k allocations: 15.553 MiB, 98.09% compilation time)
Running: legendre_quadrature
  0.175430 seconds (192.47 k allocations: 11.190 MiB, 98.65% compilation time)
Running: lobatto_quadrature
  0.188695 seconds (213.29 k allocations: 23.311 MiB, 8.70% gc time, 83.33% compilation time)
Running: radau_quadrature
  0.159586 seconds (212.45 k allocations: 21.243 MiB, 92.91% compilation time)
Running: rectangle_rule_left
  0.025048 seconds (20.07 k allocations: 1.228 MiB, 99.33% compilation time)
Running: rectangle_rule_midpoint
  0.020977 seconds (26.25 k allocations: 1.652 MiB, 99.25% compilation time)
Running: rectangle_rule_right
  0.016716 seconds (17.87 k allocations: 1.098 MiB, 99.09% compilation time)
Running: rombergs_method
  0.142360 seconds (135.95 k allocations: 7.879 MiB, 8.37% gc time, 98.25% compilation time)
Running: simpsons_rule
  0.075980 seconds (40.80 k allocations: 2.543 MiB, 99.69% compilation time)
Running: simpsons38_rule
  0.029982 seconds (49.73 k allocations: 2.929 MiB, 99.00% compilation time)
Running: trapezoidal_rule
  0.022252 seconds (24.14 k allocations: 1.492 MiB, 98.90% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.034922 seconds (40.61 k allocations: 2.580 MiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.195343 seconds (236.14 k allocations: 13.465 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.193564 seconds (289.64 k allocations: 16.491 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.336351 seconds (240.28 k allocations: 13.548 MiB, 9.22% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.246641 seconds (240.28 k allocations: 13.373 MiB, 99.02% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.498947 seconds (455.49 k allocations: 195.012 MiB, 4.98% gc time, 17.16% compilation time)
Running: legendre_quadrature
  0.286578 seconds (190.86 k allocations: 11.114 MiB, 99.21% compilation time)
Running: lobatto_quadrature
  0.207617 seconds (202.37 k allocations: 11.832 MiB, 98.94% compilation time)
Running: radau_quadrature
  0.143847 seconds (202.37 k allocations: 11.846 MiB, 98.03% compilation time)
Running: rectangle_rule_left
  0.336078 seconds (19.89 k allocations: 1.214 MiB, 5.15% compilation time)
Running: rectangle_rule_midpoint
  0.017801 seconds (25.89 k allocations: 1.634 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.154699 seconds (18.24 k allocations: 1.118 MiB, 13.71% compilation time)
Running: rombergs_method
  0.148765 seconds (149.07 k allocations: 8.786 MiB, 10.88% gc time, 97.30% compilation time)
Running: simpsons_rule
  0.024969 seconds (38.61 k allocations: 2.470 MiB, 99.19% compilation time)
Running: simpsons38_rule
  0.057271 seconds (44.65 k allocations: 2.815 MiB, 99.59% compilation time)
Running: trapezoidal_rule
  0.028075 seconds (44.13 k allocations: 1.763 MiB, 97.79% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.033039 seconds (40.35 k allocations: 2.510 MiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=1
  0.253291 seconds (236.73 k allocations: 13.418 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.224535 seconds (290.27 k allocations: 16.392 MiB, 10.58% gc time, 98.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.255821 seconds (240.88 k allocations: 13.470 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.232858 seconds (240.87 k allocations: 13.545 MiB, 99.02% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.326713 seconds (456.19 k allocations: 149.630 MiB, 7.25% gc time, 22.59% compilation time)
Running: legendre_quadrature
  0.146219 seconds (191.45 k allocations: 11.141 MiB, 98.33% compilation time)
Running: lobatto_quadrature
  0.145611 seconds (202.97 k allocations: 11.859 MiB, 98.16% compilation time)
Running: radau_quadrature
  0.248164 seconds (202.97 k allocations: 11.852 MiB, 98.92% compilation time)
Running: rectangle_rule_left
  0.717789 seconds (20.14 k allocations: 1.227 MiB, 3.35% compilation time)
Running: rectangle_rule_midpoint
  0.038724 seconds (25.89 k allocations: 1.635 MiB, 99.53% compilation time)
Running: rectangle_rule_right
  0.690622 seconds (18.20 k allocations: 1.115 MiB, 5.88% compilation time)
Running: rombergs_method
  0.128367 seconds (138.99 k allocations: 8.082 MiB, 12.74% gc time, 96.97% compilation time)
Running: simpsons_rule
  0.029851 seconds (39.09 k allocations: 2.489 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.025111 seconds (45.35 k allocations: 2.842 MiB, 99.24% compilation time)
Running: trapezoidal_rule
  0.025961 seconds (56.28 k allocations: 1.959 MiB, 95.76% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.126734 seconds (152.11 k allocations: 9.115 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.156661 seconds (70.34 k allocations: 2.237 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.160372 seconds (105.50 k allocations: 2.900 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.160159 seconds (92.98 k allocations: 2.686 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.131172 seconds (72.52 k allocations: 2.280 MiB, 98.80% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.525282 seconds (485.76 k allocations: 168.233 MiB, 6.09% gc time, 17.64% compilation time)
Running: legendre_quadrature
  0.117281 seconds (19.14 k allocations: 1.125 MiB, 99.74% compilation time)
Running: lobatto_quadrature
  0.000125 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000043 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.907459 seconds (590.00 M allocations: 8.792 GiB, 7.78% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.084277 seconds (592.75 M allocations: 8.833 GiB, 5.65% gc time)
Running: rombergs_method
  0.183057 seconds (20.91 k allocations: 1.197 MiB, 10.96% gc time, 99.68% compilation time)
Running: simpsons_rule
  0.000025 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027633 seconds (463 allocations: 22.578 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.019059 seconds (171 allocations: 7.859 KiB, 99.39% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.032310 seconds (209.94 M allocations: 3.138 GiB, 1.42% gc time, 0.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.439563 seconds (422.96 k allocations: 23.678 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=2
 15.079113 seconds (478.52 k allocations: 4.041 GiB, 2.58% gc time, 1.91% compilation time)
Running: chebyshev_quadrature with k=3
  6.488130 seconds (254.26 k allocations: 1.642 GiB, 3.85% gc time, 2.33% compilation time)
Running: chebyshev_quadrature with k=4
  9.710625 seconds (254.25 k allocations: 2.261 GiB, 1.66% gc time, 2.07% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.390029 seconds (493.00 k allocations: 13.255 GiB, 5.78% gc time, 0.96% compilation time)
Running: legendre_quadrature.
  8.624137 seconds (228.87 k allocations: 1.976 GiB, 1.03% gc time, 1.60% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.308586 seconds (8.24 M allocations: 13.384 GiB, 7.76% gc time, 0.45% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.245154 seconds (7.24 M allocations: 13.369 GiB, 6.59% gc time, 1.04% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.831613 seconds (22.89 k allocations: 1.394 MiB, 0.21% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.021226 seconds (31.46 k allocations: 1.956 MiB, 0.26% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.650700 seconds (23.09 k allocations: 1.403 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.837265 seconds (448.65 k allocations: 153.513 MiB, 1.81% gc time, 10.68% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.846471 seconds (200.04 M allocations: 2.983 GiB, 2.47% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.388044 seconds (600.05 M allocations: 8.944 GiB, 5.88% gc time, 0.41% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.847289 seconds (600.03 M allocations: 8.943 GiB, 4.33% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.065472 seconds (111.10 k allocations: 4.245 MiB, 94.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.233586 seconds (252.71 k allocations: 13.877 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.177338 seconds (277.25 k allocations: 14.964 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=3
  0.289870 seconds (224.24 k allocations: 11.980 MiB, 40.75% gc time, 99.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.161235 seconds (224.24 k allocations: 11.976 MiB, 99.04% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.331723 seconds (394.78 k allocations: 35.536 MiB, 93.18% compilation time)
Running: laguerre_quadrature with k=2
  0.194303 seconds (185.19 k allocations: 10.857 MiB, 80.89% compilation time)
Running: legendre_quadrature
  0.146486 seconds (149.18 k allocations: 8.347 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.025865 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.024830 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.062326 seconds (19.35 k allocations: 1.157 MiB, 56.10% compilation time)
Running: rectangle_rule_midpoint
  0.036138 seconds (26.33 k allocations: 1.636 MiB, 79.01% compilation time)
Running: rectangle_rule_right
  0.023787 seconds (17.96 k allocations: 1.084 MiB, 65.04% compilation time)
Running: rombergs_method
  0.185837 seconds (176.58 k allocations: 10.247 MiB, 98.61% compilation time)
Running: simpsons_rule
  0.000250 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.028505 seconds (80.36 k allocations: 3.491 MiB, 96.54% compilation time)
Running: trapezoidal_rule
  0.117581 seconds (2.39 M allocations: 37.744 MiB, 29.45% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000676 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.105740 seconds (2.46 k allocations: 1.691 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.107530 seconds (2.71 k allocations: 2.355 MiB, 96.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.109455 seconds (2.31 k allocations: 2.028 MiB, 97.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.111868 seconds (2.31 k allocations: 1.469 MiB, 97.78% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.499833 seconds (371.61 k allocations: 905.325 MiB, 6.25% gc time, 7.33% compilation time)
Running: legendre_quadrature
  0.084657 seconds (1.27 k allocations: 68.203 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000266 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000145 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.889933 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000372 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.679203 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.063711 seconds (993 allocations: 56.609 KiB, 99.40% compilation time)
Running: simpsons_rule
  0.000033 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000033 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000944 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000274 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.114647 seconds (2.53 k allocations: 579.203 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.140353 seconds (2.79 k allocations: 780.188 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.110476 seconds (2.39 k allocations: 661.047 KiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=4
  0.103170 seconds (2.39 k allocations: 491.547 KiB, 99.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.840503 seconds (378.17 k allocations: 253.436 MiB, 15.44% compilation time)
Running: legendre_quadrature
  0.079419 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000110 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000056 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.407507 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000124 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.424397 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.102022 seconds (1.21 k allocations: 64.875 KiB, 99.58% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000455 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
