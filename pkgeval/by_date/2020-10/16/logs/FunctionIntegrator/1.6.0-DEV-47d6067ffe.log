Julia Version 1.6.0-DEV.1240
Commit 47d6067ffe (2020-10-15 19:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
  Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
    Testing FunctionIntegrator
Status `/tmp/jl_XnHrdY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_XnHrdY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.401181 seconds (294.26 k allocations: 13.890 MiB, 4.97% gc time, 94.91% compilation time)
Running: chebyshev_quadrature with k=1
  2.105857 seconds (2.25 M allocations: 130.577 MiB, 2.58% gc time, 98.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.322703 seconds (417.68 k allocations: 24.229 MiB, 80.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.829689 seconds (483.51 k allocations: 27.390 MiB, 5.49% gc time, 75.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.414793 seconds (427.02 k allocations: 23.923 MiB, 94.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 57.965367 seconds (35.48 M allocations: 2.980 GiB, 18.04% gc time, 82.82% compilation time)
Running: laguerre_quadrature with k=1
  3.108544 seconds (3.24 M allocations: 182.159 MiB, 2.85% gc time, 99.92% compilation time)
Running: legendre_quadrature
  0.269335 seconds (211.56 k allocations: 12.253 MiB, 13.71% gc time, 99.18% compilation time)
Running: lobatto_quadrature
  0.366847 seconds (340.21 k allocations: 20.668 MiB, 99.44% compilation time)
Running: radau_quadrature
  0.336398 seconds (462.06 k allocations: 28.346 MiB, 99.38% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.882615 seconds (100.02 M allocations: 1.491 GiB, 0.66% gc time, 0.12% compilation time)
Running: rectangle_rule_midpoint.
  0.184272 seconds (173.35 k allocations: 3.888 MiB, 41.47% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.306672 seconds (100.02 M allocations: 1.491 GiB, 1.09% gc time, 0.08% compilation time)
Running: rombergs_method
  0.750127 seconds (741.79 k allocations: 43.179 MiB, 3.22% gc time, 99.73% compilation time)
Running: simpsons_rule
  0.031147 seconds (48.04 k allocations: 2.633 MiB, 80.56% compilation time)
Running: simpsons38_rule
  0.090352 seconds (111.30 k allocations: 5.948 MiB, 97.85% compilation time)
Running: trapezoidal_rule
  0.320568 seconds (1.72 M allocations: 28.723 MiB, 29.91% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.115180 seconds (30.72 k allocations: 1.831 MiB, 25.87% gc time, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.741214 seconds (297.70 k allocations: 15.862 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=2
  0.158409 seconds (94.22 k allocations: 2.707 MiB, 95.52% compilation time)
Running: chebyshev_quadrature with k=3
  0.156111 seconds (82.47 k allocations: 2.508 MiB, 98.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.152592 seconds (65.08 k allocations: 2.154 MiB, 98.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.707144 seconds (511.34 k allocations: 162.426 MiB, 7.84% gc time, 22.27% compilation time)
Running: legendre_quadrature
  0.243370 seconds (42.23 k allocations: 2.454 MiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.017559 seconds (16.21 k allocations: 1.013 MiB, 99.11% compilation time)
Running: radau_quadrature
  0.134624 seconds (16.32 k allocations: 1.020 MiB, 31.70% compilation time)
Running: rectangle_rule_left
 14.141889 seconds (471.41 M allocations: 7.025 GiB, 11.70% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.866001 seconds (476.96 M allocations: 7.107 GiB, 9.31% gc time)
Running: rombergs_method
  0.434538 seconds (334.52 k allocations: 19.169 MiB, 1.83% gc time, 99.92% compilation time)
Running: simpsons_rule
  0.000022 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.067214 seconds (19.43 k allocations: 1.184 MiB, 99.87% compilation time)
Running: trapezoidal_rule
  0.064019 seconds (16.97 k allocations: 1.034 MiB, 99.87% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.021101 seconds (1.03 k allocations: 34.125 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.088536 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.154761 seconds (2.71 k allocations: 124.266 KiB, 99.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.082191 seconds (2.31 k allocations: 109.297 KiB, 92.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.129780 seconds (2.31 k allocations: 109.297 KiB, 86.38% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.603171 seconds (369.80 k allocations: 19.514 MiB, 99.72% compilation time)
Running: legendre_quadrature
  0.063513 seconds (1.28 k allocations: 65.891 KiB, 99.23% compilation time)
Running: lobatto_quadrature
  0.000509 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000050 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.001113 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.004783 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000332 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.087812 seconds (1.04 k allocations: 56.469 KiB, 99.78% compilation time)
Running: simpsons_rule
  0.000021 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.029531 seconds (923 allocations: 39.281 KiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.029341 seconds (44.29 k allocations: 702.859 KiB, 94.12% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.052260 seconds (83.49 k allocations: 5.003 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.309983 seconds (235.65 k allocations: 13.386 MiB, 4.98% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.256499 seconds (289.14 k allocations: 16.384 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.280657 seconds (239.80 k allocations: 13.577 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.378944 seconds (239.80 k allocations: 13.452 MiB, 99.48% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.800485 seconds (455.41 k allocations: 163.924 MiB, 2.65% gc time, 21.89% compilation time)
Running: legendre_quadrature
  0.581623 seconds (190.36 k allocations: 11.082 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.330969 seconds (202.03 k allocations: 11.817 MiB, 99.38% compilation time)
Running: radau_quadrature
  0.721213 seconds (202.03 k allocations: 11.884 MiB, 3.58% gc time, 99.77% compilation time)
Running: rectangle_rule_left
  0.653725 seconds (19.37 k allocations: 1.189 MiB, 18.18% compilation time)
Running: rectangle_rule_midpoint
  0.018907 seconds (25.55 k allocations: 1.616 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.598971 seconds (17.90 k allocations: 1.099 MiB, 4.92% compilation time)
Running: rombergs_method
  0.937597 seconds (137.77 k allocations: 8.045 MiB, 98.16% compilation time)
Running: simpsons_rule
  0.022831 seconds (37.98 k allocations: 2.442 MiB, 99.07% compilation time)
Running: simpsons38_rule
  0.028080 seconds (43.94 k allocations: 2.785 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.021970 seconds (43.20 k allocations: 1.730 MiB, 96.51% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.047748 seconds (68.44 k allocations: 3.060 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.265974 seconds (242.24 k allocations: 13.467 MiB, 82.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.547333 seconds (296.17 k allocations: 16.374 MiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=3
  0.569119 seconds (246.37 k allocations: 13.521 MiB, 21.64% gc time, 88.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.232947 seconds (246.37 k allocations: 13.525 MiB, 99.21% compilation time)
Running: hermite_quadrature with k=2
 29.325580 seconds (20.49 M allocations: 1.088 GiB, 12.67% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.370164 seconds (464.58 k allocations: 50.130 MiB, 29.20% gc time, 97.11% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.208832 seconds (282.35 k allocations: 15.735 MiB, 97.17% compilation time)
Running: legendre_quadrature
  0.301442 seconds (196.90 k allocations: 11.410 MiB, 16.17% gc time, 94.66% compilation time)
Running: lobatto_quadrature
  0.268346 seconds (222.69 k allocations: 37.618 MiB, 88.22% compilation time)
Running: radau_quadrature
  0.246727 seconds (219.27 k allocations: 30.252 MiB, 15.30% gc time, 75.94% compilation time)
Running: rectangle_rule_left
  0.031403 seconds (22.28 k allocations: 1.333 MiB, 99.54% compilation time)
Running: rectangle_rule_midpoint
  0.031778 seconds (27.36 k allocations: 1.703 MiB, 99.52% compilation time)
Running: rectangle_rule_right
  0.021045 seconds (19.02 k allocations: 1.153 MiB, 99.32% compilation time)
Running: rombergs_method
  0.108297 seconds (140.11 k allocations: 8.061 MiB, 97.96% compilation time)
Running: simpsons_rule
  0.054430 seconds (45.46 k allocations: 2.710 MiB, 98.74% compilation time)
Running: simpsons38_rule
  0.067639 seconds (58.91 k allocations: 3.170 MiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.038012 seconds (29.23 k allocations: 1.655 MiB, 99.29% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037626 seconds (52.41 k allocations: 2.720 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=1
  0.268468 seconds (237.76 k allocations: 13.249 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.360814 seconds (291.35 k allocations: 16.145 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.353099 seconds (241.90 k allocations: 13.330 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.326932 seconds (241.91 k allocations: 13.331 MiB, 18.43% gc time, 99.35% compilation time)
Running: hermite_quadrature with k=2
  0.194674 seconds (175.13 k allocations: 10.126 MiB, 98.88% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  9.110783 seconds (457.85 k allocations: 1.176 GiB, 20.07% gc time, 7.78% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  1.477191 seconds (277.64 k allocations: 15.547 MiB, 1.41% gc time, 99.73% compilation time)
Running: legendre_quadrature
  0.136046 seconds (192.48 k allocations: 11.194 MiB, 98.32% compilation time)
Running: lobatto_quadrature
  0.362509 seconds (213.45 k allocations: 23.322 MiB, 74.46% compilation time)
Running: radau_quadrature
  0.423771 seconds (212.60 k allocations: 21.251 MiB, 4.60% gc time, 96.14% compilation time)
Running: rectangle_rule_left
  0.032715 seconds (20.07 k allocations: 1.228 MiB, 97.12% compilation time)
Running: rectangle_rule_midpoint
  0.056494 seconds (26.25 k allocations: 1.652 MiB, 98.50% compilation time)
Running: rectangle_rule_right
  0.024967 seconds (17.87 k allocations: 1.098 MiB, 99.47% compilation time)
Running: rombergs_method
  0.234709 seconds (135.95 k allocations: 7.879 MiB, 87.62% compilation time)
Running: simpsons_rule
  0.037277 seconds (40.80 k allocations: 2.543 MiB, 99.43% compilation time)
Running: simpsons38_rule
  0.093071 seconds (49.73 k allocations: 2.929 MiB, 99.72% compilation time)
Running: trapezoidal_rule
  0.045226 seconds (24.14 k allocations: 1.492 MiB, 99.52% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.039762 seconds (40.61 k allocations: 2.580 MiB, 99.61% compilation time)
Running: chebyshev_quadrature with k=1
  0.202488 seconds (236.14 k allocations: 13.461 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.317426 seconds (289.64 k allocations: 16.497 MiB, 92.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.485394 seconds (240.28 k allocations: 13.544 MiB, 5.39% gc time, 99.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.464921 seconds (240.28 k allocations: 13.378 MiB, 99.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.724845 seconds (455.95 k allocations: 195.035 MiB, 3.81% gc time, 28.24% compilation time)
Running: legendre_quadrature
  0.592014 seconds (190.85 k allocations: 11.108 MiB, 86.05% compilation time)
Running: lobatto_quadrature
  0.450048 seconds (202.53 k allocations: 11.846 MiB, 99.41% compilation time)
Running: radau_quadrature
  0.183099 seconds (202.53 k allocations: 11.847 MiB, 96.08% compilation time)
Running: rectangle_rule_left
  0.418829 seconds (19.89 k allocations: 1.214 MiB, 12.68% compilation time)
Running: rectangle_rule_midpoint
  0.022936 seconds (25.89 k allocations: 1.634 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.157039 seconds (18.24 k allocations: 1.118 MiB, 15.62% compilation time)
Running: rombergs_method
  0.274472 seconds (149.07 k allocations: 8.793 MiB, 98.40% compilation time)
Running: simpsons_rule
  0.041695 seconds (38.61 k allocations: 2.470 MiB, 99.43% compilation time)
Running: simpsons38_rule
  0.128208 seconds (44.65 k allocations: 2.815 MiB, 99.82% compilation time)
Running: trapezoidal_rule
  0.015872 seconds (44.13 k allocations: 1.763 MiB, 96.55% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.688407 seconds (40.35 k allocations: 2.510 MiB, 7.42% gc time, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.626849 seconds (236.73 k allocations: 13.411 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.813719 seconds (290.27 k allocations: 16.392 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.519940 seconds (240.88 k allocations: 13.470 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.366817 seconds (240.88 k allocations: 13.561 MiB, 99.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.421860 seconds (456.66 k allocations: 149.782 MiB, 4.34% gc time, 24.07% compilation time)
Running: legendre_quadrature
  0.431786 seconds (191.45 k allocations: 11.126 MiB, 99.43% compilation time)
Running: lobatto_quadrature
  0.429260 seconds (203.13 k allocations: 11.867 MiB, 99.42% compilation time)
Running: radau_quadrature
  0.227272 seconds (203.12 k allocations: 11.860 MiB, 98.79% compilation time)
Running: rectangle_rule_left
  0.704184 seconds (20.14 k allocations: 1.227 MiB, 8.83% compilation time)
Running: rectangle_rule_midpoint
  0.050815 seconds (25.89 k allocations: 1.635 MiB, 99.57% compilation time)
Running: rectangle_rule_right
  0.694404 seconds (18.20 k allocations: 1.115 MiB, 8.36% compilation time)
Running: rombergs_method
  0.336432 seconds (138.99 k allocations: 8.082 MiB, 98.30% compilation time)
Running: simpsons_rule
  0.038682 seconds (39.09 k allocations: 2.489 MiB, 99.36% compilation time)
Running: simpsons38_rule
  0.087314 seconds (45.35 k allocations: 2.842 MiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.045377 seconds (56.28 k allocations: 1.959 MiB, 97.54% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.360189 seconds (152.11 k allocations: 9.113 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.304867 seconds (70.34 k allocations: 2.237 MiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.196784 seconds (105.50 k allocations: 2.900 MiB, 17.10% gc time, 81.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.236019 seconds (92.98 k allocations: 2.686 MiB, 88.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.247032 seconds (72.52 k allocations: 2.280 MiB, 95.69% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.285536 seconds (486.23 k allocations: 168.244 MiB, 3.93% gc time, 24.95% compilation time)
Running: legendre_quadrature
  0.096452 seconds (19.14 k allocations: 1.125 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000103 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 22.532098 seconds (590.00 M allocations: 8.792 GiB, 6.35% gc time)
Running: rectangle_rule_midpoint
  0.000026 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.855148 seconds (592.75 M allocations: 8.833 GiB, 6.71% gc time)
Running: rombergs_method
  0.150927 seconds (20.91 k allocations: 1.197 MiB, 99.59% compilation time)
Running: simpsons_rule
  0.000048 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032166 seconds (463 allocations: 22.578 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.035040 seconds (171 allocations: 7.859 KiB, 99.66% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.223433 seconds (209.94 M allocations: 3.138 GiB, 1.87% gc time, 1.20% compilation time)
Running: chebyshev_quadrature with k=1
  0.527771 seconds (423.03 k allocations: 23.685 MiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=2
 18.682513 seconds (478.60 k allocations: 4.041 GiB, 7.43% gc time, 2.60% compilation time)
Running: chebyshev_quadrature with k=3
  8.210183 seconds (254.26 k allocations: 1.642 GiB, 3.86% gc time, 2.47% compilation time)
Running: chebyshev_quadrature with k=4
 11.311616 seconds (254.26 k allocations: 2.261 GiB, 1.98% gc time, 2.18% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 39.154510 seconds (493.54 k allocations: 13.255 GiB, 11.31% gc time, 1.96% compilation time)
Running: legendre_quadrature.
  9.727240 seconds (228.94 k allocations: 1.976 GiB, 2.20% gc time, 3.94% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.610372 seconds (8.24 M allocations: 13.384 GiB, 13.59% gc time, 0.79% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.594736 seconds (7.24 M allocations: 13.369 GiB, 11.54% gc time, 0.79% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.058173 seconds (22.88 k allocations: 1.394 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.074729 seconds (31.46 k allocations: 1.956 MiB, 0.26% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.857753 seconds (23.09 k allocations: 1.403 MiB, 0.24% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.865758 seconds (448.73 k allocations: 153.530 MiB, 1.90% gc time, 17.25% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.503404 seconds (200.04 M allocations: 2.983 GiB, 2.25% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.404907 seconds (600.05 M allocations: 8.944 GiB, 5.51% gc time, 0.29% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.582303 seconds (600.03 M allocations: 8.943 GiB, 3.89% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.083832 seconds (111.10 k allocations: 4.245 MiB, 95.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.398657 seconds (252.71 k allocations: 13.877 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.218580 seconds (277.25 k allocations: 14.962 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=3
  0.681624 seconds (224.24 k allocations: 11.983 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.553545 seconds (224.24 k allocations: 12.011 MiB, 25.99% gc time, 99.75% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.463058 seconds (395.24 k allocations: 35.560 MiB, 94.70% compilation time)
Running: laguerre_quadrature with k=2
  0.302539 seconds (185.19 k allocations: 10.841 MiB, 85.59% compilation time)
Running: legendre_quadrature
  0.190984 seconds (149.17 k allocations: 8.338 MiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.049537 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018723 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.062216 seconds (19.35 k allocations: 1.157 MiB, 70.88% compilation time)
Running: rectangle_rule_midpoint
  0.101962 seconds (26.33 k allocations: 1.636 MiB, 66.78% compilation time)
Running: rectangle_rule_right
  0.042031 seconds (17.96 k allocations: 1.084 MiB, 57.52% compilation time)
Running: rombergs_method
  0.533147 seconds (176.05 k allocations: 10.125 MiB, 99.49% compilation time)
Running: simpsons_rule
  0.000499 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.064519 seconds (80.36 k allocations: 3.491 MiB, 98.52% compilation time)
Running: trapezoidal_rule
  0.094879 seconds (2.39 M allocations: 37.744 MiB, 46.42% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000722 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.126443 seconds (2.46 k allocations: 1.691 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=2
  0.146082 seconds (2.71 k allocations: 2.355 MiB, 76.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.116983 seconds (2.31 k allocations: 2.028 MiB, 97.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.095425 seconds (2.31 k allocations: 1.469 MiB, 97.87% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.932991 seconds (372.07 k allocations: 905.349 MiB, 5.81% gc time, 5.58% compilation time)
Running: legendre_quadrature
  0.068371 seconds (1.27 k allocations: 68.203 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000162 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000118 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.327161 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000384 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.778609 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071334 seconds (993 allocations: 56.609 KiB, 99.49% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001005 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000151 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.128809 seconds (2.53 k allocations: 579.203 KiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.109822 seconds (2.79 k allocations: 780.188 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.116300 seconds (2.39 k allocations: 661.047 KiB, 95.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.118236 seconds (2.39 k allocations: 491.547 KiB, 99.46% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.990998 seconds (378.63 k allocations: 253.460 MiB, 17.60% compilation time)
Running: legendre_quadrature
  0.072201 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000120 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000045 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.300334 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000127 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.223497 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.135194 seconds (1.21 k allocations: 64.875 KiB, 99.78% compilation time)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.005080 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
