Julia Version 1.6.0-DEV.1276
Commit 2655a3ad5d (2020-10-18 19:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed CodecZstd â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed XMLDict â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed BigArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.10
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed Blosc â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed OrderedCollections â”€ v1.3.1
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed AWSS3 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.4
   Installed Blosc_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.14.3+1
   Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Libz â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed AWSCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.15
   Installed LazyJSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.20.0
   Installed MsgPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed TranscodingStreams â”€ v0.9.5
   Installed BufferedStreams â”€â”€â”€â”€ v1.0.0
   Installed Zstd_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.5+2
   Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed FilePathsBase â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed PropertyDicts â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.8
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
   Installed GoogleCloud â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.1
   Installed Lz4_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.9.2+2
   Installed Retry â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed SymDict â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [c2a8506f] + BigArrays v1.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4f1ea46c] + AWSCore v0.6.15
  [1c724243] + AWSS3 v0.7.4
  [c2a8506f] + BigArrays v1.3.0
  [b99e7846] + BinaryProvider v0.5.10
  [a74b3585] + Blosc v0.7.0
  [0b7ba130] + Blosc_jll v1.14.3+1
  [e1450e63] + BufferedStreams v1.0.0
  [944b1d66] + CodecZlib v0.7.0
  [6b39b394] + CodecZstd v0.7.0
  [34da2185] + Compat v3.20.0
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [48062228] + FilePathsBase v0.9.5
  [55e21f81] + GoogleCloud v0.8.1
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.1.2
  [682c06a0] + JSON v0.21.1
  [fc18253b] + LazyJSON v0.2.2
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [2ec943e9] + Libz v1.0.1
  [5ced341a] + Lz4_jll v1.9.2+2
  [739be429] + MbedTLS v0.6.8
  [78c3b35d] + Mocking v0.7.1
  [99f44e22] + MsgPack v1.1.0
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [f8a19df8] + PropertyDicts v0.1.0
  [20febd7b] + Retry v0.4.1
  [2da68c74] + SymDict v0.3.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [02c8fc9c] + XML2_jll v2.9.10+3
  [228000da] + XMLDict v0.4.1
  [83775a58] + Zlib_jll v1.2.11+18
  [3161d3a3] + Zstd_jll v1.4.5+2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Building MbedTLS â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2d94286a9c2f52c63a16146bb86fd6cdfbf677c6/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mRetry[39m
[90m[32m  âœ“ [39mIniFile[39m
[90m[32m  âœ“ [39mSymDict[39m
[90m[32m  âœ“ [39mPropertyDicts[39m
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mOffsetArrays[39m
[90m[32m  âœ“ [39mExprTools[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mIterTools[39m
[90m[32m  âœ“ [39mTranscodingStreams[39m
[90m[32m  âœ“ [39mCompat[39m
[90m[32m  âœ“ [39mMocking[39m
[90m[32m  âœ“ [39mMsgPack[39m
[90m[32m  âœ“ [39mBufferedStreams[39m
[90m[32m  âœ“ [39mMbedTLS[39m
[90m[32m  âœ“ [39mLz4_jll[39m
[90m[32m  âœ“ [39mLibiconv_jll[39m
[90m[32m  âœ“ [39mZstd_jll[39m
[90m[32m  âœ“ [39mZlib_jll[39m
[90m[32m  âœ“ [39mFilePathsBase[39m
[90m[32m  âœ“ [39mLibz[39m
[90m[32m  âœ“ [39mCodecZstd[39m
[90m[32m  âœ“ [39mCodecZlib[39m
[90m[32m  âœ“ [39mBlosc_jll[39m
[90m[32m  âœ“ [39mXML2_jll[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mBlosc[39m
[90m[32m  âœ“ [39mEzXML[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mHTTP[39m
[90m[32m  âœ“ [39mXMLDict[39m
[90m[32m  âœ“ [39mLazyJSON[39m
[90m[32m  âœ“ [39mGoogleCloud[39m
[90m[32m  âœ“ [39mAWSCore[39m
[90m[32m  âœ“ [39mAWSS3[39m
[32m  âœ“ [39mBigArrays
36 dependencies successfully precompiled (1 already precompiled)
     Testing BigArrays
Status `/tmp/jl_ct6Q2W/Project.toml`
  [4f1ea46c] AWSCore v0.6.15
  [1c724243] AWSS3 v0.7.4
  [c2a8506f] BigArrays v1.3.0
  [a74b3585] Blosc v0.7.0
  [944b1d66] CodecZlib v0.7.0
  [6b39b394] CodecZstd v0.7.0
  [55e21f81] GoogleCloud v0.8.1
  [cd3eb016] HTTP v0.8.19
  [682c06a0] JSON v0.21.1
  [6fe1bfb0] OffsetArrays v1.3.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [8ba89e20] Distributed
  [8dfed614] Test
Status `/tmp/jl_ct6Q2W/Manifest.toml`
  [4f1ea46c] AWSCore v0.6.15
  [1c724243] AWSS3 v0.7.4
  [c2a8506f] BigArrays v1.3.0
  [b99e7846] BinaryProvider v0.5.10
  [a74b3585] Blosc v0.7.0
  [0b7ba130] Blosc_jll v1.14.3+1
  [e1450e63] BufferedStreams v1.0.0
  [944b1d66] CodecZlib v0.7.0
  [6b39b394] CodecZstd v0.7.0
  [34da2185] Compat v3.20.0
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [48062228] FilePathsBase v0.9.5
  [55e21f81] GoogleCloud v0.8.1
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [c8e1da08] IterTools v1.3.0
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [fc18253b] LazyJSON v0.2.2
  [94ce4f54] Libiconv_jll v1.16.0+7
  [2ec943e9] Libz v1.0.1
  [5ced341a] Lz4_jll v1.9.2+2
  [739be429] MbedTLS v0.6.8
  [78c3b35d] Mocking v0.7.1
  [99f44e22] MsgPack v1.1.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [f8a19df8] PropertyDicts v0.1.0
  [20febd7b] Retry v0.4.1
  [2da68c74] SymDict v0.3.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [02c8fc9c] XML2_jll v2.9.10+3
  [228000da] XMLDict v0.4.1
  [83775a58] Zlib_jll v1.2.11+18
  [3161d3a3] Zstd_jll v1.4.5+2
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary:             | Pass  Total
test index transformation |    2      2
layerDir = "/tmp/jl_PmBXI3"
path = "/tmp/jl_wIEriZ"
Test Summary:              |
test bigarray construction | No tests
path = "/tmp/jl_PmBXI3"
a = UInt8[0x45, 0xd5, 0x44, 0x55, 0x05, 0x07, 0xf1, 0x04, 0x02, 0x22, 0xe8, 0x58, 0x33, 0x1c, 0xdf, 0x99, 0x5e, 0xfa, 0x8e, 0xb4]
b = UInt8[0x45, 0xd5, 0x44, 0x55, 0x05, 0x07, 0xf1, 0x04, 0x02, 0x22, 0xe8, 0x58, 0x33, 0x1c, 0xdf, 0x99, 0x5e, 0xfa, 0x8e, 0xb4]
Test Summary: | Pass  Total

test BinDict |    3      3
path = "/tmp/jl_PmBXI3"
info: Info{UInt8}("", 1, BigArrays.Infos.InfoScales.InfoScale[Symbol("6_6_30"), Symbol("12_12_30")], "", :image)
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = global_range2buffer_range(globalRange::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}, bufferGlobalRange::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}) at Indexes.jl:20
â”” @ BigArrays.Indexes ~/.julia/packages/BigArrays/aB3lD/src/Indexes.jl:20
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = global_range2buffer_range(globalRange::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}, bufferGlobalRange::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}) at Indexes.jl:21
â”” @ BigArrays.Indexes ~/.julia/packages/BigArrays/aB3lD/src/Indexes.jl:21
â”Œ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
â”‚   caller = CartesianIndices at type.jl:158 [inlined]
â”” @ Core ~/.julia/packages/BigArrays/aB3lD/src/type.jl:158
â”Œ Warning: `one(i::CartesianIndex)` is deprecated, use `oneunit(i)` instead.
â”‚   caller = getindex_sequential(::BigArray{BinDict, UInt8}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64}, N} where N) at sequential.jl:40
â”” @ BigArrays ~/.julia/packages/BigArrays/aB3lD/src/modes/sequential.jl:40
cutout speed: 0.575977352570497 MB/s
Test Summary:       | Pass  Total

test file protocol |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 0.5325409124555994 MB/s
â”Œ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
â”‚   caller = CartesianIndices at type.jl:158 [inlined]
â”” @ Core ~/.julia/packages/BigArrays/aB3lD/src/type.jl:158
â”Œ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
â”‚   caller = getindex_multithreads_worker!(chan::Channel{Tuple}, buf::Array{UInt8, 3}, ba::BigArray{BinDict, UInt8}) at multithreads.jl:79
â”” @ BigArrays ~/.julia/packages/BigArrays/aB3lD/src/modes/multithreads.jl:79
cutout speed: 1.8080158382187428 MB/s
Test Summary:                                | Pass  Total

test IO of BigArray with backend of BinDict |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 18.807389352748984 MB/s
cutout speed: 77.57257945068433 MB/s
Test Summary:             | Pass  Total

test negative coordinate |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 80.66549029493319 MB/s
cutout speed: 114.52294037649416 MB/s
Test Summary:                                 | Pass  Total

test aligned IO crossing the volume boundary |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 50.81127575556164 MB/s
cutout speed: 107.80588967233513 MB/s
Test Summary:                                    | Pass  Total

test nonaligned IO crossing the volume boundary |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 1.7658523879842574 MB/s
cutout speed: 1.0531581580263816 MB/s
Test Summary:                                                     | Pass  Total
test IO of BigArray with backend of BinDict with zstd compression |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 11.043393634863994 MB/s
cutout speed: 9.566402793389615 MB/s
Test Summary:                                                        | Pass  Total
test IO of BigArray with backend of BinDict with blosclz compression |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 91.37113814173948 MB/s
cutout speed: 87.93624622148943 MB/s
Test Summary:                            | Pass  Total
test dataset not aligned starting from 0 |    1      1
path = "/tmp/jl_PmBXI3"
saving speed: 101.29146619397316 MB/s
cutout speed: 84.69641628288603 MB/s
Test Summary:                                                     | Pass  Total
test dataset not aligned starting from 0 and negative coordinates |    1      1
     Testing BigArrays tests passed 
