Julia Version 1.6.0-DEV.1274
Commit 444aa87348 (2020-10-17 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_7B9LrZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_7B9LrZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.153242 seconds (292.99 k allocations: 13.804 MiB, 87.65% compilation time)
Running: chebyshev_quadrature with k=1
  1.040348 seconds (2.24 M allocations: 130.408 MiB, 12.98% gc time, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.214772 seconds (417.67 k allocations: 24.214 MiB, 34.99% gc time, 89.36% compilation time)
Running: chebyshev_quadrature with k=3
  0.156804 seconds (483.51 k allocations: 27.385 MiB, 87.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.171256 seconds (427.02 k allocations: 23.925 MiB, 6.51% gc time, 91.72% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 22.908956 seconds (35.45 M allocations: 2.978 GiB, 11.21% gc time, 73.05% compilation time)
Running: laguerre_quadrature with k=1
  1.693406 seconds (3.24 M allocations: 182.164 MiB, 4.19% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.137488 seconds (211.43 k allocations: 12.257 MiB, 11.51% gc time, 98.97% compilation time)
Running: lobatto_quadrature
  0.180349 seconds (339.94 k allocations: 20.667 MiB, 99.01% compilation time)
Running: radau_quadrature
  0.206119 seconds (458.14 k allocations: 28.160 MiB, 8.96% gc time, 99.15% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 34.934338 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.061733 seconds (173.35 k allocations: 3.888 MiB, 28.62% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 36.263893 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time, 0.05% compilation time)
Running: rombergs_method
  0.290790 seconds (741.36 k allocations: 43.136 MiB, 5.02% gc time, 99.48% compilation time)
Running: simpsons_rule
  0.015999 seconds (48.04 k allocations: 2.633 MiB, 91.82% compilation time)
Running: simpsons38_rule
  0.041535 seconds (111.25 k allocations: 5.945 MiB, 95.43% compilation time)
Running: trapezoidal_rule
  0.196577 seconds (1.72 M allocations: 28.720 MiB, 21.26% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.046042 seconds (30.72 k allocations: 1.831 MiB, 99.56% compilation time)
Running: chebyshev_quadrature with k=1
  0.274229 seconds (297.58 k allocations: 15.853 MiB, 99.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.107434 seconds (94.22 k allocations: 2.707 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.144131 seconds (82.47 k allocations: 2.508 MiB, 21.72% gc time, 76.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.111206 seconds (65.08 k allocations: 2.155 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.628403 seconds (510.75 k allocations: 162.359 MiB, 19.92% gc time, 20.65% compilation time)
Running: legendre_quadrature
  0.111365 seconds (42.10 k allocations: 2.444 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.013675 seconds (16.08 k allocations: 1.003 MiB, 98.83% compilation time)
Running: radau_quadrature
  0.014183 seconds (16.19 k allocations: 1.010 MiB, 98.86% compilation time)
Running: rectangle_rule_left
  9.275207 seconds (471.41 M allocations: 7.025 GiB, 6.94% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  8.881845 seconds (476.96 M allocations: 7.107 GiB, 5.08% gc time)
Running: rombergs_method
  0.211670 seconds (334.24 k allocations: 19.151 MiB, 2.45% gc time, 99.82% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.045583 seconds (19.43 k allocations: 1.184 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.027796 seconds (16.97 k allocations: 1.034 MiB, 99.64% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.012347 seconds (1.03 k allocations: 34.125 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=1
  0.062340 seconds (2.46 k allocations: 116.359 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.066243 seconds (2.71 k allocations: 124.266 KiB, 99.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.066490 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.078117 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.167712 seconds (369.35 k allocations: 19.504 MiB, 98.95% compilation time)
Running: legendre_quadrature
  0.049368 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000118 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000033 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000182 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000128 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000182 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.045225 seconds (1.04 k allocations: 56.469 KiB, 99.65% compilation time)
Running: simpsons_rule
  0.000016 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.015528 seconds (923 allocations: 39.281 KiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.012745 seconds (44.29 k allocations: 702.859 KiB, 91.37% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.053330 seconds (83.49 k allocations: 5.003 MiB, 30.84% gc time, 99.55% compilation time)
Running: chebyshev_quadrature with k=1
  0.107577 seconds (235.65 k allocations: 13.387 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.123681 seconds (289.14 k allocations: 16.395 MiB, 97.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.125406 seconds (239.80 k allocations: 13.536 MiB, 8.59% gc time, 98.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.107701 seconds (239.80 k allocations: 13.470 MiB, 98.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.031362 seconds (454.96 k allocations: 163.901 MiB, 18.78% gc time, 34.05% compilation time)
Running: legendre_quadrature
  0.091190 seconds (190.36 k allocations: 11.084 MiB, 98.73% compilation time)
Running: lobatto_quadrature
  0.100439 seconds (201.88 k allocations: 11.810 MiB, 98.74% compilation time)
Running: radau_quadrature
  0.105765 seconds (201.88 k allocations: 11.812 MiB, 98.50% compilation time)
Running: rectangle_rule_left
  0.412661 seconds (19.37 k allocations: 1.189 MiB, 3.62% compilation time)
Running: rectangle_rule_midpoint
  0.015147 seconds (25.55 k allocations: 1.616 MiB, 99.01% compilation time)
Running: rectangle_rule_right
  0.380122 seconds (17.90 k allocations: 1.099 MiB, 5.77% compilation time)
Running: rombergs_method
  0.092193 seconds (137.77 k allocations: 8.025 MiB, 14.94% gc time, 97.22% compilation time)
Running: simpsons_rule
  0.012642 seconds (37.98 k allocations: 2.442 MiB, 99.06% compilation time)
Running: simpsons38_rule
  0.021370 seconds (43.94 k allocations: 2.785 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.018184 seconds (43.20 k allocations: 1.730 MiB, 96.13% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016572 seconds (68.44 k allocations: 3.060 MiB, 95.96% compilation time)
Running: chebyshev_quadrature with k=1
  0.105707 seconds (242.24 k allocations: 13.474 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.117214 seconds (296.17 k allocations: 16.388 MiB, 97.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.105886 seconds (246.37 k allocations: 13.538 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.104512 seconds (246.37 k allocations: 13.524 MiB, 98.68% compilation time)
Running: hermite_quadrature with k=2
  8.309551 seconds (20.49 M allocations: 1.088 GiB, 10.90% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.301287 seconds (464.13 k allocations: 50.118 MiB, 16.13% gc time, 91.91% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.122414 seconds (282.35 k allocations: 15.753 MiB, 97.86% compilation time)
Running: legendre_quadrature
  0.093471 seconds (196.90 k allocations: 11.413 MiB, 98.06% compilation time)
Running: lobatto_quadrature
  0.245911 seconds (222.54 k allocations: 37.584 MiB, 44.83% gc time, 45.58% compilation time)
Running: radau_quadrature
  0.146909 seconds (219.12 k allocations: 30.267 MiB, 7.32% gc time, 87.05% compilation time)
Running: rectangle_rule_left
  0.014844 seconds (22.28 k allocations: 1.333 MiB, 99.18% compilation time)
Running: rectangle_rule_midpoint
  0.013998 seconds (27.36 k allocations: 1.703 MiB, 99.13% compilation time)
Running: rectangle_rule_right
  0.015327 seconds (19.02 k allocations: 1.153 MiB, 99.12% compilation time)
Running: rombergs_method
  0.077188 seconds (140.11 k allocations: 8.067 MiB, 97.00% compilation time)
Running: simpsons_rule
  0.018414 seconds (45.46 k allocations: 2.710 MiB, 98.74% compilation time)
Running: simpsons38_rule
  0.029758 seconds (58.91 k allocations: 3.170 MiB, 98.62% compilation time)
Running: trapezoidal_rule
  0.022472 seconds (29.23 k allocations: 1.655 MiB, 99.03% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.022729 seconds (52.41 k allocations: 2.720 MiB, 98.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.134594 seconds (237.76 k allocations: 13.306 MiB, 9.66% gc time, 98.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.148238 seconds (291.35 k allocations: 16.145 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=3
  0.133606 seconds (241.90 k allocations: 13.330 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=4
  0.158402 seconds (241.91 k allocations: 13.331 MiB, 14.05% gc time, 98.72% compilation time)
Running: hermite_quadrature with k=2
  0.113574 seconds (175.13 k allocations: 10.127 MiB, 97.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.138299 seconds (457.40 k allocations: 1.175 GiB, 21.64% gc time, 3.83% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.143487 seconds (277.64 k allocations: 15.553 MiB, 97.93% compilation time)
Running: legendre_quadrature
  0.114475 seconds (192.47 k allocations: 11.190 MiB, 10.59% gc time, 98.04% compilation time)
Running: lobatto_quadrature
  0.120119 seconds (213.30 k allocations: 23.311 MiB, 89.00% compilation time)
Running: radau_quadrature
  0.124073 seconds (212.45 k allocations: 21.244 MiB, 8.29% gc time, 91.43% compilation time)
Running: rectangle_rule_left
  0.013423 seconds (20.07 k allocations: 1.228 MiB, 99.22% compilation time)
Running: rectangle_rule_midpoint
  0.013854 seconds (26.25 k allocations: 1.652 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.016718 seconds (17.87 k allocations: 1.098 MiB, 99.17% compilation time)
Running: rombergs_method
  0.066133 seconds (135.95 k allocations: 7.879 MiB, 96.72% compilation time)
Running: simpsons_rule
  0.014765 seconds (40.80 k allocations: 2.541 MiB, 98.80% compilation time)
Running: simpsons38_rule
  0.023708 seconds (49.73 k allocations: 2.931 MiB, 99.02% compilation time)
Running: trapezoidal_rule
  0.013177 seconds (24.14 k allocations: 1.492 MiB, 98.82% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.013903 seconds (40.61 k allocations: 2.580 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.123395 seconds (236.14 k allocations: 13.461 MiB, 13.25% gc time, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.132109 seconds (289.64 k allocations: 16.549 MiB, 97.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.113970 seconds (240.29 k allocations: 13.611 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.127449 seconds (240.28 k allocations: 13.373 MiB, 9.82% gc time, 98.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.470732 seconds (455.50 k allocations: 194.946 MiB, 7.14% gc time, 27.25% compilation time)
Running: legendre_quadrature
  0.083817 seconds (190.86 k allocations: 11.114 MiB, 97.88% compilation time)
Running: lobatto_quadrature
  0.097474 seconds (202.38 k allocations: 11.832 MiB, 98.24% compilation time)
Running: radau_quadrature
  0.109126 seconds (202.38 k allocations: 11.846 MiB, 11.11% gc time, 98.41% compilation time)
Running: rectangle_rule_left
  0.297706 seconds (19.89 k allocations: 1.214 MiB, 5.31% compilation time)
Running: rectangle_rule_midpoint
  0.015163 seconds (25.89 k allocations: 1.634 MiB, 99.04% compilation time)
Running: rectangle_rule_right
  0.137900 seconds (18.24 k allocations: 1.118 MiB, 12.37% compilation time)
Running: rombergs_method
  0.091652 seconds (149.07 k allocations: 8.787 MiB, 96.70% compilation time)
Running: simpsons_rule
  0.012418 seconds (38.61 k allocations: 2.470 MiB, 99.00% compilation time)
Running: simpsons38_rule
  0.016675 seconds (44.65 k allocations: 2.815 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.016478 seconds (44.13 k allocations: 1.763 MiB, 96.22% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016494 seconds (40.35 k allocations: 2.510 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.124184 seconds (236.73 k allocations: 13.480 MiB, 13.55% gc time, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.130359 seconds (290.27 k allocations: 16.392 MiB, 97.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.110564 seconds (240.88 k allocations: 13.470 MiB, 97.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.115648 seconds (240.88 k allocations: 13.608 MiB, 10.90% gc time, 97.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.987812 seconds (456.21 k allocations: 149.634 MiB, 12.08% gc time, 31.49% compilation time)
Running: legendre_quadrature
  0.088832 seconds (191.45 k allocations: 11.126 MiB, 97.83% compilation time)
Running: lobatto_quadrature
  0.102206 seconds (202.98 k allocations: 11.859 MiB, 97.86% compilation time)
Running: radau_quadrature
  0.115092 seconds (202.97 k allocations: 11.853 MiB, 9.83% gc time, 98.13% compilation time)
Running: rectangle_rule_left
  0.472203 seconds (20.14 k allocations: 1.227 MiB, 3.50% compilation time)
Running: rectangle_rule_midpoint
  0.015639 seconds (25.89 k allocations: 1.635 MiB, 98.75% compilation time)
Running: rectangle_rule_right
  0.475478 seconds (18.20 k allocations: 1.115 MiB, 3.41% compilation time)
Running: rombergs_method
  0.080694 seconds (138.99 k allocations: 8.082 MiB, 96.02% compilation time)
Running: simpsons_rule
  0.015283 seconds (39.09 k allocations: 2.489 MiB, 98.92% compilation time)
Running: simpsons38_rule
  0.023452 seconds (45.35 k allocations: 2.842 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.014997 seconds (56.28 k allocations: 1.959 MiB, 95.13% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.091576 seconds (152.12 k allocations: 9.115 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=1
  0.090370 seconds (70.34 k allocations: 2.237 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.099243 seconds (105.50 k allocations: 2.900 MiB, 97.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.101767 seconds (92.98 k allocations: 2.686 MiB, 98.01% compilation time)
Running: chebyshev_quadrature with k=4
  0.101842 seconds (72.52 k allocations: 2.280 MiB, 98.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.159008 seconds (485.78 k allocations: 168.234 MiB, 14.98% gc time, 27.66% compilation time)
Running: legendre_quadrature
  0.091876 seconds (19.14 k allocations: 1.125 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.000090 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 14.591152 seconds (590.00 M allocations: 8.792 GiB, 7.21% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 13.629963 seconds (592.75 M allocations: 8.833 GiB, 7.48% gc time)
Running: rombergs_method
  0.078944 seconds (20.91 k allocations: 1.197 MiB, 99.53% compilation time)
Running: simpsons_rule
  0.000019 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.018498 seconds (463 allocations: 22.578 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.012039 seconds (171 allocations: 7.859 KiB, 99.28% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.668746 seconds (209.94 M allocations: 3.138 GiB, 1.57% gc time, 0.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.263330 seconds (422.90 k allocations: 23.679 MiB, 3.02% gc time, 98.97% compilation time)
Running: chebyshev_quadrature with k=2
 14.256064 seconds (478.46 k allocations: 4.041 GiB, 2.71% gc time, 1.86% compilation time)
Running: chebyshev_quadrature with k=3
  6.242547 seconds (254.26 k allocations: 1.642 GiB, 3.77% gc time, 1.75% compilation time)
Running: chebyshev_quadrature with k=4
  8.535080 seconds (254.25 k allocations: 2.261 GiB, 2.05% gc time, 1.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 28.725318 seconds (492.96 k allocations: 13.255 GiB, 5.61% gc time, 0.99% compilation time)
Running: legendre_quadrature.
  6.982103 seconds (228.82 k allocations: 1.976 GiB, 3.33% gc time, 1.92% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.605565 seconds (8.24 M allocations: 13.384 GiB, 7.76% gc time, 0.56% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.275334 seconds (7.24 M allocations: 13.369 GiB, 11.76% gc time, 0.48% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.532470 seconds (22.89 k allocations: 1.394 MiB, 0.15% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.131062 seconds (31.46 k allocations: 1.956 MiB, 0.24% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.316699 seconds (23.09 k allocations: 1.403 MiB, 0.26% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.317270 seconds (448.60 k allocations: 153.511 MiB, 2.25% gc time, 9.70% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.487809 seconds (200.04 M allocations: 2.983 GiB, 2.19% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.692050 seconds (600.05 M allocations: 8.944 GiB, 5.60% gc time, 0.12% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.488196 seconds (600.03 M allocations: 8.943 GiB, 3.90% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.042669 seconds (111.10 k allocations: 4.245 MiB, 82.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.193003 seconds (252.71 k allocations: 13.893 MiB, 77.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.242075 seconds (277.25 k allocations: 14.964 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=3
  0.205376 seconds (224.24 k allocations: 11.980 MiB, 44.52% gc time, 99.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.124351 seconds (224.24 k allocations: 11.976 MiB, 99.00% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.224193 seconds (394.79 k allocations: 35.537 MiB, 91.88% compilation time)
Running: laguerre_quadrature with k=2
  0.131583 seconds (185.19 k allocations: 10.857 MiB, 72.61% compilation time)
Running: legendre_quadrature
  0.108082 seconds (149.17 k allocations: 8.338 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.015165 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012389 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.094639 seconds (19.35 k allocations: 1.157 MiB, 84.46% compilation time)
Running: rectangle_rule_midpoint
  0.031251 seconds (26.33 k allocations: 1.636 MiB, 65.88% compilation time)
Running: rectangle_rule_right
  0.042350 seconds (17.96 k allocations: 1.084 MiB, 58.90% compilation time)
Running: rombergs_method
  0.188657 seconds (176.59 k allocations: 10.194 MiB, 98.54% compilation time)
Running: simpsons_rule
  0.000509 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.037517 seconds (80.36 k allocations: 3.492 MiB, 97.79% compilation time)
Running: trapezoidal_rule
  0.087275 seconds (2.39 M allocations: 37.744 MiB, 33.41% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000715 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.074797 seconds (2.46 k allocations: 1.691 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.104254 seconds (2.71 k allocations: 2.355 MiB, 97.82% compilation time)
Running: chebyshev_quadrature with k=3
  0.085822 seconds (2.31 k allocations: 2.028 MiB, 97.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.078955 seconds (2.31 k allocations: 1.469 MiB, 97.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.286252 seconds (371.63 k allocations: 905.326 MiB, 5.36% gc time, 11.90% compilation time)
Running: legendre_quadrature
  0.040657 seconds (1.27 k allocations: 68.203 KiB, 99.78% compilation time)
Running: lobatto_quadrature
  0.000122 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000086 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.928463 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000400 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.135615 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.041656 seconds (993 allocations: 56.609 KiB, 99.55% compilation time)
Running: simpsons_rule
  0.000023 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000030 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000564 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000157 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.067547 seconds (2.53 k allocations: 579.203 KiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.081218 seconds (2.79 k allocations: 780.188 KiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.086474 seconds (2.39 k allocations: 661.047 KiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.079203 seconds (2.39 k allocations: 491.547 KiB, 99.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.823879 seconds (378.19 k allocations: 253.531 MiB, 18.34% compilation time)
Running: legendre_quadrature
  0.094596 seconds (1.32 k allocations: 67.859 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000075 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000031 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.872331 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000128 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.820683 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.052709 seconds (1.21 k allocations: 64.875 KiB, 99.66% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000433 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
