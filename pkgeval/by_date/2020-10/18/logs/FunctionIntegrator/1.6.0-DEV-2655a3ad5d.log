Julia Version 1.6.0-DEV.1276
Commit 2655a3ad5d (2020-10-18 19:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_smNEc1/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_smNEc1/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.159288 seconds (293.33 k allocations: 13.820 MiB, 5.98% gc time, 88.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.904900 seconds (2.25 M allocations: 130.719 MiB, 3.02% gc time, 98.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.149625 seconds (417.67 k allocations: 24.234 MiB, 85.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.187514 seconds (483.51 k allocations: 27.382 MiB, 7.19% gc time, 82.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.209315 seconds (427.02 k allocations: 23.920 MiB, 14.68% gc time, 93.22% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 22.204385 seconds (35.47 M allocations: 2.979 GiB, 13.21% gc time, 77.61% compilation time)
Running: laguerre_quadrature with k=1
  1.658420 seconds (3.24 M allocations: 182.158 MiB, 3.73% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.122533 seconds (211.51 k allocations: 12.243 MiB, 98.87% compilation time)
Running: lobatto_quadrature
  0.200774 seconds (340.23 k allocations: 20.682 MiB, 7.79% gc time, 99.13% compilation time)
Running: radau_quadrature
  0.233241 seconds (462.16 k allocations: 28.356 MiB, 99.26% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 32.520538 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.060041 seconds (173.35 k allocations: 3.888 MiB, 27.13% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 32.285046 seconds (100.02 M allocations: 1.491 GiB, 0.31% gc time, 0.05% compilation time)
Running: rombergs_method
  0.389836 seconds (741.74 k allocations: 43.156 MiB, 7.69% gc time, 99.62% compilation time)
Running: simpsons_rule
  0.015735 seconds (48.04 k allocations: 2.633 MiB, 91.86% compilation time)
Running: simpsons38_rule
  0.046229 seconds (111.42 k allocations: 5.953 MiB, 96.33% compilation time)
Running: trapezoidal_rule
  0.211513 seconds (1.72 M allocations: 28.727 MiB, 4.60% gc time, 15.71% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037024 seconds (30.72 k allocations: 1.831 MiB, 99.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.266187 seconds (295.68 k allocations: 15.754 MiB, 6.24% gc time, 99.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.086899 seconds (94.22 k allocations: 2.707 MiB, 98.10% compilation time)
Running: chebyshev_quadrature with k=3
  0.088499 seconds (82.47 k allocations: 2.508 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.109352 seconds (65.08 k allocations: 2.154 MiB, 98.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.622791 seconds (511.34 k allocations: 162.389 MiB, 3.76% gc time, 39.61% compilation time)
Running: legendre_quadrature
  0.108958 seconds (42.19 k allocations: 2.448 MiB, 7.13% gc time, 99.83% compilation time)
Running: lobatto_quadrature
  0.010290 seconds (16.16 k allocations: 1.007 MiB, 99.04% compilation time)
Running: radau_quadrature
  0.010009 seconds (16.27 k allocations: 1.014 MiB, 99.21% compilation time)
Running: rectangle_rule_left
  8.102517 seconds (471.41 M allocations: 7.025 GiB, 5.20% gc time)
Running: rectangle_rule_midpoint
  0.000008 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  8.226310 seconds (476.96 M allocations: 7.107 GiB, 5.87% gc time)
Running: rombergs_method
  0.389104 seconds (334.47 k allocations: 19.162 MiB, 1.13% gc time, 99.93% compilation time)
Running: simpsons_rule
  0.000016 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.031884 seconds (19.43 k allocations: 1.184 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.022422 seconds (16.97 k allocations: 1.034 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016133 seconds (1.03 k allocations: 34.125 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.080371 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.062788 seconds (2.71 k allocations: 124.266 KiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.065606 seconds (2.31 k allocations: 109.297 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=4
  0.061572 seconds (2.31 k allocations: 109.297 KiB, 99.86% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.207789 seconds (369.80 k allocations: 19.527 MiB, 14.07% gc time, 99.32% compilation time)
Running: legendre_quadrature
  0.044295 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000082 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000032 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000169 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000119 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000168 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.044373 seconds (1.04 k allocations: 56.469 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000072 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.014996 seconds (923 allocations: 39.281 KiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.011653 seconds (44.29 k allocations: 702.859 KiB, 92.19% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.204245 seconds (83.49 k allocations: 5.003 MiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=1
  0.111702 seconds (235.65 k allocations: 13.387 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.110159 seconds (289.13 k allocations: 16.379 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.130226 seconds (239.80 k allocations: 13.536 MiB, 12.21% gc time, 98.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.122297 seconds (239.80 k allocations: 13.470 MiB, 98.77% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.861170 seconds (455.41 k allocations: 163.924 MiB, 12.13% gc time, 31.73% compilation time)
Running: legendre_quadrature
  0.097003 seconds (190.36 k allocations: 11.088 MiB, 98.92% compilation time)
Running: lobatto_quadrature
  0.088561 seconds (202.03 k allocations: 11.834 MiB, 98.60% compilation time)
Running: radau_quadrature
  0.096782 seconds (202.03 k allocations: 11.815 MiB, 13.14% gc time, 98.92% compilation time)
Running: rectangle_rule_left
  0.380213 seconds (19.37 k allocations: 1.189 MiB, 3.90% compilation time)
Running: rectangle_rule_midpoint
  0.012563 seconds (25.55 k allocations: 1.616 MiB, 99.05% compilation time)
Running: rectangle_rule_right
  0.344802 seconds (17.90 k allocations: 1.099 MiB, 3.97% compilation time)
Running: rombergs_method
  0.078462 seconds (137.77 k allocations: 8.025 MiB, 97.08% compilation time)
Running: simpsons_rule
  0.013279 seconds (37.98 k allocations: 2.442 MiB, 99.14% compilation time)
Running: simpsons38_rule
  0.017812 seconds (43.94 k allocations: 2.785 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.016838 seconds (43.20 k allocations: 1.730 MiB, 97.38% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015802 seconds (68.44 k allocations: 3.060 MiB, 96.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.103911 seconds (242.24 k allocations: 13.478 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.125853 seconds (296.17 k allocations: 16.376 MiB, 10.42% gc time, 98.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.100819 seconds (246.37 k allocations: 13.538 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.096969 seconds (246.37 k allocations: 13.521 MiB, 98.42% compilation time)
Running: hermite_quadrature with k=2
  7.704981 seconds (20.49 M allocations: 1.088 GiB, 8.92% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.327614 seconds (464.58 k allocations: 50.141 MiB, 32.94% gc time, 91.57% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.113666 seconds (282.35 k allocations: 15.726 MiB, 98.18% compilation time)
Running: legendre_quadrature
  0.095295 seconds (196.91 k allocations: 11.455 MiB, 14.06% gc time, 98.50% compilation time)
Running: lobatto_quadrature
  0.225596 seconds (222.69 k allocations: 37.593 MiB, 92.24% compilation time)
Running: radau_quadrature
  0.279807 seconds (219.27 k allocations: 30.275 MiB, 3.47% gc time, 91.10% compilation time)
Running: rectangle_rule_left
  0.013761 seconds (22.28 k allocations: 1.333 MiB, 99.26% compilation time)
Running: rectangle_rule_midpoint
  0.013182 seconds (27.36 k allocations: 1.703 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.017239 seconds (19.02 k allocations: 1.153 MiB, 99.27% compilation time)
Running: rombergs_method
  0.062779 seconds (140.11 k allocations: 8.066 MiB, 96.79% compilation time)
Running: simpsons_rule
  0.013941 seconds (45.46 k allocations: 2.710 MiB, 98.93% compilation time)
Running: simpsons38_rule
  0.020631 seconds (58.91 k allocations: 3.170 MiB, 98.35% compilation time)
Running: trapezoidal_rule
  0.028808 seconds (29.23 k allocations: 1.655 MiB, 99.23% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015623 seconds (52.41 k allocations: 2.720 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=1
  0.117604 seconds (237.76 k allocations: 13.243 MiB, 95.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.195136 seconds (291.35 k allocations: 16.145 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.123162 seconds (241.91 k allocations: 13.331 MiB, 11.40% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.096919 seconds (241.91 k allocations: 13.331 MiB, 98.59% compilation time)
Running: hermite_quadrature with k=2
  0.076699 seconds (175.13 k allocations: 10.127 MiB, 98.18% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.079719 seconds (457.85 k allocations: 1.176 GiB, 25.04% gc time, 4.37% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.122792 seconds (277.64 k allocations: 15.553 MiB, 8.40% gc time, 98.16% compilation time)
Running: legendre_quadrature
  0.083676 seconds (192.47 k allocations: 11.190 MiB, 97.88% compilation time)
Running: lobatto_quadrature
  0.116636 seconds (213.45 k allocations: 23.320 MiB, 8.21% gc time, 90.61% compilation time)
Running: radau_quadrature
  0.099973 seconds (212.60 k allocations: 21.251 MiB, 90.68% compilation time)
Running: rectangle_rule_left
  0.014114 seconds (20.07 k allocations: 1.228 MiB, 99.20% compilation time)
Running: rectangle_rule_midpoint
  0.015461 seconds (26.25 k allocations: 1.652 MiB, 99.26% compilation time)
Running: rectangle_rule_right
  0.011960 seconds (17.87 k allocations: 1.098 MiB, 99.13% compilation time)
Running: rombergs_method
  0.059445 seconds (135.95 k allocations: 7.880 MiB, 97.07% compilation time)
Running: simpsons_rule
  0.015671 seconds (40.80 k allocations: 2.541 MiB, 99.01% compilation time)
Running: simpsons38_rule
  0.017385 seconds (49.73 k allocations: 2.931 MiB, 98.97% compilation time)
Running: trapezoidal_rule
  0.012070 seconds (24.14 k allocations: 1.492 MiB, 98.78% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027110 seconds (40.61 k allocations: 2.580 MiB, 36.23% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.111710 seconds (236.14 k allocations: 13.461 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.111467 seconds (289.64 k allocations: 16.487 MiB, 97.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.176481 seconds (240.28 k allocations: 13.548 MiB, 6.63% gc time, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.099634 seconds (240.28 k allocations: 13.373 MiB, 98.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.291038 seconds (455.94 k allocations: 194.984 MiB, 13.04% gc time, 28.06% compilation time)
Running: legendre_quadrature
  0.097286 seconds (190.86 k allocations: 11.114 MiB, 10.82% gc time, 98.37% compilation time)
Running: lobatto_quadrature
  0.099563 seconds (202.52 k allocations: 11.840 MiB, 98.14% compilation time)
Running: radau_quadrature
  0.093335 seconds (202.53 k allocations: 11.857 MiB, 98.07% compilation time)
Running: rectangle_rule_left
  0.284989 seconds (19.89 k allocations: 1.214 MiB, 4.94% compilation time)
Running: rectangle_rule_midpoint
  0.012457 seconds (25.89 k allocations: 1.634 MiB, 99.17% compilation time)
Running: rectangle_rule_right
  0.129786 seconds (18.24 k allocations: 1.118 MiB, 11.03% compilation time)
Running: rombergs_method
  0.072327 seconds (149.07 k allocations: 8.786 MiB, 96.07% compilation time)
Running: simpsons_rule
  0.013607 seconds (38.61 k allocations: 2.470 MiB, 98.95% compilation time)
Running: simpsons38_rule
  0.020433 seconds (44.65 k allocations: 2.815 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.013913 seconds (44.13 k allocations: 1.763 MiB, 97.19% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014295 seconds (40.35 k allocations: 2.510 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=1
  0.160395 seconds (236.73 k allocations: 13.418 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.118296 seconds (290.27 k allocations: 16.392 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.112172 seconds (240.88 k allocations: 13.470 MiB, 10.44% gc time, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.101322 seconds (240.88 k allocations: 13.561 MiB, 98.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.790086 seconds (456.66 k allocations: 149.653 MiB, 20.78% gc time, 39.95% compilation time)
Running: legendre_quadrature
  0.095575 seconds (191.45 k allocations: 11.126 MiB, 10.53% gc time, 98.59% compilation time)
Running: lobatto_quadrature
  0.087895 seconds (203.13 k allocations: 11.867 MiB, 98.51% compilation time)
Running: radau_quadrature
  0.096179 seconds (203.12 k allocations: 11.860 MiB, 98.49% compilation time)
Running: rectangle_rule_left
  0.444264 seconds (20.14 k allocations: 1.227 MiB, 3.76% compilation time)
Running: rectangle_rule_midpoint
  0.012675 seconds (25.89 k allocations: 1.635 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.464605 seconds (18.20 k allocations: 1.115 MiB, 2.81% compilation time)
Running: rombergs_method
  0.070586 seconds (138.99 k allocations: 8.144 MiB, 97.30% compilation time)
Running: simpsons_rule
  0.013677 seconds (39.09 k allocations: 2.491 MiB, 98.92% compilation time)
Running: simpsons38_rule
  0.015203 seconds (45.35 k allocations: 2.842 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.010214 seconds (56.28 k allocations: 1.959 MiB, 95.00% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.101908 seconds (152.11 k allocations: 9.115 MiB, 16.21% gc time, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.090285 seconds (70.34 k allocations: 2.237 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.092812 seconds (105.50 k allocations: 2.900 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.096174 seconds (92.98 k allocations: 2.686 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.095482 seconds (72.52 k allocations: 2.280 MiB, 98.66% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.873583 seconds (486.27 k allocations: 168.259 MiB, 12.36% gc time, 36.92% compilation time)
Running: legendre_quadrature
  0.069374 seconds (19.14 k allocations: 1.125 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000037 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 13.992649 seconds (590.00 M allocations: 8.792 GiB, 7.61% gc time)
Running: rectangle_rule_midpoint
  0.000026 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 14.254784 seconds (592.75 M allocations: 8.833 GiB, 7.84% gc time)
Running: rombergs_method
  0.073067 seconds (20.91 k allocations: 1.197 MiB, 99.60% compilation time)
Running: simpsons_rule
  0.000017 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.016458 seconds (463 allocations: 22.578 KiB, 99.77% compilation time)
Running: trapezoidal_rule
  0.009904 seconds (171 allocations: 7.859 KiB, 99.65% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.396140 seconds (209.94 M allocations: 3.138 GiB, 1.91% gc time, 0.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.255027 seconds (422.98 k allocations: 23.679 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
 14.738153 seconds (478.55 k allocations: 4.041 GiB, 3.91% gc time, 1.79% compilation time)
Running: chebyshev_quadrature with k=3
  6.527739 seconds (254.26 k allocations: 1.642 GiB, 3.95% gc time, 1.87% compilation time)
Running: chebyshev_quadrature with k=4
  8.986719 seconds (254.25 k allocations: 2.261 GiB, 2.05% gc time, 1.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 28.613681 seconds (493.50 k allocations: 13.255 GiB, 6.35% gc time, 0.82% compilation time)
Running: legendre_quadrature.
  7.026551 seconds (228.90 k allocations: 1.976 GiB, 0.81% gc time, 2.16% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.646988 seconds (8.24 M allocations: 13.384 GiB, 6.87% gc time, 0.39% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.883169 seconds (7.24 M allocations: 13.369 GiB, 8.75% gc time, 0.47% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.069282 seconds (22.89 k allocations: 1.394 MiB, 0.16% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 10.747554 seconds (31.46 k allocations: 1.956 MiB, 0.17% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 10.875473 seconds (23.09 k allocations: 1.403 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.114654 seconds (448.68 k allocations: 153.514 MiB, 1.96% gc time, 10.26% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.207922 seconds (200.04 M allocations: 2.983 GiB, 2.10% gc time, 0.10% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.269156 seconds (600.05 M allocations: 8.944 GiB, 6.26% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.970702 seconds (600.03 M allocations: 8.943 GiB, 4.32% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.044772 seconds (111.10 k allocations: 4.244 MiB, 95.20% compilation time)
Running: chebyshev_quadrature with k=1
  0.129336 seconds (252.71 k allocations: 13.877 MiB, 97.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.215773 seconds (277.25 k allocations: 14.964 MiB, 41.84% gc time, 99.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.098832 seconds (224.24 k allocations: 11.980 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.098933 seconds (224.24 k allocations: 11.976 MiB, 98.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.194603 seconds (395.24 k allocations: 35.564 MiB, 92.05% compilation time)
Running: laguerre_quadrature with k=2
  0.107752 seconds (185.19 k allocations: 10.841 MiB, 75.83% compilation time)
Running: legendre_quadrature
  0.070165 seconds (149.17 k allocations: 8.338 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.015204 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012914 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.024054 seconds (19.35 k allocations: 1.157 MiB, 65.85% compilation time)
Running: rectangle_rule_midpoint
  0.027738 seconds (26.33 k allocations: 1.636 MiB, 59.41% compilation time)
Running: rectangle_rule_right
  0.023428 seconds (17.96 k allocations: 1.084 MiB, 61.61% compilation time)
Running: rombergs_method
  0.146168 seconds (176.09 k allocations: 10.168 MiB, 98.49% compilation time)
Running: simpsons_rule
  0.000422 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.029905 seconds (80.36 k allocations: 3.492 MiB, 97.83% compilation time)
Running: trapezoidal_rule
  0.065674 seconds (2.39 M allocations: 37.744 MiB, 35.20% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000407 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.091628 seconds (2.46 k allocations: 1.691 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.086404 seconds (2.71 k allocations: 2.355 MiB, 96.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.067936 seconds (2.31 k allocations: 2.028 MiB, 96.79% compilation time)
Running: chebyshev_quadrature with k=4
  0.066629 seconds (2.31 k allocations: 1.469 MiB, 96.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.630084 seconds (372.07 k allocations: 905.349 MiB, 6.73% gc time, 4.87% compilation time)
Running: legendre_quadrature
  0.042841 seconds (1.27 k allocations: 68.203 KiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.000136 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000096 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.773601 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000204 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.795718 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.036716 seconds (993 allocations: 56.609 KiB, 99.54% compilation time)
Running: simpsons_rule
  0.000024 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000019 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000548 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000112 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.086542 seconds (2.53 k allocations: 579.203 KiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.073950 seconds (2.79 k allocations: 780.188 KiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.073558 seconds (2.39 k allocations: 661.047 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.069408 seconds (2.39 k allocations: 491.547 KiB, 99.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.564765 seconds (378.63 k allocations: 253.491 MiB, 22.58% compilation time)
Running: legendre_quadrature
  0.062161 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000036 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.934143 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000063 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.869346 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.046461 seconds (1.21 k allocations: 64.875 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000219 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
