Julia Version 1.6.0-DEV.1274
Commit 444aa87348 (2020-10-17 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed OrderedCollections â”€ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_b4dDNZ/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_b4dDNZ/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.024489045f0), Item(7, 0.060607314f0), Item(1, 0.06276357f0), Item(40, 0.09093094f0)])
Vsorted = Item[Item(39, 0.024489045f0), Item(7, 0.060607314f0), Item(1, 0.06276357f0), Item(40, 0.09093094f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005003643035888672, 0.00891253153483073, 301.0, 50.06233981996775))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.015285340944925944, 0.004216933250427246, 301.0, 72.66225123405457))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0028794447580973307, 0.0029516299565633137, 301.0, 40.77562177181244))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003499333063761393, 0.004683462778727213, 301.0, 9.219256645301357))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00466771125793457, 0.00606536865234375, 301.0, 45.37838143855333))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.9299329121907554e-5, 2.480347951253255e-5, 301.0, 178.2511251270771))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.612836201985677e-5, 0.0092941681543986, 300.0, 29.01873724674806)
p = PerformanceResult(1.0, 1.0, 1.0, 3.3672650655110674e-5, 2.056757609049479e-5, 300.0, 29.01873724674806)
p = PerformanceResult(1.0, 1.0, 1.0, 0.002702029546101888, 0.0029432058334350588, 300.0, 1.766298300728522)
p = PerformanceResult(1.0, 1.0, 1.0, 2.505249447292752e-5, 1.3105074564615886e-5, 300.0, 1.766298300728522)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.612836201985677e-5, 0.0092941681543986, 300.0, 29.01873724674806), PerformanceResult(1.0, 1.0, 1.0, 3.3672650655110674e-5, 2.056757609049479e-5, 300.0, 29.01873724674806), PerformanceResult(1.0, 1.0, 1.0, 0.002702029546101888, 0.0029432058334350588, 300.0, 1.766298300728522), PerformanceResult(1.0, 1.0, 1.0, 2.505249447292752e-5, 1.3105074564615886e-5, 300.0, 1.766298300728522))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006474796930948893, 0.0031877676645914715, 349.1, 28763.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006806858380635579, 0.0023488680521647136, 302.46666666666664, 6993.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.713434855143229e-5, 7.700920104980468e-6, 98.96666666666667, 50.06233981996775))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.62204106648763e-5, 1.113414764404297e-5, 89.7, 72.66225123405457))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6999244689941406e-5, 7.74065653483073e-6, 90.96666666666667, 40.77562177181244))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.080368041992187e-5, 6.263256072998047e-5, 99.0, 45.37838143855333))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7966666666666665, 0.7966666666666665, 0.7966666666666665, 1.724561055501302e-5, 2.3897488911946615e-5, 73.1, 189.13795056939125))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-19T03:27:55.766
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9239999999999999, 0.9229999999999999, 0.9234736842105262, 1.5716552734375e-5, 1.569032669067383e-5, 156.23, 48.87615929939784))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5196800231933594e-5, 1.2350082397460937e-5, 160.31, 0.0))
*** advance 1 from 1000; 2020-10-19T03:27:56.331
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9149999999999998, 0.9149999999999998, 0.9149999999999998, 1.4278888702392578e-5, 1.4510154724121094e-5, 155.42, 74.6950977947563))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4028549194335938e-5, 1.1320114135742187e-5, 159.39, 0.0))
*** advance 1 from 1000; 2020-10-19T03:27:56.887
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9240000000000002, 0.9240000000000002, 0.9240000000000002, 1.8258094787597656e-5, 1.873016357421875e-5, 155.0, 39.439452674239874))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4882087707519532e-5, 1.4688968658447265e-5, 158.89, 0.0))
*** advance 1 from 1000; 2020-10-19T03:27:57.576
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9200000000000003, 0.9200000000000003, 0.9200000000000003, 4.668951034545899e-5, 0.00018830060958862304, 155.07, 44.38194058369845))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.079103469848633e-5, 0.00020884990692138672, 158.97, 0.0))
*** advance 1 from 1000; 2020-10-19T03:27:58.164
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8549999999999999, 0.8549999999999999, 0.8549999999999999, 2.5370121002197265e-5, 7.53021240234375e-5, 153.38, 204.56565926922485))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 6.78253173828125e-5, 0.00015006065368652343, 157.25, 0.0))
*** advance 1 from 1000; 2020-10-19T03:27:59.335
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9239999999999999, 0.9229999999999999, 0.9234736842105262, 1.9886493682861327e-5, 4.6470165252685546e-5, 156.23, 48.88432037841994))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.932382583618164e-5, 4.6379566192626953e-5, 160.31, 0.014340470981551334))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:02.111
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7640000000000002, 0.7640000000000002, 0.7640000000000002, 0.0012136650085449218, 6.911993026733399e-5, 199.99, 194.1666689813137))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:03.103
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7520000000000003, 0.7520000000000003, 0.7520000000000003, 0.0011824488639831543, 0.00010744810104370118, 203.13, 110.71349427103996))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:04.542
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6430000000000002, 0.6430000000000002, 0.6430000000000002, 0.0013124966621398926, 5.0539970397949216e-5, 272.14, 0.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:06.245
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9310000000000005, 0.9300000000000006, 0.9304736842105268, 0.0015670347213745117, 2.4819374084472655e-5, 219.44, 609.2000199407339))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:07.415
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5920000000000003, 0.5920000000000003, 0.5920000000000003, 0.0014624881744384765, 0.00022181987762451172, 256.16, 2336.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:08.264
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.41399999999999976, 0.41399999999999976, NaN, 0.0049877166748046875, 0.0003207087516784668, 257.94, 3686.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-19T03:28:10.218
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.615, 0.615, NaN, 0.0018589425086975098, 1.3360977172851562e-5, 249.7, 2339.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.051094890510949, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9703125000000002,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5625,"distances_sum":587.8173421919346}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.051094890510949,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9703125000000002,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5625,"distances_sum":587.8173421919346}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.051094890510949,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9703125000000002,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5625,"distances_sum":587.8173421919346}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.341030851653427, conf: {"restarts":4}, perf: {"precision":0.9088541666666657,"recall":0.9088541666666657,"f1":0.9088541666666657,"seconds":1.344829797744751e-5,"exhaustive_search_seconds":5.070120096206665e-6,"evaluations":42.2890625,"distances_sum":289.44452029280365}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.5303514376996805, conf: {"restarts":3}, perf: {"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":1.1587515473365784e-5,"exhaustive_search_seconds":5.070120096206665e-6,"evaluations":39.125,"distances_sum":290.72444169037044}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.5303514376996805,"state":{"restarts":3},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":1.1587515473365784e-5,"exhaustive_search_seconds":5.070120096206665e-6,"evaluations":39.125,"distances_sum":290.72444169037044}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.5303514376996805,"state":{"restarts":3},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":1.1587515473365784e-5,"exhaustive_search_seconds":5.070120096206665e-6,"evaluations":39.125,"distances_sum":290.72444169037044}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.5303514376996805,"state":{"restarts":3},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":1.1587515473365784e-5,"exhaustive_search_seconds":5.070120096206665e-6,"evaluations":39.125,"distances_sum":290.72444169037044}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":8}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":8.877180516719818e-5,"exhaustive_search_seconds":1.7860904335975647e-5,"evaluations":115.9140625,"distances_sum":124.73385595157743}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555545, conf: {"restarts":5}, perf: {"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":2.6112422347068787e-5,"exhaustive_search_seconds":1.7860904335975647e-5,"evaluations":94.1171875,"distances_sum":125.2386675029993}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555545,"state":{"restarts":5},"perf":{"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":2.6112422347068787e-5,"exhaustive_search_seconds":1.7860904335975647e-5,"evaluations":94.1171875,"distances_sum":125.2386675029993}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555545,"state":{"restarts":5},"perf":{"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":2.6112422347068787e-5,"exhaustive_search_seconds":1.7860904335975647e-5,"evaluations":94.1171875,"distances_sum":125.2386675029993}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8315972222222209, conf: {"restarts":1}, perf: {"precision":0.8315972222222209,"recall":0.8315972222222209,"f1":null,"seconds":4.641339182853699e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":137.5234375,"distances_sum":57.44802923826501}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.833333333333332, conf: {"restarts":3}, perf: {"precision":0.833333333333332,"recall":0.833333333333332,"f1":null,"seconds":0.00020149163901805878,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":144.0625,"distances_sum":58.10771550191566}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8298611111111099, conf: {"restarts":15}, perf: {"precision":0.8298611111111099,"recall":0.8298611111111099,"f1":null,"seconds":8.774176239967346e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":250.96875,"distances_sum":57.56624372443184}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8307291666666653, conf: {"restarts":7}, perf: {"precision":0.8307291666666653,"recall":0.8307291666666653,"f1":null,"seconds":6.724148988723755e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":184.09375,"distances_sum":57.17742028599605}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.842013888888888, conf: {"restarts":2}, perf: {"precision":0.842013888888888,"recall":0.842013888888888,"f1":0.842013888888888,"seconds":5.367211997509003e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":139.1953125,"distances_sum":57.07669239072129}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.842013888888888,"state":{"restarts":2},"perf":{"precision":0.842013888888888,"recall":0.842013888888888,"f1":0.842013888888888,"seconds":5.367211997509003e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":139.1953125,"distances_sum":57.07669239072129}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.842013888888888,"state":{"restarts":2},"perf":{"precision":0.842013888888888,"recall":0.842013888888888,"f1":0.842013888888888,"seconds":5.367211997509003e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":139.1953125,"distances_sum":57.07669239072129}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.842013888888888,"state":{"restarts":2},"perf":{"precision":0.842013888888888,"recall":0.842013888888888,"f1":0.842013888888888,"seconds":5.367211997509003e-5,"exhaustive_search_seconds":0.0002115163952112198,"evaluations":139.1953125,"distances_sum":57.07669239072129}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(2), SatNeighborhood(32), 2020-10-19T03:28:18.203
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5086, 0.02997971f0), Item(3601, 0.056717034f0), Item(4971, 0.06001117f0), Item(2900, 0.064977735f0), Item(5574, 0.06643316f0), Item(4324, 0.06651085f0), Item(8374, 0.06922724f0), Item(626, 0.072647035f0), Item(4805, 0.07399328f0), Item(8919, 0.07624184f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0285714285714285, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9825148809523813,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.75,"distances_sum":597.719326376915}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0285714285714285,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9825148809523813,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.75,"distances_sum":597.719326376915}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0285714285714285,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9825148809523813,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.75,"distances_sum":597.719326376915}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.821015138023152, conf: {"bsize":4}, perf: {"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":1.117214560508728e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":35.09375,"distances_sum":280.7425361908972}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.821015138023152,"state":{"bsize":4},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":1.117214560508728e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":35.09375,"distances_sum":280.7425361908972}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.9164556962025316, conf: {"bsize":3}, perf: {"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.1563301086425781e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":33.9453125,"distances_sum":281.3510643877089}, best_list's length: 8, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.9164556962025316,"state":{"bsize":3},"perf":{"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.1563301086425781e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":33.9453125,"distances_sum":281.3510643877089}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.18632134774956, conf: {"bsize":2}, perf: {"precision":0.9487847222222215,"recall":0.9487847222222215,"f1":0.9487847222222215,"seconds":1.0857358574867249e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":31.0703125,"distances_sum":283.0807125903666}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.18632134774956,"state":{"bsize":2},"perf":{"precision":0.9487847222222215,"recall":0.9487847222222215,"f1":0.9487847222222215,"seconds":1.0857358574867249e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":31.0703125,"distances_sum":283.0807125903666}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.18632134774956,"state":{"bsize":2},"perf":{"precision":0.9487847222222215,"recall":0.9487847222222215,"f1":0.9487847222222215,"seconds":1.0857358574867249e-5,"exhaustive_search_seconds":4.805624485015869e-6,"evaluations":31.0703125,"distances_sum":283.0807125903666}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.697520255340045,"state":{"bsize":2},"perf":{"precision":0.9418402777777772,"recall":0.9418402777777772,"f1":0.9418402777777772,"seconds":1.3811513781547546e-5,"exhaustive_search_seconds":1.3820827007293701e-5,"evaluations":63.640625,"distances_sum":119.60974269732833}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":16.697520255340045,"state":{"bsize":2},"perf":{"precision":0.9418402777777772,"recall":0.9418402777777772,"f1":0.9418402777777772,"seconds":1.3811513781547546e-5,"exhaustive_search_seconds":1.3820827007293701e-5,"evaluations":63.640625,"distances_sum":119.60974269732833}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.06673526385418, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.719756543636322e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":106.296875,"distances_sum":54.476580226793885}, best_list's length: 3, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.06673526385418,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.719756543636322e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":106.296875,"distances_sum":54.476580226793885}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.23821339950372, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.743225872516632e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":103.8984375,"distances_sum":54.47853443957865}, best_list's length: 8, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.33018867924528, conf: {"bsize":4}, perf: {"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":4.822574555873871e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":106.0,"distances_sum":54.53977079130709}, best_list's length: 9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.37192154549477, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.738755524158478e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":105.953125,"distances_sum":54.476580226793885}, best_list's length: 11, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.23821339950372,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.743225872516632e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":103.8984375,"distances_sum":54.47853443957865}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.23821339950372,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.743225872516632e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":103.8984375,"distances_sum":54.47853443957865}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.23821339950372,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.743225872516632e-5,"exhaustive_search_seconds":0.00022536702454090118,"evaluations":103.8984375,"distances_sum":54.47853443957865}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-10-19T03:28:21.724
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5426, 0.039135803f0), Item(2833, 0.04830823f0), Item(6309, 0.05042468f0), Item(2159, 0.05487117f0), Item(126, 0.055632774f0), Item(9561, 0.058784395f0), Item(3408, 0.060435966f0), Item(5496, 0.061023116f0), Item(9565, 0.06275379f0), Item(4866, 0.06344581f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
