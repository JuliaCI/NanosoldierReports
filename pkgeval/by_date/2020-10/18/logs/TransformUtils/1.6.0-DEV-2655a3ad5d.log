Julia Version 1.6.0-DEV.1276
Commit 2655a3ad5d (2020-10-18 19:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed TransformUtils â”€ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mTransformUtils
1 dependency successfully precompiled
     Testing TransformUtils
Status `/tmp/jl_0IRqnY/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_0IRqnY/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
     Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.2523301067595476 0.089777931430341; 0.2523301067595476 0.0 -0.05820301220875315; -0.089777931430341 0.05820301220875315 0.0])
dAA = so3([0.0 -0.033973233917519836 0.10037832560799967; 0.033973233917519836 0.0 0.1522739186438416; -0.10037832560799967 -0.1522739186438416 0.0])
dAA = so3([0.0 0.09320164020689484 -0.07452139409601609; -0.09320164020689484 0.0 -0.20675325911321712; 0.07452139409601609 0.20675325911321712 0.0])
dAA = Quaternion(0.9933112344580162, [-0.009775747462199214, 0.03763771439564172, -0.10872271481212922])
dAA = SO3([0.9909606901360507 -0.12050105718570107 -0.05896105343539003; 0.1089937187837048 0.9794270269280368 -0.1698324709488898; 0.07821304156457025 0.1618709181416947 0.983707540882545])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9655308706283979 -0.12883621014123312 0.22616668370918827; 0.03500518637912532 0.9252865474811546 0.37764989338932387; -0.2579239709490583 -0.3567156234409267 0.8979026613185976]), [0.5820301220875315, 0.89777931430341, 2.523301067595476])
xj = SE3(SO3([0.8381666801609923 0.5111991280654975 0.19013697097875557; -0.5234286349871972 0.8519001782640968 0.016986769823589754; -0.1532940975489289 -0.11376087964970749 0.9816106060541442]), [2.067532591132171, -0.7452139409601608, -0.9320164020689483])
Dx = SE3(SO3([0.830491309866531 0.552741121520013 -0.06900316526777828; -0.5376252934816981 0.7629710995645383 -0.3589347364605401; -0.14575056790589883 0.33519002641796736 0.9308084755442606]), [2.267994409802659, -0.47906033958713795, -3.387043812336358])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
     Testing TransformUtils tests passed 
