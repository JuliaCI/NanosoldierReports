Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed VertexSafeGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed FiniteDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.0
   Installed SparsityDetection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed SparseDiffTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.10.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Cassette â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed VoronoiFVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.9
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed Inflate â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.0
   Installed ElasticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.4
   Installed StructArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed FixedPointNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed AbstractTrees â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed ExtendableGrids â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed SimpleTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.3
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed ExtendableSparse â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.9
   Installed EarCut_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.1.5+0
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed IteratorInterfaceExtensions â”€â”€ v1.0.0
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed GeometryBasics â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed ArnoldiMethod â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
   Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
   Installed IterativeSolvers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed LightGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [82b139dc] + VoronoiFVM v0.8.9
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.3.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.13.6
  [7057c7e9] + Cassette v0.3.3
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.22.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.3
  [fdbdab4c] + ElasticArrays v1.2.4
  [cfc395e8] + ExtendableGrids v0.4.1
  [95c220a8] + ExtendableSparse v0.3.1
  [6a86dc24] + FiniteDiff v2.7.0
  [53c48c17] + FixedPointNumbers v0.8.4
  [f6369f11] + ForwardDiff v0.10.12
  [5c1252a2] + GeometryBasics v0.3.3
  [d25df0c9] + Inflate v0.1.2
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.2
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.6
  [77ba4419] + NaNMath v0.3.4
  [bac558e1] + OrderedCollections v1.3.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [699a6c99] + SimpleTraits v0.9.3
  [47a9eef4] + SparseDiffTools v1.10.0
  [684fba80] + SparsityDetection v0.3.3
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [09ab397b] + StructArrays v0.4.4
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.2
  [82b139dc] + VoronoiFVM v0.8.9
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [5ae413db] + EarCut_jll v2.1.5+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mRecipesBase[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mIterTools[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mInflate[39m
[32m  âœ“ [39m[90mAbstractTrees[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mDocStringExtensions[39m
[32m  âœ“ [39m[90mElasticArrays[39m
[32m  âœ“ [39m[90mCassette[39m
[32m  âœ“ [39m[90mExtendableSparse[39m
[32m  âœ“ [39m[90mEarCut_jll[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mIterativeSolvers[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mFixedPointNumbers[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mArnoldiMethod[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mStructArrays[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mSimpleTraits[39m
[32m  âœ“ [39m[90mFiniteDiff[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mColorTypes[39m
[32m  âœ“ [39m[90mGeometryBasics[39m
[32m  âœ“ [39m[90mColors[39m
[32m  âœ“ [39m[90mSparsityDetection[39m
[32m  âœ“ [39m[90mLightGraphs[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mVertexSafeGraphs[39m
[32m  âœ“ [39m[90mExtendableGrids[39m
[32m  âœ“ [39m[90mSparseDiffTools[39m
[32m  âœ“ [39mVoronoiFVM
47 dependencies successfully precompiled
     Testing VoronoiFVM
Status `/tmp/jl_JE69mX/Project.toml`
  [163ba53b] DiffResults v1.0.2
  [ffbed154] DocStringExtensions v0.8.3
  [cfc395e8] ExtendableGrids v0.4.1
  [95c220a8] ExtendableSparse v0.3.1
  [f6369f11] ForwardDiff v0.10.12
  [42fd0dbc] IterativeSolvers v0.8.4
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [82b139dc] VoronoiFVM v0.8.9
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_JE69mX/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.6
  [7057c7e9] Cassette v0.3.3
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.3
  [fdbdab4c] ElasticArrays v1.2.4
  [cfc395e8] ExtendableGrids v0.4.1
  [95c220a8] ExtendableSparse v0.3.1
  [6a86dc24] FiniteDiff v2.7.0
  [53c48c17] FixedPointNumbers v0.8.4
  [f6369f11] ForwardDiff v0.10.12
  [5c1252a2] GeometryBasics v0.3.3
  [d25df0c9] Inflate v0.1.2
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.2
  [093fc24a] LightGraphs v1.3.0
  [1914dd2f] MacroTools v0.5.6
  [77ba4419] NaNMath v0.3.4
  [bac558e1] OrderedCollections v1.3.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [699a6c99] SimpleTraits v0.9.3
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.2
  [82b139dc] VoronoiFVM v0.8.9
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [5ae413db] EarCut_jll v2.1.5+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Directory /home/pkgeval/.julia/packages/VoronoiFVM/S9IQa/test:
  runtests:
  test_prepare_edges:
   compile:  7.285922 seconds (3.49 M allocations: 200.752 MiB, 15.85% gc time, 99.82% compilation time)
       run:  0.000728 seconds (281 allocations: 18.297 KiB)
  xgrid:
226.807211 seconds (10.70 M allocations: 720.075 MiB, 1.57% gc time, 3.94% compilation time)
Directory /home/pkgeval/.julia/packages/VoronoiFVM/S9IQa/test/../examples:
  Example101_Laplace1D:
   compile: 26.476766 seconds (22.13 M allocations: 1.107 GiB, 12.70% gc time, 99.48% compilation time)
       run:  0.001642 seconds (848 allocations: 65.211 KiB)
  Example102_StationaryConvectionDiffusion1D:
   compile: 13.583183 seconds (11.94 M allocations: 681.158 MiB, 4.78% gc time, 99.67% compilation time)
       run:  0.002176 seconds (3.72 k allocations: 241.172 KiB)
  Example105_NonlinearPoisson1D:
   compile: 10.809216 seconds (5.39 M allocations: 303.492 MiB, 6.08% gc time, 96.68% compilation time)
       run:  0.002622 seconds (5.64 k allocations: 358.984 KiB)
  Example106_NonlinearDiffusion1D:
   compile:  8.008162 seconds (4.39 M allocations: 251.555 MiB, 1.69% gc time, 98.71% compilation time)
       run:  0.154769 seconds (521.58 k allocations: 27.058 MiB, 22.86% gc time)
  Example107_NonlinearStorage1D:
   compile:  5.100165 seconds (2.74 M allocations: 149.874 MiB, 1.84% gc time, 97.18% compilation time)
       run:  0.271767 seconds (690.05 k allocations: 35.960 MiB, 6.29% gc time)
  Example110_ReactionDiffusion1D_TwoSpecies:
   compile:  5.435792 seconds (4.37 M allocations: 221.292 MiB, 2.47% gc time, 91.36% compilation time)
       run:  0.406170 seconds (2.07 M allocations: 87.366 MiB, 23.56% gc time)
  Example115_HeterogeneousCatalysis1D:
   compile:  5.968432 seconds (4.64 M allocations: 244.519 MiB, 2.23% gc time, 95.56% compilation time)
       run:  0.122736 seconds (815.77 k allocations: 37.390 MiB)
  Example120_ThreeRegions1D:
   compile:  7.851331 seconds (15.36 M allocations: 678.425 MiB, 6.05% gc time, 71.19% compilation time)
       run:  2.166010 seconds (12.47 M allocations: 511.894 MiB, 4.27% gc time)
  Example121_PoissonPointCharge1D:
   compile:  5.544750 seconds (2.70 M allocations: 159.060 MiB, 2.93% gc time, 98.19% compilation time)
       run:  0.002864 seconds (9.09 k allocations: 479.031 KiB)
  Example125_TestFunctions1D:
   compile: 13.044051 seconds (6.94 M allocations: 387.021 MiB, 5.77% gc time, 97.35% compilation time)
       run:  0.112112 seconds (841.18 k allocations: 33.085 MiB)
  Example150_Impedance1D:
   compile: 43.230853 seconds (17.46 M allocations: 1014.731 MiB, 3.56% gc time, 98.75% compilation time)
       run:  0.009389 seconds (30.72 k allocations: 7.033 MiB)
  Example160_UnipolarDriftDiffusion1D:
   compile: 10.748153 seconds (6.81 M allocations: 349.411 MiB, 4.49% gc time, 91.36% compilation time)
       run:  0.646411 seconds (3.43 M allocations: 162.691 MiB, 7.43% gc time)
  Example203_CoordinateSystems:
   compile:  5.961316 seconds (3.28 M allocations: 163.072 MiB, 1.90% gc time, 98.92% compilation time)
       run:  0.127743 seconds (868.50 k allocations: 19.158 MiB, 39.47% gc time)
  Example205_NonlinearPoisson2D:
   compile: 13.763175 seconds (18.09 M allocations: 632.347 MiB, 18.50% gc time, 70.82% compilation time)
       run:  1.885826 seconds (11.93 M allocations: 293.000 MiB, 3.74% gc time)
  Example210_NonlinearPoisson2D_Reaction:
   compile:  5.341615 seconds (16.55 M allocations: 538.999 MiB, 4.06% gc time, 62.73% compilation time)
       run:  2.163294 seconds (14.82 M allocations: 435.349 MiB, 3.34% gc time)
  Example215_NonlinearPoisson2D_BoundaryReaction:
   compile:  5.726889 seconds (16.69 M allocations: 504.958 MiB, 5.62% gc time, 67.66% compilation time)
       run:  1.716429 seconds (14.96 M allocations: 401.269 MiB, 4.69% gc time)
  Example220_NonlinearPoisson2D_BoundarySpecies:
   compile:  7.217128 seconds (25.42 M allocations: 798.327 MiB, 5.21% gc time, 67.51% compilation time)
       run:  2.072816 seconds (22.52 M allocations: 622.275 MiB, 7.63% gc time)
  Example405_GenericOperator:
   compile:Error During Test at /home/pkgeval/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:23
  Test threw exception
  Expression: eval(Meta.parse("Example405_GenericOperator.test()"))
  type #getproperty has no field generic_operator
  Stacktrace:
    [1] tagged_getfield
      @ ~/.julia/packages/Cassette/158rp/src/tagging.jl:610 [inlined]
    [2] tagged_getfield(context::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, x::Function, name::Symbol)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/tagging.jl:608
    [3] overdub
      @ ~/.julia/packages/Cassette/158rp/src/context.jl:289 [inlined]
    [4] recurse
      @ ./Base.jl:33 [inlined]
    [5] recurse(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::typeof(getproperty), ::typeof(getproperty), ::Symbol)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] overdub
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:58 [inlined]
    [7] recurse
      @ ~/.julia/packages/VoronoiFVM/S9IQa/src/vfvm_abstractsystem.jl:167 [inlined]
    [8] recurse(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::VoronoiFVM.var"#generic_operator#5"{VoronoiFVM.SparseSystem{Float64, Int32, Int32}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [9] overdub(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:45
   [10] overdub(ctx::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, #unused#::typeof(Core._apply_iterate), iter::Function, f::Function, args::Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}})
      @ SparsityDetection ~/.julia/packages/Cassette/158rp/src/context.jl:266
   [11] recurse
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148 [inlined]
   [12] recurse(overdub_context#249::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, SparsityDetection.var"##PassType#249", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, overdub_arguments#250::SparsityDetection.var"#2#3"{VoronoiFVM.var"#generic_operator#5"{VoronoiFVM.SparseSystem{Float64, Int32, Int32}}, Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [13] abstract_run(::SparsityDetection.var"#22#24", ::Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000e4ba8306, Nothing}, Cassette.var"##PassType#251", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Vararg{Any, N} where N; verbose::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148
   [14] jacobian_sparsity(::Function, ::Vector{Float64}, ::Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}; sparsity::SparsityDetection.Sparsity, verbose::Bool, raw::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:135
   [15] jacobian_sparsity
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:130 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/VoronoiFVM/S9IQa/src/vfvm_abstractsystem.jl:172 [inlined]
   [17] macro expansion
      @ ./timing.jl:266 [inlined]
   [18] _complete!(this::VoronoiFVM.SparseSystem{Float64, Int32, Int32}; create_newtonvectors::Bool)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/S9IQa/src/vfvm_abstractsystem.jl:171
   [19] _solve!(solution::VoronoiFVM.SparseSolutionArray{Float64, Int32}, oldsol::VoronoiFVM.SparseSolutionArray{Float64, Int32}, this::VoronoiFVM.SparseSystem{Float64, Int32, Int32}, control::VoronoiFVM.NewtonControl, tstep::Float64)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/S9IQa/src/vfvm_solver.jl:89
   [20] solve!(solution::VoronoiFVM.SparseSolutionArray{Float64, Int32}, inival::VoronoiFVM.SparseSolutionArray{Float64, Int32}, this::VoronoiFVM.SparseSystem{Float64, Int32, Int32}; control::VoronoiFVM.NewtonControl, tstep::Float64)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/S9IQa/src/vfvm_solver.jl:671
   [21] main(; n::Int64, Plotter::Nothing, verbose::Bool, unknown_storage::Symbol)
      @ Main.Example405_GenericOperator ~/.julia/packages/VoronoiFVM/S9IQa/examples/Example405_GenericOperator.jl:98
   [22] test()
      @ Main.Example405_GenericOperator ~/.julia/packages/VoronoiFVM/S9IQa/examples/Example405_GenericOperator.jl:112
   [23] top-level scope
      @ none:1
   [24] eval
      @ ./boot.jl:360 [inlined]
   [25] eval(x::Expr)
      @ Base.MainInclude ./client.jl:446
   [26] macro expansion
      @ ./timing.jl:192 [inlined]
   [27] top-level scope
      @ ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:23
   [28] eval
      @ ./boot.jl:360 [inlined]
   [29] macro expansion
      @ ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:19 [inlined]
   [30] macro expansion
      @ ./timing.jl:192 [inlined]
   [31] run_tests_from_directory(testdir::String, prefix::String)
      @ Main ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:13
   [32] macro expansion
      @ ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:37 [inlined]
   [33] macro expansion
      @ ./timing.jl:192 [inlined]
   [34] run_all_tests()
      @ Main ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:35
   [35] top-level scope
      @ ~/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:41
   [36] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [37] top-level scope
      @ none:6
   [38] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [39] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [40] _start()
      @ Base ./client.jl:485
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/VoronoiFVM/S9IQa/test/runtests.jl:41
ERROR: Package VoronoiFVM errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1650
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:31
