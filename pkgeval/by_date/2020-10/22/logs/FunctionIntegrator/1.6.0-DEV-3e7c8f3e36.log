Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_AM0OSW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_AM0OSW/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.164966 seconds (293.30 k allocations: 13.821 MiB, 91.92% compilation time)
Running: chebyshev_quadrature with k=1
  1.300973 seconds (2.25 M allocations: 130.533 MiB, 2.66% gc time, 97.60% compilation time)
Running: chebyshev_quadrature with k=2
  0.413460 seconds (417.67 k allocations: 24.213 MiB, 3.42% gc time, 92.64% compilation time)
Running: chebyshev_quadrature with k=3
  0.317660 seconds (483.51 k allocations: 27.371 MiB, 87.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.566712 seconds (427.02 k allocations: 23.936 MiB, 19.56% gc time, 96.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 38.398981 seconds (35.47 M allocations: 2.979 GiB, 13.75% gc time, 80.89% compilation time)
Running: laguerre_quadrature with k=1
  2.449198 seconds (3.24 M allocations: 182.226 MiB, 2.55% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.301008 seconds (211.39 k allocations: 12.234 MiB, 29.47% gc time, 97.43% compilation time)
Running: lobatto_quadrature
  0.261802 seconds (339.91 k allocations: 20.651 MiB, 99.29% compilation time)
Running: radau_quadrature
  0.302586 seconds (462.91 k allocations: 28.391 MiB, 8.30% gc time, 99.39% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 42.177276 seconds (100.02 M allocations: 1.491 GiB, 0.60% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.089597 seconds (173.35 k allocations: 3.888 MiB, 22.25% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 41.040177 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time, 0.05% compilation time)
Running: rombergs_method
  0.422248 seconds (741.31 k allocations: 43.127 MiB, 4.27% gc time, 99.36% compilation time)
Running: simpsons_rule
  0.289967 seconds (48.05 k allocations: 2.634 MiB, 99.26% compilation time)
Running: simpsons38_rule
  0.087307 seconds (111.41 k allocations: 5.954 MiB, 97.78% compilation time)
Running: trapezoidal_rule
  0.277869 seconds (1.72 M allocations: 28.728 MiB, 20.68% gc time, 17.51% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.226082 seconds (30.71 k allocations: 1.830 MiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=1
  0.494116 seconds (295.50 k allocations: 15.737 MiB, 99.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.119723 seconds (94.22 k allocations: 2.707 MiB, 97.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.236956 seconds (82.47 k allocations: 2.508 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.125970 seconds (65.08 k allocations: 2.154 MiB, 98.66% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.680696 seconds (510.48 k allocations: 162.263 MiB, 9.25% gc time, 29.46% compilation time)
Running: legendre_quadrature
  0.157227 seconds (42.06 k allocations: 2.438 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.010785 seconds (16.04 k allocations: 1021.528 KiB, 98.91% compilation time)
Running: radau_quadrature
  0.010706 seconds (16.15 k allocations: 1.005 MiB, 99.02% compilation time)
Running: rectangle_rule_left
 12.308011 seconds (471.41 M allocations: 7.025 GiB, 7.18% gc time)
Running: rectangle_rule_midpoint
  0.000010 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.815105 seconds (476.96 M allocations: 7.107 GiB, 8.13% gc time)
Running: rombergs_method
  0.292791 seconds (334.19 k allocations: 19.145 MiB, 6.46% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.096724 seconds (19.42 k allocations: 1.184 MiB, 99.90% compilation time)
Running: trapezoidal_rule
  0.096298 seconds (16.96 k allocations: 1.034 MiB, 99.89% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015558 seconds (1.03 k allocations: 34.125 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.114439 seconds (2.46 k allocations: 116.359 KiB, 74.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.096041 seconds (2.71 k allocations: 124.266 KiB, 99.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.107241 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.100214 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.222751 seconds (369.35 k allocations: 19.504 MiB, 99.13% compilation time)
Running: legendre_quadrature
  0.044076 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000029 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000167 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000118 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000168 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.056435 seconds (1.04 k allocations: 56.469 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000018 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023191 seconds (923 allocations: 39.281 KiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.020281 seconds (44.29 k allocations: 702.859 KiB, 91.72% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063640 seconds (83.49 k allocations: 5.002 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.124297 seconds (235.65 k allocations: 13.389 MiB, 98.71% compilation time)
Running: chebyshev_quadrature with k=2
  0.214289 seconds (289.14 k allocations: 16.397 MiB, 98.71% compilation time)
Running: chebyshev_quadrature with k=3
  0.225022 seconds (239.80 k allocations: 13.552 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.215610 seconds (239.80 k allocations: 13.487 MiB, 13.69% gc time, 99.28% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.995265 seconds (454.96 k allocations: 163.917 MiB, 9.86% gc time, 26.55% compilation time)
Running: legendre_quadrature
  0.117872 seconds (190.36 k allocations: 11.084 MiB, 98.51% compilation time)
Running: lobatto_quadrature
  0.286874 seconds (201.88 k allocations: 11.810 MiB, 99.39% compilation time)
Running: radau_quadrature
  0.202283 seconds (201.88 k allocations: 11.808 MiB, 98.72% compilation time)
Running: rectangle_rule_left
  0.549688 seconds (19.37 k allocations: 1.189 MiB, 4.38% compilation time)
Running: rectangle_rule_midpoint
  0.013305 seconds (25.55 k allocations: 1.616 MiB, 99.12% compilation time)
Running: rectangle_rule_right
  0.553472 seconds (17.90 k allocations: 1.099 MiB, 2.85% compilation time)
Running: rombergs_method
  0.190589 seconds (137.77 k allocations: 8.025 MiB, 9.10% gc time, 98.68% compilation time)
Running: simpsons_rule
  0.022019 seconds (37.98 k allocations: 2.442 MiB, 99.32% compilation time)
Running: simpsons38_rule
  0.031859 seconds (43.94 k allocations: 2.785 MiB, 99.48% compilation time)
Running: trapezoidal_rule
  0.017381 seconds (43.20 k allocations: 1.730 MiB, 95.90% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.064343 seconds (68.44 k allocations: 3.060 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.144387 seconds (242.24 k allocations: 13.474 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.199632 seconds (296.17 k allocations: 16.388 MiB, 9.26% gc time, 98.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.242527 seconds (246.37 k allocations: 13.522 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.127367 seconds (246.37 k allocations: 13.524 MiB, 98.87% compilation time)
Running: hermite_quadrature with k=2
 18.465524 seconds (20.49 M allocations: 1.088 GiB, 14.12% gc time, 99.87% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.119832 seconds (464.13 k allocations: 50.102 MiB, 32.15% gc time, 94.89% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.602122 seconds (282.35 k allocations: 15.789 MiB, 87.55% compilation time)
Running: legendre_quadrature
  0.191625 seconds (196.90 k allocations: 11.413 MiB, 99.19% compilation time)
Running: lobatto_quadrature
  0.255068 seconds (222.54 k allocations: 37.584 MiB, 11.24% gc time, 66.97% compilation time)
Running: radau_quadrature
  0.227943 seconds (219.12 k allocations: 30.267 MiB, 41.97% gc time, 48.44% compilation time)
Running: rectangle_rule_left
  0.096212 seconds (22.28 k allocations: 1.333 MiB, 99.90% compilation time)
Running: rectangle_rule_midpoint
  0.017664 seconds (27.36 k allocations: 1.703 MiB, 99.31% compilation time)
Running: rectangle_rule_right
  0.013912 seconds (19.02 k allocations: 1.153 MiB, 99.14% compilation time)
Running: rombergs_method
  0.163239 seconds (140.11 k allocations: 8.068 MiB, 98.87% compilation time)
Running: simpsons_rule
  0.025205 seconds (45.46 k allocations: 2.710 MiB, 99.04% compilation time)
Running: simpsons38_rule
  0.118189 seconds (58.91 k allocations: 3.170 MiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.044838 seconds (29.23 k allocations: 1.655 MiB, 99.35% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.105801 seconds (52.41 k allocations: 2.720 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.319052 seconds (237.76 k allocations: 13.244 MiB, 8.95% gc time, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.242102 seconds (291.35 k allocations: 16.171 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.220499 seconds (241.90 k allocations: 13.330 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.254223 seconds (241.91 k allocations: 13.331 MiB, 7.63% gc time, 97.43% compilation time)
Running: hermite_quadrature with k=2
  0.231990 seconds (175.13 k allocations: 10.126 MiB, 84.34% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  8.114384 seconds (457.40 k allocations: 1.175 GiB, 37.04% gc time, 6.06% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.153456 seconds (277.64 k allocations: 15.553 MiB, 97.87% compilation time)
Running: legendre_quadrature
  0.094535 seconds (192.47 k allocations: 11.190 MiB, 98.44% compilation time)
Running: lobatto_quadrature
  0.174777 seconds (213.30 k allocations: 23.315 MiB, 5.72% gc time, 88.07% compilation time)
Running: radau_quadrature
  0.147137 seconds (212.45 k allocations: 21.243 MiB, 92.28% compilation time)
Running: rectangle_rule_left
  0.062155 seconds (20.07 k allocations: 1.228 MiB, 57.83% gc time, 99.78% compilation time)
Running: rectangle_rule_midpoint
  0.023284 seconds (26.25 k allocations: 1.652 MiB, 99.39% compilation time)
Running: rectangle_rule_right
  0.017560 seconds (17.88 k allocations: 1.099 MiB, 99.26% compilation time)
Running: rombergs_method
  0.198029 seconds (135.95 k allocations: 7.880 MiB, 98.83% compilation time)
Running: simpsons_rule
  0.071719 seconds (40.80 k allocations: 2.541 MiB, 77.81% compilation time)
Running: simpsons38_rule
  0.029520 seconds (49.73 k allocations: 2.931 MiB, 99.04% compilation time)
Running: trapezoidal_rule
  0.026507 seconds (24.14 k allocations: 1.492 MiB, 99.11% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.077615 seconds (40.61 k allocations: 2.580 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.134631 seconds (236.14 k allocations: 13.462 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.183106 seconds (289.64 k allocations: 16.550 MiB, 6.92% gc time, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.170939 seconds (240.28 k allocations: 13.548 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.206683 seconds (240.28 k allocations: 13.373 MiB, 96.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.587309 seconds (455.50 k allocations: 194.951 MiB, 3.50% gc time, 30.43% compilation time)
Running: legendre_quadrature
  0.167620 seconds (190.86 k allocations: 11.114 MiB, 98.66% compilation time)
Running: lobatto_quadrature
  0.157459 seconds (202.38 k allocations: 11.832 MiB, 98.46% compilation time)
Running: radau_quadrature
  0.220779 seconds (202.38 k allocations: 11.838 MiB, 98.92% compilation time)
Running: rectangle_rule_left
  0.323801 seconds (19.89 k allocations: 1.214 MiB, 7.44% compilation time)
Running: rectangle_rule_midpoint
  0.244581 seconds (25.89 k allocations: 1.634 MiB, 19.95% gc time, 99.92% compilation time)
Running: rectangle_rule_right
  0.174878 seconds (18.25 k allocations: 1.118 MiB, 12.25% compilation time)
Running: rombergs_method
  0.391326 seconds (149.07 k allocations: 8.790 MiB, 99.00% compilation time)
Running: simpsons_rule
  0.020810 seconds (38.61 k allocations: 2.470 MiB, 99.27% compilation time)
Running: simpsons38_rule
  0.018974 seconds (44.65 k allocations: 2.815 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.010909 seconds (44.13 k allocations: 1.763 MiB, 96.60% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.088074 seconds (40.35 k allocations: 2.510 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.144802 seconds (236.73 k allocations: 13.418 MiB, 98.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.233443 seconds (290.27 k allocations: 16.394 MiB, 11.93% gc time, 98.99% compilation time)
Running: chebyshev_quadrature with k=3
  0.182725 seconds (240.88 k allocations: 13.468 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.193556 seconds (240.87 k allocations: 13.545 MiB, 98.65% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.102152 seconds (456.21 k allocations: 149.630 MiB, 11.50% gc time, 24.79% compilation time)
Running: legendre_quadrature
  0.113837 seconds (191.45 k allocations: 11.141 MiB, 98.30% compilation time)
Running: lobatto_quadrature
  0.148785 seconds (202.98 k allocations: 11.859 MiB, 98.15% compilation time)
Running: radau_quadrature
  0.384001 seconds (202.97 k allocations: 11.853 MiB, 99.37% compilation time)
Running: rectangle_rule_left
  0.694017 seconds (20.14 k allocations: 1.227 MiB, 8.13% compilation time)
Running: rectangle_rule_midpoint
  0.153774 seconds (25.89 k allocations: 1.635 MiB, 29.26% gc time, 79.71% compilation time)
Running: rectangle_rule_right
  0.645598 seconds (18.20 k allocations: 1.115 MiB, 3.12% compilation time)
Running: rombergs_method
  0.290385 seconds (138.99 k allocations: 8.082 MiB, 98.65% compilation time)
Running: simpsons_rule
  0.023248 seconds (39.09 k allocations: 2.489 MiB, 99.30% compilation time)
Running: simpsons38_rule
  0.023123 seconds (45.35 k allocations: 2.842 MiB, 99.22% compilation time)
Running: trapezoidal_rule
  0.016333 seconds (56.28 k allocations: 1.959 MiB, 94.61% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.185705 seconds (152.11 k allocations: 9.115 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.187100 seconds (70.34 k allocations: 2.237 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.185655 seconds (105.50 k allocations: 2.900 MiB, 98.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.156365 seconds (92.98 k allocations: 2.686 MiB, 97.68% compilation time)
Running: chebyshev_quadrature with k=4
  0.143573 seconds (72.52 k allocations: 2.280 MiB, 98.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.630523 seconds (485.55 k allocations: 168.155 MiB, 9.33% gc time, 33.39% compilation time)
Running: legendre_quadrature
  0.112872 seconds (19.14 k allocations: 1.125 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000184 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000121 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.577123 seconds (590.00 M allocations: 8.792 GiB, 6.86% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.208348 seconds (592.75 M allocations: 8.833 GiB, 6.25% gc time)
Running: rombergs_method
  0.103717 seconds (20.91 k allocations: 1.198 MiB, 99.45% compilation time)
Running: simpsons_rule
  0.000070 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027157 seconds (463 allocations: 22.578 KiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.018934 seconds (171 allocations: 7.859 KiB, 99.32% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.130640 seconds (209.94 M allocations: 3.138 GiB, 2.22% gc time, 0.60% compilation time)
Running: chebyshev_quadrature with k=1
  1.267977 seconds (422.86 k allocations: 23.669 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=2
 19.596458 seconds (478.42 k allocations: 4.041 GiB, 16.62% gc time, 2.29% compilation time)
Running: chebyshev_quadrature with k=3
  7.293586 seconds (254.26 k allocations: 1.642 GiB, 4.35% gc time, 2.74% compilation time)
Running: chebyshev_quadrature with k=4
  9.836836 seconds (254.25 k allocations: 2.261 GiB, 1.88% gc time, 1.80% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.259650 seconds (492.92 k allocations: 13.255 GiB, 12.33% gc time, 2.28% compilation time)
Running: legendre_quadrature.
  9.340264 seconds (228.78 k allocations: 1.976 GiB, 7.42% gc time, 3.63% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.552680 seconds (8.24 M allocations: 13.384 GiB, 27.97% gc time, 1.08% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.393398 seconds (7.24 M allocations: 13.369 GiB, 20.30% gc time, 3.18% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.311163 seconds (22.88 k allocations: 1.394 MiB, 0.39% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.080567 seconds (31.46 k allocations: 1.956 MiB, 0.95% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.314640 seconds (23.09 k allocations: 1.403 MiB, 0.33% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.790220 seconds (448.55 k allocations: 153.505 MiB, 2.06% gc time, 12.21% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.710476 seconds (200.04 M allocations: 2.983 GiB, 2.36% gc time, 0.29% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.896906 seconds (600.05 M allocations: 8.944 GiB, 6.20% gc time, 0.38% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.647541 seconds (600.03 M allocations: 8.943 GiB, 4.19% gc time, 0.18% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.155175 seconds (111.10 k allocations: 4.245 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.259201 seconds (252.71 k allocations: 13.877 MiB, 98.40% compilation time)
Running: chebyshev_quadrature with k=2
  0.353064 seconds (277.26 k allocations: 14.968 MiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.368854 seconds (224.24 k allocations: 11.996 MiB, 30.73% gc time, 99.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.221400 seconds (224.24 k allocations: 11.976 MiB, 99.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.526479 seconds (394.79 k allocations: 35.537 MiB, 97.06% compilation time)
Running: laguerre_quadrature with k=2
  0.340784 seconds (185.19 k allocations: 10.845 MiB, 90.11% compilation time)
Running: legendre_quadrature
  0.138188 seconds (149.17 k allocations: 8.338 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.014316 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.013983 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.056926 seconds (19.35 k allocations: 1.157 MiB, 71.63% compilation time)
Running: rectangle_rule_midpoint
  0.023532 seconds (26.33 k allocations: 1.636 MiB, 76.01% compilation time)
Running: rectangle_rule_right
  0.034414 seconds (17.96 k allocations: 1.084 MiB, 51.94% compilation time)
Running: rombergs_method
  0.200821 seconds (176.58 k allocations: 10.195 MiB, 96.08% compilation time)
Running: simpsons_rule
  0.000452 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.035639 seconds (80.36 k allocations: 3.491 MiB, 98.08% compilation time)
Running: trapezoidal_rule
  0.092391 seconds (2.39 M allocations: 37.744 MiB, 29.85% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000693 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.126417 seconds (2.46 k allocations: 1.691 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.100500 seconds (2.71 k allocations: 2.355 MiB, 97.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.115599 seconds (2.31 k allocations: 2.028 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.094915 seconds (2.31 k allocations: 1.469 MiB, 98.12% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.649793 seconds (371.63 k allocations: 905.356 MiB, 7.14% gc time, 10.75% compilation time)
Running: legendre_quadrature
  0.044118 seconds (1.27 k allocations: 68.203 KiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000138 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000097 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.417171 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000315 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.249687 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.067663 seconds (993 allocations: 56.609 KiB, 99.41% compilation time)
Running: simpsons_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000030 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000880 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000250 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.108281 seconds (2.53 k allocations: 579.203 KiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.101381 seconds (2.79 k allocations: 780.188 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.076862 seconds (2.39 k allocations: 661.047 KiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.160935 seconds (2.39 k allocations: 491.547 KiB, 99.65% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.825712 seconds (378.19 k allocations: 253.437 MiB, 18.12% compilation time)
Running: legendre_quadrature
  0.071417 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.151116 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000132 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.152952 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.111168 seconds (1.21 k allocations: 64.875 KiB, 99.62% compilation time)
Running: simpsons_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000441 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
