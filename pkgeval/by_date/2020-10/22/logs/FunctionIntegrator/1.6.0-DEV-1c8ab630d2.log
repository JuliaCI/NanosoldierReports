Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_nQzTaY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_nQzTaY/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.247449 seconds (293.32 k allocations: 13.822 MiB, 14.90% gc time, 91.19% compilation time)
Running: chebyshev_quadrature with k=1
  1.560105 seconds (2.25 M allocations: 130.534 MiB, 5.10% gc time, 98.59% compilation time)
Running: chebyshev_quadrature with k=2
  0.207108 seconds (417.67 k allocations: 24.215 MiB, 84.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.395497 seconds (483.50 k allocations: 27.370 MiB, 35.87% gc time, 56.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.411552 seconds (427.02 k allocations: 23.934 MiB, 39.48% gc time, 96.37% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 35.865348 seconds (35.47 M allocations: 2.979 GiB, 14.63% gc time, 81.46% compilation time)
Running: laguerre_quadrature with k=1
  2.521486 seconds (3.24 M allocations: 182.149 MiB, 10.68% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.170592 seconds (211.55 k allocations: 12.246 MiB, 99.12% compilation time)
Running: lobatto_quadrature
  0.334572 seconds (340.05 k allocations: 20.664 MiB, 6.13% gc time, 99.37% compilation time)
Running: radau_quadrature
  0.280821 seconds (462.74 k allocations: 28.388 MiB, 99.32% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.083721 seconds (100.02 M allocations: 1.491 GiB, 0.61% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.295402 seconds (173.35 k allocations: 3.888 MiB, 78.37% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 43.368085 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.09% compilation time)
Running: rombergs_method
  0.420227 seconds (741.47 k allocations: 43.144 MiB, 4.10% gc time, 99.53% compilation time)
Running: simpsons_rule
  0.030857 seconds (48.05 k allocations: 2.634 MiB, 94.77% compilation time)
Running: simpsons38_rule
  0.111681 seconds (111.42 k allocations: 5.954 MiB, 13.27% gc time, 98.04% compilation time)
Running: trapezoidal_rule
  0.237067 seconds (1.72 M allocations: 28.729 MiB, 24.09% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.143020 seconds (30.72 k allocations: 1.831 MiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.654437 seconds (297.68 k allocations: 15.856 MiB, 4.09% gc time, 99.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.188011 seconds (94.22 k allocations: 2.707 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.191242 seconds (82.47 k allocations: 2.508 MiB, 92.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.147756 seconds (65.08 k allocations: 2.154 MiB, 98.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.979858 seconds (510.63 k allocations: 162.277 MiB, 3.03% gc time, 25.68% compilation time)
Running: legendre_quadrature
  0.184426 seconds (42.23 k allocations: 2.451 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.026315 seconds (16.20 k allocations: 1.010 MiB, 99.39% compilation time)
Running: radau_quadrature
  0.019175 seconds (16.31 k allocations: 1.017 MiB, 98.93% compilation time)
Running: rectangle_rule_left
 11.861857 seconds (471.41 M allocations: 7.025 GiB, 6.28% gc time)
Running: rectangle_rule_midpoint
  0.000010 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.478392 seconds (476.96 M allocations: 7.107 GiB, 6.40% gc time)
Running: rombergs_method
  0.513934 seconds (334.36 k allocations: 19.158 MiB, 99.93% compilation time)
Running: simpsons_rule
  0.000017 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.057428 seconds (19.43 k allocations: 1.184 MiB, 99.85% compilation time)
Running: trapezoidal_rule
  0.044316 seconds (16.97 k allocations: 1.034 MiB, 99.81% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015284 seconds (1.03 k allocations: 34.125 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=1
  0.124998 seconds (2.46 k allocations: 116.359 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.176034 seconds (2.71 k allocations: 124.266 KiB, 99.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.104306 seconds (2.31 k allocations: 109.297 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.090087 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.278736 seconds (369.33 k allocations: 19.504 MiB, 12.38% gc time, 99.38% compilation time)
Running: legendre_quadrature
  0.064883 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000301 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000143 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000198 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.078928 seconds (1.04 k allocations: 56.469 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000027 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.026972 seconds (923 allocations: 39.281 KiB, 99.75% compilation time)
Running: trapezoidal_rule
  0.021469 seconds (44.29 k allocations: 702.859 KiB, 92.53% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.116843 seconds (83.49 k allocations: 5.002 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.249495 seconds (235.65 k allocations: 13.387 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.592133 seconds (289.14 k allocations: 16.397 MiB, 14.85% gc time, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.533082 seconds (239.80 k allocations: 13.536 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.483377 seconds (239.80 k allocations: 13.470 MiB, 99.57% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.354549 seconds (454.94 k allocations: 163.900 MiB, 30.07% gc time, 22.53% compilation time)
Running: legendre_quadrature
  0.100813 seconds (190.36 k allocations: 11.086 MiB, 98.75% compilation time)
Running: lobatto_quadrature
  0.215857 seconds (201.88 k allocations: 11.842 MiB, 7.73% gc time, 99.45% compilation time)
Running: radau_quadrature
  0.183034 seconds (201.87 k allocations: 11.807 MiB, 98.99% compilation time)
Running: rectangle_rule_left
  0.536196 seconds (19.37 k allocations: 1.189 MiB, 3.65% compilation time)
Running: rectangle_rule_midpoint
  0.019471 seconds (25.55 k allocations: 1.616 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.468458 seconds (17.90 k allocations: 1.099 MiB, 5.20% compilation time)
Running: rombergs_method
  0.123323 seconds (137.77 k allocations: 8.030 MiB, 98.14% compilation time)
Running: simpsons_rule
  0.029418 seconds (37.98 k allocations: 2.442 MiB, 99.29% compilation time)
Running: simpsons38_rule
  0.031376 seconds (43.94 k allocations: 2.785 MiB, 99.14% compilation time)
Running: trapezoidal_rule
  0.013834 seconds (43.20 k allocations: 1.730 MiB, 96.67% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025074 seconds (68.44 k allocations: 3.060 MiB, 96.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.175000 seconds (242.24 k allocations: 13.474 MiB, 6.19% gc time, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.171233 seconds (296.17 k allocations: 16.372 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.157183 seconds (246.37 k allocations: 13.522 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.168831 seconds (246.37 k allocations: 13.536 MiB, 8.87% gc time, 98.95% compilation time)
Running: hermite_quadrature with k=2
 19.319540 seconds (20.49 M allocations: 1.088 GiB, 10.66% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.714930 seconds (464.12 k allocations: 50.105 MiB, 4.85% gc time, 88.75% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.445504 seconds (282.35 k allocations: 15.790 MiB, 4.09% gc time, 99.24% compilation time)
Running: legendre_quadrature
  0.261066 seconds (196.90 k allocations: 11.413 MiB, 99.20% compilation time)
Running: lobatto_quadrature
  0.233408 seconds (222.53 k allocations: 37.584 MiB, 9.51% gc time, 88.79% compilation time)
Running: radau_quadrature
  0.332404 seconds (219.12 k allocations: 30.267 MiB, 94.31% compilation time)
Running: rectangle_rule_left
  0.025078 seconds (22.28 k allocations: 1.333 MiB, 99.51% compilation time)
Running: rectangle_rule_midpoint
  0.036787 seconds (27.36 k allocations: 1.703 MiB, 99.63% compilation time)
Running: rectangle_rule_right
  0.025121 seconds (19.02 k allocations: 1.153 MiB, 99.44% compilation time)
Running: rombergs_method
  0.264461 seconds (140.11 k allocations: 8.068 MiB, 99.15% compilation time)
Running: simpsons_rule
  0.092897 seconds (45.46 k allocations: 2.710 MiB, 99.66% compilation time)
Running: simpsons38_rule
  0.076123 seconds (58.91 k allocations: 3.170 MiB, 47.30% gc time, 99.46% compilation time)
Running: trapezoidal_rule
  0.026450 seconds (29.23 k allocations: 1.655 MiB, 98.91% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.193546 seconds (52.41 k allocations: 2.720 MiB, 99.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.235645 seconds (237.76 k allocations: 13.243 MiB, 68.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.266630 seconds (291.35 k allocations: 16.171 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.234328 seconds (241.91 k allocations: 13.331 MiB, 11.15% gc time, 99.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.339848 seconds (241.91 k allocations: 13.331 MiB, 99.37% compilation time)
Running: hermite_quadrature with k=2
  0.121518 seconds (175.13 k allocations: 10.126 MiB, 98.25% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  8.964080 seconds (457.38 k allocations: 1.175 GiB, 36.58% gc time, 5.02% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.578238 seconds (277.64 k allocations: 15.553 MiB, 99.40% compilation time)
Running: legendre_quadrature
  0.204824 seconds (192.47 k allocations: 11.190 MiB, 98.98% compilation time)
Running: lobatto_quadrature
  0.303515 seconds (213.29 k allocations: 23.311 MiB, 3.81% gc time, 92.30% compilation time)
Running: radau_quadrature
  0.164135 seconds (212.45 k allocations: 21.258 MiB, 92.54% compilation time)
Running: rectangle_rule_left
  0.020861 seconds (20.07 k allocations: 1.228 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.018829 seconds (26.25 k allocations: 1.652 MiB, 99.41% compilation time)
Running: rectangle_rule_right
  0.018232 seconds (17.88 k allocations: 1.099 MiB, 99.31% compilation time)
Running: rombergs_method
  0.108598 seconds (135.95 k allocations: 7.879 MiB, 14.63% gc time, 97.85% compilation time)
Running: simpsons_rule
  0.195803 seconds (40.80 k allocations: 2.541 MiB, 99.89% compilation time)
Running: simpsons38_rule
  0.358554 seconds (49.73 k allocations: 2.931 MiB, 99.92% compilation time)
Running: trapezoidal_rule
  0.018233 seconds (24.14 k allocations: 1.492 MiB, 97.37% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048413 seconds (40.61 k allocations: 2.580 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.158428 seconds (236.14 k allocations: 13.462 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.279929 seconds (289.64 k allocations: 16.487 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.567095 seconds (240.28 k allocations: 13.548 MiB, 2.78% gc time, 99.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.463358 seconds (240.28 k allocations: 13.373 MiB, 95.11% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.293143 seconds (455.48 k allocations: 194.946 MiB, 8.07% gc time, 21.46% compilation time)
Running: legendre_quadrature
  0.394637 seconds (190.86 k allocations: 11.114 MiB, 99.45% compilation time)
Running: lobatto_quadrature
  0.158518 seconds (202.37 k allocations: 11.832 MiB, 98.58% compilation time)
Running: radau_quadrature
  0.215206 seconds (202.37 k allocations: 11.838 MiB, 98.97% compilation time)
Running: rectangle_rule_left
  0.340859 seconds (19.89 k allocations: 1.214 MiB, 9.38% compilation time)
Running: rectangle_rule_midpoint
  0.018781 seconds (25.89 k allocations: 1.634 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.140250 seconds (18.25 k allocations: 1.118 MiB, 13.13% compilation time)
Running: rombergs_method
  0.244223 seconds (149.07 k allocations: 8.791 MiB, 4.64% gc time, 98.59% compilation time)
Running: simpsons_rule
  0.024940 seconds (38.61 k allocations: 2.470 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.044043 seconds (44.65 k allocations: 2.815 MiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.034743 seconds (44.13 k allocations: 1.763 MiB, 98.73% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.023409 seconds (40.35 k allocations: 2.510 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=1
  0.176832 seconds (236.73 k allocations: 13.422 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.405223 seconds (290.27 k allocations: 16.392 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=3
  0.256063 seconds (240.88 k allocations: 13.468 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.181980 seconds (240.87 k allocations: 13.545 MiB, 98.59% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.809700 seconds (456.19 k allocations: 149.629 MiB, 14.60% gc time, 26.62% compilation time)
Running: legendre_quadrature
  0.130250 seconds (191.45 k allocations: 11.126 MiB, 98.12% compilation time)
Running: lobatto_quadrature
  0.173708 seconds (202.97 k allocations: 11.859 MiB, 98.69% compilation time)
Running: radau_quadrature
  0.190573 seconds (202.97 k allocations: 11.852 MiB, 98.70% compilation time)
Running: rectangle_rule_left
  0.682506 seconds (20.14 k allocations: 1.227 MiB, 3.89% compilation time)
Running: rectangle_rule_midpoint
  0.022039 seconds (25.89 k allocations: 1.635 MiB, 99.09% compilation time)
Running: rectangle_rule_right
  0.652509 seconds (18.20 k allocations: 1.115 MiB, 3.73% compilation time)
Running: rombergs_method
  0.167130 seconds (138.99 k allocations: 8.082 MiB, 9.55% gc time, 97.84% compilation time)
Running: simpsons_rule
  0.014746 seconds (39.09 k allocations: 2.489 MiB, 99.00% compilation time)
Running: simpsons38_rule
  0.028129 seconds (45.35 k allocations: 2.842 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.021258 seconds (56.28 k allocations: 1.959 MiB, 95.42% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.124300 seconds (152.12 k allocations: 9.116 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.198908 seconds (70.34 k allocations: 2.237 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.149167 seconds (105.50 k allocations: 2.900 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=3
  0.134418 seconds (92.98 k allocations: 2.686 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.124148 seconds (72.52 k allocations: 2.280 MiB, 98.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.224888 seconds (485.54 k allocations: 168.217 MiB, 7.99% gc time, 18.13% compilation time)
Running: legendre_quadrature
  0.096927 seconds (19.14 k allocations: 1.126 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.171307 seconds (590.00 M allocations: 8.792 GiB, 7.23% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.255249 seconds (592.75 M allocations: 8.833 GiB, 6.76% gc time)
Running: rombergs_method
  0.281377 seconds (20.91 k allocations: 1.197 MiB, 3.87% gc time, 99.85% compilation time)
Running: simpsons_rule
  0.000034 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030540 seconds (463 allocations: 22.578 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.019079 seconds (171 allocations: 7.859 KiB, 99.24% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.468757 seconds (209.94 M allocations: 3.138 GiB, 2.24% gc time, 0.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.507151 seconds (423.02 k allocations: 23.686 MiB, 3.56% gc time, 99.40% compilation time)
Running: chebyshev_quadrature with k=2
 17.215509 seconds (478.59 k allocations: 4.041 GiB, 4.03% gc time, 2.33% compilation time)
Running: chebyshev_quadrature with k=3
  7.968603 seconds (254.26 k allocations: 1.642 GiB, 4.36% gc time, 3.42% compilation time)
Running: chebyshev_quadrature with k=4
 10.893927 seconds (254.26 k allocations: 2.261 GiB, 1.95% gc time, 4.62% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.322495 seconds (493.07 k allocations: 13.255 GiB, 12.74% gc time, 4.23% compilation time)
Running: legendre_quadrature.
 10.225938 seconds (228.94 k allocations: 1.976 GiB, 7.10% gc time, 5.44% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.500399 seconds (8.24 M allocations: 13.384 GiB, 32.65% gc time, 2.31% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.486584 seconds (7.24 M allocations: 13.369 GiB, 23.06% gc time, 2.40% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.633493 seconds (22.88 k allocations: 1.394 MiB, 0.88% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.909601 seconds (31.46 k allocations: 1.956 MiB, 1.26% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.724894 seconds (23.09 k allocations: 1.403 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.795535 seconds (448.72 k allocations: 153.518 MiB, 2.11% gc time, 12.25% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.612348 seconds (200.04 M allocations: 2.983 GiB, 2.29% gc time, 0.19% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.555324 seconds (600.05 M allocations: 8.944 GiB, 6.38% gc time, 0.34% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.825660 seconds (600.03 M allocations: 8.943 GiB, 4.43% gc time, 0.19% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.043332 seconds (111.10 k allocations: 4.245 MiB, 92.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.186551 seconds (252.71 k allocations: 13.877 MiB, 97.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.191259 seconds (277.25 k allocations: 14.964 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.266502 seconds (224.24 k allocations: 11.980 MiB, 42.22% gc time, 99.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.153355 seconds (224.24 k allocations: 11.992 MiB, 99.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.252810 seconds (394.78 k allocations: 35.536 MiB, 91.36% compilation time)
Running: laguerre_quadrature with k=2
  0.133763 seconds (185.19 k allocations: 11.095 MiB, 82.20% compilation time)
Running: legendre_quadrature
  0.210546 seconds (149.17 k allocations: 8.338 MiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.021350 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019288 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.064887 seconds (19.35 k allocations: 1.157 MiB, 73.93% compilation time)
Running: rectangle_rule_midpoint
  0.036258 seconds (26.33 k allocations: 1.636 MiB, 66.13% compilation time)
Running: rectangle_rule_right
  0.034307 seconds (17.96 k allocations: 1.084 MiB, 75.39% compilation time)
Running: rombergs_method
  0.616946 seconds (176.51 k allocations: 10.191 MiB, 99.17% compilation time)
Running: simpsons_rule
  0.000481 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.055177 seconds (80.36 k allocations: 3.491 MiB, 98.23% compilation time)
Running: trapezoidal_rule
  0.110450 seconds (2.39 M allocations: 37.744 MiB, 26.46% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000722 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.104851 seconds (2.46 k allocations: 1.691 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.108798 seconds (2.71 k allocations: 2.355 MiB, 97.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.109112 seconds (2.31 k allocations: 2.028 MiB, 96.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.093119 seconds (2.31 k allocations: 1.469 MiB, 97.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.024850 seconds (371.61 k allocations: 905.325 MiB, 4.99% gc time, 5.92% compilation time)
Running: legendre_quadrature
  0.070061 seconds (1.27 k allocations: 68.203 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000257 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000110 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.681410 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000359 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.655391 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062075 seconds (993 allocations: 56.609 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000964 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000146 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.107661 seconds (2.53 k allocations: 579.203 KiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.106409 seconds (2.79 k allocations: 780.188 KiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.098189 seconds (2.39 k allocations: 661.047 KiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.113553 seconds (2.39 k allocations: 491.547 KiB, 99.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.024571 seconds (378.17 k allocations: 253.436 MiB, 22.15% compilation time)
Running: legendre_quadrature
  0.067833 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000034 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.264159 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000134 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.240688 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081466 seconds (1.21 k allocations: 64.875 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000446 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
