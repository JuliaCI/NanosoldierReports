Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed ArgCheck ───────────────────── v2.1.0
   Installed UnPack ─────────────────────── v1.0.2
   Installed DataAPI ────────────────────── v1.3.0
   Installed ProgressMeter ──────────────── v1.4.0
   Installed AdvancedHMC ────────────────── v0.2.26
   Installed Parameters ─────────────────── v0.12.1
   Installed Requires ───────────────────── v1.1.0
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed Missings ───────────────────── v0.4.4
   Installed Compat ─────────────────────── v3.22.0
   Installed SpecialFunctions ───────────── v0.10.3
   Installed StatsBase ──────────────────── v0.33.2
   Installed DocStringExtensions ────────── v0.8.3
   Installed StatsFuns ──────────────────── v0.9.5
   Installed OrderedCollections ─────────── v1.3.1
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed Rmath ──────────────────────── v0.6.1
   Installed Rmath_jll ──────────────────── v0.2.2+1
   Installed JLLWrappers ────────────────── v1.1.2
   Installed InplaceOps ─────────────────── v0.3.0
   Installed DataStructures ─────────────── v0.18.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.26
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.26
  [dce04be8] + ArgCheck v2.1.0
  [34da2185] + Compat v3.22.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [ffbed154] + DocStringExtensions v0.8.3
  [505f98c9] + InplaceOps v0.3.0
  [692b3bcd] + JLLWrappers v1.1.2
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [92933f4c] + ProgressMeter v1.4.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [2913bbd2] + StatsBase v0.33.2
  [4c63d2b9] + StatsFuns v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  ✓ [39m[90mInplaceOps[39m
[32m  ✓ [39m[90mUnPack[39m
[32m  ✓ [39m[90mArgCheck[39m
[32m  ✓ [39m[90mDataAPI[39m
[32m  ✓ [39m[90mJLLWrappers[39m
[32m  ✓ [39m[90mOrderedCollections[39m
[32m  ✓ [39m[90mDocStringExtensions[39m
[32m  ✓ [39m[90mRequires[39m
[32m  ✓ [39m[90mCompat[39m
[32m  ✓ [39m[90mProgressMeter[39m
[32m  ✓ [39m[90mRmath_jll[39m
[32m  ✓ [39m[90mMissings[39m
[32m  ✓ [39m[90mParameters[39m
[32m  ✓ [39m[90mRmath[39m
[32m  ✓ [39m[90mCompilerSupportLibraries_jll[39m
[32m  ✓ [39m[90mOpenSpecFun_jll[39m
[32m  ✓ [39m[90mDataStructures[39m
[32m  ✓ [39m[90mSpecialFunctions[39m
[32m  ✓ [39m[90mSortingAlgorithms[39m
[32m  ✓ [39m[90mStatsBase[39m
[32m  ✓ [39m[90mStatsFuns[39m
[32m  ✓ [39mAdvancedHMC
22 dependencies successfully precompiled
     Testing AdvancedHMC
Status `/tmp/jl_ordiMW/Project.toml`
  [0bf59076] AdvancedHMC v0.2.26
  [dce04be8] ArgCheck v2.1.0
  [76274a88] Bijectors v0.7.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.3
  [f6369f11] ForwardDiff v0.10.12
  [505f98c9] InplaceOps v0.3.0
  [6d524b87] MCMCDebugging v0.1.3
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [d96e819e] Parameters v0.12.1
  [91a5bcdd] Plots v1.7.2
  [92933f4c] ProgressMeter v1.4.0
  [ae029012] Requires v1.1.0
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [fce5fe82] Turing v0.13.0
  [b8865327] UnicodePlots v1.3.0
  [e88e6eb3] Zygote v0.4.22
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ordiMW/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [0bf59076] AdvancedHMC v0.2.26
  [5b7e9947] AdvancedMH v0.5.1
  [dce04be8] ArgCheck v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [4fba245c] ArrayInterface v2.13.6
  [4c555306] ArrayLayouts v0.3.8
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [082447d4] ChainRules v0.6.5
  [d360d2e6] ChainRulesCore v0.8.1
  [35d6a980] ColorSchemes v3.10.1
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [d38c429a] Contour v0.5.5
  [adafc99b] CpuId v0.2.2
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.48.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.3
  [366bfd00] DynamicPPL v0.8.2
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.8.0
  [c87230d0] FFMPEG v0.4.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.7.0
  [53c48c17] FixedPointNumbers v0.8.4
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [28b8d3ca] GR v0.52.0
  [01680d73] GenericSVD v0.3.0
  [5c1252a2] GeometryBasics v0.3.3
  [4d00f742] GeometryTypes v0.8.3
  [42e2da0e] Grisu v1.0.0
  [cd3eb016] HTTP v0.8.19
  [09f84164] HypothesisTests v0.10.1
  [7869d1d1] IRTools v0.4.1
  [d25df0c9] Inflate v0.1.2
  [83e8ac13] IniFile v0.5.0
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [b964fa9f] LaTeXStrings v1.2.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.14.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.2
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.26
  [c7f686f2] MCMCChains v3.0.12
  [6d524b87] MCMCDebugging v0.1.3
  [1914dd2f] MacroTools v0.5.6
  [dbb5928d] MappedArrays v0.2.2
  [739be429] MbedTLS v1.0.2
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.4
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.7
  [91a5bcdd] Plots v1.7.2
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.4.0
  [1fd47b50] QuadGK v2.4.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.1.0
  [01d81517] RecipesPipeline v0.1.13
  [731186ca] RecursiveArrayTools v2.7.2
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [6c6a2e73] Scratch v1.0.3
  [992d4aef] Showoff v0.3.2
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [5d786b92] TerminalLoggers v0.1.2
  [9f7883ad] Tracker v0.2.12
  [84d833dd] TransformVariables v0.3.10
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.2
  [b8865327] UnicodePlots v1.3.0
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.4.22
  [700de1a5] ZygoteRules v0.2.0
  [68821587] Arpack_jll v3.5.0+3
  [6e34b625] Bzip2_jll v1.0.6+5
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [5ae413db] EarCut_jll v2.1.5+0
  [b22a6f82] FFMPEG_jll v4.3.1+4
  [d7e528f0] FreeType2_jll v2.10.1+5
  [559328eb] FriBidi_jll v1.0.5+6
  [c1c5ebd0] LAME_jll v3.100.0+3
  [dd192d2f] LibVPX_jll v1.9.0+1
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [e7412a2a] Ogg_jll v1.3.4+2
  [4536629a] OpenBLAS_jll v0.3.10+0
  [458c3c95] OpenSSL_jll v1.1.1+6
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [91d4177d] Opus_jll v1.3.1+3
  [f50d1b31] Rmath_jll v0.2.2+1
  [83775a58] Zlib_jll v1.2.11+18
  [0ac62f75] libass_jll v0.14.0+4
  [f638f0a6] libfdk_aac_jll v0.1.6+4
  [f27f6e37] libvorbis_jll v1.3.6+6
  [1270edf5] x264_jll v2020.7.14+2
  [dfaa095f] x265_jll v3.0.0+3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Envronment variables for testing
HOSTNAME=c83415efc6da
HOME=/home/pkgeval
JULIA_DEPOT_PATH=::/usr/local/share/julia
JULIA_NUM_THREADS=2
JULIA_MAX_NUM_PRECOMPILE_FILES=9223372036854775807
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DISPLAY=:99
XAUTHORITY=/tmp/xvfb-run.oy4TPu/Xauthority
DEBIAN_FRONTEND=noninteractive
PWD=/home/pkgeval
OPENBLAS_MAIN_FREE=1
OPENBLAS_NUM_THREADS=8
CI=true
PKGEVAL=true
JULIA_PKGEVAL=true
PYTHON=
R_HOME=*
JULIA_LOAD_PATH=@:/tmp/jl_ordiMW

┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/QB368/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/QB368/src/hamiltonian.jl:47
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.337048536
│   t_steps = 0.028332481
└   t_step / t_steps = 11.896188547695488
┌ Warning: Module DynamicPPL with build ID 312511278765921 is missing from the cache.
│ This may mean DynamicPPL [366bfd00-2699-11ea-058f-f148b4cae6d8] does not support precompilation but is imported by a module that does.
└ @ Base loading.jl:1020
DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))[ Info: Adaptation tests for HMCDA with StepSizeAdaptor are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐              
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ vectorization
              │⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ seperate     
              │⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⢀⠎⠈⠲│              
              │⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢱⠀⠀⠀⠀⠀⡎⠀⠀⠀│              
              │⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠈⡆⠀⠀⡠⠊⠀⠀⠀⠀│              
              │⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢰⠉⡎⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢣⢀⠜⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⡇⢀⠇⠀⢣⠀⠀⠀⢠⡆⠀⠀⠀⠀⢀⡀⠀⡎⠀⠀⠘⠎⠀⠀⠀⠀⠀⠀⠀│              
   Time (s)   │⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⢸⠀⢸⠀⠀⠘⡄⠀⠀⡎⠸⡀⠀⡰⠊⠁⠈⠑⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⡇⠀⠀⠀⠀⠀⢀⡇⠀⡇⠀⠀⠀⠘⡄⡸⠀⠀⢣⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⡇⠀⠀⠀⠀⢠⠊⠀⢠⠃⠀⠀⠀⠀⠈⠃⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⡇⠀⠀⠀⢠⠃⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⡆⢱⠀⠀⢀⠇⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠘⣼⠀⠀⣜⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⢸⠔⡖⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
            1 │⠀⠀⠀⠘⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              └────────────────────────────────────────┘              
              0                                       20
                            Num of chains

Sampling  0%|                               |  ETA: 1:33:02[K
  iterations:                    1[K
  n_steps:                       1[K
  is_accept:                     true[K
  acceptance_rate:               0.0003690390468871451[K
  log_density:                   -11.390479707883463[K
  hamiltonian_energy:            17.046705794952352[K
  hamiltonian_energy_error:      0.0[K
  max_hamiltonian_energy_error:  7.904608101399745[K
  tree_depth:                    1[K
  numerical_error:               false[K
  step_size:                     1.6[K
  nom_step_size:                 1.6[K
  is_adapt:                      true[K
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[K[A[A[A[A[A[A[A[A[A[A[A[A[A[A[A














[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    2000[K
  n_steps:                       7[K
  is_accept:                     true[K
  acceptance_rate:               0.9681473235558001[K
  log_density:                   -14.279326904074374[K
  hamiltonian_energy:            18.939560505883314[K
  hamiltonian_energy_error:      0.010768319224148115[K
  max_hamiltonian_energy_error:  0.048996432859386374[K
  tree_depth:                    3[K
  numerical_error:               false[K
  step_size:                     0.6969794938658929[K
  nom_step_size:                 0.6969794938658929[K
  is_adapt:                      false[K
  mass_matrix:                   DiagEuclideanMetric([1.134198290100173, 1.02410 ...])[K
┌ Info: Finished 2000 sampling steps for 1 chains in 5.305905066 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.134198290100173, 1.02410 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.697), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.1189660985959686
└   average_acceptance_rate = 0.8370142777313272
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=WelfordVar,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6633293115939923),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.663)
└   h.metric = DiagEuclideanMetric([0.4477504847993262, 0.5691 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.582493978 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.4477504847993262, 0.5691 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.663), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.8863946850807711
└   average_acceptance_rate = 0.8861929622624187
Test Summary: | Pass  Total
AdvancedHMC   | 3542   3542
     Testing AdvancedHMC tests passed 
