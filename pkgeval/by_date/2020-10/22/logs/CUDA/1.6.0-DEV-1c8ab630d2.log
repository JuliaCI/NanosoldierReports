Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed TimerOutputs â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.0
   Installed OrderedCollections â”€ v1.3.1
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed NNlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.5
   Installed BFloat16s â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed DataStructures â”€â”€â”€â”€â”€ v0.18.8
   Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed LLVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.2.0
   Installed CUDA â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.2
   Installed GPUCompiler â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.3
   Installed GPUArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [052768ef] + CUDA v2.0.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [ab4f0b2a] + BFloat16s v0.1.0
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v2.0.2
  [34da2185] + Compat v3.22.0
  [864edb3b] + DataStructures v0.18.8
  [e2ba6199] + ExprTools v0.1.3
  [0c68f7d7] + GPUArrays v6.0.1
  [61eb1bfa] + GPUCompiler v0.7.3
  [929cbde3] + LLVM v3.2.0
  [1914dd2f] + MacroTools v0.5.6
  [872c559c] + NNlib v0.7.5
  [bac558e1] + OrderedCollections v1.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mExprTools[39m
[32m  âœ“ [39m[90mCEnum[39m
[32m  âœ“ [39m[90mBFloat16s[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mTimerOutputs[39m
[32m  âœ“ [39m[90mAbstractFFTs[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mNNlib[39m
[32m  âœ“ [39m[90mGPUArrays[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mLLVM[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mGPUCompiler[39m
[32m  âœ“ [39mCUDA
17 dependencies successfully precompiled
     Testing CUDA
Status `/tmp/jl_sq8SFY/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [ab4f0b2a] BFloat16s v0.1.0
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.2
  [864edb3b] DataStructures v0.18.8
  [e2ba6199] ExprTools v0.1.3
  [7a1cc6ca] FFTW v1.2.4
  [1a297f60] FillArrays v0.9.7
  [f6369f11] ForwardDiff v0.10.12
  [0c68f7d7] GPUArrays v6.0.1
  [61eb1bfa] GPUCompiler v0.7.3
  [929cbde3] LLVM v3.2.0
  [1914dd2f] MacroTools v0.5.6
  [872c559c] NNlib v0.7.5
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_sq8SFY/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [ab4f0b2a] BFloat16s v0.1.0
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [864edb3b] DataStructures v0.18.8
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.3
  [7a1cc6ca] FFTW v1.2.4
  [1a297f60] FillArrays v0.9.7
  [f6369f11] ForwardDiff v0.10.12
  [0c68f7d7] GPUArrays v6.0.1
  [61eb1bfa] GPUCompiler v0.7.3
  [692b3bcd] JLLWrappers v1.1.2
  [929cbde3] LLVM v3.2.0
  [1914dd2f] MacroTools v0.5.6
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [bac558e1] OrderedCollections v1.3.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [a759f4b9] TimerOutputs v0.5.6
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [f5851436] FFTW_jll v3.3.9+6
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [856f044c] MKL_jll v2020.2.254+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
ERROR: LoadError: LoadError: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_32, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_32, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
Closest candidates are:
  Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:977 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#37"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#38"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/irgen.jl:334
  [5] macro expansion
    @ ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:94 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [7] codegen(output::Symbol, job::GPUCompiler.CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/driver.jl:93
  [8] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/rtlib.jl:78
  [9] build_runtime(job::GPUCompiler.CompilerJob, ctx::LLVM.Context)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/rtlib.jl:121
 [10] (::GPUCompiler.var"#66#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, LLVM.Context, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/rtlib.jl:170
 [11] get!(default::GPUCompiler.var"#66#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, LLVM.Context, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [12] load_runtime(job::GPUCompiler.CompilerJob, ctx::LLVM.Context)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/5xT46/src/rtlib.jl:155
 [13] (::CUDA.var"#751#753"{Set{VersionNumber}, CUDA.CUDACompilerParams, GPUCompiler.FunctionSpec{CUDA.var"#750#752", Tuple{}}})(ctx::LLVM.Context)
    @ CUDA ~/.julia/packages/CUDA/gKMm0/src/device/runtime.jl:17
 [14] LLVM.Context(f::CUDA.var"#751#753"{Set{VersionNumber}, CUDA.CUDACompilerParams, GPUCompiler.FunctionSpec{CUDA.var"#750#752", Tuple{}}})
    @ LLVM ~/.julia/packages/LLVM/AGEVG/src/core/context.jl:22
 [15] JuliaContext(f::CUDA.var"#751#753"{Set{VersionNumber}, CUDA.CUDACompilerParams, GPUCompiler.FunctionSpec{CUDA.var"#750#752", Tuple{}}})
    @ LLVM.Interop ~/.julia/packages/LLVM/AGEVG/src/interop/base.jl:29
 [16] precompile_runtime
    @ ~/.julia/packages/CUDA/gKMm0/src/device/runtime.jl:13 [inlined]
 [17] precompile_runtime()
    @ CUDA ~/.julia/packages/CUDA/gKMm0/src/device/runtime.jl:11
 [18] top-level scope
    @ ~/.julia/packages/CUDA/gKMm0/test/setup.jl:17
 [19] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [20] top-level scope
    @ ~/.julia/packages/CUDA/gKMm0/test/runtests.jl:50
 [21] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [22] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/CUDA/gKMm0/test/setup.jl:17
in expression starting at /home/pkgeval/.julia/packages/CUDA/gKMm0/test/runtests.jl:50
ERROR: Package CUDA errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1650
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:31
