Julia Version 1.6.0-DEV.1310
Commit 1c8ab630d2 (2020-10-22 01:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_YF5UhX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_YF5UhX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171528082759819
curgen: 20 fitness: 0.21723348459552844
curgen: 30 fitness: 0.21723348459552844
curgen: 40 fitness: 0.21723348459552844
curgen: 50 fitness: 0.21723362802523222
CoordinateCreature{Vector{Float64}}([0.2225502079378644], -0.21723362802523222) 0.2225502079378644 -0.21723362802523222
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258006013121179
curgen: 100 fitness: 3.258168035195894
curgen: 150 fitness: 3.258223414386937
curgen: 200 fitness: 3.25826349225902
curgen: 250 fitness: 3.2583715293224036
curgen: 300 fitness: 3.2583998468232003
curgen: 350 fitness: 3.2584483053229643
curgen: 400 fitness: 3.2584483327184137
curgen: 450 fitness: 3.2584758775450733
curgen: 500 fitness: 3.2584804864318744
CoordinateCreature{Vector{Float64}}([0.22246915721071625, -0.22255351437833307, 0.22240729125367756, -0.2225638078888408, 0.22237257743644967, 0.22296959243382866, 0.22251886450175998, -0.22291450342911992, 0.2226087183646455, -0.22226786887017239, -0.222624450204448, 0.2225203830338989, 0.2224024750632513, -0.22279403363527878, -0.22257744870481155], -3.2584804864318744) [0.22246915721071625, -0.22255351437833307, 0.22240729125367756, -0.2225638078888408, 0.22237257743644967, 0.22296959243382866, 0.22251886450175998, -0.22291450342911992, 0.2226087183646455, -0.22226786887017239, -0.222624450204448, 0.2225203830338989, 0.2224024750632513, -0.22279403363527878, -0.22257744870481155] -3.2584804864318744
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00346900591628696
curgen: 100 fitness: -0.0021875412311089804
curgen: 150 fitness: -0.0021875412311089804
curgen: 200 fitness: -0.0007396808365456309
curgen: 250 fitness: -0.0006875769465182202
curgen: 300 fitness: -0.0005602757942142489
curgen: 350 fitness: -0.0005602757942142489
curgen: 400 fitness: -0.0005602757942142489
curgen: 450 fitness: -0.0005369232745806585
curgen: 500 fitness: -0.00017945534796126594
CoordinateCreature{Vector{Float64}}([-0.00020015401686199338, 9.384314690571646e-5, -8.032447899095595e-5, -0.0003685195128478938, -0.00019040229216958608, 0.00010607513545033865, -0.0004977787757012345, -0.0003251501705218062, -2.6346947896137533e-5, 0.0002048642976929647, 0.0001281819528652743, 0.00019285707247664854, 0.00014833977081202092, 5.1666135386226985e-5, 0.0004375490179545366], 0.00017945534796126594) [-0.00020015401686199338, 9.384314690571646e-5, -8.032447899095595e-5, -0.0003685195128478938, -0.00019040229216958608, 0.00010607513545033865, -0.0004977787757012345, -0.0003251501705218062, -2.6346947896137533e-5, 0.0002048642976929647, 0.0001281819528652743, 0.00019285707247664854, 0.00014833977081202092, 5.1666135386226985e-5, 0.0004375490179545366] 0.00017945534796126594
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
