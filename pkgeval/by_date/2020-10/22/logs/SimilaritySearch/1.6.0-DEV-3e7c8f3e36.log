Julia Version 1.6.0-DEV.1316
Commit 3e7c8f3e36 (2020-10-22 18:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed OrderedCollections â”€ v1.3.1
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_ivV9h0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ivV9h0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.034240365f0), Item(41, 0.1021117f0), Item(40, 0.12443006f0), Item(26, 0.13945687f0)])
Vsorted = Item[Item(39, 0.034240365f0), Item(41, 0.1021117f0), Item(40, 0.12443006f0), Item(26, 0.13945687f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004156064987182617, 0.0037993669509887697, 301.0, 50.62682570144534))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0031938552856445312, 0.0030292352040608723, 301.0, 73.50337517261505))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00656888484954834, 0.003939231236775716, 301.0, 41.49298083782196))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003523596127827962, 0.003207898139953613, 301.0, 9.840172707568854))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004371770222981771, 0.006522472699483236, 301.0, 45.966670360416174))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.942648569742839e-5, 2.563794453938802e-5, 301.0, 180.43773859739304))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.420511881510417e-5, 0.009977499643961588, 300.0, 27.339811269193888)
p = PerformanceResult(1.0, 1.0, 1.0, 2.8904279073079427e-5, 1.613299051920573e-5, 300.0, 27.339811269193888)
p = PerformanceResult(1.0, 1.0, 1.0, 0.002968502044677734, 0.0029879013697306314, 300.0, 1.4736802180414088)
p = PerformanceResult(1.0, 1.0, 1.0, 2.4363729688856335e-5, 1.3335545857747395e-5, 300.0, 1.4736802180414088)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.420511881510417e-5, 0.009977499643961588, 300.0, 27.339811269193888), PerformanceResult(1.0, 1.0, 1.0, 2.8904279073079427e-5, 1.613299051920573e-5, 300.0, 27.339811269193888), PerformanceResult(1.0, 1.0, 1.0, 0.002968502044677734, 0.0029879013697306314, 300.0, 1.4736802180414088), PerformanceResult(1.0, 1.0, 1.0, 2.4363729688856335e-5, 1.3335545857747395e-5, 300.0, 1.4736802180414088))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 130.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008996891975402831, 0.002210267384847005, 347.03333333333336, 28717.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006602350870768229, 0.002574761708577474, 302.96666666666664, 6961.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0991096496582032e-5, 8.304913838704428e-6, 95.16666666666667, 50.62682570144534))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4734268188476562e-5, 7.637341817220052e-6, 84.76666666666667, 73.50337517261505))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.885096232096354e-5, 9.234746297200521e-6, 86.3, 41.49298083782196))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.3571650187174478e-5, 5.133152008056641e-5, 95.0, 45.966670360416174))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8266666666666668, 0.8266666666666668, 0.8266666666666668, 1.0585784912109375e-5, 1.3605753580729167e-5, 69.96666666666667, 187.71640932559967))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-23T04:43:54.955
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9089999999999998, 0.9089999999999998, 0.9089999999999998, 1.6553401947021486e-5, 1.4760494232177734e-5, 153.5, 51.82260195305571))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.1560916900634766e-5, 7.739067077636719e-6, 156.9, 0.0))
*** advance 1 from 1000; 2020-10-23T04:43:55.920
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8809999999999997, 0.8779999999999997, 0.8792352941176468, 1.0554790496826173e-5, 9.200572967529298e-6, 152.03, 77.53382236510515))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 8.831024169921875e-6, 6.1798095703125e-6, 155.37, 0.0))
*** advance 1 from 1000; 2020-10-23T04:43:56.461
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9004999999999999, 0.8969999999999998, 0.8985555555555552, 1.7709732055664063e-5, 1.901865005493164e-5, 153.41, 42.20865069143474))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7149448394775392e-5, 1.6901493072509766e-5, 156.79, 0.0))
*** advance 1 from 1000; 2020-10-23T04:43:56.926
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.907888888888889, 0.907, 0.9074210526315789, 4.421234130859375e-5, 0.0001870107650756836, 154.25, 46.89412526355591))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.389047622680664e-5, 0.0002133798599243164, 157.76, 0.0))
*** advance 1 from 1000; 2020-10-23T04:43:57.241
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8225277777777777, 0.8190000000000001, 0.8205906432748538, 2.412080764770508e-5, 7.79414176940918e-5, 151.62, 210.31908963341266))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.521991729736328e-5, 7.920980453491211e-5, 154.95, 0.0))
*** advance 1 from 1000; 2020-10-23T04:43:58.106
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9089999999999998, 0.9089999999999998, 0.9089999999999998, 2.043485641479492e-5, 4.717111587524414e-5, 153.5, 51.832590631674975))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.008199691772461e-5, 4.601001739501953e-5, 156.9, 0.016975643316982314))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:43:59.578
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.709, 0.709, 0.709, 0.0012620711326599122, 6.577014923095703e-5, 199.16, 208.566668972373))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:00.542
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7330000000000002, 0.7330000000000002, 0.7330000000000002, 0.001641566753387451, 5.8820247650146486e-5, 201.9, 117.46746284514666))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:01.384
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6, 0.6, NaN, 0.0015384006500244142, 5.600929260253906e-5, 265.08, 1.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:02.341
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9619999999999999, 0.9619999999999999, 0.9619999999999999, 0.0011823678016662598, 1.3070106506347656e-5, 222.08, 603.200020506978))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:03.140
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.568, 0.568, 0.568, 0.0012453532218933106, 0.00020967960357666016, 254.54, 2393.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:04.041
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.41600000000000004, 0.41600000000000004, 0.41600000000000004, 0.0013817214965820312, 0.0003577208518981934, 251.05, 3666.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-23T04:44:04.842
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.581, 0.581, NaN, 0.0011436724662780761, 1.8498897552490235e-5, 249.64, 2400.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0549450549450547, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670615842490848,"seconds":3.7886202335357666e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.53125,"distances_sum":735.931809194386}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.091943127962085, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9459592490842493,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.2421875,"distances_sum":701.9148875549436}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9459592490842493,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.2421875,"distances_sum":701.9148875549436}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9459592490842493,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.2421875,"distances_sum":701.9148875549436}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.091943127962085,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9459592490842493,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.2421875,"distances_sum":701.9148875549436}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8862847222222209, conf: {"restarts":9}, perf: {"precision":0.8862847222222209,"recall":0.8862847222222209,"f1":0.8862847222222209,"seconds":1.3111159205436707e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":51.0078125,"distances_sum":288.9882590547204}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222209, conf: {"restarts":7}, perf: {"precision":0.8706597222222209,"recall":0.8706597222222209,"f1":0.8706597222222209,"seconds":1.2142583727836609e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":47.234375,"distances_sum":289.1943249627948}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8862847222222209,"state":{"restarts":9},"perf":{"precision":0.8862847222222209,"recall":0.8862847222222209,"f1":0.8862847222222209,"seconds":1.3111159205436707e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":51.0078125,"distances_sum":288.9882590547204}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.736366127706221, conf: {"restarts":12}, perf: {"precision":0.9001736111111103,"recall":0.9001736111111103,"f1":0.9001736111111103,"seconds":2.1694228053092957e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":57.015625,"distances_sum":285.90928906947374}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8871527777777766, conf: {"restarts":8}, perf: {"precision":0.8871527777777766,"recall":0.8871527777777766,"f1":0.8871527777777766,"seconds":1.4923512935638428e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":50.2265625,"distances_sum":287.2554954662919}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7198697068403908, conf: {"restarts":13}, perf: {"precision":0.9105902777777766,"recall":0.9105902777777766,"f1":0.9105902777777766,"seconds":1.8633902072906494e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":57.5625,"distances_sum":285.0427965000272}, best_list's length: 8, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6310979534045567, conf: {"restarts":14}, perf: {"precision":0.9175347222222212,"recall":0.9175347222222212,"f1":0.9175347222222212,"seconds":1.9341707229614258e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":60.6953125,"distances_sum":284.2917476668954}, best_list's length: 9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6304683479155946, conf: {"restarts":15}, perf: {"precision":0.9149305555555546,"recall":0.9149305555555546,"f1":0.9149305555555546,"seconds":1.989118754863739e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":60.71875,"distances_sum":284.2190402522683}, best_list's length: 10, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8940972222222213, conf: {"restarts":10}, perf: {"precision":0.8940972222222213,"recall":0.8940972222222213,"f1":0.8940972222222213,"seconds":1.681596040725708e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":52.5078125,"distances_sum":288.2808279171586}, best_list's length: 12, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.893229166666666, conf: {"restarts":11}, perf: {"precision":0.893229166666666,"recall":0.893229166666666,"f1":0.893229166666666,"seconds":1.7920508980751038e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":54.6171875,"distances_sum":286.9767489954829}, best_list's length: 13, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.736366127706221,"state":{"restarts":12},"perf":{"precision":0.9001736111111103,"recall":0.9001736111111103,"f1":0.9001736111111103,"seconds":2.1694228053092957e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":57.015625,"distances_sum":285.90928906947374}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.736366127706221,"state":{"restarts":12},"perf":{"precision":0.9001736111111103,"recall":0.9001736111111103,"f1":0.9001736111111103,"seconds":2.1694228053092957e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":57.015625,"distances_sum":285.90928906947374}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.736366127706221,"state":{"restarts":12},"perf":{"precision":0.9001736111111103,"recall":0.9001736111111103,"f1":0.9001736111111103,"seconds":2.1694228053092957e-5,"exhaustive_search_seconds":4.179775714874268e-6,"evaluations":57.015625,"distances_sum":285.90928906947374}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222215, conf: {"restarts":2}, perf: {"precision":0.8472222222222215,"recall":0.8472222222222215,"f1":0.8472222222222215,"seconds":1.475401222705841e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":74.8828125,"distances_sum":126.75142072839662}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8420138888888878, conf: {"restarts":18}, perf: {"precision":0.8420138888888878,"recall":0.8420138888888878,"f1":0.8420138888888878,"seconds":3.250874578952789e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":175.21875,"distances_sum":126.7640553819947}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.832465277777777, conf: {"restarts":8}, perf: {"precision":0.832465277777777,"recall":0.832465277777777,"f1":0.832465277777777,"seconds":1.940503716468811e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":115.4765625,"distances_sum":127.08238216442987}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999988, conf: {"restarts":11}, perf: {"precision":0.8515624999999988,"recall":0.8515624999999988,"f1":0.8515624999999988,"seconds":2.2981315851211548e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":133.3828125,"distances_sum":125.64349451987073}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222213, conf: {"restarts":6}, perf: {"precision":0.8472222222222213,"recall":0.8472222222222213,"f1":0.8472222222222213,"seconds":1.739710569381714e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":100.3359375,"distances_sum":126.36230159876868}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666656, conf: {"restarts":7}, perf: {"precision":0.8541666666666656,"recall":0.8541666666666656,"f1":0.8541666666666656,"seconds":2.0271167159080505e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":105.34375,"distances_sum":125.76276519848034}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555547, conf: {"restarts":13}, perf: {"precision":0.8524305555555547,"recall":0.8524305555555547,"f1":0.8524305555555547,"seconds":3.2337382435798645e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":148.5625,"distances_sum":126.7243928941898}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666656,"state":{"restarts":7},"perf":{"precision":0.8541666666666656,"recall":0.8541666666666656,"f1":0.8541666666666656,"seconds":2.0271167159080505e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":105.34375,"distances_sum":125.76276519848034}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111102, conf: {"restarts":10}, perf: {"precision":0.8611111111111102,"recall":0.8611111111111102,"f1":0.8611111111111102,"seconds":2.5073066353797913e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":124.1328125,"distances_sum":126.25229603005573}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555546, conf: {"restarts":20}, perf: {"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":4.084780812263489e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":189.1015625,"distances_sum":125.41111900610849}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888878, conf: {"restarts":22}, perf: {"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":4.318170249462128e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":197.9921875,"distances_sum":125.20059459237382}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222211, conf: {"restarts":21}, perf: {"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":4.6329572796821594e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":194.890625,"distances_sum":125.96549084363505}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8611111111111102,"state":{"restarts":10},"perf":{"precision":0.8611111111111102,"recall":0.8611111111111102,"f1":0.8611111111111102,"seconds":2.5073066353797913e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":124.1328125,"distances_sum":126.25229603005573}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8611111111111102,"state":{"restarts":10},"perf":{"precision":0.8611111111111102,"recall":0.8611111111111102,"f1":0.8611111111111102,"seconds":2.5073066353797913e-5,"exhaustive_search_seconds":1.3319775462150574e-5,"evaluations":124.1328125,"distances_sum":126.25229603005573}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444434, conf: {"restarts":9}, perf: {"precision":0.8350694444444434,"recall":0.8350694444444434,"f1":0.8350694444444434,"seconds":5.165860056877136e-5,"exhaustive_search_seconds":0.0002139844000339508,"evaluations":194.125,"distances_sum":57.57432877412066}, best_list's length: 3, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8350694444444434,"state":{"restarts":9},"perf":{"precision":0.8350694444444434,"recall":0.8350694444444434,"f1":0.8350694444444434,"seconds":5.165860056877136e-5,"exhaustive_search_seconds":0.0002139844000339508,"evaluations":194.125,"distances_sum":57.57432877412066}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8350694444444434,"state":{"restarts":9},"perf":{"precision":0.8350694444444434,"recall":0.8350694444444434,"f1":0.8350694444444434,"seconds":5.165860056877136e-5,"exhaustive_search_seconds":0.0002139844000339508,"evaluations":194.125,"distances_sum":57.57432877412066}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(9), SatNeighborhood(32), 2020-10-23T04:44:11.583
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6119, 0.02192447f0), Item(3715, 0.02934659f0), Item(3745, 0.03580181f0), Item(8984, 0.045769755f0), Item(7351, 0.05553162f0), Item(9381, 0.060189616f0), Item(7150, 0.060275454f0), Item(4542, 0.061060004f0), Item(6373, 0.061587803f0), Item(3328, 0.068230845f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9205409174159179,"seconds":0.002723896875977516,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0234375,"distances_sum":681.9206954538822}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9205409174159179,"seconds":0.002723896875977516,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0234375,"distances_sum":681.9206954538822}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.408284023668639, conf: {"bsize":2}, perf: {"precision":0.9236111111111099,"recall":0.9236111111111099,"f1":0.9236111111111099,"seconds":9.4585120677948e-6,"exhaustive_search_seconds":4.725530743598938e-6,"evaluations":29.046875,"distances_sum":289.54239824414253}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.408284023668639,"state":{"bsize":2},"perf":{"precision":0.9236111111111099,"recall":0.9236111111111099,"f1":0.9236111111111099,"seconds":9.4585120677948e-6,"exhaustive_search_seconds":4.725530743598938e-6,"evaluations":29.046875,"distances_sum":289.54239824414253}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.408284023668639,"state":{"bsize":2},"perf":{"precision":0.9236111111111099,"recall":0.9236111111111099,"f1":0.9236111111111099,"seconds":9.4585120677948e-6,"exhaustive_search_seconds":4.725530743598938e-6,"evaluations":29.046875,"distances_sum":289.54239824414253}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.408284023668639,"state":{"bsize":2},"perf":{"precision":0.9236111111111099,"recall":0.9236111111111099,"f1":0.9236111111111099,"seconds":9.4585120677948e-6,"exhaustive_search_seconds":4.725530743598938e-6,"evaluations":29.046875,"distances_sum":289.54239824414253}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.896405919661735,"state":{"bsize":2},"perf":{"precision":0.9470486111111102,"recall":0.9470486111111102,"f1":0.9470486111111102,"seconds":1.7872080206871033e-5,"exhaustive_search_seconds":1.9514933228492737e-5,"evaluations":59.125,"distances_sum":122.64480974059552}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.896405919661735,"state":{"bsize":2},"perf":{"precision":0.9470486111111102,"recall":0.9470486111111102,"f1":0.9470486111111102,"seconds":1.7872080206871033e-5,"exhaustive_search_seconds":1.9514933228492737e-5,"evaluations":59.125,"distances_sum":122.64480974059552}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.35413686667168, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.382004797458649e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":103.7734375,"distances_sum":54.69706434151158}, best_list's length: 2, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.35413686667168,"state":{"bsize":8},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.382004797458649e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":103.7734375,"distances_sum":54.69706434151158}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.4819944598338, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.365481436252594e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":101.53125,"distances_sum":54.699531541671604}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.4819944598338,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.365481436252594e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":101.53125,"distances_sum":54.699531541671604}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.4819944598338,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.365481436252594e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":101.53125,"distances_sum":54.699531541671604}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.4819944598338,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.365481436252594e-5,"exhaustive_search_seconds":0.00030316412448883057,"evaluations":101.53125,"distances_sum":54.699531541671604}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-10-23T04:44:15.137
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6501, 0.009365971f0), Item(7324, 0.02649009f0), Item(3739, 0.042296678f0), Item(3240, 0.045903273f0), Item(7746, 0.04693702f0), Item(2859, 0.051770233f0), Item(7802, 0.0546273f0), Item(9323, 0.054824375f0), Item(3239, 0.061073195f0), Item(2535, 0.062167406f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
