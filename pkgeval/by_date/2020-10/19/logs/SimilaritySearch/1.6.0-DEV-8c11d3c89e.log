Julia Version 1.6.0-DEV.1284
Commit 8c11d3c89e (2020-10-19 22:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed OrderedCollections â”€ v1.3.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_BxhvR5/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_BxhvR5/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(10, 0.027192831f0), Item(18, 0.05937159f0), Item(39, 0.06210971f0), Item(31, 0.09447265f0)])
Vsorted = Item[Item(10, 0.027192831f0), Item(18, 0.05937159f0), Item(39, 0.06210971f0), Item(31, 0.09447265f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037526051203409833, 0.003670700391133626, 301.0, 52.99921731837094))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003342890739440918, 0.0033788363138834636, 301.0, 78.33966541290283))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003530287742614746, 0.0034652312596639, 301.0, 42.73853862285614))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037159283955891928, 0.0029839277267456055, 301.0, 10.375502464565216))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00355989138285319, 0.004451235135396321, 301.0, 47.758285507559776))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.876686096191406e-5, 2.5502840677897136e-5, 301.0, 197.54177801311016))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 2.1147727966308594e-5, 0.01033036708831787, 300.0, 27.580911388155073)
p = PerformanceResult(1.0, 1.0, 1.0, 2.227624257405599e-5, 1.2763341267903645e-5, 300.0, 27.580911388155073)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0026705026626586913, 0.002577702204386393, 300.0, 1.480778748051307)
p = PerformanceResult(1.0, 1.0, 1.0, 2.7381049262152775e-5, 1.403490702311198e-5, 300.0, 1.480778748051307)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 2.1147727966308594e-5, 0.01033036708831787, 300.0, 27.580911388155073), PerformanceResult(1.0, 1.0, 1.0, 2.227624257405599e-5, 1.2763341267903645e-5, 300.0, 27.580911388155073), PerformanceResult(1.0, 1.0, 1.0, 0.0026705026626586913, 0.002577702204386393, 300.0, 1.480778748051307), PerformanceResult(1.0, 1.0, 1.0, 2.7381049262152775e-5, 1.403490702311198e-5, 300.0, 1.480778748051307))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007148639361063639, 0.0028897682825724286, 347.5, 28709.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006682554880777995, 0.0024784962336222333, 303.1, 6951.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6148885091145834e-5, 7.470448811848958e-6, 96.73333333333333, 52.99921731837094))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4925003051757813e-5, 7.804234822591146e-6, 86.33333333333333, 78.33966541290283))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7150243123372397e-5, 7.700920104980468e-6, 91.13333333333334, 42.73853862285614))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.54766845703125e-5, 5.313555399576823e-5, 97.96666666666667, 47.758285507559776))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.81, 0.81, 0.81, 1.715819040934245e-5, 2.586046854654948e-5, 71.5, 206.37010325491428))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-20T06:41:37.952
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8865000000000001, 0.885, 0.8856666666666668, 1.0285377502441406e-5, 1.0600090026855469e-5, 152.45, 52.971222238615155))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 9.882450103759766e-6, 7.719993591308594e-6, 156.06, 0.0))
*** advance 1 from 1000; 2020-10-20T06:41:38.721
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8875, 0.8859999999999999, 0.8866666666666667, 1.4514923095703126e-5, 1.4870166778564453e-5, 152.53, 79.29900377988815))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4269351959228516e-5, 1.1498928070068359e-5, 155.87, 0.0))
*** advance 1 from 1000; 2020-10-20T06:41:39.451
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8623333333333331, 0.8589999999999998, 0.8602499999999997, 1.0025501251220702e-5, 1.2621879577636718e-5, 153.34, 43.151158306747675))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 9.567737579345704e-6, 1.0049343109130859e-5, 157.05, 0.0))
*** advance 1 from 1000; 2020-10-20T06:41:39.942
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8970555555555554, 0.8919999999999999, 0.8940877192982454, 4.119396209716797e-5, 0.00016597986221313476, 152.96, 47.495390136609785))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.2154788970947266e-5, 0.00021105051040649415, 156.57, 0.0))
*** advance 1 from 1000; 2020-10-20T06:41:40.269
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8690000000000001, 0.8690000000000001, 0.8690000000000001, 1.5413761138916017e-5, 4.6460628509521485e-5, 152.05, 207.47032966464758))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.5887489318847656e-5, 4.9262046813964845e-5, 155.61, 0.0))
*** advance 1 from 1000; 2020-10-20T06:41:40.924
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8865000000000001, 0.885, 0.8856666666666668, 1.9326210021972657e-5, 4.6360492706298825e-5, 152.45, 52.98192406690214))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8002986907958986e-5, 4.441022872924805e-5, 156.06, 0.017177896021166816))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:42.407
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.77, 0.77, 0.77, 0.0013681292533874513, 6.400108337402344e-5, 196.23, 193.68333545327187))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:43.281
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7449999999999999, 0.7449999999999999, 0.7449999999999999, 0.00133542537689209, 6.330013275146484e-5, 200.33, 112.91666900366545))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:44.077
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6720000000000003, 0.6720000000000003, 0.6720000000000003, 0.001453392505645752, 6.798028945922851e-5, 266.68, 3.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:44.790
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9390000000000001, 0.93, 0.9337058823529412, 0.0014081501960754395, 1.2738704681396484e-5, 223.13, 603.0000204741955))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:45.540
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.58, 0.58, 0.58, 0.0013487744331359863, 0.00024389982223510742, 258.26, 2349.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:46.311
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3629999999999998, 0.3629999999999998, NaN, 0.0011079788208007812, 0.00026283979415893556, 254.29, 3700.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-20T06:41:47.053
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.611, 0.611, 0.611, 0.0011642003059387208, 2.040863037109375e-5, 243.61, 2355.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.050136736554239, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.96933118964369,"seconds":3.2261013984680176e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5703125,"distances_sum":567.0236323773861}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0304114490161003, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9813072344322347,"seconds":3.0901283025741577e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":579.4619247913361}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.050136736554239,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.96933118964369,"seconds":3.2261013984680176e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5703125,"distances_sum":567.0236323773861}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.063711911357341, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9604083416583421,"seconds":2.995133399963379e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4609375,"distances_sum":553.5011770427227}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.063711911357341,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9604083416583421,"seconds":2.995133399963379e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4609375,"distances_sum":553.5011770427227}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0960989533777354, conf: {"restarts":2}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9421078921078924,"seconds":2.903863787651062e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2109375,"distances_sum":534.1933768987656}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0960989533777354,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9421078921078924,"seconds":2.903863787651062e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2109375,"distances_sum":534.1933768987656}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0960989533777354,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9421078921078924,"seconds":2.903863787651062e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2109375,"distances_sum":534.1933768987656}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888878, conf: {"restarts":5}, perf: {"precision":0.8732638888888878,"recall":0.8732638888888878,"f1":0.8732638888888878,"seconds":1.1380761861801147e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":40.140625,"distances_sum":289.6348436921835}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8871527777777768, conf: {"restarts":6}, perf: {"precision":0.8871527777777768,"recall":0.8871527777777768,"f1":0.8871527777777768,"seconds":1.3081356883049011e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":44.4375,"distances_sum":288.6576991081238}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8871527777777768,"state":{"restarts":6},"perf":{"precision":0.8871527777777768,"recall":0.8871527777777768,"f1":0.8871527777777768,"seconds":1.3081356883049011e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":44.4375,"distances_sum":288.6576991081238}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9322964318389753, conf: {"restarts":10}, perf: {"precision":0.9045138888888876,"recall":0.9045138888888876,"f1":0.9045138888888876,"seconds":1.726113259792328e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":51.234375,"distances_sum":286.878068767488}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8932291666666656, conf: {"restarts":8}, perf: {"precision":0.8932291666666656,"recall":0.8932291666666656,"f1":0.8932291666666656,"seconds":1.6266480088233948e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":48.84375,"distances_sum":288.99948643893003}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.009514747859182, conf: {"restarts":9}, perf: {"precision":0.9166666666666657,"recall":0.9166666666666657,"f1":0.9166666666666657,"seconds":1.3453885912895203e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":49.265625,"distances_sum":285.9736195728183}, best_list's length: 10, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7825291883527923, conf: {"restarts":12}, perf: {"precision":0.9019097222222209,"recall":0.9019097222222209,"f1":0.9019097222222209,"seconds":1.5502795577049255e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":55.5390625,"distances_sum":287.4665958955884}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.009514747859182,"state":{"restarts":9},"perf":{"precision":0.9166666666666657,"recall":0.9166666666666657,"f1":0.9166666666666657,"seconds":1.3453885912895203e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":49.265625,"distances_sum":285.9736195728183}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.009514747859182,"state":{"restarts":9},"perf":{"precision":0.9166666666666657,"recall":0.9166666666666657,"f1":0.9166666666666657,"seconds":1.3453885912895203e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":49.265625,"distances_sum":285.9736195728183}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.009514747859182,"state":{"restarts":9},"perf":{"precision":0.9166666666666657,"recall":0.9166666666666657,"f1":0.9166666666666657,"seconds":1.3453885912895203e-5,"exhaustive_search_seconds":4.43682074546814e-6,"evaluations":49.265625,"distances_sum":285.9736195728183}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555545, conf: {"restarts":2}, perf: {"precision":0.8524305555555545,"recall":0.8524305555555545,"f1":0.8524305555555545,"seconds":2.1496787667274475e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":74.046875,"distances_sum":127.45824626274407}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666659, conf: {"restarts":12}, perf: {"precision":0.8541666666666659,"recall":0.8541666666666659,"f1":0.8541666666666659,"seconds":3.616698086261749e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":139.390625,"distances_sum":127.37630038894713}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.847222222222221, conf: {"restarts":1}, perf: {"precision":0.847222222222221,"recall":0.847222222222221,"f1":0.847222222222221,"seconds":1.889839768409729e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":64.03125,"distances_sum":127.92843942530453}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555546, conf: {"restarts":19}, perf: {"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":4.991702735424042e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":183.828125,"distances_sum":126.3058730494231}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444434, conf: {"restarts":15}, perf: {"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":4.1175633668899536e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":158.1875,"distances_sum":127.32123130746186}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777765, conf: {"restarts":10}, perf: {"precision":0.8559027777777765,"recall":0.8559027777777765,"f1":0.8559027777777765,"seconds":3.215856850147247e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":127.203125,"distances_sum":127.28184042312205}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222214, conf: {"restarts":16}, perf: {"precision":0.8550347222222214,"recall":0.8550347222222214,"f1":0.8550347222222214,"seconds":4.1818246245384216e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":164.46875,"distances_sum":127.5237380657345}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444435, conf: {"restarts":14}, perf: {"precision":0.8741319444444435,"recall":0.8741319444444435,"f1":0.8741319444444435,"seconds":4.001893103122711e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":153.0859375,"distances_sum":126.37015938200057}, best_list's length: 9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555546,"state":{"restarts":19},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":4.991702735424042e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":183.828125,"distances_sum":126.3058730494231}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555546,"state":{"restarts":19},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":4.991702735424042e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":183.828125,"distances_sum":126.3058730494231}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8758680555555546,"state":{"restarts":19},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":4.991702735424042e-5,"exhaustive_search_seconds":1.8961727619171143e-5,"evaluations":183.828125,"distances_sum":126.3058730494231}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777769, conf: {"restarts":13}, perf: {"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":8.03433358669281e-5,"exhaustive_search_seconds":0.00024243630468845367,"evaluations":235.3046875,"distances_sum":56.55094812531024}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8480902777777769,"state":{"restarts":13},"perf":{"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":8.03433358669281e-5,"exhaustive_search_seconds":0.00024243630468845367,"evaluations":235.3046875,"distances_sum":56.55094812531024}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8480902777777769,"state":{"restarts":13},"perf":{"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":8.03433358669281e-5,"exhaustive_search_seconds":0.00024243630468845367,"evaluations":235.3046875,"distances_sum":56.55094812531024}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(13), SatNeighborhood(32), 2020-10-20T06:41:54.193
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1923, 0.011773327f0), Item(157, 0.022259135f0), Item(7833, 0.023896743f0), Item(7780, 0.02480757f0), Item(6437, 0.028636564f0), Item(2609, 0.034201205f0), Item(2146, 0.048187535f0), Item(5573, 0.051214665f0), Item(4170, 0.051950507f0), Item(6809, 0.061671417f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0837253057384757, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9464410589410595,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3046875,"distances_sum":531.1860911846161}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0837253057384757,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9464410589410595,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3046875,"distances_sum":531.1860911846161}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0837253057384757,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9464410589410595,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3046875,"distances_sum":531.1860911846161}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.3312302839116725, conf: {"bsize":2}, perf: {"precision":0.9427083333333328,"recall":0.9427083333333328,"f1":0.9427083333333328,"seconds":1.0186806321144104e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":29.71875,"distances_sum":281.85652968659997}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.3312302839116725,"state":{"bsize":2},"perf":{"precision":0.9427083333333328,"recall":0.9427083333333328,"f1":0.9427083333333328,"seconds":1.0186806321144104e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":29.71875,"distances_sum":281.85652968659997}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.3312302839116725,"state":{"bsize":2},"perf":{"precision":0.9427083333333328,"recall":0.9427083333333328,"f1":0.9427083333333328,"seconds":1.0186806321144104e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":29.71875,"distances_sum":281.85652968659997}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.3312302839116725,"state":{"bsize":2},"perf":{"precision":0.9427083333333328,"recall":0.9427083333333328,"f1":0.9427083333333328,"seconds":1.0186806321144104e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":29.71875,"distances_sum":281.85652968659997}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.80757097791798,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":2.0327046513557434e-5,"exhaustive_search_seconds":4.7108158469200134e-5,"evaluations":59.4375,"distances_sum":123.76990916393697}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.80757097791798,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":2.0327046513557434e-5,"exhaustive_search_seconds":4.7108158469200134e-5,"evaluations":59.4375,"distances_sum":123.76990916393697}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.56324582338902, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.1019171476364136e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":108.0234375,"distances_sum":54.95207429304719}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.85873902633679, conf: {"bsize":8}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":3.0307099223136902e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":107.6796875,"distances_sum":54.9670821018517}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.31628592483419, conf: {"bsize":3}, perf: {"precision":0.9730902777777771,"recall":0.9730902777777771,"f1":0.9730902777777771,"seconds":2.6831403374671936e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":106.015625,"distances_sum":55.154820445925}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.31628592483419,"state":{"bsize":3},"perf":{"precision":0.9730902777777771,"recall":0.9730902777777771,"f1":0.9730902777777771,"seconds":2.6831403374671936e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":106.015625,"distances_sum":55.154820445925}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.65560538116591, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.7788802981376648e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":104.53125,"distances_sum":54.970163866877556}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.95438542782794, conf: {"bsize":7}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":3.650598227977753e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":102.078125,"distances_sum":54.970163866877556}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.94688910997168, conf: {"bsize":5}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":4.115886986255646e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":102.0859375,"distances_sum":54.98278545960784}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.59579385255373, conf: {"bsize":4}, perf: {"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":4.032813012599945e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":101.4140625,"distances_sum":55.03408011421561}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.59579385255373,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":4.032813012599945e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":101.4140625,"distances_sum":55.03408011421561}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.59579385255373,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":4.032813012599945e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":101.4140625,"distances_sum":55.03408011421561}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.59579385255373,"state":{"bsize":4},"perf":{"precision":0.9869791666666664,"recall":0.9869791666666664,"f1":0.9869791666666664,"seconds":4.032813012599945e-5,"exhaustive_search_seconds":0.0001970939338207245,"evaluations":101.4140625,"distances_sum":55.03408011421561}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(4), SatNeighborhood(32), 2020-10-20T06:41:57.321
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4109, 0.027236115f0), Item(3581, 0.033603225f0), Item(1995, 0.037587274f0), Item(6565, 0.04617607f0), Item(4316, 0.04871093f0), Item(5967, 0.04880911f0), Item(9008, 0.049764644f0), Item(4280, 0.050480288f0), Item(8328, 0.05070754f0), Item(5483, 0.051641084f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
