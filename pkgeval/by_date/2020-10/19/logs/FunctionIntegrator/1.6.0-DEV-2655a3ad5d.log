Julia Version 1.6.0-DEV.1276
Commit 2655a3ad5d (2020-10-18 19:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_BBk0WZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_BBk0WZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.225800 seconds (293.33 k allocations: 13.820 MiB, 88.35% compilation time)
Running: chebyshev_quadrature with k=1
  1.225633 seconds (2.25 M allocations: 130.718 MiB, 3.76% gc time, 97.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.164805 seconds (417.67 k allocations: 24.234 MiB, 83.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.225839 seconds (483.51 k allocations: 27.382 MiB, 86.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.223454 seconds (427.02 k allocations: 23.920 MiB, 5.01% gc time, 88.37% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 28.350116 seconds (35.47 M allocations: 2.979 GiB, 10.28% gc time, 77.87% compilation time)
Running: laguerre_quadrature with k=1
  2.064920 seconds (3.24 M allocations: 182.161 MiB, 3.34% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.176456 seconds (211.51 k allocations: 12.243 MiB, 10.39% gc time, 99.10% compilation time)
Running: lobatto_quadrature
  0.294016 seconds (340.23 k allocations: 20.682 MiB, 99.29% compilation time)
Running: radau_quadrature
  0.343273 seconds (462.16 k allocations: 28.356 MiB, 6.05% gc time, 99.33% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 40.184241 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.084498 seconds (173.35 k allocations: 3.888 MiB, 26.32% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 41.852377 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time, 0.07% compilation time)
Running: rombergs_method
  0.289995 seconds (741.74 k allocations: 43.156 MiB, 6.23% gc time, 99.41% compilation time)
Running: simpsons_rule
  0.023433 seconds (48.04 k allocations: 2.633 MiB, 93.93% compilation time)
Running: simpsons38_rule
  0.050978 seconds (111.42 k allocations: 5.953 MiB, 97.43% compilation time)
Running: trapezoidal_rule
  0.277955 seconds (1.72 M allocations: 28.727 MiB, 4.95% gc time, 15.87% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.060564 seconds (30.72 k allocations: 1.831 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.367082 seconds (295.68 k allocations: 15.754 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.117698 seconds (94.22 k allocations: 2.707 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.131945 seconds (82.47 k allocations: 2.508 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.131149 seconds (65.08 k allocations: 2.154 MiB, 98.75% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.891442 seconds (511.34 k allocations: 162.389 MiB, 3.93% gc time, 14.35% compilation time)
Running: legendre_quadrature
  0.165789 seconds (42.19 k allocations: 2.448 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.022539 seconds (16.16 k allocations: 1.007 MiB, 99.37% compilation time)
Running: radau_quadrature
  0.018395 seconds (16.27 k allocations: 1.014 MiB, 99.13% compilation time)
Running: rectangle_rule_left
 12.544858 seconds (471.41 M allocations: 7.025 GiB, 4.41% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.646211 seconds (476.96 M allocations: 7.107 GiB, 6.13% gc time)
Running: rombergs_method
  0.303582 seconds (334.47 k allocations: 19.162 MiB, 99.88% compilation time)
Running: simpsons_rule
  0.000014 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.067614 seconds (19.43 k allocations: 1.184 MiB, 99.90% compilation time)
Running: trapezoidal_rule
  0.043112 seconds (16.97 k allocations: 1.034 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018677 seconds (1.03 k allocations: 34.125 KiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=1
  0.102777 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.089121 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.081628 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.076758 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.288233 seconds (369.80 k allocations: 19.527 MiB, 99.36% compilation time)
Running: legendre_quadrature
  0.084548 seconds (1.28 k allocations: 65.891 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000082 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000345 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000334 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072484 seconds (1.04 k allocations: 56.469 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000018 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022769 seconds (923 allocations: 39.281 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.015999 seconds (44.29 k allocations: 702.859 KiB, 91.58% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.109907 seconds (83.49 k allocations: 5.003 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.236362 seconds (235.65 k allocations: 13.387 MiB, 10.85% gc time, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.204128 seconds (289.13 k allocations: 16.379 MiB, 98.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.242143 seconds (239.80 k allocations: 13.536 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=4
  0.170052 seconds (239.80 k allocations: 13.470 MiB, 8.49% gc time, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.674858 seconds (455.41 k allocations: 163.924 MiB, 11.44% gc time, 14.11% compilation time)
Running: legendre_quadrature
  0.139501 seconds (190.36 k allocations: 11.088 MiB, 10.10% gc time, 98.66% compilation time)
Running: lobatto_quadrature
  0.164120 seconds (202.03 k allocations: 11.834 MiB, 91.36% compilation time)
Running: radau_quadrature
  0.122053 seconds (202.03 k allocations: 11.815 MiB, 98.50% compilation time)
Running: rectangle_rule_left
  0.581024 seconds (19.37 k allocations: 1.189 MiB, 3.09% compilation time)
Running: rectangle_rule_midpoint
  0.043256 seconds (25.55 k allocations: 1.616 MiB, 99.64% compilation time)
Running: rectangle_rule_right
  0.556337 seconds (17.90 k allocations: 1.099 MiB, 3.97% compilation time)
Running: rombergs_method
  0.199500 seconds (137.77 k allocations: 8.025 MiB, 98.42% compilation time)
Running: simpsons_rule
  0.044232 seconds (37.98 k allocations: 2.442 MiB, 51.20% gc time, 99.56% compilation time)
Running: simpsons38_rule
  0.036980 seconds (43.94 k allocations: 2.785 MiB, 99.50% compilation time)
Running: trapezoidal_rule
  0.051247 seconds (43.20 k allocations: 1.730 MiB, 98.70% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.040834 seconds (68.44 k allocations: 3.060 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.295297 seconds (242.24 k allocations: 13.478 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.154091 seconds (296.17 k allocations: 16.376 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=3
  0.168981 seconds (246.37 k allocations: 13.538 MiB, 7.20% gc time, 98.50% compilation time)
Running: chebyshev_quadrature with k=4
  0.151479 seconds (246.37 k allocations: 13.521 MiB, 98.91% compilation time)
Running: hermite_quadrature with k=2
 16.872809 seconds (20.49 M allocations: 1.088 GiB, 9.09% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.494861 seconds (464.58 k allocations: 50.141 MiB, 27.31% gc time, 62.02% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.231692 seconds (282.35 k allocations: 15.726 MiB, 18.55% gc time, 98.53% compilation time)
Running: legendre_quadrature
  0.227760 seconds (196.90 k allocations: 11.440 MiB, 99.01% compilation time)
Running: lobatto_quadrature
  0.483252 seconds (222.69 k allocations: 37.593 MiB, 35.07% gc time, 59.26% compilation time)
Running: radau_quadrature
  0.339821 seconds (219.27 k allocations: 30.275 MiB, 6.73% gc time, 94.28% compilation time)
Running: rectangle_rule_left
  0.028269 seconds (22.28 k allocations: 1.333 MiB, 99.50% compilation time)
Running: rectangle_rule_midpoint
  0.022586 seconds (27.36 k allocations: 1.703 MiB, 99.38% compilation time)
Running: rectangle_rule_right
  0.021027 seconds (19.02 k allocations: 1.153 MiB, 99.37% compilation time)
Running: rombergs_method
  0.214248 seconds (140.11 k allocations: 8.066 MiB, 98.90% compilation time)
Running: simpsons_rule
  0.025202 seconds (45.46 k allocations: 2.710 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.029900 seconds (58.91 k allocations: 3.170 MiB, 98.67% compilation time)
Running: trapezoidal_rule
  0.021173 seconds (29.23 k allocations: 1.655 MiB, 98.89% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.089741 seconds (52.41 k allocations: 2.720 MiB, 57.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.313321 seconds (237.76 k allocations: 13.243 MiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.224202 seconds (291.35 k allocations: 16.145 MiB, 6.95% gc time, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.190317 seconds (241.90 k allocations: 13.330 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.186925 seconds (241.91 k allocations: 13.331 MiB, 98.85% compilation time)
Running: hermite_quadrature with k=2
  0.144093 seconds (175.13 k allocations: 10.127 MiB, 14.04% gc time, 98.50% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  7.140031 seconds (457.85 k allocations: 1.176 GiB, 28.02% gc time, 5.16% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.190727 seconds (277.64 k allocations: 15.553 MiB, 98.19% compilation time)
Running: legendre_quadrature
  0.184500 seconds (192.47 k allocations: 11.190 MiB, 10.68% gc time, 98.81% compilation time)
Running: lobatto_quadrature
  0.218377 seconds (213.45 k allocations: 23.320 MiB, 92.46% compilation time)
Running: radau_quadrature
  0.235866 seconds (212.60 k allocations: 21.251 MiB, 5.67% gc time, 65.44% compilation time)
Running: rectangle_rule_left
  0.017439 seconds (20.07 k allocations: 1.228 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.023903 seconds (26.25 k allocations: 1.652 MiB, 99.55% compilation time)
Running: rectangle_rule_right
  0.016493 seconds (17.87 k allocations: 1.098 MiB, 99.31% compilation time)
Running: rombergs_method
  0.090143 seconds (135.95 k allocations: 7.880 MiB, 97.45% compilation time)
Running: simpsons_rule
  0.027703 seconds (40.80 k allocations: 2.541 MiB, 77.08% compilation time)
Running: simpsons38_rule
  0.049793 seconds (49.73 k allocations: 2.931 MiB, 99.47% compilation time)
Running: trapezoidal_rule
  0.036402 seconds (24.14 k allocations: 1.492 MiB, 99.42% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024638 seconds (40.61 k allocations: 2.580 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.197012 seconds (236.14 k allocations: 13.461 MiB, 12.00% gc time, 98.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.196819 seconds (289.64 k allocations: 16.487 MiB, 98.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.157305 seconds (240.28 k allocations: 13.548 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.189873 seconds (240.28 k allocations: 13.373 MiB, 13.98% gc time, 98.75% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.346540 seconds (455.94 k allocations: 194.968 MiB, 4.28% gc time, 20.67% compilation time)
Running: legendre_quadrature
  0.191618 seconds (190.86 k allocations: 11.114 MiB, 98.82% compilation time)
Running: lobatto_quadrature
  0.210992 seconds (202.52 k allocations: 11.840 MiB, 98.83% compilation time)
Running: radau_quadrature
  0.262834 seconds (202.53 k allocations: 11.853 MiB, 7.17% gc time, 99.08% compilation time)
Running: rectangle_rule_left
  0.386225 seconds (19.89 k allocations: 1.214 MiB, 17.73% compilation time)
Running: rectangle_rule_midpoint
  0.021765 seconds (25.89 k allocations: 1.634 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.258620 seconds (18.24 k allocations: 1.118 MiB, 43.89% compilation time)
Running: rombergs_method
  0.251150 seconds (149.07 k allocations: 8.786 MiB, 92.65% compilation time)
Running: simpsons_rule
  0.029026 seconds (38.61 k allocations: 2.470 MiB, 99.37% compilation time)
Running: simpsons38_rule
  0.025010 seconds (44.65 k allocations: 2.815 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.016109 seconds (44.13 k allocations: 1.763 MiB, 96.07% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.083212 seconds (40.35 k allocations: 2.510 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.202391 seconds (236.73 k allocations: 13.422 MiB, 10.96% gc time, 98.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.194959 seconds (290.27 k allocations: 16.392 MiB, 97.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.206168 seconds (240.88 k allocations: 13.470 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.257922 seconds (240.88 k allocations: 13.561 MiB, 10.52% gc time, 98.94% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.814610 seconds (456.66 k allocations: 149.653 MiB, 3.30% gc time, 32.22% compilation time)
Running: legendre_quadrature
  0.237547 seconds (191.45 k allocations: 11.126 MiB, 99.01% compilation time)
Running: lobatto_quadrature
  0.233212 seconds (203.13 k allocations: 11.867 MiB, 98.88% compilation time)
Running: radau_quadrature
  0.413396 seconds (203.12 k allocations: 11.860 MiB, 4.07% gc time, 99.42% compilation time)
Running: rectangle_rule_left
  0.765653 seconds (20.14 k allocations: 1.227 MiB, 4.50% compilation time)
Running: rectangle_rule_midpoint
  0.060118 seconds (25.89 k allocations: 1.635 MiB, 99.61% compilation time)
Running: rectangle_rule_right
  0.728412 seconds (18.20 k allocations: 1.115 MiB, 3.25% compilation time)
Running: rombergs_method
  0.133950 seconds (138.99 k allocations: 8.144 MiB, 95.49% compilation time)
Running: simpsons_rule
  0.026939 seconds (39.09 k allocations: 2.489 MiB, 90.59% compilation time)
Running: simpsons38_rule
  0.031773 seconds (45.35 k allocations: 2.842 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.095463 seconds (56.28 k allocations: 1.959 MiB, 98.91% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.230750 seconds (152.11 k allocations: 9.115 MiB, 99.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.143586 seconds (70.34 k allocations: 2.237 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.156837 seconds (105.50 k allocations: 2.900 MiB, 97.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.155269 seconds (92.98 k allocations: 2.686 MiB, 98.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.175058 seconds (72.52 k allocations: 2.280 MiB, 98.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.820918 seconds (486.27 k allocations: 168.259 MiB, 3.56% gc time, 24.24% compilation time)
Running: legendre_quadrature
  0.138022 seconds (19.14 k allocations: 1.125 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000134 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000057 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.633732 seconds (590.00 M allocations: 8.792 GiB, 6.21% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.401247 seconds (592.75 M allocations: 8.833 GiB, 5.88% gc time)
Running: rombergs_method
  0.141843 seconds (20.91 k allocations: 1.197 MiB, 99.56% compilation time)
Running: simpsons_rule
  0.000038 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.050243 seconds (463 allocations: 22.578 KiB, 99.75% compilation time)
Running: trapezoidal_rule
  0.019514 seconds (171 allocations: 7.859 KiB, 99.33% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.935220 seconds (209.94 M allocations: 3.138 GiB, 1.73% gc time, 1.21% compilation time)
Running: chebyshev_quadrature with k=1
  0.702345 seconds (422.98 k allocations: 23.679 MiB, 92.12% compilation time)
Running: chebyshev_quadrature with k=2
 17.475747 seconds (478.55 k allocations: 4.041 GiB, 3.49% gc time, 3.36% compilation time)
Running: chebyshev_quadrature with k=3
  7.945708 seconds (254.26 k allocations: 1.642 GiB, 3.64% gc time, 2.54% compilation time)
Running: chebyshev_quadrature with k=4
 11.189895 seconds (254.25 k allocations: 2.261 GiB, 1.85% gc time, 1.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.831965 seconds (493.50 k allocations: 13.255 GiB, 5.90% gc time, 1.68% compilation time)
Running: legendre_quadrature.
  9.277798 seconds (228.90 k allocations: 1.976 GiB, 1.40% gc time, 2.57% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.160507 seconds (8.24 M allocations: 13.384 GiB, 9.63% gc time, 0.81% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.605778 seconds (7.24 M allocations: 13.369 GiB, 19.41% gc time, 2.03% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.679306 seconds (22.89 k allocations: 1.394 MiB, 0.21% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.052298 seconds (31.46 k allocations: 1.956 MiB, 0.25% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.525707 seconds (23.09 k allocations: 1.403 MiB, 0.54% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.876882 seconds (448.68 k allocations: 153.514 MiB, 1.91% gc time, 9.88% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.787962 seconds (200.04 M allocations: 2.983 GiB, 2.21% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.650685 seconds (600.05 M allocations: 8.944 GiB, 5.98% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.767665 seconds (600.03 M allocations: 8.943 GiB, 4.06% gc time, 0.10% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.067212 seconds (111.10 k allocations: 4.244 MiB, 95.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.222890 seconds (252.71 k allocations: 13.877 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.211541 seconds (277.25 k allocations: 14.964 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.374766 seconds (224.24 k allocations: 11.980 MiB, 27.29% gc time, 66.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.155490 seconds (224.24 k allocations: 11.976 MiB, 99.14% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.333834 seconds (395.24 k allocations: 35.564 MiB, 93.30% compilation time)
Running: laguerre_quadrature with k=2
  0.165325 seconds (185.19 k allocations: 10.841 MiB, 76.75% compilation time)
Running: legendre_quadrature
  0.121337 seconds (149.17 k allocations: 8.338 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.022562 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.021845 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.049051 seconds (19.35 k allocations: 1.157 MiB, 69.37% compilation time)
Running: rectangle_rule_midpoint
  0.038778 seconds (26.33 k allocations: 1.636 MiB, 60.04% compilation time)
Running: rectangle_rule_right
  0.063334 seconds (17.96 k allocations: 1.084 MiB, 72.80% compilation time)
Running: rombergs_method
  0.210980 seconds (176.09 k allocations: 10.168 MiB, 98.70% compilation time)
Running: simpsons_rule
  0.000512 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.084337 seconds (80.36 k allocations: 3.492 MiB, 98.82% compilation time)
Running: trapezoidal_rule
  0.116292 seconds (2.39 M allocations: 37.744 MiB, 32.27% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000654 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.104529 seconds (2.46 k allocations: 1.691 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=2
  0.113062 seconds (2.71 k allocations: 2.355 MiB, 97.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.099494 seconds (2.31 k allocations: 2.028 MiB, 96.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.107993 seconds (2.31 k allocations: 1.469 MiB, 97.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.302412 seconds (372.07 k allocations: 905.349 MiB, 5.37% gc time, 5.85% compilation time)
Running: legendre_quadrature
  0.066242 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000155 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000109 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.744684 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000352 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.781082 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.067911 seconds (993 allocations: 56.609 KiB, 99.66% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000979 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000141 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.108963 seconds (2.53 k allocations: 579.203 KiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.109848 seconds (2.79 k allocations: 780.188 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.102071 seconds (2.39 k allocations: 661.047 KiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.095403 seconds (2.39 k allocations: 491.547 KiB, 99.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.364332 seconds (378.63 k allocations: 253.507 MiB, 26.93% compilation time)
Running: legendre_quadrature
  0.078705 seconds (1.32 k allocations: 67.859 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000075 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000030 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.258819 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000127 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.264246 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074656 seconds (1.21 k allocations: 64.875 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000501 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
