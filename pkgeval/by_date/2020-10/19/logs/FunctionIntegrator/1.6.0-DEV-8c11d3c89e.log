Julia Version 1.6.0-DEV.1284
Commit 8c11d3c89e (2020-10-19 22:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_e0qlOW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_e0qlOW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.145363 seconds (293.25 k allocations: 13.816 MiB, 6.78% gc time, 91.03% compilation time)
Running: chebyshev_quadrature with k=1
  0.840343 seconds (2.24 M allocations: 130.392 MiB, 3.76% gc time, 98.33% compilation time)
Running: chebyshev_quadrature with k=2
  0.144409 seconds (417.67 k allocations: 24.212 MiB, 81.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.162566 seconds (483.51 k allocations: 27.401 MiB, 5.25% gc time, 87.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.151629 seconds (427.02 k allocations: 23.926 MiB, 5.50% gc time, 90.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 20.088162 seconds (35.45 M allocations: 2.978 GiB, 11.60% gc time, 76.94% compilation time)
Running: laguerre_quadrature with k=1
  1.513913 seconds (3.24 M allocations: 182.175 MiB, 2.87% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.133332 seconds (211.52 k allocations: 12.244 MiB, 14.04% gc time, 98.78% compilation time)
Running: lobatto_quadrature
  0.198117 seconds (340.08 k allocations: 20.676 MiB, 99.06% compilation time)
Running: radau_quadrature
  0.246476 seconds (461.84 k allocations: 28.339 MiB, 6.48% gc time, 99.26% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 34.463880 seconds (100.02 M allocations: 1.491 GiB, 0.41% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.085010 seconds (173.35 k allocations: 3.888 MiB, 31.08% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 38.427260 seconds (100.02 M allocations: 1.491 GiB, 0.47% gc time, 0.08% compilation time)
Running: rombergs_method
  0.548560 seconds (741.46 k allocations: 43.156 MiB, 4.97% gc time, 99.58% compilation time)
Running: simpsons_rule
  0.027981 seconds (48.04 k allocations: 2.633 MiB, 92.32% compilation time)
Running: simpsons38_rule
  0.090792 seconds (111.38 k allocations: 5.951 MiB, 93.20% compilation time)
Running: trapezoidal_rule
  0.373191 seconds (1.72 M allocations: 28.725 MiB, 4.70% gc time, 26.75% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.063988 seconds (30.73 k allocations: 1.831 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.409038 seconds (295.62 k allocations: 15.751 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.117905 seconds (94.22 k allocations: 2.707 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.124743 seconds (82.47 k allocations: 2.508 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.153648 seconds (65.08 k allocations: 2.155 MiB, 98.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.905077 seconds (510.99 k allocations: 162.371 MiB, 15.24% gc time, 23.94% compilation time)
Running: legendre_quadrature
  0.125610 seconds (42.20 k allocations: 2.449 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.018519 seconds (16.18 k allocations: 1.008 MiB, 99.21% compilation time)
Running: radau_quadrature
  0.117020 seconds (16.28 k allocations: 1.015 MiB, 99.88% compilation time)
Running: rectangle_rule_left
 11.083349 seconds (471.41 M allocations: 7.025 GiB, 6.94% gc time)
Running: rectangle_rule_midpoint
  0.000011 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.379623 seconds (476.96 M allocations: 7.107 GiB, 7.43% gc time)
Running: rombergs_method
  0.320389 seconds (334.34 k allocations: 19.156 MiB, 1.06% gc time, 99.83% compilation time)
Running: simpsons_rule
  0.000023 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.128000 seconds (19.43 k allocations: 1.184 MiB, 99.92% compilation time)
Running: trapezoidal_rule
  0.047779 seconds (16.97 k allocations: 1.034 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015828 seconds (1.03 k allocations: 34.125 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.083503 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.095193 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.094925 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.083377 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.305147 seconds (369.35 k allocations: 19.520 MiB, 9.24% gc time, 99.39% compilation time)
Running: legendre_quadrature
  0.058046 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000338 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000231 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000327 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.054064 seconds (1.04 k allocations: 56.469 KiB, 99.71% compilation time)
Running: simpsons_rule
  0.000013 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.013616 seconds (923 allocations: 39.281 KiB, 99.76% compilation time)
Running: trapezoidal_rule
  0.014445 seconds (44.29 k allocations: 702.859 KiB, 91.39% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.028966 seconds (83.49 k allocations: 5.003 MiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=1
  0.108568 seconds (235.65 k allocations: 13.387 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.201843 seconds (289.14 k allocations: 16.383 MiB, 30.21% gc time, 99.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.132983 seconds (239.80 k allocations: 13.536 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.186541 seconds (239.80 k allocations: 13.470 MiB, 99.03% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.979655 seconds (454.96 k allocations: 163.917 MiB, 7.09% gc time, 18.73% compilation time)
Running: legendre_quadrature
  0.191624 seconds (190.37 k allocations: 11.091 MiB, 99.32% compilation time)
Running: lobatto_quadrature
  0.114931 seconds (201.88 k allocations: 11.811 MiB, 98.78% compilation time)
Running: radau_quadrature
  0.158956 seconds (201.88 k allocations: 11.823 MiB, 8.02% gc time, 99.02% compilation time)
Running: rectangle_rule_left
  0.540855 seconds (19.37 k allocations: 1.189 MiB, 4.14% compilation time)
Running: rectangle_rule_midpoint
  0.021692 seconds (25.55 k allocations: 1.616 MiB, 99.26% compilation time)
Running: rectangle_rule_right
  0.444883 seconds (17.90 k allocations: 1.099 MiB, 5.65% compilation time)
Running: rombergs_method
  0.199033 seconds (137.77 k allocations: 8.025 MiB, 98.85% compilation time)
Running: simpsons_rule
  0.015311 seconds (37.98 k allocations: 2.442 MiB, 99.01% compilation time)
Running: simpsons38_rule
  0.016996 seconds (43.94 k allocations: 2.785 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.017214 seconds (43.20 k allocations: 1.730 MiB, 96.79% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037831 seconds (68.44 k allocations: 3.060 MiB, 97.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.175306 seconds (242.24 k allocations: 13.474 MiB, 9.92% gc time, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.139877 seconds (296.17 k allocations: 16.435 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.127090 seconds (246.37 k allocations: 13.523 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.148833 seconds (246.37 k allocations: 13.520 MiB, 8.62% gc time, 95.82% compilation time)
Running: hermite_quadrature with k=2
 11.573225 seconds (20.49 M allocations: 1.088 GiB, 8.09% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.550329 seconds (464.13 k allocations: 50.165 MiB, 33.67% gc time, 60.10% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.179830 seconds (282.35 k allocations: 15.726 MiB, 98.52% compilation time)
Running: legendre_quadrature
  0.157941 seconds (196.90 k allocations: 11.440 MiB, 10.31% gc time, 98.61% compilation time)
Running: lobatto_quadrature
  0.225034 seconds (222.54 k allocations: 37.584 MiB, 8.01% gc time, 88.66% compilation time)
Running: radau_quadrature
  0.154330 seconds (219.12 k allocations: 30.267 MiB, 87.39% compilation time)
Running: rectangle_rule_left
  0.022604 seconds (22.28 k allocations: 1.333 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.039675 seconds (27.36 k allocations: 1.703 MiB, 99.66% compilation time)
Running: rectangle_rule_right
  0.022087 seconds (19.02 k allocations: 1.153 MiB, 99.39% compilation time)
Running: rombergs_method
  0.123917 seconds (140.11 k allocations: 8.066 MiB, 97.83% compilation time)
Running: simpsons_rule
  0.051345 seconds (45.46 k allocations: 2.710 MiB, 43.80% gc time, 99.53% compilation time)
Running: simpsons38_rule
  0.042503 seconds (58.91 k allocations: 3.170 MiB, 61.71% compilation time)
Running: trapezoidal_rule
  0.026218 seconds (29.23 k allocations: 1.655 MiB, 99.06% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.019148 seconds (52.41 k allocations: 2.720 MiB, 98.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.153179 seconds (237.76 k allocations: 13.243 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.164845 seconds (291.35 k allocations: 16.145 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.215483 seconds (241.90 k allocations: 13.330 MiB, 29.51% gc time, 99.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.158266 seconds (241.91 k allocations: 13.332 MiB, 98.61% compilation time)
Running: hermite_quadrature with k=2
  0.112299 seconds (175.13 k allocations: 10.130 MiB, 98.26% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.141036 seconds (457.40 k allocations: 1.175 GiB, 18.05% gc time, 8.30% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.144607 seconds (277.64 k allocations: 15.553 MiB, 6.71% gc time, 98.24% compilation time)
Running: legendre_quadrature
  0.205608 seconds (192.47 k allocations: 11.190 MiB, 89.35% compilation time)
Running: lobatto_quadrature
  0.300024 seconds (213.30 k allocations: 23.311 MiB, 4.34% gc time, 96.01% compilation time)
Running: radau_quadrature
  0.182167 seconds (212.45 k allocations: 21.244 MiB, 91.47% compilation time)
Running: rectangle_rule_left
  0.015168 seconds (20.07 k allocations: 1.228 MiB, 99.24% compilation time)
Running: rectangle_rule_midpoint
  0.033265 seconds (26.25 k allocations: 1.652 MiB, 99.64% compilation time)
Running: rectangle_rule_right
  0.019866 seconds (17.87 k allocations: 1.098 MiB, 99.34% compilation time)
Running: rombergs_method
  0.109554 seconds (135.95 k allocations: 7.879 MiB, 97.96% compilation time)
Running: simpsons_rule
  0.019018 seconds (40.80 k allocations: 2.541 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.029638 seconds (49.73 k allocations: 2.931 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.017755 seconds (24.14 k allocations: 1.492 MiB, 98.92% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.026711 seconds (40.61 k allocations: 2.580 MiB, 39.40% gc time, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.137068 seconds (236.14 k allocations: 13.461 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.148752 seconds (289.64 k allocations: 16.491 MiB, 97.76% compilation time)
Running: chebyshev_quadrature with k=3
  0.126611 seconds (240.28 k allocations: 13.548 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.160180 seconds (240.28 k allocations: 13.373 MiB, 98.53% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.788773 seconds (455.50 k allocations: 194.963 MiB, 3.08% gc time, 40.03% compilation time)
Running: legendre_quadrature
  0.107767 seconds (190.86 k allocations: 11.114 MiB, 13.09% gc time, 98.43% compilation time)
Running: lobatto_quadrature
  0.107754 seconds (202.38 k allocations: 11.957 MiB, 98.31% compilation time)
Running: radau_quadrature
  0.110409 seconds (202.38 k allocations: 11.842 MiB, 98.29% compilation time)
Running: rectangle_rule_left
  0.299347 seconds (19.89 k allocations: 1.214 MiB, 5.61% compilation time)
Running: rectangle_rule_midpoint
  0.013559 seconds (25.89 k allocations: 1.634 MiB, 99.19% compilation time)
Running: rectangle_rule_right
  0.159957 seconds (18.24 k allocations: 1.118 MiB, 18.16% compilation time)
Running: rombergs_method
  0.111090 seconds (149.07 k allocations: 8.786 MiB, 97.34% compilation time)
Running: simpsons_rule
  0.013378 seconds (38.61 k allocations: 2.470 MiB, 99.04% compilation time)
Running: simpsons38_rule
  0.023569 seconds (44.65 k allocations: 2.815 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.029540 seconds (44.13 k allocations: 1.763 MiB, 97.85% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.013633 seconds (40.35 k allocations: 2.510 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.160784 seconds (236.73 k allocations: 13.426 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=2
  0.175571 seconds (290.27 k allocations: 16.392 MiB, 97.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.143709 seconds (240.88 k allocations: 13.470 MiB, 12.12% gc time, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.138369 seconds (240.87 k allocations: 13.545 MiB, 98.48% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.432632 seconds (456.21 k allocations: 149.635 MiB, 6.10% gc time, 26.81% compilation time)
Running: legendre_quadrature
  0.110095 seconds (191.45 k allocations: 11.130 MiB, 98.00% compilation time)
Running: lobatto_quadrature
  0.102896 seconds (202.98 k allocations: 11.859 MiB, 98.31% compilation time)
Running: radau_quadrature
  0.115225 seconds (202.97 k allocations: 11.857 MiB, 98.41% compilation time)
Running: rectangle_rule_left
  0.555067 seconds (20.14 k allocations: 1.227 MiB, 3.09% compilation time)
Running: rectangle_rule_midpoint
  0.019318 seconds (25.89 k allocations: 1.635 MiB, 99.12% compilation time)
Running: rectangle_rule_right
  0.633657 seconds (18.20 k allocations: 1.115 MiB, 3.00% compilation time)
Running: rombergs_method
  0.123159 seconds (138.99 k allocations: 8.082 MiB, 97.70% compilation time)
Running: simpsons_rule
  0.031546 seconds (39.09 k allocations: 2.489 MiB, 99.32% compilation time)
Running: simpsons38_rule
  0.029130 seconds (45.35 k allocations: 2.842 MiB, 99.27% compilation time)
Running: trapezoidal_rule
  0.022444 seconds (56.28 k allocations: 1.959 MiB, 94.74% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.148400 seconds (152.11 k allocations: 9.116 MiB, 12.43% gc time, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.135249 seconds (70.34 k allocations: 2.237 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=2
  0.139802 seconds (105.50 k allocations: 2.900 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.155773 seconds (92.98 k allocations: 2.686 MiB, 95.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.169943 seconds (72.52 k allocations: 2.280 MiB, 98.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.948586 seconds (485.92 k allocations: 168.241 MiB, 3.40% gc time, 21.89% compilation time)
Running: legendre_quadrature
  0.100815 seconds (19.14 k allocations: 1.125 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000034 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.452929 seconds (590.00 M allocations: 8.792 GiB, 7.46% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 18.688111 seconds (592.75 M allocations: 8.833 GiB, 7.20% gc time)
Running: rombergs_method
  0.101419 seconds (20.91 k allocations: 1.197 MiB, 99.48% compilation time)
Running: simpsons_rule
  0.000027 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025876 seconds (463 allocations: 22.578 KiB, 99.43% compilation time)
Running: trapezoidal_rule
  0.015198 seconds (171 allocations: 7.859 KiB, 99.24% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.789107 seconds (209.94 M allocations: 3.138 GiB, 2.78% gc time, 0.56% compilation time)
Running: chebyshev_quadrature with k=1
  0.401822 seconds (423.00 k allocations: 23.679 MiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=2
 17.828681 seconds (478.56 k allocations: 4.041 GiB, 2.40% gc time, 2.57% compilation time)
Running: chebyshev_quadrature with k=3
  8.065048 seconds (254.26 k allocations: 1.642 GiB, 3.68% gc time, 2.30% compilation time)
Running: chebyshev_quadrature with k=4
 10.789397 seconds (254.25 k allocations: 2.261 GiB, 1.86% gc time, 1.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 38.733056 seconds (493.06 k allocations: 13.255 GiB, 7.59% gc time, 1.51% compilation time)
Running: legendre_quadrature.
  9.444043 seconds (228.91 k allocations: 1.976 GiB, 1.14% gc time, 2.18% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.525168 seconds (8.24 M allocations: 13.384 GiB, 8.62% gc time, 0.69% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.745435 seconds (7.24 M allocations: 13.369 GiB, 9.51% gc time, 0.83% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.259668 seconds (22.89 k allocations: 1.394 MiB, 0.17% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.853599 seconds (31.46 k allocations: 1.956 MiB, 0.33% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.398311 seconds (23.09 k allocations: 1.403 MiB, 0.31% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.823452 seconds (448.70 k allocations: 153.517 MiB, 1.42% gc time, 11.34% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.746981 seconds (200.04 M allocations: 2.983 GiB, 2.21% gc time, 0.27% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.899354 seconds (600.05 M allocations: 8.944 GiB, 5.77% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.628599 seconds (600.03 M allocations: 8.943 GiB, 4.21% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.063099 seconds (111.10 k allocations: 4.244 MiB, 94.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.181794 seconds (252.71 k allocations: 13.877 MiB, 97.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.217579 seconds (277.26 k allocations: 15.043 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=3
  0.299626 seconds (224.24 k allocations: 11.980 MiB, 44.88% gc time, 99.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.164495 seconds (224.24 k allocations: 11.976 MiB, 99.22% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.319997 seconds (394.79 k allocations: 35.553 MiB, 92.72% compilation time)
Running: laguerre_quadrature with k=2
  0.194521 seconds (185.19 k allocations: 10.841 MiB, 81.14% compilation time)
Running: legendre_quadrature
  0.116940 seconds (149.17 k allocations: 8.338 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.022690 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018469 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.044031 seconds (19.35 k allocations: 1.157 MiB, 60.72% compilation time)
Running: rectangle_rule_midpoint
  0.037321 seconds (26.33 k allocations: 1.636 MiB, 64.11% compilation time)
Running: rectangle_rule_right
  0.037863 seconds (17.96 k allocations: 1.084 MiB, 54.55% compilation time)
Running: rombergs_method
  0.206079 seconds (176.00 k allocations: 10.163 MiB, 98.70% compilation time)
Running: simpsons_rule
  0.000546 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.041242 seconds (80.36 k allocations: 3.492 MiB, 97.28% compilation time)
Running: trapezoidal_rule
  0.119202 seconds (2.39 M allocations: 37.744 MiB, 27.84% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000672 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.114459 seconds (2.46 k allocations: 1.691 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.115802 seconds (2.71 k allocations: 2.355 MiB, 97.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.092945 seconds (2.31 k allocations: 2.028 MiB, 96.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.118185 seconds (2.31 k allocations: 1.469 MiB, 97.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.451119 seconds (371.63 k allocations: 905.326 MiB, 7.50% gc time, 8.06% compilation time)
Running: legendre_quadrature
  0.074366 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000156 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000104 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.579271 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000367 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.286969 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073699 seconds (993 allocations: 56.609 KiB, 99.56% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001115 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000155 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.111044 seconds (2.53 k allocations: 579.203 KiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.106664 seconds (2.79 k allocations: 780.188 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.106645 seconds (2.39 k allocations: 661.047 KiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=4
  0.107842 seconds (2.39 k allocations: 491.547 KiB, 99.43% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.923436 seconds (378.19 k allocations: 253.468 MiB, 37.51% compilation time)
Running: legendre_quadrature
  0.060836 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000039 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.097151 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000130 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.956119 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064259 seconds (1.21 k allocations: 64.875 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000006 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000006 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000240 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
