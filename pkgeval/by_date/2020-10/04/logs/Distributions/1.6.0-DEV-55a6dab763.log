Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed PDMats ─────────────────────── v0.10.1
  Installed Missings ───────────────────── v0.4.4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DataAPI ────────────────────── v1.3.0
  Installed StatsBase ──────────────────── v0.33.1
  Installed Distributions ──────────────── v0.23.12
  Installed Compat ─────────────────────── v3.18.0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed StatsFuns ──────────────────── v0.9.5
  Installed FillArrays ─────────────────── v0.9.6
  Installed QuadGK ─────────────────────── v2.4.1
  Installed OrderedCollections ─────────── v1.3.1
  Installed StaticArrays ───────────────── v0.12.4
  Installed DataStructures ─────────────── v0.18.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [31c24e10] + Distributions v0.23.12
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.18.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.7
  [31c24e10] + Distributions v0.23.12
  [1a297f60] + FillArrays v0.9.6
  [e1d29d7a] + Missings v0.4.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.10.1
  [1fd47b50] + QuadGK v2.4.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Distributions
Status `/tmp/jl_RDBGDZ/Project.toml`
  [49dc2e85] Calculus v0.5.1
  [31c24e10] Distributions v0.23.12
  [1a297f60] FillArrays v0.9.6
  [26cc04aa] FiniteDifferences v0.10.9
  [f6369f11] ForwardDiff v0.10.12
  [09f84164] HypothesisTests v0.10.0
  [682c06a0] JSON v0.21.1
  [90014a1f] PDMats v0.10.1
  [1fd47b50] QuadGK v2.4.1
  [276daf66] SpecialFunctions v0.10.3
  [860ef19b] StableRNGs v1.0.0
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_RDBGDZ/Manifest.toml`
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.11
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.18.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.7
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.12
  [1a297f60] FillArrays v0.9.6
  [26cc04aa] FiniteDifferences v0.10.9
  [f6369f11] ForwardDiff v0.10.12
  [09f84164] HypothesisTests v0.10.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.10.1
  [69de0a69] Parsers v1.0.10
  [1fd47b50] QuadGK v2.4.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [860ef19b] StableRNGs v1.0.0
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running tests:
Test Summary: | Pass  Total
Test arcsine  |   29     29
    [Discrete]
    ------------
    testing Truncated(BetaBinomial(10, 0.2, 0.25),3,5)
    testing Truncated(BetaBinomial(10, 2, 2.5),3,5)
    testing Truncated(BetaBinomial(10, 60, 40),3,5)
    testing Truncated(Binomial(5, 0.4),3,5)
    testing Truncated(Binomial(6, 0.8),3,5)
    testing Truncated(Binomial(100, 0.1),3,5)
    testing Truncated(Binomial(100, 0.9),3,5)
    testing Truncated(Binomial(10, 0.0),3,5)
    testing Truncated(Binomial(10, 1.0),3,5)
    testing Truncated(DiscreteUniform(6),3,5)
    testing Truncated(DiscreteUniform(7),3,5)
    testing Truncated(DiscreteUniform(2, 8),3,5)
    testing Truncated(Geometric(),3,5)
    testing Truncated(Geometric(0.02),3,5)
    testing Truncated(Geometric(0.1),3,5)
    testing Truncated(Geometric(0.5),3,5)
    testing Truncated(Geometric(0.9),3,5)
    testing Truncated(NegativeBinomial(),3,5)
    testing Truncated(NegativeBinomial(6),3,5)
    testing Truncated(NegativeBinomial(1, 0.5),3,5)
    testing Truncated(NegativeBinomial(5, 0.6),3,5)
    testing Truncated(NegativeBinomial(0.5, 0.5),3,5)
    testing Truncated(Poisson(),3,5)
    testing Truncated(Poisson(0.5),3,5)
    testing Truncated(Poisson(2.0),3,5)
    testing Truncated(Poisson(10.0),3,5)
    testing Truncated(Poisson(80.0),3,5)

    [Continuous]
    ------------
    testing Truncated(BetaPrime(),3,5)
    testing Truncated(BetaPrime(3.0),3,5)
    testing Truncated(BetaPrime(3.0, 5.0),3,5)
    testing Truncated(BetaPrime(5.0, 3.0),3,5)
    testing Truncated(Cauchy(),3,5)
    testing Truncated(Cauchy(2.0),3,5)
    testing Truncated(Cauchy(0.0, 1.0),3,5)
    testing Truncated(Cauchy(10.0, 1.0),3,5)
    testing Truncated(Cauchy(2.0, 10.0),3,5)
    testing Truncated(Chi(1),3,5)
    testing Truncated(Chi(2),3,5)
    testing Truncated(Chi(3),3,5)
    testing Truncated(Chi(12),3,5)
    testing Truncated(Chisq(1),3,5)
    testing Truncated(Chisq(8),3,5)
    testing Truncated(Chisq(20),3,5)
    testing Truncated(Erlang(),3,5)
    testing Truncated(Erlang(3),3,5)
    testing Truncated(Erlang(3, 1.0),3,5)
    testing Truncated(Erlang(5, 2.0),3,5)
    testing Truncated(Exponential(),3,5)
    testing Truncated(Exponential(2.0),3,5)
    testing Truncated(Exponential(6.5),3,5)
    testing Truncated(FDist(6.0, 8.0),3,5)
    testing Truncated(FDist(8.0, 6.0),3,5)
    testing Truncated(FDist(30, 40),3,5)
    testing Truncated(Frechet(),3,5)
    testing Truncated(Frechet(0.5),3,5)
    testing Truncated(Frechet(3.0),3,5)
    testing Truncated(Frechet(20.0),3,5)
    testing Truncated(Frechet(60.0),3,5)
    testing Truncated(Frechet(0.5, 2.0),3,5)
    testing Truncated(Frechet(3.0, 2.0),3,5)
    testing Truncated(Gamma(),3,5)
    testing Truncated(Gamma(2.0),3,5)
    testing Truncated(Gamma(1.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 2.0),3,5)
    testing Truncated(GeneralizedExtremeValue(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 1.1),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.6),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.3),3,5)
    testing Truncated(GeneralizedExtremeValue(-1.0, 0.5, 0.6),3,5)
    testing Truncated(GeneralizedPareto(),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(0.1, 2.0),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(-1.5, 0.5, 2.0),3,5)
    testing Truncated(Gumbel(),3,5)
    testing Truncated(Gumbel(3.0),3,5)
    testing Truncated(Gumbel(3.0, 5.0),3,5)
    testing Truncated(Gumbel(5.0, 3.0),3,5)
    testing Truncated(InverseGamma(),3,5)
    testing Truncated(InverseGamma(2.0),3,5)
    testing Truncated(InverseGamma(1.0, 1.0),3,5)
    testing Truncated(InverseGamma(1.0, 2.0),3,5)
    testing Truncated(InverseGamma(2.0, 1.0),3,5)
    testing Truncated(InverseGamma(2.0, 3.0),3,5)
    testing Truncated(InverseGaussian(),3,5)
    testing Truncated(InverseGaussian(0.8),3,5)
    testing Truncated(InverseGaussian(2.0),3,5)
    testing Truncated(InverseGaussian(1.0, 1.0),3,5)
    testing Truncated(InverseGaussian(2.0, 1.5),3,5)
    testing Truncated(InverseGaussian(2.0, 7.0),3,5)
    testing Truncated(Laplace(),3,5)
    testing Truncated(Laplace(2.0),3,5)
    testing Truncated(Laplace(0.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.5),3,5)
    testing Truncated(Levy(),3,5)
    testing Truncated(Levy(2),3,5)
    testing Truncated(Levy(2, 8),3,5)
    testing Truncated(Levy(3.0, 3),3,5)
    testing Truncated(Logistic(),3,5)
    testing Truncated(Logistic(2.0),3,5)
    testing Truncated(Logistic(0.0, 1.0),3,5)
    testing Truncated(Logistic(5.0, 1.0),3,5)
    testing Truncated(Logistic(2.0, 1.5),3,5)
    testing Truncated(Logistic(5.0, 1.5),3,5)
    testing Truncated(LogNormal(),3,5)
    testing Truncated(LogNormal(1.0),3,5)
    testing Truncated(LogNormal(0.0, 2.0),3,5)
    testing Truncated(LogNormal(1.0, 2.0),3,5)
    testing Truncated(LogNormal(3.0, 0.5),3,5)
    testing Truncated(LogNormal(3.0, 1.0),3,5)
    testing Truncated(LogNormal(3.0, 2.0),3,5)
    testing Truncated(NoncentralChisq(2, 2),3,5)
    testing Truncated(NoncentralChisq(2, 5),3,5)
    testing Truncated(NoncentralF(2, 2, 2),3,5)
    testing Truncated(NoncentralF(8, 10, 5),3,5)
    testing Truncated(NoncentralT(2, 2),3,5)
    testing Truncated(NoncentralT(10, 2),3,5)
    testing Truncated(Normal(),3,5)
    testing Truncated(Normal(2.0),3,5)
    testing Truncated(Normal(-3.0, 2.0),3,5)
    testing Truncated(Normal(1.0, 10.0),3,5)
    testing Truncated(NormalCanon(),3,5)
    testing Truncated(NormalCanon(0.0, 1.0),3,5)
    testing Truncated(NormalCanon(-1.0, 2.5),3,5)
    testing Truncated(NormalCanon(2.0, 0.8),3,5)
    testing Truncated(Pareto(),3,5)
    testing Truncated(Pareto(2.0),3,5)
    testing Truncated(Pareto(2.0, 1.5),3,5)
    testing Truncated(Pareto(3.0, 2.0),3,5)
    testing Truncated(Rayleigh(),3,5)
    testing Truncated(Rayleigh(3.0),3,5)
    testing Truncated(Rayleigh(8.0),3,5)
    testing Truncated(StudentizedRange(2.0, 2.0),3,5)
    testing Truncated(StudentizedRange(5.0, 10.0),3,5)
    testing Truncated(StudentizedRange(10.0, 5.0),3,5)
    testing Truncated(SymTriangularDist(3.0, 2.0),3,5)
    testing Truncated(SymTriangularDist(10.0, 8.0),3,5)
    testing Truncated(TDist(1.2),3,5)
    testing Truncated(TDist(5.0),3,5)
    testing Truncated(TDist(28.0),3,5)
    testing Truncated(TriangularDist(0, 5),3,5)
    testing Truncated(TriangularDist(-4, 14, 3),3,5)
    testing Truncated(TriangularDist(2, 2000, 500),3,5)
    testing Truncated(truncated(Normal(27, 3), 0, Inf),3,5)
    testing Truncated(Uniform(3.0, 17.0),3,5)
    testing Truncated(Weibull(),3,5)
    testing Truncated(Weibull(0.5),3,5)
    testing Truncated(Weibull(5.0),3,5)
    testing Truncated(Weibull(20.0, 1.0),3,5)
    testing Truncated(Weibull(1.0, 2.0),3,5)
    testing Truncated(Weibull(5.0, 2.0),3,5)

Test Summary: | Pass  Total
Test truncate | 5230   5230
Test Summary:    | Pass  Total
Test truncnormal |   28     28
Test Summary:              | Pass  Total
Test truncated_exponential |    8      8
┌ Warning: `BigFloat(x::Real, prec::Int)` is deprecated, use `BigFloat(x; precision = prec)` instead.
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
Test normal   |  136    136
Test Summary:  | Pass  Total
Test lognormal |  226    226
Test Summary: | Pass  Total
Test mvnormal | 5834   5834
Test Summary:    | Pass  Total
Test mvlognormal | 1416   1416
Test Summary: | Pass  Total
Test types    |   46     46
Test Summary: | Pass  Total
Test utils    |  904    904
    testing CategoricalDirectSampler
    testing AliasTable
┌ Warning: Assignment to `n` in soft scope is ambiguous because a global variable by the same name exists: `n` will be treated as a new local. Disambiguate by using `local n` to suppress this warning or `global n` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/samplers.jl:55
    testing BinomialGeomSampler
    testing BinomialTPESampler
    testing BinomialPolySampler
    testing BinomialAliasSampler
    testing PoissonCountSampler
    testing PoissonADSampler
    testing PoissBinAliasSampler
    testing ExponentialSampler
    testing GammaGDSampler
    testing GammaMTSampler
    testing GammaGSSampler
    testing GammaIPSampler
Test Summary: | Pass  Total
Test samplers |    2      2
    testing Categorical{Float64, Vector{Float64}}(support=Base.OneTo(2), p=[0.5, 0.5]) as Categorical
    testing Categorical{Float32, Vector{Float32}}(support=Base.OneTo(2), p=Float32[0.5, 0.5]) as Categorical
    testing Categorical{Rational{Int64}, Vector{Rational{Int64}}}(support=Base.OneTo(2), p=Rational{Int64}[1//2, 1//2]) as Categorical
    testing Categorical{Float64, Vector{Float64}}(support=Base.OneTo(4), p=[0.1, 0.3, 0.2, 0.4]) as Categorical
    testing Categorical{Float64, Vector{Float64}}(support=Base.OneTo(3), p=[0.15, 0.25, 0.6]) as Categorical
    testing Categorical{Float64, Vector{Float64}}(support=Base.OneTo(4), p=[0.25, 0.25, 0.25, 0.25]) as Categorical
Test Summary:    | Pass  Total
Test categorical |  354    354
    [Discrete]
    ------------
    testing Bernoulli()
    testing Bernoulli(0.25)
    testing Bernoulli(0.75)
    testing Bernoulli(0.0)
    testing Bernoulli(1.0)
    testing BetaBinomial(2, 0.2, 0.25)
    testing BetaBinomial(10, 0.2, 0.25)
    testing BetaBinomial(10, 2, 2.5)
    testing BetaBinomial(10, 60, 40)
    testing Binomial()
    testing Binomial(3)
    testing Binomial(5, 0.4)
    testing Binomial(6, 0.8)
    testing Binomial(100, 0.1)
    testing Binomial(100, 0.9)
    testing Binomial(10, 0.0)
    testing Binomial(10, 1.0)
    testing DiscreteUniform()
    testing DiscreteUniform(6)
    testing DiscreteUniform(7)
    testing DiscreteUniform(0, 4)
    testing DiscreteUniform(2, 8)
    testing Geometric()
    testing Geometric(0.02)
    testing Geometric(0.1)
    testing Geometric(0.5)
    testing Geometric(0.9)
    testing Hypergeometric(2, 2, 2)
    testing Hypergeometric(3, 2, 2)
    testing Hypergeometric(3, 2, 0)
    testing Hypergeometric(3, 2, 5)
    testing Hypergeometric(4, 5, 6)
    testing Hypergeometric(60, 80, 100)
    testing NegativeBinomial()
    testing NegativeBinomial(6)
    testing NegativeBinomial(1, 0.5)
    testing NegativeBinomial(5, 0.6)
    testing NegativeBinomial(0.5, 0.5)
    testing Poisson()
    testing Poisson(0.0)
    testing Poisson(0.5)
    testing Poisson(2.0)
    testing Poisson(10.0)
    testing Poisson(80.0)
    testing Skellam()
    testing Skellam(2.0)
    testing Skellam(2.0, 3.0)
    testing Skellam(3.2, 1.8)
    testing FisherNoncentralHypergeometric(8, 6, 10, 1)
    testing FisherNoncentralHypergeometric(8, 6, 10, 10)
    testing FisherNoncentralHypergeometric(8, 6, 10, 0.1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 10)
    testing FisherNoncentralHypergeometric(80, 60, 100, 0.1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 10)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 0.1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 0.5)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 2)

    [Continuous]
    ------------
    testing Arcsine()
    testing Arcsine(2.0)
    testing Arcsine(1.0, 2.5)
    testing Arcsine(-1.0, 1.0)
    testing Beta(2.0, 2.0)
    testing Beta(3.0, 4.0)
    testing Beta(17.0, 13.0)
    testing BetaPrime()
    testing BetaPrime(3.0)
    testing BetaPrime(3.0, 5.0)
    testing BetaPrime(5.0, 3.0)
    testing Cauchy()
    testing Cauchy(2.0)
    testing Cauchy(0.0, 1.0)
    testing Cauchy(10.0, 1.0)
    testing Cauchy(2.0, 10.0)
    testing Chi(1)
    testing Chi(2)
    testing Chi(3)
    testing Chi(12)
    testing Chisq(1)
    testing Chisq(8)
    testing Chisq(20)
    testing Cosine()
    testing Cosine(1.5)
    testing Cosine(2.0, 2.8)
    testing Erlang()
    testing Erlang(3)
    testing Erlang(3, 1.0)
    testing Erlang(5, 2.0)
    testing Exponential()
    testing Exponential(2.0)
    testing Exponential(6.5)
    testing FDist(6.0, 8.0)
    testing FDist(8.0, 6.0)
    testing FDist(30, 40)
    testing Frechet()
    testing Frechet(0.5)
    testing Frechet(3.0)
    testing Frechet(20.0)
    testing Frechet(60.0)
    testing Frechet(0.5, 2.0)
    testing Frechet(3.0, 2.0)
    testing Gamma()
    testing Gamma(2.0)
    testing Gamma(1.0, 1.0)
    testing Gamma(3.0, 1.0)
    testing Gamma(3.0, 2.0)
    testing GeneralizedExtremeValue(1.0, 1.0, 1.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 1.1)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.6)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.3)
    testing GeneralizedExtremeValue(1.0, 1.0, -1.0)
    testing GeneralizedExtremeValue(-1.0, 0.5, 0.6)
    testing GeneralizedPareto()
    testing GeneralizedPareto(1.0, 1.0)
    testing GeneralizedPareto(0.1, 2.0)
    testing GeneralizedPareto(1.0, 1.0, 1.0)
    testing GeneralizedPareto(-1.5, 0.5, 2.0)
    testing Gumbel()
    testing Gumbel(3.0)
    testing Gumbel(3.0, 5.0)
    testing Gumbel(5.0, 3.0)
    testing InverseGamma()
    testing InverseGamma(2.0)
    testing InverseGamma(1.0, 1.0)
    testing InverseGamma(1.0, 2.0)
    testing InverseGamma(2.0, 1.0)
    testing InverseGamma(2.0, 3.0)
    testing InverseGaussian()
    testing InverseGaussian(0.8)
    testing InverseGaussian(2.0)
    testing InverseGaussian(1.0, 1.0)
    testing InverseGaussian(2.0, 1.5)
    testing InverseGaussian(2.0, 7.0)
    testing Laplace()
    testing Laplace(2.0)
    testing Laplace(0.0, 1.0)
    testing Laplace(5.0, 1.0)
    testing Laplace(5.0, 1.5)
    testing Levy()
    testing Levy(2)
    testing Levy(2, 8)
    testing Levy(3.0, 3)
    testing Logistic()
    testing Logistic(2.0)
    testing Logistic(0.0, 1.0)
    testing Logistic(5.0, 1.0)
    testing Logistic(2.0, 1.5)
    testing Logistic(5.0, 1.5)
    testing LogNormal()
    testing LogNormal(1.0)
    testing LogNormal(0.0, 2.0)
    testing LogNormal(1.0, 2.0)
    testing LogNormal(3.0, 0.5)
    testing LogNormal(3.0, 1.0)
    testing LogNormal(3.0, 2.0)
    testing NoncentralBeta(2, 2, 0)
    testing NoncentralBeta(2, 6, 5)
    testing NoncentralChisq(2, 2)
    testing NoncentralChisq(2, 5)
    testing NoncentralF(2, 2, 2)
    testing NoncentralF(8, 10, 5)
    testing NoncentralT(2, 2)
    testing NoncentralT(10, 2)
    testing Normal()
    testing Normal(2.0)
    testing Normal(-3.0, 2.0)
    testing Normal(1.0, 10.0)
    testing NormalInverseGaussian(1.7, 1.8, 1.2, 2.3)
    testing NormalCanon()
    testing NormalCanon(0.0, 1.0)
    testing NormalCanon(-1.0, 2.5)
    testing NormalCanon(2.0, 0.8)
    testing Pareto()
    testing Pareto(2.0)
    testing Pareto(2.0, 1.5)
    testing Pareto(3.0, 2.0)
    testing Rayleigh()
    testing Rayleigh(3.0)
    testing Rayleigh(8.0)
    testing StudentizedRange(2.0, 2.0)
    testing StudentizedRange(5.0, 10.0)
    testing StudentizedRange(10.0, 5.0)
    testing SymTriangularDist()
    testing SymTriangularDist(3.0)
    testing SymTriangularDist(3.0, 0.5)
    testing SymTriangularDist(3.0, 2.0)
    testing SymTriangularDist(10.0, 8.0)
    testing TDist(1.2)
    testing TDist(5.0)
    testing TDist(28.0)
    testing TriangularDist(0, 5)
    testing TriangularDist(-7, 2)
    testing TriangularDist(-4, 14, 3)
    testing TriangularDist(2, 2000, 500)
    testing TriangularDist(1, 3, 2)
    testing truncated(Normal(0, 1), -2, 2)
    testing truncated(Normal(3, 10), 7, 8)
    testing truncated(Normal(27, 3), 0, Inf)
    testing truncated(Normal(-5, 1), -Inf, -10)
    testing truncated(Normal(1.8, 1.2), -Inf, 0)
    testing Uniform()
    testing Uniform(0.0, 2.0)
    testing Uniform(3.0, 17.0)
    testing Uniform(3.0, 3.1)
    testing VonMises()
    testing VonMises(4.0)
    testing VonMises(1.1, 2.5)
    testing Weibull()
    testing Weibull(0.5)
    testing Weibull(5.0)
    testing Weibull(20.0, 1.0)
    testing Weibull(1.0, 2.0)
    testing Weibull(5.0, 2.0)

Test Summary:    |    Pass    Total
Test univariates | 2973099  2973099
Test Summary:   |  Pass  Total
Test continuous | 96197  96197
Test Summary:  | Pass  Total
Test edgecases |   12     12
Test Summary: | Pass  Total
Test fit      |  606    606
Test Summary:    | Pass  Total
Test multinomial |  960    960
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/binomial.jl:11
┌ Warning: Assignment to `rng` in soft scope is ambiguous because a global variable by the same name exists: `rng` will be treated as a new local. Disambiguate by using `local rng` to suppress this warning or `global rng` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/binomial.jl:19
Test Summary: | Pass  Total
Test binomial | 2977   2977
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/poissonbinomial.jl:9
   testing PoissonBinomial p=0.8, n=6
   testing PoissonBinomial p=0.5, n=10
   testing PoissonBinomial p=0.04, n=20
┌ Warning: Assignment to `n` in soft scope is ambiguous because a global variable by the same name exists: `n` will be treated as a new local. Disambiguate by using `local n` to suppress this warning or `global n` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/poissonbinomial.jl:45
┌ Warning: Assignment to `p` in soft scope is ambiguous because a global variable by the same name exists: `p` will be treated as a new local. Disambiguate by using `local p` to suppress this warning or `global p` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/poissonbinomial.jl:46
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/poissonbinomial.jl:50
┌ Warning: Assignment to `m` in soft scope is ambiguous because a global variable by the same name exists: `m` will be treated as a new local. Disambiguate by using `local m` to suppress this warning or `global m` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/poissonbinomial.jl:68
   testing PoissonBinomial [10 × 0.1, 10 × 0.5, 10 × 0.9]
   testing PoissonBinomial [1 × 0.99, 10 × 0.1, 100 × 0.05]
   testing PoissonBinomial [5 × 0.01, 1 × 0.99, 3 × 0.999]
   testing PoissonBinomial [10 × 0.0, 7 × 0.9, 10 × 0.5]
Test Summary:        | Pass  Total
Test poissonbinomial |  413    413
Test Summary:  | Pass  Total
Test dirichlet |  866    866
Test Summary:             | Pass  Total
Test dirichletmultinomial |   84     84
Test Summary:    | Pass  Total
Test logitnormal |  243    243
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/mvtdist.jl:27
┌ Warning: Assignment to `d` in soft scope is ambiguous because a global variable by the same name exists: `d` will be treated as a new local. Disambiguate by using `local d` to suppress this warning or `global d` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/mvtdist.jl:57
Test Summary: | Pass  Total
Test mvtdist  |   58     58
Test Summary:   | Pass  Total
Test kolmogorov |    9      9
Test Summary:  | Pass  Total
Test edgeworth | 1485   1485
Test Summary:       | Pass  Total
Test matrixreshaped |  280    280
┌ Warning: Assignment to `n` in soft scope is ambiguous because a global variable by the same name exists: `n` will be treated as a new local. Disambiguate by using `local n` to suppress this warning or `global n` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/matrixvariates.jl:515
┌ Warning: Assignment to `p` in soft scope is ambiguous because a global variable by the same name exists: `p` will be treated as a new local. Disambiguate by using `local p` to suppress this warning or `global p` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/matrixvariates.jl:515
┌ Warning: Assignment to `M` in soft scope is ambiguous because a global variable by the same name exists: `M` will be treated as a new local. Disambiguate by using `local M` to suppress this warning or `global M` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/HjzA0/test/matrixvariates.jl:515
    testing MatrixNormal
    testing Wishart
    testing InverseWishart
    testing MatrixTDist
    testing MatrixBeta
    testing MatrixFDist
    testing LKJ
Test Summary:       | Pass  Total
Test matrixvariates |  530    530
Test Summary:       |  Pass  Total
Test vonmisesfisher | 24220  24220
Test Summary:   | Pass  Total
Test conversion |    3      3
Test Summary:    | Pass  Total
Test convolution |  289    289
Test Summary: |  Pass  Total
Test mixture  | 38172  38172
Test Summary:   | Pass  Total
Test gradlogpdf |   14     14
Test Summary:    | Pass  Total
Test noncentralt |    6      6
Test Summary:      | Pass  Total
Test locationscale |  322    322
Test Summary:        | Pass  Total
Test quantile_newton |    2      2
Test Summary:   | Pass  Total
Test semicircle |   28     28
Test Summary: | Pass  Total
Test qq       |    6      6
Test Summary:             | Pass  Total
Test pgeneralizedgaussian |  212    212
Test Summary: | Pass  Total
Test product  |   46     46
Test Summary:              | Pass  Total
Test discretenonparametric |  238    238
Test Summary:    | Pass  Total
Test functionals |    3      3
Test Summary: | Pass  Total
Test chernoff |  141    141
Test Summary:          | Pass  Total
Test univariate_bounds |  156    156
Test Summary:         | Pass  Total
Test negativebinomial | 3302   3302
Test Summary:  | Pass  Total
Test bernoulli |    2      2
Test Summary: | Pass  Total
Test soliton  |   20     20
Test Summary:   | Pass  Total
Test skewnormal |   18     18
Potentially stale exports: 
Tuple{Method, Method}[]
    Testing Distributions tests passed 
