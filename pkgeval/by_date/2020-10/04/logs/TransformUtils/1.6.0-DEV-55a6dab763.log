Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_IOCDb0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_IOCDb0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.13146078014811866 0.031170296962727436; 0.13146078014811866 0.0 -0.15971827492286317; -0.031170296962727436 0.15971827492286317 0.0])
dAA = so3([0.0 -0.06700088577449997 -0.0287253772451084; 0.06700088577449997 0.0 0.24516633610269092; 0.0287253772451084 -0.24516633610269092 0.0])
dAA = so3([0.0 -0.01779341956814525 -0.1523451883992681; 0.01779341956814525 0.0 0.08488842033710661; 0.1523451883992681 -0.08488842033710661 0.0])
dAA = Quaternion(0.9974509097704596, [-0.06284533810858942, -0.032878610385314866, 0.007819402485500213])
dAA = SO3([0.9867906381407556 0.04753725050524278 -0.1548691263362791; -0.053767237748947996 0.99789391884283 -0.03628788890729089; 0.15281793292218257 0.044135434187301 0.987268323621542])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9839511211539789 -0.1350505351926728 -0.11662565808603474; 0.17758666608681536 0.804923618953717 0.5661810167063368; 0.017411697447347482 -0.5778056079639795 0.8159886716109348]), [1.5971827492286317, 0.31170296962727434, 1.3146078014811866])
xj = SE3(SO3([0.985868404931425 -0.023100718561738766 -0.16592120105610125; 0.07366478765447579 0.9493292604886998 0.3055281562144466; 0.15045593114858857 -0.313433106071949 0.93761543332024]), [-0.8488842033710661, -1.523451883992681, 0.1779341956814525])
Dx = SE3(SO3([0.98574789954243 0.1404008380476576 -0.0926751488976546; -0.16078180901633482 0.9483607147462594 -0.2734248792911848; 0.04950038825223388 0.2844284785345511 0.9574184832983947]), [-2.752500769556145, -0.49004045119482975, -1.6812684584184105])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
