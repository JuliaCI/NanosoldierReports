Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_bTmmg3/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_bTmmg3/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172335061126625
curgen: 20 fitness: 0.2172335061126625
curgen: 30 fitness: 0.2172335061126625
curgen: 40 fitness: 0.2172335061126625
curgen: 50 fitness: 0.2172335061126625
CoordinateCreature{Vector{Float64}}([-0.22249565516336123], -0.2172335061126625) -0.22249565516336123 -0.2172335061126625
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257949339705278
curgen: 100 fitness: 3.258226417163457
curgen: 150 fitness: 3.2582855945742675
curgen: 200 fitness: 3.258286898614809
curgen: 250 fitness: 3.2583856808839555
curgen: 300 fitness: 3.2584105767219307
curgen: 350 fitness: 3.2584180752000496
curgen: 400 fitness: 3.258448014099966
curgen: 450 fitness: 3.258448014099966
curgen: 500 fitness: 3.258448014099966
CoordinateCreature{Vector{Float64}}([-0.22185387177696483, -0.2226625705153556, -0.2229831707180733, 0.22245179157683745, -0.222265445872081, 0.2224085843965282, 0.22247746209519334, 0.222656764708081, 0.22243911066368635, 0.22308935865045104, -0.222588342974573, -0.22259018035825087, -0.22218975197533608, -0.2225344876096428, 0.22271038149137704], -3.258448014099966) [-0.22185387177696483, -0.2226625705153556, -0.2229831707180733, 0.22245179157683745, -0.222265445872081, 0.2224085843965282, 0.22247746209519334, 0.222656764708081, 0.22243911066368635, 0.22308935865045104, -0.222588342974573, -0.22259018035825087, -0.22218975197533608, -0.2225344876096428, 0.22271038149137704] -3.258448014099966
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003435027519600453
curgen: 100 fitness: -0.003394601050814572
curgen: 150 fitness: -0.003135411563476964
curgen: 200 fitness: -0.002648214278025307
curgen: 250 fitness: -0.002280464601000176
curgen: 300 fitness: -0.001959142065089736
curgen: 350 fitness: -0.0019380064455845059
curgen: 400 fitness: -0.0016400706448393976
curgen: 450 fitness: -0.0012818484483716475
curgen: 500 fitness: -0.0012557314940977449
CoordinateCreature{Vector{Float64}}([-0.0010370565476111068, -3.5483492436681844e-5, 0.0012722969825926594, -3.1453971547537596e-5, 0.0002434178859264867, 0.000953311074409828, -0.000232008607011155, 0.0008756039995910291, 6.212562018979295e-5, -0.0002685262746302887, -7.740142123012478e-5, 0.0002552408675613625, -0.0012901737756944984, -0.00011594931636713279, -0.0001394056332595802], 0.0012557314940977449) [-0.0010370565476111068, -3.5483492436681844e-5, 0.0012722969825926594, -3.1453971547537596e-5, 0.0002434178859264867, 0.000953311074409828, -0.000232008607011155, 0.0008756039995910291, 6.212562018979295e-5, -0.0002685262746302887, -7.740142123012478e-5, 0.0002552408675613625, -0.0012901737756944984, -0.00011594931636713279, -0.0001394056332595802] 0.0012557314940977449
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
