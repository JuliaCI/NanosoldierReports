Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_1JxiBX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_1JxiBX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.234075 seconds (379.85 k allocations: 15.435 MiB, 91.89% compilation time)
Running: chebyshev_quadrature with k=1
  1.355876 seconds (2.20 M allocations: 126.704 MiB, 4.92% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.203411 seconds (409.38 k allocations: 23.554 MiB, 83.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.278234 seconds (473.74 k allocations: 26.611 MiB, 8.75% gc time, 88.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.251714 seconds (418.55 k allocations: 23.255 MiB, 5.38% gc time, 91.41% compilation time)
Running: jacobi_quadrature with α=β=1
 28.295760 seconds (36.42 M allocations: 3.001 GiB, 11.60% gc time, 82.28% compilation time)
Running: laguerre_quadrature with k=1
  2.574815 seconds (3.17 M allocations: 177.077 MiB, 3.65% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.160012 seconds (206.29 k allocations: 11.844 MiB, 98.87% compilation time)
Running: lobatto_quadrature
  0.272239 seconds (329.56 k allocations: 19.899 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.294270 seconds (448.31 k allocations: 27.356 MiB, 7.35% gc time, 99.27% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.108625 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.093342 seconds (172.46 k allocations: 3.827 MiB, 24.22% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 48.107253 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time, 0.05% compilation time)
Running: rombergs_method
  0.476853 seconds (722.97 k allocations: 41.724 MiB, 6.55% gc time, 99.45% compilation time)
Running: simpsons_rule
  0.071965 seconds (45.77 k allocations: 2.043 MiB, 97.23% compilation time)
Running: simpsons38_rule
  0.078650 seconds (108.46 k allocations: 5.749 MiB, 97.21% compilation time)
Running: trapezoidal_rule
  0.215266 seconds (1.51 M allocations: 25.669 MiB, 6.43% gc time, 27.89% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.073324 seconds (30.98 k allocations: 1.865 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.358490 seconds (290.36 k allocations: 15.353 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.135914 seconds (93.80 k allocations: 2.675 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.137665 seconds (82.06 k allocations: 2.476 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.136711 seconds (64.67 k allocations: 2.122 MiB, 98.76% compilation time)
Running: jacobi_quadrature with α=β=1
  1.256161 seconds (503.77 k allocations: 161.805 MiB, 10.62% gc time, 31.99% compilation time)
Running: legendre_quadrature
  0.153433 seconds (41.35 k allocations: 2.384 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.017329 seconds (15.74 k allocations: 1003.794 KiB, 99.10% compilation time)
Running: radau_quadrature
  0.017200 seconds (15.85 k allocations: 1011.009 KiB, 99.19% compilation time)
Running: rectangle_rule_left
 13.975126 seconds (471.41 M allocations: 7.025 GiB, 4.24% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.169192 seconds (476.96 M allocations: 7.107 GiB, 4.17% gc time)
Running: rombergs_method
  0.333217 seconds (326.52 k allocations: 18.531 MiB, 99.88% compilation time)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.053755 seconds (18.91 k allocations: 1.146 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.051221 seconds (17.40 k allocations: 1.054 MiB, 99.82% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025517 seconds (1.99 k allocations: 53.594 KiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.097067 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.082771 seconds (2.71 k allocations: 124.266 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.102578 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.099514 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.275643 seconds (363.64 k allocations: 18.980 MiB, 99.33% compilation time)
Running: legendre_quadrature
  0.065910 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000037 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000342 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000236 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000338 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072097 seconds (1.04 k allocations: 56.531 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000022 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023886 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.019958 seconds (44.33 k allocations: 704.859 KiB, 93.50% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.045374 seconds (72.31 k allocations: 4.214 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.167867 seconds (230.61 k allocations: 12.965 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.205816 seconds (283.17 k allocations: 15.881 MiB, 13.15% gc time, 98.45% compilation time)
Running: chebyshev_quadrature with k=3
  0.149818 seconds (234.76 k allocations: 13.133 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.147108 seconds (234.76 k allocations: 13.083 MiB, 98.63% compilation time)
Running: jacobi_quadrature with α=β=1
  1.168778 seconds (446.72 k allocations: 163.188 MiB, 4.74% gc time, 23.16% compilation time)
Running: legendre_quadrature
  0.116732 seconds (185.44 k allocations: 10.724 MiB, 98.60% compilation time)
Running: lobatto_quadrature
  0.187691 seconds (196.61 k allocations: 11.411 MiB, 10.03% gc time, 99.05% compilation time)
Running: radau_quadrature
  0.150619 seconds (196.61 k allocations: 11.409 MiB, 98.69% compilation time)
Running: rectangle_rule_left
  0.655146 seconds (18.82 k allocations: 1.147 MiB, 3.83% compilation time)
Running: rectangle_rule_midpoint
  0.020551 seconds (24.67 k allocations: 1.555 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.653851 seconds (17.39 k allocations: 1.065 MiB, 3.49% compilation time)
Running: rombergs_method
  0.184755 seconds (134.27 k allocations: 7.759 MiB, 98.59% compilation time)
Running: simpsons_rule
  0.031238 seconds (27.54 k allocations: 1.729 MiB, 99.46% compilation time)
Running: simpsons38_rule
  0.025311 seconds (42.37 k allocations: 2.678 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.032883 seconds (44.10 k allocations: 1.772 MiB, 97.96% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.035738 seconds (99.53 k allocations: 2.979 MiB, 83.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.185921 seconds (237.20 k allocations: 13.059 MiB, 9.76% gc time, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.176126 seconds (290.20 k allocations: 15.871 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.170383 seconds (241.33 k allocations: 13.117 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.249922 seconds (241.34 k allocations: 13.121 MiB, 7.72% gc time, 99.26% compilation time)
Running: hermite_quadrature with k=2
 12.154702 seconds (20.10 M allocations: 1.056 GiB, 9.77% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.344259 seconds (455.90 k allocations: 49.401 MiB, 9.02% gc time, 82.63% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.294674 seconds (276.26 k allocations: 15.306 MiB, 10.13% gc time, 98.85% compilation time)
Running: legendre_quadrature
  0.176958 seconds (191.98 k allocations: 11.070 MiB, 98.66% compilation time)
Running: lobatto_quadrature
  0.195681 seconds (217.27 k allocations: 37.185 MiB, 12.93% gc time, 84.12% compilation time)
Running: radau_quadrature
  0.155165 seconds (213.85 k allocations: 29.846 MiB, 87.36% compilation time)
Running: rectangle_rule_left
  0.020492 seconds (21.73 k allocations: 1.293 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.031159 seconds (26.47 k allocations: 1.642 MiB, 99.53% compilation time)
Running: rectangle_rule_right
  0.027483 seconds (18.50 k allocations: 1.117 MiB, 99.51% compilation time)
Running: rombergs_method
  0.135597 seconds (136.74 k allocations: 7.808 MiB, 15.44% gc time, 98.25% compilation time)
Running: simpsons_rule
  0.060485 seconds (39.38 k allocations: 2.061 MiB, 99.55% compilation time)
Running: simpsons38_rule
  0.028197 seconds (57.34 k allocations: 3.063 MiB, 98.96% compilation time)
Running: trapezoidal_rule
  0.023268 seconds (30.13 k allocations: 1.697 MiB, 98.88% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028989 seconds (59.92 k allocations: 2.280 MiB, 96.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.129776 seconds (232.72 k allocations: 12.826 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.215178 seconds (285.38 k allocations: 15.643 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.222162 seconds (236.87 k allocations: 12.928 MiB, 14.24% gc time, 99.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.158864 seconds (236.87 k allocations: 12.929 MiB, 98.65% compilation time)
Running: hermite_quadrature with k=2
  0.138786 seconds (170.78 k allocations: 9.790 MiB, 98.45% compilation time)
Running: jacobi_quadrature with α=β=1
  5.460524 seconds (449.16 k allocations: 1.175 GiB, 16.40% gc time, 8.28% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.184416 seconds (271.55 k allocations: 15.063 MiB, 98.38% compilation time)
Running: legendre_quadrature
  0.133390 seconds (187.55 k allocations: 10.817 MiB, 98.46% compilation time)
Running: lobatto_quadrature
  0.195059 seconds (208.03 k allocations: 22.917 MiB, 8.87% gc time, 93.26% compilation time)
Running: radau_quadrature
  0.256928 seconds (207.18 k allocations: 20.844 MiB, 95.15% compilation time)
Running: rectangle_rule_left
  0.024087 seconds (19.52 k allocations: 1.188 MiB, 97.91% compilation time)
Running: rectangle_rule_midpoint
  0.020347 seconds (25.36 k allocations: 1.591 MiB, 99.25% compilation time)
Running: rectangle_rule_right
  0.017143 seconds (17.36 k allocations: 1.062 MiB, 99.13% compilation time)
Running: rombergs_method
  0.139267 seconds (132.58 k allocations: 7.622 MiB, 98.29% compilation time)
Running: simpsons_rule
  0.026085 seconds (31.90 k allocations: 1.853 MiB, 99.12% compilation time)
Running: simpsons38_rule
  0.027707 seconds (48.16 k allocations: 2.821 MiB, 99.04% compilation time)
Running: trapezoidal_rule
  0.024309 seconds (25.05 k allocations: 1.535 MiB, 99.21% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023654 seconds (30.87 k allocations: 1.875 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.157938 seconds (231.10 k allocations: 13.043 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.264338 seconds (283.67 k allocations: 15.986 MiB, 12.53% gc time, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.201538 seconds (235.25 k allocations: 13.146 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.251019 seconds (235.25 k allocations: 12.971 MiB, 99.06% compilation time)
Running: jacobi_quadrature with α=β=1
  1.695126 seconds (447.26 k allocations: 194.247 MiB, 6.83% gc time, 29.99% compilation time)
Running: legendre_quadrature
  0.125416 seconds (185.93 k allocations: 10.745 MiB, 98.11% compilation time)
Running: lobatto_quadrature
  0.156526 seconds (197.11 k allocations: 11.441 MiB, 98.23% compilation time)
Running: radau_quadrature
  0.185756 seconds (197.11 k allocations: 11.444 MiB, 11.73% gc time, 98.72% compilation time)
Running: rectangle_rule_left
  0.341784 seconds (19.34 k allocations: 1.173 MiB, 6.80% compilation time)
Running: rectangle_rule_midpoint
  0.019291 seconds (25.01 k allocations: 1.573 MiB, 99.24% compilation time)
Running: rectangle_rule_right
  0.156302 seconds (17.73 k allocations: 1.081 MiB, 14.22% compilation time)
Running: rombergs_method
  0.111163 seconds (145.02 k allocations: 8.483 MiB, 96.94% compilation time)
Running: simpsons_rule
  0.024359 seconds (28.23 k allocations: 1.758 MiB, 99.19% compilation time)
Running: simpsons38_rule
  0.024694 seconds (43.08 k allocations: 2.708 MiB, 98.90% compilation time)
Running: trapezoidal_rule
  0.020143 seconds (45.03 k allocations: 1.805 MiB, 96.96% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026693 seconds (31.64 k allocations: 1.826 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=1
  0.170143 seconds (231.69 k allocations: 12.988 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.203121 seconds (284.30 k allocations: 15.891 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.166050 seconds (235.84 k allocations: 13.071 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.171696 seconds (235.84 k allocations: 13.142 MiB, 11.49% gc time, 98.43% compilation time)
Running: jacobi_quadrature with α=β=1
  1.002566 seconds (447.97 k allocations: 148.916 MiB, 5.64% gc time, 39.82% compilation time)
Running: legendre_quadrature
  0.109368 seconds (186.53 k allocations: 10.750 MiB, 97.94% compilation time)
Running: lobatto_quadrature
  0.129883 seconds (197.71 k allocations: 11.460 MiB, 98.27% compilation time)
Running: radau_quadrature
  0.143187 seconds (197.70 k allocations: 11.454 MiB, 98.32% compilation time)
Running: rectangle_rule_left
  0.731733 seconds (19.59 k allocations: 1.186 MiB, 3.48% compilation time)
Running: rectangle_rule_midpoint
  0.021066 seconds (25.01 k allocations: 1.574 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.701411 seconds (17.69 k allocations: 1.078 MiB, 3.10% compilation time)
Running: rombergs_method
  0.113580 seconds (135.49 k allocations: 7.815 MiB, 15.00% gc time, 97.34% compilation time)
Running: simpsons_rule
  0.031017 seconds (28.93 k allocations: 1.785 MiB, 99.44% compilation time)
Running: simpsons38_rule
  0.037372 seconds (43.78 k allocations: 2.734 MiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.021646 seconds (57.27 k allocations: 2.006 MiB, 96.00% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.145297 seconds (146.69 k allocations: 8.789 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.147427 seconds (69.93 k allocations: 2.205 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.142953 seconds (105.09 k allocations: 2.868 MiB, 97.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.147966 seconds (92.57 k allocations: 2.654 MiB, 97.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.140908 seconds (72.10 k allocations: 2.248 MiB, 98.23% compilation time)
Running: jacobi_quadrature with α=β=1
  0.744541 seconds (480.01 k allocations: 167.749 MiB, 8.43% gc time, 51.96% compilation time)
Running: legendre_quadrature
  0.130594 seconds (18.73 k allocations: 1.094 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 25.117598 seconds (590.00 M allocations: 8.792 GiB, 6.11% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 25.526246 seconds (592.75 M allocations: 8.833 GiB, 6.08% gc time)
Running: rombergs_method
  0.118259 seconds (20.51 k allocations: 1.167 MiB, 99.47% compilation time)
Running: simpsons_rule
  0.000024 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025624 seconds (463 allocations: 22.578 KiB, 99.46% compilation time)
Running: trapezoidal_rule
  0.020002 seconds (179 allocations: 8.766 KiB, 99.45% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.438851 seconds (629.32 M allocations: 9.387 GiB, 5.01% gc time, 0.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.410644 seconds (414.19 k allocations: 22.968 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=2
 17.939914 seconds (468.83 k allocations: 4.040 GiB, 2.83% gc time, 2.26% compilation time)
Running: chebyshev_quadrature with k=3
  8.158824 seconds (249.12 k allocations: 1.642 GiB, 3.59% gc time, 1.83% compilation time)
Running: chebyshev_quadrature with k=4
 11.156932 seconds (249.12 k allocations: 2.260 GiB, 2.07% gc time, 1.46% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.294169 seconds (484.24 k allocations: 13.254 GiB, 6.64% gc time, 1.13% compilation time)
Running: legendre_quadrature.
  9.532781 seconds (223.45 k allocations: 1.976 GiB, 1.38% gc time, 2.25% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.900316 seconds (8.23 M allocations: 13.383 GiB, 8.18% gc time, 0.68% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.808009 seconds (7.23 M allocations: 13.369 GiB, 8.74% gc time, 0.57% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.793569 seconds (22.25 k allocations: 1.347 MiB, 0.17% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.666575 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.546545 seconds (22.45 k allocations: 1.357 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.804076 seconds (438.30 k allocations: 152.743 MiB, 2.14% gc time, 9.25% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.605501 seconds (600.04 M allocations: 8.943 GiB, 5.73% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.248645 seconds (600.05 M allocations: 8.943 GiB, 5.92% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.247343 seconds (600.03 M allocations: 8.943 GiB, 5.72% gc time, 0.10% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.041983 seconds (180.45 k allocations: 4.404 MiB, 87.03% compilation time)
Running: chebyshev_quadrature with k=1
  0.165040 seconds (247.70 k allocations: 13.465 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.154241 seconds (272.34 k allocations: 14.523 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.147300 seconds (220.25 k allocations: 11.631 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.161733 seconds (220.25 k allocations: 11.626 MiB, 99.16% compilation time)
Running: jacobi_quadrature with α=β=1
  0.322936 seconds (388.84 k allocations: 34.971 MiB, 92.92% compilation time)
Running: laguerre_quadrature with k=2
  0.183882 seconds (180.54 k allocations: 10.477 MiB, 79.91% compilation time)
Running: legendre_quadrature
  0.108481 seconds (145.99 k allocations: 8.082 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.020713 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019343 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.043504 seconds (18.88 k allocations: 1.122 MiB, 58.68% compilation time)
Running: rectangle_rule_midpoint
  0.028472 seconds (25.48 k allocations: 1.576 MiB, 68.34% compilation time)
Running: rectangle_rule_right
  0.039799 seconds (17.48 k allocations: 1.049 MiB, 56.71% compilation time)
Running: rombergs_method
  0.300748 seconds (172.64 k allocations: 9.887 MiB, 33.65% gc time, 99.08% compilation time)
Running: simpsons_rule
  0.000744 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.039860 seconds (78.86 k allocations: 3.385 MiB, 97.33% compilation time)
Running: trapezoidal_rule
  0.097159 seconds (2.39 M allocations: 37.691 MiB, 29.40% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001226 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.114414 seconds (2.46 k allocations: 1.691 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=2
  0.110999 seconds (2.71 k allocations: 2.355 MiB, 97.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.103965 seconds (2.31 k allocations: 2.028 MiB, 96.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.101690 seconds (2.31 k allocations: 1.469 MiB, 97.81% compilation time)
Running: jacobi_quadrature with α=β=1
  3.724563 seconds (365.92 k allocations: 904.797 MiB, 8.54% gc time, 7.44% compilation time)
Running: legendre_quadrature
  0.068257 seconds (1.27 k allocations: 68.203 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000164 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000111 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.769006 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000350 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.761376 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064004 seconds (997 allocations: 56.672 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000595 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000296 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.111282 seconds (2.53 k allocations: 579.203 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.094415 seconds (2.79 k allocations: 780.188 KiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=3
  0.099938 seconds (2.39 k allocations: 661.047 KiB, 98.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.117489 seconds (2.39 k allocations: 491.547 KiB, 98.68% compilation time)
Running: jacobi_quadrature with α=β=1
  1.908049 seconds (372.48 k allocations: 252.962 MiB, 15.64% gc time, 21.40% compilation time)
Running: legendre_quadrature
  0.072353 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000043 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.274236 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000126 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.280195 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.072651 seconds (1.21 k allocations: 64.938 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000290 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
