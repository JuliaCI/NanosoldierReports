Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed SortingAlgorithms â”€â”€ v0.3.1
   Installed OrderedCollections â”€ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
     Testing SimilaritySearch
Status `/tmp/jl_QguY1Z/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_QguY1Z/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(4, 0.02974248f0), Item(8, 0.05632949f0), Item(39, 0.057445765f0), Item(36, 0.08482921f0)])
Vsorted = Item[Item(4, 0.02974248f0), Item(8, 0.05632949f0), Item(39, 0.057445765f0), Item(36, 0.08482921f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0025521993637084963, 0.0025094985961914063, 301.0, 50.5264356918633))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.002215854326883952, 0.0030080318450927735, 301.0, 73.56886208057404))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0027216116587320963, 0.0022252639134724933, 301.0, 40.86735141277313))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0026472965876261395, 0.0027001301447550454, 301.0, 9.418257148296107))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0022959470748901366, 0.002604103088378906, 301.0, 45.73775597475469))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.2625923156738283e-5, 1.479784647623698e-5, 301.0, 180.62075755745173))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 1.7730394999186196e-5, 0.012080796559651693, 300.0, 27.044818908907473)
p = PerformanceResult(1.0, 1.0, 1.0, 1.7595291137695312e-5, 1.1531511942545573e-5, 300.0, 27.044818908907473)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00222934087117513, 0.001802666982014974, 300.0, 1.5325895513160503)
p = PerformanceResult(1.0, 1.0, 1.0, 2.1306673685709637e-5, 1.1070569356282551e-5, 300.0, 1.5325895513160503)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 1.7730394999186196e-5, 0.012080796559651693, 300.0, 27.044818908907473), PerformanceResult(1.0, 1.0, 1.0, 1.7595291137695312e-5, 1.1531511942545573e-5, 300.0, 27.044818908907473), PerformanceResult(1.0, 1.0, 1.0, 0.00222934087117513, 0.001802666982014974, 300.0, 1.5325895513160503), PerformanceResult(1.0, 1.0, 1.0, 2.1306673685709637e-5, 1.1070569356282551e-5, 300.0, 1.5325895513160503))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0046994527180989586, 0.0021329323450724282, 349.26666666666665, 28560.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0046381394068400065, 0.002193633715311686, 303.8333333333333, 6995.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2103716532389323e-5, 5.698204040527343e-6, 96.76666666666667, 50.5264356918633))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0037422180175782e-5, 4.728635152180989e-6, 85.3, 73.54540812969208))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2882550557454427e-5, 5.563100179036458e-6, 91.2, 40.86735141277313))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.2514661153157553e-5, 4.543463389078776e-5, 96.56666666666666, 45.73775597475469))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8099999999999999, 0.8099999999999999, 0.8099999999999999, 1.0116895039876301e-5, 1.2834866841634115e-5, 70.76666666666667, 191.3415156379342))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-18T06:08:01.690
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9080000000000003, 0.9080000000000003, NaN, 9.12189483642578e-6, 9.21010971069336e-6, 154.6, 49.738201198284514))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 8.914470672607422e-6, 6.411075592041016e-6, 158.6, 0.0))
*** advance 1 from 1000; 2020-10-18T06:08:02.192
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8882500000000003, 0.8870000000000001, 0.8875555555555559, 8.23974609375e-6, 8.65936279296875e-6, 152.67, 75.05388031154871))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 7.996559143066406e-6, 6.008148193359375e-6, 156.49, 0.0))
*** advance 1 from 1000; 2020-10-18T06:08:02.572
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9180000000000001, 0.9180000000000001, 0.9180000000000001, 1.0132789611816406e-5, 1.1219978332519532e-5, 153.2, 39.89081462752074))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 8.647441864013673e-6, 8.041858673095702e-6, 156.99, 0.0))
*** advance 1 from 1000; 2020-10-18T06:08:03.008
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9250000000000002, 0.9250000000000002, 0.9250000000000002, 3.418207168579102e-5, 0.00018383026123046874, 154.15, 44.477318014833145))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.9399394989013672e-5, 0.000158538818359375, 157.94, 0.0))
*** advance 1 from 1000; 2020-10-18T06:08:03.360
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8710000000000002, 0.8710000000000002, 0.8710000000000002, 1.2814998626708984e-5, 3.674030303955078e-5, 152.92, 199.96092772623524))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 1.2447834014892578e-5, 3.6058425903320315e-5, 156.75, 0.0))
*** advance 1 from 1000; 2020-10-18T06:08:03.829
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9080000000000003, 0.9080000000000003, NaN, 1.384258270263672e-5, 2.596139907836914e-5, 154.6, 49.74803135113325))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.1763572692871095e-5, 3.412961959838867e-5, 158.6, 0.017143195000244305))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:04.903
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7490000000000001, 0.7490000000000001, 0.7490000000000001, 0.0009344744682312011, 5.7530403137207034e-5, 200.49, 188.61666874587536))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:05.436
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.746, 0.746, 0.746, 0.0009618854522705078, 4.377126693725586e-5, 203.8, 107.9809547290206))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:05.946
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6079999999999999, 0.6079999999999999, 0.6079999999999999, 0.0008790659904479981, 4.5928955078125e-5, 245.93, 3.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:06.448
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.926, 0.926, 0.926, 0.0008970379829406738, 8.170604705810548e-6, 218.51, 609.2000203877687))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:07.019
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6089999999999998, 0.6089999999999998, 0.6089999999999998, 0.0010058236122131347, 0.0001610088348388672, 262.03, 2322.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:07.567
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3710000000000001, 0.3710000000000001, NaN, 0.001099987030029297, 0.00015582799911499024, 244.48, 3648.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-18T06:08:08.154
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6289999999999999, 0.6289999999999999, 0.6289999999999999, 0.0008933687210083008, 1.1339187622070313e-5, 252.63, 2343.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0676552363299354, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.96075434981685,"seconds":2.0470470190048218e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.4296875,"distances_sum":604.8658082932234}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0676552363299354,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.96075434981685,"seconds":2.0470470190048218e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.4296875,"distances_sum":604.8658082932234}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.084745762711864, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9518429487179492,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.296875,"distances_sum":590.2766901701689}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.084745762711864,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9518429487179492,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.296875,"distances_sum":590.2766901701689}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.084745762711864,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9518429487179492,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.296875,"distances_sum":590.2766901701689}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.084745762711864,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9518429487179492,"seconds":2.5257468223571777e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.296875,"distances_sum":590.2766901701689}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555545, conf: {"restarts":10}, perf: {"precision":0.8758680555555545,"recall":0.8758680555555545,"f1":0.8758680555555545,"seconds":1.0503455996513367e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":53.15625,"distances_sum":298.86555034667253}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8802083333333321, conf: {"restarts":8}, perf: {"precision":0.8802083333333321,"recall":0.8802083333333321,"f1":0.8802083333333321,"seconds":9.870156645774841e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":49.3828125,"distances_sum":297.91171807795763}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8802083333333321,"state":{"restarts":8},"perf":{"precision":0.8802083333333321,"recall":0.8802083333333321,"f1":0.8802083333333321,"seconds":9.870156645774841e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":49.3828125,"distances_sum":297.91171807795763}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8888888888888878, conf: {"restarts":9}, perf: {"precision":0.8888888888888878,"recall":0.8888888888888878,"f1":0.8888888888888878,"seconds":1.1995434761047363e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":50.8359375,"distances_sum":298.0264588519931}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5965730124732267, conf: {"restarts":15}, perf: {"precision":0.904513888888888,"recall":0.904513888888888,"f1":0.904513888888888,"seconds":1.5364959836006165e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":62.0078125,"distances_sum":296.29848029464483}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6376324631687775, conf: {"restarts":14}, perf: {"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":1.5234574675559998e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":60.453125,"distances_sum":295.16420440375805}, best_list's length: 8, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6376324631687775,"state":{"restarts":14},"perf":{"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":1.5234574675559998e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":60.453125,"distances_sum":295.16420440375805}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6993428992892587, conf: {"restarts":13}, perf: {"precision":0.9097222222222212,"recall":0.9097222222222212,"f1":0.9097222222222212,"seconds":1.3597309589385986e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":58.2578125,"distances_sum":295.515675149858}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6993428992892587,"state":{"restarts":13},"perf":{"precision":0.9097222222222212,"recall":0.9097222222222212,"f1":0.9097222222222212,"seconds":1.3597309589385986e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":58.2578125,"distances_sum":295.515675149858}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.6993428992892587,"state":{"restarts":13},"perf":{"precision":0.9097222222222212,"recall":0.9097222222222212,"f1":0.9097222222222212,"seconds":1.3597309589385986e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":58.2578125,"distances_sum":295.515675149858}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444431, conf: {"restarts":21}, perf: {"precision":0.8585069444444431,"recall":0.8585069444444431,"f1":null,"seconds":3.123842179775238e-5,"exhaustive_search_seconds":1.105479896068573e-5,"evaluations":193.796875,"distances_sum":128.01066435221583}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111102, conf: {"restarts":23}, perf: {"precision":0.8611111111111102,"recall":0.8611111111111102,"f1":0.8611111111111102,"seconds":3.930926322937012e-5,"exhaustive_search_seconds":1.105479896068573e-5,"evaluations":203.453125,"distances_sum":126.88780849520117}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777767, conf: {"restarts":10}, perf: {"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":2.3730099201202393e-5,"exhaustive_search_seconds":1.105479896068573e-5,"evaluations":127.8515625,"distances_sum":126.58003340754658}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8637152777777767,"state":{"restarts":10},"perf":{"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":2.3730099201202393e-5,"exhaustive_search_seconds":1.105479896068573e-5,"evaluations":127.8515625,"distances_sum":126.58003340754658}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8637152777777767,"state":{"restarts":10},"perf":{"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":2.3730099201202393e-5,"exhaustive_search_seconds":1.105479896068573e-5,"evaluations":127.8515625,"distances_sum":126.58003340754658}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444434, conf: {"restarts":7}, perf: {"precision":0.8428819444444434,"recall":0.8428819444444434,"f1":null,"seconds":3.106147050857544e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":181.0625,"distances_sum":57.77106835087761}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444436, conf: {"restarts":20}, perf: {"precision":0.8428819444444436,"recall":0.8428819444444436,"f1":0.8428819444444436,"seconds":4.612840712070465e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":297.1328125,"distances_sum":57.18975223740563}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222211, conf: {"restarts":2}, perf: {"precision":0.8472222222222211,"recall":0.8472222222222211,"f1":0.8472222222222211,"seconds":3.6986544728279114e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":142.171875,"distances_sum":56.99490190250799}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333323, conf: {"restarts":4}, perf: {"precision":0.8489583333333323,"recall":0.8489583333333323,"f1":0.8489583333333323,"seconds":5.165301263332367e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":158.1875,"distances_sum":56.86355858435854}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666655, conf: {"restarts":17}, perf: {"precision":0.8619791666666655,"recall":0.8619791666666655,"f1":0.8619791666666655,"seconds":8.32676887512207e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":272.4765625,"distances_sum":56.94059843337163}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8619791666666655,"state":{"restarts":17},"perf":{"precision":0.8619791666666655,"recall":0.8619791666666655,"f1":0.8619791666666655,"seconds":8.32676887512207e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":272.4765625,"distances_sum":56.94059843337163}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8619791666666655,"state":{"restarts":17},"perf":{"precision":0.8619791666666655,"recall":0.8619791666666655,"f1":0.8619791666666655,"seconds":8.32676887512207e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":272.4765625,"distances_sum":56.94059843337163}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8619791666666655,"state":{"restarts":17},"perf":{"precision":0.8619791666666655,"recall":0.8619791666666655,"f1":0.8619791666666655,"seconds":8.32676887512207e-5,"exhaustive_search_seconds":0.00012056343257427216,"evaluations":272.4765625,"distances_sum":56.94059843337163}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(17), SatNeighborhood(32), 2020-10-18T06:08:12.661
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2832, 0.06657768f0), Item(498, 0.06995575f0), Item(8132, 0.07272093f0), Item(5703, 0.07856267f0), Item(7815, 0.079718545f0), Item(1614, 0.09275928f0), Item(8184, 0.094835676f0), Item(5249, 0.10107461f0), Item(1058, 0.10156272f0), Item(230, 0.103256926f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0267379679144386,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523813,"seconds":0.0019915681332349777,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.765625,"distances_sum":645.4480899125338}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0267379679144386,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523813,"seconds":0.0019915681332349777,"exhaustive_search_seconds":9.369105100631714e-7,"evaluations":8.765625,"distances_sum":645.4480899125338}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.105121293800539,"state":{"bsize":3},"perf":{"precision":0.9843749999999997,"recall":0.9843749999999997,"f1":0.9843749999999997,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":2.9616057872772217e-6,"evaluations":31.8828125,"distances_sum":290.950563788414}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.105121293800539,"state":{"bsize":3},"perf":{"precision":0.9843749999999997,"recall":0.9843749999999997,"f1":0.9843749999999997,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":2.9616057872772217e-6,"evaluations":31.8828125,"distances_sum":290.950563788414}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.63483803824639,"state":{"bsize":3},"perf":{"precision":0.9722222222222215,"recall":0.9722222222222215,"f1":0.9722222222222215,"seconds":1.2239441275596619e-5,"exhaustive_search_seconds":1.1492520570755005e-5,"evaluations":60.0546875,"distances_sum":122.30930146435276}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.63483803824639,"state":{"bsize":3},"perf":{"precision":0.9722222222222215,"recall":0.9722222222222215,"f1":0.9722222222222215,"seconds":1.2239441275596619e-5,"exhaustive_search_seconds":1.1492520570755005e-5,"evaluations":60.0546875,"distances_sum":122.30930146435276}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 101.84879048144354, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.9840896129608154e-5,"exhaustive_search_seconds":0.00011612474918365479,"evaluations":99.1484375,"distances_sum":54.95972836110741}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.84879048144354,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.9840896129608154e-5,"exhaustive_search_seconds":0.00011612474918365479,"evaluations":99.1484375,"distances_sum":54.95972836110741}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.84879048144354,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.9840896129608154e-5,"exhaustive_search_seconds":0.00011612474918365479,"evaluations":99.1484375,"distances_sum":54.95972836110741}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":101.84879048144354,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.9840896129608154e-5,"exhaustive_search_seconds":0.00011612474918365479,"evaluations":99.1484375,"distances_sum":54.95972836110741}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-10-18T06:08:14.639
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9653, 0.034185607f0), Item(2323, 0.050014507f0), Item(2556, 0.05290774f0), Item(1553, 0.0547674f0), Item(6043, 0.058795545f0), Item(754, 0.06569136f0), Item(4166, 0.06905876f0), Item(9845, 0.07269177f0), Item(4973, 0.07706058f0), Item(8679, 0.08122766f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
