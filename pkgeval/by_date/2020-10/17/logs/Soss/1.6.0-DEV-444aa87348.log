Julia Version 1.6.0-DEV.1274
Commit 444aa87348 (2020-10-17 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed OpenBLAS_jll ───────────────── v0.3.10+0
   Installed MatrixFactorizations ───────── v0.5.2
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed Permutations ───────────────── v0.4.0
   Installed Graphs ─────────────────────── v0.10.3
   Installed StaticArrays ───────────────── v0.12.4
   Installed MLStyle ────────────────────── v0.4.6
   Installed Soss ───────────────────────── v0.15.3
   Installed PDMats ─────────────────────── v0.9.12
   Installed Reexport ───────────────────── v0.2.0
   Installed PrettyPrint ────────────────── v0.2.0
   Installed Mocking ────────────────────── v0.7.1
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed DocStringExtensions ────────── v0.8.3
   Installed NameResolution ─────────────── v0.1.5
   Installed LightXML ───────────────────── v0.9.0
   Installed Distributions ──────────────── v0.23.4
   Installed RecipesBase ────────────────── v1.1.0
   Installed ConstructionBase ───────────── v1.0.0
   Installed UnPack ─────────────────────── v1.0.2
   Installed Calculus ───────────────────── v0.5.1
   Installed Missings ───────────────────── v0.4.4
   Installed SimplePosets ───────────────── v0.1.4
   Installed EzXML ──────────────────────── v1.1.0
   Installed RingLists ──────────────────── v0.2.6
   Installed ProgressMeter ──────────────── v1.4.0
   Installed LinearAlgebraX ─────────────── v0.1.6
   Installed InplaceOps ─────────────────── v0.3.0
   Installed BenchmarkTools ─────────────── v0.5.0
   Installed ReverseDiff ────────────────── v1.4.3
   Installed NNlib ──────────────────────── v0.7.5
   Installed XML2_jll ───────────────────── v2.9.10+3
   Installed SpecialFunctions ───────────── v0.10.3
   Installed Roots ──────────────────────── v1.0.5
   Installed Bijectors ──────────────────── v0.8.7
   Installed ZygoteRules ────────────────── v0.2.0
   Installed NLSolversBase ──────────────── v7.5.0
   Installed Multisets ──────────────────── v0.3.3
   Installed CategoricalArrays ──────────── v0.8.3
   Installed ChainRulesCore ─────────────── v0.9.17
   Installed SimplePartitions ───────────── v0.3.0
   Installed FlexLinearAlgebra ──────────── v0.1.0
   Installed SimplePolynomials ──────────── v0.2.4
   Installed PositiveFactorizations ─────── v0.2.3
   Installed Arpack ─────────────────────── v0.4.0
   Installed AdvancedHMC ────────────────── v0.2.25
   Installed CommonSubexpressions ───────── v0.3.0
   Installed Parsers ────────────────────── v1.0.11
   Installed Zlib_jll ───────────────────── v1.2.11+18
   Installed JuliaVariables ─────────────── v0.2.3
   Installed Primes ─────────────────────── v0.5.0
   Installed FillArrays ─────────────────── v0.8.14
   Installed NamedTupleTools ────────────── v0.13.6
   Installed Optim ──────────────────────── v0.22.0
   Installed VectorizationBase ──────────── v0.12.33
   Installed OffsetArrays ───────────────── v1.3.1
   Installed ArrayInterface ─────────────── v2.13.6
   Installed MuladdMacro ────────────────── v0.2.2
   Installed ChainRules ─────────────────── v0.7.26
   Installed Compat ─────────────────────── v3.20.0
   Installed LogDensityProblems ─────────── v0.10.3
   Installed FunctionWrappers ───────────── v1.1.1
   Installed DataAPI ────────────────────── v1.3.0
   Installed NaNMath ────────────────────── v0.3.4
   Installed Libiconv_jll ───────────────── v1.16.0+7
   Installed JLLWrappers ────────────────── v1.1.2
   Installed DataStructures ─────────────── v0.18.7
   Installed GeneralizedGenerated ───────── v0.2.8
   Installed AbstractLattices ───────────── v0.2.1
   Installed CpuId ──────────────────────── v0.2.2
   Installed SLEEFPirates ───────────────── v0.5.5
   Installed SimpleGraphs ───────────────── v0.7.4
   Installed StatsBase ──────────────────── v0.33.2
   Installed Arpack_jll ─────────────────── v3.5.0+3
   Installed Polynomials ────────────────── v1.1.10
   Installed Requires ───────────────────── v1.1.0
   Installed OrderedCollections ─────────── v1.3.1
   Installed TransformVariables ─────────── v0.3.10
   Installed DistributionsAD ────────────── v0.6.9
   Installed DiffRules ──────────────────── v1.0.1
   Installed LazyArrays ─────────────────── v0.16.16
   Installed DynamicHMC ─────────────────── v2.2.0
   Installed TimeZones ──────────────────── v1.4.0
   Installed Adapt ──────────────────────── v2.3.0
   Installed QuadGK ─────────────────────── v2.4.1
   Installed Parameters ─────────────────── v0.12.1
   Installed FixedPointNumbers ──────────── v0.8.4
   Installed Setfield ───────────────────── v0.7.0
   Installed ArgCheck ───────────────────── v2.1.0
   Installed ArrayLayouts ───────────────── v0.3.8
   Installed JSON ───────────────────────── v0.21.1
   Installed CanonicalTraits ────────────── v0.2.3
   Installed StatsFuns ──────────────────── v0.9.5
   Installed Combinatorics ──────────────── v1.0.2
   Installed GenericLinearAlgebra ───────── v0.2.4
   Installed ExprTools ──────────────────── v0.1.3
   Installed Rmath ──────────────────────── v0.6.1
   Installed MappedArrays ───────────────── v0.3.0
   Installed LineSearches ───────────────── v7.1.0
   Installed Rmath_jll ──────────────────── v0.2.2+1
   Installed DiffResults ────────────────── v1.0.2
   Installed MacroTools ─────────────────── v0.5.5
   Installed Intervals ──────────────────── v1.5.0
   Installed StructTypes ────────────────── v1.1.0
   Installed Mods ───────────────────────── v1.2.4
   Installed SimpleRandom ───────────────── v0.2.1
   Installed MonteCarloMeasurements ─────── v0.9.8
   Installed IterTools ──────────────────── v1.3.0
   Installed DiffEqDiffTools ────────────── v1.7.0
   Installed SIMDPirates ────────────────── v0.8.25
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed ForwardDiff ────────────────── v0.10.12
Updating `~/.julia/environments/v1.6/Project.toml`
  [8ce77f84] + Soss v0.15.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [398f06c4] + AbstractLattices v0.2.1
  [79e6a3ab] + Adapt v2.3.0
  [0bf59076] + AdvancedHMC v0.2.25
  [dce04be8] + ArgCheck v2.1.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.13.6
  [4c555306] + ArrayLayouts v0.3.8
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.8.7
  [49dc2e85] + Calculus v0.5.1
  [a603d957] + CanonicalTraits v0.2.3
  [324d7699] + CategoricalArrays v0.8.3
  [082447d4] + ChainRules v0.7.26
  [d360d2e6] + ChainRulesCore v0.9.17
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.20.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.7
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [31c24e10] + Distributions v0.23.4
  [ced4e74d] + DistributionsAD v0.6.9
  [ffbed154] + DocStringExtensions v0.8.3
  [bbc10e6e] + DynamicHMC v2.2.0
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [53c48c17] + FixedPointNumbers v0.8.4
  [b67e1e5a] + FlexLinearAlgebra v0.1.0
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.8
  [14197337] + GenericLinearAlgebra v0.2.4
  [86223c79] + Graphs v0.10.3
  [505f98c9] + InplaceOps v0.3.0
  [d8418881] + Intervals v1.5.0
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.1.2
  [682c06a0] + JSON v0.21.1
  [b14d175d] + JuliaVariables v0.2.3
  [5078a376] + LazyArrays v0.16.16
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.1.0
  [9b3f67b0] + LinearAlgebraX v0.1.6
  [6fdf6af0] + LogDensityProblems v0.10.3
  [d8e11817] + MLStyle v0.4.6
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.3.0
  [a3b82374] + MatrixFactorizations v0.5.2
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [7475f97c] + Mods v1.2.4
  [0987c9cc] + MonteCarloMeasurements v0.9.8
  [46d2c3a1] + MuladdMacro v0.2.2
  [3b2b4ff1] + Multisets v0.3.3
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.7.5
  [77ba4419] + NaNMath v0.3.4
  [71a1bf82] + NameResolution v0.1.5
  [d9ec5142] + NamedTupleTools v0.13.6
  [6fe1bfb0] + OffsetArrays v1.3.1
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [2ae35dd2] + Permutations v0.4.0
  [f27b6e38] + Polynomials v1.1.10
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.2.0
  [27ebfcd6] + Primes v0.5.0
  [92933f4c] + ProgressMeter v1.4.0
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [37e2e3b7] + ReverseDiff v1.4.3
  [286e9d63] + RingLists v0.2.6
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [efcf1570] + Setfield v0.7.0
  [55797a34] + SimpleGraphs v0.7.4
  [ec83eff0] + SimplePartitions v0.3.0
  [cc47b68c] + SimplePolynomials v0.2.4
  [b2aef97b] + SimplePosets v0.1.4
  [a6525b86] + SimpleRandom v0.2.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [8ce77f84] + Soss v0.15.3
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.2
  [4c63d2b9] + StatsFuns v0.9.5
  [856f2bd8] + StructTypes v1.1.0
  [f269a46b] + TimeZones v1.4.0
  [84d833dd] + TransformVariables v0.3.10
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [700de1a5] + ZygoteRules v0.2.0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Building SLEEFPirates → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
    Building TimeZones ───→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  ✓ [39mUnPack[39m
[90m[32m  ✓ [39mAbstractLattices[39m
[90m[32m  ✓ [39mReexport[39m
[90m[32m  ✓ [39mMuladdMacro[39m
[90m[32m  ✓ [39mAdapt[39m
[90m[32m  ✓ [39mConstructionBase[39m
[90m[32m  ✓ [39mArgCheck[39m
[90m[32m  ✓ [39mNaNMath[39m
[90m[32m  ✓ [39mPositiveFactorizations[39m
[90m[32m  ✓ [39mInplaceOps[39m
[90m[32m  ✓ [39mFlexLinearAlgebra[39m
[90m[32m  ✓ [39mDataAPI[39m
[90m[32m  ✓ [39mDocStringExtensions[39m
[90m[32m  ✓ [39mJLLWrappers[39m
[90m[32m  ✓ [39mRingLists[39m
[90m[32m  ✓ [39mPrettyPrint[39m
[90m[32m  ✓ [39mMultisets[39m
[90m[32m  ✓ [39mStructTypes[39m
[90m[32m  ✓ [39mRequires[39m
[90m[32m  ✓ [39mOrderedCollections[39m
[90m[32m  ✓ [39mOffsetArrays[39m
[90m[32m  ✓ [39mNamedTupleTools[39m
[90m[32m  ✓ [39mMods[39m
[90m[32m  ✓ [39mPrimes[39m
[90m[32m  ✓ [39mIterTools[39m
[90m[32m  ✓ [39mFunctionWrappers[39m
[90m[32m  ✓ [39mCalculus[39m
[90m[32m  ✓ [39mProgressMeter[39m
[90m[32m  ✓ [39mCompat[39m
[90m[32m  ✓ [39mNameResolution[39m
[90m[32m  ✓ [39mMissings[39m
[90m[32m  ✓ [39mCombinatorics[39m
[90m[32m  ✓ [39mChainRulesCore[39m
[90m[32m  ✓ [39mFillArrays[39m
[90m[32m  ✓ [39mParameters[39m
[90m[32m  ✓ [39mRmath_jll[39m
[90m[32m  ✓ [39mGenericLinearAlgebra[39m
[90m[32m  ✓ [39mPermutations[39m
[90m[32m  ✓ [39mCompilerSupportLibraries_jll[39m
[90m[32m  ✓ [39mZlib_jll[39m
[90m[32m  ✓ [39mLibiconv_jll[39m
[90m[32m  ✓ [39mRoots[39m
[90m[32m  ✓ [39mFixedPointNumbers[39m
[90m[32m  ✓ [39mRmath[39m
[90m[32m  ✓ [39mMappedArrays[39m
[90m[32m  ✓ [39mMacroTools[39m
[90m[32m  ✓ [39mArrayInterface[39m
[90m[32m  ✓ [39mParsers[39m
[90m[32m  ✓ [39mNNlib[39m
[90m[32m  ✓ [39mOpenSpecFun_jll[39m
[90m[32m  ✓ [39mXML2_jll[39m
[90m[32m  ✓ [39mOpenBLAS_jll[39m
[90m[32m  ✓ [39mCommonSubexpressions[39m
[90m[32m  ✓ [39mArrayLayouts[39m
[90m[32m  ✓ [39mZygoteRules[39m
[90m[32m  ✓ [39mJSON[39m
[90m[32m  ✓ [39mLightXML[39m
[90m[32m  ✓ [39mSIMDPirates[39m
[90m[32m  ✓ [39mEzXML[39m
[90m[32m  ✓ [39mStaticArrays[39m
[90m[32m  ✓ [39mArpack_jll[39m
[90m[32m  ✓ [39mSetfield[39m
[90m[32m  ✓ [39mDataStructures[39m
[90m[32m  ✓ [39mMatrixFactorizations[39m
[90m[32m  ✓ [39mBenchmarkTools[39m
[90m[32m  ✓ [39mDiffResults[39m
[90m[32m  ✓ [39mSLEEFPirates[39m
[90m[32m  ✓ [39mArpack[39m
[90m[32m  ✓ [39mSpecialFunctions[39m
[90m[32m  ✓ [39mChainRules[39m
[90m[32m  ✓ [39mDiffRules[39m
[90m[32m  ✓ [39mTimeZones[39m
[90m[32m  ✓ [39mDiffEqDiffTools[39m
[90m[32m  ✓ [39mPDMats[39m
[90m[32m  ✓ [39mCategoricalArrays[39m
[90m[32m  ✓ [39mIntervals[39m
[90m[32m  ✓ [39mSortingAlgorithms[39m
[90m[32m  ✓ [39mQuadGK[39m
[90m[32m  ✓ [39mSimplePartitions[39m
[90m[32m  ✓ [39mStatsFuns[39m
[90m[32m  ✓ [39mGraphs[39m
[90m[32m  ✓ [39mPolynomials[39m
[90m[32m  ✓ [39mLazyArrays[39m
[90m[32m  ✓ [39mSimplePolynomials[39m
[90m[32m  ✓ [39mLinearAlgebraX[39m
[90m[32m  ✓ [39mForwardDiff[39m
[90m[32m  ✓ [39mStatsBase[39m
[90m[32m  ✓ [39mMLStyle[39m
[90m[32m  ✓ [39mNLSolversBase[39m
[90m[32m  ✓ [39mTransformVariables[39m
[90m[91m  ✗ [39mReverseDiff[39m
[90m[32m  ✓ [39mAdvancedHMC[39m
[90m[32m  ✓ [39mLineSearches[39m
[90m[32m  ✓ [39mJuliaVariables[39m
[90m[32m  ✓ [39mLogDensityProblems[39m
[90m[32m  ✓ [39mDistributions[39m
[90m[32m  ✓ [39mCanonicalTraits[39m
[90m[32m  ✓ [39mSimpleRandom[39m
[90m[32m  ✓ [39mBijectors[39m
[90m[32m  ✓ [39mOptim[39m
[90m[91m  ✗ [39mDistributionsAD[39m
[90m[32m  ✓ [39mMonteCarloMeasurements[39m
[90m[32m  ✓ [39mGeneralizedGenerated[39m
[90m[32m  ✓ [39mSimpleGraphs[39m
[90m[32m  ✓ [39mDynamicHMC[39m
[90m[32m  ✓ [39mSimplePosets[39m
[32m  ✓ [39mSoss
105 dependencies successfully precompiled, 2 errored (5 already precompiled)
     Testing Soss
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l    Fetching: [>                                        ]  0.0 %[2K[?25hStatus `/tmp/jl_lDF5l1/Project.toml`
  [0bf59076] AdvancedHMC v0.2.25
  [76274a88] Bijectors v0.8.7
  [324d7699] CategoricalArrays v0.8.3
  [163ba53b] DiffResults v1.0.2
  [31c24e10] Distributions v0.23.4
  [ced4e74d] DistributionsAD v0.6.9
  [e30172f5] Documenter v0.25.2
  [bbc10e6e] DynamicHMC v2.2.0
  [1a297f60] FillArrays v0.8.14
  [f6369f11] ForwardDiff v0.10.12
  [6b9d7cbe] GeneralizedGenerated v0.2.8
  [86223c79] Graphs v0.10.3
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.16
  [98b081ad] Literate v2.7.0
  [6fdf6af0] LogDensityProblems v0.10.3
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.5
  [0987c9cc] MonteCarloMeasurements v0.9.8
  [d9ec5142] NamedTupleTools v0.13.6
  [91a5bcdd] Plots v1.6.12
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [37e2e3b7] ReverseDiff v1.4.3
  [efcf1570] Setfield v0.7.0
  [55797a34] SimpleGraphs v0.7.4
  [ec83eff0] SimplePartitions v0.3.0
  [b2aef97b] SimplePosets v0.1.4
  [8ce77f84] Soss v0.15.3
  [276daf66] SpecialFunctions v0.10.3
  [860ef19b] StableRNGs v1.0.0
  [4c63d2b9] StatsFuns v0.9.5
  [84d833dd] TransformVariables v0.3.10
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_lDF5l1/Manifest.toml`
  [398f06c4] AbstractLattices v0.2.1
  [79e6a3ab] Adapt v2.3.0
  [0bf59076] AdvancedHMC v0.2.25
  [dce04be8] ArgCheck v2.1.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.13.6
  [4c555306] ArrayLayouts v0.3.8
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.8.7
  [6e34b625] Bzip2_jll v1.0.6+5
  [49dc2e85] Calculus v0.5.1
  [a603d957] CanonicalTraits v0.2.3
  [324d7699] CategoricalArrays v0.8.3
  [082447d4] ChainRules v0.7.26
  [d360d2e6] ChainRulesCore v0.9.17
  [35d6a980] ColorSchemes v3.10.1
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.20.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] ConstructionBase v1.0.0
  [d38c429a] Contour v0.5.5
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.7
  [e2d170a0] DataValueInterfaces v1.0.0
  [01453d9d] DiffEqDiffTools v1.7.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.4
  [ced4e74d] DistributionsAD v0.6.9
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [bbc10e6e] DynamicHMC v2.2.0
  [5ae413db] EarCut_jll v2.1.5+0
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.4.0
  [b22a6f82] FFMPEG_jll v4.3.1+4
  [1a297f60] FillArrays v0.8.14
  [53c48c17] FixedPointNumbers v0.8.4
  [b67e1e5a] FlexLinearAlgebra v0.1.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [d7e528f0] FreeType2_jll v2.10.1+5
  [559328eb] FriBidi_jll v1.0.5+6
  [069b7b12] FunctionWrappers v1.1.1
  [28b8d3ca] GR v0.52.0
  [6b9d7cbe] GeneralizedGenerated v0.2.8
  [14197337] GenericLinearAlgebra v0.2.4
  [5c1252a2] GeometryBasics v0.3.3
  [4d00f742] GeometryTypes v0.8.3
  [86223c79] Graphs v0.10.3
  [42e2da0e] Grisu v1.0.0
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [505f98c9] InplaceOps v0.3.0
  [d8418881] Intervals v1.5.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [b14d175d] JuliaVariables v0.2.3
  [c1c5ebd0] LAME_jll v3.100.0+3
  [b964fa9f] LaTeXStrings v1.2.0
  [23fbe1c1] Latexify v0.14.0
  [5078a376] LazyArrays v0.16.16
  [dd192d2f] LibVPX_jll v1.9.0+1
  [94ce4f54] Libiconv_jll v1.16.0+7
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.1.0
  [9b3f67b0] LinearAlgebraX v0.1.6
  [98b081ad] Literate v2.7.0
  [6fdf6af0] LogDensityProblems v0.10.3
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.3.0
  [a3b82374] MatrixFactorizations v0.5.2
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [7475f97c] Mods v1.2.4
  [0987c9cc] MonteCarloMeasurements v0.9.8
  [46d2c3a1] MuladdMacro v0.2.2
  [3b2b4ff1] Multisets v0.3.3
  [d41bc354] NLSolversBase v7.5.0
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.5
  [d9ec5142] NamedTupleTools v0.13.6
  [6fe1bfb0] OffsetArrays v1.3.1
  [e7412a2a] Ogg_jll v1.3.4+2
  [4536629a] OpenBLAS_jll v0.3.10+0
  [458c3c95] OpenSSL_jll v1.1.1+6
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [429524aa] Optim v0.22.0
  [91d4177d] Opus_jll v1.3.1+3
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [2ae35dd2] Permutations v0.4.0
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.7
  [91a5bcdd] Plots v1.6.12
  [f27b6e38] Polynomials v1.1.10
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.2.0
  [27ebfcd6] Primes v0.5.0
  [92933f4c] ProgressMeter v1.4.0
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [01d81517] RecipesPipeline v0.1.13
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [37e2e3b7] ReverseDiff v1.4.3
  [286e9d63] RingLists v0.2.6
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [efcf1570] Setfield v0.7.0
  [992d4aef] Showoff v0.3.2
  [55797a34] SimpleGraphs v0.7.4
  [ec83eff0] SimplePartitions v0.3.0
  [cc47b68c] SimplePolynomials v0.2.4
  [b2aef97b] SimplePosets v0.1.4
  [a6525b86] SimpleRandom v0.2.1
  [a2af1166] SortingAlgorithms v0.3.1
  [8ce77f84] Soss v0.15.3
  [276daf66] SpecialFunctions v0.10.3
  [860ef19b] StableRNGs v1.0.0
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [09ab397b] StructArrays v0.4.4
  [856f2bd8] StructTypes v1.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [f269a46b] TimeZones v1.4.0
  [84d833dd] TransformVariables v0.3.10
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [700de1a5] ZygoteRules v0.2.0
  [0ac62f75] libass_jll v0.14.0+4
  [f638f0a6] libfdk_aac_jll v0.1.6+4
  [f27f6e37] libvorbis_jll v1.3.6+6
  [1270edf5] x264_jll v2020.7.14+2
  [dfaa095f] x265_jll v3.0.0+3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Linear model: Error During Test at /home/pkgeval/.julia/packages/Soss/aXcpa/test/runtests.jl:8
  Got exception outside of a @test
  LoadError: LoadError: UndefVarError: args not defined
  Stacktrace:
    [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:X,), T} where T<:Tuple, Any, TypeEncoding(Main)})
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
    [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
    [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
    [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
    [5] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [6] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:9
    [7] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
    [8] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:9
    [9] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [10] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:8
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [12] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:7
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] top-level scope
      @ none:6
   [15] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [16] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [17] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/test/linear-model.jl:3
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/test/linear-model.jl:3
Transforms: Error During Test at /home/pkgeval/.julia/packages/Soss/aXcpa/test/runtests.jl:12
  Got exception outside of a @test
  LoadError: LoadError: UndefVarError: args not defined
  Stacktrace:
    [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :α, :β), T} where T<:Tuple, Any, TypeEncoding(Main)})
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
    [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
    [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
    [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
    [5] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [6] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:13
    [7] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
    [8] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:13
    [9] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [10] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:8
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [12] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:7
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] top-level scope
      @ none:6
   [15] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [16] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [17] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/test/transforms.jl:10
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/test/transforms.jl:10
[ Info: Running /home/pkgeval/.julia/packages/Soss/aXcpa/examples/example-linear-regression.jl
Run example: Linear regression: Error During Test at /home/pkgeval/.julia/packages/Soss/aXcpa/test/runtests.jl:19
  Got exception outside of a @test
  LoadError: LoadError: UndefVarError: args not defined
  Stacktrace:
    [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:X,), T} where T<:Tuple, Any, TypeEncoding(Main)})
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
    [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
    [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
    [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
      @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
    [5] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [6] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:23
    [7] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
    [8] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:20
    [9] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [10] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:18
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [12] top-level scope
      @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:7
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] top-level scope
      @ none:6
   [15] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [16] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [17] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/examples/example-linear-regression.jl:30
  in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/examples/example-linear-regression.jl:30
[ Info: Testing `For` methods
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/basictransforms.jl:36-50
│ 
│ ```jldoctest
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ prune(m, :θ)
│ 
│ # output
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ prune(m, :θ)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model begin
│            β ~ Gamma()
│            α ~ Gamma()
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/basictransforms.jl:52-67
│ 
│ ```jldoctest
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ prune(m, :n)
│ 
│ # output
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ prune(m, :n)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model begin
│            β ~ Gamma()
│            α ~ Gamma()
│            θ ~ Beta(α, β)
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/utils.jl:126-143
│ 
│ ```jldoctest
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Soss.before(m, :θ, inclusive = true, strict = false)
│ 
│ # output
│ @model k begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│         z ~ Binomial(k, α / (α + β))
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Soss.before(m, :θ, inclusive = true, strict = false)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model k begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│         z ~ Binomial(k, α / (α + β))
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model k begin
│            β ~ Gamma()
│            α ~ Gamma()
│            θ ~ Beta(α, β)
│            z ~ Binomial(k, α / (α + β))
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/basictransforms.jl:79-93
│ 
│ ```jldoctest
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ predictive(m, :θ)
│ 
│ # output
│ @model (n, θ) begin
│         x ~ Binomial(n, θ)
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ predictive(m, :θ)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model (n, θ) begin
│         x ~ Binomial(n, θ)
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model (n, θ) begin
│            x ~ Binomial(n, θ)
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/utils.jl:81-98
│ 
│ ```jldoctest
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Soss.after(m, :α)
│ 
│ # output
│ @model (n, k, α) begin
│         β ~ Gamma()
│         θ ~ Beta(α, β)
│         x ~ Binomial(n, θ)
│         z ~ Binomial(k, α / (α + β))
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Soss.after(m, :α)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model (n, k, α) begin
│         β ~ Gamma()
│         θ ~ Beta(α, β)
│         x ~ Binomial(n, θ)
│         z ~ Binomial(k, α / (α + β))
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model (n, k, α) begin
│            β ~ Gamma()
│            θ ~ Beta(α, β)
│            x ~ Binomial(n, θ)
│            z ~ Binomial(k, α / (α + β))
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/distributions/markovchain.jl:12-37
│ 
│ ```jldoctest
│ mstep = @model pars,state begin
│     σ = pars.σ
│     x0 = state.x
│     x ~ Normal(x0, σ)
│     next = (pars=pars, state=(x=x,))
│ end;
│ 
│ m = @model s0 begin
│     σ ~ Exponential()
│     pars = (σ=σ,)
│     chain ~ MarkovChain(pars, mstep(pars=pars, state=s0))
│ end;
│ 
│ r = rand(m(s0=(x=2,),));
│ 
│ for s in Iterators.take(r.chain,3)
│     println(s)
│ end
│ 
│ # output
│ 
│ (x = -6.596883394256064,)
│ (x = 0.48200039561318864,)
│ (x = -2.838556784903994,)
│ ```
│ 
│ Subexpression:
│ 
│ mstep = @model pars,state begin
│     σ = pars.σ
│     x0 = state.x
│     x ~ Normal(x0, σ)
│     next = (pars=pars, state=(x=x,))
│ end;
│ 
│ m = @model s0 begin
│     σ ~ Exponential()
│     pars = (σ=σ,)
│     chain ~ MarkovChain(pars, mstep(pars=pars, state=s0))
│ end;
│ 
│ r = rand(m(s0=(x=2,),));
│ 
│ for s in Iterators.take(r.chain,3)
│     println(s)
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:pars, :state), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ (x = -6.596883394256064,)
│ (x = 0.48200039561318864,)
│ (x = -2.838556784903994,)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (x = -6.596883394256064,)
│    (x = 0.48200039561318864,)
│    (x = -2.838556784903994,)ERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:pars, :state), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/inference/dynamicHMC.jl:46-68
│ 
│ ```jldoctest
│ using StableRNGs
│ rng = StableRNG(42);
│ 
│ m = @model x begin
│     β ~ Normal()
│     yhat = β .* x
│     y ~ For(eachindex(x)) do j
│         Normal(yhat[j], 2.0)
│     end
│ end
│ 
│ x = randn(rng, 3);
│ truth = [-0.41, 1.21, 0.11];
│ 
│ post = dynamicHMC(rng, m(x=x), (y=truth,));
│ E_β = mean(getfield.(post, :β))
│ 
│ println("Posterior mean β: " * string(round(E_β, digits=2)))
│ 
│ # output
│ Posterior mean β: 0.25
│ ```
│ 
│ Subexpression:
│ 
│ using StableRNGs
│ rng = StableRNG(42);
│ 
│ m = @model x begin
│     β ~ Normal()
│     yhat = β .* x
│     y ~ For(eachindex(x)) do j
│         Normal(yhat[j], 2.0)
│     end
│ end
│ 
│ x = randn(rng, 3);
│ truth = [-0.41, 1.21, 0.11];
│ 
│ post = dynamicHMC(rng, m(x=x), (y=truth,));
│ E_β = mean(getfield.(post, :β))
│ 
│ println("Posterior mean β: " * string(round(E_β, digits=2)))
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:x,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│ in expression starting at none:2
│ 
│ Expected output:
│ 
│ Posterior mean β: 0.25
│ 
│   diff =
│    Warning: Diff output requires color.
│    Posterior mean β: 0.25ERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:x,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│    in expression starting at none:2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/basictransforms.jl:8-23
│ 
│ ```jldoctest
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ Soss.prior(m, :θ)
│ 
│ # output
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model n begin
│     α ~ Gamma()
│     β ~ Gamma()
│     θ ~ Beta(α,β)
│     x ~ Binomial(n, θ)
│ end;
│ Soss.prior(m, :θ)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model begin
│         β ~ Gamma()
│         α ~ Gamma()
│         θ ~ Beta(α, β)
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model begin
│            β ~ Gamma()
│            α ~ Gamma()
│            θ ~ Beta(α, β)
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n,), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, v::Symbol, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:125
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Soss/aXcpa/src/transforms/basictransforms.jl:105-122
│ 
│ ```jldoctest
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Do(m, :θ)
│ 
│ # output
│ @model (n, k, θ) begin
│         β ~ Gamma()
│         α ~ Gamma()
│         x ~ Binomial(n, θ)
│         z ~ Binomial(k, α / (α + β))
│     end
│ ```
│ 
│ Subexpression:
│ 
│ m = @model (n, k) begin
│     β ~ Gamma()
│     α ~ Gamma()
│     θ ~ Beta(α, β)
│     x ~ Binomial(n, θ)
│     z ~ Binomial(k, α / (α + β))
│ end;
│ Do(m, :θ)
│ 
│ Evaluated output:
│ 
│ ERROR: LoadError: UndefVarError: args not defined
│ Stacktrace:
│  [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│  [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│  [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│  [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│    @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│ in expression starting at none:1
│ 
│ Expected output:
│ 
│ @model (n, k, θ) begin
│         β ~ Gamma()
│         α ~ Gamma()
│         x ~ Binomial(n, θ)
│         z ~ Binomial(k, α / (α + β))
│     end
│ 
│   diff =
│    Warning: Diff output requires color.
│    @model (n, k, θ) begin
│            β ~ Gamma()
│            α ~ Gamma()
│            x ~ Binomial(n, θ)
│            z ~ Binomial(k, α / (α + β))
│        endERROR: LoadError: UndefVarError: args not defined
│    Stacktrace:
│     [1] convert(#unused#::Type{Expr}, m::Model{NamedTuple{(:n, :k), T} where T<:Tuple, Any, TypeEncoding(Main)})
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:157
│     [2] Model(theModule::Module, args::Vector{Symbol}, vals::NamedTuple{(), Tuple{}}, dists::NamedTuple{(), Tuple{}}, retn::Nothing)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:32
│     [3] Model(theModule::Module, args::Vector{Symbol}, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:101
│     [4] var"@model"(__source__::LineNumberNode, __module__::Module, vs::Expr, expr::Expr)
│       @ Soss ~/.julia/packages/Soss/aXcpa/src/core/model.jl:120
│    in expression starting at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/Soss/aXcpa/test/doctests.jl:15
│     [14] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
│     [15] top-level scope
│        @ ~/.julia/packages/Soss/aXcpa/test/doctests.jl:15
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:51
│     [18] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
│     [19] top-level scope
│        @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:51
│     [20] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
│     [21] top-level scope
│        @ ~/.julia/packages/Soss/aXcpa/test/runtests.jl:7
│     [22] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [23] top-level scope
│        @ none:6
│     [24] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [25] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [26] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: Soss: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:                      | Fail  Error  Total
Soss.jl                            |    1      3      4
  Unit tests                       |           2      2
    Linear model                   |           1      1
    Transforms                     |           1      1
  Examples                         |           1      1
    Run example: Linear regression |           1      1
  `For` methods                    |              No tests
  Doctests                         |    1             1
    Doctests                       |    1             1
      Doctests: Soss               |    1             1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Soss/aXcpa/test/runtests.jl:6
ERROR: Package Soss errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1667
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:333
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:320
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [11] top-level scope
    @ none:31
