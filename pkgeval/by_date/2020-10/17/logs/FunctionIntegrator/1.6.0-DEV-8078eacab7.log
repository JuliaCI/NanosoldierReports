Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_O9X330/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_O9X330/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.162458 seconds (293.22 k allocations: 13.817 MiB, 4.44% gc time, 91.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.887300 seconds (2.25 M allocations: 130.563 MiB, 3.21% gc time, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.139326 seconds (417.68 k allocations: 24.220 MiB, 80.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.166001 seconds (483.50 k allocations: 27.379 MiB, 4.65% gc time, 83.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.179516 seconds (427.02 k allocations: 23.925 MiB, 5.67% gc time, 92.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 23.465548 seconds (35.44 M allocations: 2.978 GiB, 10.47% gc time, 77.05% compilation time)
Running: laguerre_quadrature with k=1
  1.749795 seconds (3.24 M allocations: 182.170 MiB, 2.79% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.145954 seconds (211.48 k allocations: 12.243 MiB, 98.99% compilation time)
Running: lobatto_quadrature
  0.186620 seconds (340.03 k allocations: 20.690 MiB, 99.24% compilation time)
Running: radau_quadrature
  0.204072 seconds (463.01 k allocations: 28.416 MiB, 5.17% gc time, 99.34% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 34.056547 seconds (100.02 M allocations: 1.491 GiB, 0.52% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.068572 seconds (173.35 k allocations: 3.888 MiB, 27.22% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 34.889786 seconds (100.02 M allocations: 1.491 GiB, 0.55% gc time, 0.05% compilation time)
Running: rombergs_method
  0.304376 seconds (741.41 k allocations: 43.143 MiB, 4.74% gc time, 99.47% compilation time)
Running: simpsons_rule
  0.022020 seconds (48.04 k allocations: 2.633 MiB, 91.52% compilation time)
Running: simpsons38_rule
  0.057568 seconds (111.36 k allocations: 5.951 MiB, 97.31% compilation time)
Running: trapezoidal_rule
  0.217333 seconds (1.72 M allocations: 28.726 MiB, 3.83% gc time, 16.11% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.117090 seconds (30.72 k allocations: 1.831 MiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.340427 seconds (295.57 k allocations: 15.749 MiB, 6.63% gc time, 99.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.096392 seconds (94.22 k allocations: 2.707 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.138495 seconds (82.47 k allocations: 2.508 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.103230 seconds (65.08 k allocations: 2.154 MiB, 99.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.061179 seconds (510.79 k allocations: 162.363 MiB, 12.31% gc time, 28.63% compilation time)
Running: legendre_quadrature
  0.090844 seconds (42.16 k allocations: 2.447 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.015628 seconds (16.14 k allocations: 1.006 MiB, 99.07% compilation time)
Running: radau_quadrature
  0.012758 seconds (16.24 k allocations: 1.013 MiB, 98.79% compilation time)
Running: rectangle_rule_left
  9.311106 seconds (471.41 M allocations: 7.025 GiB, 8.22% gc time)
Running: rectangle_rule_midpoint
  0.000011 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  9.531552 seconds (476.96 M allocations: 7.107 GiB, 8.03% gc time)
Running: rombergs_method
  0.218012 seconds (334.29 k allocations: 19.155 MiB, 99.84% compilation time)
Running: simpsons_rule
  0.000028 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.039841 seconds (19.43 k allocations: 1.184 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.024664 seconds (16.97 k allocations: 1.034 MiB, 99.69% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015795 seconds (1.03 k allocations: 34.125 KiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=1
  0.067943 seconds (2.46 k allocations: 116.359 KiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.067716 seconds (2.71 k allocations: 124.266 KiB, 99.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.071872 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.071105 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.212792 seconds (369.34 k allocations: 19.505 MiB, 15.74% gc time, 98.99% compilation time)
Running: legendre_quadrature
  0.041948 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000064 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000029 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000167 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000118 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000165 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.051146 seconds (1.04 k allocations: 56.469 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000013 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.014445 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.010137 seconds (44.29 k allocations: 702.859 KiB, 91.66% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.031110 seconds (83.49 k allocations: 5.003 MiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.124432 seconds (235.65 k allocations: 13.387 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.138305 seconds (289.14 k allocations: 16.380 MiB, 11.80% gc time, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.105221 seconds (239.80 k allocations: 13.536 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.105813 seconds (239.80 k allocations: 13.470 MiB, 98.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.069435 seconds (454.94 k allocations: 163.900 MiB, 3.48% gc time, 31.06% compilation time)
Running: legendre_quadrature
  0.105415 seconds (190.36 k allocations: 11.084 MiB, 98.22% compilation time)
Running: lobatto_quadrature
  0.109557 seconds (201.88 k allocations: 11.810 MiB, 11.65% gc time, 98.76% compilation time)
Running: radau_quadrature
  0.113017 seconds (201.87 k allocations: 11.807 MiB, 98.81% compilation time)
Running: rectangle_rule_left
  0.399410 seconds (19.37 k allocations: 1.189 MiB, 3.70% compilation time)
Running: rectangle_rule_midpoint
  0.013859 seconds (25.55 k allocations: 1.616 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.369433 seconds (17.90 k allocations: 1.099 MiB, 4.61% compilation time)
Running: rombergs_method
  0.067603 seconds (137.77 k allocations: 8.029 MiB, 97.64% compilation time)
Running: simpsons_rule
  0.012724 seconds (37.98 k allocations: 2.442 MiB, 99.11% compilation time)
Running: simpsons38_rule
  0.023504 seconds (43.94 k allocations: 2.785 MiB, 99.28% compilation time)
Running: trapezoidal_rule
  0.013421 seconds (43.20 k allocations: 1.730 MiB, 96.96% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.019190 seconds (68.44 k allocations: 3.060 MiB, 96.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.133979 seconds (242.24 k allocations: 13.489 MiB, 10.73% gc time, 98.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.119409 seconds (296.17 k allocations: 16.372 MiB, 98.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.104314 seconds (246.37 k allocations: 13.523 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.128414 seconds (246.37 k allocations: 13.520 MiB, 10.07% gc time, 98.87% compilation time)
Running: hermite_quadrature with k=2
  7.507780 seconds (20.49 M allocations: 1.088 GiB, 10.33% gc time, 99.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.271013 seconds (464.12 k allocations: 50.102 MiB, 16.20% gc time, 74.99% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.113657 seconds (282.35 k allocations: 15.770 MiB, 97.64% compilation time)
Running: legendre_quadrature
  0.117161 seconds (196.90 k allocations: 11.414 MiB, 30.01% gc time, 98.79% compilation time)
Running: lobatto_quadrature
  0.111198 seconds (222.53 k allocations: 37.597 MiB, 83.48% compilation time)
Running: radau_quadrature
  0.205947 seconds (219.12 k allocations: 30.253 MiB, 45.84% gc time, 46.96% compilation time)
Running: rectangle_rule_left
  0.014552 seconds (22.28 k allocations: 1.333 MiB, 99.18% compilation time)
Running: rectangle_rule_midpoint
  0.014222 seconds (27.36 k allocations: 1.703 MiB, 99.19% compilation time)
Running: rectangle_rule_right
  0.017472 seconds (19.02 k allocations: 1.153 MiB, 99.24% compilation time)
Running: rombergs_method
  0.062094 seconds (140.11 k allocations: 8.066 MiB, 97.13% compilation time)
Running: simpsons_rule
  0.016116 seconds (45.46 k allocations: 2.710 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.040468 seconds (58.91 k allocations: 3.170 MiB, 36.20% gc time, 99.08% compilation time)
Running: trapezoidal_rule
  0.019240 seconds (29.23 k allocations: 1.655 MiB, 98.91% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.026783 seconds (52.41 k allocations: 2.720 MiB, 97.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.108489 seconds (237.76 k allocations: 13.243 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.132554 seconds (291.35 k allocations: 16.145 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.117437 seconds (241.90 k allocations: 13.330 MiB, 11.35% gc time, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.102861 seconds (241.91 k allocations: 13.331 MiB, 98.47% compilation time)
Running: hermite_quadrature with k=2
  0.081219 seconds (175.13 k allocations: 10.126 MiB, 98.21% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.257626 seconds (457.39 k allocations: 1.176 GiB, 23.13% gc time, 3.79% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.124983 seconds (277.64 k allocations: 15.553 MiB, 8.68% gc time, 98.02% compilation time)
Running: legendre_quadrature
  0.087145 seconds (192.47 k allocations: 11.190 MiB, 98.16% compilation time)
Running: lobatto_quadrature
  0.105973 seconds (213.29 k allocations: 23.311 MiB, 90.12% compilation time)
Running: radau_quadrature
  0.111946 seconds (212.45 k allocations: 21.243 MiB, 8.42% gc time, 83.72% compilation time)
Running: rectangle_rule_left
  0.013269 seconds (20.07 k allocations: 1.228 MiB, 99.16% compilation time)
Running: rectangle_rule_midpoint
  0.012819 seconds (26.25 k allocations: 1.652 MiB, 99.08% compilation time)
Running: rectangle_rule_right
  0.012249 seconds (17.87 k allocations: 1.098 MiB, 99.06% compilation time)
Running: rombergs_method
  0.066250 seconds (135.95 k allocations: 7.879 MiB, 97.25% compilation time)
Running: simpsons_rule
  0.015477 seconds (40.80 k allocations: 2.541 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.017722 seconds (49.73 k allocations: 2.931 MiB, 98.92% compilation time)
Running: trapezoidal_rule
  0.012309 seconds (24.14 k allocations: 1.492 MiB, 98.84% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.020249 seconds (40.61 k allocations: 2.580 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=1
  0.126831 seconds (236.14 k allocations: 13.465 MiB, 9.96% gc time, 98.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.119572 seconds (289.64 k allocations: 16.491 MiB, 97.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.113059 seconds (240.28 k allocations: 13.548 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.118464 seconds (240.28 k allocations: 13.373 MiB, 9.47% gc time, 98.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.122702 seconds (455.49 k allocations: 195.012 MiB, 12.57% gc time, 24.41% compilation time)
Running: legendre_quadrature
  0.096391 seconds (190.86 k allocations: 11.114 MiB, 97.96% compilation time)
Running: lobatto_quadrature
  0.117064 seconds (202.37 k allocations: 11.832 MiB, 9.37% gc time, 98.59% compilation time)
Running: radau_quadrature
  0.107430 seconds (202.37 k allocations: 11.846 MiB, 98.49% compilation time)
Running: rectangle_rule_left
  0.291203 seconds (19.89 k allocations: 1.214 MiB, 4.90% compilation time)
Running: rectangle_rule_midpoint
  0.013386 seconds (25.89 k allocations: 1.634 MiB, 99.20% compilation time)
Running: rectangle_rule_right
  0.129327 seconds (18.24 k allocations: 1.118 MiB, 10.40% compilation time)
Running: rombergs_method
  0.078053 seconds (149.07 k allocations: 8.786 MiB, 96.28% compilation time)
Running: simpsons_rule
  0.013244 seconds (38.61 k allocations: 2.470 MiB, 99.05% compilation time)
Running: simpsons38_rule
  0.021174 seconds (44.65 k allocations: 2.815 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.097701 seconds (44.13 k allocations: 1.763 MiB, 99.43% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014537 seconds (40.35 k allocations: 2.510 MiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=1
  0.109370 seconds (236.73 k allocations: 13.418 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.127417 seconds (290.27 k allocations: 16.392 MiB, 97.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.107396 seconds (240.88 k allocations: 13.470 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.128753 seconds (240.87 k allocations: 13.545 MiB, 12.38% gc time, 98.58% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.974233 seconds (456.19 k allocations: 149.629 MiB, 15.90% gc time, 29.33% compilation time)
Running: legendre_quadrature
  0.089002 seconds (191.45 k allocations: 11.141 MiB, 97.96% compilation time)
Running: lobatto_quadrature
  0.114284 seconds (202.97 k allocations: 11.859 MiB, 10.00% gc time, 98.21% compilation time)
Running: radau_quadrature
  0.107309 seconds (202.97 k allocations: 11.852 MiB, 98.14% compilation time)
Running: rectangle_rule_left
  0.479047 seconds (20.14 k allocations: 1.227 MiB, 4.05% compilation time)
Running: rectangle_rule_midpoint
  0.014599 seconds (25.89 k allocations: 1.635 MiB, 99.00% compilation time)
Running: rectangle_rule_right
  0.470559 seconds (18.20 k allocations: 1.115 MiB, 4.30% compilation time)
Running: rombergs_method
  0.084421 seconds (138.99 k allocations: 8.082 MiB, 96.17% compilation time)
Running: simpsons_rule
  0.015811 seconds (39.09 k allocations: 2.489 MiB, 99.04% compilation time)
Running: simpsons38_rule
  0.019088 seconds (45.35 k allocations: 2.842 MiB, 99.20% compilation time)
Running: trapezoidal_rule
  0.013328 seconds (56.28 k allocations: 1.959 MiB, 92.99% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.264606 seconds (152.12 k allocations: 9.116 MiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.088958 seconds (70.34 k allocations: 2.237 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=2
  0.138253 seconds (105.50 k allocations: 2.900 MiB, 13.29% gc time, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.101106 seconds (92.98 k allocations: 2.686 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.095501 seconds (72.52 k allocations: 2.280 MiB, 98.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.993750 seconds (485.76 k allocations: 168.233 MiB, 9.34% gc time, 25.87% compilation time)
Running: legendre_quadrature
  0.076766 seconds (19.14 k allocations: 1.125 MiB, 99.57% compilation time)
Running: lobatto_quadrature
  0.001983 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000062 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 14.030392 seconds (590.00 M allocations: 8.792 GiB, 7.62% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 13.941068 seconds (592.75 M allocations: 8.833 GiB, 7.38% gc time)
Running: rombergs_method
  0.080805 seconds (20.91 k allocations: 1.197 MiB, 99.37% compilation time)
Running: simpsons_rule
  0.000028 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.022151 seconds (463 allocations: 22.578 KiB, 99.49% compilation time)
Running: trapezoidal_rule
  0.014120 seconds (171 allocations: 7.859 KiB, 99.14% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.989379 seconds (209.94 M allocations: 3.138 GiB, 2.24% gc time, 0.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.569934 seconds (422.96 k allocations: 23.678 MiB, 86.64% compilation time)
Running: chebyshev_quadrature with k=2
 14.671064 seconds (478.52 k allocations: 4.041 GiB, 2.40% gc time, 2.23% compilation time)
Running: chebyshev_quadrature with k=3
  6.401352 seconds (254.26 k allocations: 1.642 GiB, 3.59% gc time, 1.69% compilation time)
Running: chebyshev_quadrature with k=4
  8.882604 seconds (254.25 k allocations: 2.261 GiB, 1.85% gc time, 1.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.496744 seconds (493.00 k allocations: 13.255 GiB, 5.77% gc time, 0.89% compilation time)
Running: legendre_quadrature.
  7.638298 seconds (228.87 k allocations: 1.976 GiB, 1.10% gc time, 1.81% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.817082 seconds (8.24 M allocations: 13.384 GiB, 7.00% gc time, 0.46% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.972979 seconds (7.24 M allocations: 13.369 GiB, 6.48% gc time, 0.59% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.416965 seconds (22.89 k allocations: 1.394 MiB, 0.22% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.412232 seconds (31.46 k allocations: 1.956 MiB, 0.24% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.073676 seconds (23.09 k allocations: 1.403 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.321671 seconds (448.65 k allocations: 153.513 MiB, 2.06% gc time, 10.96% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.188444 seconds (200.04 M allocations: 2.983 GiB, 2.00% gc time, 0.12% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 22.955091 seconds (600.05 M allocations: 8.944 GiB, 5.36% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.722678 seconds (600.03 M allocations: 8.943 GiB, 3.54% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.036078 seconds (111.10 k allocations: 4.244 MiB, 93.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.128368 seconds (252.71 k allocations: 13.877 MiB, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.200874 seconds (277.25 k allocations: 14.964 MiB, 42.59% gc time, 99.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.104634 seconds (224.24 k allocations: 11.980 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.115949 seconds (224.24 k allocations: 11.976 MiB, 99.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.223349 seconds (394.78 k allocations: 35.540 MiB, 92.74% compilation time)
Running: laguerre_quadrature with k=2
  0.115576 seconds (185.19 k allocations: 10.857 MiB, 77.62% compilation time)
Running: legendre_quadrature
  0.076010 seconds (149.17 k allocations: 8.338 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.014921 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012419 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.032216 seconds (19.35 k allocations: 1.157 MiB, 65.71% compilation time)
Running: rectangle_rule_midpoint
  0.022380 seconds (26.33 k allocations: 1.636 MiB, 72.59% compilation time)
Running: rectangle_rule_right
  0.022652 seconds (17.96 k allocations: 1.084 MiB, 62.94% compilation time)
Running: rombergs_method
  0.144048 seconds (176.58 k allocations: 10.256 MiB, 98.51% compilation time)
Running: simpsons_rule
  0.000489 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.029480 seconds (80.36 k allocations: 3.491 MiB, 97.95% compilation time)
Running: trapezoidal_rule
  0.072856 seconds (2.39 M allocations: 37.744 MiB, 28.80% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000435 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.083273 seconds (2.46 k allocations: 1.691 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.079370 seconds (2.71 k allocations: 2.355 MiB, 96.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.072215 seconds (2.31 k allocations: 2.028 MiB, 96.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.068689 seconds (2.31 k allocations: 1.469 MiB, 97.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.117492 seconds (371.61 k allocations: 905.325 MiB, 5.65% gc time, 6.12% compilation time)
Running: legendre_quadrature
  0.051074 seconds (1.27 k allocations: 68.203 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000133 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000088 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.756719 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000234 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.700951 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.042120 seconds (993 allocations: 56.609 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000565 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000122 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.068519 seconds (2.53 k allocations: 579.203 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.071711 seconds (2.79 k allocations: 780.188 KiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.069857 seconds (2.39 k allocations: 661.047 KiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=4
  0.069622 seconds (2.39 k allocations: 491.547 KiB, 99.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.008935 seconds (378.17 k allocations: 253.436 MiB, 29.87% compilation time)
Running: legendre_quadrature
  0.046168 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000061 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000024 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.771332 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000119 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.733915 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.055632 seconds (1.21 k allocations: 64.875 KiB, 99.71% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000247 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
