Julia Version 1.6.0-DEV.1274
Commit 444aa87348 (2020-10-17 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_f21LRW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_f21LRW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.134670 seconds (292.99 k allocations: 13.804 MiB, 90.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.875596 seconds (2.24 M allocations: 130.400 MiB, 4.59% gc time, 98.19% compilation time)
Running: chebyshev_quadrature with k=2
  0.142995 seconds (417.67 k allocations: 24.214 MiB, 8.75% gc time, 85.07% compilation time)
Running: chebyshev_quadrature with k=3
  0.161680 seconds (483.51 k allocations: 27.385 MiB, 87.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.179923 seconds (427.02 k allocations: 23.925 MiB, 10.65% gc time, 92.19% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 23.503884 seconds (35.45 M allocations: 2.978 GiB, 14.15% gc time, 75.34% compilation time)
Running: laguerre_quadrature with k=1
  1.784020 seconds (3.24 M allocations: 182.168 MiB, 2.00% gc time, 99.75% compilation time)
Running: legendre_quadrature
  0.261259 seconds (211.43 k allocations: 12.242 MiB, 52.46% gc time, 99.41% compilation time)
Running: lobatto_quadrature
  0.220443 seconds (339.94 k allocations: 20.667 MiB, 99.22% compilation time)
Running: radau_quadrature
  0.315788 seconds (458.14 k allocations: 28.160 MiB, 7.31% gc time, 99.44% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 32.220444 seconds (100.02 M allocations: 1.491 GiB, 0.59% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.086984 seconds (173.35 k allocations: 3.888 MiB, 52.18% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 30.774980 seconds (100.02 M allocations: 1.491 GiB, 0.48% gc time, 0.44% compilation time)
Running: rombergs_method
  1.841719 seconds (741.36 k allocations: 43.136 MiB, 1.07% gc time, 95.15% compilation time)
Running: simpsons_rule
  0.018151 seconds (48.04 k allocations: 2.633 MiB, 92.51% compilation time)
Running: simpsons38_rule
  0.039645 seconds (111.25 k allocations: 5.945 MiB, 96.91% compilation time)
Running: trapezoidal_rule
  0.184797 seconds (1.72 M allocations: 28.720 MiB, 15.57% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.128210 seconds (30.72 k allocations: 1.831 MiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.245862 seconds (297.58 k allocations: 15.853 MiB, 99.59% compilation time)
Running: chebyshev_quadrature with k=2
  0.089251 seconds (94.22 k allocations: 2.707 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.127898 seconds (82.47 k allocations: 2.508 MiB, 17.42% gc time, 81.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.096467 seconds (65.08 k allocations: 2.155 MiB, 98.74% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.204054 seconds (510.75 k allocations: 162.359 MiB, 23.35% gc time, 24.07% compilation time)
Running: legendre_quadrature
  0.085873 seconds (42.10 k allocations: 2.444 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.009763 seconds (16.08 k allocations: 1.003 MiB, 99.13% compilation time)
Running: radau_quadrature
  0.009626 seconds (16.19 k allocations: 1.010 MiB, 99.33% compilation time)
Running: rectangle_rule_left
  9.458425 seconds (471.41 M allocations: 7.025 GiB, 11.47% gc time)
Running: rectangle_rule_midpoint
  0.000008 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  8.583307 seconds (476.96 M allocations: 7.107 GiB, 4.63% gc time)
Running: rombergs_method
  0.197755 seconds (334.24 k allocations: 19.151 MiB, 2.77% gc time, 99.87% compilation time)
Running: simpsons_rule
  0.000016 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.031550 seconds (19.43 k allocations: 1.184 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.028667 seconds (16.97 k allocations: 1.034 MiB, 99.73% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.011760 seconds (1.03 k allocations: 34.125 KiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=1
  0.061051 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.066065 seconds (2.71 k allocations: 124.266 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.066926 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.059997 seconds (2.31 k allocations: 109.297 KiB, 99.87% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.157785 seconds (369.35 k allocations: 19.504 MiB, 99.06% compilation time)
Running: legendre_quadrature
  0.038187 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000067 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000032 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000166 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000118 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000166 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.049174 seconds (1.04 k allocations: 56.469 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000012 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.013651 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.012338 seconds (44.29 k allocations: 702.859 KiB, 92.84% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.048438 seconds (83.49 k allocations: 5.003 MiB, 37.08% gc time, 99.55% compilation time)
Running: chebyshev_quadrature with k=1
  0.098334 seconds (235.65 k allocations: 13.387 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.116318 seconds (289.14 k allocations: 16.395 MiB, 98.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.107681 seconds (239.80 k allocations: 13.536 MiB, 12.79% gc time, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.093309 seconds (239.80 k allocations: 13.470 MiB, 98.59% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.901044 seconds (454.96 k allocations: 163.901 MiB, 6.60% gc time, 35.74% compilation time)
Running: legendre_quadrature
  0.079283 seconds (190.36 k allocations: 11.084 MiB, 98.53% compilation time)
Running: lobatto_quadrature
  0.094207 seconds (201.88 k allocations: 11.810 MiB, 98.37% compilation time)
Running: radau_quadrature
  0.089650 seconds (201.88 k allocations: 11.812 MiB, 98.61% compilation time)
Running: rectangle_rule_left
  0.370180 seconds (19.37 k allocations: 1.189 MiB, 5.05% compilation time)
Running: rectangle_rule_midpoint
  0.012643 seconds (25.55 k allocations: 1.616 MiB, 99.10% compilation time)
Running: rectangle_rule_right
  0.358872 seconds (17.90 k allocations: 1.099 MiB, 4.25% compilation time)
Running: rombergs_method
  0.090967 seconds (137.77 k allocations: 8.025 MiB, 14.45% gc time, 97.98% compilation time)
Running: simpsons_rule
  0.017619 seconds (37.98 k allocations: 2.442 MiB, 98.96% compilation time)
Running: simpsons38_rule
  0.018117 seconds (43.94 k allocations: 2.785 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.011493 seconds (43.20 k allocations: 1.730 MiB, 96.59% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014958 seconds (68.44 k allocations: 3.060 MiB, 96.70% compilation time)
Running: chebyshev_quadrature with k=1
  0.097048 seconds (242.24 k allocations: 13.474 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.104510 seconds (296.17 k allocations: 16.388 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.108210 seconds (246.37 k allocations: 13.538 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.103231 seconds (246.37 k allocations: 13.524 MiB, 98.52% compilation time)
Running: hermite_quadrature with k=2
  7.515202 seconds (20.49 M allocations: 1.088 GiB, 12.82% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.215617 seconds (464.13 k allocations: 50.118 MiB, 6.09% gc time, 89.40% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.125295 seconds (282.35 k allocations: 15.753 MiB, 97.39% compilation time)
Running: legendre_quadrature
  0.075430 seconds (196.90 k allocations: 11.413 MiB, 98.14% compilation time)
Running: lobatto_quadrature
  0.117854 seconds (222.54 k allocations: 37.584 MiB, 9.75% gc time, 74.35% compilation time)
Running: radau_quadrature
  0.117440 seconds (219.12 k allocations: 30.267 MiB, 7.68% gc time, 78.64% compilation time)
Running: rectangle_rule_left
  0.014100 seconds (22.28 k allocations: 1.333 MiB, 99.22% compilation time)
Running: rectangle_rule_midpoint
  0.013550 seconds (27.36 k allocations: 1.703 MiB, 99.14% compilation time)
Running: rectangle_rule_right
  0.012513 seconds (19.02 k allocations: 1.153 MiB, 99.08% compilation time)
Running: rombergs_method
  0.062743 seconds (140.11 k allocations: 8.067 MiB, 97.42% compilation time)
Running: simpsons_rule
  0.015512 seconds (45.46 k allocations: 2.710 MiB, 98.79% compilation time)
Running: simpsons38_rule
  0.019396 seconds (58.91 k allocations: 3.170 MiB, 98.69% compilation time)
Running: trapezoidal_rule
  0.013386 seconds (29.23 k allocations: 1.655 MiB, 98.55% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.017094 seconds (52.41 k allocations: 2.720 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.119386 seconds (237.76 k allocations: 13.306 MiB, 9.00% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.119554 seconds (291.35 k allocations: 16.145 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.104886 seconds (241.90 k allocations: 13.330 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.097523 seconds (241.91 k allocations: 13.331 MiB, 98.42% compilation time)
Running: hermite_quadrature with k=2
  0.082716 seconds (175.13 k allocations: 10.127 MiB, 98.15% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.240951 seconds (457.40 k allocations: 1.175 GiB, 26.56% gc time, 3.71% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.109523 seconds (277.64 k allocations: 15.553 MiB, 97.59% compilation time)
Running: legendre_quadrature
  0.078050 seconds (192.47 k allocations: 11.190 MiB, 98.08% compilation time)
Running: lobatto_quadrature
  0.113359 seconds (213.30 k allocations: 23.311 MiB, 9.39% gc time, 81.33% compilation time)
Running: radau_quadrature
  0.106020 seconds (212.45 k allocations: 21.244 MiB, 89.48% compilation time)
Running: rectangle_rule_left
  0.024326 seconds (20.07 k allocations: 1.228 MiB, 44.43% gc time, 99.60% compilation time)
Running: rectangle_rule_midpoint
  0.012376 seconds (26.25 k allocations: 1.652 MiB, 99.24% compilation time)
Running: rectangle_rule_right
  0.011537 seconds (17.87 k allocations: 1.098 MiB, 99.18% compilation time)
Running: rombergs_method
  0.056424 seconds (135.95 k allocations: 7.879 MiB, 96.94% compilation time)
Running: simpsons_rule
  0.012872 seconds (40.80 k allocations: 2.541 MiB, 98.91% compilation time)
Running: simpsons38_rule
  0.015835 seconds (49.73 k allocations: 2.931 MiB, 98.94% compilation time)
Running: trapezoidal_rule
  0.010267 seconds (24.14 k allocations: 1.492 MiB, 98.91% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.012274 seconds (40.61 k allocations: 2.580 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=1
  0.096752 seconds (236.14 k allocations: 13.461 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.120596 seconds (289.64 k allocations: 16.549 MiB, 8.93% gc time, 97.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.103268 seconds (240.29 k allocations: 13.549 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.108065 seconds (240.28 k allocations: 13.373 MiB, 98.26% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.902794 seconds (455.50 k allocations: 195.008 MiB, 12.36% gc time, 33.81% compilation time)
Running: legendre_quadrature
  0.076058 seconds (190.86 k allocations: 11.114 MiB, 97.68% compilation time)
Running: lobatto_quadrature
  0.090130 seconds (202.38 k allocations: 11.832 MiB, 97.92% compilation time)
Running: radau_quadrature
  0.088222 seconds (202.38 k allocations: 11.846 MiB, 98.47% compilation time)
Running: rectangle_rule_left
  0.275965 seconds (19.89 k allocations: 1.214 MiB, 4.93% compilation time)
Running: rectangle_rule_midpoint
  0.022631 seconds (25.89 k allocations: 1.634 MiB, 47.36% gc time, 99.56% compilation time)
Running: rectangle_rule_right
  0.125967 seconds (18.24 k allocations: 1.118 MiB, 9.80% compilation time)
Running: rombergs_method
  0.067316 seconds (149.07 k allocations: 8.787 MiB, 95.92% compilation time)
Running: simpsons_rule
  0.011175 seconds (38.61 k allocations: 2.470 MiB, 99.01% compilation time)
Running: simpsons38_rule
  0.014298 seconds (44.65 k allocations: 2.815 MiB, 99.27% compilation time)
Running: trapezoidal_rule
  0.010586 seconds (44.13 k allocations: 1.763 MiB, 96.37% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014610 seconds (40.35 k allocations: 2.510 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=1
  0.095654 seconds (236.73 k allocations: 13.480 MiB, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.127212 seconds (290.27 k allocations: 16.392 MiB, 8.93% gc time, 98.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.096141 seconds (240.88 k allocations: 13.470 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.104746 seconds (240.88 k allocations: 13.608 MiB, 97.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.927082 seconds (456.21 k allocations: 149.634 MiB, 12.41% gc time, 38.43% compilation time)
Running: legendre_quadrature
  0.081102 seconds (191.45 k allocations: 11.126 MiB, 97.72% compilation time)
Running: lobatto_quadrature
  0.099272 seconds (202.98 k allocations: 11.859 MiB, 98.13% compilation time)
Running: radau_quadrature
  0.094516 seconds (202.97 k allocations: 11.853 MiB, 98.43% compilation time)
Running: rectangle_rule_left
  0.426574 seconds (20.14 k allocations: 1.227 MiB, 4.11% compilation time)
Running: rectangle_rule_midpoint
  0.029031 seconds (25.89 k allocations: 1.635 MiB, 45.95% gc time, 99.53% compilation time)
Running: rectangle_rule_right
  0.418761 seconds (18.20 k allocations: 1.115 MiB, 3.59% compilation time)
Running: rombergs_method
  0.064036 seconds (138.99 k allocations: 8.082 MiB, 96.70% compilation time)
Running: simpsons_rule
  0.014673 seconds (39.09 k allocations: 2.489 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.017948 seconds (45.35 k allocations: 2.842 MiB, 99.28% compilation time)
Running: trapezoidal_rule
  0.012111 seconds (56.28 k allocations: 1.959 MiB, 95.47% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.081560 seconds (152.12 k allocations: 9.115 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.084495 seconds (70.34 k allocations: 2.237 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.085906 seconds (105.50 k allocations: 2.900 MiB, 97.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.089962 seconds (92.98 k allocations: 2.686 MiB, 97.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.088411 seconds (72.52 k allocations: 2.280 MiB, 98.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.101996 seconds (485.78 k allocations: 168.234 MiB, 17.54% gc time, 25.18% compilation time)
Running: legendre_quadrature
  0.064557 seconds (19.14 k allocations: 1.125 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000027 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 12.556097 seconds (590.00 M allocations: 8.792 GiB, 10.63% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 12.739872 seconds (592.75 M allocations: 8.833 GiB, 8.47% gc time)
Running: rombergs_method
  0.070066 seconds (20.91 k allocations: 1.197 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.000015 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.015091 seconds (463 allocations: 22.578 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.009357 seconds (171 allocations: 7.859 KiB, 99.45% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.795729 seconds (209.94 M allocations: 3.138 GiB, 1.55% gc time, 0.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.276158 seconds (422.90 k allocations: 23.675 MiB, 3.82% gc time, 98.94% compilation time)
Running: chebyshev_quadrature with k=2
 13.337428 seconds (478.46 k allocations: 4.041 GiB, 3.84% gc time, 1.87% compilation time)
Running: chebyshev_quadrature with k=3
  5.947363 seconds (254.26 k allocations: 1.642 GiB, 3.12% gc time, 1.76% compilation time)
Running: chebyshev_quadrature with k=4
  8.398385 seconds (254.25 k allocations: 2.261 GiB, 1.75% gc time, 1.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.020301 seconds (492.96 k allocations: 13.255 GiB, 10.32% gc time, 0.72% compilation time)
Running: legendre_quadrature.
  6.490593 seconds (228.82 k allocations: 1.976 GiB, 0.92% gc time, 1.76% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.873454 seconds (8.24 M allocations: 13.384 GiB, 7.52% gc time, 1.13% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.746066 seconds (7.24 M allocations: 13.369 GiB, 10.33% gc time, 0.52% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 10.263398 seconds (22.89 k allocations: 1.394 MiB, 0.16% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 10.066861 seconds (31.46 k allocations: 1.956 MiB, 0.33% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  9.872818 seconds (23.09 k allocations: 1.403 MiB, 0.17% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.308643 seconds (448.60 k allocations: 153.511 MiB, 1.41% gc time, 22.24% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.353504 seconds (200.04 M allocations: 2.983 GiB, 3.21% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.910592 seconds (600.05 M allocations: 8.944 GiB, 5.69% gc time, 0.12% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.126875 seconds (600.03 M allocations: 8.943 GiB, 3.52% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.040713 seconds (111.10 k allocations: 4.244 MiB, 92.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.108664 seconds (252.71 k allocations: 13.893 MiB, 97.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.112766 seconds (277.25 k allocations: 14.964 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.193210 seconds (224.24 k allocations: 11.980 MiB, 47.77% gc time, 98.94% compilation time)
Running: chebyshev_quadrature with k=4
  0.095623 seconds (224.24 k allocations: 11.976 MiB, 98.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.184189 seconds (394.79 k allocations: 35.537 MiB, 92.07% compilation time)
Running: laguerre_quadrature with k=2
  0.105670 seconds (185.19 k allocations: 10.857 MiB, 76.70% compilation time)
Running: legendre_quadrature
  0.062431 seconds (149.17 k allocations: 8.338 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.016035 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.014076 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.023951 seconds (19.35 k allocations: 1.157 MiB, 66.80% compilation time)
Running: rectangle_rule_midpoint
  0.019116 seconds (26.33 k allocations: 1.636 MiB, 69.69% compilation time)
Running: rectangle_rule_right
  0.020485 seconds (17.96 k allocations: 1.084 MiB, 59.56% compilation time)
Running: rombergs_method
  0.137935 seconds (176.59 k allocations: 10.194 MiB, 98.38% compilation time)
Running: simpsons_rule
  0.000328 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.030473 seconds (80.36 k allocations: 3.492 MiB, 98.12% compilation time)
Running: trapezoidal_rule
  0.070267 seconds (2.39 M allocations: 37.744 MiB, 25.11% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000383 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.072119 seconds (2.46 k allocations: 1.691 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=2
  0.070486 seconds (2.71 k allocations: 2.355 MiB, 96.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.063967 seconds (2.31 k allocations: 2.028 MiB, 96.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.067169 seconds (2.31 k allocations: 1.469 MiB, 97.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.468773 seconds (371.63 k allocations: 905.326 MiB, 6.15% gc time, 4.35% compilation time)
Running: legendre_quadrature
  0.046700 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000124 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000080 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.779653 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000194 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.727213 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.037521 seconds (993 allocations: 56.609 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000870 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000126 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.065856 seconds (2.53 k allocations: 579.203 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.077745 seconds (2.79 k allocations: 780.188 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.075191 seconds (2.39 k allocations: 661.047 KiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.065594 seconds (2.39 k allocations: 491.547 KiB, 99.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.446018 seconds (378.19 k allocations: 253.531 MiB, 17.72% compilation time)
Running: legendre_quadrature
  0.050980 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000082 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000035 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.757071 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000060 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.706955 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.051199 seconds (1.21 k allocations: 64.875 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000245 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
