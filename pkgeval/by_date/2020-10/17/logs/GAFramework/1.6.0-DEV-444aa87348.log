Julia Version 1.6.0-DEV.1274
Commit 444aa87348 (2020-10-17 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_wA2LzY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_wA2LzY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172332486590428
curgen: 20 fitness: 0.2172332486590428
curgen: 30 fitness: 0.2172332486590428
curgen: 40 fitness: 0.2172332486590428
curgen: 50 fitness: 0.2172332486590428
CoordinateCreature{Vector{Float64}}([-0.22245560025800737], -0.2172332486590428) -0.22245560025800737 -0.2172332486590428
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2575486544336067
curgen: 100 fitness: 3.258065805948549
curgen: 150 fitness: 3.2581905124001955
curgen: 200 fitness: 3.258235846829528
curgen: 250 fitness: 3.25835733970867
curgen: 300 fitness: 3.25835733970867
curgen: 350 fitness: 3.25835733970867
curgen: 400 fitness: 3.2583990815778887
curgen: 450 fitness: 3.258404355618926
curgen: 500 fitness: 3.2584051818482918
CoordinateCreature{Vector{Float64}}([-0.22261653743450174, -0.22203939876911996, -0.22264692177852077, 0.22233499886390617, 0.22283467120912107, -0.22228823390362518, -0.22334137130756512, -0.2219600748772102, -0.22315820143284995, -0.2226286658085509, -0.2228046305368611, 0.22257238025129866, -0.22284315336348684, 0.22237616566230414, -0.2220601714826245], -3.2584051818482918) [-0.22261653743450174, -0.22203939876911996, -0.22264692177852077, 0.22233499886390617, 0.22283467120912107, -0.22228823390362518, -0.22334137130756512, -0.2219600748772102, -0.22315820143284995, -0.2226286658085509, -0.2228046305368611, 0.22257238025129866, -0.22284315336348684, 0.22237616566230414, -0.2220601714826245] -3.2584051818482918
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003202414965130629
curgen: 100 fitness: -0.003131788219690179
curgen: 150 fitness: -0.002696280904217474
curgen: 200 fitness: -0.002675407801120855
curgen: 250 fitness: -0.002675407801120855
curgen: 300 fitness: -0.002675407801120855
curgen: 350 fitness: -0.001651204560999986
curgen: 400 fitness: -0.0012857089954252388
curgen: 450 fitness: -0.0010466921552279018
curgen: 500 fitness: -0.0008888319287621016
CoordinateCreature{Vector{Float64}}([0.00015593512260487705, -0.0002532029492121955, 0.0010243212068180498, 0.00010799141361694559, 0.0014246417831694897, 0.000645005537326455, -0.00010113185521721682, 0.00031992040040380865, -5.7208630677147224e-5, -0.00011210340367925062, -8.687784718606345e-6, 0.00025225810039297203, -0.0003628500841626295, -0.0005604099509709499, -0.0004973839916150545], 0.0008888319287621016) [0.00015593512260487705, -0.0002532029492121955, 0.0010243212068180498, 0.00010799141361694559, 0.0014246417831694897, 0.000645005537326455, -0.00010113185521721682, 0.00031992040040380865, -5.7208630677147224e-5, -0.00011210340367925062, -8.687784718606345e-6, 0.00025225810039297203, -0.0003628500841626295, -0.0005604099509709499, -0.0004973839916150545] 0.0008888319287621016
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
