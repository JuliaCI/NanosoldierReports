Julia Version 1.6.0-DEV.1262
Commit 8078eacab7 (2020-10-17 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed MacroTools â”€ v0.5.5
   Installed IRTools â”€â”€â”€â”€ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7869d1d1] + IRTools v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7869d1d1] + IRTools v0.4.1
  [1914dd2f] + MacroTools v0.5.5
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [8dfed614] + Test
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mMacroTools[39m
[32m  âœ“ [39mIRTools
2 dependencies successfully precompiled
     Testing IRTools
Status `/tmp/jl_k5lgw1/Project.toml`
  [e30172f5] Documenter v0.25.2
  [7869d1d1] IRTools v0.4.1
  [1914dd2f] MacroTools v0.5.5
  [b77e0a4c] InteractiveUtils
  [8dfed614] Test
Status `/tmp/jl_k5lgw1/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [7869d1d1] IRTools v0.4.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.11
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
IR: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
  Got exception outside of a @test
  LoadError: LoadError: UndefVarError: f not defined
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
    [3] shortdef1(ex::Expr)
      @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
    [4] prewalk
      @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
    [5] shortdef(ex::Expr)
      @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
    [6] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
    [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ none:6
   [16] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [17] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [18] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:27
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:27
Analysis: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:7
  Expression: dominators(CFG(ir)) == Dict(1 => Set([1]), 2 => Set([1, 2]), 3 => Set([1, 3]), 4 => Set([1, 4]))
   Evaluated: Dict{Int64, Set{Int64}}(2 => Set([2, 1]), 3 => Set([3, 1]), 1 => Set([1])) == Dict{Int64, Set{Int64}}(4 => Set([4, 1]), 2 => Set([2, 1]), 3 => Set([3, 1]), 1 => Set([1]))
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:7
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Analysis: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:10
  Expression: domtree(CFG(ir)) == (1 => [2 => [], 3 => [], 4 => []])
   Evaluated: Pair{Int64, Any}(1, Pair{Int64, Any}[2 => Pair{Int64, Any}[], 3 => Pair{Int64, Any}[]]) == 1 => Pair{Int64, Vector{Any}}[2 => [], 3 => [], 4 => []]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:10
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Analysis: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:12
  Test threw exception
  Expression: domtree((CFG(ir))', entry = 4) == (4 => [1 => [], 2 => [], 3 => []])
  KeyError: key 4 not found
  Stacktrace:
    [1] getindex(h::Dict{Int64, Vector{Int64}}, key::Int64)
      @ Base ./dict.jl:482
    [2] (::IRTools.Inner.var"#children#141")(b::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:77
    [3] (::IRTools.Inner.var"#tree#144"{IRTools.Inner.var"#children#141"})(b::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:78
    [4] domtree(cfg::IRTools.Inner.CFG; entry::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:79
    [5] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:12
    [6] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:17
  Got exception outside of a @test
  LoadError: LoadError: UndefVarError: f not defined
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
    [3] shortdef1(ex::Expr)
      @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
    [4] prewalk
      @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
    [5] shortdef(ex::Expr)
      @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
    [6] macro expansion
      @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
    [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ none:6
   [16] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [17] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [18] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:7
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:7
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:8
  Expression: relu_cfg == CFG([[3, 2], [4], [4], []])
   Evaluated: IRTools.Inner.CFG([[3], [3], Int64[]]) == IRTools.Inner.CFG([[3, 2], [4], [4], Int64[]])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:8
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:10
  Expression: reloop(relu_cfg) == Simple(1, Multiple([Simple(3), Simple(2)], Simple(4)))
   Evaluated: Structured CFG:
1
3
 == Structured CFG:
1
Multiple:
  Simple:
    3
  Simple:
    2
4

Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:10
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:12
  Expression: sort.(stackify(relu_cfg)) == ([1 => 2, 1 => 3, 1 => 4], [])
   Evaluated: (Any[1 => 3], Any[]) == ([1 => 2, 1 => 3, 1 => 4], Any[])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:12
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:25
  Expression: pow_cfg == CFG([[2], [4, 3], [2], []])
   Evaluated: IRTools.Inner.CFG([[2], [2], Int64[]]) == IRTools.Inner.CFG([[2], [4, 3], [2], Int64[]])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:25
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:27
  Expression: reloop(pow_cfg) == Simple(1, Loop(Simple(2, Simple(3)), Simple(4)))
   Evaluated: Structured CFG:
1
Loop:
  2
 == Structured CFG:
1
Loop:
  2
  3
4

Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:27
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:29
  Expression: sort.(stackify(pow_cfg)) == ([1 => 2, 1 => 4, 2 => 3], [3 => 2])
   Evaluated: (Any[1 => 2], Any[]) == ([1 => 2, 1 => 4, 2 => 3], [3 => 2])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:29
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:21
  Got exception outside of a @test
  LoadError: UndefVarError: branches not defined
  Stacktrace:
    [1] ast(cx::IRTools.Inner.ASTCtx, cfg::IRTools.Inner.Simple)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:172
    [2] reloop(ir::IRTools.Inner.IR; inline::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:225
    [3] reloop(ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:222
    [4] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:36
    [5] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [6] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
    [7] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
    [8] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
    [9] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [10] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ none:6
   [13] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [15] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:36
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:58-68
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: IR, @dynamo
â”‚ 
â”‚ julia> @dynamo roundtrip(a...) = IR(a...)
â”‚ 
â”‚ julia> mul(a, b) = a*b
â”‚ mul (generic function with 1 method)
â”‚ 
â”‚ julia> roundtrip(mul, 2, 3)
â”‚ 6
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ roundtrip(mul, 2, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚ Stacktrace:
â”‚  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
â”‚  [4] #s59#1
â”‚    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
â”‚  [5] #s59#1(250::Any, args::Any)
â”‚    @ Main ./none:0
â”‚  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚    @ Core ./boot.jl:571
â”‚  [7] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 6
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    6ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚    Stacktrace:
â”‚     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
â”‚     [4] #s59#1
â”‚       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
â”‚     [5] #s59#1(250::Any, args::Any)
â”‚       @ Main ./none:0
â”‚     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚       @ Core ./boot.jl:571
â”‚     [7] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:74-86
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: @code_ir
â”‚ 
â”‚ julia> @code_ir mul(2, 3)
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ 
â”‚ julia> @code_ir roundtrip mul(1, 2)
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir mul(2, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   %5 = return %1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2, %3)
â”‚      %4 = %2 * %3
â”‚      %5 = return %4%1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:74-86
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: @code_ir
â”‚ 
â”‚ julia> @code_ir mul(2, 3)
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ 
â”‚ julia> @code_ir roundtrip mul(1, 2)
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir roundtrip mul(1, 2)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   %5 = return %1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   %4 = %2 * %3
â”‚   return %4
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2, %3)
â”‚      %4 = %2 * %3
â”‚      %5 = return %4%1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:90-101
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using MacroTools
â”‚ 
â”‚ julia> @dynamo function foo(a...)
â”‚          ir = IR(a...)
â”‚          ir = MacroTools.prewalk(ir) do x
â”‚            x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚            return x
â”‚          end
â”‚          return ir
â”‚        end
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @dynamo function foo(a...)
â”‚   ir = IR(a...)
â”‚   ir = MacroTools.prewalk(ir) do x
â”‚     x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚     return x
â”‚   end
â”‚   return ir
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: LoadError: UndefVarError: f not defined
â”‚ Stacktrace:
â”‚  [1] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚  [2] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚  [3] shortdef1(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚  [4] prewalk
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚  [5] shortdef(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚  [6] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚  [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚ in expression starting at none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    ERROR: LoadError: UndefVarError: f not defined
â”‚    Stacktrace:
â”‚     [1] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚     [2] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚     [3] shortdef1(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚     [4] prewalk
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚     [5] shortdef(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚     [6] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚     [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚    in expression starting at none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:105-115
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> foo() do
â”‚          10*5
â”‚        end
â”‚ 15
â”‚ 
â”‚ julia> foo() do
â”‚          prod([10, 5])
â”‚        end
â”‚ 50
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo() do
â”‚   10*5
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 15
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    15ERROR: UndefVarError: foo not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:105-115
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> foo() do
â”‚          10*5
â”‚        end
â”‚ 15
â”‚ 
â”‚ julia> foo() do
â”‚          prod([10, 5])
â”‚        end
â”‚ 50
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo() do
â”‚   prod([10, 5])
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 50
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    50ERROR: UndefVarError: foo not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:125-141
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: xcall
â”‚ 
â”‚ julia> @dynamo function foo2(a...)
â”‚          ir = IR(a...)
â”‚          ir == nothing && return
â”‚          ir = MacroTools.prewalk(ir) do x
â”‚            x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚            return x
â”‚          end
â”‚          for (x, st) in ir
â”‚            isexpr(st.expr, :call) || continue
â”‚            ir[x] = xcall(foo2, st.expr.args...)
â”‚          end
â”‚          return ir
â”‚        end
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @dynamo function foo2(a...)
â”‚   ir = IR(a...)
â”‚   ir == nothing && return
â”‚   ir = MacroTools.prewalk(ir) do x
â”‚     x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚     return x
â”‚   end
â”‚   for (x, st) in ir
â”‚     isexpr(st.expr, :call) || continue
â”‚     ir[x] = xcall(foo2, st.expr.args...)
â”‚   end
â”‚   return ir
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: LoadError: UndefVarError: f not defined
â”‚ Stacktrace:
â”‚  [1] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚  [2] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚  [3] shortdef1(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚  [4] prewalk
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚  [5] shortdef(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚  [6] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚  [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚ in expression starting at none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    ERROR: LoadError: UndefVarError: f not defined
â”‚    Stacktrace:
â”‚     [1] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚     [2] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚     [3] shortdef1(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚     [4] prewalk
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚     [5] shortdef(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚     [6] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚     [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚    in expression starting at none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> foo() do # Does not work (since there is no literal `*` here)
â”‚          mul(5, 10)
â”‚        end
â”‚ 50
â”‚ 
â”‚ julia> foo2() do # Works correctly
â”‚          mul(5, 10)
â”‚        end
â”‚ 15
â”‚ 
â”‚ julia> foo2() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo() do # Does not work (since there is no literal `*` here)
â”‚   mul(5, 10)
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 50
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    50ERROR: UndefVarError: foo not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> foo() do # Does not work (since there is no literal `*` here)
â”‚          mul(5, 10)
â”‚        end
â”‚ 50
â”‚ 
â”‚ julia> foo2() do # Works correctly
â”‚          mul(5, 10)
â”‚        end
â”‚ 15
â”‚ 
â”‚ julia> foo2() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo2() do # Works correctly
â”‚   mul(5, 10)
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo2 not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 15
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    15ERROR: UndefVarError: foo2 not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> foo() do # Does not work (since there is no literal `*` here)
â”‚          mul(5, 10)
â”‚        end
â”‚ 50
â”‚ 
â”‚ julia> foo2() do # Works correctly
â”‚          mul(5, 10)
â”‚        end
â”‚ 15
â”‚ 
â”‚ julia> foo2() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo2() do
â”‚   prod([5, 10])
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo2 not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 15
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    15ERROR: UndefVarError: foo2 not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:187-205
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: recurse!
â”‚ 
â”‚ julia> @dynamo function foo2(a...)
â”‚          ir = IR(a...)
â”‚          ir == nothing && return
â”‚          ir = MacroTools.prewalk(ir) do x
â”‚            x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚            return x
â”‚          end
â”‚          recurse!(ir)
â”‚          return ir
â”‚        end
â”‚ 
â”‚ julia> foo2() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @dynamo function foo2(a...)
â”‚   ir = IR(a...)
â”‚   ir == nothing && return
â”‚   ir = MacroTools.prewalk(ir) do x
â”‚     x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚     return x
â”‚   end
â”‚   recurse!(ir)
â”‚   return ir
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: LoadError: UndefVarError: f not defined
â”‚ Stacktrace:
â”‚  [1] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚  [2] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚  [3] shortdef1(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚  [4] prewalk
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚  [5] shortdef(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚  [6] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚  [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚ in expression starting at none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    ERROR: LoadError: UndefVarError: f not defined
â”‚    Stacktrace:
â”‚     [1] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚     [2] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚     [3] shortdef1(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚     [4] prewalk
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚     [5] shortdef(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚     [6] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚     [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚    in expression starting at none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:187-205
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: recurse!
â”‚ 
â”‚ julia> @dynamo function foo2(a...)
â”‚          ir = IR(a...)
â”‚          ir == nothing && return
â”‚          ir = MacroTools.prewalk(ir) do x
â”‚            x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
â”‚            return x
â”‚          end
â”‚          recurse!(ir)
â”‚          return ir
â”‚        end
â”‚ 
â”‚ julia> foo2() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo2() do
â”‚   prod([5, 10])
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: UndefVarError: foo2 not defined
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 15
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    15ERROR: UndefVarError: foo2 not defined
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:219-231
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> @dynamo function foo3(a...)
â”‚          ir = IR(a...)
â”‚          ir == nothing && return
â”‚          recurse!(ir)
â”‚          return ir
â”‚        end
â”‚ 
â”‚ julia> foo3() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @dynamo function foo3(a...)
â”‚   ir = IR(a...)
â”‚   ir == nothing && return
â”‚   recurse!(ir)
â”‚   return ir
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: LoadError: UndefVarError: f not defined
â”‚ Stacktrace:
â”‚  [1] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚  [2] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚  [3] shortdef1(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚  [4] prewalk
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚  [5] shortdef(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚  [6] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚  [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚ in expression starting at none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    ERROR: LoadError: UndefVarError: f not defined
â”‚    Stacktrace:
â”‚     [1] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚     [2] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚     [3] shortdef1(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚     [4] prewalk
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚     [5] shortdef(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚     [6] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚     [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚    in expression starting at none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:219-231
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> @dynamo function foo3(a...)
â”‚          ir = IR(a...)
â”‚          ir == nothing && return
â”‚          recurse!(ir)
â”‚          return ir
â”‚        end
â”‚ 
â”‚ julia> foo3() do
â”‚          prod([5, 10])
â”‚        end
â”‚ 15
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ foo3() do
â”‚   prod([5, 10])
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: MethodError: no method matching foo3(::var"#15#16")
â”‚ Closest candidates are:
â”‚   foo3(!Matched::typeof(*), !Matched::Any, !Matched::Any) at none:1
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 15
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    15ERROR: MethodError: no method matching foo3(::var"#15#16")
â”‚    Closest candidates are:
â”‚      foo3(!Matched::typeof(*), !Matched::Any, !Matched::Any) at none:1
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:251-261
â”‚ 
â”‚ ```jldoctest counter
â”‚ julia> using IRTools: @dynamo, IR, xcall, self, recurse!
â”‚ 
â”‚ julia> @dynamo function (c::Counter)(m...)
â”‚          ir = IR(m...)
â”‚          ir == nothing && return
â”‚          recurse!(ir)
â”‚          pushfirst!(ir, xcall(count!, self))
â”‚          return ir
â”‚        end
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @dynamo function (c::Counter)(m...)
â”‚   ir = IR(m...)
â”‚   ir == nothing && return
â”‚   recurse!(ir)
â”‚   pushfirst!(ir, xcall(count!, self))
â”‚   return ir
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: LoadError: UndefVarError: f not defined
â”‚ Stacktrace:
â”‚  [1] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚  [2] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚  [3] shortdef1(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚  [4] prewalk
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚  [5] shortdef(ex::Expr)
â”‚    @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚  [6] macro expansion
â”‚    @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚  [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚ in expression starting at none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    ERROR: LoadError: UndefVarError: f not defined
â”‚    Stacktrace:
â”‚     [1] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:44 [inlined]
â”‚     [2] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:18 [inlined]
â”‚     [3] shortdef1(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:240
â”‚     [4] prewalk
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:126 [inlined]
â”‚     [5] shortdef(ex::Expr)
â”‚       @ MacroTools ~/.julia/packages/MacroTools/X77lQ/src/utils.jl:251
â”‚     [6] macro expansion
â”‚       @ ~/.julia/packages/MacroTools/X77lQ/src/match/macro.jl:72 [inlined]
â”‚     [7] @dynamo(__source__::LineNumberNode, __module__::Module, ex::Any)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:105
â”‚    in expression starting at none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:265-276
â”‚ 
â”‚ ```jldoctest counter
â”‚ julia> c = Counter()
â”‚ Counter(0)
â”‚ 
â”‚ julia> c() do
â”‚          1 + 2.0
â”‚        end
â”‚ 3.0
â”‚ 
â”‚ julia> c.count
â”‚ 18
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ c() do
â”‚   1 + 2.0
â”‚ end
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: MethodError: objects of type Counter are not callable
â”‚ Stacktrace:
â”‚  [1] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 3.0
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    3.0ERROR: MethodError: objects of type Counter are not callable
â”‚    Stacktrace:
â”‚     [1] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:265-276
â”‚ 
â”‚ ```jldoctest counter
â”‚ julia> c = Counter()
â”‚ Counter(0)
â”‚ 
â”‚ julia> c() do
â”‚          1 + 2.0
â”‚        end
â”‚ 3.0
â”‚ 
â”‚ julia> c.count
â”‚ 18
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ c.count
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 0
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 18
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    180
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:17-27
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools
â”‚ 
â”‚ julia> f(x) = x+x
â”‚ f (generic function with 1 method)
â”‚ 
â”‚ julia> @code_ir f(1)
â”‚ 1: (%1, %2)
â”‚   %3 = %2 + %2
â”‚   return %3
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir f(1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 + %2
â”‚   %4 = return %1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 + %2
â”‚   return %3
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2)
â”‚      %3 = %2 + %2
â”‚      %4 = return %3%1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:33-44
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> f(x) = 3x*x + 2x + 1
â”‚ f (generic function with 1 method)
â”‚ 
â”‚ julia> @code_ir f(1)
â”‚ 1: (%1, %2)
â”‚   %3 = 3 * %2
â”‚   %4 = %3 * %2
â”‚   %5 = 2 * %2
â”‚   %6 = %4 + %5 + 1
â”‚   return %6
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir f(1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = 3 * %2
â”‚   %4 = %3 * %2
â”‚   %5 = 2 * %2
â”‚   %6 = %4 + %5 + 1
â”‚   %7 = return %4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = 3 * %2
â”‚   %4 = %3 * %2
â”‚   %5 = 2 * %2
â”‚   %6 = %4 + %5 + 1
â”‚   return %6
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2)
â”‚      %3 = 3 * %2
â”‚      %4 = %3 * %2
â”‚      %5 = 2 * %2
â”‚      %6 = %4 + %5 + 1
â”‚      %7 = return %6%4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:54-65
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> f(x) = x > 0 ? x : 0
â”‚ f (generic function with 1 method)
â”‚ 
â”‚ julia> @code_ir f(1)
â”‚ 1: (%1, %2)
â”‚   %3 = %2 > 0
â”‚   br 2 unless %3
â”‚   return %2
â”‚ 2:
â”‚   return 0
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir f(1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 > 0
â”‚   %4 = goto %4 if not %1
â”‚   %5 = return _2
â”‚   %6 = return 0
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 > 0
â”‚   br 2 unless %3
â”‚   return %2
â”‚ 2:
â”‚   return 0
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2)
â”‚      %3 = %2 > 0
â”‚      br 2 unless %3
â”‚      %4 = goto %4 if not %1
â”‚      %5 = return %2
â”‚    2:
â”‚      _2
â”‚      %6 = return 0
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:73-92
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> function f(x)
â”‚          if x < 0
â”‚            x = -x
â”‚          end
â”‚          return x
â”‚        end
â”‚ f (generic function with 1 method)
â”‚ 
â”‚ julia> @code_ir f(1)
â”‚ 1: (%1, %2)
â”‚   %3 = %2 < 0
â”‚   br 3 (%2) unless %3
â”‚   br 2
â”‚ 2:
â”‚   %4 = -%2
â”‚   br 3 (%4)
â”‚ 3: (%5)
â”‚   return %5
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir f(1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 < 0
â”‚   %4 = goto %5 if not %2
â”‚   %5 = -%2
â”‚   %6 = return _3
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2)
â”‚   %3 = %2 < 0
â”‚   br 3 (%2) unless %3
â”‚   br 2
â”‚ 2:
â”‚   %4 = -%2
â”‚   br 3 (%4)
â”‚ 3: (%5)
â”‚   return %5
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2)
â”‚      %3 = %2 < 0
â”‚      br 3 (%2) unless %3
â”‚      br 2
â”‚    2:
â”‚      %4 = goto %5 if not %2
â”‚      %5 = -%2
â”‚      br 3 (%4)
â”‚    3: (%5)
â”‚      %6 = return %5_3
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:100-124
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> function pow(x, n)
â”‚          r = 1
â”‚          while n > 0
â”‚            n -= 1
â”‚            r *= x
â”‚          end
â”‚          return r
â”‚        end
â”‚ pow (generic function with 1 method)
â”‚ 
â”‚ julia> @code_ir pow(1, 1)
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ @code_ir pow(1, 1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   %7 = goto %8 if not %3
â”‚   %8 = %4 - 1
â”‚   %9 = %5 * %2
â”‚   br 2 (%8, %9)
â”‚ 3:
â”‚   %10 = return _4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2, %3)
â”‚      br 2 (%3, 1)
â”‚    2: (%4, %5)
â”‚      %6 = %4 > 0
â”‚      br 4 unless %6
â”‚      br 3
â”‚    3:
â”‚      %7 = goto %8 if not %3
â”‚      %8 = %4 - 1
â”‚      %8 %9 = %5 * %2
â”‚      br 2 (%7, %8)
â”‚    4:
â”‚      (%8, %9)
â”‚    3:
â”‚      %10 = return %5_4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:170-184
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> ir = @code_ir pow(1, 1)
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ ir = @code_ir pow(1, 1)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   %7 = goto %8 if not %3
â”‚   %8 = %4 - 1
â”‚   %9 = %5 * %2
â”‚   br 2 (%8, %9)
â”‚ 3:
â”‚   %10 = return _4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2, %3)
â”‚      br 2 (%3, 1)
â”‚    2: (%4, %5)
â”‚      %6 = %4 > 0
â”‚      br 4 unless %6
â”‚      br 3
â”‚    3:
â”‚      %7 = goto %8 if not %3
â”‚      %8 = %4 - 1
â”‚      %8 %9 = %5 * %2
â”‚      br 2 (%7, %8)
â”‚    4:
â”‚      (%8, %9)
â”‚    3:
â”‚      %10 = return %5_4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:190-198
â”‚ 
â”‚ ```jldoctest main
â”‚ julia> using IRTools: block
â”‚ 
â”‚ julia> block(ir, 2)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ block(ir, 2)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   %7 = goto %8 if not %3
â”‚   %8 = %4 - 1
â”‚   %9 = %5 * %2
â”‚   br 2 (%8, %9)
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    2: (%4, %5)
â”‚      %6 = %4 > 0
â”‚      br 4 unless %6
â”‚      %7 = goto %8 if not %3
â”‚      %8 = %4 - 1
â”‚      %9 = %5 * %2
â”‚      br 32 (%8, %9)
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:204-222
â”‚ 
â”‚ ```jldoctest eval
â”‚ julia> using IRTools
â”‚ 
â”‚ julia> using IRTools: IR, argument!, return!, xcall, func
â”‚ 
â”‚ julia> ir = IR();
â”‚ 
â”‚ julia> x = argument!(ir);
â”‚ 
â”‚ julia> y = push!(ir, xcall(:*, x, x));
â”‚ 
â”‚ julia> return!(ir, y)
â”‚ 1: (%1)
â”‚   %2 = %1 * %1
â”‚   return %2
â”‚ 
â”‚ julia> IRTools.evalir(ir, 5)
â”‚ 25
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ IRTools.evalir(ir, 5)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚ Stacktrace:
â”‚   [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚     @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚   [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚   [3] build_codeinfo(ir::IRTools.Inner.IR)
â”‚     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
â”‚   [4] #s60#279
â”‚     @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
â”‚   [5] #s60#279(::Any, arg1::Any)
â”‚     @ IRTools.Inner ./none:0
â”‚   [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚     @ Core ./boot.jl:571
â”‚   [7] #invokelatest#2
â”‚     @ ./essentials.jl:707 [inlined]
â”‚   [8] invokelatest
â”‚     @ ./essentials.jl:706 [inlined]
â”‚   [9] evalir(m::Module, ir::IRTools.Inner.IR, args::Any)
â”‚     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:25
â”‚  [10] evalir(ir::IRTools.Inner.IR, args::Any)
â”‚     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:26
â”‚  [11] top-level scope
â”‚     @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 25
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    25ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚    Stacktrace:
â”‚      [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚        @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚      [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚      [3] build_codeinfo(ir::IRTools.Inner.IR)
â”‚        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
â”‚      [4] #s60#279
â”‚        @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
â”‚      [5] #s60#279(::Any, arg1::Any)
â”‚        @ IRTools.Inner ./none:0
â”‚      [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚        @ Core ./boot.jl:571
â”‚      [7] #invokelatest#2
â”‚        @ ./essentials.jl:707 [inlined]
â”‚      [8] invokelatest
â”‚        @ ./essentials.jl:706 [inlined]
â”‚      [9] evalir(m::Module, ir::IRTools.Inner.IR, args::Any)
â”‚        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:25
â”‚     [10] evalir(ir::IRTools.Inner.IR, args::Any)
â”‚        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:26
â”‚     [11] top-level scope
â”‚        @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:251-286
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using IRTools: IR, @code_ir, xcall, func, var
â”‚ 
â”‚ julia> function pow(x, n)
â”‚          r = 1
â”‚          while n > 0
â”‚            n -= 1
â”‚            r *= x
â”‚          end
â”‚          return r
â”‚        end
â”‚ pow (generic function with 1 method)
â”‚ 
â”‚ julia> ir = @code_ir pow(2, 3)
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ 
â”‚ 
â”‚ julia> ir[var(8)] = xcall(:+, var(5), var(2))
â”‚ :(%5 + %2)
â”‚ 
â”‚ julia> mul = func(ir);
â”‚ 
â”‚ julia> mul(nothing, 10, 3)
â”‚ 31
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ ir = @code_ir pow(2, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   %7 = goto %8 if not %3
â”‚   %8 = %4 - 1
â”‚   %9 = %5 * %2
â”‚   br 2 (%8, %9)
â”‚ 3:
â”‚   %10 = return _4
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    1: (%1, %2, %3)
â”‚      br 2 (%3, 1)
â”‚    2: (%4, %5)
â”‚      %6 = %4 > 0
â”‚      br 4 unless %6
â”‚      br 3
â”‚    3:
â”‚      %7 = goto %8 if not %3
â”‚      %8 = %4 - 1
â”‚      %8 %9 = %5 * %2
â”‚      br 2 (%7, %8)
â”‚    4:
â”‚      (%8, %9)
â”‚    3:
â”‚      %10 = return %5_4
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:251-286
â”‚ 
â”‚ ```jldoctest
â”‚ julia> using IRTools: IR, @code_ir, xcall, func, var
â”‚ 
â”‚ julia> function pow(x, n)
â”‚          r = 1
â”‚          while n > 0
â”‚            n -= 1
â”‚            r *= x
â”‚          end
â”‚          return r
â”‚        end
â”‚ pow (generic function with 1 method)
â”‚ 
â”‚ julia> ir = @code_ir pow(2, 3)
â”‚ 1: (%1, %2, %3)
â”‚   br 2 (%3, 1)
â”‚ 2: (%4, %5)
â”‚   %6 = %4 > 0
â”‚   br 4 unless %6
â”‚   br 3
â”‚ 3:
â”‚   %7 = %4 - 1
â”‚   %8 = %5 * %2
â”‚   br 2 (%7, %8)
â”‚ 4:
â”‚   return %5
â”‚ 
â”‚ 
â”‚ julia> ir[var(8)] = xcall(:+, var(5), var(2))
â”‚ :(%5 + %2)
â”‚ 
â”‚ julia> mul = func(ir);
â”‚ 
â”‚ julia> mul(nothing, 10, 3)
â”‚ 31
â”‚ ```
â”‚ 
â”‚ Subexpression:
â”‚ 
â”‚ mul(nothing, 10, 3)
â”‚ 
â”‚ Evaluated output:
â”‚ 
â”‚ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚ Stacktrace:
â”‚  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚  [3] build_codeinfo(ir::IRTools.Inner.IR)
â”‚    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
â”‚  [4] #s60#280
â”‚    @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
â”‚  [5] #s60#280(::Any, arg1::Any, arg2::Any, arg3::Any)
â”‚    @ IRTools.Inner ./none:0
â”‚  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚    @ Core ./boot.jl:571
â”‚  [7] top-level scope
â”‚    @ none:1
â”‚ 
â”‚ Expected output:
â”‚ 
â”‚ 31
â”‚ 
â”‚   diff =
â”‚    Warning: Diff output requires color.
â”‚    31ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
â”‚    Stacktrace:
â”‚     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
â”‚       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
â”‚     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
â”‚     [3] build_codeinfo(ir::IRTools.Inner.IR)
â”‚       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
â”‚     [4] #s60#280
â”‚       @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
â”‚     [5] #s60#280(::Any, arg1::Any, arg2::Any, arg3::Any)
â”‚       @ IRTools.Inner ./none:0
â”‚     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
â”‚       @ Core ./boot.jl:571
â”‚     [7] top-level scope
â”‚       @ none:1
â”” @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
â”Œ Error: Doctesting failed
â”‚   exception =
â”‚    `makedocs` encountered a doctest error. Terminating build
â”‚    Stacktrace:
â”‚      [1] error(s::String)
â”‚        @ Base ./error.jl:33
â”‚      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
â”‚        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
â”‚      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
â”‚        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
â”‚      [4] #2
â”‚        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
â”‚      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
â”‚        @ Base.Filesystem ./file.jl:104
â”‚      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
â”‚        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
â”‚      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
â”‚        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
â”‚      [8] macro expansion
â”‚        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
â”‚      [9] macro expansion
â”‚        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
â”‚     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
â”‚        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
â”‚     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
â”‚        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
â”‚     [12] doctest(package::Module)
â”‚        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
â”‚     [13] top-level scope
â”‚        @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:25
â”‚     [14] top-level scope
â”‚        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
â”‚     [15] top-level scope
â”‚        @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
â”‚     [16] include(fname::String)
â”‚        @ Base.MainInclude ./client.jl:444
â”‚     [17] top-level scope
â”‚        @ none:6
â”‚     [18] eval(m::Module, e::Any)
â”‚        @ Core ./boot.jl:360
â”‚     [19] exec_options(opts::Base.JLOptions)
â”‚        @ Base ./client.jl:261
â”‚     [20] _start()
â”‚        @ Base ./client.jl:485
â”” @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: IRTools: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:       | Pass  Fail  Error  Total
IRTools             |    5     9      4     18
  IR                |    2            1      3
  Analysis          |          2      1      3
  Reflection        |    3                   3
  Compiler          |                 1      1
  Relooper          |          6      1      7
  Doctests: IRTools |          1             1
ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:3
ERROR: Package IRTools errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1667
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:333
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:320
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [11] top-level scope
    @ none:31
