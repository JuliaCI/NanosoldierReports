################################################################################
# PkgEval set-up: 2020-10-30T06:18:43.101
#

Julia Version 1.6.0-DEV.1380
Commit 300e34cf74 (2020-10-30 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T06:18:44.579
#

   Resolving package versions...
   Installed MayOptimize ─ v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [049513e6] + MayOptimize v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [049513e6] + MayOptimize v0.2.0


################################################################################
# Testing: 2020-10-30T06:18:46.112
#


     Testing MayOptimize
Status `/tmp/jl_Gowey1/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [049513e6] MayOptimize v0.2.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Gowey1/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [682c06a0] JSON v0.21.1
  [049513e6] MayOptimize v0.2.0
  [69de0a69] Parsers v1.0.11
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
Macros        |   62     62

Tests for T=Float32 and 10000 elements ("Basic" is Julia own implementation):
 - Time for `sum(Basic,x)` -------->   10.730 μs (0 allocations: 0 bytes)
 - Time for `sum(Debug,x)` -------->   10.589 μs (0 allocations: 0 bytes)
 - Time for `sum(InBounds,x)` ----->   10.459 μs (0 allocations: 0 bytes)
 - Time for `sum(Vectorize,x)` ---->   10.379 μs (0 allocations: 0 bytes)

 - Time for `dot(Basic,x,y)` -------->   862.614 ns (0 allocations: 0 bytes)
 - Time for `dot(Debug,x,y)` -------->   10.369 μs (0 allocations: 0 bytes)
 - Time for `dot(InBounds,x,y)` ----->   10.749 μs (0 allocations: 0 bytes)
 - Time for `dot(Vectorize,x,y)` ---->   17.569 μs (0 allocations: 0 bytes)

Tests for T=Float64 and 10000 elements ("Basic" is Julia own implementation):
 - Time for `sum(Basic,x)` -------->   10.810 μs (0 allocations: 0 bytes)
 - Time for `sum(Debug,x)` -------->   10.730 μs (0 allocations: 0 bytes)
 - Time for `sum(InBounds,x)` ----->   10.549 μs (0 allocations: 0 bytes)
 - Time for `sum(Vectorize,x)` ---->   10.759 μs (0 allocations: 0 bytes)

 - Time for `dot(Basic,x,y)` -------->   1.818 μs (0 allocations: 0 bytes)
 - Time for `dot(Debug,x,y)` -------->   10.559 μs (0 allocations: 0 bytes)
 - Time for `dot(InBounds,x,y)` ----->   10.810 μs (0 allocations: 0 bytes)
 - Time for `dot(Vectorize,x,y)` ---->   17.770 μs (0 allocations: 0 bytes)
     Testing MayOptimize tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-30T06:20:30.911
CPU usage: 107.10s (104.86s user, 2.45s kernel)

Network usage:
- eth0: 166.530 KiB received, 11.830 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":1,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":1,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":6,"op":"Total","minor":0},{"major":253,"value":1,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":1,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":6,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":4096,"op":"Read","minor":0},{"major":259,"value":20480,"op":"Write","minor":0},{"major":259,"value":4096,"op":"Sync","minor":0},{"major":259,"value":20480,"op":"Async","minor":0},{"major":259,"value":24576,"op":"Total","minor":0},{"major":253,"value":4096,"op":"Read","minor":2},{"major":253,"value":20480,"op":"Write","minor":2},{"major":253,"value":4096,"op":"Sync","minor":2},{"major":253,"value":20480,"op":"Async","minor":2},{"major":253,"value":24576,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":173580288,"max_usage":708710400,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":165408768,"inactive_file":12288,"inactive_anon":765952,"total_pgfault":632304,"total_cache":3416064,"total_rss_huge":0,"total_active_anon":168034304,"total_pgmajfault":0,"pgpgin":263153,"rss_huge":0,"mapped_file":0,"total_inactive_file":12288,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":221936,"hierarchical_memsw_limit":0,"cache":3416064,"active_file":4096,"pgfault":632304,"total_mapped_file":0,"total_pgpgout":221936,"total_writeback":0,"rss":165408768,"unevictable":0,"total_inactive_anon":765952,"total_pgpgin":263153,"active_anon":168034304,"total_active_file":4096},"limit":540972998656},"name":"/MayOptimize-ZW4S5URD","networks":{"eth0":{"rx_bytes":170527,"rx_packets":281,"tx_packets":82,"tx_bytes":12114,"tx_dropped":0,"rx_dropped":4,"tx_errors":0,"rx_errors":0}},"id":"b03a52ca71fa768e1631d5b59c84d931d7242d3a28b577f7853159d770b71b55","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":113715232180000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":104860000000,"usage_in_kernelmode":2450000000,"total_usage":107102030099,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107102027899,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2200,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T06:20:31.105303711Z"}