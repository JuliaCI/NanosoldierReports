################################################################################
# PkgEval set-up: 2020-10-30T05:38:42.259
#

Julia Version 1.6.0-DEV.1363
Commit f727f4ba82 (2020-10-28 23:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T05:38:43.375
#

   Resolving package versions...
   Installed StructTypes ─────── v1.1.0
   Installed DataAPI ─────────── v1.3.0
   Installed Parsers ─────────── v1.0.11
   Installed Missings ────────── v0.4.4
   Installed JSON ────────────── v0.21.1
   Installed CategoricalArrays ─ v0.8.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [324d7699] + CategoricalArrays v0.8.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.8.3
  [9a962f9c] + DataAPI v1.3.0
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [69de0a69] + Parsers v1.0.11
  [856f2bd8] + StructTypes v1.1.0
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2020-10-30T05:38:45.216
#


     Testing CategoricalArrays
Status `/tmp/jl_U0FcU1/Project.toml`
  [324d7699] CategoricalArrays v0.8.3
  [9a962f9c] DataAPI v1.3.0
  [682c06a0] JSON v0.21.1
  [0f8b85d8] JSON3 v1.4.0
  [e1d29d7a] Missings v0.4.4
  [2dfb63ee] PooledArrays v0.5.3
  [856f2bd8] StructTypes v1.1.0
  [ade2ca70] Dates
  [9fa8497b] Future
  [de0858da] Printf
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Status `/tmp/jl_U0FcU1/Manifest.toml`
  [324d7699] CategoricalArrays v0.8.3
  [9a962f9c] DataAPI v1.3.0
  [682c06a0] JSON v0.21.1
  [0f8b85d8] JSON3 v1.4.0
  [e1d29d7a] Missings v0.4.4
  [69de0a69] Parsers v1.0.11
  [2dfb63ee] PooledArrays v0.5.3
  [856f2bd8] StructTypes v1.1.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
01_value.jl   |   58     58
Test Summary:      | Pass  Total
04_constructors.jl |   70     70
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64, R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Missing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64, UInt32}) is ambiguous. Candidates:
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:68
  Possible fix, define
    convert(::Type{S}, ::T) where {S>:Nothing, T<:CategoricalArrays.CategoricalValue}
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/0ZAbp/test/05_convert.jl:7
Test Summary:                                                   | Pass  Error  Total
05_convert.jl                                                   |   61     12     73
  convert() for CategoricalPool{Int, DefaultRefType} and values |   37     12     49
  promote_type                                                  |   13            13
  convert() preserves `ordered`                                 |    1             1
  convert() with Union{T, Nothing}                              |    3             3
  levelcode                                                     |    7             7
Test Summary:                                                   | Pass  Error  Total
05_convert.jl                                                   |   61     12     73
  convert() for CategoricalPool{Int, DefaultRefType} and values |   37     12     49
  promote_type                                                  |   13            13
  convert() preserves `ordered`                                 |    1             1
  convert() with Union{T, Nothing}                              |    3             3
  levelcode                                                     |    7             7
ERROR: LoadError: Some tests did not pass: 61 passed, 0 failed, 12 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CategoricalArrays/0ZAbp/test/runtests.jl:5

caused by: Some tests did not pass: 61 passed, 0 failed, 12 errored, 0 broken.

PkgEval failed: Package CategoricalArrays errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-30T05:39:17.147
CPU usage: 34.07s (32.28s user, 1.82s kernel)

Network usage:
- eth0: 350.527 KiB received, 32.755 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":5,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":5,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":20480,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":20480,"op":"Async","minor":0},{"major":259,"value":20480,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":20480,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":20480,"op":"Async","minor":2},{"major":253,"value":20480,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":215310336,"max_usage":727326720,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":205561856,"inactive_file":8192,"inactive_anon":1323008,"total_pgfault":625784,"total_cache":4481024,"total_rss_huge":0,"total_active_anon":208707584,"total_pgmajfault":0,"pgpgin":372831,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":321551,"hierarchical_memsw_limit":0,"cache":4481024,"active_file":0,"pgfault":625784,"total_mapped_file":0,"total_pgpgout":321551,"total_writeback":0,"rss":205561856,"unevictable":0,"total_inactive_anon":1323008,"total_pgpgin":372831,"active_anon":208707584,"total_active_file":0},"limit":540972998656},"name":"/CategoricalArrays-vuBsHLQU","networks":{"eth0":{"rx_bytes":358940,"rx_packets":297,"tx_packets":237,"tx_bytes":33541,"tx_dropped":0,"rx_dropped":1,"tx_errors":0,"rx_errors":0}},"id":"368153136acbe1cc346400f2ee42fcfa55d004cca5d6aff2ca880baa36b25800","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":113400196810000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":32280000000,"usage_in_kernelmode":1820000000,"total_usage":34070637213,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34070637213,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T05:39:17.150030519Z"}