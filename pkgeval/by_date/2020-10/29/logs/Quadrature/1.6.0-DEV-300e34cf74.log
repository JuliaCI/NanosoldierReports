################################################################################
# PkgEval set-up: 2020-10-30T04:16:48.771
#

Julia Version 1.6.0-DEV.1380
Commit 300e34cf74 (2020-10-30 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T04:16:50.336
#

   Resolving package versions...
   Installed FunctionWrappers ───────────── v1.1.1
   Installed MacroTools ─────────────────── v0.5.6
   Installed ArrayLayouts ───────────────── v0.4.10
   Installed DiffResults ────────────────── v1.0.2
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed ChainRulesCore ─────────────── v0.9.17
   Installed Quadrature ─────────────────── v1.5.0
   Installed JLLWrappers ────────────────── v1.1.3
   Installed CommonSolve ────────────────── v0.2.0
   Installed UnPack ─────────────────────── v1.0.2
   Installed MonteCarloIntegration ──────── v0.0.1
   Installed AbstractFFTs ───────────────── v0.5.0
   Installed PDMats ─────────────────────── v0.10.1
   Installed Rmath ──────────────────────── v0.6.1
   Installed ChainRulesTestUtils ────────── v0.5.3
   Installed DiffEqBase ─────────────────── v6.48.2
   Installed ArrayInterface ─────────────── v2.13.7
   Installed DiffRules ──────────────────── v1.0.1
   Installed FillArrays ─────────────────── v0.9.7
   Installed FiniteDifferences ──────────── v0.11.2
   Installed CommonSubexpressions ───────── v0.3.0
   Installed SpecialFunctions ───────────── v0.10.3
   Installed RecursiveFactorization ─────── v0.1.4
   Installed SIMDPirates ────────────────── v0.8.25
   Installed QuadGK ─────────────────────── v2.4.1
   Installed Requires ───────────────────── v1.1.0
   Installed IRTools ────────────────────── v0.4.1
   Installed OffsetArrays ───────────────── v1.3.1
   Installed Roots ──────────────────────── v1.0.5
   Installed SLEEFPirates ───────────────── v0.5.5
   Installed ZygoteRules ────────────────── v0.2.0
   Installed OrderedCollections ─────────── v1.3.1
   Installed IteratorInterfaceExtensions ── v1.0.0
   Installed Parameters ─────────────────── v0.12.1
   Installed VectorizationBase ──────────── v0.12.33
   Installed NNlib ──────────────────────── v0.7.5
   Installed RecipesBase ────────────────── v1.1.0
   Installed Richardson ─────────────────── v1.2.0
   Installed NaNMath ────────────────────── v0.3.4
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed IterativeSolvers ───────────── v0.8.4
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed MuladdMacro ────────────────── v0.2.2
   Installed DataStructures ─────────────── v0.18.8
   Installed StatsFuns ──────────────────── v0.9.5
   Installed LabelledArrays ─────────────── v1.3.0
   Installed ReverseDiff ────────────────── v1.4.3
   Installed RecursiveArrayTools ────────── v2.7.2
   Installed CpuId ──────────────────────── v0.2.2
   Installed LoopVectorization ──────────── v0.8.26
   Installed Reexport ───────────────────── v0.2.0
   Installed DocStringExtensions ────────── v0.8.3
   Installed HCubature ──────────────────── v1.4.0
   Installed Tables ─────────────────────── v1.1.0
   Installed ChainRules ─────────────────── v0.7.31
   Installed DataAPI ────────────────────── v1.3.0
   Installed Compat ─────────────────────── v3.23.0
   Installed Combinatorics ──────────────── v1.0.2
   Installed Missings ───────────────────── v0.4.4
   Installed TreeViews ──────────────────── v0.3.0
   Installed Rmath_jll ──────────────────── v0.2.2+1
   Installed Distributions ──────────────── v0.23.12
   Installed DataValueInterfaces ────────── v1.0.0
   Installed TableTraits ────────────────── v1.0.0
   Installed StaticArrays ───────────────── v0.12.5
   Installed StatsBase ──────────────────── v0.33.2
   Installed ForwardDiff ────────────────── v0.10.12
   Installed Zygote ─────────────────────── v0.5.9
Updating `~/.julia/environments/v1.6/Project.toml`
  [67601950] + Quadrature v1.5.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4fba245c] + ArrayInterface v2.13.7
  [4c555306] + ArrayLayouts v0.4.10
  [082447d4] + ChainRules v0.7.31
  [d360d2e6] + ChainRulesCore v0.9.17
  [cdddcdb0] + ChainRulesTestUtils v0.5.3
  [861a8166] + Combinatorics v1.0.2
  [38540f10] + CommonSolve v0.2.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.23.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.48.2
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [31c24e10] + Distributions v0.23.12
  [ffbed154] + DocStringExtensions v0.8.3
  [1a297f60] + FillArrays v0.9.7
  [26cc04aa] + FiniteDifferences v0.11.2
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [19dc6840] + HCubature v1.4.0
  [7869d1d1] + IRTools v0.4.1
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [4886b29c] + MonteCarloIntegration v0.0.1
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.5
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.10.1
  [d96e819e] + Parameters v0.12.1
  [1fd47b50] + QuadGK v2.4.1
  [67601950] + Quadrature v1.5.0
  [3cdcf5f2] + RecipesBase v1.1.0
  [731186ca] + RecursiveArrayTools v2.7.2
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [37e2e3b7] + ReverseDiff v1.4.3
  [708f8203] + Richardson v1.2.0
  [79098fc4] + Rmath v0.6.1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.33.2
  [4c63d2b9] + StatsFuns v0.9.5
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [e88e6eb3] + Zygote v0.5.9
  [700de1a5] + ZygoteRules v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building SLEEFPirates → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`


################################################################################
# Testing: 2020-10-30T04:17:08.700
#


     Testing Quadrature
Status `/tmp/jl_9tlpP3/Project.toml`
  [38540f10] CommonSolve v0.2.0
  [8a292aeb] Cuba v2.1.0
  [667455a9] Cubature v1.5.1
  [2b5f629d] DiffEqBase v6.48.2
  [31c24e10] Distributions v0.23.12
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [19dc6840] HCubature v1.4.0
  [4886b29c] MonteCarloIntegration v0.0.1
  [1fd47b50] QuadGK v2.4.1
  [67601950] Quadrature v1.5.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [37e2e3b7] ReverseDiff v1.4.3
  [1bc83da4] SafeTestsets v0.0.1
  [e88e6eb3] Zygote v0.5.9
  [700de1a5] ZygoteRules v0.2.0
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_9tlpP3/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4fba245c] ArrayInterface v2.13.7
  [4c555306] ArrayLayouts v0.4.10
  [082447d4] ChainRules v0.7.31
  [d360d2e6] ChainRulesCore v0.9.17
  [cdddcdb0] ChainRulesTestUtils v0.5.3
  [861a8166] Combinatorics v1.0.2
  [38540f10] CommonSolve v0.2.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.23.0
  [adafc99b] CpuId v0.2.2
  [8a292aeb] Cuba v2.1.0
  [667455a9] Cubature v1.5.1
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.48.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.12
  [ffbed154] DocStringExtensions v0.8.3
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [26cc04aa] FiniteDifferences v0.11.2
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [19dc6840] HCubature v1.4.0
  [7869d1d1] IRTools v0.4.1
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [2ee39098] LabelledArrays v1.3.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [4886b29c] MonteCarloIntegration v0.0.1
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.10.1
  [d96e819e] Parameters v0.12.1
  [1fd47b50] QuadGK v2.4.1
  [67601950] Quadrature v1.5.0
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.2
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [37e2e3b7] ReverseDiff v1.4.3
  [708f8203] Richardson v1.2.0
  [79098fc4] Rmath v0.6.1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.5
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [e88e6eb3] Zygote v0.5.9
  [700de1a5] ZygoteRules v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [3bed1096] Cuba_jll v4.2.0+2
  [7bc98958] Cubature_jll v1.0.3+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [f50d1b31] Rmath_jll v0.2.2+1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: Alg = Quadrature.QuadGKJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.QuadGKJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.QuadGKJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.QuadGKJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.HCubatureJL(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 1
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLh(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubatureJLp(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 1, Output Dimension = 2
[ Info: Alg = Quadrature.CubaSUAVE(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaDivonne(), Integrand = 2, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 1, Dimension = 2, Output Dimension = 2
[ Info: Alg = Quadrature.CubaCuhre(), Integrand = 2, Dimension = 2, Output Dimension = 2
Test Summary:   | Pass  Total
Interface Tests |  224    224
594.226045 seconds (1.33 G allocations: 69.982 GiB, 8.28% gc time, 17.37% compilation time)
Derivative Tests: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2812#1248
      @ ~/.julia/packages/Zygote/c0awc/src/compiler/interface2.jl:34 [inlined]
    [4] var"#s2812#1248"(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(::Function, ::Float64, ::Float64, ::Float64)
      @ Zygote ~/.julia/packages/Zygote/c0awc/src/compiler/interface.jl:38
    [7] pullback(::Function, ::Float64, ::Float64, ::Vararg{Float64, N} where N)
      @ Zygote ~/.julia/packages/Zygote/c0awc/src/compiler/interface.jl:44
    [8] gradient(::Function, ::Float64, ::Vararg{Float64, N} where N)
      @ Zygote ~/.julia/packages/Zygote/c0awc/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/Quadrature/ZmWGy/test/derivative_tests.jl:17
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [11] include(x::String)
      @ Main.##272 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [12] macro expansion
      @ ~/.julia/packages/Quadrature/ZmWGy/test/runtests.jl:6 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/Quadrature/ZmWGy/test/runtests.jl:6
   [15] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [16] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [17] top-level scope
      @ timing.jl:202
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Quadrature/ZmWGy/test/derivative_tests.jl:17
Test Summary:    | Error  Total
Derivative Tests |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Quadrature/ZmWGy/test/runtests.jl:6

PkgEval failed: Package Quadrature errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-30T04:27:54.928
CPU usage: 663.88s (642.03s user, 22.99s kernel)

Network usage:
- eth0: 9.359 MiB received, 251.735 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":9,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":9,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":9,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":9,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":69632,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":69632,"op":"Async","minor":0},{"major":259,"value":69632,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":69632,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":69632,"op":"Async","minor":2},{"major":253,"value":69632,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":289001472,"max_usage":1992847360,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":231534592,"inactive_file":8192,"inactive_anon":16650240,"total_pgfault":7308714,"total_cache":48410624,"total_rss_huge":0,"total_active_anon":263241728,"total_pgmajfault":0,"pgpgin":5075523,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":5007177,"hierarchical_memsw_limit":0,"cache":48410624,"active_file":0,"pgfault":7308714,"total_mapped_file":0,"total_pgpgout":5007177,"total_writeback":0,"rss":231534592,"unevictable":0,"total_inactive_anon":16650240,"total_pgpgin":5075523,"active_anon":263241728,"total_active_file":0},"limit":540972998656},"name":"/Quadrature-tvxyxv5v","networks":{"eth0":{"rx_bytes":9814109,"rx_packets":2971,"tx_packets":2060,"tx_bytes":257777,"tx_dropped":0,"rx_dropped":23,"tx_errors":0,"rx_errors":0}},"id":"840a907a5922a88e6bfca9a4ca837aa492d551b45753a7990d32c2428f6a2427","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":112854316240000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":642030000000,"usage_in_kernelmode":22990000000,"total_usage":663880021190,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,663879254579,5480,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,761131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T04:27:55.099640263Z"}