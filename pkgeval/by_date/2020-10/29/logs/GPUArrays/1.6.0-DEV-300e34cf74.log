################################################################################
# PkgEval set-up: 2020-10-30T04:41:10.541
#

Julia Version 1.6.0-DEV.1380
Commit 300e34cf74 (2020-10-30 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T04:41:11.628
#

   Resolving package versions...
   Installed GPUArrays ──── v6.1.1
   Installed AbstractFFTs ─ v0.5.0
   Installed Adapt ──────── v2.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [0c68f7d7] + GPUArrays v6.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [0c68f7d7] + GPUArrays v6.1.1
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2020-10-30T04:41:13.365
#


     Testing GPUArrays
Status `/tmp/jl_0lDdC5/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [1a297f60] FillArrays v0.10.0
  [0c68f7d7] GPUArrays v6.1.1
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
Status `/tmp/jl_0lDdC5/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [1a297f60] FillArrays v0.10.0
  [0c68f7d7] GPUArrays v6.1.1
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 1}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 1})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 1}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 1})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 1})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Vector{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23 [inlined]
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 1}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 1})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 1}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 1})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 1})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Vector{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23 [inlined]
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 1}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 1})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 1}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 1})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 1})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Vector{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23 [inlined]
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 2})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103
  Test threw exception
  Expression: compare((A->begin
            count(A; dims = 2)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=2, init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Int64, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Int64, init::Int64)
     @ Base ./reducedim.jl:392
   [3] (::Main.TestSuite.var"#159#190")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [4] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [6] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103 [inlined]
   [7] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [8] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 2})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103
  Test threw exception
  Expression: compare((A->begin
            count(A; dims = 2)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=2, init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Int64, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Int64, init::Int64)
     @ Base ./reducedim.jl:392
   [3] (::Main.TestSuite.var"#159#190")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [4] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [6] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103 [inlined]
   [7] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [8] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 2})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103
  Test threw exception
  Expression: compare((A->begin
            count(A; dims = 2)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=2, init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Int64, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Int64, init::Int64)
     @ Base ./reducedim.jl:392
   [3] (::Main.TestSuite.var"#159#190")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [4] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [6] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103 [inlined]
   [7] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [8] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97
  Test threw exception
  Expression: compare((A->begin
            count(A)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=Colon(), init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Colon, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Function, init::Int64)
     @ Base ./reducedim.jl:392
   [3] count(A::JLArray{Bool, 2})
     @ Base ./reducedim.jl:392
   [4] (::Main.TestSuite.var"#156#187")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [6] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [7] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:97 [inlined]
   [8] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [9] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
any all count ==: Error During Test at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103
  Test threw exception
  Expression: compare((A->begin
            count(A; dims = 2)
        end), AT, Ac)
  MethodError: no method matching count(::typeof(identity), ::JLArray{Bool, 2}; dims=2, init=0)
  Closest candidates are:
    count(::Function, ::Union{AbstractGPUArray{T, N}, Base.LogicalIndex{T, var"#s5"} where var"#s5"<:AbstractGPUArray, Base.ReinterpretArray{T, N, var"#s1", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s13", I, L} where L where I where var"#s4" where var"#s3", var"#s13"} where var"#s1" where var"#s13"<:AbstractGPUArray, Base.ReshapedArray{T, N, var"#s4", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s4"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s14", I, L} where L where I where var"#s4" where var"#s3", var"#s14"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s14", I, L} where L where I where var"#s2" where var"#s3", var"#s14"} where var"#s14"<:AbstractGPUArray, SubArray{T, N, var"#s5", I, L} where L where I where var"#s5"<:Union{Base.ReinterpretArray{var"#s2", var"#s1", var"#s11", var"#s21", IsReshaped} where IsReshaped where var"#s21"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s1" where var"#s2", Base.ReshapedArray{var"#s4", var"#s3", var"#s41", MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where var"#s41"<:Union{Base.ReinterpretArray{var"#s1", var"#s5", var"#s11", var"#s2", IsReshaped} where IsReshaped where var"#s2"<:Union{SubArray{var"#s3", var"#s4", var"#s15", I, L} where L where I where var"#s4" where var"#s3", var"#s15"} where var"#s11" where var"#s5" where var"#s1", SubArray{var"#s3", var"#s2", var"#s15", I, L} where L where I where var"#s2" where var"#s3", var"#s15"} where var"#s3" where var"#s4", var"#s15"} where var"#s15"<:AbstractGPUArray, LinearAlgebra.Adjoint{T, var"#s1"} where var"#s1"<:AbstractGPUArray{T, N}, LinearAlgebra.Diagonal{T, var"#s11"} where var"#s11"<:AbstractGPUArray{T, N}, LinearAlgebra.LowerTriangular{T, var"#s7"} where var"#s7"<:AbstractGPUArray{T, N}, LinearAlgebra.Transpose{T, var"#s6"} where var"#s6"<:AbstractGPUArray{T, N}, LinearAlgebra.Tridiagonal{T, var"#s12"} where var"#s12"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitLowerTriangular{T, var"#s8"} where var"#s8"<:AbstractGPUArray{T, N}, LinearAlgebra.UnitUpperTriangular{T, var"#s10"} where var"#s10"<:AbstractGPUArray{T, N}, LinearAlgebra.UpperTriangular{T, var"#s9"} where var"#s9"<:AbstractGPUArray{T, N}, PermutedDimsArray{T, N, var"#s4", var"#s3", var"#s2"} where var"#s2"<:AbstractGPUArray where var"#s3" where var"#s4"} where N where T; dims) at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/src/host/mapreduce.jl:77 got unsupported keyword argument "init"
    count(::Any, ::Union{Base.AbstractBroadcasted, AbstractArray}; dims, init) at reducedim.jl:393
    count(::Any, ::Any; init) at reduce.jl:965 got unsupported keyword argument "dims"
    ...
  Stacktrace:
   [1] kwerr(::NamedTuple{(:dims, :init), Tuple{Int64, Int64}}, ::Function, ::Function, ::JLArray{Bool, 2})
     @ Base ./error.jl:157
   [2] count(A::JLArray{Bool, 2}; dims::Int64, init::Int64)
     @ Base ./reducedim.jl:392
   [3] (::Main.TestSuite.var"#159#190")(A::JLArray{Bool, 2})
     @ Main.TestSuite ./none:0
   [4] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:27
   [5] compare(f::Function, AT::Type{JLArray}, xs::Matrix{Bool})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite.jl:23
   [6] macro expansion
     @ ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:103 [inlined]
   [7] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [8] (::Main.TestSuite.var"#135#166")(AT::Type{JLArray})
     @ Main.TestSuite ~/.julia/packages/GPUArrays/ZxsKE/test/testsuite/mapreduce.jl:92
Test Summary:                           | Pass  Error  Total
JLArray                                 | 2793     11   2804
  math                                  |    8             8
  indexing scalar                       |  249           249
  input output                          |    5             5
  value constructors                    |   36            36
  indexing multidimensional             |   34            34
  interface                             |    7             7
  iterator constructors                 |   24            24
  uniformscaling                        |   56            56
  linear algebra                        |  389           389
  conversions                           |   72            72
  constructors                          |  335           335
  random                                |   46            46
  base                                  |   39            39
  mapreduce essentials                  |  522           522
  broadcasting                          |  155           155
  mapreduce derivatives                 |  816     11    827
    sum prod minimum maximum Float32    |  148           148
    sum prod minimum maximum Float64    |  148           148
    sum prod minimum maximum Int32      |  148           148
    sum prod minimum maximum Int64      |  134           134
    sum prod minimum maximum ComplexF32 |   74            74
    sum prod minimum maximum ComplexF64 |   74            74
    any all count ==                    |   90     11    101
ERROR: LoadError: Some tests did not pass: 2793 passed, 0 failed, 11 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/GPUArrays/ZxsKE/test/runtests.jl:5

PkgEval failed: Package GPUArrays errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-30T04:47:44.838
CPU usage: 388.42s (385.10s user, 4.37s kernel)

Network usage:
- eth0: 202.461 KiB received, 16.363 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":5,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":5,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":20480,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":20480,"op":"Async","minor":0},{"major":259,"value":20480,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":20480,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":20480,"op":"Async","minor":2},{"major":253,"value":20480,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":204873728,"max_usage":855945216,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":199000064,"inactive_file":8192,"inactive_anon":331776,"total_pgfault":1558453,"total_cache":1208320,"total_rss_huge":0,"total_active_anon":199868416,"total_pgmajfault":0,"pgpgin":736522,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":687643,"hierarchical_memsw_limit":0,"cache":1208320,"active_file":0,"pgfault":1558453,"total_mapped_file":0,"total_pgpgout":687643,"total_writeback":0,"rss":199000064,"unevictable":0,"total_inactive_anon":331776,"total_pgpgin":736522,"active_anon":199868416,"total_active_file":0},"limit":540972998656},"name":"/GPUArrays-Tg19t7CM","networks":{"eth0":{"rx_bytes":207320,"rx_packets":546,"tx_packets":119,"tx_bytes":16756,"tx_dropped":0,"rx_dropped":13,"tx_errors":0,"rx_errors":0}},"id":"595dfa76460b9a601f6d679189cd774f8332c85624d6b0830d1edf76bf2fea2e","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":113006242250000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":385100000000,"usage_in_kernelmode":4370000000,"total_usage":388420656588,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,388420656588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T04:47:45.709133084Z"}