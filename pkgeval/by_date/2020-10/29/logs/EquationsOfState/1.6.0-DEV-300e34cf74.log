################################################################################
# PkgEval set-up: 2020-10-30T03:47:18.605
#

Julia Version 1.6.0-DEV.1380
Commit 300e34cf74 (2020-10-30 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T03:47:19.633
#

   Resolving package versions...
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed EzXML ──────────────────────── v1.1.0
   Installed MacroTools ─────────────────── v0.5.6
   Installed OpenBLAS_jll ───────────────── v0.3.10+0
   Installed DiffResults ────────────────── v1.0.2
   Installed JLLWrappers ────────────────── v1.1.3
   Installed LsqFit ─────────────────────── v0.10.0
   Installed EquationsOfState ───────────── v3.0.2
   Installed Rmath ──────────────────────── v0.6.1
   Installed PDMats ─────────────────────── v0.9.12
   Installed ArrayInterface ─────────────── v2.13.7
   Installed FiniteDiff ─────────────────── v2.7.0
   Installed DiffRules ──────────────────── v1.0.1
   Installed CommonSubexpressions ───────── v0.3.0
   Installed XML2_jll ───────────────────── v2.9.10+3
   Installed FillArrays ─────────────────── v0.8.14
   Installed Arpack_jll ─────────────────── v3.5.0+3
   Installed SpecialFunctions ───────────── v0.10.3
   Installed Requires ───────────────────── v1.1.0
   Installed QuadGK ─────────────────────── v2.4.1
   Installed Roots ──────────────────────── v1.0.5
   Installed StatsFuns ──────────────────── v0.9.5
   Installed OrderedCollections ─────────── v1.3.1
   Installed IterTools ──────────────────── v1.3.0
   Installed ConstructionBase ───────────── v1.0.0
   Installed RecipesBase ────────────────── v1.1.0
   Installed ExprTools ──────────────────── v0.1.3
   Installed NaNMath ────────────────────── v0.3.4
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed Zlib_jll ───────────────────── v1.2.11+18
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed DataStructures ─────────────── v0.17.20
   Installed Unitful ────────────────────── v1.5.0
   Installed Polynomials ────────────────── v0.8.0
   Installed Reexport ───────────────────── v0.2.0
   Installed Intervals ──────────────────── v1.5.0
   Installed Rmath_jll ──────────────────── v0.2.2+1
   Installed Missings ───────────────────── v0.4.4
   Installed Arpack ─────────────────────── v0.4.0
   Installed DataAPI ────────────────────── v1.3.0
   Installed OptimBase ──────────────────── v2.0.1
   Installed Distributions ──────────────── v0.22.6
   Installed Mocking ────────────────────── v0.7.1
   Installed Libiconv_jll ───────────────── v1.16.0+7
   Installed StaticArrays ───────────────── v0.12.5
   Installed NLSolversBase ──────────────── v7.7.1
   Installed StatsBase ──────────────────── v0.32.2
   Installed ForwardDiff ────────────────── v0.10.12
   Installed TimeZones ──────────────────── v1.5.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [0438fec6] + EquationsOfState v3.0.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [4fba245c] + ArrayInterface v2.13.7
  [bbf7d656] + CommonSubexpressions v0.3.0
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [31c24e10] + Distributions v0.22.6
  [0438fec6] + EquationsOfState v3.0.2
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [d8418881] + Intervals v1.5.0
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.1.3
  [2fda8390] + LsqFit v0.10.0
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.1
  [77ba4419] + NaNMath v0.3.4
  [87e2bd06] + OptimBase v2.0.1
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.9.12
  [f27b6e38] + Polynomials v0.8.0
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [f2b01f46] + Roots v1.0.5
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.5
  [f269a46b] + TimeZones v1.5.0
  [1986cc42] + Unitful v1.5.0
  [68821587] + Arpack_jll v3.5.0+3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/e863e6524c2a8d703bbd59e7592c97537c94579f/build.log`


################################################################################
# Testing: 2020-10-30T03:49:34.970
#


     Testing EquationsOfState
Status `/tmp/jl_aJKCj5/Project.toml`
  [187b0558] ConstructionBase v1.0.0
  [0438fec6] EquationsOfState v3.0.2
  [c8e1da08] IterTools v1.3.0
  [2fda8390] LsqFit v0.10.0
  [f27b6e38] Polynomials v0.8.0
  [f2b01f46] Roots v1.0.5
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_aJKCj5/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [4fba245c] ArrayInterface v2.13.7
  [bbf7d656] CommonSubexpressions v0.3.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.6
  [0438fec6] EquationsOfState v3.0.2
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [d8418881] Intervals v1.5.0
  [c8e1da08] IterTools v1.3.0
  [692b3bcd] JLLWrappers v1.1.3
  [2fda8390] LsqFit v0.10.0
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.1
  [77ba4419] NaNMath v0.3.4
  [87e2bd06] OptimBase v2.0.1
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.9.12
  [f27b6e38] Polynomials v0.8.0
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [f2b01f46] Roots v1.0.5
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.5
  [f269a46b] TimeZones v1.5.0
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [68821587] Arpack_jll v3.5.0+3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [f50d1b31] Rmath_jll v0.2.2+1
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:59
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1), 2, big(3), 0))(Energy()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Energy}, Vector{Float64}, Vector{Float64}}, p0::Vector{BigFloat}, wt::Vector{Float64}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(f::Function, p0::Vector{BigFloat}, wt::Vector{Float64})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{Float64}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:59 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:70
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1), 2, 3, 0))(Energy()), BigFloat[1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Energy}, Vector{BigFloat}, Vector{Float64}}, p0::Vector{BigFloat}, wt::Vector{Float64}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(f::Function, p0::Vector{BigFloat}, wt::Vector{Float64})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(model::Function, xdata::Vector{BigFloat}, ydata::Vector{Float64}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{BigFloat}, ydata::Vector{Int64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{BigFloat}, ydata::Vector{Int64})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:70 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:81
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1.0), 2, 3, 0))(Energy()), [1, 2, 3, 4, 5], BigInt[5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Energy}, Vector{Float64}, Vector{BigFloat}}, p0::Vector{BigFloat}, wt::Vector{BigFloat}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(model::EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Energy}, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigInt}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigInt})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:81 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:143
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3), 0))(Pressure()), [1, 2, 3, 4, 5], BigInt[5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Pressure}, Vector{Float64}, Vector{BigFloat}}, p0::Vector{BigFloat}, wt::Vector{BigFloat}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(model::EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Pressure}, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigInt}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigInt})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:143 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:154
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3.0), 0))(Pressure()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Pressure}, Vector{Float64}, Vector{Float64}}, p0::Vector{BigFloat}, wt::Vector{Float64}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(f::Function, p0::Vector{BigFloat}, wt::Vector{Float64})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{Float64}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:154 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:165
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3), 0))(Pressure()), [big(1), 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, Pressure}, Vector{BigFloat}, Vector{Float64}}, p0::Vector{BigFloat}, wt::Vector{Float64}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(f::Function, p0::Vector{BigFloat}, wt::Vector{Float64})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(model::Function, xdata::Vector{BigFloat}, ydata::Vector{Float64}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{BigInt}, ydata::Vector{Int64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{BigInt}, ydata::Vector{Int64})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:165 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:227
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, BulkModulus}, Vector{Float64}, Vector{Float64}}, p0::Vector{BigFloat}, wt::Vector{Float64}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(f::Function, p0::Vector{BigFloat}, wt::Vector{Float64})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{Float64}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{Int64})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:227 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:238
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, big(4.0), 5], [big(5), 6, 9, 8, 7.0]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, BulkModulus}, Vector{BigFloat}, Vector{BigFloat}}, p0::Vector{BigFloat}, wt::Vector{BigFloat}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(model::EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, BulkModulus}, xdata::Vector{BigFloat}, ydata::Vector{BigFloat}, p0::Vector{BigFloat}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(model::Function, xdata::Vector{BigFloat}, ydata::Vector{BigFloat}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{BigFloat}, ydata::Vector{BigFloat}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{BigFloat}, ydata::Vector{BigFloat})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:238 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:249
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, 4, 5], [big(5), 6, 9, 8, 7.0]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getindex
      @ ./array.jl:787 [inlined]
    [2] getindex
      @ ./multidimensional.jl:637 [inlined]
    [3] _broadcast_getindex
      @ ./broadcast.jl:614 [inlined]
    [4] _getindex
      @ ./broadcast.jl:645 [inlined]
    [5] _getindex
      @ ./broadcast.jl:644 [inlined]
    [6] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [7] _getindex
      @ ./broadcast.jl:644 [inlined]
    [8] _broadcast_getindex
      @ ./broadcast.jl:620 [inlined]
    [9] getindex
      @ ./broadcast.jl:575 [inlined]
   [10] macro expansion
      @ ./broadcast.jl:980 [inlined]
   [11] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [12] copyto!
      @ ./broadcast.jl:979 [inlined]
   [13] copyto!
      @ ./broadcast.jl:934 [inlined]
   [14] copy
      @ ./broadcast.jl:906 [inlined]
   [15] materialize
      @ ./broadcast.jl:881 [inlined]
   [16] alloc_DF(x::Vector{BigFloat}, F::Vector{BigFloat})
      @ NLSolversBase ~/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(f::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, BulkModulus}, Vector{Float64}, Vector{BigFloat}}, p0::Vector{BigFloat}, wt::Vector{BigFloat}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit
      @ ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(model::EquationsOfState.NonlinearFitting.var"#2#3"{UnionAll, BulkModulus}, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(model::Function, xdata::Vector{Float64}, ydata::Vector{BigFloat}, p0::Vector{BigFloat})
      @ LsqFit ~/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigFloat}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(f::Function, xdata::Vector{Int64}, ydata::Vector{BigFloat})
      @ EquationsOfState.NonlinearFitting ~/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] macro expansion
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:249 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] top-level scope
      @ ~/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Method "Order0" failed because of Roots.ConvergenceFailed("Stopped at: xn = 41.03061570323671 Å^3. Too many steps taken. ").
[ Info: Using method "Order16"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
Test Summary:                                            | Pass  Error  Total
EquationsOfState.jl                                      |  142      9    151
  Test EOS promotion                                     |   56            56
  Test default EOS parameter `e0` and promotion          |   26            26
  Test data from Pymatgen                                |    4             4
  Test fitting energy with different element types       |    4      3      7
  Test fitting pressure with different element types     |    4      3      7
  Test fitting bulk modulus with different element types |    4      3      7
  Test data from Pymatgen                                |    4             4
  Test Mg dataset                                        |    2             2
  Test Si dataset                                        |    2             2
  Test Ti dataset                                        |    2             2
  `Test w2k-lda-na.dat` from `Gibbs2`                    |    8             8
  `Test w2k-lda-k.dat` from `Gibbs2`                     |    7             7
  `Test mgo-sety1.dat` from `Gibbs2`                     |    7             7
  `Test test01a.dat` from `Gibbs2`                       |    7             7
  Test strain-volume-derivative                          |    4             4
  Test data from Pymatgen                                |              No tests
  Test `findvolume` with random unit                     |    1             1
ERROR: LoadError: Some tests did not pass: 142 passed, 0 failed, 9 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/runtests.jl:4

PkgEval failed: Package EquationsOfState errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-30T03:52:03.282
CPU usage: 156.07s (146.63s user, 9.74s kernel)

Network usage:
- eth0: 2.896 MiB received, 148.255 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":9,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":9,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":9,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":9,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":53248,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":53248,"op":"Async","minor":0},{"major":259,"value":53248,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":53248,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":53248,"op":"Async","minor":2},{"major":253,"value":53248,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":270041088,"max_usage":1701994496,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":231751680,"inactive_file":8192,"inactive_anon":12664832,"total_pgfault":3526500,"total_cache":30023680,"total_rss_huge":0,"total_active_anon":249069568,"total_pgmajfault":0,"pgpgin":2248846,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":2184936,"hierarchical_memsw_limit":0,"cache":30023680,"active_file":0,"pgfault":3526500,"total_mapped_file":0,"total_pgpgout":2184936,"total_writeback":0,"rss":231751680,"unevictable":0,"total_inactive_anon":12664832,"total_pgpgin":2248846,"active_anon":249069568,"total_active_file":0},"limit":540972998656},"name":"/EquationsOfState-3SCsUr89","networks":{"eth0":{"rx_bytes":3036507,"rx_packets":1561,"tx_packets":1060,"tx_bytes":151813,"tx_dropped":0,"rx_dropped":9,"tx_errors":0,"rx_errors":0}},"id":"fd62ac246a190fbc610f2a62a9792c02110d7c26b7cf85a5025d0f7dfad10aa5","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":112579978200000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":146630000000,"usage_in_kernelmode":9740000000,"total_usage":156074050098,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156071951118,0,5080,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189110,3030,0,1901760,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T03:52:03.284989207Z"}