Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ljUa60/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ljUa60/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07640432937443727 -0.14768016095648293; 0.07640432937443727 0.0 -0.11464471593712439; 0.14768016095648293 0.11464471593712439 0.0])
dAA = so3([0.0 0.052884432238265756 0.1894240642598783; -0.052884432238265756 0.0 -0.05868528900962744; -0.1894240642598783 0.05868528900962744 0.0])
dAA = so3([0.0 0.12145235686948824 -0.01600610194463027; -0.12145235686948824 0.0 0.15104896612518787; 0.01600610194463027 -0.15104896612518787 0.0])
dAA = Quaternion(0.995887068955392, [-0.06395587634881698, 0.03395157411156882, 0.054459915380397246])
dAA = SO3([0.9954005373339848 -0.06332501858865358 0.0718868019594769; 0.04325300609077548 0.9666108873432727 0.2525719104207006; -0.0854806863526827 -0.2483008950652368 0.964903994069087])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8817590545399154 0.16046920336867845 0.4435657837424977; -0.09250259607698984 0.9809218466552844 -0.1709842111816294; -0.4625410678587273 0.10973588986566113 0.8797805379863206]), [1.1464471593712438, -1.476801609564829, 0.7640432937443726])
xj = SE3(SO3([0.9492372251057274 -0.28143366837382494 0.1405125644888404; 0.22436792865159236 0.9188430690114926 0.3246327881193386; -0.2204715924244495 -0.27662701392885214 0.9353447343619539]), [-1.5104896612518786, -0.16006101944630272, -1.2145235686948823])
Dx = SE3(SO3([0.9182210680591488 -0.20520070019069347 -0.3387665019059071; 0.34821709783895577 0.8257958919417264 0.44362822005005903; 0.1887191642227441 -0.5253130661742742 0.8297175781925143]), [-1.5494115924882998, 0.648143280910251, -3.1443727330049587])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
