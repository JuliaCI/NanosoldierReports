Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_TlSLoY/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_TlSLoY/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0333920993966989 -0.07500268954999913; -0.0333920993966989 0.0 -0.11971876935726951; 0.07500268954999913 0.11971876935726951 0.0])
dAA = so3([0.0 0.09576665553326388 0.03425620063409755; -0.09576665553326388 0.0 -0.09683028501033095; -0.03425620063409755 0.09683028501033095 0.0])
dAA = so3([0.0 -0.016346409166168786 -0.11912833588608528; 0.016346409166168786 0.0 -0.2505937591828141; 0.11912833588608528 0.2505937591828141 0.0])
dAA = Quaternion(0.9978463750494353, [-0.04182990018418027, 0.04867312379611771, 0.013557222105253255])
dAA = SO3([0.9876100110592427 0.14773622897998462 -0.052919492650026496; -0.1452936967516022 0.9882534457802974 0.047380044191854334; 0.05929762001814339 -0.03910413725096307 0.9974741393690574])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9680033701984172 0.24478834252855813 0.05520998683777443; -0.22426892288999445 0.9426323986822424 -0.2472804302413027; -0.11257408898262358 0.22698640557681715 0.9673697566975354]), [1.197187693572695, -0.7500268954999912, -0.33392099396698893])
xj = SE3(SO3([0.9683392467901524 -0.08192306606622454 0.23581287999638464; 0.03152582526135874 0.9771876837477673 0.21002464872786633; -0.2476393051748259 -0.19594091450736462 0.9488318779186052]), [2.505937591828141, -1.1912833588608527, 0.16346409166168785])
Dx = SE3(SO3([0.9581631606900273 -0.2763967633994846 0.0743517765677884; 0.21054466775249142 0.8565990348472328 0.4710722199193904; -0.19389249696027427 -0.43570967705695823 0.8789555033910597]), [1.309841751126104, 0.017323732660848745, 0.6625254420328471])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
