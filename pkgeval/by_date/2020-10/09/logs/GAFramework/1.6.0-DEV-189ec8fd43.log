Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_V9Q1RY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_V9Q1RY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722694780683682
curgen: 20 fitness: 0.21722694780683682
curgen: 30 fitness: 0.21723227999224823
curgen: 40 fitness: 0.21723227999224823
curgen: 50 fitness: 0.21723227999224823
CoordinateCreature{Vector{Float64}}([-0.2227227434542116], -0.21723227999224823) -0.2227227434542116 -0.21723227999224823
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578668925520597
curgen: 100 fitness: 3.257898365881198
curgen: 150 fitness: 3.2581629138192407
curgen: 200 fitness: 3.2582548336918005
curgen: 250 fitness: 3.258300639235187
curgen: 300 fitness: 3.258355331807065
curgen: 350 fitness: 3.258355331807065
curgen: 400 fitness: 3.2583610228952122
curgen: 450 fitness: 3.2584354486202747
curgen: 500 fitness: 3.2584354486202747
CoordinateCreature{Vector{Float64}}([-0.22259778264944774, 0.22252280267331814, 0.22350076341292083, -0.2226966025721219, -0.2227044771836458, -0.22213696930488322, 0.2225271543604047, 0.22277693616609479, 0.22227338833439925, -0.22257245636461664, 0.22256098268273647, 0.22243914395444653, -0.2220801317093152, 0.22281802614838475, 0.2224928656429334], -3.2584354486202747) [-0.22259778264944774, 0.22252280267331814, 0.22350076341292083, -0.2226966025721219, -0.2227044771836458, -0.22213696930488322, 0.2225271543604047, 0.22277693616609479, 0.22227338833439925, -0.22257245636461664, 0.22256098268273647, 0.22243914395444653, -0.2220801317093152, 0.22281802614838475, 0.2224928656429334] -3.2584354486202747
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0021264082955951835
curgen: 100 fitness: -0.001672065079873164
curgen: 150 fitness: -0.0016272117656228602
curgen: 200 fitness: -0.0016272117656228602
curgen: 250 fitness: -0.001337559065206051
curgen: 300 fitness: -0.0009429595100982624
curgen: 350 fitness: -0.0008340527771792949
curgen: 400 fitness: -0.0008340527771792949
curgen: 450 fitness: -0.0008030817442943317
curgen: 500 fitness: -0.0008030817442943317
CoordinateCreature{Vector{Float64}}([-9.428333420754634e-6, -0.0003184178140154056, 0.0003776885913128313, 0.0006478954059291495, -0.0012999963180110527, 0.0008702067141513641, -0.0003541080743436751, -0.00012528048317691966, 0.0004173829949202163, 0.00018004309110297712, 4.447854579656189e-5, 4.554103221374249e-5, 0.000121597570882885, -0.0007201022294088877, 0.00022742476287674306], 0.0008030817442943317) [-9.428333420754634e-6, -0.0003184178140154056, 0.0003776885913128313, 0.0006478954059291495, -0.0012999963180110527, 0.0008702067141513641, -0.0003541080743436751, -0.00012528048317691966, 0.0004173829949202163, 0.00018004309110297712, 4.447854579656189e-5, 4.554103221374249e-5, 0.000121597570882885, -0.0007201022294088877, 0.00022742476287674306] 0.0008030817442943317
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
