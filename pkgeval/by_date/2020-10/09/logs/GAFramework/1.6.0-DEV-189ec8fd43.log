Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_BgkavZ/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_BgkavZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21705605521815313
curgen: 20 fitness: 0.21722561183000522
curgen: 30 fitness: 0.21722561183000522
curgen: 40 fitness: 0.21723235245292286
curgen: 50 fitness: 0.21723235245292286
CoordinateCreature{Vector{Float64}}([-0.22237850484550897], -0.21723235245292286) -0.22237850484550897 -0.21723235245292286
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577186727194927
curgen: 100 fitness: 3.2580777185798335
curgen: 150 fitness: 3.258234783502028
curgen: 200 fitness: 3.258247568386695
curgen: 250 fitness: 3.2583525231260073
curgen: 300 fitness: 3.2583659550547432
curgen: 350 fitness: 3.2583728062793123
curgen: 400 fitness: 3.258378076509194
curgen: 450 fitness: 3.2584205707674214
curgen: 500 fitness: 3.2584235797593992
CoordinateCreature{Vector{Float64}}([0.22275678723354403, 0.2233012973769894, -0.22278402531769548, 0.22281421758518646, -0.2225213470221417, -0.22242352587911374, 0.2224197162509045, 0.22285398287187574, 0.2224705324068538, -0.2224055530753586, -0.2216979659973114, -0.22290320187714852, -0.22254767210807969, -0.22262726329231994, -0.22226496382590136], -3.2584235797593992) [0.22275678723354403, 0.2233012973769894, -0.22278402531769548, 0.22281421758518646, -0.2225213470221417, -0.22242352587911374, 0.2224197162509045, 0.22285398287187574, 0.2224705324068538, -0.2224055530753586, -0.2216979659973114, -0.22290320187714852, -0.22254767210807969, -0.22262726329231994, -0.22226496382590136] -3.2584235797593992
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031253568835438728
curgen: 100 fitness: -0.002795899598510232
curgen: 150 fitness: -0.002795899598510232
curgen: 200 fitness: -0.0021601808661841915
curgen: 250 fitness: -0.0021601808661841915
curgen: 300 fitness: -0.0021601808661841915
curgen: 350 fitness: -0.0012566917010587986
curgen: 400 fitness: -0.0008321855668498301
curgen: 450 fitness: -0.000823361817907653
curgen: 500 fitness: -0.000823361817907653
CoordinateCreature{Vector{Float64}}([-0.00023986562085004772, 0.00021820405896136983, 2.274160250905627e-5, -0.00017321885830906113, 0.0001953818435953096, 0.00018547387738586385, -0.0006424610930843601, -0.00043552027231694764, -0.0009263348784341206, -0.00047899688191715886, 0.0007352603757816807, -0.0002960954783932561, -0.0012507953209854913, 0.00023623680339281096, -5.8277402637713695e-5], 0.000823361817907653) [-0.00023986562085004772, 0.00021820405896136983, 2.274160250905627e-5, -0.00017321885830906113, 0.0001953818435953096, 0.00018547387738586385, -0.0006424610930843601, -0.00043552027231694764, -0.0009263348784341206, -0.00047899688191715886, 0.0007352603757816807, -0.0002960954783932561, -0.0012507953209854913, 0.00023623680339281096, -5.8277402637713695e-5] 0.000823361817907653
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
