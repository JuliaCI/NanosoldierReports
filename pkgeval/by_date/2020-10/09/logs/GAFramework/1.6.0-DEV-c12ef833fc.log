Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_YM4sFX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_YM4sFX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723352083097508
curgen: 20 fitness: 0.21723352083097508
curgen: 30 fitness: 0.21723352083097508
curgen: 40 fitness: 0.21723352083097508
curgen: 50 fitness: 0.21723352083097508
CoordinateCreature{Vector{Float64}}([-0.22249892076008315], -0.21723352083097508) -0.22249892076008315 -0.21723352083097508
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579911399545036
curgen: 100 fitness: 3.258240544695963
curgen: 150 fitness: 3.2583939376988162
curgen: 200 fitness: 3.2584075810518542
curgen: 250 fitness: 3.2584075810518542
curgen: 300 fitness: 3.2584224075364756
curgen: 350 fitness: 3.2584328896925823
curgen: 400 fitness: 3.258453849712861
curgen: 450 fitness: 3.258456101643602
curgen: 500 fitness: 3.2584654724111455
CoordinateCreature{Vector{Float64}}([-0.22251227104143764, 0.22223637631836224, -0.22222280263927363, 0.2224247436010026, -0.22268722688337156, 0.22280072581026092, -0.22257645952357608, -0.22253631692826864, 0.22255334009574237, -0.22243454823950853, 0.22274502618451605, 0.22192455018858367, -0.22259528715126178, -0.222253347270289, 0.2223374919434741], -3.2584654724111455) [-0.22251227104143764, 0.22223637631836224, -0.22222280263927363, 0.2224247436010026, -0.22268722688337156, 0.22280072581026092, -0.22257645952357608, -0.22253631692826864, 0.22255334009574237, -0.22243454823950853, 0.22274502618451605, 0.22192455018858367, -0.22259528715126178, -0.222253347270289, 0.2223374919434741] -3.2584654724111455
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0033921325819221693
curgen: 100 fitness: -0.0031745080677580972
curgen: 150 fitness: -0.0021393721384299624
curgen: 200 fitness: -0.0021263605758861104
curgen: 250 fitness: -0.0021262779914081875
curgen: 300 fitness: -0.0021262779914081875
curgen: 350 fitness: -0.0015476521979280733
curgen: 400 fitness: -0.0015476521979280733
curgen: 450 fitness: -0.0015475789304844056
curgen: 500 fitness: -0.0015475789304844056
CoordinateCreature{Vector{Float64}}([0.002204357366128615, 8.116998156559212e-7, 0.0006341377421495535, 4.266245743736134e-7, -1.4874342328052863e-5, 6.90818488757244e-5, -0.0004272305976260604, -4.0615230678307974e-5, 0.00018207989683482594, 0.0009977633741412402, -0.0002522605703385713, -0.0007255075440399997, 0.00024245817982079362, -0.0001561584939730222, -0.0008051997719802045], 0.0015475789304844056) [0.002204357366128615, 8.116998156559212e-7, 0.0006341377421495535, 4.266245743736134e-7, -1.4874342328052863e-5, 6.90818488757244e-5, -0.0004272305976260604, -4.0615230678307974e-5, 0.00018207989683482594, 0.0009977633741412402, -0.0002522605703385713, -0.0007255075440399997, 0.00024245817982079362, -0.0001561584939730222, -0.0008051997719802045] 0.0015475789304844056
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
