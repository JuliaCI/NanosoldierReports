Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ed2XxY/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ed2XxY/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723340402011107
curgen: 20 fitness: 0.21723340402011107
curgen: 30 fitness: 0.21723340402011107
curgen: 40 fitness: 0.21723340402011107
curgen: 50 fitness: 0.21723340402011107
CoordinateCreature{Vector{Float64}}([0.22261932915352575], -0.21723340402011107) 0.22261932915352575 -0.21723340402011107
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25822816637696
curgen: 100 fitness: 3.25839893550191
curgen: 150 fitness: 3.25839893550191
curgen: 200 fitness: 3.25839893550191
curgen: 250 fitness: 3.258420096878552
curgen: 300 fitness: 3.258420096878552
curgen: 350 fitness: 3.258425438246068
curgen: 400 fitness: 3.2584467569412947
curgen: 450 fitness: 3.2584505161994626
curgen: 500 fitness: 3.25847283259258
CoordinateCreature{Vector{Float64}}([-0.22258489336835113, 0.22269101814369738, -0.22252427425898444, 0.22248615335149505, 0.22298769075667357, 0.2221562889123883, -0.2226767364693997, -0.22227364039290667, -0.22274181494521342, -0.222528143101294, 0.2229581702201914, 0.22265867811984866, -0.2225364253797409, 0.22255706436635558, -0.22272345107012192], -3.25847283259258) [-0.22258489336835113, 0.22269101814369738, -0.22252427425898444, 0.22248615335149505, 0.22298769075667357, 0.2221562889123883, -0.2226767364693997, -0.22227364039290667, -0.22274181494521342, -0.222528143101294, 0.2229581702201914, 0.22265867811984866, -0.2225364253797409, 0.22255706436635558, -0.22272345107012192] -3.25847283259258
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004567865790761516
curgen: 100 fitness: -0.004202040556265274
curgen: 150 fitness: -0.004202040556265274
curgen: 200 fitness: -0.0036135573368483165
curgen: 250 fitness: -0.0035385306434534414
curgen: 300 fitness: -0.0035385306434534414
curgen: 350 fitness: -0.002554257160142015
curgen: 400 fitness: -0.0020849254631514214
curgen: 450 fitness: -0.0020210667181856934
curgen: 500 fitness: -0.0020210667181856934
CoordinateCreature{Vector{Float64}}([-0.00044467552920875636, -0.00023732955071875065, 0.00023335787514397715, -0.0015805801855039948, -0.0010000542229616528, -0.001238721846756732, 0.0008631059521807834, 0.0006468010249455489, -0.0006360194274471135, -0.0008358893196311783, 0.0006293101210481126, 3.665513087926491e-5, 0.00040525750676753284, -0.001402342149359542, 0.00022646236455782216], 0.0020210667181856934) [-0.00044467552920875636, -0.00023732955071875065, 0.00023335787514397715, -0.0015805801855039948, -0.0010000542229616528, -0.001238721846756732, 0.0008631059521807834, 0.0006468010249455489, -0.0006360194274471135, -0.0008358893196311783, 0.0006293101210481126, 3.665513087926491e-5, 0.00040525750676753284, -0.001402342149359542, 0.00022646236455782216] 0.0020210667181856934
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
