Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_dN1WCY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_dN1WCY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.236434 seconds (289.13 k allocations: 13.529 MiB, 7.21% gc time, 91.67% compilation time)
Running: chebyshev_quadrature with k=1
  1.339214 seconds (2.20 M allocations: 126.823 MiB, 4.92% gc time, 98.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.218601 seconds (409.38 k allocations: 23.550 MiB, 82.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.284696 seconds (473.75 k allocations: 26.645 MiB, 14.67% gc time, 88.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.251004 seconds (418.56 k allocations: 23.256 MiB, 6.63% gc time, 91.37% compilation time)
Running: jacobi_quadrature with α=β=1
 28.736505 seconds (36.46 M allocations: 3.003 GiB, 10.17% gc time, 80.35% compilation time)
Running: laguerre_quadrature with k=1
  2.305113 seconds (3.17 M allocations: 177.077 MiB, 2.65% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.188526 seconds (206.22 k allocations: 11.841 MiB, 13.36% gc time, 99.12% compilation time)
Running: lobatto_quadrature
  0.239305 seconds (329.83 k allocations: 19.931 MiB, 99.15% compilation time)
Running: radau_quadrature
  0.284194 seconds (449.32 k allocations: 27.451 MiB, 6.89% gc time, 99.30% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.018845 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.088791 seconds (172.46 k allocations: 3.827 MiB, 29.42% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.101953 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.04% compilation time)
Running: rombergs_method
  0.400447 seconds (722.90 k allocations: 41.723 MiB, 4.23% gc time, 99.48% compilation time)
Running: simpsons_rule
  0.020774 seconds (46.55 k allocations: 2.532 MiB, 91.55% compilation time)
Running: simpsons38_rule
  0.074462 seconds (108.54 k allocations: 5.754 MiB, 97.15% compilation time)
Running: trapezoidal_rule
  0.293389 seconds (1.72 M allocations: 28.603 MiB, 19.10% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.064496 seconds (29.80 k allocations: 1.768 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.363504 seconds (290.65 k allocations: 15.388 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.145887 seconds (93.80 k allocations: 2.675 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.159319 seconds (82.06 k allocations: 2.476 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.131524 seconds (64.67 k allocations: 2.122 MiB, 98.75% compilation time)
Running: jacobi_quadrature with α=β=1
  2.124838 seconds (503.80 k allocations: 161.822 MiB, 22.81% gc time, 17.25% compilation time)
Running: legendre_quadrature
  0.140763 seconds (41.27 k allocations: 2.378 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.021019 seconds (15.67 k allocations: 997.466 KiB, 99.06% compilation time)
Running: radau_quadrature
  0.019308 seconds (15.77 k allocations: 1004.681 KiB, 99.03% compilation time)
Running: rectangle_rule_left
 13.769345 seconds (471.41 M allocations: 7.025 GiB, 3.85% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.973399 seconds (476.96 M allocations: 7.107 GiB, 3.81% gc time)
Running: rombergs_method
  0.311207 seconds (326.45 k allocations: 18.526 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000016 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.061397 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.039784 seconds (16.49 k allocations: 1.001 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.018501 seconds (1.03 k allocations: 34.125 KiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=1
  0.106508 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.121333 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.093022 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.113715 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.273538 seconds (363.66 k allocations: 18.978 MiB, 97.09% compilation time)
Running: legendre_quadrature
  0.072279 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000102 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000036 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000342 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000233 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000328 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072022 seconds (1.04 k allocations: 56.531 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000018 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.020773 seconds (923 allocations: 39.281 KiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.017740 seconds (44.29 k allocations: 702.859 KiB, 90.99% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.043013 seconds (80.91 k allocations: 4.823 MiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.147240 seconds (230.61 k allocations: 12.982 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.167712 seconds (283.17 k allocations: 15.880 MiB, 12.52% gc time, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.134663 seconds (234.77 k allocations: 13.221 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.150514 seconds (234.76 k allocations: 13.045 MiB, 98.75% compilation time)
Running: jacobi_quadrature with α=β=1
  2.096347 seconds (446.74 k allocations: 163.204 MiB, 5.08% gc time, 17.91% compilation time)
Running: legendre_quadrature
  0.141351 seconds (185.44 k allocations: 10.707 MiB, 98.72% compilation time)
Running: lobatto_quadrature
  0.149853 seconds (196.62 k allocations: 11.411 MiB, 10.87% gc time, 98.80% compilation time)
Running: radau_quadrature
  0.126051 seconds (196.62 k allocations: 11.411 MiB, 98.72% compilation time)
Running: rectangle_rule_left
  0.637909 seconds (18.82 k allocations: 1.147 MiB, 3.05% compilation time)
Running: rectangle_rule_midpoint
  0.031624 seconds (24.67 k allocations: 1.555 MiB, 99.47% compilation time)
Running: rectangle_rule_right
  0.626695 seconds (17.39 k allocations: 1.062 MiB, 3.58% compilation time)
Running: rombergs_method
  0.098733 seconds (134.27 k allocations: 7.778 MiB, 97.39% compilation time)
Running: simpsons_rule
  0.017239 seconds (36.49 k allocations: 2.341 MiB, 99.07% compilation time)
Running: simpsons38_rule
  0.021611 seconds (42.37 k allocations: 2.678 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.013218 seconds (42.32 k allocations: 1.671 MiB, 96.63% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.020872 seconds (66.94 k allocations: 2.959 MiB, 96.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.174103 seconds (237.20 k allocations: 13.033 MiB, 11.04% gc time, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.164364 seconds (290.20 k allocations: 15.872 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.179629 seconds (241.33 k allocations: 13.118 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.176975 seconds (241.34 k allocations: 13.123 MiB, 10.70% gc time, 98.95% compilation time)
Running: hermite_quadrature with k=2
 12.033094 seconds (20.10 M allocations: 1.056 GiB, 9.21% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.356696 seconds (455.91 k allocations: 49.394 MiB, 10.01% gc time, 82.13% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.214513 seconds (276.26 k allocations: 15.249 MiB, 14.81% gc time, 98.36% compilation time)
Running: legendre_quadrature
  0.129032 seconds (191.98 k allocations: 11.035 MiB, 98.26% compilation time)
Running: lobatto_quadrature
  0.204993 seconds (217.28 k allocations: 37.185 MiB, 11.62% gc time, 86.87% compilation time)
Running: radau_quadrature
  0.162704 seconds (213.86 k allocations: 29.846 MiB, 88.02% compilation time)
Running: rectangle_rule_left
  0.020992 seconds (21.73 k allocations: 1.293 MiB, 99.33% compilation time)
Running: rectangle_rule_midpoint
  0.027250 seconds (26.47 k allocations: 1.642 MiB, 99.49% compilation time)
Running: rectangle_rule_right
  0.020302 seconds (18.50 k allocations: 1.117 MiB, 99.36% compilation time)
Running: rombergs_method
  0.096453 seconds (136.74 k allocations: 7.803 MiB, 97.61% compilation time)
Running: simpsons_rule
  0.025124 seconds (43.97 k allocations: 2.609 MiB, 98.77% compilation time)
Running: simpsons38_rule
  0.057414 seconds (57.34 k allocations: 3.063 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.023209 seconds (28.35 k allocations: 1.595 MiB, 98.88% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037703 seconds (50.91 k allocations: 2.619 MiB, 98.01% compilation time)
Running: chebyshev_quadrature with k=1
  0.177091 seconds (232.72 k allocations: 12.845 MiB, 98.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.196930 seconds (285.38 k allocations: 15.670 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=3
  0.184071 seconds (236.87 k allocations: 12.932 MiB, 15.63% gc time, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.146693 seconds (236.87 k allocations: 12.929 MiB, 98.76% compilation time)
Running: hermite_quadrature with k=2
  0.119222 seconds (170.79 k allocations: 9.794 MiB, 98.22% compilation time)
Running: jacobi_quadrature with α=β=1
  7.048239 seconds (449.18 k allocations: 1.175 GiB, 17.75% gc time, 5.34% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.215028 seconds (271.55 k allocations: 15.060 MiB, 98.66% compilation time)
Running: legendre_quadrature
  0.163769 seconds (187.55 k allocations: 10.818 MiB, 98.68% compilation time)
Running: lobatto_quadrature
  0.201102 seconds (208.04 k allocations: 22.919 MiB, 91.56% compilation time)
Running: radau_quadrature
  0.201329 seconds (207.19 k allocations: 20.846 MiB, 11.49% gc time, 92.89% compilation time)
Running: rectangle_rule_left
  0.017907 seconds (19.52 k allocations: 1.188 MiB, 99.22% compilation time)
Running: rectangle_rule_midpoint
  0.017555 seconds (25.36 k allocations: 1.591 MiB, 99.29% compilation time)
Running: rectangle_rule_right
  0.017658 seconds (17.36 k allocations: 1.062 MiB, 99.35% compilation time)
Running: rombergs_method
  0.090511 seconds (132.58 k allocations: 7.622 MiB, 97.28% compilation time)
Running: simpsons_rule
  0.023153 seconds (39.30 k allocations: 2.442 MiB, 99.11% compilation time)
Running: simpsons38_rule
  0.027402 seconds (48.16 k allocations: 2.821 MiB, 98.90% compilation time)
Running: trapezoidal_rule
  0.020658 seconds (23.26 k allocations: 1.433 MiB, 98.88% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033888 seconds (39.05 k allocations: 2.475 MiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.155553 seconds (231.10 k allocations: 13.058 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.178032 seconds (283.67 k allocations: 15.996 MiB, 9.02% gc time, 97.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.202140 seconds (235.25 k allocations: 13.141 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.160484 seconds (235.25 k allocations: 13.038 MiB, 98.51% compilation time)
Running: jacobi_quadrature with α=β=1
  1.948949 seconds (447.27 k allocations: 194.232 MiB, 6.76% gc time, 19.13% compilation time)
Running: legendre_quadrature
  0.133474 seconds (185.93 k allocations: 10.732 MiB, 98.34% compilation time)
Running: lobatto_quadrature
  0.140139 seconds (197.11 k allocations: 11.440 MiB, 98.21% compilation time)
Running: radau_quadrature
  0.157836 seconds (197.11 k allocations: 11.438 MiB, 12.16% gc time, 98.44% compilation time)
Running: rectangle_rule_left
  0.362911 seconds (19.34 k allocations: 1.173 MiB, 7.19% compilation time)
Running: rectangle_rule_midpoint
  0.017639 seconds (25.01 k allocations: 1.573 MiB, 99.16% compilation time)
Running: rectangle_rule_right
  0.162436 seconds (17.73 k allocations: 1.081 MiB, 16.11% compilation time)
Running: rombergs_method
  0.115472 seconds (145.02 k allocations: 8.485 MiB, 97.18% compilation time)
Running: simpsons_rule
  0.029211 seconds (37.11 k allocations: 2.369 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.027506 seconds (43.08 k allocations: 2.708 MiB, 99.38% compilation time)
Running: trapezoidal_rule
  0.020418 seconds (43.25 k allocations: 1.703 MiB, 97.25% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023639 seconds (38.85 k allocations: 2.409 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=1
  0.204535 seconds (231.69 k allocations: 12.988 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=2
  0.201780 seconds (284.30 k allocations: 15.891 MiB, 9.75% gc time, 98.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.165659 seconds (235.84 k allocations: 13.071 MiB, 98.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.158504 seconds (235.84 k allocations: 13.143 MiB, 98.29% compilation time)
Running: jacobi_quadrature with α=β=1
  1.641278 seconds (447.99 k allocations: 148.917 MiB, 5.23% gc time, 27.96% compilation time)
Running: legendre_quadrature
  0.114533 seconds (186.53 k allocations: 10.751 MiB, 97.97% compilation time)
Running: lobatto_quadrature
  0.150509 seconds (197.71 k allocations: 11.461 MiB, 98.39% compilation time)
Running: radau_quadrature
  0.158336 seconds (197.71 k allocations: 11.454 MiB, 98.43% compilation time)
Running: rectangle_rule_left
  0.722198 seconds (19.59 k allocations: 1.186 MiB, 3.22% compilation time)
Running: rectangle_rule_midpoint
  0.037079 seconds (25.01 k allocations: 1.574 MiB, 44.45% gc time, 99.44% compilation time)
Running: rectangle_rule_right
  0.696565 seconds (17.69 k allocations: 1.078 MiB, 3.18% compilation time)
Running: rombergs_method
  0.131059 seconds (135.49 k allocations: 7.815 MiB, 97.22% compilation time)
Running: simpsons_rule
  0.025363 seconds (37.60 k allocations: 2.389 MiB, 99.19% compilation time)
Running: simpsons38_rule
  0.027436 seconds (43.78 k allocations: 2.734 MiB, 99.06% compilation time)
Running: trapezoidal_rule
  0.019681 seconds (55.40 k allocations: 1.899 MiB, 95.34% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.112732 seconds (147.45 k allocations: 8.795 MiB, 99.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.127082 seconds (69.93 k allocations: 2.205 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.142920 seconds (105.09 k allocations: 2.930 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.143670 seconds (92.57 k allocations: 2.654 MiB, 97.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.146273 seconds (72.10 k allocations: 2.248 MiB, 98.44% compilation time)
Running: jacobi_quadrature with α=β=1
  2.150885 seconds (480.13 k allocations: 167.768 MiB, 6.61% gc time, 18.20% compilation time)
Running: legendre_quadrature
  0.122820 seconds (18.73 k allocations: 1.094 MiB, 99.78% compilation time)
Running: lobatto_quadrature
  0.000142 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000053 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.924195 seconds (590.00 M allocations: 8.792 GiB, 6.05% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.139570 seconds (592.75 M allocations: 8.833 GiB, 5.53% gc time)
Running: rombergs_method
  0.129945 seconds (20.51 k allocations: 1.165 MiB, 99.55% compilation time)
Running: simpsons_rule
  0.000042 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.023861 seconds (463 allocations: 22.578 KiB, 99.48% compilation time)
Running: trapezoidal_rule
  0.015337 seconds (171 allocations: 7.859 KiB, 99.30% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.625884 seconds (209.93 M allocations: 3.138 GiB, 1.56% gc time, 0.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.422189 seconds (414.12 k allocations: 22.962 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=2
 17.680115 seconds (468.76 k allocations: 4.040 GiB, 2.76% gc time, 2.20% compilation time)
Running: chebyshev_quadrature with k=3
  8.030370 seconds (249.12 k allocations: 1.642 GiB, 3.72% gc time, 1.91% compilation time)
Running: chebyshev_quadrature with k=4
 11.284244 seconds (249.12 k allocations: 2.260 GiB, 1.89% gc time, 1.44% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.701084 seconds (484.17 k allocations: 13.254 GiB, 5.75% gc time, 1.19% compilation time)
Running: legendre_quadrature.
  9.705543 seconds (223.37 k allocations: 1.976 GiB, 1.26% gc time, 1.86% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.365035 seconds (8.23 M allocations: 13.383 GiB, 8.03% gc time, 0.62% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.162459 seconds (7.23 M allocations: 13.369 GiB, 8.71% gc time, 0.57% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.589714 seconds (22.25 k allocations: 1.347 MiB, 0.16% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.678902 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.488511 seconds (22.45 k allocations: 1.357 MiB, 0.25% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.932174 seconds (438.23 k allocations: 152.685 MiB, 2.06% gc time, 10.78% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.962859 seconds (200.04 M allocations: 2.983 GiB, 2.13% gc time, 0.15% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.499849 seconds (600.05 M allocations: 8.943 GiB, 5.73% gc time, 0.14% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.543562 seconds (600.03 M allocations: 8.943 GiB, 4.12% gc time, 0.10% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060996 seconds (109.56 k allocations: 4.131 MiB, 95.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.200383 seconds (247.70 k allocations: 13.448 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=2
  0.170017 seconds (272.34 k allocations: 14.521 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.190519 seconds (220.25 k allocations: 11.633 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.275055 seconds (220.25 k allocations: 11.661 MiB, 45.52% gc time, 99.49% compilation time)
Running: jacobi_quadrature with α=β=1
  0.346857 seconds (388.85 k allocations: 34.972 MiB, 93.52% compilation time)
Running: laguerre_quadrature with k=2
  0.240952 seconds (180.54 k allocations: 10.481 MiB, 84.38% compilation time)
Running: legendre_quadrature
  0.156048 seconds (145.98 k allocations: 8.073 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.016673 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017436 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.039564 seconds (18.88 k allocations: 1.122 MiB, 58.25% compilation time)
Running: rectangle_rule_midpoint
  0.032392 seconds (25.48 k allocations: 1.575 MiB, 66.56% compilation time)
Running: rectangle_rule_right
  0.035206 seconds (17.48 k allocations: 1.049 MiB, 49.89% compilation time)
Running: rombergs_method
  0.258868 seconds (172.71 k allocations: 9.856 MiB, 98.81% compilation time)
Running: simpsons_rule
  0.000519 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.045534 seconds (78.86 k allocations: 3.385 MiB, 97.70% compilation time)
Running: trapezoidal_rule
  0.138212 seconds (2.39 M allocations: 37.684 MiB, 38.25% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000660 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.127245 seconds (2.46 k allocations: 1.691 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.097319 seconds (2.71 k allocations: 2.355 MiB, 96.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.095275 seconds (2.31 k allocations: 2.028 MiB, 96.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.089645 seconds (2.31 k allocations: 1.469 MiB, 97.02% compilation time)
Running: jacobi_quadrature with α=β=1
  5.279482 seconds (365.93 k allocations: 904.798 MiB, 6.43% gc time, 6.35% compilation time)
Running: legendre_quadrature
  0.069735 seconds (1.27 k allocations: 68.203 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000181 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000120 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.965626 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000361 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.804861 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071666 seconds (997 allocations: 56.672 KiB, 99.42% compilation time)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000982 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000125 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.102771 seconds (2.53 k allocations: 579.203 KiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.106933 seconds (2.79 k allocations: 780.188 KiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.102506 seconds (2.39 k allocations: 661.047 KiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.107577 seconds (2.39 k allocations: 491.547 KiB, 99.27% compilation time)
Running: jacobi_quadrature with α=β=1
  2.800971 seconds (372.49 k allocations: 252.909 MiB, 13.48% compilation time)
Running: legendre_quadrature
  0.067870 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000062 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.307024 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000145 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.307539 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.104579 seconds (1.21 k allocations: 64.938 KiB, 99.50% compilation time)
Running: simpsons_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000476 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
