Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_G6sVI0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_G6sVI0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.208052 seconds (289.06 k allocations: 13.528 MiB, 11.20% gc time, 91.31% compilation time)
Running: chebyshev_quadrature with k=1
  1.322794 seconds (2.20 M allocations: 126.948 MiB, 3.87% gc time, 97.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.195494 seconds (409.38 k allocations: 23.563 MiB, 83.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.215185 seconds (473.75 k allocations: 26.631 MiB, 6.75% gc time, 82.53% compilation time)
Running: chebyshev_quadrature with k=4
  0.192570 seconds (418.56 k allocations: 23.256 MiB, 4.23% gc time, 89.52% compilation time)
Running: jacobi_quadrature with α=β=1
 24.063813 seconds (36.45 M allocations: 3.003 GiB, 11.79% gc time, 77.85% compilation time)
Running: laguerre_quadrature with k=1
  1.878179 seconds (3.17 M allocations: 177.091 MiB, 3.78% gc time, 99.87% compilation time)
Running: legendre_quadrature
  0.118908 seconds (206.22 k allocations: 11.847 MiB, 98.87% compilation time)
Running: lobatto_quadrature
  0.270203 seconds (330.49 k allocations: 19.999 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.291632 seconds (449.14 k allocations: 27.507 MiB, 7.71% gc time, 99.35% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.279588 seconds (100.02 M allocations: 1.491 GiB, 0.41% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.116499 seconds (172.46 k allocations: 3.827 MiB, 17.17% gc time, 22.18% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.428162 seconds (100.02 M allocations: 1.491 GiB, 0.39% gc time, 0.06% compilation time)
Running: rombergs_method
  0.500110 seconds (723.19 k allocations: 41.750 MiB, 3.67% gc time, 99.58% compilation time)
Running: simpsons_rule
  0.026390 seconds (46.55 k allocations: 2.532 MiB, 90.83% compilation time)
Running: simpsons38_rule
  0.078094 seconds (108.52 k allocations: 5.756 MiB, 98.03% compilation time)
Running: trapezoidal_rule
  0.378660 seconds (1.72 M allocations: 28.605 MiB, 4.28% gc time, 13.30% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.057702 seconds (29.79 k allocations: 1.767 MiB, 99.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.391375 seconds (293.18 k allocations: 15.555 MiB, 7.57% gc time, 99.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.126775 seconds (93.80 k allocations: 2.675 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.144958 seconds (82.06 k allocations: 2.476 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.130846 seconds (64.67 k allocations: 2.122 MiB, 98.87% compilation time)
Running: jacobi_quadrature with α=β=1
  1.910965 seconds (504.12 k allocations: 161.861 MiB, 11.68% gc time, 26.45% compilation time)
Running: legendre_quadrature
  0.148687 seconds (41.27 k allocations: 2.379 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.016826 seconds (15.66 k allocations: 998.606 KiB, 99.09% compilation time)
Running: radau_quadrature
  0.014004 seconds (15.77 k allocations: 1005.821 KiB, 98.97% compilation time)
Running: rectangle_rule_left
 13.514577 seconds (471.41 M allocations: 7.025 GiB, 4.80% gc time)
Running: rectangle_rule_midpoint
  0.000032 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.730378 seconds (476.96 M allocations: 7.107 GiB, 3.88% gc time)
Running: rombergs_method
  0.301646 seconds (326.59 k allocations: 18.534 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000023 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.052123 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.036696 seconds (16.49 k allocations: 1.000 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.018972 seconds (1.03 k allocations: 34.125 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.093866 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.081451 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.093815 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.093782 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.255695 seconds (364.10 k allocations: 18.985 MiB, 10.27% gc time, 99.28% compilation time)
Running: legendre_quadrature
  0.062984 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000091 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000347 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000240 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000333 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.068873 seconds (1.04 k allocations: 56.531 KiB, 99.78% compilation time)
Running: simpsons_rule
  0.000017 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.020556 seconds (923 allocations: 39.281 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.019066 seconds (44.29 k allocations: 702.859 KiB, 91.99% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.038722 seconds (80.91 k allocations: 4.823 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.118581 seconds (230.61 k allocations: 12.967 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.152984 seconds (283.17 k allocations: 15.880 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.143680 seconds (234.76 k allocations: 13.158 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.149817 seconds (234.76 k allocations: 13.045 MiB, 98.89% compilation time)
Running: jacobi_quadrature with α=β=1
  1.783478 seconds (447.19 k allocations: 163.211 MiB, 4.40% gc time, 21.75% compilation time)
Running: legendre_quadrature
  0.113054 seconds (185.44 k allocations: 10.707 MiB, 98.50% compilation time)
Running: lobatto_quadrature
  0.117691 seconds (196.77 k allocations: 11.422 MiB, 98.84% compilation time)
Running: radau_quadrature
  0.155012 seconds (196.77 k allocations: 11.420 MiB, 9.61% gc time, 98.86% compilation time)
Running: rectangle_rule_left
  0.633129 seconds (18.82 k allocations: 1.147 MiB, 3.67% compilation time)
Running: rectangle_rule_midpoint
  0.018903 seconds (24.67 k allocations: 1.555 MiB, 99.10% compilation time)
Running: rectangle_rule_right
  0.618089 seconds (17.39 k allocations: 1.062 MiB, 3.54% compilation time)
Running: rombergs_method
  0.131385 seconds (134.27 k allocations: 7.778 MiB, 97.85% compilation time)
Running: simpsons_rule
  0.022202 seconds (36.49 k allocations: 2.341 MiB, 99.24% compilation time)
Running: simpsons38_rule
  0.027172 seconds (42.37 k allocations: 2.678 MiB, 99.37% compilation time)
Running: trapezoidal_rule
  0.020002 seconds (42.32 k allocations: 1.671 MiB, 96.59% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031114 seconds (66.94 k allocations: 2.959 MiB, 96.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.166115 seconds (237.20 k allocations: 13.048 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.233029 seconds (290.20 k allocations: 15.887 MiB, 8.46% gc time, 98.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.188022 seconds (241.33 k allocations: 13.118 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.157376 seconds (241.34 k allocations: 13.143 MiB, 98.76% compilation time)
Running: hermite_quadrature with k=2
 11.962939 seconds (20.10 M allocations: 1.056 GiB, 10.75% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.332236 seconds (456.36 k allocations: 49.421 MiB, 8.75% gc time, 83.22% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.164729 seconds (276.26 k allocations: 15.249 MiB, 98.03% compilation time)
Running: legendre_quadrature
  0.156817 seconds (191.98 k allocations: 11.035 MiB, 17.31% gc time, 98.57% compilation time)
Running: lobatto_quadrature
  0.153037 seconds (217.42 k allocations: 37.193 MiB, 82.85% compilation time)
Running: radau_quadrature
  0.194147 seconds (214.01 k allocations: 29.854 MiB, 15.27% gc time, 74.54% compilation time)
Running: rectangle_rule_left
  0.023227 seconds (21.73 k allocations: 1.293 MiB, 99.29% compilation time)
Running: rectangle_rule_midpoint
  0.021565 seconds (26.47 k allocations: 1.642 MiB, 99.24% compilation time)
Running: rectangle_rule_right
  0.024614 seconds (18.50 k allocations: 1.117 MiB, 99.31% compilation time)
Running: rombergs_method
  0.082436 seconds (136.74 k allocations: 7.803 MiB, 97.49% compilation time)
Running: simpsons_rule
  0.024746 seconds (43.97 k allocations: 2.609 MiB, 98.95% compilation time)
Running: simpsons38_rule
  0.038973 seconds (57.34 k allocations: 3.063 MiB, 98.96% compilation time)
Running: trapezoidal_rule
  0.042227 seconds (28.35 k allocations: 1.595 MiB, 51.07% gc time, 99.42% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028828 seconds (50.91 k allocations: 2.619 MiB, 98.02% compilation time)
Running: chebyshev_quadrature with k=1
  0.143847 seconds (232.72 k allocations: 12.856 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.186588 seconds (285.38 k allocations: 15.644 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.202719 seconds (236.87 k allocations: 12.928 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.173537 seconds (236.87 k allocations: 12.929 MiB, 15.97% gc time, 98.75% compilation time)
Running: hermite_quadrature with k=2
  0.117513 seconds (170.78 k allocations: 9.790 MiB, 98.33% compilation time)
Running: jacobi_quadrature with α=β=1
  5.906072 seconds (449.63 k allocations: 1.175 GiB, 13.25% gc time, 5.94% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.199962 seconds (271.55 k allocations: 15.060 MiB, 7.49% gc time, 96.39% compilation time)
Running: legendre_quadrature
  0.120985 seconds (187.55 k allocations: 10.818 MiB, 98.19% compilation time)
Running: lobatto_quadrature
  0.153399 seconds (208.19 k allocations: 22.924 MiB, 90.23% compilation time)
Running: radau_quadrature
  0.167448 seconds (207.34 k allocations: 20.852 MiB, 92.64% compilation time)
Running: rectangle_rule_left
  0.037428 seconds (19.52 k allocations: 1.188 MiB, 44.76% gc time, 99.65% compilation time)
Running: rectangle_rule_midpoint
  0.018811 seconds (25.36 k allocations: 1.591 MiB, 99.35% compilation time)
Running: rectangle_rule_right
  0.018798 seconds (17.36 k allocations: 1.062 MiB, 99.32% compilation time)
Running: rombergs_method
  0.089203 seconds (132.58 k allocations: 7.622 MiB, 97.29% compilation time)
Running: simpsons_rule
  0.020665 seconds (39.30 k allocations: 2.442 MiB, 98.99% compilation time)
Running: simpsons38_rule
  0.027336 seconds (48.16 k allocations: 2.822 MiB, 98.99% compilation time)
Running: trapezoidal_rule
  0.019162 seconds (23.26 k allocations: 1.433 MiB, 98.89% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022605 seconds (39.05 k allocations: 2.475 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=1
  0.157001 seconds (231.10 k allocations: 13.043 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.195234 seconds (283.67 k allocations: 15.996 MiB, 98.10% compilation time)
Running: chebyshev_quadrature with k=3
  0.162297 seconds (235.25 k allocations: 13.142 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.240367 seconds (235.25 k allocations: 12.975 MiB, 7.88% gc time, 99.03% compilation time)
Running: jacobi_quadrature with α=β=1
  2.474208 seconds (447.72 k allocations: 194.256 MiB, 3.96% gc time, 19.01% compilation time)
Running: legendre_quadrature
  0.160214 seconds (185.93 k allocations: 10.732 MiB, 98.68% compilation time)
Running: lobatto_quadrature
  0.146693 seconds (197.26 k allocations: 11.455 MiB, 98.42% compilation time)
Running: radau_quadrature
  0.165057 seconds (197.26 k allocations: 11.445 MiB, 98.55% compilation time)
Running: rectangle_rule_left
  0.347302 seconds (19.34 k allocations: 1.173 MiB, 6.79% compilation time)
Running: rectangle_rule_midpoint
  0.021540 seconds (25.01 k allocations: 1.573 MiB, 99.25% compilation time)
Running: rectangle_rule_right
  0.162058 seconds (17.73 k allocations: 1.081 MiB, 13.76% compilation time)
Running: rombergs_method
  0.116287 seconds (145.02 k allocations: 8.485 MiB, 96.58% compilation time)
Running: simpsons_rule
  0.024919 seconds (37.11 k allocations: 2.369 MiB, 99.20% compilation time)
Running: simpsons38_rule
  0.028404 seconds (43.08 k allocations: 2.708 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.014626 seconds (43.25 k allocations: 1.703 MiB, 95.48% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.019547 seconds (38.85 k allocations: 2.409 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.161399 seconds (231.69 k allocations: 12.988 MiB, 11.76% gc time, 98.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.169244 seconds (284.30 k allocations: 15.899 MiB, 97.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.161045 seconds (235.84 k allocations: 13.067 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.157255 seconds (235.84 k allocations: 13.142 MiB, 98.33% compilation time)
Running: jacobi_quadrature with α=β=1
  2.312696 seconds (448.44 k allocations: 148.944 MiB, 5.67% gc time, 20.40% compilation time)
Running: legendre_quadrature
  0.162083 seconds (186.53 k allocations: 10.750 MiB, 98.56% compilation time)
Running: lobatto_quadrature
  0.165540 seconds (197.86 k allocations: 11.468 MiB, 98.49% compilation time)
Running: radau_quadrature
  0.143466 seconds (197.85 k allocations: 11.462 MiB, 98.39% compilation time)
Running: rectangle_rule_left
  0.740702 seconds (19.59 k allocations: 1.186 MiB, 6.62% compilation time)
Running: rectangle_rule_midpoint
  0.019184 seconds (25.01 k allocations: 1.574 MiB, 99.03% compilation time)
Running: rectangle_rule_right
  0.690146 seconds (17.69 k allocations: 1.078 MiB, 3.05% compilation time)
Running: rombergs_method
  0.119199 seconds (135.49 k allocations: 7.815 MiB, 97.07% compilation time)
Running: simpsons_rule
  0.024911 seconds (37.60 k allocations: 2.389 MiB, 99.18% compilation time)
Running: simpsons38_rule
  0.025367 seconds (43.78 k allocations: 2.734 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.021457 seconds (55.40 k allocations: 1.899 MiB, 94.48% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.117514 seconds (147.44 k allocations: 8.798 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.129938 seconds (69.93 k allocations: 2.205 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.141177 seconds (105.09 k allocations: 2.868 MiB, 97.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.157922 seconds (92.57 k allocations: 2.654 MiB, 97.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.141750 seconds (72.10 k allocations: 2.248 MiB, 98.08% compilation time)
Running: jacobi_quadrature with α=β=1
  1.864558 seconds (480.42 k allocations: 167.784 MiB, 8.00% gc time, 17.49% compilation time)
Running: legendre_quadrature
  0.107373 seconds (18.73 k allocations: 1.094 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.000080 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000041 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.025298 seconds (590.00 M allocations: 8.792 GiB, 6.60% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.521000 seconds (592.75 M allocations: 8.833 GiB, 6.37% gc time)
Running: rombergs_method
  0.109725 seconds (20.51 k allocations: 1.165 MiB, 99.57% compilation time)
Running: simpsons_rule
  0.000046 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026200 seconds (463 allocations: 22.578 KiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.017756 seconds (171 allocations: 7.859 KiB, 99.36% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.064143 seconds (209.93 M allocations: 3.138 GiB, 1.82% gc time, 0.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.408203 seconds (414.11 k allocations: 22.963 MiB, 3.69% gc time, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
 17.814626 seconds (468.75 k allocations: 4.040 GiB, 2.42% gc time, 2.18% compilation time)
Running: chebyshev_quadrature with k=3
  8.244445 seconds (249.12 k allocations: 1.642 GiB, 4.44% gc time, 2.57% compilation time)
Running: chebyshev_quadrature with k=4
 11.144586 seconds (249.12 k allocations: 2.260 GiB, 2.21% gc time, 1.52% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 38.165234 seconds (484.63 k allocations: 13.254 GiB, 6.74% gc time, 0.92% compilation time)
Running: legendre_quadrature.
  9.411117 seconds (223.37 k allocations: 1.976 GiB, 1.15% gc time, 1.87% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.125061 seconds (8.23 M allocations: 13.383 GiB, 7.47% gc time, 0.52% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.987757 seconds (7.23 M allocations: 13.369 GiB, 7.57% gc time, 0.55% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.533507 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.686307 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.495976 seconds (22.45 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.974990 seconds (438.21 k allocations: 152.686 MiB, 1.94% gc time, 10.18% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.200663 seconds (200.04 M allocations: 2.983 GiB, 2.05% gc time, 0.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.430540 seconds (600.05 M allocations: 8.943 GiB, 5.76% gc time, 0.19% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.765992 seconds (600.03 M allocations: 8.943 GiB, 4.19% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.053309 seconds (109.56 k allocations: 4.131 MiB, 93.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.159712 seconds (247.70 k allocations: 13.448 MiB, 97.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.161899 seconds (272.34 k allocations: 14.521 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=3
  0.272204 seconds (220.25 k allocations: 11.634 MiB, 45.89% gc time, 99.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.141044 seconds (220.25 k allocations: 11.661 MiB, 99.07% compilation time)
Running: jacobi_quadrature with α=β=1
  0.325762 seconds (389.30 k allocations: 34.995 MiB, 93.39% compilation time)
Running: laguerre_quadrature with k=2
  0.146756 seconds (180.54 k allocations: 10.477 MiB, 74.66% compilation time)
Running: legendre_quadrature
  0.117157 seconds (145.98 k allocations: 8.073 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.023163 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.020185 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.046448 seconds (18.88 k allocations: 1.122 MiB, 62.88% compilation time)
Running: rectangle_rule_midpoint
  0.037226 seconds (25.48 k allocations: 1.575 MiB, 66.51% compilation time)
Running: rectangle_rule_right
  0.041614 seconds (17.48 k allocations: 1.049 MiB, 64.13% compilation time)
Running: rombergs_method
  0.217336 seconds (172.12 k allocations: 9.826 MiB, 98.64% compilation time)
Running: simpsons_rule
  0.000490 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.038253 seconds (78.86 k allocations: 3.385 MiB, 97.48% compilation time)
Running: trapezoidal_rule
  0.095230 seconds (2.39 M allocations: 37.684 MiB, 28.94% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000695 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.099448 seconds (2.46 k allocations: 1.691 MiB, 97.98% compilation time)
Running: chebyshev_quadrature with k=2
  0.129031 seconds (2.71 k allocations: 2.355 MiB, 94.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.094142 seconds (2.31 k allocations: 2.028 MiB, 95.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.096938 seconds (2.31 k allocations: 1.469 MiB, 97.35% compilation time)
Running: jacobi_quadrature with α=β=1
  5.186487 seconds (366.38 k allocations: 904.825 MiB, 5.81% gc time, 8.29% compilation time)
Running: legendre_quadrature
  0.075529 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000154 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000114 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.757055 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.774316 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065321 seconds (997 allocations: 56.672 KiB, 99.18% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001009 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000149 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.095779 seconds (2.53 k allocations: 579.203 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.099769 seconds (2.79 k allocations: 780.188 KiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.095366 seconds (2.39 k allocations: 661.047 KiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=4
  0.108535 seconds (2.39 k allocations: 491.547 KiB, 98.21% compilation time)
Running: jacobi_quadrature with α=β=1
  1.258798 seconds (372.94 k allocations: 252.932 MiB, 35.90% compilation time)
Running: legendre_quadrature
  0.068193 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000033 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.307951 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000133 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.393411 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083482 seconds (1.21 k allocations: 64.938 KiB, 99.47% compilation time)
Running: simpsons_rule
  0.000021 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000479 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
