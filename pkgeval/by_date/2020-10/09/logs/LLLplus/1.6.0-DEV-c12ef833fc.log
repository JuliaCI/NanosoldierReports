Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Parsers ───────────── v1.0.11
  Installed LLLplus ───────────── v1.2.8
  Installed DocStringExtensions ─ v0.8.3
  Installed JSON ──────────────── v0.21.1
  Installed Documenter ────────── v0.24.11
Updating `~/.julia/environments/v1.6/Project.toml`
  [142c1900] + LLLplus v1.2.8
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ffbed154] + DocStringExtensions v0.8.3
  [e30172f5] + Documenter v0.24.11
  [682c06a0] + JSON v0.21.1
  [142c1900] + LLLplus v1.2.8
  [69de0a69] + Parsers v1.0.11
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing LLLplus
Status `/tmp/jl_ud5xg2/Project.toml`
  [e30172f5] Documenter v0.24.11
  [142c1900] LLLplus v1.2.8
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_ud5xg2/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.24.11
  [682c06a0] JSON v0.21.1
  [142c1900] LLLplus v1.2.8
  [69de0a69] Parsers v1.0.11
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  4.071505 seconds (2.04 M allocations: 164.724 MiB, 1.78% gc time, 37.18% compilation time)
  3.228538 seconds (4.08 k allocations: 62.510 MiB, 4.43% gc time)

Testing LLL on 10x10 complex matrix...
  6.960368 seconds (7.85 M allocations: 394.900 MiB, 5.53% gc time, 99.85% compilation time)
  0.000236 seconds (368 allocations: 66.953 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.089336 seconds (2.35 M allocations: 130.893 MiB, 3.64% gc time, 97.97% compilation time)
  0.002422 seconds (403 allocations: 171.172 KiB)
Testing VBLAST on same 10x10 complex matrix...
  1.719565 seconds (1.65 M allocations: 85.683 MiB, 1.31% gc time, 95.52% compilation time)
  0.071488 seconds (181 allocations: 121.000 KiB, 22.16% gc time)
Testing Brun on real part of same 10x10 matrix...
  1.636123 seconds (2.16 M allocations: 121.699 MiB, 2.42% gc time, 99.83% compilation time)
  0.000137 seconds (24 allocations: 12.188 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  1.990497 seconds (4.06 M allocations: 322.578 MiB, 11.31% gc time, 73.95% compilation time)
  0.261885 seconds (2.00 M allocations: 209.809 MiB, 5.02% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases is hopefully smaller :-)
min norm of input is 30.0
  0.433840 seconds (107.84 k allocations: 75.597 MiB, 6.15% gc time)
min norm of lll-reduced basis is 29.30870177950569
  4.827927 seconds (4.26 M allocations: 1.242 GiB, 4.27% gc time, 73.26% compilation time)
min norm of seysen-reduced basis is 30.0

Running doctests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/seysen.jl:14-24
│ 
│ ```jldoctest
│ julia> H= [1 2; 3 4];B,T = seysen(H); B
│ 2×2 Array{Int64,2}:
│  -1  1
│   1  1
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= seysen(H); B
│ 2×2 Array{Complex{BigFloat},2}:
│  0.0+1.0im  0.50+0.0im
│  0.0+0.0im   1.0+0.0im
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= [1 2; 3 4];B,T = seysen(H); B
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Int64}:
│  -1  1
│   1  1
│ 
│ Expected output:
│ 
│ 2×2 Array{Int64,2}:
│  -1  1
│   1  1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Int64,2}:
│     Matrix{Int64}:
│     -1  1
│      1  1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/seysen.jl:14-24
│ 
│ ```jldoctest
│ julia> H= [1 2; 3 4];B,T = seysen(H); B
│ 2×2 Array{Int64,2}:
│  -1  1
│   1  1
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= seysen(H); B
│ 2×2 Array{Complex{BigFloat},2}:
│  0.0+1.0im  0.50+0.0im
│  0.0+0.0im   1.0+0.0im
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= seysen(H); B
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Complex{BigFloat}}:
│  0.0+1.0im  0.50+0.0im
│  0.0+0.0im   1.0+0.0im
│ 
│ Expected output:
│ 
│ 2×2 Array{Complex{BigFloat},2}:
│  0.0+1.0im  0.50+0.0im
│  0.0+0.0im   1.0+0.0im
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Complex{BigFloat},2}:
│     Matrix{Complex{BigFloat}}:
│     0.0+1.0im  0.50+0.0im
│     0.0+0.0im   1.0+0.0im
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/applications.jl:335-343
│ 
│ ```jldoctest
│ julia> x = [0.3912641745333527; 0.5455179974014548; 0.1908698210882469];
│ 
│ julia> rationalapprox(x,1e4,Int64)
│ 3-element Array{Rational{Int64},1}:
│  43//110
│   6//11
│  21//110
│ 
│ ```
│ 
│ Subexpression:
│ 
│ rationalapprox(x,1e4,Int64)
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Rational{Int64}}:
│  43//110
│   6//11
│  21//110
│ 
│ Expected output:
│ 
│ 3-element Array{Rational{Int64},1}:
│  43//110
│   6//11
│  21//110
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Rational{Int64},1}:
│     Vector{Rational{Int64}}:
│     43//110
│      6//11
│     21//110
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/vblast.jl:16-26
│ 
│ ```jldoctest
│ julia> H= [1. 2; 3 4];W,_ = vblast(H); W
│ 2×2 Array{Float64,2}:
│  1.5  -0.5
│  0.1   0.3
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; W,_= vblast(H); W
│ 2×2 Array{Complex{BigFloat},2}:
│       -2.0+3.0im            2.0-1.5im     
│  0.0779221-0.103896im  0.155844-0.103896im
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= [1. 2; 3 4];W,_ = vblast(H); W
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Float64}:
│  1.5  -0.5
│  0.1   0.3
│ 
│ Expected output:
│ 
│ 2×2 Array{Float64,2}:
│  1.5  -0.5
│  0.1   0.3
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Float64,2}:
│     Matrix{Float64}:
│     1.5  -0.5
│     0.1   0.3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/vblast.jl:16-26
│ 
│ ```jldoctest
│ julia> H= [1. 2; 3 4];W,_ = vblast(H); W
│ 2×2 Array{Float64,2}:
│  1.5  -0.5
│  0.1   0.3
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; W,_= vblast(H); W
│ 2×2 Array{Complex{BigFloat},2}:
│       -2.0+3.0im            2.0-1.5im     
│  0.0779221-0.103896im  0.155844-0.103896im
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= BigFloat.([1.5 2; 3 4]) .+ 2im; W,_= vblast(H); W
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Complex{BigFloat}}:
│       -2.0+3.0im            2.0-1.5im
│  0.0779221-0.103896im  0.155844-0.103896im
│ 
│ Expected output:
│ 
│ 2×2 Array{Complex{BigFloat},2}:
│       -2.0+3.0im            2.0-1.5im     
│  0.0779221-0.103896im  0.155844-0.103896im
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Complex{BigFloat},2}:
│          Matrix{Complex{BigFloat}}:
│          -2.0+3.0im            2.0-1.5im     
│     2.0-1.5im
│     0.0779221-0.103896im  0.155844-0.103896im
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/hard_sphere.jl:26-31
│ 
│ ```jldoctest
│ julia> X = hardsphere([1. 1]', [1. 2; 3 4],2)
│ 2×1 Array{Int64,2}:
│  -1
│   1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ X = hardsphere([1. 1]', [1. 2; 3 4],2)
│ 
│ Evaluated output:
│ 
│ 2×1 Matrix{Int64}:
│  -1
│   1
│ 
│ Expected output:
│ 
│ 2×1 Array{Int64,2}:
│  -1
│   1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×1 Array{Int64,2}:
│     Matrix{Int64}:
│     -1
│      1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/applications.jl:20-41
│ 
│ ```jldoctest
│ julia> A=[10 1 -9; 1 8 8]; xtrue=[0; 2; 9]; d=A*xtrue;
│ 
│ julia> integerfeasibility(A,d)
│ 3-element Array{Int64,1}:
│  0
│  2
│  9
│ 
│ julia> A=[10 1.1 -9.1; 1 8 8]; d=A*xtrue;
│ 
│ julia> integerfeasibility(A,d)
│ 3-element Array{Float64,1}:
│  0.0
│  2.0
│  9.0
│ 
│ julia> n=20;m=30; A = rand(-10:10,n,m); xtrue = rand(0:10,m); d=A*xtrue;
│ 
│ julia> sum(abs.(xtrue - integerfeasibility(A,d) ))
│ 0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ integerfeasibility(A,d)
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int64}:
│  0
│  2
│  9
│ 
│ Expected output:
│ 
│ 3-element Array{Int64,1}:
│  0
│  2
│  9
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int64,1}:
│     Vector{Int64}:
│     0
│     2
│     9
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/applications.jl:20-41
│ 
│ ```jldoctest
│ julia> A=[10 1 -9; 1 8 8]; xtrue=[0; 2; 9]; d=A*xtrue;
│ 
│ julia> integerfeasibility(A,d)
│ 3-element Array{Int64,1}:
│  0
│  2
│  9
│ 
│ julia> A=[10 1.1 -9.1; 1 8 8]; d=A*xtrue;
│ 
│ julia> integerfeasibility(A,d)
│ 3-element Array{Float64,1}:
│  0.0
│  2.0
│  9.0
│ 
│ julia> n=20;m=30; A = rand(-10:10,n,m); xtrue = rand(0:10,m); d=A*xtrue;
│ 
│ julia> sum(abs.(xtrue - integerfeasibility(A,d) ))
│ 0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ integerfeasibility(A,d)
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Float64}:
│  0.0
│  2.0
│  9.0
│ 
│ Expected output:
│ 
│ 3-element Array{Float64,1}:
│  0.0
│  2.0
│  9.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Float64,1}:
│     Vector{Float64}:
│     0.0
│     2.0
│     9.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/hard_sphere.jl:77-82
│ 
│ ```jldoctest
│ julia> X = LLLplus.algIIsmart([5. 8]', [1. 2; 0 4],[4,4])
│ 2×1 Array{Float64,2}:
│  1.0
│  2.0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ X = LLLplus.algIIsmart([5. 8]', [1. 2; 0 4],[4,4])
│ 
│ Evaluated output:
│ 
│ 2×1 Matrix{Float64}:
│  1.0
│  2.0
│ 
│ Expected output:
│ 
│ 2×1 Array{Float64,2}:
│  1.0
│  2.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×1 Array{Float64,2}:
│     Matrix{Float64}:
│     1.0
│     2.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/brun.jl:18-23
│ 
│ ```jldoctest
│ julia> H=[1 2; 3 4]; B,T=brun(H); T
│ 2×2 Array{Int64,2}:
│   3  -1
│  -2   1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H=[1 2; 3 4]; B,T=brun(H); T
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Int64}:
│   3  -1
│  -2   1
│ 
│ Expected output:
│ 
│ 2×2 Array{Int64,2}:
│   3  -1
│  -2   1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Int64,2}:
│      Matrix{Int64}:
│      3  -1
│     -2   1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/latticegen.jl:30-35
│ 
│ ```jldoctest
│ julia> Random.seed!(0); b=gen_qary_b(Int64,2,1,6)
│ 2×2 Array{Int64,2}:
│  1   0
│  7  32
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Random.seed!(0); b=gen_qary_b(Int64,2,1,6)
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Int64}:
│   1   0
│  25  32
│ 
│ Expected output:
│ 
│ 2×2 Array{Int64,2}:
│  1   0
│  7  32
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Int64,2}:
│     Matrix{Int64}:
│      1   0
│     7  25  32
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/lll.jl:17-29
│ 
│ ```jldoctest
│ julia> H= [1 2; 3 4];B,_ = lll(H); B
│ 2×2 Array{Int64,2}:
│  1  -1
│  1   1
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= lll(H); B
│ 2×2 Array{Complex{BigFloat},2}:
│  0.50+0.0im  0.0+1.0im
│   1.0+0.0im  0.0+0.0im
│ 
│ julia> N=500;H = randn(N,N); B,T = lll(H);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= [1 2; 3 4];B,_ = lll(H); B
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Int64}:
│  1  -1
│  1   1
│ 
│ Expected output:
│ 
│ 2×2 Array{Int64,2}:
│  1  -1
│  1   1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Int64,2}:
│     Matrix{Int64}:
│     1  -1
│     1   1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/lll.jl:17-29
│ 
│ ```jldoctest
│ julia> H= [1 2; 3 4];B,_ = lll(H); B
│ 2×2 Array{Int64,2}:
│  1  -1
│  1   1
│ 
│ julia> H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= lll(H); B
│ 2×2 Array{Complex{BigFloat},2}:
│  0.50+0.0im  0.0+1.0im
│   1.0+0.0im  0.0+0.0im
│ 
│ julia> N=500;H = randn(N,N); B,T = lll(H);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H= BigFloat.([1.5 2; 3 4]) .+ 2im; B,_= lll(H); B
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Complex{BigFloat}}:
│  0.50+0.0im  0.0+1.0im
│   1.0+0.0im  0.0+0.0im
│ 
│ Expected output:
│ 
│ 2×2 Array{Complex{BigFloat},2}:
│  0.50+0.0im  0.0+1.0im
│   1.0+0.0im  0.0+0.0im
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Complex{BigFloat},2}:
│     Matrix{Complex{BigFloat}}:
│     0.50+0.0im  0.0+1.0im
│      1.0+0.0im  0.0+0.0im
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/lll.jl:113-118
│ 
│ ```jldoctest
│ julia> H = [1 2; 3 3]; B = gauss(H)
│ 2×2 Array{Float64,2}:
│  1.0  0.0
│  0.0  3.0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ H = [1 2; 3 3]; B = gauss(H)
│ 
│ Evaluated output:
│ 
│ 2×2 Matrix{Float64}:
│  1.0  0.0
│  0.0  3.0
│ 
│ Expected output:
│ 
│ 2×2 Array{Float64,2}:
│  1.0  0.0
│  0.0  3.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 Array{Float64,2}:
│     Matrix{Float64}:
│     1.0  0.0
│     0.0  3.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/utilities.jl:10-16
│ 
│ ```jldoctest
│ julia> H= [1 2; 3 4];B,T=lll(H);
│ 
│ julia> [orthogonalitydefect(H) orthogonalitydefect(B)]
│ 1×2 Array{Float64,2}:
│  7.07107  1.0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ [orthogonalitydefect(H) orthogonalitydefect(B)]
│ 
│ Evaluated output:
│ 
│ 1×2 Matrix{Float64}:
│  7.07107  1.0
│ 
│ Expected output:
│ 
│ 1×2 Array{Float64,2}:
│  7.07107  1.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×2 Array{Float64,2}:
│     Matrix{Float64}:
│     7.07107  1.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LLLplus/CFJFr/src/cvp.jl:15-34
│ 
│ ```jldoctest
│ julia> H=[1 2; 3 4]; Q,R=qr(H); uhat = cvp(Q'*[0,2],R)
│ 2-element Array{Float64,1}:
│   2.0
│  -1.0
│ 
│ julia> n=100;H=randn(n,n);Q,R=qr(H);
│ 
│ julia> u=Int.(rand(0:1e10,n));y=H*u+rand(n)/100;
│ 
│ julia> uhat=cvp(Q'*y,R); sum(abs.(u-uhat))
│ 0.0
│ 
│ julia> n=500;H=randn(n,n);Q,R=qr(H);
│ 
│ julia> u=Int.(rand(-1:1,n));y=H*u+rand(n)/10;
│ 
│ julia> uhat=cvp(Q'*y,R,Val{false},1); sum(abs.(u-uhat))
│ 0.0
│ ```
│ 
│ Subexpression:
│ 
│ H=[1 2; 3 4]; Q,R=qr(H); uhat = cvp(Q'*[0,2],R)
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Float64}:
│   2.0
│  -1.0
│ 
│ Expected output:
│ 
│ 2-element Array{Float64,1}:
│   2.0
│  -1.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Float64,1}:
│      Vector{Float64}:
│      2.0
│     -1.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
