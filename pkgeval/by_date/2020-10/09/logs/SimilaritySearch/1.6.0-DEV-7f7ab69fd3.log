Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_dCcSbX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_dCcSbX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(34, 0.044951558f0), Item(18, 0.046818018f0), Item(14, 0.078599215f0), Item(12, 0.14873779f0)])
Vsorted = Item[Item(34, 0.044951558f0), Item(18, 0.046818018f0), Item(14, 0.078599215f0), Item(12, 0.14873779f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004234910011291504, 0.004394706090291341, 301.0, 46.359709289856255))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003906758626302084, 0.004860329627990723, 301.0, 67.41167891025543))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038461605707804363, 0.003877131144205729, 301.0, 37.90881419181824))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005798912048339844, 0.003550601005554199, 301.0, 7.95276841474697))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0036278009414672852, 0.004404465357462565, 301.0, 42.028747585602105))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.818670908610026e-5, 2.266565958658854e-5, 301.0, 167.78076079115272))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.814697265625e-5, 0.007822736104329427, 300.0, 24.732116397470236)
p = PerformanceResult(1.0, 1.0, 1.0, 3.639856974283854e-5, 1.9025802612304687e-5, 300.0, 24.732116397470236)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0034406423568725587, 0.003118729591369629, 300.0, 1.1744937413859589)
p = PerformanceResult(1.0, 1.0, 1.0, 2.934932708740234e-5, 1.4869372049967448e-5, 300.0, 1.1744937413859589)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.814697265625e-5, 0.007822736104329427, 300.0, 24.732116397470236), PerformanceResult(1.0, 1.0, 1.0, 3.639856974283854e-5, 1.9025802612304687e-5, 300.0, 24.732116397470236), PerformanceResult(1.0, 1.0, 1.0, 0.0034406423568725587, 0.003118729591369629, 300.0, 1.1744937413859589), PerformanceResult(1.0, 1.0, 1.0, 2.934932708740234e-5, 1.4869372049967448e-5, 300.0, 1.1744937413859589))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007816092173258463, 0.0036132017771402995, 347.46666666666664, 28586.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006722418467203776, 0.0028332312901814777, 302.8666666666667, 6946.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7595291137695312e-5, 9.163220723470051e-6, 91.33333333333333, 46.08941299561411))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5656153361002605e-5, 8.73406728108724e-6, 84.53333333333333, 67.05049347877502))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6419092814127603e-5, 7.89960225423177e-6, 84.96666666666667, 37.7263845205307))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.9889742533365884e-5, 6.27597173055013e-5, 90.16666666666667, 41.81480044592172))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8233333333333331, 0.8233333333333331, 0.8233333333333331, 1.7770131429036458e-5, 2.6067097981770832e-5, 70.76666666666667, 174.61486006900668))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-10T03:57:52.317
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9041428571428571, 0.898, 0.9004481424148607, 1.6994476318359375e-5, 1.5981197357177735e-5, 153.59, 50.35253064450808))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6689300537109375e-5, 1.1928081512451172e-5, 157.06, 0.0))
*** advance 1 from 1000; 2020-10-10T03:57:52.925
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9155000000000001, 0.91, 0.9121666666666667, 1.695394515991211e-5, 1.4789104461669922e-5, 152.02, 75.1587584912777))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5094280242919922e-5, 1.0359287261962891e-5, 155.4, 0.0))
*** advance 1 from 1000; 2020-10-10T03:57:53.476
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8906666666666667, 0.889, 0.8897894736842106, 1.5747547149658202e-5, 1.8529891967773437e-5, 152.77, 40.92087781988084))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5752315521240233e-5, 1.5151500701904296e-5, 156.37, 0.0))
*** advance 1 from 1000; 2020-10-10T03:57:54.002
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9148333333333334, 0.91, 0.9119166666666666, 4.232645034790039e-5, 0.0001958298683166504, 152.5, 44.91893134685233))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.2941570281982425e-5, 0.00020565032958984374, 156.14, 0.0))
*** advance 1 from 1000; 2020-10-10T03:57:54.371
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.976, 0.976, 0.976, 0.0001073908805847168, 6.963014602661133e-5, 166.48, 192.4838295057416))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.5529861450195312e-5, 6.782054901123046e-5, 171.31, 0.0))
*** advance 1 from 1000; 2020-10-10T03:57:55.088
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9041428571428571, 0.898, 0.9004481424148607, 2.1800994873046874e-5, 0.00010628938674926758, 153.59, 50.36247499892488))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.894950866699219e-5, 4.6911239624023435e-5, 157.06, 0.016023618227336556))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:57:56.759
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.762, 0.762, 0.762, 0.001522819995880127, 6.67881965637207e-5, 197.92, 192.71666885912418))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:57:57.675
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.768, 0.768, 0.768, 0.0018866920471191405, 6.478071212768554e-5, 201.55, 109.62301805615425))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:57:58.631
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6459999999999999, 0.6459999999999999, 0.6459999999999999, 0.0014749693870544434, 6.289958953857422e-5, 239.41, 0.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:57:59.371
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9640000000000002, 0.9640000000000002, 0.9640000000000002, 0.0014421653747558594, 1.1889934539794921e-5, 223.77, 606.6000205427408))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:58:00.287
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.574, 0.574, 0.574, 0.0013890266418457031, 0.0004276919364929199, 263.08, 2370.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:58:01.105
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.359, 0.359, NaN, 0.0015198707580566407, 0.00036793947219848633, 243.55, 3662.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T03:58:02.137
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.573, 0.573, 0.573, 0.0014868927001953124, 1.811981201171875e-5, 248.84, 2396.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0666666666666664,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607371794871802,"seconds":0.0022529885172843933,"exhaustive_search_seconds":1.775100827217102e-6,"evaluations":8.4375,"distances_sum":631.2802057862282}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0666666666666664,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607371794871802,"seconds":0.0022529885172843933,"exhaustive_search_seconds":1.775100827217102e-6,"evaluations":8.4375,"distances_sum":631.2802057862282}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.706666666666667, conf: {"restarts":12}, perf: {"precision":0.9114583333333321,"recall":0.9114583333333321,"f1":0.9114583333333321,"seconds":1.7173588275909424e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":58.0078125,"distances_sum":286.039891179651}, best_list's length: 2, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.706666666666667,"state":{"restarts":12},"perf":{"precision":0.9114583333333321,"recall":0.9114583333333321,"f1":0.9114583333333321,"seconds":1.7173588275909424e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":58.0078125,"distances_sum":286.039891179651}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.852902471121509, conf: {"restarts":10}, perf: {"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.590140163898468e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":53.4296875,"distances_sum":286.3085033558309}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.852902471121509,"state":{"restarts":10},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.590140163898468e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":53.4296875,"distances_sum":286.3085033558309}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.852902471121509,"state":{"restarts":10},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.590140163898468e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":53.4296875,"distances_sum":286.3085033558309}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.852902471121509,"state":{"restarts":10},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.590140163898468e-5,"exhaustive_search_seconds":4.7888606786727905e-6,"evaluations":53.4296875,"distances_sum":286.3085033558309}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777769, conf: {"restarts":4}, perf: {"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":2.3877248167991638e-5,"exhaustive_search_seconds":2.0233914256095886e-5,"evaluations":86.46875,"distances_sum":127.98900606669486}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.846354166666666, conf: {"restarts":19}, perf: {"precision":0.846354166666666,"recall":0.846354166666666,"f1":0.846354166666666,"seconds":4.911795258522034e-5,"exhaustive_search_seconds":2.0233914256095886e-5,"evaluations":183.203125,"distances_sum":127.70203213579953}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8480902777777769,"state":{"restarts":4},"perf":{"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":2.3877248167991638e-5,"exhaustive_search_seconds":2.0233914256095886e-5,"evaluations":86.46875,"distances_sum":127.98900606669486}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8480902777777769,"state":{"restarts":4},"perf":{"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":2.3877248167991638e-5,"exhaustive_search_seconds":2.0233914256095886e-5,"evaluations":86.46875,"distances_sum":127.98900606669486}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555545, conf: {"restarts":16}, perf: {"precision":0.8446180555555545,"recall":0.8446180555555545,"f1":0.8446180555555545,"seconds":9.087100625038147e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":258.8828125,"distances_sum":56.527021086774766}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8315972222222212, conf: {"restarts":8}, perf: {"precision":0.8315972222222212,"recall":0.8315972222222212,"f1":0.8315972222222212,"seconds":5.562417209148407e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":188.2421875,"distances_sum":56.69650293048471}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.835937499999999, conf: {"restarts":9}, perf: {"precision":0.835937499999999,"recall":0.835937499999999,"f1":0.835937499999999,"seconds":8.376874029636383e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":203.2421875,"distances_sum":56.76784254889935}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8446180555555545,"state":{"restarts":16},"perf":{"precision":0.8446180555555545,"recall":0.8446180555555545,"f1":0.8446180555555545,"seconds":9.087100625038147e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":258.8828125,"distances_sum":56.527021086774766}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777765, conf: {"restarts":11}, perf: {"precision":0.8480902777777765,"recall":0.8480902777777765,"f1":0.8480902777777765,"seconds":6.547756493091583e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":213.5703125,"distances_sum":56.4525122763589}, best_list's length: 9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222214, conf: {"restarts":23}, perf: {"precision":0.8472222222222214,"recall":0.8472222222222214,"f1":0.8472222222222214,"seconds":0.00012124702334403992,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":311.8984375,"distances_sum":56.464724146761}, best_list's length: 13, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8480902777777765,"state":{"restarts":11},"perf":{"precision":0.8480902777777765,"recall":0.8480902777777765,"f1":0.8480902777777765,"seconds":6.547756493091583e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":213.5703125,"distances_sum":56.4525122763589}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8480902777777765,"state":{"restarts":11},"perf":{"precision":0.8480902777777765,"recall":0.8480902777777765,"f1":0.8480902777777765,"seconds":6.547756493091583e-5,"exhaustive_search_seconds":0.00026525743305683136,"evaluations":213.5703125,"distances_sum":56.4525122763589}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(11), SatNeighborhood(32), 2020-10-10T03:58:08.271
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(561, 0.05205473f0), Item(4721, 0.056489423f0), Item(8661, 0.05745099f0), Item(168, 0.06319695f0), Item(164, 0.0673791f0), Item(5454, 0.06765517f0), Item(4456, 0.06828934f0), Item(6191, 0.07537205f0), Item(6087, 0.0778916f0), Item(4507, 0.079248175f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.091943127962085, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9409923409923415,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2421875,"distances_sum":605.2535570859909}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0786516853932584, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.95004890942391,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.34375,"distances_sum":616.6994274258614}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.091943127962085,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9409923409923415,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2421875,"distances_sum":605.2535570859909}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":10}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9441709332334339,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.234375,"distances_sum":605.0772762298584}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":10},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9441709332334339,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.234375,"distances_sum":605.0772762298584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":10},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9441709332334339,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.234375,"distances_sum":605.0772762298584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.040307101727447, conf: {"bsize":3}, perf: {"precision":0.9704861111111105,"recall":0.9704861111111105,"f1":0.9704861111111105,"seconds":1.1080875992774963e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":32.5625,"distances_sum":273.6491461470723}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.347101315058344, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":1.4765188097953796e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":42.1796875,"distances_sum":272.74128369241953}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.430379746835443, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":1.4506280422210693e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":40.734375,"distances_sum":272.74128369241953}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.040307101727447,"state":{"bsize":3},"perf":{"precision":0.9704861111111105,"recall":0.9704861111111105,"f1":0.9704861111111105,"seconds":1.1080875992774963e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":32.5625,"distances_sum":273.6491461470723}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.2905738769150865, conf: {"bsize":2}, perf: {"precision":0.9453124999999992,"recall":0.9453124999999992,"f1":0.9453124999999992,"seconds":9.125098586082458e-6,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.0859375,"distances_sum":276.65916358679533}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.2905738769150865,"state":{"bsize":2},"perf":{"precision":0.9453124999999992,"recall":0.9453124999999992,"f1":0.9453124999999992,"seconds":9.125098586082458e-6,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.0859375,"distances_sum":276.65916358679533}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.2905738769150865,"state":{"bsize":2},"perf":{"precision":0.9453124999999992,"recall":0.9453124999999992,"f1":0.9453124999999992,"seconds":9.125098586082458e-6,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.0859375,"distances_sum":276.65916358679533}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.2905738769150865,"state":{"bsize":2},"perf":{"precision":0.9453124999999992,"recall":0.9453124999999992,"f1":0.9453124999999992,"seconds":9.125098586082458e-6,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.0859375,"distances_sum":276.65916358679533}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.860759493670887, conf: {"bsize":4}, perf: {"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":2.111867070198059e-5,"exhaustive_search_seconds":1.987442374229431e-5,"evaluations":59.25,"distances_sum":121.23222971428186}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.860759493670887,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":2.111867070198059e-5,"exhaustive_search_seconds":1.987442374229431e-5,"evaluations":59.25,"distances_sum":121.23222971428186}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.860759493670887,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":2.111867070198059e-5,"exhaustive_search_seconds":1.987442374229431e-5,"evaluations":59.25,"distances_sum":121.23222971428186}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.860759493670887,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":2.111867070198059e-5,"exhaustive_search_seconds":1.987442374229431e-5,"evaluations":59.25,"distances_sum":121.23222971428186}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.65246941549614, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.860013723373413e-5,"exhaustive_search_seconds":0.00021114014089107513,"evaluations":103.453125,"distances_sum":53.64764047390781}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.65246941549614,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.860013723373413e-5,"exhaustive_search_seconds":0.00021114014089107513,"evaluations":103.453125,"distances_sum":53.64764047390781}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.65246941549614,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.860013723373413e-5,"exhaustive_search_seconds":0.00021114014089107513,"evaluations":103.453125,"distances_sum":53.64764047390781}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.65246941549614,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.860013723373413e-5,"exhaustive_search_seconds":0.00021114014089107513,"evaluations":103.453125,"distances_sum":53.64764047390781}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(7), SatNeighborhood(32), 2020-10-10T03:58:11.677
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4882, 0.012898384f0), Item(2120, 0.029841276f0), Item(800, 0.03571041f0), Item(3604, 0.04097379f0), Item(1949, 0.046795573f0), Item(8052, 0.04751955f0), Item(1636, 0.051897354f0), Item(3210, 0.05218019f0), Item(5951, 0.05455632f0), Item(5657, 0.056623526f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
