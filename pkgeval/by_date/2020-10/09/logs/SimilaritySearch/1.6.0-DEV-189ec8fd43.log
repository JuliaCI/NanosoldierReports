Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_DgRdFX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_DgRdFX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(47, 0.0038707256f0), Item(26, 0.07873666f0), Item(1, 0.094974995f0), Item(3, 0.0975256f0)])
Vsorted = Item[Item(47, 0.0038707256f0), Item(26, 0.07873666f0), Item(1, 0.094974995f0), Item(3, 0.0975256f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037915627161661785, 0.00394593079884847, 301.0, 49.87638792023063))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003917853037516276, 0.0036873737970987957, 301.0, 72.6479526758194))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003793017069498698, 0.0038876692454020184, 301.0, 40.47960674762726))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038599332173665365, 0.0037117640177408854, 301.0, 9.26932130556088))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003800034523010254, 0.004224896430969238, 301.0, 45.05159765854478))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.575483957926432e-5, 2.5606155395507814e-5, 301.0, 179.31544618308544))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 2.7481714884440104e-5, 0.008275032043457031, 300.0, 27.372427131980658)
p = PerformanceResult(1.0, 1.0, 1.0, 3.1892458597819014e-5, 1.9168853759765626e-5, 300.0, 27.372427131980658)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004310258229573568, 0.0033556620279947915, 300.0, 1.524734337182963)
p = PerformanceResult(1.0, 1.0, 1.0, 2.6520093282063802e-5, 1.4201800028483074e-5, 300.0, 1.524734337182963)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 2.7481714884440104e-5, 0.008275032043457031, 300.0, 27.372427131980658), PerformanceResult(1.0, 1.0, 1.0, 3.1892458597819014e-5, 1.9168853759765626e-5, 300.0, 27.372427131980658), PerformanceResult(1.0, 1.0, 1.0, 0.004310258229573568, 0.0033556620279947915, 300.0, 1.524734337182963), PerformanceResult(1.0, 1.0, 1.0, 2.6520093282063802e-5, 1.4201800028483074e-5, 300.0, 1.524734337182963))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 127.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006448491414388021, 0.0035944302876790364, 347.56666666666666, 28508.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006963872909545898, 0.003111537297566732, 302.9, 6967.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.113414764404297e-5, 8.47180684407552e-6, 90.8, 49.83366608247161))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.544952392578125e-5, 6.937980651855469e-6, 82.8, 72.53502857685089))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.609325408935547e-5, 9.298324584960938e-6, 87.6, 40.476860761642456))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.500779469807943e-5, 6.276766459147135e-5, 92.16666666666667, 45.02655291929841))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8066666666666668, 0.8066666666666668, 0.8066666666666668, 1.857280731201172e-5, 2.5963783264160158e-5, 69.16666666666667, 189.72256760299206))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-10T06:16:42.209
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9085, 0.9039999999999999, 0.9059019607843136, 1.0950565338134766e-5, 1.194000244140625e-5, 153.33, 49.786803757655434))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0700225830078126e-5, 8.580684661865235e-6, 156.96, 0.0))
*** advance 1 from 1000; 2020-10-10T06:16:42.738
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8936666666666667, 0.8919999999999999, 0.8927894736842106, 1.4271736145019531e-5, 1.4681816101074218e-5, 152.79, 74.63047413527966))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3797283172607421e-5, 1.0569095611572265e-5, 156.18, 0.0))
*** advance 1 from 1000; 2020-10-10T06:16:43.343
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9223333333333329, 0.9189999999999996, 0.9202499999999997, 1.3973712921142578e-5, 2.031087875366211e-5, 155.39, 40.01520887389779))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4674663543701171e-5, 1.5528202056884765e-5, 159.19, 0.0))
*** advance 1 from 1000; 2020-10-10T06:16:43.988
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9240317460317459, 0.9209999999999999, 0.9223034055727556, 4.436254501342773e-5, 0.00019610166549682617, 153.31, 44.54596548061818))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.481077194213867e-5, 0.00021097898483276366, 156.94, 0.0))
*** advance 1 from 1000; 2020-10-10T06:16:44.384
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.963, 0.963, 0.963, 2.785205841064453e-5, 7.189035415649413e-5, 167.61, 189.52824192261323))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.6543140411376953e-5, 6.959915161132813e-5, 172.52, 0.0))
*** advance 1 from 1000; 2020-10-10T06:16:45.034
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9085, 0.9039999999999999, 0.9059019607843136, 2.1522045135498046e-5, 4.6539306640625e-5, 153.33, 49.79617874696851))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9266605377197266e-5, 4.735946655273437e-5, 156.96, 0.009304732113378122))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:46.656
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7439999999999998, 0.7439999999999998, 0.7439999999999998, 0.0014473485946655273, 6.878137588500977e-5, 196.41, 200.51666876673698))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:47.649
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.731, 0.731, 0.731, 0.0029413485527038574, 6.260871887207032e-5, 202.66, 115.45873264968395))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:48.551
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6469999999999999, 0.6469999999999999, 0.6469999999999999, 0.0013896536827087403, 6.269931793212891e-5, 303.34, 4.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:49.474
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.973, 0.973, 0.973, 0.0036075687408447265, 1.2419223785400391e-5, 221.82, 594.2000210881233))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:51.532
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6029999999999999, 0.6029999999999999, 0.6029999999999999, 0.0022484683990478516, 0.000432741641998291, 249.0, 2313.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:52.358
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3890000000000001, 0.3890000000000001, 0.3890000000000001, 0.0013894438743591309, 0.00038570165634155273, 240.82, 3636.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T06:16:53.814
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6030000000000002, 0.6030000000000002, NaN, 0.0013231658935546876, 1.4030933380126953e-5, 245.88, 2338.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.018567639257294,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9883928571428573,"seconds":0.002351934090256691,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8359375,"distances_sum":690.9272043555975}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.018567639257294,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9883928571428573,"seconds":0.002351934090256691,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8359375,"distances_sum":690.9272043555975}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.960699365619681,"state":{"restarts":8},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":1.5325844287872314e-5,"exhaustive_search_seconds":5.116686224937439e-6,"evaluations":50.4921875,"distances_sum":291.46602718159556}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.960699365619681,"state":{"restarts":8},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":1.5325844287872314e-5,"exhaustive_search_seconds":5.116686224937439e-6,"evaluations":50.4921875,"distances_sum":291.46602718159556}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444433, conf: {"restarts":13}, perf: {"precision":0.8663194444444433,"recall":0.8663194444444433,"f1":0.8663194444444433,"seconds":4.017725586891174e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":144.359375,"distances_sum":124.49295742297545}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444432, conf: {"restarts":9}, perf: {"precision":0.8585069444444432,"recall":0.8585069444444432,"f1":0.8585069444444432,"seconds":3.531947731971741e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":121.625,"distances_sum":124.90553884813562}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999987, conf: {"restarts":17}, perf: {"precision":0.8749999999999987,"recall":0.8749999999999987,"f1":0.8749999999999987,"seconds":4.8683956265449524e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":169.375,"distances_sum":123.96291953185573}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999987,"state":{"restarts":17},"perf":{"precision":0.8749999999999987,"recall":0.8749999999999987,"f1":0.8749999999999987,"seconds":4.8683956265449524e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":169.375,"distances_sum":123.96291953185573}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8810763888888875, conf: {"restarts":24}, perf: {"precision":0.8810763888888875,"recall":0.8810763888888875,"f1":0.8810763888888875,"seconds":5.880184471607208e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":206.9765625,"distances_sum":123.18364169308916}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.881944444444443, conf: {"restarts":22}, perf: {"precision":0.881944444444443,"recall":0.881944444444443,"f1":0.881944444444443,"seconds":5.744770169258118e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":198.125,"distances_sum":123.8150240057148}, best_list's length: 11, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.881944444444443,"state":{"restarts":22},"perf":{"precision":0.881944444444443,"recall":0.881944444444443,"f1":0.881944444444443,"seconds":5.744770169258118e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":198.125,"distances_sum":123.8150240057148}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.881944444444443,"state":{"restarts":22},"perf":{"precision":0.881944444444443,"recall":0.881944444444443,"f1":0.881944444444443,"seconds":5.744770169258118e-5,"exhaustive_search_seconds":1.909397542476654e-5,"evaluations":198.125,"distances_sum":123.8150240057148}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888876, conf: {"restarts":16}, perf: {"precision":0.8576388888888876,"recall":0.8576388888888876,"f1":0.8576388888888876,"seconds":7.594563066959381e-5,"exhaustive_search_seconds":0.00019135139882564545,"evaluations":264.109375,"distances_sum":55.639097495470196}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444433, conf: {"restarts":30}, perf: {"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00011742673814296722,"exhaustive_search_seconds":0.00019135139882564545,"evaluations":378.0703125,"distances_sum":55.760808635968715}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333319, conf: {"restarts":27}, perf: {"precision":0.8489583333333319,"recall":0.8489583333333319,"f1":0.8489583333333319,"seconds":0.00011243484914302826,"exhaustive_search_seconds":0.00019135139882564545,"evaluations":354.21875,"distances_sum":55.89041311247274}, best_list's length: 11, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888876,"state":{"restarts":16},"perf":{"precision":0.8576388888888876,"recall":0.8576388888888876,"f1":0.8576388888888876,"seconds":7.594563066959381e-5,"exhaustive_search_seconds":0.00019135139882564545,"evaluations":264.109375,"distances_sum":55.639097495470196}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8576388888888876,"state":{"restarts":16},"perf":{"precision":0.8576388888888876,"recall":0.8576388888888876,"f1":0.8576388888888876,"seconds":7.594563066959381e-5,"exhaustive_search_seconds":0.00019135139882564545,"evaluations":264.109375,"distances_sum":55.639097495470196}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(16), SatNeighborhood(32), 2020-10-10T06:17:00.278
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8285, 0.019422524f0), Item(4479, 0.02644037f0), Item(8387, 0.03421953f0), Item(1312, 0.03447522f0), Item(348, 0.03482457f0), Item(8504, 0.0404195f0), Item(5447, 0.0424822f0), Item(3473, 0.0425034f0), Item(5766, 0.050478186f0), Item(7988, 0.05453334f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0406504065040654, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9744448260073261,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6484375,"distances_sum":673.2723973691463}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0276538804638715, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9814019314019314,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":680.8519540131092}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0406504065040654,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9744448260073261,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6484375,"distances_sum":673.2723973691463}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.074626865671642, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9534111721611725,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.375,"distances_sum":641.3462094664574}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.074626865671642,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9534111721611725,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.375,"distances_sum":641.3462094664574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.074626865671642,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9534111721611725,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.375,"distances_sum":641.3462094664574}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.074626865671642,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9534111721611725,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.375,"distances_sum":641.3462094664574}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.8470006740058413, conf: {"bsize":4}, perf: {"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.0930001735687256e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":34.7734375,"distances_sum":276.20369361341}, best_list's length: 2, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8470006740058413,"state":{"bsize":4},"perf":{"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.0930001735687256e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":34.7734375,"distances_sum":276.20369361341}}, beam: 2, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8470006740058413,"state":{"bsize":4},"perf":{"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.0930001735687256e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":34.7734375,"distances_sum":276.20369361341}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.8470006740058413,"state":{"bsize":4},"perf":{"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":1.0930001735687256e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":34.7734375,"distances_sum":276.20369361341}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.535885167464116, conf: {"bsize":3}, perf: {"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.8173828721046448e-5,"exhaustive_search_seconds":1.8805265426635742e-5,"evaluations":60.4140625,"distances_sum":121.98637819383293}, best_list's length: 5, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.535885167464116,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.8173828721046448e-5,"exhaustive_search_seconds":1.8805265426635742e-5,"evaluations":60.4140625,"distances_sum":121.98637819383293}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.535885167464116,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.8173828721046448e-5,"exhaustive_search_seconds":1.8805265426635742e-5,"evaluations":60.4140625,"distances_sum":121.98637819383293}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.535885167464116,"state":{"bsize":3},"perf":{"precision":0.9782986111111106,"recall":0.9782986111111106,"f1":0.9782986111111106,"seconds":1.8173828721046448e-5,"exhaustive_search_seconds":1.8805265426635742e-5,"evaluations":60.4140625,"distances_sum":121.98637819383293}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.46306903828761,"state":{"bsize":3},"perf":{"precision":0.9713541666666661,"recall":0.9713541666666661,"f1":0.9713541666666661,"seconds":2.3076310753822327e-5,"exhaustive_search_seconds":0.000159556046128273,"evaluations":103.65625,"distances_sum":54.15232329349965}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.46306903828761,"state":{"bsize":3},"perf":{"precision":0.9713541666666661,"recall":0.9713541666666661,"f1":0.9713541666666661,"seconds":2.3076310753822327e-5,"exhaustive_search_seconds":0.000159556046128273,"evaluations":103.65625,"distances_sum":54.15232329349965}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(3), SatNeighborhood(32), 2020-10-10T06:17:03.635
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9786, 0.026100291f0), Item(7969, 0.03711189f0), Item(7599, 0.048486423f0), Item(5356, 0.049638994f0), Item(6726, 0.050110575f0), Item(4885, 0.053298157f0), Item(5846, 0.054546107f0), Item(4910, 0.057218935f0), Item(9919, 0.058395673f0), Item(4872, 0.059796497f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
