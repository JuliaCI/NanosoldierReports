Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_eiSg8X/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_eiSg8X/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(3, 0.039761424f0), Item(28, 0.040380716f0), Item(10, 0.048220515f0), Item(16, 0.10598624f0)])
Vsorted = Item[Item(3, 0.039761424f0), Item(28, 0.040380716f0), Item(10, 0.048220515f0), Item(16, 0.10598624f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004229935010274252, 0.004220032691955566, 301.0, 50.81586225703359))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032245953877766925, 0.003495597839355469, 301.0, 73.47496902942657))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0041557232538859045, 0.003931204477945964, 301.0, 41.61169946193695))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039887507756551106, 0.0033917983373006185, 301.0, 9.487210449937265))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003470913569132487, 0.004944229125976562, 301.0, 46.14539415203035))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.434022267659505e-5, 2.1568934122721355e-5, 301.0, 181.5122608616948))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.0922889709472654e-5, 0.00878469944000244, 300.0, 28.29149602446705)
p = PerformanceResult(1.0, 1.0, 1.0, 3.499984741210938e-5, 2.0202000935872396e-5, 300.0, 28.29149602446705)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0036864201227823894, 0.0048380692799886065, 300.0, 1.5973900032327037)
p = PerformanceResult(1.0, 1.0, 1.0, 2.7031368679470487e-5, 1.4026959737141928e-5, 300.0, 1.5973900032327037)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.0922889709472654e-5, 0.00878469944000244, 300.0, 28.29149602446705), PerformanceResult(1.0, 1.0, 1.0, 3.499984741210938e-5, 2.0202000935872396e-5, 300.0, 28.29149602446705), PerformanceResult(1.0, 1.0, 1.0, 0.0036864201227823894, 0.0048380692799886065, 300.0, 1.5973900032327037), PerformanceResult(1.0, 1.0, 1.0, 2.7031368679470487e-5, 1.4026959737141928e-5, 300.0, 1.5973900032327037))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 122.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007763433456420899, 0.0034072001775105796, 349.3, 28677.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007844479878743489, 0.002366367975870768, 302.3666666666667, 6968.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.781781514485677e-5, 9.059906005859375e-6, 92.1, 50.81701150909066))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8413861592610677e-5, 9.473164876302084e-6, 84.43333333333334, 73.48945152759552))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5028317769368489e-5, 1.0832150777180989e-5, 87.0, 41.61306810379028))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.0835469563802086e-5, 7.699330647786458e-5, 91.7, 46.1565074082464))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8133333333333334, 0.8133333333333334, 0.8133333333333334, 1.6760826110839843e-5, 2.640088399251302e-5, 70.73333333333333, 191.1949536278844))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-09T06:47:21.928
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9150000000000003, 0.9150000000000003, 0.9150000000000003, 1.3990402221679687e-5, 1.6329288482666014e-5, 153.12, 51.30677139130421))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4140605926513672e-5, 1.2791156768798828e-5, 156.66, 0.0))
*** advance 1 from 1000; 2020-10-09T06:47:22.495
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.89, 0.89, 0.89, 1.4488697052001954e-5, 1.5709400177001953e-5, 152.71, 77.10248191468418))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.40380859375e-5, 1.1661052703857421e-5, 156.02, 0.0))
*** advance 1 from 1000; 2020-10-09T06:47:23.094
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9100000000000003, 0.9030000000000001, 0.9046153846153848, 1.5151500701904296e-5, 2.0191669464111328e-5, 153.1, 41.52522954903543))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4677047729492188e-5, 1.7578601837158204e-5, 156.76, 0.0))
*** advance 1 from 1000; 2020-10-09T06:47:23.616
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9146666666666668, 0.9120000000000001, 0.9130000000000003, 4.1878223419189454e-5, 0.00022778034210205078, 153.44, 45.79159782640636))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.242181777954102e-5, 0.00024309158325195313, 157.02, 0.0))
*** advance 1 from 1000; 2020-10-09T06:47:23.977
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9660000000000004, 0.9660000000000004, 0.9660000000000004, 5.5861473083496096e-5, 8.800983428955078e-5, 167.59, 191.70799781475216))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.5792121887207033e-5, 7.535934448242187e-5, 172.57, 0.0))
*** advance 1 from 1000; 2020-10-09T06:47:24.607
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9150000000000003, 0.9150000000000003, 0.9150000000000003, 1.9974708557128907e-5, 4.6410560607910155e-5, 153.12, 51.316394897410646))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9001960754394532e-5, 4.710197448730469e-5, 156.66, 0.01332945897593163))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:26.104
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7689999999999999, 0.7689999999999999, 0.7689999999999999, 0.0013952851295471191, 6.57510757446289e-5, 203.78, 188.53333553671837))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:26.905
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7759999999999998, 0.7759999999999998, 0.7759999999999998, 0.0016715288162231444, 6.458044052124024e-5, 211.11, 107.06031950563192))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:27.676
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6819999999999996, 0.6819999999999996, 0.6819999999999996, 0.0012531542778015136, 6.066083908081055e-5, 260.83, 1.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:28.480
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9490000000000002, 0.9490000000000002, 0.9490000000000002, 0.0012574052810668944, 1.2750625610351562e-5, 223.15, 602.2000203430653))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:29.451
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6030000000000001, 0.6030000000000001, 0.6030000000000001, 0.0014490771293640136, 0.00021142005920410156, 252.51, 2342.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:30.219
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37300000000000016, 0.37300000000000016, NaN, 0.001412334442138672, 0.00034970998764038085, 245.75, 3704.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-09T06:47:30.965
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6230000000000002, 0.6230000000000002, NaN, 0.0014888334274291992, 1.728057861328125e-5, 244.96, 2340.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.055912007332722, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670215201465207,"seconds":3.0174851417541504e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.5234375,"distances_sum":635.9942781925201}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0837253057384757, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508959790209794,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.3046875,"distances_sum":614.1247447729111}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9508959790209794,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.3046875,"distances_sum":614.1247447729111}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9508959790209794,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.3046875,"distances_sum":614.1247447729111}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9508959790209794,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.3046875,"distances_sum":614.1247447729111}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9399877526025717, conf: {"restarts":9}, perf: {"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":1.5204772353172302e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":51.03125,"distances_sum":285.1140130087733}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7062070822674027, conf: {"restarts":12}, perf: {"precision":0.9140624999999991,"recall":0.9140624999999991,"f1":0.9140624999999991,"seconds":1.7795711755752563e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":58.0234375,"distances_sum":285.2668694034219}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.746176105828855, conf: {"restarts":11}, perf: {"precision":0.9201388888888877,"recall":0.9201388888888877,"f1":0.9201388888888877,"seconds":1.6767531633377075e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":56.6953125,"distances_sum":284.1694446578622}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9399877526025717,"state":{"restarts":9},"perf":{"precision":0.9079861111111099,"recall":0.9079861111111099,"f1":0.9079861111111099,"seconds":1.5204772353172302e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":51.03125,"distances_sum":285.1140130087733}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.092470277410832, conf: {"restarts":6}, perf: {"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":4.557520151138306e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":47.3125,"distances_sum":285.712699085474}, best_list's length: 9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9769110764430575, conf: {"restarts":8}, perf: {"precision":0.9010416666666656,"recall":0.9010416666666656,"f1":0.9010416666666656,"seconds":1.4308840036392212e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":50.078125,"distances_sum":284.70553947240114}, best_list's length: 10, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.092470277410832,"state":{"restarts":6},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":4.557520151138306e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":47.3125,"distances_sum":285.712699085474}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.092470277410832,"state":{"restarts":6},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":4.557520151138306e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":47.3125,"distances_sum":285.712699085474}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.092470277410832,"state":{"restarts":6},"perf":{"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":4.557520151138306e-5,"exhaustive_search_seconds":4.757195711135864e-6,"evaluations":47.3125,"distances_sum":285.712699085474}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444432,"state":{"restarts":6},"perf":{"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":2.7079135179519653e-5,"exhaustive_search_seconds":1.996941864490509e-5,"evaluations":103.7890625,"distances_sum":124.2952279318124}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8663194444444432,"state":{"restarts":6},"perf":{"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":2.7079135179519653e-5,"exhaustive_search_seconds":1.996941864490509e-5,"evaluations":103.7890625,"distances_sum":124.2952279318124}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666656, conf: {"restarts":19}, perf: {"precision":0.8385416666666656,"recall":0.8385416666666656,"f1":0.8385416666666656,"seconds":8.414126932621002e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":282.4765625,"distances_sum":56.180574443540536}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.834201388888888, conf: {"restarts":20}, perf: {"precision":0.834201388888888,"recall":0.834201388888888,"f1":0.834201388888888,"seconds":8.022785186767578e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":285.1796875,"distances_sum":56.27615122532006}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8307291666666656, conf: {"restarts":1}, perf: {"precision":0.8307291666666656,"recall":0.8307291666666656,"f1":0.8307291666666656,"seconds":4.149042069911957e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":129.6796875,"distances_sum":56.40011377108749}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8368055555555548, conf: {"restarts":4}, perf: {"precision":0.8368055555555548,"recall":0.8368055555555548,"f1":0.8368055555555548,"seconds":4.885159432888031e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":154.875,"distances_sum":56.45190745999571}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666657, conf: {"restarts":14}, perf: {"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":7.351860404014587e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":243.6640625,"distances_sum":56.04487977398094}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555545, conf: {"restarts":7}, perf: {"precision":0.8446180555555545,"recall":0.8446180555555545,"f1":0.8446180555555545,"seconds":5.667097866535187e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":181.8828125,"distances_sum":56.080903584486805}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.830729166666666, conf: {"restarts":9}, perf: {"precision":0.830729166666666,"recall":0.830729166666666,"f1":null,"seconds":6.515532732009888e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":201.34375,"distances_sum":56.63814345782157}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444435, conf: {"restarts":12}, perf: {"precision":0.8350694444444435,"recall":0.8350694444444435,"f1":null,"seconds":7.384456694126129e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":228.5546875,"distances_sum":56.72509867686313}, best_list's length: 9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8333333333333323, conf: {"restarts":18}, perf: {"precision":0.8333333333333323,"recall":0.8333333333333323,"f1":0.8333333333333323,"seconds":8.176267147064209e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":278.953125,"distances_sum":56.31418741529342}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8402777777777768, conf: {"restarts":8}, perf: {"precision":0.8402777777777768,"recall":0.8402777777777768,"f1":0.8402777777777768,"seconds":5.914829671382904e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":189.578125,"distances_sum":56.28772354719695}, best_list's length: 11, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666657,"state":{"restarts":14},"perf":{"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":7.351860404014587e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":243.6640625,"distances_sum":56.04487977398094}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666657,"state":{"restarts":14},"perf":{"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":7.351860404014587e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":243.6640625,"distances_sum":56.04487977398094}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8541666666666657,"state":{"restarts":14},"perf":{"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":0.8541666666666657,"seconds":7.351860404014587e-5,"exhaustive_search_seconds":0.00020119547843933105,"evaluations":243.6640625,"distances_sum":56.04487977398094}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(14), SatNeighborhood(32), 2020-10-09T06:47:36.927
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9105, 0.025501274f0), Item(4233, 0.031903207f0), Item(3934, 0.034340333f0), Item(9968, 0.03849345f0), Item(7727, 0.041283797f0), Item(7986, 0.042119794f0), Item(821, 0.045130532f0), Item(1546, 0.045798685f0), Item(5108, 0.05522929f0), Item(3234, 0.05722482f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.052054794520548, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9694768772893778,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5546875,"distances_sum":643.0713438987732}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0539798719121682, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9662061896436901,"seconds":7.597729563713074e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5390625,"distances_sum":644.9803054332733}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0539798719121682,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9662061896436901,"seconds":7.597729563713074e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5390625,"distances_sum":644.9803054332733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0539798719121682,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9662061896436901,"seconds":7.597729563713074e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5390625,"distances_sum":644.9803054332733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0539798719121682,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9662061896436901,"seconds":7.597729563713074e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.5390625,"distances_sum":644.9803054332733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8669683257918552,"state":{"bsize":4},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.1378899216651917e-5,"exhaustive_search_seconds":4.827976226806641e-6,"evaluations":34.53125,"distances_sum":276.45142490044236}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.8669683257918552,"state":{"bsize":4},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.1378899216651917e-5,"exhaustive_search_seconds":4.827976226806641e-6,"evaluations":34.53125,"distances_sum":276.45142490044236}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.258359821996187,"state":{"bsize":4},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.936592161655426e-5,"exhaustive_search_seconds":1.9663944840431213e-5,"evaluations":61.4453125,"distances_sum":120.55349933728576}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.258359821996187,"state":{"bsize":4},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":1.936592161655426e-5,"exhaustive_search_seconds":1.9663944840431213e-5,"evaluations":61.4453125,"distances_sum":120.55349933728576}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.95303805920321,"state":{"bsize":4},"perf":{"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":2.907589077949524e-5,"exhaustive_search_seconds":0.00016111694276332855,"evaluations":105.3046875,"distances_sum":55.10857532406226}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":95.95303805920321,"state":{"bsize":4},"perf":{"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":2.907589077949524e-5,"exhaustive_search_seconds":0.00016111694276332855,"evaluations":105.3046875,"distances_sum":55.10857532406226}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(4), SatNeighborhood(32), 2020-10-09T06:47:39.957
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1482, 0.033354886f0), Item(7696, 0.033743907f0), Item(3690, 0.03972866f0), Item(9424, 0.04373104f0), Item(7161, 0.05053056f0), Item(2060, 0.051182028f0), Item(9021, 0.05176955f0), Item(6331, 0.06460409f0), Item(1829, 0.0671883f0), Item(2134, 0.0746886f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
