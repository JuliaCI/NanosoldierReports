Julia Version 1.6.0-DEV.1164
Commit 189ec8fd43 (2020-10-09 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Compat ─────── v3.19.0
  Installed FillArrays ─── v0.9.6
  Installed ArrayLayouts ─ v0.4.8
  Installed BlockArrays ── v0.12.13
Updating `~/.julia/environments/v1.6/Project.toml`
  [8e7c35d0] + BlockArrays v0.12.13
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4c555306] + ArrayLayouts v0.4.8
  [8e7c35d0] + BlockArrays v0.12.13
  [34da2185] + Compat v3.19.0
  [1a297f60] + FillArrays v0.9.6
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing BlockArrays
Status `/tmp/jl_12R8p3/Project.toml`
  [4c555306] ArrayLayouts v0.4.8
  [8e7c35d0] BlockArrays v0.12.13
  [34da2185] Compat v3.19.0
  [1a297f60] FillArrays v0.9.6
  [6fe1bfb0] OffsetArrays v1.3.0
  [2a0f44e3] Base64
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_12R8p3/Manifest.toml`
  [4c555306] ArrayLayouts v0.4.8
  [8e7c35d0] BlockArrays v0.12.13
  [34da2185] Compat v3.19.0
  [1a297f60] FillArrays v0.9.6
  [6fe1bfb0] OffsetArrays v1.3.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
misc: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:234
  Expression: summary(b) == "3-blocked 6-element BlockedUnitRange{Array{$(Int),1}}"
   Evaluated: "3-blocked 6-element BlockedUnitRange{Vector{Int64}}" == "3-blocked 6-element BlockedUnitRange{Array{Int64,1}}"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:234
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:229
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:97
OneTo interface: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:252
  Expression: stringmime("text/plain", blockedrange([1, 2, 2])) == "3-blocked 5-element BlockedUnitRange{Array{Int64,1}}:\n 1\n ─\n 2\n 3\n ─\n 4\n 5"
   Evaluated: "3-blocked 5-element BlockedUnitRange{Vector{Int64}}:\n 1\n ─\n 2\n 3\n ─\n 4\n 5" == "3-blocked 5-element BlockedUnitRange{Array{Int64,1}}:\n 1\n ─\n 2\n 3\n ─\n 4\n 5"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:252
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:238
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockindices.jl:97
string: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:386
  Expression: String(take!(buf)) == "BlockBoundsError: attempt to access 2×2-blocked 4×5 BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}} at block index [3,2]"
   Evaluated: "BlockBoundsError: attempt to access 2×2-blocked 4×5 BlockMatrix{Float64, Matrix{Matrix{Float64}}, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}} at block index [3,2]" == "BlockBoundsError: attempt to access 2×2-blocked 4×5 BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}} at block index [3,2]"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:386
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:383
string: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:390
  Expression: String(take!(buf)) == "BlockBoundsError: attempt to access 2×2-blocked 4×5 PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}} at block index [3,2]"
   Evaluated: "BlockBoundsError: attempt to access 2×2-blocked 4×5 PseudoBlockMatrix{Float64, Matrix{Float64}, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}} at block index [3,2]" == "BlockBoundsError: attempt to access 2×2-blocked 4×5 PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}} at block index [3,2]"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:390
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrays.jl:383
Block-BlockRange blocks: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:164
  Expression: stringmime("text/plain", V) == "1×3 view(::BlockArray{$(Int),2,Array{Array{$(Int),2},2},Tuple{BlockedUnitRange{Array{$(Int),1}},BlockedUnitRange{Array{$(Int),1}}}}, BlockSlice(Block(1),1:1), BlockSlice(Block{1,$(Int)}[Block(1), Block(2)],1:1:3)) with eltype $(Int) with indices Base.OneTo(1)×1:1:3:\n 1  │  2  3"
   Evaluated: "1×3 view(::BlockMatrix{Int64, Matrix{Matrix{Int64}}, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}}, BlockSlice(Block(1),1:1), BlockSlice(Block{1, Int64}[Block(1), Block(2)],1:1:3)) with eltype Int64 with indices Base.OneTo(1)×1:1:3:\n 1  │  2  3" == "1×3 view(::BlockArray{Int64,2,Array{Array{Int64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, BlockSlice(Block(1),1:1), BlockSlice(Block{1,Int64}[Block(1), Block(2)],1:1:3)) with eltype Int64 with indices Base.OneTo(1)×1:1:3:\n 1  │  2  3"
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:164 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [3] macro expansion
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:158 [inlined]
 [4] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [5] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:4
Block-BlockRange blocks: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:165
  Expression: stringmime("text/plain", W) == "3×1 view(::BlockArray{$(Int),2,Array{Array{$(Int),2},2},Tuple{BlockedUnitRange{Array{$(Int),1}},BlockedUnitRange{Array{$(Int),1}}}}, BlockSlice(Block{1,$(Int)}[Block(1), Block(2)],1:1:3), BlockSlice(Block(1),1:1)) with eltype $(Int) with indices 1:1:3×Base.OneTo(1):\n 1\n ─\n 4\n 7"
   Evaluated: "3×1 view(::BlockMatrix{Int64, Matrix{Matrix{Int64}}, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}}, BlockSlice(Block{1, Int64}[Block(1), Block(2)],1:1:3), BlockSlice(Block(1),1:1)) with eltype Int64 with indices 1:1:3×Base.OneTo(1):\n 1\n ─\n 4\n 7" == "3×1 view(::BlockArray{Int64,2,Array{Array{Int64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, BlockSlice(Block{1,Int64}[Block(1), Block(2)],1:1:3), BlockSlice(Block(1),1:1)) with eltype Int64 with indices 1:1:3×Base.OneTo(1):\n 1\n ─\n 4\n 7"
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:165 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [3] macro expansion
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:158 [inlined]
 [4] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [5] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockviews.jl:4
square blocks: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:54
  Expression: stringmime("text/plain", UpperTriangular(A)) == "10×10 UpperTriangular{Complex{Float64},PseudoBlockArray{Complex{Float64},2,Array{Complex{Float64},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:10×1:1:10:\n 1.0+0.0im  │  11.0+0.0im  21.0+0.0im  │  31.0+0.0im  41.0+0.0im  51.0+0.0im  │  61.0+0.0im  71.0+0.0im  81.0+0.0im   91.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │  12.0+0.0im  22.0+0.0im  │  32.0+0.0im  42.0+0.0im  52.0+0.0im  │  62.0+0.0im  72.0+0.0im  82.0+0.0im   92.0+0.0im\n     ⋅      │       ⋅      23.0+0.0im  │  33.0+0.0im  43.0+0.0im  53.0+0.0im  │  63.0+0.0im  73.0+0.0im  83.0+0.0im   93.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │  34.0+0.0im  44.0+0.0im  54.0+0.0im  │  64.0+0.0im  74.0+0.0im  84.0+0.0im   94.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅      45.0+0.0im  55.0+0.0im  │  65.0+0.0im  75.0+0.0im  85.0+0.0im   95.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅      56.0+0.0im  │  66.0+0.0im  76.0+0.0im  86.0+0.0im   96.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │  67.0+0.0im  77.0+0.0im  87.0+0.0im   97.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅      78.0+0.0im  88.0+0.0im   98.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅      89.0+0.0im   99.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅           ⋅      100.0+0.0im"
   Evaluated: "10×10 UpperTriangular{ComplexF64, PseudoBlockMatrix{ComplexF64, Matrix{ComplexF64}, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}}} with indices 1:1:10×1:1:10:\n 1.0+0.0im  │  11.0+0.0im  21.0+0.0im  │  31.0+0.0im  41.0+0.0im  51.0+0.0im  │  61.0+0.0im  71.0+0.0im  81.0+0.0im   91.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │  12.0+0.0im  22.0+0.0im  │  32.0+0.0im  42.0+0.0im  52.0+0.0im  │  62.0+0.0im  72.0+0.0im  82.0+0.0im   92.0+0.0im\n     ⋅      │       ⋅      23.0+0.0im  │  33.0+0.0im  43.0+0.0im  53.0+0.0im  │  63.0+0.0im  73.0+0.0im  83.0+0.0im   93.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │  34.0+0.0im  44.0+0.0im  54.0+0.0im  │  64.0+0.0im  74.0+0.0im  84.0+0.0im   94.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅      45.0+0.0im  55.0+0.0im  │  65.0+0.0im  75.0+0.0im  85.0+0.0im   95.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅      56.0+0.0im  │  66.0+0.0im  76.0+0.0im  86.0+0.0im   96.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │  67.0+0.0im  77.0+0.0im  87.0+0.0im   97.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅      78.0+0.0im  88.0+0.0im   98.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅      89.0+0.0im   99.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅           ⋅      100.0+0.0im" == "10×10 UpperTriangular{Complex{Float64},PseudoBlockArray{Complex{Float64},2,Array{Complex{Float64},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:10×1:1:10:\n 1.0+0.0im  │  11.0+0.0im  21.0+0.0im  │  31.0+0.0im  41.0+0.0im  51.0+0.0im  │  61.0+0.0im  71.0+0.0im  81.0+0.0im   91.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │  12.0+0.0im  22.0+0.0im  │  32.0+0.0im  42.0+0.0im  52.0+0.0im  │  62.0+0.0im  72.0+0.0im  82.0+0.0im   92.0+0.0im\n     ⋅      │       ⋅      23.0+0.0im  │  33.0+0.0im  43.0+0.0im  53.0+0.0im  │  63.0+0.0im  73.0+0.0im  83.0+0.0im   93.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │  34.0+0.0im  44.0+0.0im  54.0+0.0im  │  64.0+0.0im  74.0+0.0im  84.0+0.0im   94.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅      45.0+0.0im  55.0+0.0im  │  65.0+0.0im  75.0+0.0im  85.0+0.0im   95.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅      56.0+0.0im  │  66.0+0.0im  76.0+0.0im  86.0+0.0im   96.0+0.0im\n ───────────┼──────────────────────────┼──────────────────────────────────────┼─────────────────────────────────────────────────\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │  67.0+0.0im  77.0+0.0im  87.0+0.0im   97.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅      78.0+0.0im  88.0+0.0im   98.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅      89.0+0.0im   99.0+0.0im\n     ⋅      │       ⋅           ⋅      │       ⋅           ⋅           ⋅      │       ⋅           ⋅           ⋅      100.0+0.0im"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:54
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:34
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [5] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:33
block Fill: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:140
  Expression: stringmime("text/plain", A) == "5-element Fill{Int64,1,Tuple{BlockedUnitRange{Array{Int64,1}}}} with indices 1:1:5: entries equal to 2"
   Evaluated: "5-element Fill{Int64, 1, Tuple{BlockedUnitRange{Vector{Int64}}}} with indices 1:1:5: entries equal to 2" == "5-element Fill{Int64,1,Tuple{BlockedUnitRange{Array{Int64,1}}}} with indices 1:1:5: entries equal to 2"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:140
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:123
block Fill: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:141
  Expression: stringmime("text/plain", B) == "3×3 Diagonal{Float64,Ones{Float64,1,Tuple{BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:3×1:1:3"
   Evaluated: "3×3 Diagonal{Float64, Ones{Float64, 1, Tuple{BlockedUnitRange{Vector{Int64}}}}} with indices 1:1:3×1:1:3" == "3×3 Diagonal{Float64,Ones{Float64,1,Tuple{BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:3×1:1:3"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:141
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:123
block Fill: Test Failed at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:142
  Expression: stringmime("text/plain", U) == "3×3 UpperTriangular{Float64,Ones{Float64,2,Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:3×1:1:3:\n 1.0  1.0  │  1.0\n ──────────┼─────\n  ⋅   1.0  │  1.0\n  ⋅    ⋅   │  1.0"
   Evaluated: "3×3 UpperTriangular{Float64, Ones{Float64, 2, Tuple{BlockedUnitRange{Vector{Int64}}, BlockedUnitRange{Vector{Int64}}}}} with indices 1:1:3×1:1:3:\n 1.0  1.0  │  1.0\n ──────────┼─────\n  ⋅   1.0  │  1.0\n  ⋅    ⋅   │  1.0" == "3×3 UpperTriangular{Float64,Ones{Float64,2,Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}} with indices 1:1:3×1:1:3:\n 1.0  1.0  │  1.0\n ──────────┼─────\n  ⋅   1.0  │  1.0\n  ⋅    ⋅   │  1.0"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:142
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
 [3] top-level scope
   @ ~/.julia/packages/BlockArrays/p9CDA/test/test_blockarrayinterface.jl:123
Test Summary:                                 | Pass  Fail  Broken  Total
BlockArrays.jl                                |  984    10       1    995
  Blocks                                      |   68                   68
  BlockedUnitRange                            |  110     2            112
    Block indexing                            |   29                   29
    firsts/lasts/lengths                      |    3                    3
    convert                                   |    7                    7
    findblock                                 |   40                   40
    BlockIndex indexing                       |    2                    2
    BlockRange indexing                       |    4                    4
    misc                                      |    3     1              4
    OneTo interface                           |   13     1             14
    BlockIndex type piracy (#108)             |    1                    1
    checkindex                                |    4                    4
    Slice                                     |    4                    4
  BlockSlice                                  |    2                    2
  sortedin                                    |    4                    4
  eachblock                                   |    3                    3
  block constructors                          |   78                   78
  block indexing                              |   11                   11
  misc block tests                            |   61                   61
  convert                                     |   19                   19
  string                                      |          2              2
  replstring                                  |    4                    4
  AbstractVector{Int} blocks                  |    3                    3
  Strided array interface                     |    2                    2
  lmul!/rmul!                                 |   16                   16
  copy                                        |   14                   14
  const block size                            |    2                    2
  mixed blocks #92                            |    4                    4
  reshape                                     |    9                    9
  *                                           |    3                    3
  Blockindex                                  |    6                    6
  Block Views                                 |  130     2            132
    block slice                               |   12                   12
    block view                                |   31                   31
    block view pointers                       |    8                    8
    block indx range of block range           |    6                    6
    subarray implements block interface       |   15                   15
    Block-BlockRange blocks                   |    2     2              4
    getindex with BlockRange                  |    4                    4
    non-allocation blocksize                  |   18                   18
    hasmatchingblocks                         |    6                    6
    sub_materialize cases                     |   28                   28
  blocks(::BlockVector)                       |    2                    2
  blocks(::BlockMatrix)                       |    1                    1
  blocks(::PseudoBlockVector)                 |    5                    5
  blocks(::PseudoBlockMatrix)                 |    8                    8
  blocks(::Vector)                            |    3                    3
  blocks(::Matrix)                            |    3                    3
  blocks(::Adjoint|Transpose)                 |    8                    8
  blocks(::SubArray)                          |    3                    3
  blocks(::SubArray)                          |    3                    3
  block range                                 |   40                   40
  block index range                           |    5                    5
  partially implemented block array           |    4                    4
  Array block interface                       |    6                    6
  Triangular/Symmetric/Hermitian block arrays |   30     1             31
    square blocks                             |   12     1             13
    rect blocks                               |   18                   18
  Adjoint/Transpose block arrays              |    8                    8
  Diagonal BlockArray                         |    4                    4
  non-standard block axes                     |    2                    2
  block Fill                                  |    6     3       1     10
  broadcast                                   |   59                   59
  Linear Algebra                              |  107                  107
  Khatri Rao Product (size)                   |    8                    8
  Khatri Rao Product (constant blocks)        |    6                    6
  Khatri Rao Product (wrong blocksize)        |    1                    1
  Khatri Rao Product (Matrix)                 |    1                    1
  foldl                                       |    2                    2
  reduce                                      |    2                    2
  blockappend!(::BlockVector, _)              |   56                   56
  blockpush!(::BlockVector, _)                |   12                   12
  blockpushfirst!(::BlockVector, _)           |   12                   12
  blockpop!(::BlockVector, _)                 |    3                    3
  blockpopfirst!(::BlockVector, _)            |    3                    3
  append!(::BlockVector, _)                   |   16                   16
  push!                                       |    1                    1
  pushfirst!                                  |    1                    1
  pop!                                        |    2                    2
  popfirst!                                   |    2                    2
ERROR: LoadError: Some tests did not pass: 984 passed, 10 failed, 0 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/test/runtests.jl:3
ERROR: Package BlockArrays errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
