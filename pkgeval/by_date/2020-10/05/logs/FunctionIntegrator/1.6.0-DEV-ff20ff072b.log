Julia Version 1.6.0-DEV.1130
Commit ff20ff072b (2020-10-05 16:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_IBuI60/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_IBuI60/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.246164 seconds (379.95 k allocations: 15.446 MiB, 6.86% gc time, 93.01% compilation time)
Running: chebyshev_quadrature with k=1
  1.364266 seconds (2.20 M allocations: 126.772 MiB, 4.52% gc time, 97.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.194394 seconds (409.38 k allocations: 23.569 MiB, 83.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.253531 seconds (473.74 k allocations: 26.611 MiB, 6.99% gc time, 88.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.229908 seconds (418.56 k allocations: 23.269 MiB, 5.88% gc time, 90.99% compilation time)
Running: jacobi_quadrature with α=β=1
 31.121060 seconds (36.42 M allocations: 3.001 GiB, 10.15% gc time, 79.63% compilation time)
Running: laguerre_quadrature with k=1
  2.924224 seconds (3.17 M allocations: 177.059 MiB, 7.10% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.186870 seconds (206.24 k allocations: 11.842 MiB, 14.86% gc time, 99.12% compilation time)
Running: lobatto_quadrature
  0.252894 seconds (329.62 k allocations: 19.910 MiB, 98.84% compilation time)
Running: radau_quadrature
  0.699905 seconds (447.53 k allocations: 27.323 MiB, 2.93% gc time, 98.82% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 47.778949 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.093646 seconds (172.46 k allocations: 3.827 MiB, 24.26% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.923322 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.05% compilation time)
Running: rombergs_method
  1.830836 seconds (722.93 k allocations: 41.723 MiB, 8.10% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.032995 seconds (45.77 k allocations: 2.043 MiB, 94.61% compilation time)
Running: simpsons38_rule
  0.078014 seconds (108.54 k allocations: 5.758 MiB, 97.72% compilation time)
Running: trapezoidal_rule
  0.222001 seconds (1.51 M allocations: 25.678 MiB, 41.08% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.083480 seconds (30.99 k allocations: 1.865 MiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.388447 seconds (290.42 k allocations: 15.362 MiB, 99.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.134540 seconds (93.80 k allocations: 2.675 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.144894 seconds (82.06 k allocations: 2.476 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.138376 seconds (64.67 k allocations: 2.122 MiB, 98.78% compilation time)
Running: jacobi_quadrature with α=β=1
  2.741684 seconds (503.90 k allocations: 161.812 MiB, 18.67% gc time, 25.32% compilation time)
Running: legendre_quadrature
  0.145518 seconds (41.29 k allocations: 2.382 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.016671 seconds (15.68 k allocations: 1001.825 KiB, 99.04% compilation time)
Running: radau_quadrature
  0.016890 seconds (15.79 k allocations: 1009.040 KiB, 99.12% compilation time)
Running: rectangle_rule_left
 13.124984 seconds (471.41 M allocations: 7.025 GiB, 4.10% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.478942 seconds (476.96 M allocations: 7.107 GiB, 3.62% gc time)
Running: rombergs_method
  0.278101 seconds (326.47 k allocations: 18.530 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000015 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.054473 seconds (18.92 k allocations: 1.147 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.047696 seconds (17.41 k allocations: 1.054 MiB, 99.82% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023317 seconds (1.99 k allocations: 53.594 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.101988 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.097337 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.096897 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.101167 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: jacobi_quadrature with α=β=1
  0.317542 seconds (363.66 k allocations: 18.977 MiB, 8.57% gc time, 99.37% compilation time)
Running: legendre_quadrature
  0.072443 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000080 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000037 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000397 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000233 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000325 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.073622 seconds (1.04 k allocations: 56.531 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000025 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021285 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.020961 seconds (44.33 k allocations: 704.859 KiB, 95.62% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.049001 seconds (72.31 k allocations: 4.215 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.151368 seconds (230.61 k allocations: 12.965 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.235136 seconds (283.17 k allocations: 15.881 MiB, 10.08% gc time, 98.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.153467 seconds (234.76 k allocations: 13.149 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.139327 seconds (234.76 k allocations: 13.068 MiB, 98.83% compilation time)
Running: jacobi_quadrature with α=β=1
  2.185846 seconds (446.74 k allocations: 163.188 MiB, 8.88% gc time, 21.16% compilation time)
Running: legendre_quadrature
  0.137145 seconds (185.44 k allocations: 10.708 MiB, 98.80% compilation time)
Running: lobatto_quadrature
  0.139886 seconds (196.62 k allocations: 11.416 MiB, 98.67% compilation time)
Running: radau_quadrature
  0.144332 seconds (196.62 k allocations: 11.414 MiB, 10.48% gc time, 98.72% compilation time)
Running: rectangle_rule_left
  0.658595 seconds (18.82 k allocations: 1.147 MiB, 6.67% compilation time)
Running: rectangle_rule_midpoint
  0.014454 seconds (24.67 k allocations: 1.555 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.579775 seconds (17.39 k allocations: 1.065 MiB, 2.95% compilation time)
Running: rombergs_method
  0.240831 seconds (134.27 k allocations: 7.759 MiB, 98.70% compilation time)
Running: simpsons_rule
  0.029094 seconds (27.54 k allocations: 1.729 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.031921 seconds (42.37 k allocations: 2.678 MiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.022032 seconds (44.10 k allocations: 1.772 MiB, 97.30% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031770 seconds (99.53 k allocations: 2.979 MiB, 94.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.158175 seconds (237.20 k allocations: 13.058 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.186349 seconds (290.20 k allocations: 15.871 MiB, 8.66% gc time, 98.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.160623 seconds (241.33 k allocations: 13.117 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.178185 seconds (241.34 k allocations: 13.122 MiB, 99.05% compilation time)
Running: hermite_quadrature with k=2
 12.238165 seconds (20.10 M allocations: 1.056 GiB, 8.82% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.555409 seconds (455.91 k allocations: 49.406 MiB, 44.01% gc time, 50.48% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.428617 seconds (276.26 k allocations: 15.328 MiB, 57.10% gc time, 99.23% compilation time)
Running: legendre_quadrature
  0.138158 seconds (191.98 k allocations: 11.043 MiB, 98.31% compilation time)
Running: lobatto_quadrature
  0.205107 seconds (217.28 k allocations: 37.185 MiB, 7.20% gc time, 87.86% compilation time)
Running: radau_quadrature
  0.178612 seconds (213.86 k allocations: 29.846 MiB, 84.49% compilation time)
Running: rectangle_rule_left
  0.020976 seconds (21.73 k allocations: 1.293 MiB, 99.31% compilation time)
Running: rectangle_rule_midpoint
  0.025996 seconds (26.47 k allocations: 1.642 MiB, 99.20% compilation time)
Running: rectangle_rule_right
  0.121604 seconds (18.50 k allocations: 1.117 MiB, 15.09% gc time, 99.88% compilation time)
Running: rombergs_method
  0.126336 seconds (136.74 k allocations: 7.808 MiB, 98.28% compilation time)
Running: simpsons_rule
  0.036155 seconds (39.38 k allocations: 2.061 MiB, 99.04% compilation time)
Running: simpsons38_rule
  0.026676 seconds (57.34 k allocations: 3.063 MiB, 98.78% compilation time)
Running: trapezoidal_rule
  0.023395 seconds (30.13 k allocations: 1.697 MiB, 98.92% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.072186 seconds (59.92 k allocations: 2.280 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=1
  0.162733 seconds (232.72 k allocations: 12.824 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.191376 seconds (285.38 k allocations: 15.643 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.180921 seconds (236.87 k allocations: 12.928 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.217896 seconds (236.87 k allocations: 12.929 MiB, 99.01% compilation time)
Running: hermite_quadrature with k=2
  0.136669 seconds (170.78 k allocations: 9.790 MiB, 98.33% compilation time)
Running: jacobi_quadrature with α=β=1
  6.086130 seconds (449.18 k allocations: 1.175 GiB, 21.66% gc time, 4.68% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.152263 seconds (271.55 k allocations: 15.063 MiB, 9.74% gc time, 98.03% compilation time)
Running: legendre_quadrature
  0.154929 seconds (187.55 k allocations: 10.817 MiB, 98.60% compilation time)
Running: lobatto_quadrature
  0.164641 seconds (208.03 k allocations: 22.913 MiB, 91.15% compilation time)
Running: radau_quadrature
  0.209660 seconds (207.19 k allocations: 20.846 MiB, 7.33% gc time, 67.90% compilation time)
Running: rectangle_rule_left
  0.019640 seconds (19.52 k allocations: 1.188 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.019866 seconds (25.36 k allocations: 1.591 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.015762 seconds (17.36 k allocations: 1.062 MiB, 99.33% compilation time)
Running: rombergs_method
  0.096394 seconds (132.58 k allocations: 7.622 MiB, 98.07% compilation time)
Running: simpsons_rule
  0.079536 seconds (31.90 k allocations: 1.853 MiB, 87.49% compilation time)
Running: simpsons38_rule
  0.025939 seconds (48.16 k allocations: 2.821 MiB, 98.98% compilation time)
Running: trapezoidal_rule
  0.019593 seconds (25.05 k allocations: 1.535 MiB, 98.94% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025663 seconds (30.87 k allocations: 1.875 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.218596 seconds (231.10 k allocations: 13.042 MiB, 8.09% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.222085 seconds (283.67 k allocations: 15.986 MiB, 98.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.157673 seconds (235.25 k allocations: 13.146 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.216837 seconds (235.25 k allocations: 12.975 MiB, 98.81% compilation time)
Running: jacobi_quadrature with α=β=1
  1.916398 seconds (447.28 k allocations: 194.241 MiB, 10.87% gc time, 17.92% compilation time)
Running: legendre_quadrature
  0.182862 seconds (185.93 k allocations: 10.745 MiB, 98.80% compilation time)
Running: lobatto_quadrature
  0.155368 seconds (197.11 k allocations: 11.441 MiB, 98.44% compilation time)
Running: radau_quadrature
  0.244470 seconds (197.11 k allocations: 11.440 MiB, 5.86% gc time, 99.01% compilation time)
Running: rectangle_rule_left
  0.361157 seconds (19.34 k allocations: 1.173 MiB, 13.84% compilation time)
Running: rectangle_rule_midpoint
  0.083111 seconds (25.01 k allocations: 1.573 MiB, 99.83% compilation time)
Running: rectangle_rule_right
  0.249666 seconds (17.73 k allocations: 1.081 MiB, 44.43% compilation time)
Running: rombergs_method
  0.278845 seconds (145.02 k allocations: 8.483 MiB, 98.85% compilation time)
Running: simpsons_rule
  0.030101 seconds (28.23 k allocations: 1.758 MiB, 99.36% compilation time)
Running: simpsons38_rule
  0.024979 seconds (43.08 k allocations: 2.708 MiB, 99.27% compilation time)
Running: trapezoidal_rule
  0.027155 seconds (45.03 k allocations: 1.805 MiB, 97.60% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025162 seconds (31.64 k allocations: 1.826 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.205405 seconds (231.69 k allocations: 12.988 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.176744 seconds (284.30 k allocations: 15.907 MiB, 7.75% gc time, 97.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.158734 seconds (235.84 k allocations: 13.067 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.181833 seconds (235.84 k allocations: 13.142 MiB, 98.54% compilation time)
Running: jacobi_quadrature with α=β=1
  2.137866 seconds (447.99 k allocations: 148.917 MiB, 3.67% gc time, 17.57% compilation time)
Running: legendre_quadrature
  0.113249 seconds (186.53 k allocations: 10.812 MiB, 97.98% compilation time)
Running: lobatto_quadrature
  0.199581 seconds (197.71 k allocations: 11.461 MiB, 98.80% compilation time)
Running: radau_quadrature
  0.196776 seconds (197.71 k allocations: 11.454 MiB, 15.79% gc time, 98.79% compilation time)
Running: rectangle_rule_left
  0.711344 seconds (19.59 k allocations: 1.186 MiB, 3.45% compilation time)
Running: rectangle_rule_midpoint
  0.018832 seconds (25.01 k allocations: 1.574 MiB, 99.07% compilation time)
Running: rectangle_rule_right
  0.681362 seconds (17.69 k allocations: 1.078 MiB, 3.20% compilation time)
Running: rombergs_method
  0.096690 seconds (135.49 k allocations: 7.815 MiB, 96.46% compilation time)
Running: simpsons_rule
  0.053684 seconds (28.93 k allocations: 1.785 MiB, 99.67% compilation time)
Running: simpsons38_rule
  0.028475 seconds (43.78 k allocations: 2.734 MiB, 99.32% compilation time)
Running: trapezoidal_rule
  0.024218 seconds (57.27 k allocations: 2.006 MiB, 96.13% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.107594 seconds (146.69 k allocations: 8.788 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.121999 seconds (69.93 k allocations: 2.205 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.132243 seconds (105.09 k allocations: 2.868 MiB, 97.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.163204 seconds (92.57 k allocations: 2.654 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.153700 seconds (72.10 k allocations: 2.248 MiB, 98.41% compilation time)
Running: jacobi_quadrature with α=β=1
  2.299216 seconds (480.21 k allocations: 167.764 MiB, 14.00% gc time, 24.15% compilation time)
Running: legendre_quadrature
  0.119398 seconds (18.73 k allocations: 1.094 MiB, 81.03% compilation time)
Running: lobatto_quadrature
  0.000100 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000062 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.988311 seconds (590.00 M allocations: 8.792 GiB, 5.84% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.894282 seconds (592.75 M allocations: 8.833 GiB, 5.49% gc time)
Running: rombergs_method
  0.120131 seconds (20.51 k allocations: 1.165 MiB, 99.67% compilation time)
Running: simpsons_rule
  0.000018 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027202 seconds (463 allocations: 22.578 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.021794 seconds (179 allocations: 8.766 KiB, 99.61% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.016107 seconds (629.32 M allocations: 9.387 GiB, 4.11% gc time, 0.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.368477 seconds (414.13 k allocations: 22.966 MiB, 3.92% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=2
 18.029021 seconds (468.78 k allocations: 4.040 GiB, 2.65% gc time, 2.10% compilation time)
Running: chebyshev_quadrature with k=3
  8.192893 seconds (249.12 k allocations: 1.642 GiB, 3.72% gc time, 1.96% compilation time)
Running: chebyshev_quadrature with k=4
 11.340494 seconds (249.12 k allocations: 2.260 GiB, 2.11% gc time, 1.39% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 37.080848 seconds (484.18 k allocations: 13.254 GiB, 6.19% gc time, 0.93% compilation time)
Running: legendre_quadrature.
 10.227286 seconds (223.39 k allocations: 1.976 GiB, 3.71% gc time, 1.89% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.426290 seconds (8.23 M allocations: 13.383 GiB, 7.67% gc time, 0.59% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.871846 seconds (7.23 M allocations: 13.369 GiB, 7.32% gc time, 0.65% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.869686 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.909712 seconds (30.45 k allocations: 1.884 MiB, 0.49% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.568342 seconds (22.45 k allocations: 1.357 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.997794 seconds (438.25 k allocations: 152.742 MiB, 1.79% gc time, 13.00% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.263793 seconds (600.04 M allocations: 8.943 GiB, 5.93% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.463918 seconds (600.05 M allocations: 8.943 GiB, 5.85% gc time, 0.16% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.965205 seconds (600.03 M allocations: 8.943 GiB, 5.70% gc time, 0.11% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.043427 seconds (180.45 k allocations: 4.404 MiB, 86.21% compilation time)
Running: chebyshev_quadrature with k=1
  0.192429 seconds (247.70 k allocations: 13.449 MiB, 97.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.174576 seconds (272.34 k allocations: 14.586 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.157160 seconds (220.25 k allocations: 11.631 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.189133 seconds (220.25 k allocations: 11.626 MiB, 99.25% compilation time)
Running: jacobi_quadrature with α=β=1
  0.296295 seconds (388.85 k allocations: 34.972 MiB, 91.97% compilation time)
Running: laguerre_quadrature with k=2
  0.159616 seconds (180.54 k allocations: 10.477 MiB, 76.42% compilation time)
Running: legendre_quadrature
  0.107410 seconds (145.99 k allocations: 8.082 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.020241 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017138 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.040242 seconds (18.88 k allocations: 1.122 MiB, 57.75% compilation time)
Running: rectangle_rule_midpoint
  0.033330 seconds (25.48 k allocations: 1.576 MiB, 64.14% compilation time)
Running: rectangle_rule_right
  0.036575 seconds (17.48 k allocations: 1.049 MiB, 53.36% compilation time)
Running: rombergs_method
  0.186312 seconds (172.11 k allocations: 9.861 MiB, 98.49% compilation time)
Running: simpsons_rule
  0.000947 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.146536 seconds (78.86 k allocations: 3.384 MiB, 69.83% gc time, 99.35% compilation time)
Running: trapezoidal_rule
  0.088708 seconds (2.39 M allocations: 37.691 MiB, 28.99% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001096 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.109268 seconds (2.46 k allocations: 1.691 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.107715 seconds (2.71 k allocations: 2.355 MiB, 96.74% compilation time)
Running: chebyshev_quadrature with k=3
  0.095795 seconds (2.31 k allocations: 2.028 MiB, 96.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.092983 seconds (2.31 k allocations: 1.469 MiB, 97.50% compilation time)
Running: jacobi_quadrature with α=β=1
  4.287546 seconds (365.93 k allocations: 904.798 MiB, 6.34% gc time, 7.88% compilation time)
Running: legendre_quadrature
  0.073144 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000153 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000107 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.847673 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000357 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.793125 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062304 seconds (997 allocations: 56.672 KiB, 99.25% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000592 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000260 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.095982 seconds (2.53 k allocations: 579.203 KiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.089254 seconds (2.79 k allocations: 780.188 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.090469 seconds (2.39 k allocations: 661.047 KiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.098291 seconds (2.39 k allocations: 491.547 KiB, 99.41% compilation time)
Running: jacobi_quadrature with α=β=1
  2.319831 seconds (372.50 k allocations: 252.963 MiB, 7.97% gc time, 17.80% compilation time)
Running: legendre_quadrature
  0.107840 seconds (1.32 k allocations: 67.859 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.002772 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.317568 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000138 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.277581 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073799 seconds (1.21 k allocations: 64.938 KiB, 99.54% compilation time)
Running: simpsons_rule
  0.000019 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000283 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
