Julia Version 1.6.0-DEV.1130
Commit ff20ff072b (2020-10-05 16:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_hiUml0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_hiUml0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.05695085318853785 0.0540404457397092; -0.05695085318853785 0.0 0.058355831651091594; -0.0540404457397092 -0.058355831651091594 0.0])
dAA = so3([0.0 0.03561859768331245 0.042731313040537657; -0.03561859768331245 0.0 -0.11293722864876583; -0.042731313040537657 0.11293722864876583 0.0])
dAA = so3([0.0 -0.058363164996108476 0.06818835100088769; 0.058363164996108476 0.0 -0.08975260323143462; -0.06818835100088769 0.08975260323143462 0.0])
dAA = Quaternion(0.9941955007863457, [-0.06179069317430274, 0.05502517359094907, 0.0687709729792494])
dAA = SO3([0.9915027894315696 0.1299473400217885 -0.005992275918125985; -0.1297502161512525 0.9845932552904333 -0.11722202457427258; -0.009332735832569312 0.11700346344382201 0.993087654532081])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9904087884373488 0.10254064285067227 0.09260587643251275; -0.07262658379446126 0.9565371229796777 -0.2824218682894563; -0.11754067854325599 0.2729874519561875 0.9548099496559822]), [-0.5835583165109159, 0.540404457397092, -0.5695085318853784])
xj = SE3(SO3([0.904781641117217 -0.35499310126389055 0.23526597703935156; 0.2710208022961765 0.906082824948844 0.3249025070008839; -0.32850860965882217 -0.230203849637159 0.9160176204594865]), [0.8975260323143461, 0.6818835100088768, 0.5836316499610847])
Dx = SE3(SO3([0.9150334988578532 -0.3903356708476349 0.10174359946395627; 0.2623396213192427 0.7674578754037596 0.584966949978222; -0.3064173935239831 -0.5085729775997482 0.8046501770342777]), [1.3210629357941497, 0.6019941071823396, 1.1982300548061098])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
