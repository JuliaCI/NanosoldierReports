Julia Version 1.6.0-DEV.1130
Commit ff20ff072b (2020-10-05 16:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MacroTools ─ v0.5.5
  Installed Compat ───── v3.18.0
  Installed IterTools ── v1.3.0
  Installed LightQuery ─ v0.7.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [a6f99520] + LightQuery v0.7.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.18.0
  [c8e1da08] + IterTools v1.3.0
  [a6f99520] + LightQuery v0.7.0
  [1914dd2f] + MacroTools v0.5.5
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing LightQuery
Status `/tmp/jl_82gmU0/Project.toml`
  [336ed68f] CSV v0.7.7
  [34da2185] Compat v3.18.0
  [e30172f5] Documenter v0.25.2
  [c8e1da08] IterTools v1.3.0
  [a6f99520] LightQuery v0.7.0
  [1914dd2f] MacroTools v0.5.5
  [bd369af6] Tables v1.1.0
  [f269a46b] TimeZones v1.4.0
  [1986cc42] Unitful v1.4.1
  [ade2ca70] Dates
  [d6f4376e] Markdown
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_82gmU0/Manifest.toml`
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.3
  [34da2185] Compat v3.18.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.7
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [94ce4f54] Libiconv_jll v1.16.0+6
  [a6f99520] LightQuery v0.7.0
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [91c51154] SentinelArrays v1.2.16
  [a2af1166] SortingAlgorithms v0.3.1
  [856f2bd8] StructTypes v1.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [f269a46b] TimeZones v1.4.0
  [1986cc42] Unitful v1.4.1
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+16
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:42-46
│ 
│ ```jldoctest flights
│ julia> using CSV: File
│ 
│ julia> airports_file = File("airports.csv", missingstrings = ["", "\\N"]);
│ ```
│ 
│ Subexpression:
│ 
│ airports_file = File("airports.csv", missingstrings = ["", "\\N"]);
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│ Closest candidates are:
│   typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│ Stacktrace:
│  [1] ts(T::Type, S::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│  [2] nonstandardtype(T::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│  [3] (::CSV.var"#17#23")(T::Type)
│    @ CSV ./none:0
│  [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│    @ Base.Iterators ./iterators.jl:451
│  [5] iterate
│    @ ./generator.jl:44 [inlined]
│  [6] Header
│    @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│  [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│    @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│  [8] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│    Closest candidates are:
│      typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│    Stacktrace:
│     [1] ts(T::Type, S::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│     [2] nonstandardtype(T::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│     [3] (::CSV.var"#17#23")(T::Type)
│       @ CSV ./none:0
│     [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│       @ Base.Iterators ./iterators.jl:451
│     [5] iterate
│       @ ./generator.jl:44 [inlined]
│     [6] Header
│       @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│     [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│       @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│     [8] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:50-52
│ 
│ ```jldoctest flights
│ julia> airports_file = Rows(; columntable(airports_file)...);
│ ```
│ 
│ Subexpression:
│ 
│ airports_file = Rows(; columntable(airports_file)...);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: airports_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:56-59
│ 
│ ```jldoctest flights
│ julia> airport = first(airports_file)
│ (faa = "04G", name = "Lansdowne Airport", lat = 41.1304722, lon = -80.6195833, alt = 1044, tz = -5, dst = "A", tzone = "America/New_York")
│ ```
│ 
│ Subexpression:
│ 
│ airport = first(airports_file)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (faa = "04G", name = "Lansdowne Airport", lat = 41.1304722, lon = -80.6195833, alt = 1044, tz = -5, dst = "A", tzone = "America/New_York")
│ 
│   diff =
│    Warning: Diff output requires color.
│    (faa = "04G", name = "Lansdowne Airport", lat = 41.1304722, lon = -80.6195833, alt = 1044, tz = -5, dst = "A", tzone = "America/New_York")ERROR: UndefVarError: airports_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:63-74
│ 
│ ```jldoctest flights
│ julia> airport = rename(airport,
│             airport_code = name"faa",
│             altitude = name"alt",
│             daylight_savings = name"dst",
│             latitude = name"lat",
│             longitude = name"lon",
│             time_zone = name"tzone",
│             time_zone_offset = name"tz"
│         )
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, daylight_savings = "A", latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York", time_zone_offset = -5)
│ ```
│ 
│ Subexpression:
│ 
│ airport = rename(airport,
│      airport_code = name"faa",
│      altitude = name"alt",
│      daylight_savings = name"dst",
│      latitude = name"lat",
│      longitude = name"lon",
│      time_zone = name"tzone",
│      time_zone_offset = name"tz"
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airport not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, daylight_savings = "A", latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York", time_zone_offset = -5)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, daylight_savings = "A", latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York", time_zone_offset = -5)ERROR: UndefVarError: airport not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:78-84
│ 
│ ```jldoctest flights
│ julia> airport = remove(airport,
│             name"daylight_savings",
│             name"time_zone_offset"
│         )
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York")
│ ```
│ 
│ Subexpression:
│ 
│ airport = remove(airport,
│      name"daylight_savings",
│      name"time_zone_offset"
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airport not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York")
│ 
│   diff =
│    Warning: Diff output requires color.
│    (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044, latitude = 41.1304722, longitude = -80.6195833, time_zone = "America/New_York")ERROR: UndefVarError: airport not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:88-95
│ 
│ ```jldoctest flights
│ julia> airport = transform(airport,
│             altitude = airport.altitude * ft,
│             latitude = airport.latitude * °,
│             longitude = airport.longitude * °
│         )
│ (name = "Lansdowne Airport", airport_code = "04G", time_zone = "America/New_York", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°)
│ ```
│ 
│ Subexpression:
│ 
│ airport = transform(airport,
│      altitude = airport.altitude * ft,
│      latitude = airport.latitude * °,
│      longitude = airport.longitude * °
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airport not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (name = "Lansdowne Airport", airport_code = "04G", time_zone = "America/New_York", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (name = "Lansdowne Airport", airport_code = "04G", time_zone = "America/New_York", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°)ERROR: UndefVarError: airport not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:99-107
│ 
│ ```jldoctest flights
│ julia> get_time_zone(time_zone) = TimeZone(
│             (@if_known time_zone),
│             Class(:STANDARD) | Class(:LEGACY)
│         );
│ 
│ julia> get_time_zone(airport.time_zone)
│ America/New_York (UTC-5/UTC-4)
│ ```
│ 
│ Subexpression:
│ 
│ get_time_zone(airport.time_zone)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airport not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ America/New_York (UTC-5/UTC-4)
│ 
│   diff =
│    Warning: Diff output requires color.
│    America/New_York (UTC-5/UTC-4)ERROR: UndefVarError: airport not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:111-137
│ 
│ ```jldoctest flights
│ julia> function get_airport(row)
│             @> row |>
│             rename(_,
│                 airport_code = name"faa",
│                 altitude = name"alt",
│                 daylight_savings = name"dst",
│                 latitude = name"lat",
│                 longitude = name"lon",
│                 time_zone = name"tzone",
│                 time_zone_offset = name"tz"
│             ) |>
│             remove(_,
│                 name"daylight_savings",
│                 name"time_zone_offset",
│             ) |>
│             transform(_,
│                 altitude = _.altitude * ft,
│                 latitude = _.latitude * °,
│                 longitude = _.longitude * °,
│                 time_zone = get_time_zone(_.time_zone)
│             )
│         end;
│ 
│ julia> get_airport(first(airports_file))
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°, time_zone = tz"America/New_York")
│ ```
│ 
│ Subexpression:
│ 
│ get_airport(first(airports_file))
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°, time_zone = tz"America/New_York")
│ 
│   diff =
│    Warning: Diff output requires color.
│    (name = "Lansdowne Airport", airport_code = "04G", altitude = 1044 ft, latitude = 41.1304722°, longitude = -80.6195833°, time_zone = tz"America/New_York")ERROR: UndefVarError: airports_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:141-143
│ 
│ ```jldoctest flights
│ julia> airports = Iterators.map(get_airport, airports_file);
│ ```
│ 
│ Subexpression:
│ 
│ airports = Iterators.map(get_airport, airports_file);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: airports_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:147-149
│ 
│ ```jldoctest flights
│ julia> airports = Rows(; make_columns(airports)...);
│ ```
│ 
│ Subexpression:
│ 
│ airports = Rows(; make_columns(airports)...);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: airports not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:153-155
│ 
│ ```jldoctest flights
│ julia> const indexed_airports = index(airports, name"airport_code");
│ ```
│ 
│ Subexpression:
│ 
│ const indexed_airports = index(airports, name"airport_code");
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airports not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: airports not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:161-166
│ 
│ ```jldoctest flights
│ julia> flights_file =
│         @> File("flights.csv") |>
│         columntable |>
│         Rows(; _...);
│ ```
│ 
│ Subexpression:
│ 
│ flights_file =
│  @> File("flights.csv") |>
│  columntable |>
│  Rows(; _...);
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│ Closest candidates are:
│   typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│ Stacktrace:
│  [1] ts(T::Type, S::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│  [2] nonstandardtype(T::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│  [3] (::CSV.var"#17#23")(T::Type)
│    @ CSV ./none:0
│  [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│    @ Base.Iterators ./iterators.jl:451
│  [5] iterate
│    @ ./generator.jl:44 [inlined]
│  [6] Header
│    @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│  [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│    @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│  [8] File(source::String)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│  [9] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│    Closest candidates are:
│      typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│    Stacktrace:
│     [1] ts(T::Type, S::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│     [2] nonstandardtype(T::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│     [3] (::CSV.var"#17#23")(T::Type)
│       @ CSV ./none:0
│     [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│       @ Base.Iterators ./iterators.jl:451
│     [5] iterate
│       @ ./generator.jl:44 [inlined]
│     [6] Header
│       @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│     [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│       @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│     [8] File(source::String)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│     [9] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:170-198
│ 
│ ```jldoctest flights
│ julia> flight =
│         @> flights_file |>
│         first |>
│         rename(_,
│             arrival_delay = name"arr_delay",
│             arrival_time = name"arr_time",
│             departure_delay = name"dep_delay",
│             departure_time = name"dep_time",
│             destination = name"dest",
│             scheduled_arrival_time = name"sched_arr_time",
│             scheduled_departure_time = name"sched_dep_time",
│             tail_number = name"tailnum"
│         ) |>
│         remove(_,
│             name"arrival_time",
│             name"departure_time",
│             name"hour",
│             name"minute",
│             name"time_hour"
│         ) |>
│         transform(_,
│             air_time = _.air_time * minute,
│             arrival_delay = _.arrival_delay * minute,
│             departure_delay = _.departure_delay * minute,
│             distance = _.distance * mi
│         )
│ (year = 2013, month = 1, day = 1, carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", scheduled_arrival_time = 819, scheduled_departure_time = 515, tail_number = "N14228", air_time = 227 minute, arrival_delay = 11 minute, departure_delay = 2 minute, distance = 1400 mi)
│ ```
│ 
│ Subexpression:
│ 
│ flight =
│  @> flights_file |>
│  first |>
│  rename(_,
│      arrival_delay = name"arr_delay",
│      arrival_time = name"arr_time",
│      departure_delay = name"dep_delay",
│      departure_time = name"dep_time",
│      destination = name"dest",
│      scheduled_arrival_time = name"sched_arr_time",
│      scheduled_departure_time = name"sched_dep_time",
│      tail_number = name"tailnum"
│  ) |>
│  remove(_,
│      name"arrival_time",
│      name"departure_time",
│      name"hour",
│      name"minute",
│      name"time_hour"
│  ) |>
│  transform(_,
│      air_time = _.air_time * minute,
│      arrival_delay = _.arrival_delay * minute,
│      departure_delay = _.departure_delay * minute,
│      distance = _.distance * mi
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (year = 2013, month = 1, day = 1, carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", scheduled_arrival_time = 819, scheduled_departure_time = 515, tail_number = "N14228", air_time = 227 minute, arrival_delay = 11 minute, departure_delay = 2 minute, distance = 1400 mi)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (year = 2013, month = 1, day = 1, carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", scheduled_arrival_time = 819, scheduled_departure_time = 515, tail_number = "N14228", air_time = 227 minute, arrival_delay = 11 minute, departure_delay = 2 minute, distance = 1400 mi)ERROR: UndefVarError: flights_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:202-208
│ 
│ ```jldoctest flights
│ julia> airport = @if_known get(indexed_airports, flight.origin, missing)
│ (name = "Newark Liberty Intl", airport_code = "EWR", altitude = 18 ft, latitude = 40.6925°, longitude = -74.168667°, time_zone = tz"America/New_York")
│ 
│ julia> time_zone = @if_known airport.time_zone
│ America/New_York (UTC-5/UTC-4)
│ ```
│ 
│ Subexpression:
│ 
│ airport = @if_known get(indexed_airports, flight.origin, missing)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flight not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/LightQuery/U9mHU/src/utilities.jl:192
│ 
│ Expected output:
│ 
│ (name = "Newark Liberty Intl", airport_code = "EWR", altitude = 18 ft, latitude = 40.6925°, longitude = -74.168667°, time_zone = tz"America/New_York")
│ 
│   diff =
│    Warning: Diff output requires color.
│    (name = "Newark Liberty Intl", airport_code = "EWR", altitude = 18 ft, latitude = 40.6925°, longitude = -74.168667°, time_zone = tz"America/New_York")ERROR: UndefVarError: flight not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/LightQuery/U9mHU/src/utilities.jl:192
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:202-208
│ 
│ ```jldoctest flights
│ julia> airport = @if_known get(indexed_airports, flight.origin, missing)
│ (name = "Newark Liberty Intl", airport_code = "EWR", altitude = 18 ft, latitude = 40.6925°, longitude = -74.168667°, time_zone = tz"America/New_York")
│ 
│ julia> time_zone = @if_known airport.time_zone
│ America/New_York (UTC-5/UTC-4)
│ ```
│ 
│ Subexpression:
│ 
│ time_zone = @if_known airport.time_zone
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: airport not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/LightQuery/U9mHU/src/utilities.jl:192
│ 
│ Expected output:
│ 
│ America/New_York (UTC-5/UTC-4)
│ 
│   diff =
│    Warning: Diff output requires color.
│    America/New_York (UTC-5/UTC-4)ERROR: UndefVarError: airport not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/LightQuery/U9mHU/src/utilities.jl:192
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:212-215
│ 
│ ```jldoctest flights
│ julia> divrem(flight.scheduled_departure_time, 100)
│ (5, 15)
│ ```
│ 
│ Subexpression:
│ 
│ divrem(flight.scheduled_departure_time, 100)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flight not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (5, 15)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (5, 15)ERROR: UndefVarError: flight not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:219-228
│ 
│ ```jldoctest flights
│ julia> ZonedDateTime(
│             flight.year,
│             flight.month,
│             flight.day,
│             divrem(flight.scheduled_departure_time, 100)...,
│             time_zone
│         )
│ 2013-01-01T05:15:00-05:00
│ ```
│ 
│ Subexpression:
│ 
│ ZonedDateTime(
│      flight.year,
│      flight.month,
│      flight.day,
│      divrem(flight.scheduled_departure_time, 100)...,
│      time_zone
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flight not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 2013-01-01T05:15:00-05:00
│ 
│   diff =
│    Warning: Diff output requires color.
│    2013-01-01T05:15:00-05:00ERROR: UndefVarError: flight not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:232-249
│ 
│ ```jldoctest flights
│ julia> get_time(indexed_airports, flight, airport, time) =
│             ZonedDateTime(
│                 flight.year,
│                 flight.month,
│                 flight.day,
│                 divrem(time, 100)...,
│                 @if_known (@if_known get(indexed_airports, airport, missing)).time_zone
│             );
│ 
│ julia> get_time(
│             indexed_airports,
│             flight,
│             flight.origin,
│             flight.scheduled_departure_time
│         )
│ 2013-01-01T05:15:00-05:00
│ ```
│ 
│ Subexpression:
│ 
│ get_time(
│      indexed_airports,
│      flight,
│      flight.origin,
│      flight.scheduled_departure_time
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flight not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 2013-01-01T05:15:00-05:00
│ 
│   diff =
│    Warning: Diff output requires color.
│    2013-01-01T05:15:00-05:00ERROR: UndefVarError: flight not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:253-261
│ 
│ ```jldoctest flights
│ julia> arrival = get_time(
│             indexed_airports,
│             flight,
│             flight.destination,
│             flight.scheduled_arrival_time
│         )
│ 2013-01-01T08:19:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ arrival = get_time(
│      indexed_airports,
│      flight,
│      flight.destination,
│      flight.scheduled_arrival_time
│  )
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flight not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 2013-01-01T08:19:00-06:00
│ 
│   diff =
│    Warning: Diff output requires color.
│    2013-01-01T08:19:00-06:00ERROR: UndefVarError: flight not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:265-304
│ 
│ ```jldoctest flights
│ julia> function get_flight(indexed_airports, row)
│             @> row |>
│             rename(_,
│                 arrival_delay = name"arr_delay",
│                 arrival_time = name"arr_time",
│                 departure_delay = name"dep_delay",
│                 departure_time = name"dep_time",
│                 destination = name"dest",
│                 scheduled_arrival_time = name"sched_arr_time",
│                 scheduled_departure_time = name"sched_dep_time",
│                 tail_number = name"tailnum"
│             ) |>
│             remove(_,
│                 name"arrival_time",
│                 name"departure_time",
│                 name"hour",
│                 name"minute",
│                 name"time_hour"
│             ) |>
│             transform(_,
│                 air_time = _.air_time * minute,
│                 distance = _.distance * mi,
│                 departure_delay = _.departure_delay * minute,
│                 arrival_delay = _.arrival_delay * minute,
│                 scheduled_departure_time =
│                     get_time(indexed_airports, _, _.origin, _.scheduled_departure_time),
│                 scheduled_arrival_time =
│                     get_time(indexed_airports, _, _.destination, _.scheduled_arrival_time)
│             ) |>
│             remove(_,
│                 name"year",
│                 name"month",
│                 name"day"
│             )
│         end;
│ 
│ julia> get_flight(indexed_airports, first(flights_file))
│ (carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", tail_number = "N14228", air_time = 227 minute, distance = 1400 mi, departure_delay = 2 minute, arrival_delay = 11 minute, scheduled_departure_time = ZonedDateTime(2013, 1, 1, 5, 15, tz"America/New_York"), scheduled_arrival_time = ZonedDateTime(2013, 1, 1, 8, 19, tz"America/Chicago"))
│ ```
│ 
│ Subexpression:
│ 
│ get_flight(indexed_airports, first(flights_file))
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", tail_number = "N14228", air_time = 227 minute, distance = 1400 mi, departure_delay = 2 minute, arrival_delay = 11 minute, scheduled_departure_time = ZonedDateTime(2013, 1, 1, 5, 15, tz"America/New_York"), scheduled_arrival_time = ZonedDateTime(2013, 1, 1, 8, 19, tz"America/Chicago"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (carrier = "UA", flight = 1545, origin = "EWR", destination = "IAH", tail_number = "N14228", air_time = 227 minute, distance = 1400 mi, departure_delay = 2 minute, arrival_delay = 11 minute, scheduled_departure_time = ZonedDateTime(2013, 1, 1, 5, 15, tz"America/New_York"), scheduled_arrival_time = ZonedDateTime(2013, 1, 1, 8, 19, tz"America/Chicago"))ERROR: UndefVarError: flights_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:308-312
│ 
│ ```jldoctest flights
│ julia> flights =
│         @> flights_file |>
│         Iterators.map((@_ get_flight(indexed_airports, _)), _);
│ ```
│ 
│ Subexpression:
│ 
│ flights =
│  @> flights_file |>
│  Iterators.map((@_ get_flight(indexed_airports, _)), _);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: flights_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:320-325
│ 
│ ```jldoctest flights
│ julia> paths_grouped =
│         @> flights |>
│         order(_, (name"origin", name"destination", name"distance")) |>
│         Group(By(_, (name"origin", name"destination", name"distance")));
│ 
│ ```
│ 
│ Subexpression:
│ 
│ paths_grouped =
│  @> flights |>
│  order(_, (name"origin", name"destination", name"distance")) |>
│  Group(By(_, (name"origin", name"destination", name"distance")));
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:330-344
│ 
│ ```jldoctest flights
│ julia> path = first(paths_grouped);
│ 
│ julia> key(path)
│ (origin = "EWR", destination = "ALB", distance = 143 mi)
│ 
│ julia> value(path) |> Peek
│ Showing 4 of 439 rows
│ | carrier | flight | origin | destination | tail_number |  air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ---------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      EV |   4112 |    EWR |         ALB |      N13538 | 33 minute |   143 mi |       -2 minute |    -10 minute | 2013-01-01T13:17:00-05:00 | 2013-01-01T14:23:00-05:00 |
│ |      EV |   3260 |    EWR |         ALB |      N19554 | 36 minute |   143 mi |       34 minute |     40 minute | 2013-01-01T16:21:00-05:00 | 2013-01-01T17:24:00-05:00 |
│ |      EV |   4170 |    EWR |         ALB |      N12540 | 31 minute |   143 mi |       52 minute |     44 minute | 2013-01-01T20:04:00-05:00 | 2013-01-01T21:12:00-05:00 |
│ |      EV |   4316 |    EWR |         ALB |      N14153 | 33 minute |   143 mi |        5 minute |    -14 minute | 2013-01-02T13:27:00-05:00 | 2013-01-02T14:33:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ path = first(paths_grouped);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: paths_grouped not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: paths_grouped not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:330-344
│ 
│ ```jldoctest flights
│ julia> path = first(paths_grouped);
│ 
│ julia> key(path)
│ (origin = "EWR", destination = "ALB", distance = 143 mi)
│ 
│ julia> value(path) |> Peek
│ Showing 4 of 439 rows
│ | carrier | flight | origin | destination | tail_number |  air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ---------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      EV |   4112 |    EWR |         ALB |      N13538 | 33 minute |   143 mi |       -2 minute |    -10 minute | 2013-01-01T13:17:00-05:00 | 2013-01-01T14:23:00-05:00 |
│ |      EV |   3260 |    EWR |         ALB |      N19554 | 36 minute |   143 mi |       34 minute |     40 minute | 2013-01-01T16:21:00-05:00 | 2013-01-01T17:24:00-05:00 |
│ |      EV |   4170 |    EWR |         ALB |      N12540 | 31 minute |   143 mi |       52 minute |     44 minute | 2013-01-01T20:04:00-05:00 | 2013-01-01T21:12:00-05:00 |
│ |      EV |   4316 |    EWR |         ALB |      N14153 | 33 minute |   143 mi |        5 minute |    -14 minute | 2013-01-02T13:27:00-05:00 | 2013-01-02T14:33:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ key(path)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: path not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (origin = "EWR", destination = "ALB", distance = 143 mi)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (origin = "EWR", destination = "ALB", distance = 143 mi)ERROR: UndefVarError: path not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:330-344
│ 
│ ```jldoctest flights
│ julia> path = first(paths_grouped);
│ 
│ julia> key(path)
│ (origin = "EWR", destination = "ALB", distance = 143 mi)
│ 
│ julia> value(path) |> Peek
│ Showing 4 of 439 rows
│ | carrier | flight | origin | destination | tail_number |  air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ---------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      EV |   4112 |    EWR |         ALB |      N13538 | 33 minute |   143 mi |       -2 minute |    -10 minute | 2013-01-01T13:17:00-05:00 | 2013-01-01T14:23:00-05:00 |
│ |      EV |   3260 |    EWR |         ALB |      N19554 | 36 minute |   143 mi |       34 minute |     40 minute | 2013-01-01T16:21:00-05:00 | 2013-01-01T17:24:00-05:00 |
│ |      EV |   4170 |    EWR |         ALB |      N12540 | 31 minute |   143 mi |       52 minute |     44 minute | 2013-01-01T20:04:00-05:00 | 2013-01-01T21:12:00-05:00 |
│ |      EV |   4316 |    EWR |         ALB |      N14153 | 33 minute |   143 mi |        5 minute |    -14 minute | 2013-01-02T13:27:00-05:00 | 2013-01-02T14:33:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ value(path) |> Peek
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: path not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing 4 of 439 rows
│ | carrier | flight | origin | destination | tail_number |  air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ---------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      EV |   4112 |    EWR |         ALB |      N13538 | 33 minute |   143 mi |       -2 minute |    -10 minute | 2013-01-01T13:17:00-05:00 | 2013-01-01T14:23:00-05:00 |
│ |      EV |   3260 |    EWR |         ALB |      N19554 | 36 minute |   143 mi |       34 minute |     40 minute | 2013-01-01T16:21:00-05:00 | 2013-01-01T17:24:00-05:00 |
│ |      EV |   4170 |    EWR |         ALB |      N12540 | 31 minute |   143 mi |       52 minute |     44 minute | 2013-01-01T20:04:00-05:00 | 2013-01-01T21:12:00-05:00 |
│ |      EV |   4316 |    EWR |         ALB |      N14153 | 33 minute |   143 mi |        5 minute |    -14 minute | 2013-01-02T13:27:00-05:00 | 2013-01-02T14:33:00-05:00 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing 4 of 439 rows
│    | carrier | flight | origin | destination | tail_number |  air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│    | -------:| ------:| ------:| -----------:| -----------:| ---------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│    |      EV |   4112 |    EWR |         ALB |      N13538 | 33 minute |   143 mi |       -2 minute |    -10 minute | 2013-01-01T13:17:00-05:00 | 2013-01-01T14:23:00-05:00 |
│    |      EV |   3260 |    EWR |         ALB |      N19554 | 36 minute |   143 mi |       34 minute |     40 minute | 2013-01-01T16:21:00-05:00 | 2013-01-01T17:24:00-05:00 |
│    |      EV |   4170 |    EWR |         ALB |      N12540 | 31 minute |   143 mi |       52 minute |     44 minute | 2013-01-01T20:04:00-05:00 | 2013-01-01T21:12:00-05:00 |
│    |      EV |   4316 |    EWR |         ALB |      N14153 | 33 minute |   143 mi |        5 minute |    -14 minute | 2013-01-02T13:27:00-05:00 | 2013-01-02T14:33:00-05:00 |ERROR: UndefVarError: path not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:348-363
│ 
│ ```jldoctest flights
│ julia> paths =
│         @> paths_grouped |>
│         Iterators.map(key, _) |>
│         make_columns |>
│         Rows(; _ ...);
│ 
│ julia> Peek(paths)
│ Showing 4 of 226 rows
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ |    EWR |         ANC |  3370 mi |
│ |    EWR |         ATL |   746 mi |
│ |    EWR |         AUS |  1504 mi |
│ ```
│ 
│ Subexpression:
│ 
│ paths =
│  @> paths_grouped |>
│  Iterators.map(key, _) |>
│  make_columns |>
│  Rows(; _ ...);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: paths_grouped not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: paths_grouped not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:348-363
│ 
│ ```jldoctest flights
│ julia> paths =
│         @> paths_grouped |>
│         Iterators.map(key, _) |>
│         make_columns |>
│         Rows(; _ ...);
│ 
│ julia> Peek(paths)
│ Showing 4 of 226 rows
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ |    EWR |         ANC |  3370 mi |
│ |    EWR |         ATL |   746 mi |
│ |    EWR |         AUS |  1504 mi |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(paths)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: paths not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing 4 of 226 rows
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ |    EWR |         ANC |  3370 mi |
│ |    EWR |         ATL |   746 mi |
│ |    EWR |         AUS |  1504 mi |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing 4 of 226 rows
│    | origin | destination | distance |
│    | ------:| -----------:| --------:|
│    |    EWR |         ALB |   143 mi |
│    |    EWR |         ANC |  3370 mi |
│    |    EWR |         ATL |   746 mi |
│    |    EWR |         AUS |  1504 mi |ERROR: UndefVarError: paths not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:367-371
│ 
│ ```jldoctest flights
│ julia> path_groups =
│         @> paths |>
│         Group(By(_, (name"origin", name"destination")));
│ ```
│ 
│ Subexpression:
│ 
│ path_groups =
│  @> paths |>
│  Group(By(_, (name"origin", name"destination")));
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: paths not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: paths not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:375-392
│ 
│ ```jldoctest flights
│ julia> first_path_group = first(path_groups);
│ 
│ julia> key(first_path_group)
│ (origin = "EWR", destination = "ALB")
│ 
│ julia> Peek(value(first_path_group))
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ 
│ julia> function with_number((key, value))
│             transform(key, number = length(value))
│         end;
│ 
│ julia> with_number(first_path_group)
│ (origin = "EWR", destination = "ALB", number = 1)
│ ```
│ 
│ Subexpression:
│ 
│ first_path_group = first(path_groups);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: path_groups not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: path_groups not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:375-392
│ 
│ ```jldoctest flights
│ julia> first_path_group = first(path_groups);
│ 
│ julia> key(first_path_group)
│ (origin = "EWR", destination = "ALB")
│ 
│ julia> Peek(value(first_path_group))
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ 
│ julia> function with_number((key, value))
│             transform(key, number = length(value))
│         end;
│ 
│ julia> with_number(first_path_group)
│ (origin = "EWR", destination = "ALB", number = 1)
│ ```
│ 
│ Subexpression:
│ 
│ key(first_path_group)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: first_path_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (origin = "EWR", destination = "ALB")
│ 
│   diff =
│    Warning: Diff output requires color.
│    (origin = "EWR", destination = "ALB")ERROR: UndefVarError: first_path_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:375-392
│ 
│ ```jldoctest flights
│ julia> first_path_group = first(path_groups);
│ 
│ julia> key(first_path_group)
│ (origin = "EWR", destination = "ALB")
│ 
│ julia> Peek(value(first_path_group))
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ 
│ julia> function with_number((key, value))
│             transform(key, number = length(value))
│         end;
│ 
│ julia> with_number(first_path_group)
│ (origin = "EWR", destination = "ALB", number = 1)
│ ```
│ 
│ Subexpression:
│ 
│ Peek(value(first_path_group))
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: first_path_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ 
│   diff =
│    Warning: Diff output requires color.
│    | origin | destination | distance |
│    | ------:| -----------:| --------:|
│    |    EWR |         ALB |   143 mi |ERROR: UndefVarError: first_path_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:375-392
│ 
│ ```jldoctest flights
│ julia> first_path_group = first(path_groups);
│ 
│ julia> key(first_path_group)
│ (origin = "EWR", destination = "ALB")
│ 
│ julia> Peek(value(first_path_group))
│ | origin | destination | distance |
│ | ------:| -----------:| --------:|
│ |    EWR |         ALB |   143 mi |
│ 
│ julia> function with_number((key, value))
│             transform(key, number = length(value))
│         end;
│ 
│ julia> with_number(first_path_group)
│ (origin = "EWR", destination = "ALB", number = 1)
│ ```
│ 
│ Subexpression:
│ 
│ with_number(first_path_group)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: first_path_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (origin = "EWR", destination = "ALB", number = 1)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (origin = "EWR", destination = "ALB", number = 1)ERROR: UndefVarError: first_path_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:396-409
│ 
│ ```jldoctest flights
│ julia> distinct_distances =
│         @> path_groups |>
│         Iterators.map(with_number, _);
│ 
│ julia> Peek(distinct_distances)
│ Showing at most 4 rows
│ | origin | destination | number |
│ | ------:| -----------:| ------:|
│ |    EWR |         ALB |      1 |
│ |    EWR |         ANC |      1 |
│ |    EWR |         ATL |      1 |
│ |    EWR |         AUS |      1 |
│ ```
│ 
│ Subexpression:
│ 
│ distinct_distances =
│  @> path_groups |>
│  Iterators.map(with_number, _);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: path_groups not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: path_groups not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:396-409
│ 
│ ```jldoctest flights
│ julia> distinct_distances =
│         @> path_groups |>
│         Iterators.map(with_number, _);
│ 
│ julia> Peek(distinct_distances)
│ Showing at most 4 rows
│ | origin | destination | number |
│ | ------:| -----------:| ------:|
│ |    EWR |         ALB |      1 |
│ |    EWR |         ANC |      1 |
│ |    EWR |         ATL |      1 |
│ |    EWR |         AUS |      1 |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(distinct_distances)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: distinct_distances not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing at most 4 rows
│ | origin | destination | number |
│ | ------:| -----------:| ------:|
│ |    EWR |         ALB |      1 |
│ |    EWR |         ANC |      1 |
│ |    EWR |         ATL |      1 |
│ |    EWR |         AUS |      1 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing at most 4 rows
│    | origin | destination | number |
│    | ------:| -----------:| ------:|
│    |    EWR |         ALB |      1 |
│    |    EWR |         ANC |      1 |
│    |    EWR |         ATL |      1 |
│    |    EWR |         AUS |      1 |ERROR: UndefVarError: distinct_distances not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:413-422
│ 
│ ```jldoctest flights
│ julia> @> distinct_distances |>
│         Iterators.filter((@_ _.number != 1), _) |>
│         Peek
│ Showing at most 4 rows
│ | origin | destination | number |
│ | ------:| -----------:| ------:|
│ |    EWR |         EGE |      2 |
│ |    JFK |         EGE |      2 |
│ ```
│ 
│ Subexpression:
│ 
│ @> distinct_distances |>
│  Iterators.filter((@_ _.number != 1), _) |>
│  Peek
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: distinct_distances not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing at most 4 rows
│ | origin | destination | number |
│ | ------:| -----------:| ------:|
│ |    EWR |         EGE |      2 |
│ |    JFK |         EGE |      2 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing at most 4 rows
│    | origin | destination | number |
│    | ------:| -----------:| ------:|
│    |    EWR |         EGE |      2 |
│    |    JFK |         EGE |      2 |ERROR: UndefVarError: distinct_distances not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:426-437
│ 
│ ```jldoctest flights
│ julia> @> flights |>
│         Iterators.filter((@_ _.destination == "EGE"), _) |>
│         Peek
│ Showing at most 4 rows
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1597 |    EWR |         EGE |      N27733 | 287 minute |  1726 mi |       -2 minute |     13 minute | 2013-01-01T09:28:00-05:00 | 2013-01-01T12:20:00-07:00 |
│ |      AA |    575 |    JFK |         EGE |      N5DRAA | 280 minute |  1747 mi |       -5 minute |      3 minute | 2013-01-01T17:00:00-05:00 | 2013-01-01T19:50:00-07:00 |
│ |      UA |   1597 |    EWR |         EGE |      N24702 | 261 minute |  1726 mi |        1 minute |      3 minute | 2013-01-02T09:28:00-05:00 | 2013-01-02T12:20:00-07:00 |
│ |      AA |    575 |    JFK |         EGE |      N631AA | 260 minute |  1747 mi |        5 minute |     16 minute | 2013-01-02T17:00:00-05:00 | 2013-01-02T19:50:00-07:00 |
│ ```
│ 
│ Subexpression:
│ 
│ @> flights |>
│  Iterators.filter((@_ _.destination == "EGE"), _) |>
│  Peek
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing at most 4 rows
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1597 |    EWR |         EGE |      N27733 | 287 minute |  1726 mi |       -2 minute |     13 minute | 2013-01-01T09:28:00-05:00 | 2013-01-01T12:20:00-07:00 |
│ |      AA |    575 |    JFK |         EGE |      N5DRAA | 280 minute |  1747 mi |       -5 minute |      3 minute | 2013-01-01T17:00:00-05:00 | 2013-01-01T19:50:00-07:00 |
│ |      UA |   1597 |    EWR |         EGE |      N24702 | 261 minute |  1726 mi |        1 minute |      3 minute | 2013-01-02T09:28:00-05:00 | 2013-01-02T12:20:00-07:00 |
│ |      AA |    575 |    JFK |         EGE |      N631AA | 260 minute |  1747 mi |        5 minute |     16 minute | 2013-01-02T17:00:00-05:00 | 2013-01-02T19:50:00-07:00 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing at most 4 rows
│    | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│    | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│    |      UA |   1597 |    EWR |         EGE |      N27733 | 287 minute |  1726 mi |       -2 minute |     13 minute | 2013-01-01T09:28:00-05:00 | 2013-01-01T12:20:00-07:00 |
│    |      AA |    575 |    JFK |         EGE |      N5DRAA | 280 minute |  1747 mi |       -5 minute |      3 minute | 2013-01-01T17:00:00-05:00 | 2013-01-01T19:50:00-07:00 |
│    |      UA |   1597 |    EWR |         EGE |      N24702 | 261 minute |  1726 mi |        1 minute |      3 minute | 2013-01-02T09:28:00-05:00 | 2013-01-02T12:20:00-07:00 |
│    |      AA |    575 |    JFK |         EGE |      N631AA | 260 minute |  1747 mi |        5 minute |     16 minute | 2013-01-02T17:00:00-05:00 | 2013-01-02T19:50:00-07:00 |ERROR: UndefVarError: flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:445-501
│ 
│ ```jldoctest flights
│ julia> weathers_file =
│         @> File("weather.csv") |>
│         columntable |>
│         Rows(; _...);
│ 
│ julia> function get_weather(indexed_airports, row)
│             @> row |>
│             rename(_,
│                 airport_code = name"origin",
│                 dew_point = name"dewp",
│                 humidity = name"humid",
│                 precipitation = name"precip",
│                 temperature = name"temp",
│                 visibility = name"visib",
│                 wind_direction = name"wind_dir"
│             ) |>
│             transform(_,
│                 dew_point = _.dew_point * °F,
│                 humidity = _.humidity / 100,
│                 precipitation = _.precipitation * inch,
│                 pressure = _.pressure * mbar,
│                 temperature = _.temperature * °F,
│                 visibility = _.visibility * mi,
│                 wind_direction = _.wind_direction * °,
│                 wind_gust = _.wind_gust * mi / hr,
│                 wind_speed = _.wind_speed * mi / hr,
│                 date_time = ZonedDateTime(
│                     _.year,
│                     _.month,
│                     _.day,
│                     _.hour,
│                     indexed_airports[_.airport_code].time_zone,
│                     1
│                 )
│             ) |>
│             remove(_,
│                 name"year",
│                 name"month",
│                 name"day",
│                 name"hour"
│             )
│         end;
│ 
│ julia> weathers =
│         @> weathers_file |>
│         Iterators.map((@_ get_weather(indexed_airports, _)), _);
│ 
│ julia> Peek(weathers)
│ Showing 4 of 26115 rows
│ |           time_hour | airport_code | dew_point |           humidity | precipitation |    pressure | temperature | visibility | wind_direction | wind_gust |        wind_speed |                 date_time |
│ | -------------------:| ------------:| ---------:| ------------------:| -------------:| -----------:| -----------:| ----------:| --------------:| ---------:| -----------------:| -------------------------:|
│ | 2013-01-01 01:00:00 |          EWR |  26.06 °F |             0.5937 |      0.0 inch | 1012.0 mbar |    39.02 °F |    10.0 mi |           270° |   missing | 10.35702 mi hr^-1 | 2013-01-01T01:00:00-05:00 |
│ | 2013-01-01 02:00:00 |          EWR |  26.96 °F | 0.6163000000000001 |      0.0 inch | 1012.3 mbar |    39.02 °F |    10.0 mi |           250° |   missing |  8.05546 mi hr^-1 | 2013-01-01T02:00:00-05:00 |
│ | 2013-01-01 03:00:00 |          EWR |  28.04 °F | 0.6443000000000001 |      0.0 inch | 1012.5 mbar |    39.02 °F |    10.0 mi |           240° |   missing |  11.5078 mi hr^-1 | 2013-01-01T03:00:00-05:00 |
│ | 2013-01-01 04:00:00 |          EWR |  28.04 °F |             0.6221 |      0.0 inch | 1012.2 mbar |    39.92 °F |    10.0 mi |           250° |   missing | 12.65858 mi hr^-1 | 2013-01-01T04:00:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ weathers_file =
│  @> File("weather.csv") |>
│  columntable |>
│  Rows(; _...);
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│ Closest candidates are:
│   typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│ Stacktrace:
│  [1] ts(T::Type, S::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│  [2] nonstandardtype(T::Type)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│  [3] (::CSV.var"#17#23")(T::Type)
│    @ CSV ./none:0
│  [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│    @ Base.Iterators ./iterators.jl:451
│  [5] iterate
│    @ ./generator.jl:44 [inlined]
│  [6] Header
│    @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│  [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│    @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│  [8] File(source::String)
│    @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│  [9] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: MethodError: no method matching typesubtract(::Type{Union{}}, ::Type{Int64})
│    Closest candidates are:
│      typesubtract(::Any, ::Any, !Matched::Int64) at compiler/typeutils.jl:66
│    Stacktrace:
│     [1] ts(T::Type, S::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:214
│     [2] nonstandardtype(T::Type)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/utils.jl:217
│     [3] (::CSV.var"#17#23")(T::Type)
│       @ CSV ./none:0
│     [4] iterate(::Base.Iterators.Filter{CSV.var"#17#23", Vector{Type}})
│       @ Base.Iterators ./iterators.jl:451
│     [5] iterate
│       @ ./generator.jl:44 [inlined]
│     [6] Header
│       @ ~/.julia/packages/CSV/MKemC/src/header.jl:232 [inlined]
│     [7] File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Nothing, typemap::Dict{Type, Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│       @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│     [8] File(source::String)
│       @ CSV ~/.julia/packages/CSV/MKemC/src/file.jl:216
│     [9] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:445-501
│ 
│ ```jldoctest flights
│ julia> weathers_file =
│         @> File("weather.csv") |>
│         columntable |>
│         Rows(; _...);
│ 
│ julia> function get_weather(indexed_airports, row)
│             @> row |>
│             rename(_,
│                 airport_code = name"origin",
│                 dew_point = name"dewp",
│                 humidity = name"humid",
│                 precipitation = name"precip",
│                 temperature = name"temp",
│                 visibility = name"visib",
│                 wind_direction = name"wind_dir"
│             ) |>
│             transform(_,
│                 dew_point = _.dew_point * °F,
│                 humidity = _.humidity / 100,
│                 precipitation = _.precipitation * inch,
│                 pressure = _.pressure * mbar,
│                 temperature = _.temperature * °F,
│                 visibility = _.visibility * mi,
│                 wind_direction = _.wind_direction * °,
│                 wind_gust = _.wind_gust * mi / hr,
│                 wind_speed = _.wind_speed * mi / hr,
│                 date_time = ZonedDateTime(
│                     _.year,
│                     _.month,
│                     _.day,
│                     _.hour,
│                     indexed_airports[_.airport_code].time_zone,
│                     1
│                 )
│             ) |>
│             remove(_,
│                 name"year",
│                 name"month",
│                 name"day",
│                 name"hour"
│             )
│         end;
│ 
│ julia> weathers =
│         @> weathers_file |>
│         Iterators.map((@_ get_weather(indexed_airports, _)), _);
│ 
│ julia> Peek(weathers)
│ Showing 4 of 26115 rows
│ |           time_hour | airport_code | dew_point |           humidity | precipitation |    pressure | temperature | visibility | wind_direction | wind_gust |        wind_speed |                 date_time |
│ | -------------------:| ------------:| ---------:| ------------------:| -------------:| -----------:| -----------:| ----------:| --------------:| ---------:| -----------------:| -------------------------:|
│ | 2013-01-01 01:00:00 |          EWR |  26.06 °F |             0.5937 |      0.0 inch | 1012.0 mbar |    39.02 °F |    10.0 mi |           270° |   missing | 10.35702 mi hr^-1 | 2013-01-01T01:00:00-05:00 |
│ | 2013-01-01 02:00:00 |          EWR |  26.96 °F | 0.6163000000000001 |      0.0 inch | 1012.3 mbar |    39.02 °F |    10.0 mi |           250° |   missing |  8.05546 mi hr^-1 | 2013-01-01T02:00:00-05:00 |
│ | 2013-01-01 03:00:00 |          EWR |  28.04 °F | 0.6443000000000001 |      0.0 inch | 1012.5 mbar |    39.02 °F |    10.0 mi |           240° |   missing |  11.5078 mi hr^-1 | 2013-01-01T03:00:00-05:00 |
│ | 2013-01-01 04:00:00 |          EWR |  28.04 °F |             0.6221 |      0.0 inch | 1012.2 mbar |    39.92 °F |    10.0 mi |           250° |   missing | 12.65858 mi hr^-1 | 2013-01-01T04:00:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ weathers =
│  @> weathers_file |>
│  Iterators.map((@_ get_weather(indexed_airports, _)), _);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weathers_file not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: weathers_file not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:445-501
│ 
│ ```jldoctest flights
│ julia> weathers_file =
│         @> File("weather.csv") |>
│         columntable |>
│         Rows(; _...);
│ 
│ julia> function get_weather(indexed_airports, row)
│             @> row |>
│             rename(_,
│                 airport_code = name"origin",
│                 dew_point = name"dewp",
│                 humidity = name"humid",
│                 precipitation = name"precip",
│                 temperature = name"temp",
│                 visibility = name"visib",
│                 wind_direction = name"wind_dir"
│             ) |>
│             transform(_,
│                 dew_point = _.dew_point * °F,
│                 humidity = _.humidity / 100,
│                 precipitation = _.precipitation * inch,
│                 pressure = _.pressure * mbar,
│                 temperature = _.temperature * °F,
│                 visibility = _.visibility * mi,
│                 wind_direction = _.wind_direction * °,
│                 wind_gust = _.wind_gust * mi / hr,
│                 wind_speed = _.wind_speed * mi / hr,
│                 date_time = ZonedDateTime(
│                     _.year,
│                     _.month,
│                     _.day,
│                     _.hour,
│                     indexed_airports[_.airport_code].time_zone,
│                     1
│                 )
│             ) |>
│             remove(_,
│                 name"year",
│                 name"month",
│                 name"day",
│                 name"hour"
│             )
│         end;
│ 
│ julia> weathers =
│         @> weathers_file |>
│         Iterators.map((@_ get_weather(indexed_airports, _)), _);
│ 
│ julia> Peek(weathers)
│ Showing 4 of 26115 rows
│ |           time_hour | airport_code | dew_point |           humidity | precipitation |    pressure | temperature | visibility | wind_direction | wind_gust |        wind_speed |                 date_time |
│ | -------------------:| ------------:| ---------:| ------------------:| -------------:| -----------:| -----------:| ----------:| --------------:| ---------:| -----------------:| -------------------------:|
│ | 2013-01-01 01:00:00 |          EWR |  26.06 °F |             0.5937 |      0.0 inch | 1012.0 mbar |    39.02 °F |    10.0 mi |           270° |   missing | 10.35702 mi hr^-1 | 2013-01-01T01:00:00-05:00 |
│ | 2013-01-01 02:00:00 |          EWR |  26.96 °F | 0.6163000000000001 |      0.0 inch | 1012.3 mbar |    39.02 °F |    10.0 mi |           250° |   missing |  8.05546 mi hr^-1 | 2013-01-01T02:00:00-05:00 |
│ | 2013-01-01 03:00:00 |          EWR |  28.04 °F | 0.6443000000000001 |      0.0 inch | 1012.5 mbar |    39.02 °F |    10.0 mi |           240° |   missing |  11.5078 mi hr^-1 | 2013-01-01T03:00:00-05:00 |
│ | 2013-01-01 04:00:00 |          EWR |  28.04 °F |             0.6221 |      0.0 inch | 1012.2 mbar |    39.92 °F |    10.0 mi |           250° |   missing | 12.65858 mi hr^-1 | 2013-01-01T04:00:00-05:00 |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(weathers)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weathers not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing 4 of 26115 rows
│ |           time_hour | airport_code | dew_point |           humidity | precipitation |    pressure | temperature | visibility | wind_direction | wind_gust |        wind_speed |                 date_time |
│ | -------------------:| ------------:| ---------:| ------------------:| -------------:| -----------:| -----------:| ----------:| --------------:| ---------:| -----------------:| -------------------------:|
│ | 2013-01-01 01:00:00 |          EWR |  26.06 °F |             0.5937 |      0.0 inch | 1012.0 mbar |    39.02 °F |    10.0 mi |           270° |   missing | 10.35702 mi hr^-1 | 2013-01-01T01:00:00-05:00 |
│ | 2013-01-01 02:00:00 |          EWR |  26.96 °F | 0.6163000000000001 |      0.0 inch | 1012.3 mbar |    39.02 °F |    10.0 mi |           250° |   missing |  8.05546 mi hr^-1 | 2013-01-01T02:00:00-05:00 |
│ | 2013-01-01 03:00:00 |          EWR |  28.04 °F | 0.6443000000000001 |      0.0 inch | 1012.5 mbar |    39.02 °F |    10.0 mi |           240° |   missing |  11.5078 mi hr^-1 | 2013-01-01T03:00:00-05:00 |
│ | 2013-01-01 04:00:00 |          EWR |  28.04 °F |             0.6221 |      0.0 inch | 1012.2 mbar |    39.92 °F |    10.0 mi |           250° |   missing | 12.65858 mi hr^-1 | 2013-01-01T04:00:00-05:00 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing 4 of 26115 rows
│    |           time_hour | airport_code | dew_point |           humidity | precipitation |    pressure | temperature | visibility | wind_direction | wind_gust |        wind_speed |                 date_time |
│    | -------------------:| ------------:| ---------:| ------------------:| -------------:| -----------:| -----------:| ----------:| --------------:| ---------:| -----------------:| -------------------------:|
│    | 2013-01-01 01:00:00 |          EWR |  26.06 °F |             0.5937 |      0.0 inch | 1012.0 mbar |    39.02 °F |    10.0 mi |           270° |   missing | 10.35702 mi hr^-1 | 2013-01-01T01:00:00-05:00 |
│    | 2013-01-01 02:00:00 |          EWR |  26.96 °F | 0.6163000000000001 |      0.0 inch | 1012.3 mbar |    39.02 °F |    10.0 mi |           250° |   missing |  8.05546 mi hr^-1 | 2013-01-01T02:00:00-05:00 |
│    | 2013-01-01 03:00:00 |          EWR |  28.04 °F | 0.6443000000000001 |      0.0 inch | 1012.5 mbar |    39.02 °F |    10.0 mi |           240° |   missing |  11.5078 mi hr^-1 | 2013-01-01T03:00:00-05:00 |
│    | 2013-01-01 04:00:00 |          EWR |  28.04 °F |             0.6221 |      0.0 inch | 1012.2 mbar |    39.92 °F |    10.0 mi |           250° |   missing | 12.65858 mi hr^-1 | 2013-01-01T04:00:00-05:00 |ERROR: UndefVarError: weathers not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:509-518
│ 
│ ```jldoctest flights
│ julia> grouped_flights =
│         @> flights |>
│         Iterators.filter((@_ _.departure_delay !== missing), _) |>
│         order(_, (name"origin", name"scheduled_departure_time")) |>
│         Group(By(_, @_ (_.origin, floor(_.scheduled_departure_time, Hour))));
│ 
│ julia> key(first(grouped_flights))
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ ```
│ 
│ Subexpression:
│ 
│ grouped_flights =
│  @> flights |>
│  Iterators.filter((@_ _.departure_delay !== missing), _) |>
│  order(_, (name"origin", name"scheduled_departure_time")) |>
│  Group(By(_, @_ (_.origin, floor(_.scheduled_departure_time, Hour))));
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:509-518
│ 
│ ```jldoctest flights
│ julia> grouped_flights =
│         @> flights |>
│         Iterators.filter((@_ _.departure_delay !== missing), _) |>
│         order(_, (name"origin", name"scheduled_departure_time")) |>
│         Group(By(_, @_ (_.origin, floor(_.scheduled_departure_time, Hour))));
│ 
│ julia> key(first(grouped_flights))
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ ```
│ 
│ Subexpression:
│ 
│ key(first(grouped_flights))
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: grouped_flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))ERROR: UndefVarError: grouped_flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:522-527
│ 
│ ```jldoctest flights
│ julia> weathers_to_flights = @> InnerJoin(
│             By(weathers, @_ (_.airport_code, _.date_time)),
│             By(grouped_flights, key)
│         );
│ 
│ ```
│ 
│ Subexpression:
│ 
│ weathers_to_flights = @> InnerJoin(
│      By(weathers, @_ (_.airport_code, _.date_time)),
│      By(grouped_flights, key)
│  );
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weathers not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: weathers not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:532-548
│ 
│ ```jldoctest flights
│ julia> a_match = first(weathers_to_flights);
│ 
│ julia> weather, (flights_key, flights_value) = a_match;
│ 
│ julia> weather
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> flights_key
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> Peek(flights_value)
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ ```
│ 
│ Subexpression:
│ 
│ a_match = first(weathers_to_flights);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weathers_to_flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: weathers_to_flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:532-548
│ 
│ ```jldoctest flights
│ julia> a_match = first(weathers_to_flights);
│ 
│ julia> weather, (flights_key, flights_value) = a_match;
│ 
│ julia> weather
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> flights_key
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> Peek(flights_value)
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ ```
│ 
│ Subexpression:
│ 
│ weather, (flights_key, flights_value) = a_match;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: a_match not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: a_match not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:532-548
│ 
│ ```jldoctest flights
│ julia> a_match = first(weathers_to_flights);
│ 
│ julia> weather, (flights_key, flights_value) = a_match;
│ 
│ julia> weather
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> flights_key
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> Peek(flights_value)
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ ```
│ 
│ Subexpression:
│ 
│ weather
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weather not defined
│ 
│ Expected output:
│ 
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))ERROR: UndefVarError: weather not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:532-548
│ 
│ ```jldoctest flights
│ julia> a_match = first(weathers_to_flights);
│ 
│ julia> weather, (flights_key, flights_value) = a_match;
│ 
│ julia> weather
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> flights_key
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> Peek(flights_value)
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ ```
│ 
│ Subexpression:
│ 
│ flights_key
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_key not defined
│ 
│ Expected output:
│ 
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))ERROR: UndefVarError: flights_key not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:532-548
│ 
│ ```jldoctest flights
│ julia> a_match = first(weathers_to_flights);
│ 
│ julia> weather, (flights_key, flights_value) = a_match;
│ 
│ julia> weather
│ (time_hour = "2013-01-01 05:00:00", airport_code = "EWR", dew_point = 28.04 °F, humidity = 0.6443000000000001, precipitation = 0.0 inch, pressure = 1011.9 mbar, temperature = 39.02 °F, visibility = 10.0 mi, wind_direction = 260°, wind_gust = missing, wind_speed = 12.65858 mi hr^-1, date_time = ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> flights_key
│ ("EWR", ZonedDateTime(2013, 1, 1, 5, tz"America/New_York"))
│ 
│ julia> Peek(flights_value)
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(flights_value)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_value not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│ | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│ |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│ |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    | carrier | flight | origin | destination | tail_number |   air_time | distance | departure_delay | arrival_delay |  scheduled_departure_time |    scheduled_arrival_time |
│    | -------:| ------:| ------:| -----------:| -----------:| ----------:| --------:| ---------------:| -------------:| -------------------------:| -------------------------:|
│    |      UA |   1545 |    EWR |         IAH |      N14228 | 227 minute |  1400 mi |        2 minute |     11 minute | 2013-01-01T05:15:00-05:00 | 2013-01-01T08:19:00-06:00 |
│    |      UA |   1696 |    EWR |         ORD |      N39463 | 150 minute |   719 mi |       -4 minute |     12 minute | 2013-01-01T05:58:00-05:00 | 2013-01-01T07:28:00-06:00 |ERROR: UndefVarError: flights_value not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:552-564
│ 
│ ```jldoctest flights
│ julia> visibility = weather.visibility;
│ 
│ julia> Iterators.map((@_ (
│             visibility = visibility,
│             departure_delay = _.departure_delay
│         )), flights_value) |>
│         Peek
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ ```
│ 
│ Subexpression:
│ 
│ visibility = weather.visibility;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weather not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: weather not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:552-564
│ 
│ ```jldoctest flights
│ julia> visibility = weather.visibility;
│ 
│ julia> Iterators.map((@_ (
│             visibility = visibility,
│             departure_delay = _.departure_delay
│         )), flights_value) |>
│         Peek
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ ```
│ 
│ Subexpression:
│ 
│ Iterators.map((@_ (
│      visibility = visibility,
│      departure_delay = _.departure_delay
│  )), flights_value) |>
│  Peek
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: flights_value not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ 
│   diff =
│    Warning: Diff output requires color.
│    | visibility | departure_delay |
│    | ----------:| ---------------:|
│    |    10.0 mi |        2 minute |
│    |    10.0 mi |       -4 minute |ERROR: UndefVarError: flights_value not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:568-583
│ 
│ ```jldoctest flights
│ julia> function interested_in(a_match)
│             weather, (flights_key, flights_value) = a_match
│             visibility = weather.visibility
│             Iterators.map((@_ (
│                 visibility = visibility,
│                 departure_delay = _.departure_delay
│             )), flights_value)
│         end;
│ 
│ julia> Peek(interested_in(a_match))
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(interested_in(a_match))
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: a_match not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ 
│   diff =
│    Warning: Diff output requires color.
│    | visibility | departure_delay |
│    | ----------:| ---------------:|
│    |    10.0 mi |        2 minute |
│    |    10.0 mi |       -4 minute |ERROR: UndefVarError: a_match not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:587-603
│ 
│ ```jldoctest flights
│ julia> data =
│         @> weathers_to_flights |>
│         Iterators.map(interested_in, _) |>
│         flatten |>
│         make_columns |>
│         Rows(; _...);
│ 
│ julia> Peek(data)
│ Showing 4 of 326993 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ |    10.0 mi |       -5 minute |
│ |    10.0 mi |       -2 minute |
│ ```
│ 
│ Subexpression:
│ 
│ data =
│  @> weathers_to_flights |>
│  Iterators.map(interested_in, _) |>
│  flatten |>
│  make_columns |>
│  Rows(; _...);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: weathers_to_flights not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: weathers_to_flights not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:587-603
│ 
│ ```jldoctest flights
│ julia> data =
│         @> weathers_to_flights |>
│         Iterators.map(interested_in, _) |>
│         flatten |>
│         make_columns |>
│         Rows(; _...);
│ 
│ julia> Peek(data)
│ Showing 4 of 326993 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ |    10.0 mi |       -5 minute |
│ |    10.0 mi |       -2 minute |
│ ```
│ 
│ Subexpression:
│ 
│ Peek(data)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: data not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing 4 of 326993 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |    10.0 mi |        2 minute |
│ |    10.0 mi |       -4 minute |
│ |    10.0 mi |       -5 minute |
│ |    10.0 mi |       -2 minute |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing 4 of 326993 rows
│    | visibility | departure_delay |
│    | ----------:| ---------------:|
│    |    10.0 mi |        2 minute |
│    |    10.0 mi |       -4 minute |
│    |    10.0 mi |       -5 minute |
│    |    10.0 mi |       -2 minute |ERROR: UndefVarError: data not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:609-628
│ 
│ ```jldoctest flights
│ julia> by_visibility =
│         @> data |>
│         order(_, name"visibility") |>
│         Group(By(_, name"visibility"));
│ 
│ julia> visibility_group = first(by_visibility);
│ 
│ julia> key(visibility_group)
│ 0.0 mi
│ 
│ julia> value(visibility_group) |> Peek
│ Showing 4 of 87 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |     0.0 mi |       -5 minute |
│ |     0.0 mi |       -1 minute |
│ |     0.0 mi |       -8 minute |
│ |     0.0 mi |       -7 minute |
│ ```
│ 
│ Subexpression:
│ 
│ by_visibility =
│  @> data |>
│  order(_, name"visibility") |>
│  Group(By(_, name"visibility"));
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: data not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: data not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:609-628
│ 
│ ```jldoctest flights
│ julia> by_visibility =
│         @> data |>
│         order(_, name"visibility") |>
│         Group(By(_, name"visibility"));
│ 
│ julia> visibility_group = first(by_visibility);
│ 
│ julia> key(visibility_group)
│ 0.0 mi
│ 
│ julia> value(visibility_group) |> Peek
│ Showing 4 of 87 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |     0.0 mi |       -5 minute |
│ |     0.0 mi |       -1 minute |
│ |     0.0 mi |       -8 minute |
│ |     0.0 mi |       -7 minute |
│ ```
│ 
│ Subexpression:
│ 
│ visibility_group = first(by_visibility);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: by_visibility not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: by_visibility not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:609-628
│ 
│ ```jldoctest flights
│ julia> by_visibility =
│         @> data |>
│         order(_, name"visibility") |>
│         Group(By(_, name"visibility"));
│ 
│ julia> visibility_group = first(by_visibility);
│ 
│ julia> key(visibility_group)
│ 0.0 mi
│ 
│ julia> value(visibility_group) |> Peek
│ Showing 4 of 87 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |     0.0 mi |       -5 minute |
│ |     0.0 mi |       -1 minute |
│ |     0.0 mi |       -8 minute |
│ |     0.0 mi |       -7 minute |
│ ```
│ 
│ Subexpression:
│ 
│ key(visibility_group)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: visibility_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 0.0 mi
│ 
│   diff =
│    Warning: Diff output requires color.
│    0.0 miERROR: UndefVarError: visibility_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:609-628
│ 
│ ```jldoctest flights
│ julia> by_visibility =
│         @> data |>
│         order(_, name"visibility") |>
│         Group(By(_, name"visibility"));
│ 
│ julia> visibility_group = first(by_visibility);
│ 
│ julia> key(visibility_group)
│ 0.0 mi
│ 
│ julia> value(visibility_group) |> Peek
│ Showing 4 of 87 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |     0.0 mi |       -5 minute |
│ |     0.0 mi |       -1 minute |
│ |     0.0 mi |       -8 minute |
│ |     0.0 mi |       -7 minute |
│ ```
│ 
│ Subexpression:
│ 
│ value(visibility_group) |> Peek
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: visibility_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing 4 of 87 rows
│ | visibility | departure_delay |
│ | ----------:| ---------------:|
│ |     0.0 mi |       -5 minute |
│ |     0.0 mi |       -1 minute |
│ |     0.0 mi |       -8 minute |
│ |     0.0 mi |       -7 minute |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing 4 of 87 rows
│    | visibility | departure_delay |
│    | ----------:| ---------------:|
│    |     0.0 mi |       -5 minute |
│    |     0.0 mi |       -1 minute |
│    |     0.0 mi |       -8 minute |
│    |     0.0 mi |       -7 minute |ERROR: UndefVarError: visibility_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:632-640
│ 
│ ```jldoctest flights
│ julia> using Statistics: mean
│ 
│ julia> @> visibility_group |>
│         value |>
│         Iterators.map(name"departure_delay", _) |>
│         mean
│ 32.252873563218394 minute
│ ```
│ 
│ Subexpression:
│ 
│ @> visibility_group |>
│  value |>
│  Iterators.map(name"departure_delay", _) |>
│  mean
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: visibility_group not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 32.252873563218394 minute
│ 
│   diff =
│    Warning: Diff output requires color.
│    32.252873563218394 minuteERROR: UndefVarError: visibility_group not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/docs/src/beginner_tutorial.md:644-681
│ 
│ ```jldoctest flights
│ julia> get_mean_departure_delay(visibility_group) = (
│             visibility = key(visibility_group),
│             mean_departure_delay =
│                 (@> visibility_group |>
│                     value |>
│                     Iterators.map(name"departure_delay", _) |>
│                     mean),
│             count = length(value(visibility_group))
│         );
│ 
│ julia> @> by_visibility |>
│             Iterators.map(get_mean_departure_delay, _) |>
│             Peek(_, 20)
│ Showing at most 20 rows
│ | visibility |      mean_departure_delay |  count |
│ | ----------:| -------------------------:| ------:|
│ |     0.0 mi | 32.252873563218394 minute |     87 |
│ |    0.06 mi |               22.2 minute |     85 |
│ |    0.12 mi |  50.69975186104218 minute |    403 |
│ |    0.25 mi | 20.481110254433307 minute |   1297 |
│ |     0.5 mi |   32.5890826383624 minute |   1319 |
│ |    0.75 mi |  30.06759906759907 minute |    429 |
│ |     1.0 mi |  32.24348473566642 minute |   1343 |
│ |    1.25 mi | 53.187845303867405 minute |    181 |
│ |     1.5 mi |  25.90661478599222 minute |   1542 |
│ |    1.75 mi | 43.333333333333336 minute |    132 |
│ |     2.0 mi | 22.701923076923077 minute |   2912 |
│ |     2.5 mi |  21.18074398249453 minute |   2285 |
│ |     3.0 mi |   21.2113218731476 minute |   3374 |
│ |     4.0 mi |  19.48311444652908 minute |   2132 |
│ |     5.0 mi |  21.10387902695595 minute |   4563 |
│ |     6.0 mi | 19.807032301480483 minute |   5944 |
│ |     7.0 mi | 19.208963745361118 minute |   7006 |
│ |     8.0 mi |  19.98660103910309 minute |   7314 |
│ |     9.0 mi | 18.762949476558944 minute |  10985 |
│ |    10.0 mi | 10.951549367828692 minute | 273660 |
│ ```
│ 
│ Subexpression:
│ 
│ @> by_visibility |>
│      Iterators.map(get_mean_departure_delay, _) |>
│      Peek(_, 20)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: by_visibility not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ Showing at most 20 rows
│ | visibility |      mean_departure_delay |  count |
│ | ----------:| -------------------------:| ------:|
│ |     0.0 mi | 32.252873563218394 minute |     87 |
│ |    0.06 mi |               22.2 minute |     85 |
│ |    0.12 mi |  50.69975186104218 minute |    403 |
│ |    0.25 mi | 20.481110254433307 minute |   1297 |
│ |     0.5 mi |   32.5890826383624 minute |   1319 |
│ |    0.75 mi |  30.06759906759907 minute |    429 |
│ |     1.0 mi |  32.24348473566642 minute |   1343 |
│ |    1.25 mi | 53.187845303867405 minute |    181 |
│ |     1.5 mi |  25.90661478599222 minute |   1542 |
│ |    1.75 mi | 43.333333333333336 minute |    132 |
│ |     2.0 mi | 22.701923076923077 minute |   2912 |
│ |     2.5 mi |  21.18074398249453 minute |   2285 |
│ |     3.0 mi |   21.2113218731476 minute |   3374 |
│ |     4.0 mi |  19.48311444652908 minute |   2132 |
│ |     5.0 mi |  21.10387902695595 minute |   4563 |
│ |     6.0 mi | 19.807032301480483 minute |   5944 |
│ |     7.0 mi | 19.208963745361118 minute |   7006 |
│ |     8.0 mi |  19.98660103910309 minute |   7314 |
│ |     9.0 mi | 18.762949476558944 minute |  10985 |
│ |    10.0 mi | 10.951549367828692 minute | 273660 |
│ 
│   diff =
│    Warning: Diff output requires color.
│    Showing at most 20 rows
│    | visibility |      mean_departure_delay |  count |
│    | ----------:| -------------------------:| ------:|
│    |     0.0 mi | 32.252873563218394 minute |     87 |
│    |    0.06 mi |               22.2 minute |     85 |
│    |    0.12 mi |  50.69975186104218 minute |    403 |
│    |    0.25 mi | 20.481110254433307 minute |   1297 |
│    |     0.5 mi |   32.5890826383624 minute |   1319 |
│    |    0.75 mi |  30.06759906759907 minute |    429 |
│    |     1.0 mi |  32.24348473566642 minute |   1343 |
│    |    1.25 mi | 53.187845303867405 minute |    181 |
│    |     1.5 mi |  25.90661478599222 minute |   1542 |
│    |    1.75 mi | 43.333333333333336 minute |    132 |
│    |     2.0 mi | 22.701923076923077 minute |   2912 |
│    |     2.5 mi |  21.18074398249453 minute |   2285 |
│    |     3.0 mi |   21.2113218731476 minute |   3374 |
│    |     4.0 mi |  19.48311444652908 minute |   2132 |
│    |     5.0 mi |  21.10387902695595 minute |   4563 |
│    |     6.0 mi | 19.807032301480483 minute |   5944 |
│    |     7.0 mi | 19.208963745361118 minute |   7006 |
│    |     8.0 mi |  19.98660103910309 minute |   7314 |
│    |     9.0 mi | 18.762949476558944 minute |  10985 |
│    |    10.0 mi | 10.951549367828692 minute | 273660 |ERROR: UndefVarError: by_visibility not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:497-517
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(RightJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 4-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (1, -1)
│  (missing, 3)
│  (missing, -4)
│  (-6, 6)
│ 
│ julia> collect(RightJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(RightJoin(By([1], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(RightJoin(By(Int[], abs), By([1], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (missing, 1)
│ ```
│ 
│ Subexpression:
│ 
│ collect(RightJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 
│ Evaluated output:
│ 
│ 4-element Vector{Tuple{Union{Missing, Int64}, Int64}}:
│  (1, -1)
│  (missing, 3)
│  (missing, -4)
│  (-6, 6)
│ 
│ Expected output:
│ 
│ 4-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (1, -1)
│  (missing, 3)
│  (missing, -4)
│  (-6, 6)
│ 
│   diff =
│    Warning: Diff output requires color.
│    4-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│     Vector{Tuple{Union{Missing, Int64}, Int64}}:
│     (1, -1)
│     (missing, 3)
│     (missing, -4)
│     (-6, 6)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:497-517
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(RightJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 4-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (1, -1)
│  (missing, 3)
│  (missing, -4)
│  (-6, 6)
│ 
│ julia> collect(RightJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(RightJoin(By([1], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(RightJoin(By(Int[], abs), By([1], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (missing, 1)
│ ```
│ 
│ Subexpression:
│ 
│ collect(RightJoin(By(Int[], abs), By([1], abs)))
│ 
│ Evaluated output:
│ 
│ 1-element Vector{Tuple{Union{Missing, Int64}, Int64}}:
│  (missing, 1)
│ 
│ Expected output:
│ 
│ 1-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│  (missing, 1)
│ 
│   diff =
│    Warning: Diff output requires color.
│    1-element Array{Tuple{Union{Missing, Int64},Int64},1}:
│     Vector{Tuple{Union{Missing, Int64}, Int64}}:
│     (missing, 1)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:224-233
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> @inferred By([1, -2], abs)
│ By{Array{Int64,1},typeof(abs)}([1, -2], abs)
│ ```
│ 
│ Subexpression:
│ 
│ @inferred By([1, -2], abs)
│ 
│ Evaluated output:
│ 
│ By{Vector{Int64}, typeof(abs)}([1, -2], abs)
│ 
│ Expected output:
│ 
│ By{Array{Int64,1},typeof(abs)}([1, -2], abs)
│ 
│   diff =
│    Warning: Diff output requires color.
│    By{Array{Int64,1},typeof(abs)}([1, By{Vector{Int64}, typeof(abs)}([1, -2], abs)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:251-266
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> @inferred collect(Group(By([1, -1, -2, 2, 3, -3], abs)))
│ 3-element Array{Tuple{Int64,SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}},1}:
│  (1, [1, -1])
│  (2, [-2, 2])
│  (3, [3, -3])
│ 
│ julia> (@inferred collect(Group(By(Int[], abs)))) == []
│ true
│ ```
│ 
│ Subexpression:
│ 
│ @inferred collect(Group(By([1, -1, -2, 2, 3, -3], abs)))
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Tuple{Int64, SubArray{Int64, 1, Vector{Int64}, Tuple{UnitRange{Int64}}, true}}}:
│  (1, [1, -1])
│  (2, [-2, 2])
│  (3, [3, -3])
│ 
│ Expected output:
│ 
│ 3-element Array{Tuple{Int64,SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}},1}:
│  (1, [1, -1])
│  (2, [-2, 2])
│  (3, [3, -3])
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Tuple{Int64,SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}},1}:
│     Vector{Tuple{Int64, SubArray{Int64, 1, Vector{Int64}, Tuple{UnitRange{Int64}}, true}}}:
│     (1, [1, -1])
│     (2, [-2, 2])
│     (3, [3, -3])
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:270-287
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> first_group = @> [2, 1, 2, 1] |> order(_, identity) |> Group(By(_, identity)) |> first;
│ 
│ 
│ julia> key(first_group)
│ 1
│ 
│ julia> collect(value(first_group))
│ 2-element Array{Int64,1}:
│  1
│  1
│ ```
│ 
│ Subexpression:
│ 
│ collect(value(first_group))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Int64}:
│  1
│  1
│ 
│ Expected output:
│ 
│ 2-element Array{Int64,1}:
│  1
│  1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Int64,1}:
│     Vector{Int64}:
│     1
│     1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:189-203
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> result = @inferred index([-2, 1], abs)
│ LightQuery.Indexed{Int64,Int64,Array{Int64,1},Dict{Int64,Int64}} with 2 entries:
│   2 => -2
│   1 => 1
│ 
│ julia> @inferred result[2]
│ -2
│ ```
│ 
│ Subexpression:
│ 
│ result = @inferred index([-2, 1], abs)
│ 
│ Evaluated output:
│ 
│ LightQuery.Indexed{Int64, Int64, Vector{Int64}, Dict{Int64, Int64}} with 2 entries:
│   2 => -2
│   1 => 1
│ 
│ Expected output:
│ 
│ LightQuery.Indexed{Int64,Int64,Array{Int64,1},Dict{Int64,Int64}} with 2 entries:
│   2 => -2
│   1 => 1
│ 
│   diff =
│    Warning: Diff output requires color.
│    LightQuery.Indexed{Int64,Int64,Array{Int64,1},Dict{Int64,Int64}} LightQuery.Indexed{Int64, Int64, Vector{Int64}, Dict{Int64, Int64}} with 2 entries:
│      2 => -2
│      1 => 1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:6-17
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> @inferred collect(Enumerate(Iterators.filter(iseven, [4, 3, 2, 1])))
│ 2-element Array{Tuple{Int64,Int64},1}:
│  (1, 4)
│  (3, 2)
│ ```
│ 
│ Subexpression:
│ 
│ @inferred collect(Enumerate(Iterators.filter(iseven, [4, 3, 2, 1])))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Tuple{Int64, Int64}}:
│  (1, 4)
│  (3, 2)
│ 
│ Expected output:
│ 
│ 2-element Array{Tuple{Int64,Int64},1}:
│  (1, 4)
│  (3, 2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Tuple{Int64,Int64},1}:
│     Vector{Tuple{Int64, Int64}}:
│     (1, 4)
│     (3, 2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:106-117
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> collect(@inferred order([1, -2], Backwards))
│ 2-element Array{Int64,1}:
│   1
│  -2
│ ```
│ 
│ Subexpression:
│ 
│ collect(@inferred order([1, -2], Backwards))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Int64}:
│   1
│  -2
│ 
│ Expected output:
│ 
│ 2-element Array{Int64,1}:
│   1
│  -2
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Int64,1}:
│      Vector{Int64}:
│      1
│     -2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:431-451
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(LeftJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 4-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (5, missing)
│  (-6, 6)
│ 
│ julia> collect(LeftJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(LeftJoin(By([1], abs), By(Int[], abs)))
│ 1-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│ julia> collect(LeftJoin(By(Int[], abs), By([1], abs))) == []
│ true
│ ```
│ 
│ Subexpression:
│ 
│ collect(LeftJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 
│ Evaluated output:
│ 
│ 4-element Vector{Tuple{Int64, Union{Missing, Int64}}}:
│  (1, -1)
│  (-2, missing)
│  (5, missing)
│  (-6, 6)
│ 
│ Expected output:
│ 
│ 4-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (5, missing)
│  (-6, 6)
│ 
│   diff =
│    Warning: Diff output requires color.
│    4-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│     Vector{Tuple{Int64, Union{Missing, Int64}}}:
│     (1, -1)
│     (-2, missing)
│     (5, missing)
│     (-6, 6)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:431-451
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(LeftJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 4-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (5, missing)
│  (-6, 6)
│ 
│ julia> collect(LeftJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(LeftJoin(By([1], abs), By(Int[], abs)))
│ 1-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│ julia> collect(LeftJoin(By(Int[], abs), By([1], abs))) == []
│ true
│ ```
│ 
│ Subexpression:
│ 
│ collect(LeftJoin(By([1], abs), By(Int[], abs)))
│ 
│ Evaluated output:
│ 
│ 1-element Vector{Tuple{Int64, Union{Missing, Int64}}}:
│  (1, missing)
│ 
│ Expected output:
│ 
│ 1-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│   diff =
│    Warning: Diff output requires color.
│    1-element Array{Tuple{Int64,Union{Missing, Int64}},1}:
│     Vector{Tuple{Int64, Union{Missing, Int64}}}:
│     (1, missing)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:714-722
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(Length(Iterators.filter(iseven, 1:4), 2))
│ 2-element Array{Int64,1}:
│  2
│  4
│ ```
│ 
│ Subexpression:
│ 
│ collect(Length(Iterators.filter(iseven, 1:4), 2))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Int64}:
│  2
│  4
│ 
│ Expected output:
│ 
│ 2-element Array{Int64,1}:
│  2
│  4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Int64,1}:
│     Vector{Int64}:
│     2
│     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/make_columns.jl:51-72
│ 
│ ```jldoctest Rows
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> lazy = @inferred Rows(a = [1, 2], b = [1.0, 2.0])
│ 2-element Rows{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1,Tuple{Array{Int64,1},Array{Float64,1}},Tuple{Name{:a},Name{:b}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred collect(lazy)
│ 2-element Array{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred Rows(a = [1, 2])
│ 2-element Rows{NamedTuple{(:a,),Tuple{Int64}},1,Tuple{Array{Int64,1}},Tuple{Name{:a}}}:
│  (a = 1,)
│  (a = 2,)
│ ```
│ 
│ Subexpression:
│ 
│ lazy = @inferred Rows(a = [1, 2], b = [1.0, 2.0])
│ 
│ Evaluated output:
│ 
│ 2-element Rows{NamedTuple{(:a, :b), Tuple{Int64, Float64}}, 1, Tuple{Vector{Int64}, Vector{Float64}}, Tuple{Name{:a}, Name{:b}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ Expected output:
│ 
│ 2-element Rows{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1,Tuple{Array{Int64,1},Array{Float64,1}},Tuple{Name{:a},Name{:b}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Rows{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1,Tuple{Array{Int64,1},Array{Float64,1}},Tuple{Name{:a},Name{:b}}}:
│     :b), Tuple{Int64, Float64}}, 1, Tuple{Vector{Int64}, Vector{Float64}}, Tuple{Name{:a}, Name{:b}}}:
│     (a = 1, b = 1.0)
│     (a = 2, b = 2.0)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/make_columns.jl:51-72
│ 
│ ```jldoctest Rows
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> lazy = @inferred Rows(a = [1, 2], b = [1.0, 2.0])
│ 2-element Rows{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1,Tuple{Array{Int64,1},Array{Float64,1}},Tuple{Name{:a},Name{:b}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred collect(lazy)
│ 2-element Array{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred Rows(a = [1, 2])
│ 2-element Rows{NamedTuple{(:a,),Tuple{Int64}},1,Tuple{Array{Int64,1}},Tuple{Name{:a}}}:
│  (a = 1,)
│  (a = 2,)
│ ```
│ 
│ Subexpression:
│ 
│ @inferred collect(lazy)
│ 
│ Evaluated output:
│ 
│ 2-element Vector{NamedTuple{(:a, :b), Tuple{Int64, Float64}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ Expected output:
│ 
│ 2-element Array{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1}:
│     Vector{NamedTuple{(:a, :b), Tuple{Int64, Float64}}}:
│     (a = 1, b = 1.0)
│     (a = 2, b = 2.0)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/make_columns.jl:51-72
│ 
│ ```jldoctest Rows
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> lazy = @inferred Rows(a = [1, 2], b = [1.0, 2.0])
│ 2-element Rows{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1,Tuple{Array{Int64,1},Array{Float64,1}},Tuple{Name{:a},Name{:b}}}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred collect(lazy)
│ 2-element Array{NamedTuple{(:a, :b),Tuple{Int64,Float64}},1}:
│  (a = 1, b = 1.0)
│  (a = 2, b = 2.0)
│ 
│ julia> @inferred Rows(a = [1, 2])
│ 2-element Rows{NamedTuple{(:a,),Tuple{Int64}},1,Tuple{Array{Int64,1}},Tuple{Name{:a}}}:
│  (a = 1,)
│  (a = 2,)
│ ```
│ 
│ Subexpression:
│ 
│ @inferred Rows(a = [1, 2])
│ 
│ Evaluated output:
│ 
│ 2-element Rows{NamedTuple{(:a,), Tuple{Int64}}, 1, Tuple{Vector{Int64}}, Tuple{Name{:a}}}:
│  (a = 1,)
│  (a = 2,)
│ 
│ Expected output:
│ 
│ 2-element Rows{NamedTuple{(:a,),Tuple{Int64}},1,Tuple{Array{Int64,1}},Tuple{Name{:a}}}:
│  (a = 1,)
│  (a = 2,)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Rows{NamedTuple{(:a,),Tuple{Int64}},1,Tuple{Array{Int64,1}},Tuple{Name{:a}}}:
│     Rows{NamedTuple{(:a,), Tuple{Int64}}, 1, Tuple{Vector{Int64}}, Tuple{Name{:a}}}:
│     (a = 1,)
│     (a = 2,)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:81-92
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> collect(@inferred order([-2, 1], abs))
│ 2-element Array{Int64,1}:
│   1
│  -2
│ ```
│ 
│ Subexpression:
│ 
│ collect(@inferred order([-2, 1], abs))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Int64}:
│   1
│  -2
│ 
│ Expected output:
│ 
│ 2-element Array{Int64,1}:
│   1
│  -2
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Int64,1}:
│      Vector{Int64}:
│      1
│     -2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:563-586
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(OuterJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 6-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (missing, 3)
│  (missing, -4)
│  (5, missing)
│  (-6, 6)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(OuterJoin(By([1], abs), By(Int[], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By([1], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (missing, 1)
│ ```
│ 
│ Subexpression:
│ 
│ collect(OuterJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 
│ Evaluated output:
│ 
│ 6-element Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│  (1, -1)
│  (-2, missing)
│  (missing, 3)
│  (missing, -4)
│  (5, missing)
│  (-6, 6)
│ 
│ Expected output:
│ 
│ 6-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (missing, 3)
│  (missing, -4)
│  (5, missing)
│  (-6, 6)
│ 
│   diff =
│    Warning: Diff output requires color.
│    6-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│     Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│     (1, -1)
│     (-2, missing)
│     (missing, 3)
│     (missing, -4)
│     (5, missing)
│     (-6, 6)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:563-586
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(OuterJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 6-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (missing, 3)
│  (missing, -4)
│  (5, missing)
│  (-6, 6)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(OuterJoin(By([1], abs), By(Int[], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By([1], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (missing, 1)
│ ```
│ 
│ Subexpression:
│ 
│ collect(OuterJoin(By([1], abs), By(Int[], abs)))
│ 
│ Evaluated output:
│ 
│ 1-element Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│  (1, missing)
│ 
│ Expected output:
│ 
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│   diff =
│    Warning: Diff output requires color.
│    1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│     Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│     (1, missing)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:563-586
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> collect(OuterJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 6-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, -1)
│  (-2, missing)
│  (missing, 3)
│  (missing, -4)
│  (5, missing)
│  (-6, 6)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By(Int[], abs))) == []
│ true
│ 
│ julia> collect(OuterJoin(By([1], abs), By(Int[], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (1, missing)
│ 
│ julia> collect(OuterJoin(By(Int[], abs), By([1], abs)))
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (missing, 1)
│ ```
│ 
│ Subexpression:
│ 
│ collect(OuterJoin(By(Int[], abs), By([1], abs)))
│ 
│ Evaluated output:
│ 
│ 1-element Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│  (missing, 1)
│ 
│ Expected output:
│ 
│ 1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│  (missing, 1)
│ 
│   diff =
│    Warning: Diff output requires color.
│    1-element Array{Tuple{Union{Missing, Int64},Union{Missing, Int64}},1}:
│     Vector{Tuple{Union{Missing, Int64}, Union{Missing, Int64}}}:
│     (missing, 1)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LightQuery/U9mHU/src/rows.jl:379-399
│ 
│ ```jldoctest
│ julia> using LightQuery
│ 
│ 
│ julia> using Test: @inferred
│ 
│ 
│ julia> @inferred collect(InnerJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 2-element Array{Tuple{Int64,Int64},1}:
│  (1, -1)
│  (-6, 6)
│ 
│ julia> (@inferred collect(InnerJoin(By(Int[], abs), By(Int[], abs)))) == []
│ true
│ 
│ julia> (@inferred collect(InnerJoin(By([1], abs), By(Int[], abs)))) == []
│ true
│ 
│ julia> (@inferred collect(InnerJoin(By(Int[], abs), By([1], abs)))) == []
│ true
│ ```
│ 
│ Subexpression:
│ 
│ @inferred collect(InnerJoin(By([1, -2, 5, -6], abs), By([-1, 3, -4, 6], abs)))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Tuple{Int64, Int64}}:
│  (1, -1)
│  (-6, 6)
│ 
│ Expected output:
│ 
│ 2-element Array{Tuple{Int64,Int64},1}:
│  (1, -1)
│  (-6, 6)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Tuple{Int64,Int64},1}:
│     Vector{Tuple{Int64, Int64}}:
│     (1, -1)
│     (-6, 6)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/LightQuery/U9mHU/test/runtests.jl:6
│     [14] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [15] top-level scope
│        @ none:6
│     [16] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [17] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [18] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: LightQuery: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:        | Fail  Total
Doctests: LightQuery |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/LightQuery/U9mHU/test/runtests.jl:6
ERROR: Package LightQuery errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
