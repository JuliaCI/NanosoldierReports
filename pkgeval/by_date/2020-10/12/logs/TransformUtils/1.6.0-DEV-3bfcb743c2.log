Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_QFqnUZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_QFqnUZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04445465359945605 -0.16359888279468618; 0.04445465359945605 0.0 0.044918452929288546; 0.16359888279468618 -0.044918452929288546 0.0])
dAA = so3([0.0 0.09120193915927612 0.19617616436536633; -0.09120193915927612 0.0 -0.02120096198271583; -0.19617616436536633 0.02120096198271583 0.0])
dAA = so3([0.0 -0.03859049629371064 -0.18104457573425736; 0.03859049629371064 0.0 0.023484753092096567; 0.18104457573425736 -0.023484753092096567 0.0])
dAA = Quaternion(0.9976293084439248, [0.04144209487222478, -0.04225682286197545, -0.03510949483984964])
dAA = SO3([0.991519128182094 0.07478062503553967 -0.10629052906216159; -0.08071705420139802 0.9953435985347204 -0.052686601873740434; 0.10185566066777425 0.06081923195213396 0.9929382888249821])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8573052706209937 0.2296272534179351 0.46075915341227897; -0.20426620839096213 0.9732699391533497 -0.10498067274510575; -0.47254945675034343 -0.004117041191239045 0.8812945369720527]), [-0.44918452929288544, -1.6359888279468617, 0.4445465359945605])
xj = SE3(SO3([0.9625776832627928 0.15924753103757966 -0.21928161697431353; -0.20263048890045407 0.9602181020822902 -0.1921511941192339; 0.1799585748232004 0.2293935925258586 0.9565529211997018]), [-0.23484753092096566, -1.8104457573425734, 0.3859049629371064])
Dx = SE3(SO3([0.781574156145171 -0.168016180778922 -0.6007598533877145; 0.023079009141011977 0.970174564083887 -0.24130618421770475; 0.6233852723501195 0.17473373515467572 0.7621410132094081]), [0.2470989373798075, -0.12033463904405961, 0.06539184175280022])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
