Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_lDylI0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_lDylI0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.028526373202308355 0.0051381196358401835; -0.028526373202308355 0.0 0.12299101142551634; -0.0051381196358401835 -0.12299101142551634 0.0])
dAA = so3([0.0 0.044390870347991544 -0.06811234142043722; -0.044390870347991544 0.0 0.2263296188418393; 0.06811234142043722 -0.2263296188418393 0.0])
dAA = so3([0.0 0.006088014582296044 0.12659322556413188; -0.006088014582296044 0.0 -0.04176459935574872; -0.12659322556413188 0.04176459935574872 0.0])
dAA = Quaternion(0.9899570563943969, [-0.12958011551930387, -0.05365610177041166, -0.017749447871638818])
dAA = SO3([0.9875879666854542 0.0382110798658308 0.15234802733733416; -0.018870716738574926 0.991796231192907 -0.12642836644249536; -0.1559291637502827 0.12198421687674402 0.980207093794523])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9799590000552101 0.15115192988333298 -0.12974379485484738; -0.05767044342587169 0.8387110936339841 0.5415143778057511; 0.19066850333984392 -0.5231795060090088 0.8306194834738188]), [-1.2299101142551634, 0.05138119635840183, -0.2852637320230835])
xj = SE3(SO3([0.9616630548526475 0.1353376711317911 -0.23851181040799016; 0.03716442048715636 0.797397987096558 0.6023082732490161; 0.2717038365230195 -0.5880817672288274 0.7617984380869336]), [0.4176459935574872, 1.2659322556413188, -0.06088014582296043])
Dx = SE3(SO3([0.9920524408758169 -0.025489597029616104 -0.12321621238944735; 0.034377559416669506 0.9969154164684604 0.07055377960158715; 0.12103775427893142 -0.0742289219292841 0.9898686423906607]), [1.5872766203495354, 1.1502958387077336, 0.6303140579865589])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
