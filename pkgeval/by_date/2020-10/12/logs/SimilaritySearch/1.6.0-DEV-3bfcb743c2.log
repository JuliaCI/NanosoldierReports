Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed OrderedCollections ─ v1.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.11
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_i9lrFZ/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_i9lrFZ/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(18, 0.0072060823f0), Item(50, 0.012403846f0), Item(1, 0.012797713f0), Item(47, 0.025818229f0)])
Vsorted = Item[Item(18, 0.0072060823f0), Item(50, 0.012403846f0), Item(1, 0.012797713f0), Item(47, 0.025818229f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004022137324015299, 0.0038582007090250652, 301.0, 49.24130580201745))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003447818756103516, 0.0032300710678100585, 301.0, 71.16491496562958))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032943089803059897, 0.0038872321446736654, 301.0, 40.47483682632446))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032244046529134114, 0.0025732994079589845, 301.0, 8.927032639447134))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003265682856241862, 0.0037010669708251952, 301.0, 44.755527874454856))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.24090321858724e-5, 2.3237864176432292e-5, 301.0, 173.2668453603983))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.2830238342285154e-5, 0.007933266957600911, 300.0, 27.739104281994514)
p = PerformanceResult(1.0, 1.0, 1.0, 3.6271413167317707e-5, 2.0798047383626302e-5, 300.0, 27.739104281994514)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003130022684733073, 0.0026007652282714843, 300.0, 1.5814594424443271)
p = PerformanceResult(1.0, 1.0, 1.0, 2.7418136596679688e-5, 1.4201800028483074e-5, 300.0, 1.5814594424443271)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.2830238342285154e-5, 0.007933266957600911, 300.0, 27.739104281994514), PerformanceResult(1.0, 1.0, 1.0, 3.6271413167317707e-5, 2.0798047383626302e-5, 300.0, 27.739104281994514), PerformanceResult(1.0, 1.0, 1.0, 0.003130022684733073, 0.0026007652282714843, 300.0, 1.5814594424443271), PerformanceResult(1.0, 1.0, 1.0, 2.7418136596679688e-5, 1.4201800028483074e-5, 300.0, 1.5814594424443271))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006350255012512207, 0.003294205665588379, 346.76666666666665, 28719.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00685282548268636, 0.0028503020604451496, 302.53333333333336, 6979.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.590251922607422e-5, 7.963180541992187e-6, 92.6, 49.218936163932085))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6164779663085937e-5, 6.834665934244792e-6, 84.23333333333333, 71.16491496562958))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2079874674479166e-5, 8.662541707356771e-6, 87.26666666666667, 40.47483682632446))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.2003720601399736e-5, 6.237030029296876e-5, 93.53333333333333, 44.733749290928245))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8066666666666668, 0.8066666666666668, 0.8066666666666668, 1.9200642903645833e-5, 2.2864341735839845e-5, 70.73333333333333, 182.91782341897488))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-13T06:37:48.099
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9, 0.9, 0.9, 1.2292861938476563e-5, 1.080036163330078e-5, 153.38, 50.842921594157815))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 9.202957153320313e-6, 7.038116455078125e-6, 157.79, 0.0))
*** advance 1 from 1000; 2020-10-13T06:37:48.618
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8892857142857141, 0.885, 0.8867647058823529, 1.397848129272461e-5, 1.2419223785400391e-5, 152.41, 75.6645644120872))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3470649719238281e-5, 8.940696716308594e-6, 156.47, 0.0))
*** advance 1 from 1000; 2020-10-13T06:37:49.128
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8736388888888891, 0.8710000000000002, 0.872198830409357, 1.631021499633789e-5, 1.784086227416992e-5, 154.1, 40.72353671118617))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00022513151168823242, 1.547098159790039e-5, 158.91, 0.0))
*** advance 1 from 1000; 2020-10-13T06:37:49.653
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9170000000000003, 0.9130000000000003, 0.9145000000000003, 8.25333595275879e-5, 0.00019184112548828125, 154.28, 44.43706673081033))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.518747329711914e-5, 0.0002082991600036621, 158.87, 0.0))
*** advance 1 from 1000; 2020-10-13T06:37:49.979
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9710000000000001, 0.9710000000000001, 0.9710000000000001, 1.692056655883789e-5, 4.018068313598633e-5, 170.4, 192.6514647663571))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.2068023681640626e-5, 5.0787925720214846e-5, 176.27, 0.0))
*** advance 1 from 1000; 2020-10-13T06:37:50.554
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9, 0.9, 0.9, 1.3072490692138671e-5, 2.7270317077636718e-5, 153.38, 50.85319160250947))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3148784637451172e-5, 3.206014633178711e-5, 157.79, 0.01739594800164923))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:52
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.757, 0.757, 0.757, 0.001331639289855957, 5.1670074462890625e-5, 199.16, 190.0500021725893))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:52.856
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7889999999999999, 0.7889999999999999, 0.7889999999999999, 0.001164083480834961, 5.6438446044921875e-5, 205.02, 107.07222431898117))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:53.491
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6529999999999998, 0.6529999999999998, 0.6529999999999998, 0.0012249040603637695, 5.40614128112793e-5, 255.77, 2.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:54.101
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.968, 0.9670000000000001, 0.9674736842105263, 0.0011564040184020997, 9.510517120361328e-6, 217.76, 599.000020340085))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:54.861
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5740000000000001, 0.5740000000000001, NaN, 0.0014448785781860352, 0.00032667875289916993, 259.32, 2375.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:55.649
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.36900000000000005, 0.36900000000000005, NaN, 0.0014355278015136719, 0.0004851698875427246, 245.89, 3684.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-13T06:37:56.411
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6030000000000002, 0.6030000000000002, NaN, 0.0016245102882385253, 1.6930103302001954e-5, 247.12, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0350404312668466, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9778674450549453,"seconds":2.3264437913894653e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.6953125,"distances_sum":660.6194631457329}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.048225659690628, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.5859375,"distances_sum":649.1425031721592}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.048225659690628,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.5859375,"distances_sum":649.1425031721592}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.048225659690628,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.5859375,"distances_sum":649.1425031721592}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.048225659690628,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.5859375,"distances_sum":649.1425031721592}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.923789281918931, conf: {"restarts":8}, perf: {"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":1.2945383787155151e-5,"exhaustive_search_seconds":4.9620866775512695e-6,"evaluations":51.4609375,"distances_sum":292.56634697318077}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8133943903835146, conf: {"restarts":10}, perf: {"precision":0.9019097222222214,"recall":0.9019097222222214,"f1":0.9019097222222214,"seconds":1.607835292816162e-5,"exhaustive_search_seconds":4.9620866775512695e-6,"evaluations":54.59375,"distances_sum":293.6632449552417}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.923789281918931,"state":{"restarts":8},"perf":{"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":1.2945383787155151e-5,"exhaustive_search_seconds":4.9620866775512695e-6,"evaluations":51.4609375,"distances_sum":292.56634697318077}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.923789281918931,"state":{"restarts":8},"perf":{"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":1.2945383787155151e-5,"exhaustive_search_seconds":4.9620866775512695e-6,"evaluations":51.4609375,"distances_sum":292.56634697318077}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.923789281918931,"state":{"restarts":8},"perf":{"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":1.2945383787155151e-5,"exhaustive_search_seconds":4.9620866775512695e-6,"evaluations":51.4609375,"distances_sum":292.56634697318077}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.864583333333332, conf: {"restarts":18}, perf: {"precision":0.864583333333332,"recall":0.864583333333332,"f1":0.864583333333332,"seconds":4.888884723186493e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":178.4765625,"distances_sum":126.74342999234796}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999989, conf: {"restarts":16}, perf: {"precision":0.8515624999999989,"recall":0.8515624999999989,"f1":0.8515624999999989,"seconds":4.553794860839844e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":164.265625,"distances_sum":127.08514555171132}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8567708333333321, conf: {"restarts":9}, perf: {"precision":0.8567708333333321,"recall":0.8567708333333321,"f1":0.8567708333333321,"seconds":3.1540170311927795e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":122.078125,"distances_sum":127.34208205714822}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.864583333333332,"state":{"restarts":18},"perf":{"precision":0.864583333333332,"recall":0.864583333333332,"f1":0.864583333333332,"seconds":4.888884723186493e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":178.4765625,"distances_sum":126.74342999234796}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222209, conf: {"restarts":19}, perf: {"precision":0.8706597222222209,"recall":0.8706597222222209,"f1":0.8706597222222209,"seconds":5.0693750381469727e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":182.3125,"distances_sum":126.28940312936902}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666654, conf: {"restarts":23}, perf: {"precision":0.8697916666666654,"recall":0.8697916666666654,"f1":null,"seconds":0.00017633475363254547,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":211.34375,"distances_sum":126.62738941982388}, best_list's length: 10, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888876, conf: {"restarts":26}, perf: {"precision":0.8732638888888876,"recall":0.8732638888888876,"f1":0.8732638888888876,"seconds":5.2949413657188416e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":224.40625,"distances_sum":126.0510640181601}, best_list's length: 11, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8732638888888876,"state":{"restarts":26},"perf":{"precision":0.8732638888888876,"recall":0.8732638888888876,"f1":0.8732638888888876,"seconds":5.2949413657188416e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":224.40625,"distances_sum":126.0510640181601}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8732638888888876,"state":{"restarts":26},"perf":{"precision":0.8732638888888876,"recall":0.8732638888888876,"f1":0.8732638888888876,"seconds":5.2949413657188416e-5,"exhaustive_search_seconds":2.063252031803131e-5,"evaluations":224.40625,"distances_sum":126.0510640181601}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666654, conf: {"restarts":16}, perf: {"precision":0.8385416666666654,"recall":0.8385416666666654,"f1":0.8385416666666654,"seconds":9.334087371826172e-5,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":259.6015625,"distances_sum":55.4363782890141}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222211, conf: {"restarts":38}, perf: {"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":0.0001386459916830063,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":450.921875,"distances_sum":55.319394528865814}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888881, conf: {"restarts":17}, perf: {"precision":0.8498263888888881,"recall":0.8498263888888881,"f1":0.8498263888888881,"seconds":8.238106966018677e-5,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":264.75,"distances_sum":55.35433189943433}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8550347222222211,"state":{"restarts":38},"perf":{"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":0.0001386459916830063,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":450.921875,"distances_sum":55.319394528865814}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8550347222222211,"state":{"restarts":38},"perf":{"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":0.0001386459916830063,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":450.921875,"distances_sum":55.319394528865814}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8550347222222211,"state":{"restarts":38},"perf":{"precision":0.8550347222222211,"recall":0.8550347222222211,"f1":0.8550347222222211,"seconds":0.0001386459916830063,"exhaustive_search_seconds":0.00023472681641578674,"evaluations":450.921875,"distances_sum":55.319394528865814}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(38), SatNeighborhood(32), 2020-10-13T06:38:02.802
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5326, 0.029030928f0), Item(2644, 0.039027374f0), Item(4042, 0.03907105f0), Item(8716, 0.039230302f0), Item(8972, 0.044579603f0), Item(985, 0.05036329f0), Item(9109, 0.06162841f0), Item(7454, 0.062022354f0), Item(5727, 0.0645495f0), Item(3758, 0.0655475f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0857681432610744, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9455273892773898,"seconds":2.648681402206421e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":612.5315220952034}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0857681432610744,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9455273892773898,"seconds":2.648681402206421e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":612.5315220952034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.94476304945055,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.234375,"distances_sum":600.2411780655384}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.94476304945055,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.234375,"distances_sum":600.2411780655384}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.94476304945055,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.234375,"distances_sum":600.2411780655384}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.195158850226929,"state":{"bsize":2},"perf":{"precision":0.9288194444444436,"recall":0.9288194444444436,"f1":0.9288194444444436,"seconds":1.0576099157333374e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.984375,"distances_sum":289.66577924788}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.195158850226929,"state":{"bsize":2},"perf":{"precision":0.9288194444444436,"recall":0.9288194444444436,"f1":0.9288194444444436,"seconds":1.0576099157333374e-5,"exhaustive_search_seconds":4.952773451805115e-6,"evaluations":30.984375,"distances_sum":289.66577924788}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.497484195587667,"state":{"bsize":2},"perf":{"precision":0.9392361111111103,"recall":0.9392361111111103,"f1":0.9392361111111103,"seconds":2.060830593109131e-5,"exhaustive_search_seconds":1.9727274775505066e-5,"evaluations":60.5546875,"distances_sum":121.6116993688047}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.497484195587667,"state":{"bsize":2},"perf":{"precision":0.9392361111111103,"recall":0.9392361111111103,"f1":0.9392361111111103,"seconds":2.060830593109131e-5,"exhaustive_search_seconds":1.9727274775505066e-5,"evaluations":60.5546875,"distances_sum":121.6116993688047}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.43654822335026, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.6063993573188782e-5,"exhaustive_search_seconds":0.00018705427646636963,"evaluations":101.578125,"distances_sum":55.74580467888154}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.43654822335026,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.6063993573188782e-5,"exhaustive_search_seconds":0.00018705427646636963,"evaluations":101.578125,"distances_sum":55.74580467888154}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.43654822335026,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.6063993573188782e-5,"exhaustive_search_seconds":0.00018705427646636963,"evaluations":101.578125,"distances_sum":55.74580467888154}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.43654822335026,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.6063993573188782e-5,"exhaustive_search_seconds":0.00018705427646636963,"evaluations":101.578125,"distances_sum":55.74580467888154}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-10-13T06:38:06.044
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7270, 0.01546015f0), Item(4127, 0.016655056f0), Item(2472, 0.034016214f0), Item(772, 0.0370862f0), Item(1952, 0.038511146f0), Item(3801, 0.04117947f0), Item(4824, 0.04235122f0), Item(812, 0.04373511f0), Item(971, 0.047724016f0), Item(6195, 0.05521669f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
