Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_qc5RH8/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_qc5RH8/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(7, 0.0032496452f0), Item(11, 0.010293126f0), Item(34, 0.037425518f0), Item(32, 0.0683161f0)])
Vsorted = Item[Item(7, 0.0032496452f0), Item(11, 0.010293126f0), Item(34, 0.037425518f0), Item(32, 0.0683161f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004146758715311686, 0.005879068374633789, 301.0, 50.89773905090988))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003695853551228841, 0.004360564549763997, 301.0, 73.70860946178436))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004158592224121094, 0.004703132311503092, 301.0, 41.31956243515015))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003710802396138509, 0.006839426358540853, 301.0, 9.65473379229661))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003154762585957845, 0.006230401992797852, 301.0, 46.1182628814131))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.1985511779785155e-5, 2.4406115214029946e-5, 301.0, 179.50670111179352))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 2.841949462890625e-5, 0.008264605204264324, 300.0, 26.324900280684233)
p = PerformanceResult(1.0, 1.0, 1.0, 3.275076548258464e-5, 1.8405914306640626e-5, 300.0, 26.324900280684233)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003428816795349121, 0.002608696619669596, 300.0, 1.354242089226318)
p = PerformanceResult(1.0, 1.0, 1.0, 3.0583805508083766e-5, 1.567204793294271e-5, 300.0, 1.354242089226318)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 2.841949462890625e-5, 0.008264605204264324, 300.0, 26.324900280684233), PerformanceResult(1.0, 1.0, 1.0, 3.275076548258464e-5, 1.8405914306640626e-5, 300.0, 26.324900280684233), PerformanceResult(1.0, 1.0, 1.0, 0.003428816795349121, 0.002608696619669596, 300.0, 1.354242089226318), PerformanceResult(1.0, 1.0, 1.0, 3.0583805508083766e-5, 1.567204793294271e-5, 300.0, 1.354242089226318))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007435250282287598, 0.003610666592915853, 348.8333333333333, 28812.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006561048825581868, 0.002715031305948893, 303.23333333333335, 7040.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.758734385172526e-5, 7.09692637125651e-6, 94.63333333333334, 51.05929070524871))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6729036966959637e-5, 7.462501525878906e-6, 85.46666666666667, 73.91374182701111))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3796488444010417e-5, 9.632110595703125e-6, 87.8, 41.42690122127533))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.407001495361328e-5, 6.200472513834635e-5, 93.7, 46.25726559944451))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8366666666666667, 0.8366666666666667, 0.8366666666666667, 1.8302599589029948e-5, 2.380212148030599e-5, 71.16666666666667, 188.99011307954788))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-12T07:51:14.544
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8930000000000002, 0.8930000000000002, 0.8930000000000002, 1.6381740570068358e-5, 1.5611648559570313e-5, 152.83, 51.642431297455914))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.138448715209961e-5, 1.1680126190185547e-5, 156.47, 0.0))
*** advance 1 from 1000; 2020-10-12T07:51:15.164
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9077777777777779, 0.9070000000000001, 0.9073684210526318, 9.818077087402344e-6, 9.2315673828125e-6, 152.63, 75.58369065262377))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4591217041015626e-5, 9.860992431640625e-6, 156.12, 0.0))
*** advance 1 from 1000; 2020-10-12T07:51:15.854
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8970000000000004, 0.8970000000000004, 0.8970000000000004, 1.7116069793701173e-5, 1.91497802734375e-5, 153.79, 42.11919854301959))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8913745880126953e-5, 1.650094985961914e-5, 157.69, 0.0))
*** advance 1 from 1000; 2020-10-12T07:51:16.438
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.893, 0.893, 0.893, 3.9684772491455075e-5, 0.00022322893142700194, 153.15, 46.841680168232415))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.3108463287353516e-5, 0.00020405054092407227, 156.74, 0.0))
*** advance 1 from 1000; 2020-10-12T07:51:16.803
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9660000000000001, 0.9660000000000001, 0.9660000000000001, 2.866983413696289e-5, 8.475065231323243e-5, 168.3, 191.10270386491902))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.790689468383789e-5, 8.599042892456055e-5, 173.39, 0.0))
*** advance 1 from 1000; 2020-10-12T07:51:17.702
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8930000000000002, 0.8930000000000002, 0.8930000000000002, 2.8839111328125e-5, 4.792928695678711e-5, 152.83, 51.65334725927096))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.999855041503906e-5, 5.856037139892578e-5, 156.47, 0.016654913750244305))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:19.678
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7210000000000001, 0.7210000000000001, NaN, 0.0013976645469665526, 5.384922027587891e-5, 196.72, 195.9333354830742))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:21.414
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.732, 0.732, 0.732, 0.002175555229187012, 6.653785705566406e-5, 200.14, 111.93968479335308))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:22.441
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6449999999999997, 0.6449999999999997, NaN, 0.0014533567428588866, 6.479024887084961e-5, 261.85, 1.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:23.229
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9670000000000003, 0.9670000000000003, 0.9670000000000003, 0.0012812089920043945, 1.2769699096679688e-5, 222.43, 598.6000203639269))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:24.430
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5729999999999998, 0.5729999999999998, 0.5729999999999998, 0.0014701056480407714, 0.00034923791885375975, 248.77, 2341.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:25.374
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.42200000000000004, 0.42200000000000004, 0.42200000000000004, 0.0016085577011108398, 0.0002898120880126953, 241.7, 3602.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-12T07:51:26.581
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6070000000000002, 0.6070000000000002, 0.6070000000000002, 0.0013675951957702636, 1.1651515960693359e-5, 243.38, 2350.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0267379679144386, conf: {"restarts":10}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9838369963369966,"seconds":2.7026981115341187e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.765625,"distances_sum":835.2440324425697}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0294906166219837, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9824404761904766,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.7421875,"distances_sum":830.0229319930077}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.045372050816697, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9725274725274728,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.609375,"distances_sum":813.2476467490196}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.045372050816697,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9725274725274728,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.609375,"distances_sum":813.2476467490196}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.045372050816697,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9725274725274728,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.609375,"distances_sum":813.2476467490196}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.045372050816697,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9725274725274728,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.959502696990967e-6,"evaluations":8.609375,"distances_sum":813.2476467490196}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7885673959068455, conf: {"restarts":10}, perf: {"precision":0.9053819444444438,"recall":0.9053819444444438,"f1":0.9053819444444438,"seconds":5.3374096751213074e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":55.3515625,"distances_sum":292.22900013811886}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8949652777777768, conf: {"restarts":11}, perf: {"precision":0.8949652777777768,"recall":0.8949652777777768,"f1":0.8949652777777768,"seconds":1.6499310731887817e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":56.4140625,"distances_sum":292.6186219174415}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7885673959068455,"state":{"restarts":10},"perf":{"precision":0.9053819444444438,"recall":0.9053819444444438,"f1":0.9053819444444438,"seconds":5.3374096751213074e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":55.3515625,"distances_sum":292.22900013811886}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8558875219683655, conf: {"restarts":9}, perf: {"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":1.5057623386383057e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":53.34375,"distances_sum":291.7139685023576}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9573679332715477, conf: {"restarts":8}, perf: {"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":1.4619901776313782e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":50.578125,"distances_sum":290.55396314896643}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9573679332715477,"state":{"restarts":8},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":1.4619901776313782e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":50.578125,"distances_sum":290.55396314896643}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9573679332715477,"state":{"restarts":8},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":1.4619901776313782e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":50.578125,"distances_sum":290.55396314896643}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9573679332715477,"state":{"restarts":8},"perf":{"precision":0.9045138888888878,"recall":0.9045138888888878,"f1":0.9045138888888878,"seconds":1.4619901776313782e-5,"exhaustive_search_seconds":4.906207323074341e-6,"evaluations":50.578125,"distances_sum":290.55396314896643}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8645833333333321,"state":{"restarts":8},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":5.8611854910850525e-5,"exhaustive_search_seconds":2.2156164050102234e-5,"evaluations":114.265625,"distances_sum":124.06863698083907}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8645833333333321,"state":{"restarts":8},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":5.8611854910850525e-5,"exhaustive_search_seconds":2.2156164050102234e-5,"evaluations":114.265625,"distances_sum":124.06863698083907}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777768, conf: {"restarts":19}, perf: {"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":9.516440331935883e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":291.4609375,"distances_sum":55.90113318199292}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888876, conf: {"restarts":6}, perf: {"precision":0.8498263888888876,"recall":0.8498263888888876,"f1":0.8498263888888876,"seconds":5.8770179748535156e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":170.765625,"distances_sum":55.65629521710798}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666654, conf: {"restarts":7}, perf: {"precision":0.8541666666666654,"recall":0.8541666666666654,"f1":0.8541666666666654,"seconds":6.69434666633606e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":181.03125,"distances_sum":55.71823742007837}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444434, conf: {"restarts":11}, perf: {"precision":0.8506944444444434,"recall":0.8506944444444434,"f1":0.8506944444444434,"seconds":6.243772804737091e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":215.625,"distances_sum":55.801644855644554}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666655, conf: {"restarts":13}, perf: {"precision":0.8541666666666655,"recall":0.8541666666666655,"f1":0.8541666666666655,"seconds":8.27740877866745e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":236.890625,"distances_sum":55.70851611485705}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555547, conf: {"restarts":10}, perf: {"precision":0.8524305555555547,"recall":0.8524305555555547,"f1":0.8524305555555547,"seconds":7.729046046733856e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":212.2890625,"distances_sum":55.82721112994477}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777768,"state":{"restarts":19},"perf":{"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":9.516440331935883e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":291.4609375,"distances_sum":55.90113318199292}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8559027777777768,"state":{"restarts":19},"perf":{"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":9.516440331935883e-5,"exhaustive_search_seconds":0.00019875727593898773,"evaluations":291.4609375,"distances_sum":55.90113318199292}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(19), SatNeighborhood(32), 2020-10-12T07:51:33.204
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(380, 0.03569365f0), Item(9904, 0.0397228f0), Item(7185, 0.047684077f0), Item(8349, 0.04928606f0), Item(5283, 0.051555376f0), Item(8394, 0.051861156f0), Item(6543, 0.05207202f0), Item(170, 0.052551582f0), Item(1609, 0.05497449f0), Item(9196, 0.057155397f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.051094890510949, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9658372877122879,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":803.7626188993454}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.051094890510949,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9658372877122879,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":803.7626188993454}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.051094890510949,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9658372877122879,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":803.7626188993454}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.051094890510949,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9658372877122879,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":803.7626188993454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.8852459016393444, conf: {"bsize":4}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":1.395493745803833e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":34.3125,"distances_sum":288.944587033242}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8852459016393444,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":1.395493745803833e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":34.3125,"distances_sum":288.944587033242}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.187924528301886, conf: {"bsize":2}, perf: {"precision":0.9427083333333325,"recall":0.9427083333333325,"f1":0.9427083333333325,"seconds":1.0738149285316467e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":31.0546875,"distances_sum":291.012571465224}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.187924528301886,"state":{"bsize":2},"perf":{"precision":0.9427083333333325,"recall":0.9427083333333325,"f1":0.9427083333333325,"seconds":1.0738149285316467e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":31.0546875,"distances_sum":291.012571465224}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.187924528301886,"state":{"bsize":2},"perf":{"precision":0.9427083333333325,"recall":0.9427083333333325,"f1":0.9427083333333325,"seconds":1.0738149285316467e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":31.0546875,"distances_sum":291.012571465224}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.187924528301886,"state":{"bsize":2},"perf":{"precision":0.9427083333333325,"recall":0.9427083333333325,"f1":0.9427083333333325,"seconds":1.0738149285316467e-5,"exhaustive_search_seconds":4.734843969345093e-6,"evaluations":31.0546875,"distances_sum":291.012571465224}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 18.138721351025332, conf: {"bsize":3}, perf: {"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.9313767552375793e-5,"exhaustive_search_seconds":1.9546598196029663e-5,"evaluations":58.2890625,"distances_sum":124.38522578869015}, best_list's length: 3, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.606753246753247, conf: {"bsize":4}, perf: {"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":2.0116567611694336e-5,"exhaustive_search_seconds":1.9546598196029663e-5,"evaluations":60.15625,"distances_sum":124.01307384017855}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.138721351025332,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.9313767552375793e-5,"exhaustive_search_seconds":1.9546598196029663e-5,"evaluations":58.2890625,"distances_sum":124.38522578869015}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.138721351025332,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.9313767552375793e-5,"exhaustive_search_seconds":1.9546598196029663e-5,"evaluations":58.2890625,"distances_sum":124.38522578869015}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.138721351025332,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.9313767552375793e-5,"exhaustive_search_seconds":1.9546598196029663e-5,"evaluations":58.2890625,"distances_sum":124.38522578869015}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.36139135672339, conf: {"bsize":5}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":3.604963421821594e-5,"exhaustive_search_seconds":0.00019049271941184998,"evaluations":103.765625,"distances_sum":54.308577180374414}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.56275666392892, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.2634084820747375e-5,"exhaustive_search_seconds":0.00019049271941184998,"evaluations":104.6328125,"distances_sum":54.302651055622846}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.36139135672339,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":3.604963421821594e-5,"exhaustive_search_seconds":0.00019049271941184998,"evaluations":103.765625,"distances_sum":54.308577180374414}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.36139135672339,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":3.604963421821594e-5,"exhaustive_search_seconds":0.00019049271941184998,"evaluations":103.765625,"distances_sum":54.308577180374414}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.36139135672339,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":3.604963421821594e-5,"exhaustive_search_seconds":0.00019049271941184998,"evaluations":103.765625,"distances_sum":54.308577180374414}}, n: 9999
added n=10000, neighborhood=6, BeamSearch(5), SatNeighborhood(32), 2020-10-12T07:51:36.711
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7665, 0.021488087f0), Item(2265, 0.038587518f0), Item(7530, 0.042670265f0), Item(7604, 0.04311347f0), Item(3259, 0.047765046f0), Item(3689, 0.047809657f0), Item(7152, 0.054894052f0), Item(9661, 0.058706358f0), Item(3368, 0.06076886f0), Item(9382, 0.06148418f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
