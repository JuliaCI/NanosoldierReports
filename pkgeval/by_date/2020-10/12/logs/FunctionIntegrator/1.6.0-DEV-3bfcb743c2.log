Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ars4UZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ars4UZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.243138 seconds (289.26 k allocations: 13.536 MiB, 5.63% gc time, 91.62% compilation time)
Running: chebyshev_quadrature with k=1
  1.455073 seconds (2.20 M allocations: 126.785 MiB, 2.54% gc time, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.232400 seconds (409.38 k allocations: 23.567 MiB, 85.60% compilation time)
Running: chebyshev_quadrature with k=3
  0.290162 seconds (473.75 k allocations: 26.626 MiB, 12.01% gc time, 89.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.260798 seconds (418.56 k allocations: 23.264 MiB, 6.15% gc time, 91.99% compilation time)
Running: jacobi_quadrature with α=β=1
 34.175607 seconds (34.88 M allocations: 2.928 GiB, 11.60% gc time, 75.31% compilation time)
Running: laguerre_quadrature with k=1
  2.518979 seconds (3.17 M allocations: 177.063 MiB, 3.58% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.221281 seconds (206.15 k allocations: 11.836 MiB, 99.24% compilation time)
Running: lobatto_quadrature
  0.319961 seconds (329.67 k allocations: 19.903 MiB, 8.95% gc time, 99.37% compilation time)
Running: radau_quadrature
  0.368779 seconds (447.75 k allocations: 27.340 MiB, 6.77% gc time, 99.43% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 50.099740 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.118099 seconds (172.46 k allocations: 3.827 MiB, 16.03% gc time, 22.68% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 48.764630 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time, 0.05% compilation time)
Running: rombergs_method
  0.480768 seconds (723.12 k allocations: 41.737 MiB, 3.42% gc time, 99.50% compilation time)
Running: simpsons_rule
  0.025192 seconds (46.55 k allocations: 2.532 MiB, 91.72% compilation time)
Running: simpsons38_rule
  0.083059 seconds (108.62 k allocations: 5.760 MiB, 17.86% gc time, 97.66% compilation time)
Running: trapezoidal_rule
  0.274598 seconds (1.72 M allocations: 28.609 MiB, 17.74% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.074445 seconds (29.80 k allocations: 1.767 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.457547 seconds (290.32 k allocations: 15.354 MiB, 6.87% gc time, 99.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.144720 seconds (93.81 k allocations: 2.675 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.151365 seconds (82.06 k allocations: 2.476 MiB, 97.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.141803 seconds (64.67 k allocations: 2.122 MiB, 98.74% compilation time)
Running: jacobi_quadrature with α=β=1
  1.996123 seconds (504.06 k allocations: 161.834 MiB, 7.08% gc time, 26.12% compilation time)
Running: legendre_quadrature
  0.165576 seconds (41.20 k allocations: 2.372 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.017020 seconds (15.59 k allocations: 991.981 KiB, 99.10% compilation time)
Running: radau_quadrature
  0.017755 seconds (15.69 k allocations: 999.196 KiB, 99.22% compilation time)
Running: rectangle_rule_left
 13.526685 seconds (471.41 M allocations: 7.025 GiB, 4.21% gc time)
Running: rectangle_rule_midpoint
  0.000014 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.806512 seconds (476.96 M allocations: 7.107 GiB, 4.12% gc time)
Running: rombergs_method
  0.295280 seconds (326.52 k allocations: 18.527 MiB, 99.85% compilation time)
Running: simpsons_rule
  0.000026 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.055442 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.040332 seconds (16.49 k allocations: 1.000 MiB, 99.73% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.019679 seconds (1.03 k allocations: 34.125 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.103530 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.113179 seconds (2.71 k allocations: 124.266 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.101133 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.096282 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.276784 seconds (364.10 k allocations: 19.000 MiB, 9.40% gc time, 99.30% compilation time)
Running: legendre_quadrature
  0.071010 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000085 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000347 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000246 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000341 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071299 seconds (1.04 k allocations: 56.531 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000025 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023279 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.018450 seconds (44.29 k allocations: 702.859 KiB, 84.98% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.068879 seconds (80.91 k allocations: 4.823 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=1
  0.178656 seconds (230.62 k allocations: 12.967 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.171284 seconds (283.17 k allocations: 15.880 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.172283 seconds (234.76 k allocations: 13.174 MiB, 14.76% gc time, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.157717 seconds (234.76 k allocations: 13.045 MiB, 98.73% compilation time)
Running: jacobi_quadrature with α=β=1
  2.117687 seconds (447.19 k allocations: 163.226 MiB, 6.90% gc time, 23.15% compilation time)
Running: legendre_quadrature
  0.165627 seconds (185.44 k allocations: 10.707 MiB, 98.93% compilation time)
Running: lobatto_quadrature
  0.157847 seconds (196.77 k allocations: 11.423 MiB, 98.78% compilation time)
Running: radau_quadrature
  0.170119 seconds (196.77 k allocations: 11.420 MiB, 10.82% gc time, 98.88% compilation time)
Running: rectangle_rule_left
  0.670982 seconds (18.82 k allocations: 1.147 MiB, 3.90% compilation time)
Running: rectangle_rule_midpoint
  0.019583 seconds (24.67 k allocations: 1.555 MiB, 99.16% compilation time)
Running: rectangle_rule_right
  0.615230 seconds (17.39 k allocations: 1.062 MiB, 3.46% compilation time)
Running: rombergs_method
  0.133460 seconds (134.27 k allocations: 7.849 MiB, 97.88% compilation time)
Running: simpsons_rule
  0.020956 seconds (36.49 k allocations: 2.341 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.028029 seconds (42.37 k allocations: 2.678 MiB, 99.38% compilation time)
Running: trapezoidal_rule
  0.020198 seconds (42.32 k allocations: 1.671 MiB, 93.52% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028709 seconds (66.94 k allocations: 2.959 MiB, 96.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.141950 seconds (237.20 k allocations: 13.032 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=2
  0.222382 seconds (290.20 k allocations: 15.872 MiB, 7.84% gc time, 98.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.212403 seconds (241.33 k allocations: 13.118 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.170035 seconds (241.34 k allocations: 13.123 MiB, 98.58% compilation time)
Running: hermite_quadrature with k=2
 13.070308 seconds (20.10 M allocations: 1.056 GiB, 9.63% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.513713 seconds (456.36 k allocations: 49.417 MiB, 33.59% gc time, 60.68% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.203602 seconds (276.26 k allocations: 15.249 MiB, 98.35% compilation time)
Running: legendre_quadrature
  0.167852 seconds (191.98 k allocations: 11.035 MiB, 10.66% gc time, 98.79% compilation time)
Running: lobatto_quadrature
  0.190423 seconds (217.43 k allocations: 37.194 MiB, 86.37% compilation time)
Running: radau_quadrature
  0.213914 seconds (214.01 k allocations: 29.854 MiB, 7.30% gc time, 83.06% compilation time)
Running: rectangle_rule_left
  0.024548 seconds (21.73 k allocations: 1.293 MiB, 99.46% compilation time)
Running: rectangle_rule_midpoint
  0.022168 seconds (26.47 k allocations: 1.642 MiB, 99.44% compilation time)
Running: rectangle_rule_right
  0.020422 seconds (18.50 k allocations: 1.117 MiB, 99.37% compilation time)
Running: rombergs_method
  0.108349 seconds (136.74 k allocations: 7.829 MiB, 93.83% compilation time)
Running: simpsons_rule
  0.045750 seconds (43.97 k allocations: 2.609 MiB, 32.75% gc time, 99.47% compilation time)
Running: simpsons38_rule
  0.036038 seconds (57.34 k allocations: 3.063 MiB, 98.78% compilation time)
Running: trapezoidal_rule
  0.023902 seconds (28.35 k allocations: 1.595 MiB, 98.82% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028539 seconds (50.91 k allocations: 2.619 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.207494 seconds (232.72 k allocations: 12.830 MiB, 98.94% compilation time)
Running: chebyshev_quadrature with k=2
  0.218769 seconds (285.38 k allocations: 15.643 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.185438 seconds (236.87 k allocations: 12.944 MiB, 9.33% gc time, 98.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.156266 seconds (236.87 k allocations: 12.929 MiB, 98.63% compilation time)
Running: hermite_quadrature with k=2
  0.181988 seconds (170.78 k allocations: 9.790 MiB, 98.85% compilation time)
Running: jacobi_quadrature with α=β=1
  6.547416 seconds (449.63 k allocations: 1.175 GiB, 21.19% gc time, 6.70% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.173081 seconds (271.55 k allocations: 15.060 MiB, 98.07% compilation time)
Running: legendre_quadrature
  0.225841 seconds (187.55 k allocations: 10.818 MiB, 7.00% gc time, 99.05% compilation time)
Running: lobatto_quadrature
  0.249614 seconds (208.18 k allocations: 22.923 MiB, 93.48% compilation time)
Running: radau_quadrature
  0.195863 seconds (207.34 k allocations: 20.853 MiB, 9.61% gc time, 93.70% compilation time)
Running: rectangle_rule_left
  0.022942 seconds (19.52 k allocations: 1.188 MiB, 99.17% compilation time)
Running: rectangle_rule_midpoint
  0.023617 seconds (25.36 k allocations: 1.591 MiB, 99.45% compilation time)
Running: rectangle_rule_right
  0.021420 seconds (17.36 k allocations: 1.062 MiB, 99.43% compilation time)
Running: rombergs_method
  0.098198 seconds (132.59 k allocations: 7.638 MiB, 97.75% compilation time)
Running: simpsons_rule
  0.015970 seconds (39.30 k allocations: 2.442 MiB, 98.88% compilation time)
Running: simpsons38_rule
  0.026001 seconds (48.16 k allocations: 2.822 MiB, 99.02% compilation time)
Running: trapezoidal_rule
  0.020155 seconds (23.26 k allocations: 1.433 MiB, 99.13% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022785 seconds (39.05 k allocations: 2.475 MiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=1
  0.210289 seconds (231.10 k allocations: 13.042 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.279739 seconds (283.67 k allocations: 15.996 MiB, 5.97% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.154009 seconds (235.25 k allocations: 13.141 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.158888 seconds (235.25 k allocations: 12.975 MiB, 98.44% compilation time)
Running: jacobi_quadrature with α=β=1
  1.568825 seconds (447.72 k allocations: 194.255 MiB, 9.61% gc time, 36.64% compilation time)
Running: legendre_quadrature
  0.161328 seconds (185.93 k allocations: 10.732 MiB, 98.54% compilation time)
Running: lobatto_quadrature
  0.171815 seconds (197.26 k allocations: 11.448 MiB, 98.62% compilation time)
Running: radau_quadrature
  0.168532 seconds (197.26 k allocations: 11.445 MiB, 10.18% gc time, 98.62% compilation time)
Running: rectangle_rule_left
  0.344905 seconds (19.34 k allocations: 1.173 MiB, 6.94% compilation time)
Running: rectangle_rule_midpoint
  0.019222 seconds (25.01 k allocations: 1.573 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.162696 seconds (17.73 k allocations: 1.081 MiB, 14.14% compilation time)
Running: rombergs_method
  0.160006 seconds (145.02 k allocations: 8.485 MiB, 97.87% compilation time)
Running: simpsons_rule
  0.031538 seconds (37.11 k allocations: 2.369 MiB, 99.48% compilation time)
Running: simpsons38_rule
  0.026135 seconds (43.08 k allocations: 2.708 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.018887 seconds (43.25 k allocations: 1.703 MiB, 96.80% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022141 seconds (38.85 k allocations: 2.409 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.157133 seconds (231.69 k allocations: 12.992 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.203180 seconds (284.30 k allocations: 15.895 MiB, 8.86% gc time, 98.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.156079 seconds (235.84 k allocations: 13.131 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=4
  0.159288 seconds (235.84 k allocations: 13.142 MiB, 98.38% compilation time)
Running: jacobi_quadrature with α=β=1
  0.880459 seconds (448.44 k allocations: 148.944 MiB, 10.00% gc time, 32.30% compilation time)
Running: legendre_quadrature
  0.142012 seconds (186.53 k allocations: 10.750 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.175275 seconds (197.86 k allocations: 11.468 MiB, 98.64% compilation time)
Running: radau_quadrature
  0.175893 seconds (197.86 k allocations: 11.477 MiB, 98.63% compilation time)
Running: rectangle_rule_left
  0.723029 seconds (19.59 k allocations: 1.186 MiB, 2.31% gc time, 5.94% compilation time)
Running: rectangle_rule_midpoint
  0.020089 seconds (25.01 k allocations: 1.574 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.705071 seconds (17.69 k allocations: 1.078 MiB, 3.05% compilation time)
Running: rombergs_method
  0.112476 seconds (135.49 k allocations: 7.815 MiB, 96.85% compilation time)
Running: simpsons_rule
  0.021938 seconds (37.60 k allocations: 2.389 MiB, 99.08% compilation time)
Running: simpsons38_rule
  0.027696 seconds (43.78 k allocations: 2.734 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.018035 seconds (55.40 k allocations: 1.899 MiB, 96.03% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.117127 seconds (147.44 k allocations: 8.794 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.136256 seconds (69.93 k allocations: 2.205 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.146530 seconds (105.09 k allocations: 2.868 MiB, 97.46% compilation time)
Running: chebyshev_quadrature with k=3
  0.149517 seconds (92.57 k allocations: 2.654 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.153262 seconds (72.10 k allocations: 2.248 MiB, 98.48% compilation time)
Running: jacobi_quadrature with α=β=1
  0.991612 seconds (480.47 k allocations: 167.785 MiB, 18.62% gc time, 36.79% compilation time)
Running: legendre_quadrature
  0.125114 seconds (18.73 k allocations: 1.094 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000036 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.264296 seconds (590.00 M allocations: 8.792 GiB, 5.38% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.303974 seconds (592.75 M allocations: 8.833 GiB, 5.22% gc time)
Running: rombergs_method
  0.143928 seconds (20.51 k allocations: 1.165 MiB, 6.95% gc time, 99.18% compilation time)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026387 seconds (463 allocations: 22.578 KiB, 99.58% compilation time)
Running: trapezoidal_rule
  0.018366 seconds (171 allocations: 7.859 KiB, 99.48% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.834558 seconds (209.93 M allocations: 3.138 GiB, 1.45% gc time, 0.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.421046 seconds (414.04 k allocations: 23.019 MiB, 4.30% gc time, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
 18.225146 seconds (468.68 k allocations: 4.040 GiB, 2.24% gc time, 2.22% compilation time)
Running: chebyshev_quadrature with k=3
  8.261747 seconds (249.12 k allocations: 1.642 GiB, 3.53% gc time, 1.93% compilation time)
Running: chebyshev_quadrature with k=4
 11.284058 seconds (249.12 k allocations: 2.260 GiB, 1.74% gc time, 2.41% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.478989 seconds (484.53 k allocations: 13.254 GiB, 7.16% gc time, 1.22% compilation time)
Running: legendre_quadrature.
  9.668340 seconds (223.29 k allocations: 1.976 GiB, 0.82% gc time, 2.05% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.253196 seconds (8.23 M allocations: 13.383 GiB, 5.64% gc time, 0.57% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.980270 seconds (7.23 M allocations: 13.369 GiB, 5.74% gc time, 0.52% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.376886 seconds (22.25 k allocations: 1.347 MiB, 0.21% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.771738 seconds (30.45 k allocations: 1.884 MiB, 0.20% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.495671 seconds (22.45 k allocations: 1.357 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.969432 seconds (438.14 k allocations: 152.679 MiB, 2.45% gc time, 11.17% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.637488 seconds (200.04 M allocations: 2.983 GiB, 2.01% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.369228 seconds (600.05 M allocations: 8.943 GiB, 5.77% gc time, 0.09% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.909423 seconds (600.03 M allocations: 8.943 GiB, 4.06% gc time, 0.10% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.055114 seconds (109.56 k allocations: 4.131 MiB, 94.27% compilation time)
Running: chebyshev_quadrature with k=1
  0.189785 seconds (247.70 k allocations: 13.448 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.189090 seconds (272.34 k allocations: 14.521 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=3
  0.158459 seconds (220.25 k allocations: 11.633 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.168389 seconds (220.25 k allocations: 11.661 MiB, 99.17% compilation time)
Running: jacobi_quadrature with α=β=1
  0.300966 seconds (389.30 k allocations: 34.999 MiB, 92.33% compilation time)
Running: laguerre_quadrature with k=2
  0.137389 seconds (180.54 k allocations: 10.477 MiB, 74.41% compilation time)
Running: legendre_quadrature
  0.086462 seconds (145.98 k allocations: 8.073 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.015108 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.013242 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.035962 seconds (18.88 k allocations: 1.122 MiB, 64.07% compilation time)
Running: rectangle_rule_midpoint
  0.025910 seconds (25.48 k allocations: 1.575 MiB, 74.82% compilation time)
Running: rectangle_rule_right
  0.028530 seconds (17.48 k allocations: 1.049 MiB, 60.51% compilation time)
Running: rombergs_method
  0.170634 seconds (172.18 k allocations: 9.835 MiB, 98.56% compilation time)
Running: simpsons_rule
  0.000499 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.031515 seconds (78.86 k allocations: 3.385 MiB, 97.37% compilation time)
Running: trapezoidal_rule
  0.095761 seconds (2.39 M allocations: 37.684 MiB, 38.54% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000667 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.114971 seconds (2.46 k allocations: 1.691 MiB, 98.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.113382 seconds (2.71 k allocations: 2.355 MiB, 97.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.092747 seconds (2.31 k allocations: 2.028 MiB, 97.18% compilation time)
Running: chebyshev_quadrature with k=4
  0.097462 seconds (2.31 k allocations: 1.469 MiB, 97.87% compilation time)
Running: jacobi_quadrature with α=β=1
  5.461780 seconds (366.38 k allocations: 904.821 MiB, 9.06% gc time, 5.46% compilation time)
Running: legendre_quadrature
  0.060901 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000142 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000113 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.707307 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000356 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.814265 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062458 seconds (997 allocations: 56.672 KiB, 99.59% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000033 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001003 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000143 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.107489 seconds (2.53 k allocations: 579.203 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.117102 seconds (2.79 k allocations: 780.188 KiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.105322 seconds (2.39 k allocations: 661.047 KiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.107924 seconds (2.39 k allocations: 491.547 KiB, 99.38% compilation time)
Running: jacobi_quadrature with α=β=1
  2.585510 seconds (372.94 k allocations: 252.994 MiB, 18.76% compilation time)
Running: legendre_quadrature
  0.106800 seconds (1.32 k allocations: 67.859 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.427017 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000136 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.317016 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062572 seconds (1.21 k allocations: 64.938 KiB, 99.66% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000468 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
