Julia Version 1.6.0-DEV.1185
Commit 3bfcb743c2 (2020-10-11 23:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_RLTilZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_RLTilZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.310572 seconds (289.26 k allocations: 13.536 MiB, 18.46% gc time, 93.23% compilation time)
Running: chebyshev_quadrature with k=1
  1.888733 seconds (2.20 M allocations: 126.769 MiB, 2.36% gc time, 98.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.234985 seconds (409.38 k allocations: 23.567 MiB, 88.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.276512 seconds (473.75 k allocations: 26.626 MiB, 5.04% gc time, 80.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.337039 seconds (418.56 k allocations: 23.264 MiB, 13.12% gc time, 91.43% compilation time)
Running: jacobi_quadrature with α=β=1
 43.739900 seconds (34.88 M allocations: 2.928 GiB, 14.79% gc time, 85.47% compilation time)
Running: laguerre_quadrature with k=1
  3.593869 seconds (3.17 M allocations: 177.063 MiB, 2.93% gc time, 99.93% compilation time)
Running: legendre_quadrature
  0.319666 seconds (206.15 k allocations: 11.836 MiB, 95.35% compilation time)
Running: lobatto_quadrature
  0.461185 seconds (329.67 k allocations: 19.903 MiB, 10.01% gc time, 99.53% compilation time)
Running: radau_quadrature
  0.500168 seconds (447.75 k allocations: 27.340 MiB, 4.21% gc time, 99.63% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 42.464032 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time, 0.11% compilation time)
Running: rectangle_rule_midpoint.
  0.170927 seconds (172.46 k allocations: 3.827 MiB, 10.05% gc time, 54.02% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 43.891065 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time, 0.06% compilation time)
Running: rombergs_method
  0.751125 seconds (723.12 k allocations: 41.737 MiB, 2.05% gc time, 99.72% compilation time)
Running: simpsons_rule
  0.069258 seconds (46.55 k allocations: 2.532 MiB, 83.89% compilation time)
Running: simpsons38_rule
  0.150030 seconds (108.62 k allocations: 5.760 MiB, 15.59% gc time, 98.52% compilation time)
Running: trapezoidal_rule
  0.297273 seconds (1.72 M allocations: 28.609 MiB, 28.09% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.077214 seconds (29.80 k allocations: 1.767 MiB, 99.64% compilation time)
Running: chebyshev_quadrature with k=1
  0.684846 seconds (290.32 k allocations: 15.354 MiB, 7.56% gc time, 97.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.162302 seconds (93.81 k allocations: 2.675 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.222941 seconds (82.06 k allocations: 2.476 MiB, 98.94% compilation time)
Running: chebyshev_quadrature with k=4
  0.149795 seconds (64.67 k allocations: 2.122 MiB, 98.90% compilation time)
Running: jacobi_quadrature with α=β=1
  1.524391 seconds (504.06 k allocations: 161.834 MiB, 10.42% gc time, 42.95% compilation time)
Running: legendre_quadrature
  0.174866 seconds (41.20 k allocations: 2.372 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.024142 seconds (15.59 k allocations: 991.981 KiB, 99.36% compilation time)
Running: radau_quadrature
  0.039194 seconds (15.69 k allocations: 999.196 KiB, 99.60% compilation time)
Running: rectangle_rule_left
 11.998448 seconds (471.41 M allocations: 7.025 GiB, 5.21% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.779319 seconds (476.96 M allocations: 7.107 GiB, 4.52% gc time)
Running: rombergs_method
  0.404442 seconds (326.52 k allocations: 18.527 MiB, 99.89% compilation time)
Running: simpsons_rule
  0.000031 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.070247 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.041044 seconds (16.49 k allocations: 1.000 MiB, 99.76% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025717 seconds (1.03 k allocations: 34.125 KiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.078057 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.073798 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.114228 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.099072 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.336882 seconds (364.10 k allocations: 19.000 MiB, 7.57% gc time, 99.39% compilation time)
Running: legendre_quadrature
  0.068798 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000089 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000297 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000231 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000326 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.094322 seconds (1.04 k allocations: 56.531 KiB, 78.95% compilation time)
Running: simpsons_rule
  0.000015 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.020307 seconds (923 allocations: 39.281 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.015952 seconds (44.29 k allocations: 702.859 KiB, 92.90% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.097260 seconds (80.91 k allocations: 4.823 MiB, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.289344 seconds (230.62 k allocations: 12.967 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.251048 seconds (283.17 k allocations: 15.880 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.399011 seconds (234.76 k allocations: 13.174 MiB, 32.64% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.425874 seconds (234.76 k allocations: 13.045 MiB, 99.53% compilation time)
Running: jacobi_quadrature with α=β=1
  1.376041 seconds (447.19 k allocations: 163.226 MiB, 8.55% gc time, 50.36% compilation time)
Running: legendre_quadrature
  0.280405 seconds (185.44 k allocations: 10.707 MiB, 99.39% compilation time)
Running: lobatto_quadrature
  0.263447 seconds (196.77 k allocations: 11.423 MiB, 99.31% compilation time)
Running: radau_quadrature
  0.467776 seconds (196.77 k allocations: 11.420 MiB, 5.05% gc time, 99.60% compilation time)
Running: rectangle_rule_left
  0.665984 seconds (18.82 k allocations: 1.147 MiB, 15.39% compilation time)
Running: rectangle_rule_midpoint
  0.069790 seconds (24.67 k allocations: 1.555 MiB, 99.78% compilation time)
Running: rectangle_rule_right
  0.505424 seconds (17.39 k allocations: 1.062 MiB, 13.24% compilation time)
Running: rombergs_method
  0.245247 seconds (134.27 k allocations: 7.849 MiB, 98.54% compilation time)
Running: simpsons_rule
  0.034955 seconds (36.49 k allocations: 2.341 MiB, 99.50% compilation time)
Running: simpsons38_rule
  0.050198 seconds (42.37 k allocations: 2.678 MiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.038709 seconds (42.32 k allocations: 1.671 MiB, 98.09% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.069266 seconds (66.94 k allocations: 2.959 MiB, 69.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.305655 seconds (237.20 k allocations: 13.032 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.305431 seconds (290.20 k allocations: 15.872 MiB, 10.99% gc time, 99.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.368490 seconds (241.33 k allocations: 13.118 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.274833 seconds (241.34 k allocations: 13.123 MiB, 94.62% compilation time)
Running: hermite_quadrature with k=2
 22.556666 seconds (20.10 M allocations: 1.056 GiB, 9.53% gc time, 99.97% compilation time)
Running: jacobi_quadrature with α=β=1
  0.993904 seconds (456.36 k allocations: 49.417 MiB, 57.86% gc time, 38.94% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.303988 seconds (276.26 k allocations: 15.249 MiB, 98.88% compilation time)
Running: legendre_quadrature
  0.268453 seconds (191.98 k allocations: 11.035 MiB, 6.46% gc time, 93.60% compilation time)
Running: lobatto_quadrature
  0.382741 seconds (217.43 k allocations: 37.194 MiB, 91.13% compilation time)
Running: radau_quadrature
  0.221269 seconds (214.01 k allocations: 29.854 MiB, 6.82% gc time, 84.20% compilation time)
Running: rectangle_rule_left
  0.106594 seconds (21.73 k allocations: 1.293 MiB, 98.77% compilation time)
Running: rectangle_rule_midpoint
  0.112155 seconds (26.47 k allocations: 1.642 MiB, 99.89% compilation time)
Running: rectangle_rule_right
  0.022403 seconds (18.50 k allocations: 1.117 MiB, 99.33% compilation time)
Running: rombergs_method
  0.291843 seconds (136.74 k allocations: 7.829 MiB, 99.21% compilation time)
Running: simpsons_rule
  0.105325 seconds (43.97 k allocations: 2.609 MiB, 23.37% gc time, 99.72% compilation time)
Running: simpsons38_rule
  0.041856 seconds (57.34 k allocations: 3.064 MiB, 98.95% compilation time)
Running: trapezoidal_rule
  0.024857 seconds (28.35 k allocations: 1.595 MiB, 95.66% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.069240 seconds (50.91 k allocations: 2.619 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.355721 seconds (232.72 k allocations: 12.830 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=2
  0.193576 seconds (285.38 k allocations: 15.659 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.224402 seconds (236.87 k allocations: 12.928 MiB, 9.94% gc time, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.188393 seconds (236.87 k allocations: 12.929 MiB, 98.86% compilation time)
Running: hermite_quadrature with k=2
  0.126243 seconds (170.78 k allocations: 9.790 MiB, 98.29% compilation time)
Running: jacobi_quadrature with α=β=1
  6.766840 seconds (449.63 k allocations: 1.175 GiB, 31.44% gc time, 6.33% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.234192 seconds (271.55 k allocations: 15.060 MiB, 98.29% compilation time)
Running: legendre_quadrature
  0.284336 seconds (187.55 k allocations: 10.818 MiB, 8.56% gc time, 97.99% compilation time)
Running: lobatto_quadrature
  0.280338 seconds (208.18 k allocations: 22.923 MiB, 94.30% compilation time)
Running: radau_quadrature
  0.231510 seconds (207.34 k allocations: 20.853 MiB, 6.67% gc time, 88.96% compilation time)
Running: rectangle_rule_left
  0.043658 seconds (19.52 k allocations: 1.188 MiB, 99.74% compilation time)
Running: rectangle_rule_midpoint
  0.016246 seconds (25.36 k allocations: 1.591 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.038337 seconds (17.36 k allocations: 1.062 MiB, 99.66% compilation time)
Running: rombergs_method
  0.123003 seconds (132.59 k allocations: 7.638 MiB, 98.02% compilation time)
Running: simpsons_rule
  0.022187 seconds (39.30 k allocations: 2.442 MiB, 99.17% compilation time)
Running: simpsons38_rule
  0.134499 seconds (48.16 k allocations: 2.821 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.047799 seconds (23.26 k allocations: 1.433 MiB, 95.90% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.020870 seconds (39.05 k allocations: 2.475 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=1
  0.302946 seconds (231.10 k allocations: 13.042 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.398408 seconds (283.67 k allocations: 15.996 MiB, 7.93% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.259817 seconds (235.25 k allocations: 13.141 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.207550 seconds (235.25 k allocations: 12.975 MiB, 96.50% compilation time)
Running: jacobi_quadrature with α=β=1
  1.403124 seconds (447.72 k allocations: 194.255 MiB, 6.03% gc time, 38.66% compilation time)
Running: legendre_quadrature
  0.290272 seconds (185.93 k allocations: 10.732 MiB, 99.23% compilation time)
Running: lobatto_quadrature
  0.390069 seconds (197.26 k allocations: 11.448 MiB, 99.29% compilation time)
Running: radau_quadrature
  0.450778 seconds (197.26 k allocations: 11.445 MiB, 6.83% gc time, 86.04% compilation time)
Running: rectangle_rule_left
  0.351125 seconds (19.34 k allocations: 1.173 MiB, 13.21% compilation time)
Running: rectangle_rule_midpoint
  0.021217 seconds (25.01 k allocations: 1.573 MiB, 99.37% compilation time)
Running: rectangle_rule_right
  0.172221 seconds (17.73 k allocations: 1.081 MiB, 20.36% compilation time)
Running: rombergs_method
  0.165121 seconds (145.02 k allocations: 8.485 MiB, 90.35% compilation time)
Running: simpsons_rule
  0.046936 seconds (37.11 k allocations: 2.369 MiB, 97.37% compilation time)
Running: simpsons38_rule
  0.038610 seconds (43.08 k allocations: 2.708 MiB, 99.48% compilation time)
Running: trapezoidal_rule
  0.033839 seconds (43.25 k allocations: 1.703 MiB, 98.21% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025278 seconds (38.85 k allocations: 2.409 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=1
  0.292742 seconds (231.69 k allocations: 12.992 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.391085 seconds (284.30 k allocations: 15.895 MiB, 6.40% gc time, 99.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.369648 seconds (235.84 k allocations: 13.130 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.222743 seconds (235.84 k allocations: 13.142 MiB, 98.79% compilation time)
Running: jacobi_quadrature with α=β=1
  1.489700 seconds (448.44 k allocations: 148.944 MiB, 11.73% gc time, 34.45% compilation time)
Running: legendre_quadrature
  0.197803 seconds (186.53 k allocations: 10.750 MiB, 98.97% compilation time)
Running: lobatto_quadrature
  0.143400 seconds (197.86 k allocations: 11.468 MiB, 98.24% compilation time)
Running: radau_quadrature
  0.277971 seconds (197.86 k allocations: 11.478 MiB, 99.14% compilation time)
Running: rectangle_rule_left
  0.590278 seconds (19.59 k allocations: 1.186 MiB, 3.15% gc time, 7.35% compilation time)
Running: rectangle_rule_midpoint
  0.092511 seconds (25.01 k allocations: 1.574 MiB, 99.13% compilation time)
Running: rectangle_rule_right
  0.656732 seconds (17.69 k allocations: 1.078 MiB, 5.63% compilation time)
Running: rombergs_method
  0.150555 seconds (135.49 k allocations: 7.815 MiB, 97.23% compilation time)
Running: simpsons_rule
  0.023157 seconds (37.60 k allocations: 2.389 MiB, 92.30% compilation time)
Running: simpsons38_rule
  0.091688 seconds (43.78 k allocations: 2.734 MiB, 97.68% compilation time)
Running: trapezoidal_rule
  0.020215 seconds (55.40 k allocations: 1.899 MiB, 95.11% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.278405 seconds (147.44 k allocations: 8.794 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.146604 seconds (69.93 k allocations: 2.205 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.160349 seconds (105.09 k allocations: 2.868 MiB, 97.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.147628 seconds (92.57 k allocations: 2.654 MiB, 97.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.143673 seconds (72.10 k allocations: 2.248 MiB, 98.24% compilation time)
Running: jacobi_quadrature with α=β=1
  1.794615 seconds (480.47 k allocations: 167.785 MiB, 13.74% gc time, 41.05% compilation time)
Running: legendre_quadrature
  0.127383 seconds (18.73 k allocations: 1.094 MiB, 94.73% compilation time)
Running: lobatto_quadrature
  0.001237 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.001158 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.821243 seconds (590.00 M allocations: 8.792 GiB, 7.05% gc time)
Running: rectangle_rule_midpoint
  0.000030 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 18.823743 seconds (592.75 M allocations: 8.833 GiB, 5.65% gc time)
Running: rombergs_method
  0.222445 seconds (20.51 k allocations: 1.165 MiB, 6.45% gc time, 99.73% compilation time)
Running: simpsons_rule
  0.000047 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025123 seconds (463 allocations: 22.578 KiB, 99.58% compilation time)
Running: trapezoidal_rule
  0.018317 seconds (171 allocations: 7.859 KiB, 99.41% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.176552 seconds (209.93 M allocations: 3.138 GiB, 1.65% gc time, 0.65% compilation time)
Running: chebyshev_quadrature with k=1
  0.631628 seconds (414.04 k allocations: 22.956 MiB, 3.83% gc time, 99.09% compilation time)
Running: chebyshev_quadrature with k=2
 17.743574 seconds (468.68 k allocations: 4.040 GiB, 5.92% gc time, 3.88% compilation time)
Running: chebyshev_quadrature with k=3
  7.828342 seconds (249.12 k allocations: 1.642 GiB, 3.47% gc time, 4.86% compilation time)
Running: chebyshev_quadrature with k=4
 10.915160 seconds (249.12 k allocations: 2.260 GiB, 1.88% gc time, 2.68% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.131392 seconds (484.53 k allocations: 13.254 GiB, 8.29% gc time, 1.78% compilation time)
Running: legendre_quadrature.
  9.253337 seconds (223.29 k allocations: 1.976 GiB, 1.08% gc time, 4.38% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.936654 seconds (8.23 M allocations: 13.383 GiB, 13.44% gc time, 0.95% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.859140 seconds (7.23 M allocations: 13.369 GiB, 10.67% gc time, 1.25% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.066100 seconds (22.25 k allocations: 1.347 MiB, 0.34% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.768333 seconds (30.45 k allocations: 1.884 MiB, 0.25% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.872157 seconds (22.45 k allocations: 1.357 MiB, 1.12% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.987237 seconds (438.14 k allocations: 152.679 MiB, 1.76% gc time, 17.04% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.657085 seconds (200.04 M allocations: 2.983 GiB, 2.47% gc time, 0.26% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.787023 seconds (600.05 M allocations: 8.943 GiB, 5.93% gc time, 0.17% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.445623 seconds (600.03 M allocations: 8.943 GiB, 3.89% gc time, 0.13% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.126345 seconds (109.56 k allocations: 4.131 MiB, 97.20% compilation time)
Running: chebyshev_quadrature with k=1
  0.298251 seconds (247.70 k allocations: 13.448 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.265995 seconds (272.34 k allocations: 14.521 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.207184 seconds (220.25 k allocations: 11.633 MiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.355001 seconds (220.25 k allocations: 11.661 MiB, 36.53% gc time, 99.64% compilation time)
Running: jacobi_quadrature with α=β=1
  0.499083 seconds (389.30 k allocations: 34.999 MiB, 96.08% compilation time)
Running: laguerre_quadrature with k=2
  0.202292 seconds (180.54 k allocations: 10.477 MiB, 84.26% compilation time)
Running: legendre_quadrature
  0.174106 seconds (145.99 k allocations: 8.136 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.020781 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016734 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.030823 seconds (18.88 k allocations: 1.122 MiB, 70.05% compilation time)
Running: rectangle_rule_midpoint
  0.025921 seconds (25.48 k allocations: 1.575 MiB, 68.28% compilation time)
Running: rectangle_rule_right
  0.051274 seconds (17.48 k allocations: 1.049 MiB, 82.64% compilation time)
Running: rombergs_method
  0.283074 seconds (172.18 k allocations: 9.835 MiB, 99.16% compilation time)
Running: simpsons_rule
  0.000281 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.089123 seconds (78.86 k allocations: 3.385 MiB, 98.94% compilation time)
Running: trapezoidal_rule
  0.102906 seconds (2.39 M allocations: 37.684 MiB, 32.06% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000706 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.108237 seconds (2.46 k allocations: 1.691 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.160059 seconds (2.71 k allocations: 2.355 MiB, 97.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.092787 seconds (2.31 k allocations: 2.028 MiB, 96.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.099219 seconds (2.31 k allocations: 1.469 MiB, 96.07% compilation time)
Running: jacobi_quadrature with α=β=1
  5.679788 seconds (366.38 k allocations: 904.821 MiB, 5.37% gc time, 7.71% compilation time)
Running: legendre_quadrature
  0.066126 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000169 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000115 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.411663 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000343 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.575648 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070092 seconds (997 allocations: 56.672 KiB, 94.76% compilation time)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000994 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000278 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.285567 seconds (2.53 k allocations: 579.203 KiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.106699 seconds (2.79 k allocations: 780.188 KiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.099169 seconds (2.39 k allocations: 661.047 KiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.133293 seconds (2.39 k allocations: 491.547 KiB, 99.44% compilation time)
Running: jacobi_quadrature with α=β=1
  2.194619 seconds (372.94 k allocations: 252.932 MiB, 23.52% compilation time)
Running: legendre_quadrature
  0.055375 seconds (1.32 k allocations: 67.859 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000057 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.180919 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000133 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.057292 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064173 seconds (1.21 k allocations: 64.938 KiB, 99.61% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000466 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
