Julia Version 1.6.0-DEV.1203
Commit 21e7486322 (2020-10-13 02:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mCompilerSupportLibraries_jll[32m âœ“[39m[39m
  [90mOpenSpecFun_jll[32m âœ“[39m[39m
  [90mSpecialFunctions[32m âœ“[39m[39m
  [90mFastGaussQuadrature[32m âœ“[39m[39m
  FunctionIntegrator[32m âœ“[39m
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_Nu9hdX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Nu9hdX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.405980 seconds (289.22 k allocations: 13.533 MiB, 94.92% compilation time)
Running: chebyshev_quadrature with k=1
  2.668956 seconds (2.20 M allocations: 126.665 MiB, 3.94% gc time, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.573770 seconds (409.38 k allocations: 23.559 MiB, 95.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.577983 seconds (473.75 k allocations: 26.635 MiB, 2.67% gc time, 96.29% compilation time)
Running: chebyshev_quadrature with k=4
  1.279427 seconds (418.55 k allocations: 23.258 MiB, 85.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 75.731294 seconds (34.88 M allocations: 2.927 GiB, 22.16% gc time, 88.32% compilation time)
Running: laguerre_quadrature with k=1
  5.520280 seconds (3.17 M allocations: 177.107 MiB, 2.48% gc time, 99.93% compilation time)
Running: legendre_quadrature
  0.803114 seconds (206.13 k allocations: 11.834 MiB, 6.39% gc time, 99.77% compilation time)
Running: lobatto_quadrature
  0.531233 seconds (329.25 k allocations: 19.875 MiB, 99.59% compilation time)
Running: radau_quadrature
  0.633800 seconds (446.99 k allocations: 27.275 MiB, 3.30% gc time, 99.67% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 43.087378 seconds (100.02 M allocations: 1.491 GiB, 0.79% gc time, 0.37% compilation time)
Running: rectangle_rule_midpoint.
  0.095739 seconds (172.46 k allocations: 3.827 MiB, 25.40% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 41.745622 seconds (100.02 M allocations: 1.491 GiB, 0.79% gc time, 0.12% compilation time)
Running: rombergs_method
  1.416494 seconds (722.80 k allocations: 41.724 MiB, 88.72% compilation time)
Running: simpsons_rule
  0.050834 seconds (46.55 k allocations: 2.532 MiB, 40.14% gc time, 95.58% compilation time)
Running: simpsons38_rule
  0.197975 seconds (108.58 k allocations: 5.757 MiB, 85.59% compilation time)
Running: trapezoidal_rule
  0.292290 seconds (1.72 M allocations: 28.606 MiB, 20.22% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.165030 seconds (29.80 k allocations: 1.768 MiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.651584 seconds (290.07 k allocations: 15.332 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.148879 seconds (93.80 k allocations: 2.675 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  1.072003 seconds (82.06 k allocations: 2.476 MiB, 99.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.134253 seconds (64.67 k allocations: 2.122 MiB, 94.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.476546 seconds (503.81 k allocations: 161.842 MiB, 9.09% gc time, 69.54% compilation time)
Running: legendre_quadrature
  0.177620 seconds (41.18 k allocations: 2.370 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.173518 seconds (15.57 k allocations: 990.060 KiB, 99.91% compilation time)
Running: radau_quadrature
  0.014391 seconds (15.68 k allocations: 997.274 KiB, 99.07% compilation time)
Running: rectangle_rule_left
 11.850355 seconds (471.41 M allocations: 7.025 GiB, 7.01% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.909380 seconds (476.96 M allocations: 7.107 GiB, 6.94% gc time)
Running: rombergs_method
  0.364571 seconds (326.35 k allocations: 18.518 MiB, 99.90% compilation time)
Running: simpsons_rule
  0.000027 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.159392 seconds (18.91 k allocations: 1.146 MiB, 99.94% compilation time)
Running: trapezoidal_rule
  0.043781 seconds (16.49 k allocations: 1.000 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014272 seconds (1.03 k allocations: 34.125 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.069247 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.215345 seconds (2.71 k allocations: 124.266 KiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.182370 seconds (2.31 k allocations: 109.297 KiB, 99.96% compilation time)
Running: chebyshev_quadrature with k=4
  0.160866 seconds (2.31 k allocations: 109.297 KiB, 99.96% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.632094 seconds (363.64 k allocations: 18.961 MiB, 9.39% gc time, 99.74% compilation time)
Running: legendre_quadrature
  0.054738 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000074 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000025 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000186 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000131 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000184 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.051909 seconds (1.04 k allocations: 56.531 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000016 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022442 seconds (923 allocations: 39.281 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.014538 seconds (44.29 k allocations: 702.859 KiB, 93.24% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.361081 seconds (80.91 k allocations: 4.823 MiB, 99.94% compilation time)
Running: chebyshev_quadrature with k=1
  0.286441 seconds (230.61 k allocations: 12.967 MiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.379150 seconds (283.17 k allocations: 15.880 MiB, 16.06% gc time, 90.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.161631 seconds (234.76 k allocations: 13.158 MiB, 95.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.630880 seconds (234.76 k allocations: 13.047 MiB, 94.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.970791 seconds (446.72 k allocations: 163.203 MiB, 7.70% gc time, 43.22% compilation time)
Running: legendre_quadrature
  0.338242 seconds (185.44 k allocations: 10.707 MiB, 99.47% compilation time)
Running: lobatto_quadrature
  0.739525 seconds (196.61 k allocations: 11.410 MiB, 99.74% compilation time)
Running: radau_quadrature
  0.939499 seconds (196.61 k allocations: 11.412 MiB, 2.39% gc time, 99.82% compilation time)
Running: rectangle_rule_left
  0.650402 seconds (18.82 k allocations: 1.147 MiB, 8.38% compilation time)
Running: rectangle_rule_midpoint
  0.018885 seconds (24.67 k allocations: 1.555 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.511265 seconds (17.39 k allocations: 1.062 MiB, 4.27% compilation time)
Running: rombergs_method
  0.445496 seconds (134.27 k allocations: 7.782 MiB, 99.41% compilation time)
Running: simpsons_rule
  0.019849 seconds (36.49 k allocations: 2.341 MiB, 99.18% compilation time)
Running: simpsons38_rule
  0.025719 seconds (42.37 k allocations: 2.678 MiB, 99.32% compilation time)
Running: trapezoidal_rule
  0.144422 seconds (42.32 k allocations: 1.671 MiB, 99.55% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024603 seconds (66.94 k allocations: 2.959 MiB, 96.26% compilation time)
Running: chebyshev_quadrature with k=1
  0.433558 seconds (237.20 k allocations: 13.033 MiB, 99.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.408240 seconds (290.20 k allocations: 15.872 MiB, 5.38% gc time, 51.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.407942 seconds (241.33 k allocations: 13.134 MiB, 99.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.446532 seconds (241.34 k allocations: 13.123 MiB, 82.46% compilation time)
Running: hermite_quadrature with k=2
 69.490661 seconds (20.10 M allocations: 1.056 GiB, 31.32% gc time, 97.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.202955 seconds (455.90 k allocations: 49.394 MiB, 4.45% gc time, 91.57% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.388179 seconds (276.26 k allocations: 15.248 MiB, 99.11% compilation time)
Running: legendre_quadrature
  0.285345 seconds (191.98 k allocations: 11.035 MiB, 99.21% compilation time)
Running: lobatto_quadrature
  0.756168 seconds (217.27 k allocations: 37.185 MiB, 29.17% gc time, 95.61% compilation time)
Running: radau_quadrature
  1.730389 seconds (213.85 k allocations: 29.847 MiB, 98.54% compilation time)
Running: rectangle_rule_left
  0.258066 seconds (21.73 k allocations: 1.293 MiB, 99.94% compilation time)
Running: rectangle_rule_midpoint
  2.008392 seconds (26.47 k allocations: 1.642 MiB, 99.99% compilation time)
Running: rectangle_rule_right
  0.101120 seconds (18.50 k allocations: 1.117 MiB, 99.87% compilation time)
Running: rombergs_method
  0.435293 seconds (136.74 k allocations: 7.829 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.024119 seconds (43.97 k allocations: 2.609 MiB, 98.80% compilation time)
Running: simpsons38_rule
  0.356319 seconds (57.34 k allocations: 3.063 MiB, 8.90% gc time, 99.90% compilation time)
Running: trapezoidal_rule
  0.018950 seconds (28.35 k allocations: 1.595 MiB, 98.83% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037962 seconds (50.91 k allocations: 2.619 MiB, 77.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.775446 seconds (232.72 k allocations: 12.830 MiB, 99.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.489261 seconds (285.38 k allocations: 15.644 MiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.200076 seconds (236.87 k allocations: 12.928 MiB, 14.21% gc time, 92.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.599652 seconds (236.87 k allocations: 12.929 MiB, 94.79% compilation time)
Running: hermite_quadrature with k=2
  0.482170 seconds (170.78 k allocations: 9.790 MiB, 98.79% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 11.331157 seconds (449.16 k allocations: 1.175 GiB, 41.91% gc time, 10.24% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  1.734478 seconds (271.55 k allocations: 15.060 MiB, 99.77% compilation time)
Running: legendre_quadrature
  0.538298 seconds (187.55 k allocations: 10.818 MiB, 71.07% compilation time)
Running: lobatto_quadrature
  0.552556 seconds (208.03 k allocations: 22.920 MiB, 74.67% compilation time)
Running: radau_quadrature
  0.620790 seconds (207.18 k allocations: 20.844 MiB, 4.40% gc time, 98.07% compilation time)
Running: rectangle_rule_left
  0.027131 seconds (19.52 k allocations: 1.188 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.045589 seconds (25.36 k allocations: 1.591 MiB, 99.62% compilation time)
Running: rectangle_rule_right
  0.033349 seconds (17.36 k allocations: 1.062 MiB, 99.54% compilation time)
Running: rombergs_method
  0.109089 seconds (132.58 k allocations: 7.622 MiB, 97.69% compilation time)
Running: simpsons_rule
  0.062349 seconds (39.30 k allocations: 2.442 MiB, 99.66% compilation time)
Running: simpsons38_rule
  0.148930 seconds (48.16 k allocations: 2.821 MiB, 96.98% compilation time)
Running: trapezoidal_rule
  0.032653 seconds (23.26 k allocations: 1.433 MiB, 99.23% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.039339 seconds (39.05 k allocations: 2.475 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.201965 seconds (231.10 k allocations: 13.042 MiB, 96.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.250789 seconds (283.67 k allocations: 15.997 MiB, 97.99% compilation time)
Running: chebyshev_quadrature with k=3
  1.685227 seconds (235.25 k allocations: 13.204 MiB, 2.34% gc time, 99.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.494518 seconds (235.25 k allocations: 12.975 MiB, 99.48% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.094716 seconds (447.26 k allocations: 194.232 MiB, 16.50% gc time, 28.78% compilation time)
Running: legendre_quadrature
  0.465090 seconds (185.93 k allocations: 10.795 MiB, 99.47% compilation time)
Running: lobatto_quadrature
  0.249555 seconds (197.11 k allocations: 11.439 MiB, 98.95% compilation time)
Running: radau_quadrature
  0.311697 seconds (197.11 k allocations: 11.437 MiB, 99.03% compilation time)
Running: rectangle_rule_left
  0.369986 seconds (19.34 k allocations: 1.173 MiB, 8.68% compilation time)
Running: rectangle_rule_midpoint
  0.240758 seconds (25.01 k allocations: 1.573 MiB, 99.93% compilation time)
Running: rectangle_rule_right
  0.199214 seconds (17.73 k allocations: 1.081 MiB, 11.00% compilation time)
Running: rombergs_method
  1.042826 seconds (145.02 k allocations: 8.485 MiB, 70.65% compilation time)
Running: simpsons_rule
  0.025033 seconds (37.11 k allocations: 2.369 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.058240 seconds (43.08 k allocations: 2.708 MiB, 94.30% compilation time)
Running: trapezoidal_rule
  0.022613 seconds (43.25 k allocations: 1.703 MiB, 96.73% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.211390 seconds (38.85 k allocations: 2.409 MiB, 26.33% gc time, 95.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.358875 seconds (231.69 k allocations: 13.051 MiB, 98.00% compilation time)
Running: chebyshev_quadrature with k=2
  0.768345 seconds (284.30 k allocations: 15.957 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.423579 seconds (235.84 k allocations: 13.067 MiB, 98.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.340929 seconds (235.84 k allocations: 13.142 MiB, 99.10% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.485663 seconds (447.97 k allocations: 148.920 MiB, 6.39% gc time, 33.99% compilation time)
Running: legendre_quadrature
  0.521959 seconds (186.53 k allocations: 10.754 MiB, 99.56% compilation time)
Running: lobatto_quadrature
  0.326657 seconds (197.71 k allocations: 11.460 MiB, 99.32% compilation time)
Running: radau_quadrature
  0.216227 seconds (197.70 k allocations: 11.517 MiB, 98.53% compilation time)
Running: rectangle_rule_left
  0.693964 seconds (19.59 k allocations: 1.186 MiB, 4.11% compilation time)
Running: rectangle_rule_midpoint
  0.202961 seconds (25.01 k allocations: 1.574 MiB, 99.93% compilation time)
Running: rectangle_rule_right
  0.649893 seconds (17.69 k allocations: 1.078 MiB, 4.95% compilation time)
Running: rombergs_method
  0.406331 seconds (135.49 k allocations: 7.815 MiB, 99.21% compilation time)
Running: simpsons_rule
  0.033778 seconds (37.60 k allocations: 2.389 MiB, 99.47% compilation time)
Running: simpsons38_rule
  0.085820 seconds (43.78 k allocations: 2.735 MiB, 98.90% compilation time)
Running: trapezoidal_rule
  0.134301 seconds (55.40 k allocations: 1.899 MiB, 99.29% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.226604 seconds (147.45 k allocations: 8.799 MiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.207420 seconds (69.93 k allocations: 2.205 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.134418 seconds (105.09 k allocations: 2.868 MiB, 97.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.145978 seconds (92.57 k allocations: 2.654 MiB, 97.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.193897 seconds (72.10 k allocations: 2.248 MiB, 98.71% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.094504 seconds (480.20 k allocations: 167.772 MiB, 11.55% gc time, 50.38% compilation time)
Running: legendre_quadrature
  0.136513 seconds (18.73 k allocations: 1.095 MiB, 74.03% compilation time)
Running: lobatto_quadrature
  0.000091 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.270842 seconds (590.00 M allocations: 8.792 GiB, 7.58% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.165400 seconds (592.75 M allocations: 8.833 GiB, 10.23% gc time)
Running: rombergs_method
  0.307757 seconds (20.51 k allocations: 1.165 MiB, 99.84% compilation time)
Running: simpsons_rule
  0.000033 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.080524 seconds (463 allocations: 22.578 KiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.013979 seconds (171 allocations: 7.859 KiB, 99.15% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.666585 seconds (209.93 M allocations: 3.138 GiB, 3.29% gc time, 2.08% compilation time)
Running: chebyshev_quadrature with k=1
  0.558520 seconds (414.02 k allocations: 22.954 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=2
 17.262360 seconds (468.66 k allocations: 4.040 GiB, 5.18% gc time, 6.84% compilation time)
Running: chebyshev_quadrature with k=3
  8.223814 seconds (249.12 k allocations: 1.642 GiB, 3.26% gc time, 11.73% compilation time)
Running: chebyshev_quadrature with k=4
 10.757574 seconds (249.12 k allocations: 2.260 GiB, 1.65% gc time, 5.27% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.805200 seconds (484.08 k allocations: 13.254 GiB, 15.85% gc time, 1.57% compilation time)
Running: legendre_quadrature.
  9.302152 seconds (223.28 k allocations: 1.976 GiB, 2.24% gc time, 7.38% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.123601 seconds (8.23 M allocations: 13.383 GiB, 24.92% gc time, 0.73% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.755563 seconds (7.23 M allocations: 13.369 GiB, 39.31% gc time, 0.92% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.638551 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.649536 seconds (30.45 k allocations: 1.884 MiB, 9.52% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.378726 seconds (22.45 k allocations: 1.357 MiB, 0.98% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.465465 seconds (438.13 k allocations: 152.678 MiB, 7.05% gc time, 26.06% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.793624 seconds (200.04 M allocations: 2.983 GiB, 2.04% gc time, 0.18% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.831150 seconds (600.05 M allocations: 8.943 GiB, 5.34% gc time, 1.24% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.226451 seconds (600.03 M allocations: 8.943 GiB, 5.35% gc time, 0.94% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.203481 seconds (109.56 k allocations: 4.131 MiB, 91.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.450339 seconds (247.70 k allocations: 13.452 MiB, 93.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.466516 seconds (272.34 k allocations: 14.537 MiB, 96.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.560627 seconds (220.25 k allocations: 11.663 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.269739 seconds (220.25 k allocations: 11.661 MiB, 99.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.914023 seconds (388.84 k allocations: 34.971 MiB, 94.74% compilation time)
Running: laguerre_quadrature with k=2
  0.320473 seconds (180.54 k allocations: 10.477 MiB, 88.71% compilation time)
Running: legendre_quadrature
  0.158551 seconds (145.98 k allocations: 8.073 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.020104 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016591 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.077161 seconds (18.88 k allocations: 1.121 MiB, 76.95% compilation time)
Running: rectangle_rule_midpoint
  0.112849 seconds (25.48 k allocations: 1.575 MiB, 89.72% compilation time)
Running: rectangle_rule_right
  0.041608 seconds (17.48 k allocations: 1.049 MiB, 56.62% compilation time)
Running: rombergs_method
  0.490258 seconds (172.15 k allocations: 9.828 MiB, 99.51% compilation time)
Running: simpsons_rule
  0.000339 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.060202 seconds (78.86 k allocations: 3.385 MiB, 97.97% compilation time)
Running: trapezoidal_rule
  0.208119 seconds (2.39 M allocations: 37.684 MiB, 52.24% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000752 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.143586 seconds (2.46 k allocations: 1.691 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.119057 seconds (2.71 k allocations: 2.355 MiB, 96.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.187685 seconds (2.31 k allocations: 2.028 MiB, 87.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.115090 seconds (2.31 k allocations: 1.469 MiB, 86.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.537761 seconds (365.92 k allocations: 904.797 MiB, 9.55% gc time, 13.11% compilation time)
Running: legendre_quadrature
  0.237569 seconds (1.27 k allocations: 68.203 KiB, 99.94% compilation time)
Running: lobatto_quadrature
  0.000275 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000138 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.563125 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000216 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.529747 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.068896 seconds (997 allocations: 56.672 KiB, 99.56% compilation time)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001017 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000150 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.113372 seconds (2.53 k allocations: 579.203 KiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.105367 seconds (2.79 k allocations: 780.188 KiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.094622 seconds (2.39 k allocations: 661.047 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.142264 seconds (2.39 k allocations: 491.547 KiB, 99.58% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.863795 seconds (372.48 k allocations: 252.908 MiB, 33.78% compilation time)
Running: legendre_quadrature
  0.113359 seconds (1.32 k allocations: 67.859 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000115 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000054 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.252083 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000135 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.130163 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.135193 seconds (1.21 k allocations: 64.938 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000450 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
