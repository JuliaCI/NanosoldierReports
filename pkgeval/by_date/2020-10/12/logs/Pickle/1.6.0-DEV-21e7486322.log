Julia Version 1.6.0-DEV.1203
Commit 21e7486322 (2020-10-13 02:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed InternedStrings â”€â”€â”€â”€ v0.7.0
  Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+17
  Installed Strided â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
  Installed TupleTools â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.0
  Installed OrderedCollections â”€ v1.3.1
  Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
  Installed Pickle â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
  Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
  Installed ZipFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [fbb45041] + Pickle v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [864edb3b] + DataStructures v0.17.20
  [7d512f48] + InternedStrings v0.7.0
  [692b3bcd] + JLLWrappers v1.1.1
  [bac558e1] + OrderedCollections v1.3.1
  [fbb45041] + Pickle v0.2.0
  [5e0ebb24] + Strided v1.1.1
  [9d95972d] + TupleTools v1.2.0
  [a5390f91] + ZipFile v0.9.3
  [83775a58] + Zlib_jll v1.2.11+17
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mJLLWrappers[32m âœ“[39m[39m
  [90mInternedStrings[32m âœ“[39m[39m
  [90mTupleTools[32m âœ“[39m[39m
  [90mOrderedCollections[32m âœ“[39m[39m
  [90mZlib_jll[32m âœ“[39m[39m
  [90mStrided[32m âœ“[39m[39m
  [90mZipFile[32m âœ“[39m[39m
  [90mDataStructures[32m âœ“[39m[39m
  Pickle[32m âœ“[39m
9 dependencies successfully precompiled

    Testing Pickle
Status `/tmp/jl_vzbTp5/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [e30172f5] Documenter v0.25.2
  [7d512f48] InternedStrings v0.7.0
  [fbb45041] Pickle v0.2.0
  [438e738f] PyCall v1.92.1
  [5e0ebb24] Strided v1.1.1
  [a5390f91] ZipFile v0.9.3
  [9e88b42a] Serialization
  [8dfed614] Test
Status `/tmp/jl_vzbTp5/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [864edb3b] DataStructures v0.17.20
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [7d512f48] InternedStrings v0.7.0
  [692b3bcd] JLLWrappers v1.1.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [fbb45041] Pickle v0.2.0
  [438e738f] PyCall v1.92.1
  [5e0ebb24] Strided v1.1.1
  [9d95972d] TupleTools v1.2.0
  [81def892] VersionParsing v1.2.0
  [a5390f91] ZipFile v0.9.3
  [83775a58] Zlib_jll v1.2.11+17
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: Installing torch via the Conda pytorch package...
[ Info: Running `conda install -q -y pytorch` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
Solving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.
Collecting package metadata (repodata.json): ...working... done
Solving environment: ...working... done

("Connection broken: ConnectionResetError(104, 'Connection reset by peer')", ConnectionResetError(104, 'Connection reset by peer'))


## Package Plan ##

  environment location: /home/pkgeval/.julia/conda/3

  added / updated specs:
    - pytorch


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    _pytorch_select-0.2        |            gpu_0           2 KB
    cudatoolkit-10.1.243       |       h6bb024c_0       347.4 MB
    cudnn-7.6.5                |       cuda10.1_0       179.9 MB
    ninja-1.10.1               |   py38hfd86e86_0         1.4 MB
    pytorch-1.4.0              |cuda101py38h02f0884_0       167.4 MB
    ------------------------------------------------------------
                                           Total:       696.3 MB

The following NEW packages will be INSTALLED:

  _pytorch_select    pkgs/main/linux-64::_pytorch_select-0.2-gpu_0
  cudatoolkit        pkgs/main/linux-64::cudatoolkit-10.1.243-h6bb024c_0
  cudnn              pkgs/main/linux-64::cudnn-7.6.5-cuda10.1_0
  ninja              pkgs/main/linux-64::ninja-1.10.1-py38hfd86e86_0
  pytorch            pkgs/main/linux-64::pytorch-1.4.0-cuda101py38h02f0884_0


ERROR: LoadError: LoadError: failed process: Process(setenv(`/home/pkgeval/.julia/conda/3/bin/conda install -q -y pytorch`,["PYTHONIOENCODING=UTF-8", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "PWD=/home/pkgeval", "DISPLAY=:99", "OPENBLAS_NUM_THREADS=8", "XAUTHORITY=/tmp/xvfb-run.YCqQhj/Xauthority", "CI=true", "CONDARC=/home/pkgeval/.julia/conda/3/condarc-julia.yml", "R_HOME=*", "CONDA_PREFIX=/home/pkgeval/.julia/conda/3", "DEBIAN_FRONTEND=noninteractive", "JULIA_LOAD_PATH=@:/tmp/jl_vzbTp5", "JULIA_MAX_NUM_PRECOMPILE_FILES=9223372036854775807", "PKGEVAL=true", "HOME=/home/pkgeval", "JULIA_PKGEVAL=true", "OPENBLAS_MAIN_FREE=1", "JULIA_DEPOT_PATH=::/usr/local/share/julia", "HOSTNAME=64e00df314c7", "JULIA_NUM_THREADS=2"]), ProcessExited(1)) [1]

Stacktrace:
  [1] pipeline_error
    @ ./process.jl:525 [inlined]
  [2] run(::Cmd; wait::Bool)
    @ Base ./process.jl:440
  [3] run
    @ ./process.jl:438 [inlined]
  [4] runconda(args::Cmd, env::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:114
  [5] add(pkg::String, env::String; channel::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:188
  [6] add
    @ ~/.julia/packages/Conda/3rPhK/src/Conda.jl:187 [inlined]
  [7] pyimport_conda(modulename::String, condapkg::String, channel::String)
    @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:710
  [8] pyimport_conda(modulename::String, condapkg::String)
    @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:704
  [9] top-level scope
    @ ~/.julia/packages/Pickle/Njhfn/test/torch/thscript.jl:1
 [10] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [11] top-level scope
    @ ~/.julia/packages/Pickle/Njhfn/test/runtests.jl:6
 [12] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [13] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/Pickle/Njhfn/test/torch/thscript.jl:1
in expression starting at /home/pkgeval/.julia/packages/Pickle/Njhfn/test/runtests.jl:6

caused by: PyError (PyImport_ImportModule

The Python package torch could not be imported by pyimport. Usually this means
that you did not install torch in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the torch module, you can
use `pyimport_conda("torch", PKG)`, where PKG is the Anaconda
package the contains the module torch, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'torch'")

Stacktrace:
 [1] pyimport(name::String)
   @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:547
 [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
   @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:705
 [3] pyimport_conda(modulename::String, condapkg::String)
   @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:704
 [4] top-level scope
   @ ~/.julia/packages/Pickle/Njhfn/test/torch/thscript.jl:1
 [5] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [6] top-level scope
   @ ~/.julia/packages/Pickle/Njhfn/test/runtests.jl:6
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [8] top-level scope
   @ none:6
ERROR: Package Pickle errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1632
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:333
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:320
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [11] top-level scope
    @ none:31
