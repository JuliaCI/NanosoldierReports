Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_AZ1FvZ/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_AZ1FvZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720623196302796
curgen: 20 fitness: 0.2172333858857592
curgen: 30 fitness: 0.2172333858857592
curgen: 40 fitness: 0.2172333858857592
curgen: 50 fitness: 0.2172333858857592
CoordinateCreature{Vector{Float64}}([0.22247419744043923], -0.2172333858857592) 0.22247419744043923 -0.2172333858857592
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257895001732422
curgen: 100 fitness: 3.258141321313734
curgen: 150 fitness: 3.2581971475358875
curgen: 200 fitness: 3.2582339556673228
curgen: 250 fitness: 3.258322480952515
curgen: 300 fitness: 3.258325051285036
curgen: 350 fitness: 3.258325051285036
curgen: 400 fitness: 3.258325051285036
curgen: 450 fitness: 3.2584113015397467
curgen: 500 fitness: 3.2584139791013635
CoordinateCreature{Vector{Float64}}([0.22250190696351455, -0.2227290903055394, 0.22200142202924567, -0.22255504377510713, -0.22257479444776043, -0.22243796939150082, 0.22238831028992131, -0.22222966499492156, 0.22265808016900088, -0.2215545971751094, 0.22241601634818595, -0.2227633032590377, 0.2227280334164349, -0.22186828802550115, -0.22249835174315022], -3.2584139791013635) [0.22250190696351455, -0.2227290903055394, 0.22200142202924567, -0.22255504377510713, -0.22257479444776043, -0.22243796939150082, 0.22238831028992131, -0.22222966499492156, 0.22265808016900088, -0.2215545971751094, 0.22241601634818595, -0.2227633032590377, 0.2227280334164349, -0.22186828802550115, -0.22249835174315022] -3.2584139791013635
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0009497014171984119
curgen: 100 fitness: -0.000792491646933513
curgen: 150 fitness: -0.0006987354831267112
curgen: 200 fitness: -0.0006304464019990519
curgen: 250 fitness: -0.0005293659213236879
curgen: 300 fitness: -0.0005293659213236879
curgen: 350 fitness: -0.0005293659213236879
curgen: 400 fitness: -0.0005293659213236879
curgen: 450 fitness: -0.0005293659213236879
curgen: 500 fitness: -0.0005293659213236879
CoordinateCreature{Vector{Float64}}([-0.0002277990454160225, -9.481509082324589e-5, 0.00038205436059491867, 0.00017774081649545102, 0.00034961535480914534, 2.4954668945529604e-5, 0.0003803401788832327, -3.4792462107488222e-6, -0.0009454585059674001, -0.00022776673856246755, 0.00044577335141201716, -0.0009107644021297046, -8.375415949352658e-5, 1.1213352495816054e-5, -0.0004256842153135459], 0.0005293659213236879) [-0.0002277990454160225, -9.481509082324589e-5, 0.00038205436059491867, 0.00017774081649545102, 0.00034961535480914534, 2.4954668945529604e-5, 0.0003803401788832327, -3.4792462107488222e-6, -0.0009454585059674001, -0.00022776673856246755, 0.00044577335141201716, -0.0009107644021297046, -8.375415949352658e-5, 1.1213352495816054e-5, -0.0004256842153135459] 0.0005293659213236879
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
