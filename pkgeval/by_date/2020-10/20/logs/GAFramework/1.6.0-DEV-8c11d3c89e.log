Julia Version 1.6.0-DEV.1284
Commit 8c11d3c89e (2020-10-19 22:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
     Testing GAFramework
Status `/tmp/jl_hPgaKW/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_hPgaKW/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721553568553814
curgen: 20 fitness: 0.21722080759852308
curgen: 30 fitness: 0.21722080759852308
curgen: 40 fitness: 0.21723224739829125
curgen: 50 fitness: 0.21723224739829125
CoordinateCreature{Vector{Float64}}([-0.22272484230916162], -0.21723224739829125) -0.22272484230916162 -0.21723224739829125
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580612689413075
curgen: 100 fitness: 3.258270142916922
curgen: 150 fitness: 3.258317917412147
curgen: 200 fitness: 3.2583794958821444
curgen: 250 fitness: 3.2584060031390543
curgen: 300 fitness: 3.2584060031390543
curgen: 350 fitness: 3.258423565354757
curgen: 400 fitness: 3.258423565354757
curgen: 450 fitness: 3.25844938337202
curgen: 500 fitness: 3.258467404330366
CoordinateCreature{Vector{Float64}}([-0.22270435609443642, 0.22271956850815205, 0.2226392194517119, 0.22240589875867564, 0.22252556034578175, -0.2226825086201091, -0.22283826850933552, 0.22301557996200536, -0.222182237436085, 0.2220511539463493, -0.22250469101857903, -0.22250830372484043, 0.22243402821614522, 0.222443882799798, -0.22270312406124462], -3.258467404330366) [-0.22270435609443642, 0.22271956850815205, 0.2226392194517119, 0.22240589875867564, 0.22252556034578175, -0.2226825086201091, -0.22283826850933552, 0.22301557996200536, -0.222182237436085, 0.2220511539463493, -0.22250469101857903, -0.22250830372484043, 0.22243402821614522, 0.222443882799798, -0.22270312406124462] -3.258467404330366
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031531138570528583
curgen: 100 fitness: -0.0012312840161428085
curgen: 150 fitness: -0.0012312840161428085
curgen: 200 fitness: -0.0008503131198551728
curgen: 250 fitness: -0.0008503131198551728
curgen: 300 fitness: -0.0008382056765015022
curgen: 350 fitness: -0.0007188156601785067
curgen: 400 fitness: -0.0007188156601785067
curgen: 450 fitness: -0.0007188156601785067
curgen: 500 fitness: -0.0007188156601785067
CoordinateCreature{Vector{Float64}}([0.0002835480848289748, -0.0005689542438438349, -0.0005479081415238124, -0.00044314525104437625, 0.0010262468465980284, -0.0002532001510352628, 0.0006510472755445191, -0.0002625328982352696, 0.00021554913212064, -0.0001340096657828428, -0.0007480795923550361, -0.0002189550585834178, -0.0005185714164714416, -0.00038280072240459885, -0.0001581394274535357], 0.0007188156601785067) [0.0002835480848289748, -0.0005689542438438349, -0.0005479081415238124, -0.00044314525104437625, 0.0010262468465980284, -0.0002532001510352628, 0.0006510472755445191, -0.0002625328982352696, 0.00021554913212064, -0.0001340096657828428, -0.0007480795923550361, -0.0002189550585834178, -0.0005185714164714416, -0.00038280072240459885, -0.0001581394274535357] 0.0007188156601785067
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
