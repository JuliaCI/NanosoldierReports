Julia Version 1.6.0-DEV.1284
Commit 8c11d3c89e (2020-10-19 22:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [deac9b47] + LibCURL_jll
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [14a3606d] + MozillaCACerts_jll
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_f6xYcX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_f6xYcX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.162033 seconds (293.25 k allocations: 13.816 MiB, 89.66% compilation time)
Running: chebyshev_quadrature with k=1
  1.573550 seconds (2.24 M allocations: 130.392 MiB, 4.99% gc time, 99.01% compilation time)
Running: chebyshev_quadrature with k=2
  0.197877 seconds (417.67 k allocations: 24.212 MiB, 84.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.269744 seconds (483.51 k allocations: 27.401 MiB, 7.03% gc time, 88.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.241109 seconds (427.02 k allocations: 23.926 MiB, 92.83% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 30.449403 seconds (35.45 M allocations: 2.978 GiB, 11.71% gc time, 79.98% compilation time)
Running: laguerre_quadrature with k=1
  2.419605 seconds (3.24 M allocations: 182.173 MiB, 2.42% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.169468 seconds (211.52 k allocations: 12.244 MiB, 98.91% compilation time)
Running: lobatto_quadrature
  0.503385 seconds (340.08 k allocations: 20.676 MiB, 5.72% gc time, 99.44% compilation time)
Running: radau_quadrature
  0.446498 seconds (461.84 k allocations: 28.339 MiB, 99.54% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 40.025058 seconds (100.02 M allocations: 1.491 GiB, 0.58% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.075642 seconds (173.35 k allocations: 3.888 MiB, 31.75% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 39.276002 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time, 0.06% compilation time)
Running: rombergs_method
  0.300518 seconds (741.46 k allocations: 43.156 MiB, 6.71% gc time, 99.39% compilation time)
Running: simpsons_rule
  0.024650 seconds (48.04 k allocations: 2.633 MiB, 92.18% compilation time)
Running: simpsons38_rule
  0.073094 seconds (111.38 k allocations: 5.951 MiB, 96.14% compilation time)
Running: trapezoidal_rule
  0.222658 seconds (1.72 M allocations: 28.725 MiB, 5.17% gc time, 15.38% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.049581 seconds (30.73 k allocations: 1.831 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.346271 seconds (295.62 k allocations: 15.751 MiB, 6.65% gc time, 99.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.104021 seconds (94.22 k allocations: 2.707 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.109254 seconds (82.47 k allocations: 2.508 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=4
  0.114308 seconds (65.08 k allocations: 2.155 MiB, 99.08% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.766102 seconds (510.99 k allocations: 162.371 MiB, 9.62% gc time, 25.03% compilation time)
Running: legendre_quadrature
  0.121634 seconds (42.20 k allocations: 2.449 MiB, 5.93% gc time, 99.79% compilation time)
Running: lobatto_quadrature
  0.016044 seconds (16.18 k allocations: 1.008 MiB, 98.97% compilation time)
Running: radau_quadrature
  0.018621 seconds (16.28 k allocations: 1.015 MiB, 99.03% compilation time)
Running: rectangle_rule_left
 11.039099 seconds (471.41 M allocations: 7.025 GiB, 6.66% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 10.766437 seconds (476.96 M allocations: 7.107 GiB, 6.87% gc time)
Running: rombergs_method
  0.273160 seconds (334.34 k allocations: 19.156 MiB, 1.53% gc time, 99.85% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.041213 seconds (19.43 k allocations: 1.184 MiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.027940 seconds (16.97 k allocations: 1.034 MiB, 99.68% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016937 seconds (1.03 k allocations: 34.125 KiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.079374 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.124173 seconds (2.71 k allocations: 124.266 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.071091 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.072433 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.261541 seconds (369.35 k allocations: 19.520 MiB, 6.81% gc time, 99.20% compilation time)
Running: legendre_quadrature
  0.053010 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000366 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000248 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000347 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.064391 seconds (1.04 k allocations: 56.469 KiB, 99.68% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.021832 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.020073 seconds (44.29 k allocations: 702.859 KiB, 92.80% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.031435 seconds (83.49 k allocations: 5.003 MiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.121165 seconds (235.65 k allocations: 13.387 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.163316 seconds (289.14 k allocations: 16.383 MiB, 98.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.176211 seconds (239.80 k allocations: 13.536 MiB, 14.23% gc time, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.115319 seconds (239.80 k allocations: 13.470 MiB, 98.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.718190 seconds (454.96 k allocations: 163.917 MiB, 6.66% gc time, 20.99% compilation time)
Running: legendre_quadrature
  0.112370 seconds (190.37 k allocations: 11.091 MiB, 98.23% compilation time)
Running: lobatto_quadrature
  0.138889 seconds (201.88 k allocations: 11.811 MiB, 98.63% compilation time)
Running: radau_quadrature
  0.135106 seconds (201.88 k allocations: 11.823 MiB, 10.36% gc time, 98.67% compilation time)
Running: rectangle_rule_left
  0.468989 seconds (19.37 k allocations: 1.189 MiB, 5.16% compilation time)
Running: rectangle_rule_midpoint
  0.015043 seconds (25.55 k allocations: 1.616 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.434692 seconds (17.90 k allocations: 1.099 MiB, 3.86% compilation time)
Running: rombergs_method
  0.125684 seconds (137.77 k allocations: 8.025 MiB, 97.69% compilation time)
Running: simpsons_rule
  0.021259 seconds (37.98 k allocations: 2.442 MiB, 99.05% compilation time)
Running: simpsons38_rule
  0.022056 seconds (43.94 k allocations: 2.785 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.013958 seconds (43.20 k allocations: 1.730 MiB, 97.18% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.017756 seconds (68.44 k allocations: 3.060 MiB, 96.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.135026 seconds (242.24 k allocations: 13.474 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.167875 seconds (296.17 k allocations: 16.435 MiB, 7.13% gc time, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.169964 seconds (246.37 k allocations: 13.523 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.143530 seconds (246.37 k allocations: 13.520 MiB, 98.89% compilation time)
Running: hermite_quadrature with k=2
  9.947000 seconds (20.49 M allocations: 1.088 GiB, 8.65% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.313058 seconds (464.13 k allocations: 50.102 MiB, 10.94% gc time, 92.44% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.134631 seconds (282.35 k allocations: 15.726 MiB, 97.81% compilation time)
Running: legendre_quadrature
  0.125650 seconds (196.90 k allocations: 11.440 MiB, 18.67% gc time, 98.20% compilation time)
Running: lobatto_quadrature
  0.132026 seconds (222.54 k allocations: 37.584 MiB, 85.28% compilation time)
Running: radau_quadrature
  0.186519 seconds (219.12 k allocations: 30.267 MiB, 25.21% gc time, 64.19% compilation time)
Running: rectangle_rule_left
  0.019129 seconds (22.28 k allocations: 1.333 MiB, 99.31% compilation time)
Running: rectangle_rule_midpoint
  0.014516 seconds (27.36 k allocations: 1.703 MiB, 99.24% compilation time)
Running: rectangle_rule_right
  0.014059 seconds (19.02 k allocations: 1.153 MiB, 99.15% compilation time)
Running: rombergs_method
  0.115525 seconds (140.11 k allocations: 8.066 MiB, 97.61% compilation time)
Running: simpsons_rule
  0.027631 seconds (45.46 k allocations: 2.710 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.036818 seconds (58.91 k allocations: 3.170 MiB, 99.02% compilation time)
Running: trapezoidal_rule
  0.038811 seconds (29.23 k allocations: 1.655 MiB, 99.30% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.154225 seconds (52.41 k allocations: 2.720 MiB, 82.28% gc time, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.121649 seconds (237.76 k allocations: 13.247 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.187316 seconds (291.35 k allocations: 16.145 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.122215 seconds (241.90 k allocations: 13.330 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.181839 seconds (241.91 k allocations: 13.332 MiB, 10.46% gc time, 99.01% compilation time)
Running: hermite_quadrature with k=2
  0.087583 seconds (175.13 k allocations: 10.126 MiB, 97.77% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  7.243954 seconds (457.40 k allocations: 1.175 GiB, 17.77% gc time, 4.63% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.133369 seconds (277.64 k allocations: 15.553 MiB, 97.35% compilation time)
Running: legendre_quadrature
  0.133059 seconds (192.47 k allocations: 11.190 MiB, 98.31% compilation time)
Running: lobatto_quadrature
  0.153300 seconds (213.30 k allocations: 23.311 MiB, 8.46% gc time, 90.37% compilation time)
Running: radau_quadrature
  0.138096 seconds (212.45 k allocations: 21.244 MiB, 91.32% compilation time)
Running: rectangle_rule_left
  0.022139 seconds (20.07 k allocations: 1.228 MiB, 99.24% compilation time)
Running: rectangle_rule_midpoint
  0.021006 seconds (26.25 k allocations: 1.652 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.017815 seconds (17.87 k allocations: 1.098 MiB, 99.22% compilation time)
Running: rombergs_method
  0.077076 seconds (135.95 k allocations: 7.879 MiB, 96.78% compilation time)
Running: simpsons_rule
  0.015979 seconds (40.80 k allocations: 2.541 MiB, 98.81% compilation time)
Running: simpsons38_rule
  0.047470 seconds (49.73 k allocations: 2.931 MiB, 33.96% gc time, 99.38% compilation time)
Running: trapezoidal_rule
  0.021586 seconds (24.14 k allocations: 1.492 MiB, 98.88% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.020035 seconds (40.61 k allocations: 2.580 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=1
  0.146224 seconds (236.14 k allocations: 13.461 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.137881 seconds (289.64 k allocations: 16.491 MiB, 97.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.165817 seconds (240.29 k allocations: 13.615 MiB, 7.65% gc time, 98.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.166826 seconds (240.28 k allocations: 13.373 MiB, 98.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.092847 seconds (455.50 k allocations: 195.026 MiB, 10.00% gc time, 19.52% compilation time)
Running: legendre_quadrature
  0.155359 seconds (190.86 k allocations: 11.114 MiB, 9.01% gc time, 98.26% compilation time)
Running: lobatto_quadrature
  0.162317 seconds (202.38 k allocations: 11.957 MiB, 98.53% compilation time)
Running: radau_quadrature
  0.122964 seconds (202.38 k allocations: 11.842 MiB, 98.39% compilation time)
Running: rectangle_rule_left
  0.322410 seconds (19.89 k allocations: 1.214 MiB, 7.16% compilation time)
Running: rectangle_rule_midpoint
  0.023271 seconds (25.89 k allocations: 1.634 MiB, 99.40% compilation time)
Running: rectangle_rule_right
  0.139937 seconds (18.24 k allocations: 1.118 MiB, 13.66% compilation time)
Running: rombergs_method
  0.101892 seconds (149.07 k allocations: 8.786 MiB, 97.28% compilation time)
Running: simpsons_rule
  0.015782 seconds (38.61 k allocations: 2.470 MiB, 98.98% compilation time)
Running: simpsons38_rule
  0.048233 seconds (44.65 k allocations: 2.815 MiB, 38.90% gc time, 99.62% compilation time)
Running: trapezoidal_rule
  0.018810 seconds (44.13 k allocations: 1.763 MiB, 96.68% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.020001 seconds (40.35 k allocations: 2.510 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=1
  0.158308 seconds (236.73 k allocations: 13.426 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.157230 seconds (290.27 k allocations: 16.392 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.203431 seconds (240.88 k allocations: 13.470 MiB, 8.94% gc time, 98.71% compilation time)
Running: chebyshev_quadrature with k=4
  0.143807 seconds (240.87 k allocations: 13.545 MiB, 98.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.296444 seconds (456.21 k allocations: 149.635 MiB, 7.04% gc time, 31.63% compilation time)
Running: legendre_quadrature
  0.147931 seconds (191.45 k allocations: 11.130 MiB, 11.41% gc time, 98.37% compilation time)
Running: lobatto_quadrature
  0.159776 seconds (202.98 k allocations: 11.859 MiB, 98.35% compilation time)
Running: radau_quadrature
  0.117275 seconds (202.97 k allocations: 11.857 MiB, 98.01% compilation time)
Running: rectangle_rule_left
  0.590671 seconds (20.14 k allocations: 1.227 MiB, 3.50% compilation time)
Running: rectangle_rule_midpoint
  0.018052 seconds (25.89 k allocations: 1.635 MiB, 99.01% compilation time)
Running: rectangle_rule_right
  0.479036 seconds (18.20 k allocations: 1.115 MiB, 5.24% compilation time)
Running: rombergs_method
  0.100197 seconds (138.99 k allocations: 8.082 MiB, 96.72% compilation time)
Running: simpsons_rule
  0.020447 seconds (39.09 k allocations: 2.491 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.063838 seconds (45.35 k allocations: 2.842 MiB, 25.26% gc time, 99.74% compilation time)
Running: trapezoidal_rule
  0.013105 seconds (56.28 k allocations: 1.959 MiB, 95.69% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.152765 seconds (152.11 k allocations: 9.116 MiB, 14.75% gc time, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.116318 seconds (70.34 k allocations: 2.237 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.199581 seconds (105.50 k allocations: 2.900 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.178192 seconds (92.98 k allocations: 2.686 MiB, 98.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.161858 seconds (72.52 k allocations: 2.280 MiB, 99.03% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.374404 seconds (485.92 k allocations: 168.241 MiB, 14.63% gc time, 29.42% compilation time)
Running: legendre_quadrature
  0.064403 seconds (19.14 k allocations: 1.125 MiB, 99.70% compilation time)
Running: lobatto_quadrature
  0.000108 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.172869 seconds (590.00 M allocations: 8.792 GiB, 6.51% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 17.938841 seconds (592.75 M allocations: 8.833 GiB, 6.66% gc time)
Running: rombergs_method
  0.107515 seconds (20.91 k allocations: 1.197 MiB, 99.54% compilation time)
Running: simpsons_rule
  0.000031 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028516 seconds (463 allocations: 22.578 KiB, 99.60% compilation time)
Running: trapezoidal_rule
  0.014404 seconds (171 allocations: 7.859 KiB, 99.26% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.886480 seconds (209.94 M allocations: 3.138 GiB, 1.91% gc time, 0.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.404260 seconds (423.00 k allocations: 23.679 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=2
 15.646562 seconds (478.56 k allocations: 4.041 GiB, 2.06% gc time, 2.14% compilation time)
Running: chebyshev_quadrature with k=3
  6.721235 seconds (254.26 k allocations: 1.642 GiB, 3.75% gc time, 1.57% compilation time)
Running: chebyshev_quadrature with k=4
  9.287221 seconds (254.26 k allocations: 2.261 GiB, 1.79% gc time, 1.27% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 29.216341 seconds (493.06 k allocations: 13.255 GiB, 5.92% gc time, 1.21% compilation time)
Running: legendre_quadrature.
  7.356246 seconds (228.91 k allocations: 1.976 GiB, 0.75% gc time, 1.52% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.201369 seconds (8.24 M allocations: 13.384 GiB, 5.82% gc time, 0.60% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.264920 seconds (7.24 M allocations: 13.369 GiB, 5.80% gc time, 0.62% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.882556 seconds (22.89 k allocations: 1.394 MiB, 0.14% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.660265 seconds (31.46 k allocations: 1.956 MiB, 0.18% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.328699 seconds (23.09 k allocations: 1.403 MiB, 0.26% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.295591 seconds (448.70 k allocations: 153.517 MiB, 1.58% gc time, 8.87% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 22.871176 seconds (200.04 M allocations: 2.983 GiB, 2.09% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.143710 seconds (600.05 M allocations: 8.944 GiB, 5.55% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.000980 seconds (600.03 M allocations: 8.943 GiB, 3.89% gc time, 0.06% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.057600 seconds (111.10 k allocations: 4.244 MiB, 94.21% compilation time)
Running: chebyshev_quadrature with k=1
  0.161755 seconds (252.71 k allocations: 13.877 MiB, 97.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.128186 seconds (277.25 k allocations: 14.964 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.200807 seconds (224.24 k allocations: 11.980 MiB, 40.94% gc time, 99.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.126737 seconds (224.24 k allocations: 11.976 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.238536 seconds (394.79 k allocations: 35.553 MiB, 90.82% compilation time)
Running: laguerre_quadrature with k=2
  0.145393 seconds (185.19 k allocations: 10.842 MiB, 78.78% compilation time)
Running: legendre_quadrature
  0.076006 seconds (149.17 k allocations: 8.338 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.015559 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012561 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.030346 seconds (19.35 k allocations: 1.157 MiB, 53.14% compilation time)
Running: rectangle_rule_midpoint
  0.033591 seconds (26.33 k allocations: 1.636 MiB, 67.65% compilation time)
Running: rectangle_rule_right
  0.038640 seconds (17.96 k allocations: 1.084 MiB, 53.66% compilation time)
Running: rombergs_method
  0.162294 seconds (176.00 k allocations: 10.163 MiB, 98.24% compilation time)
Running: simpsons_rule
  0.000324 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.025903 seconds (80.36 k allocations: 3.492 MiB, 97.78% compilation time)
Running: trapezoidal_rule
  0.095701 seconds (2.39 M allocations: 37.744 MiB, 24.30% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000815 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.097644 seconds (2.46 k allocations: 1.691 MiB, 97.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.090148 seconds (2.71 k allocations: 2.355 MiB, 97.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.079650 seconds (2.31 k allocations: 2.028 MiB, 97.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.079940 seconds (2.31 k allocations: 1.469 MiB, 97.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.660579 seconds (371.63 k allocations: 905.326 MiB, 8.17% gc time, 6.06% compilation time)
Running: legendre_quadrature
  0.058639 seconds (1.27 k allocations: 68.203 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000200 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000100 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.938124 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000294 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.997572 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062172 seconds (993 allocations: 56.609 KiB, 99.62% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000028 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000999 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000120 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.076994 seconds (2.53 k allocations: 579.203 KiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.071824 seconds (2.79 k allocations: 780.188 KiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.095080 seconds (2.39 k allocations: 661.047 KiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.084032 seconds (2.39 k allocations: 491.547 KiB, 99.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.373708 seconds (378.19 k allocations: 253.468 MiB, 25.92% compilation time)
Running: legendre_quadrature
  0.074889 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000112 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000038 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.839482 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000111 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.869791 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060765 seconds (1.21 k allocations: 64.875 KiB, 99.65% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000394 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
