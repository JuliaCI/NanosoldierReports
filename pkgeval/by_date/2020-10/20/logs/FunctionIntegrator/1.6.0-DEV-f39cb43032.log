Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.2
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
     Testing FunctionIntegrator
Status `/tmp/jl_RD9l4Y/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_RD9l4Y/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.2
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.601334 seconds (293.10 k allocations: 13.808 MiB, 6.47% gc time, 90.23% compilation time)
Running: chebyshev_quadrature with k=1
  4.549066 seconds (2.25 M allocations: 130.587 MiB, 7.38% gc time, 99.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.465259 seconds (417.67 k allocations: 24.228 MiB, 90.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.801743 seconds (483.51 k allocations: 27.374 MiB, 1.64% gc time, 95.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.636442 seconds (427.02 k allocations: 23.934 MiB, 4.32% gc time, 64.75% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 67.253375 seconds (35.46 M allocations: 2.979 GiB, 14.84% gc time, 87.77% compilation time)
Running: laguerre_quadrature with k=1
  6.614103 seconds (3.24 M allocations: 182.189 MiB, 4.51% gc time, 99.96% compilation time)
Running: legendre_quadrature
  0.454058 seconds (211.60 k allocations: 12.253 MiB, 21.71% gc time, 99.62% compilation time)
Running: lobatto_quadrature
  0.375171 seconds (340.11 k allocations: 20.669 MiB, 99.06% compilation time)
Running: radau_quadrature
  1.069571 seconds (462.72 k allocations: 28.386 MiB, 2.19% gc time, 97.39% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 40.879005 seconds (100.02 M allocations: 1.491 GiB, 1.26% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.094129 seconds (173.35 k allocations: 3.888 MiB, 32.93% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 40.344592 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time, 0.11% compilation time)
Running: rombergs_method
  0.867301 seconds (741.53 k allocations: 43.161 MiB, 3.00% gc time, 94.64% compilation time)
Running: simpsons_rule
  0.062954 seconds (48.05 k allocations: 2.634 MiB, 96.31% compilation time)
Running: simpsons38_rule
  0.412263 seconds (111.31 k allocations: 5.947 MiB, 99.51% compilation time)
Running: trapezoidal_rule
  0.272427 seconds (1.72 M allocations: 28.722 MiB, 21.21% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.074622 seconds (30.72 k allocations: 1.831 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.537725 seconds (295.70 k allocations: 15.755 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.150922 seconds (94.22 k allocations: 2.707 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.243157 seconds (82.47 k allocations: 2.508 MiB, 97.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.148467 seconds (65.08 k allocations: 2.154 MiB, 99.22% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.481556 seconds (510.69 k allocations: 162.296 MiB, 28.03% gc time, 40.89% compilation time)
Running: legendre_quadrature
  0.201841 seconds (42.28 k allocations: 2.456 MiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.042231 seconds (16.25 k allocations: 1.015 MiB, 55.38% compilation time)
Running: radau_quadrature
  0.066433 seconds (16.36 k allocations: 1.022 MiB, 76.81% compilation time)
Running: rectangle_rule_left
 12.518451 seconds (471.41 M allocations: 7.025 GiB, 12.20% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.292049 seconds (476.96 M allocations: 7.107 GiB, 7.40% gc time)
Running: rombergs_method
  0.460538 seconds (334.41 k allocations: 19.162 MiB, 99.92% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.122431 seconds (19.43 k allocations: 1.184 MiB, 9.64% gc time, 99.93% compilation time)
Running: trapezoidal_rule
  0.070541 seconds (16.97 k allocations: 1.034 MiB, 99.86% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018282 seconds (1.03 k allocations: 34.125 KiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.235890 seconds (2.46 k allocations: 116.359 KiB, 77.02% compilation time)
Running: chebyshev_quadrature with k=2
  0.137334 seconds (2.71 k allocations: 124.266 KiB, 91.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.101487 seconds (2.31 k allocations: 109.297 KiB, 86.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.092744 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.526894 seconds (369.34 k allocations: 19.522 MiB, 99.61% compilation time)
Running: legendre_quadrature
  0.077396 seconds (1.28 k allocations: 65.891 KiB, 97.13% compilation time)
Running: lobatto_quadrature
  0.002211 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.003071 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000335 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000134 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000277 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.089144 seconds (1.04 k allocations: 56.469 KiB, 96.19% compilation time)
Running: simpsons_rule
  0.000019 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023966 seconds (923 allocations: 39.281 KiB, 99.72% compilation time)
Running: trapezoidal_rule
  0.022131 seconds (44.29 k allocations: 702.859 KiB, 92.88% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.261833 seconds (83.49 k allocations: 5.001 MiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.449500 seconds (235.65 k allocations: 13.387 MiB, 13.18% gc time, 99.50% compilation time)
Running: chebyshev_quadrature with k=2
  1.589065 seconds (289.13 k allocations: 16.379 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=3
  0.465829 seconds (239.80 k allocations: 13.536 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.271945 seconds (239.80 k allocations: 13.486 MiB, 21.79% gc time, 99.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.823228 seconds (454.95 k allocations: 163.917 MiB, 11.56% gc time, 26.62% compilation time)
Running: legendre_quadrature
  0.466347 seconds (190.36 k allocations: 11.084 MiB, 19.43% gc time, 99.61% compilation time)
Running: lobatto_quadrature
  0.217485 seconds (201.88 k allocations: 11.810 MiB, 94.52% compilation time)
Running: radau_quadrature
  0.386509 seconds (201.87 k allocations: 11.807 MiB, 99.51% compilation time)
Running: rectangle_rule_left
  0.629709 seconds (19.37 k allocations: 1.189 MiB, 20.34% compilation time)
Running: rectangle_rule_midpoint
  0.093670 seconds (25.55 k allocations: 1.616 MiB, 99.83% compilation time)
Running: rectangle_rule_right
  0.533765 seconds (17.90 k allocations: 1.099 MiB, 5.96% compilation time)
Running: rombergs_method
  0.442657 seconds (137.77 k allocations: 8.029 MiB, 15.18% gc time, 99.17% compilation time)
Running: simpsons_rule
  0.053083 seconds (37.98 k allocations: 2.442 MiB, 98.55% compilation time)
Running: simpsons38_rule
  0.129754 seconds (43.94 k allocations: 2.785 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.284121 seconds (43.20 k allocations: 1.730 MiB, 99.69% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.031534 seconds (68.44 k allocations: 3.060 MiB, 96.84% compilation time)
Running: chebyshev_quadrature with k=1
  0.607452 seconds (242.24 k allocations: 13.474 MiB, 99.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.658241 seconds (296.17 k allocations: 16.372 MiB, 94.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.847958 seconds (246.37 k allocations: 13.527 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.418175 seconds (246.37 k allocations: 13.520 MiB, 99.61% compilation time)
Running: hermite_quadrature with k=2
 41.985268 seconds (20.49 M allocations: 1.088 GiB, 19.89% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.155206 seconds (464.12 k allocations: 50.164 MiB, 15.37% gc time, 96.96% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.570492 seconds (282.35 k allocations: 15.789 MiB, 98.96% compilation time)
Running: legendre_quadrature
  0.276934 seconds (196.91 k allocations: 11.476 MiB, 99.21% compilation time)
Running: lobatto_quadrature
  0.597994 seconds (222.53 k allocations: 37.585 MiB, 6.79% gc time, 86.06% compilation time)
Running: radau_quadrature
  0.537407 seconds (219.12 k allocations: 30.267 MiB, 3.46% gc time, 91.95% compilation time)
Running: rectangle_rule_left
  0.241508 seconds (22.28 k allocations: 1.333 MiB, 99.93% compilation time)
Running: rectangle_rule_midpoint
  0.060537 seconds (27.36 k allocations: 1.703 MiB, 99.79% compilation time)
Running: rectangle_rule_right
  0.023656 seconds (19.02 k allocations: 1.153 MiB, 99.47% compilation time)
Running: rombergs_method
  0.291052 seconds (140.11 k allocations: 8.068 MiB, 99.28% compilation time)
Running: simpsons_rule
  0.260833 seconds (45.46 k allocations: 2.710 MiB, 82.42% compilation time)
Running: simpsons38_rule
  0.042895 seconds (58.91 k allocations: 3.170 MiB, 99.14% compilation time)
Running: trapezoidal_rule
  0.021517 seconds (29.23 k allocations: 1.655 MiB, 98.97% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.043969 seconds (52.41 k allocations: 2.720 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.358034 seconds (237.76 k allocations: 13.243 MiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.888278 seconds (291.35 k allocations: 16.171 MiB, 99.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.477937 seconds (241.90 k allocations: 13.330 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.450335 seconds (241.91 k allocations: 13.331 MiB, 99.49% compilation time)
Running: hermite_quadrature with k=2
  0.412920 seconds (175.13 k allocations: 10.126 MiB, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  9.850291 seconds (457.38 k allocations: 1.175 GiB, 41.60% gc time, 7.31% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.371114 seconds (277.64 k allocations: 15.553 MiB, 98.07% compilation time)
Running: legendre_quadrature
  0.513468 seconds (192.47 k allocations: 11.190 MiB, 99.53% compilation time)
Running: lobatto_quadrature
  0.454706 seconds (213.29 k allocations: 23.311 MiB, 6.77% gc time, 94.09% compilation time)
Running: radau_quadrature
  0.430170 seconds (212.45 k allocations: 21.243 MiB, 87.06% compilation time)
Running: rectangle_rule_left
  0.070611 seconds (20.07 k allocations: 1.229 MiB, 99.81% compilation time)
Running: rectangle_rule_midpoint
  0.021488 seconds (26.25 k allocations: 1.652 MiB, 99.16% compilation time)
Running: rectangle_rule_right
  0.043500 seconds (17.87 k allocations: 1.098 MiB, 99.47% compilation time)
Running: rombergs_method
  0.273793 seconds (135.95 k allocations: 7.879 MiB, 98.54% compilation time)
Running: simpsons_rule
  0.022982 seconds (40.80 k allocations: 2.541 MiB, 99.14% compilation time)
Running: simpsons38_rule
  0.117733 seconds (49.73 k allocations: 2.931 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.023913 seconds (24.14 k allocations: 1.492 MiB, 99.06% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.046716 seconds (40.61 k allocations: 2.580 MiB, 99.60% compilation time)
Running: chebyshev_quadrature with k=1
  0.457393 seconds (236.14 k allocations: 13.461 MiB, 8.67% gc time, 99.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.377036 seconds (289.64 k allocations: 16.550 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.279743 seconds (240.29 k allocations: 13.552 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.354711 seconds (240.28 k allocations: 13.373 MiB, 99.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.486671 seconds (455.48 k allocations: 194.961 MiB, 10.15% gc time, 42.97% compilation time)
Running: legendre_quadrature
  0.315306 seconds (190.86 k allocations: 11.130 MiB, 99.12% compilation time)
Running: lobatto_quadrature
  0.324137 seconds (202.37 k allocations: 11.832 MiB, 99.12% compilation time)
Running: radau_quadrature
  0.554624 seconds (202.37 k allocations: 11.838 MiB, 4.91% gc time, 99.43% compilation time)
Running: rectangle_rule_left
  0.347844 seconds (19.89 k allocations: 1.214 MiB, 12.83% compilation time)
Running: rectangle_rule_midpoint
  0.254597 seconds (25.89 k allocations: 1.634 MiB, 99.93% compilation time)
Running: rectangle_rule_right
  0.159258 seconds (18.25 k allocations: 1.118 MiB, 15.71% compilation time)
Running: rombergs_method
  0.527195 seconds (149.07 k allocations: 8.790 MiB, 99.15% compilation time)
Running: simpsons_rule
  0.105315 seconds (38.61 k allocations: 2.470 MiB, 99.80% compilation time)
Running: simpsons38_rule
  0.082894 seconds (44.65 k allocations: 2.815 MiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.016442 seconds (44.13 k allocations: 1.763 MiB, 97.36% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.028655 seconds (40.35 k allocations: 2.510 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=1
  0.348339 seconds (236.73 k allocations: 13.418 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.313559 seconds (290.27 k allocations: 16.393 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.392415 seconds (240.88 k allocations: 13.484 MiB, 14.63% gc time, 87.07% compilation time)
Running: chebyshev_quadrature with k=4
  0.438198 seconds (240.88 k allocations: 13.545 MiB, 99.32% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.674657 seconds (456.19 k allocations: 149.629 MiB, 9.09% gc time, 42.14% compilation time)
Running: legendre_quadrature
  0.484576 seconds (191.45 k allocations: 11.126 MiB, 99.53% compilation time)
Running: lobatto_quadrature
  0.152878 seconds (202.97 k allocations: 11.859 MiB, 98.41% compilation time)
Running: radau_quadrature
  0.884596 seconds (202.97 k allocations: 11.852 MiB, 5.16% gc time, 99.56% compilation time)
Running: rectangle_rule_left
  0.716862 seconds (20.14 k allocations: 1.227 MiB, 13.18% compilation time)
Running: rectangle_rule_midpoint
  0.022069 seconds (25.89 k allocations: 1.635 MiB, 97.29% compilation time)
Running: rectangle_rule_right
  0.644447 seconds (18.20 k allocations: 1.115 MiB, 8.68% compilation time)
Running: rombergs_method
  0.195625 seconds (138.99 k allocations: 8.082 MiB, 96.38% compilation time)
Running: simpsons_rule
  0.025175 seconds (39.09 k allocations: 2.489 MiB, 99.22% compilation time)
Running: simpsons38_rule
  0.026690 seconds (45.35 k allocations: 2.842 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.021090 seconds (56.28 k allocations: 1.959 MiB, 94.03% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.350383 seconds (152.11 k allocations: 9.114 MiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.209996 seconds (70.34 k allocations: 2.237 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.186139 seconds (105.50 k allocations: 2.900 MiB, 97.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.179348 seconds (92.98 k allocations: 2.686 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.365253 seconds (72.52 k allocations: 2.280 MiB, 99.21% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.853825 seconds (485.53 k allocations: 168.158 MiB, 7.41% gc time, 34.24% compilation time)
Running: legendre_quadrature
  0.139613 seconds (19.14 k allocations: 1.125 MiB, 15.99% gc time, 99.83% compilation time)
Running: lobatto_quadrature
  0.000103 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000042 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.877669 seconds (590.00 M allocations: 8.792 GiB, 8.21% gc time)
Running: rectangle_rule_midpoint
  0.000051 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.489337 seconds (592.75 M allocations: 8.833 GiB, 8.02% gc time)
Running: rombergs_method
  0.288884 seconds (20.91 k allocations: 1.197 MiB, 99.79% compilation time)
Running: simpsons_rule
  0.000042 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027024 seconds (463 allocations: 22.578 KiB, 99.58% compilation time)
Running: trapezoidal_rule
  0.018023 seconds (171 allocations: 7.859 KiB, 99.28% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.806932 seconds (209.94 M allocations: 3.138 GiB, 2.11% gc time, 1.15% compilation time)
Running: chebyshev_quadrature with k=1
  0.651500 seconds (423.07 k allocations: 23.686 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=2
 16.729861 seconds (478.64 k allocations: 4.041 GiB, 3.50% gc time, 3.45% compilation time)
Running: chebyshev_quadrature with k=3
  7.791657 seconds (254.26 k allocations: 1.642 GiB, 4.15% gc time, 7.03% compilation time)
Running: chebyshev_quadrature with k=4
  9.774010 seconds (254.26 k allocations: 2.261 GiB, 2.00% gc time, 5.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.790102 seconds (493.13 k allocations: 13.255 GiB, 14.44% gc time, 3.00% compilation time)
Running: legendre_quadrature.
 10.010242 seconds (228.99 k allocations: 1.976 GiB, 11.87% gc time, 6.89% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.327983 seconds (8.24 M allocations: 13.384 GiB, 19.46% gc time, 1.45% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.777668 seconds (7.24 M allocations: 13.369 GiB, 18.99% gc time, 1.77% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.874647 seconds (22.88 k allocations: 1.394 MiB, 1.10% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.820458 seconds (31.46 k allocations: 1.956 MiB, 1.92% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.644547 seconds (23.09 k allocations: 1.403 MiB, 1.12% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.257400 seconds (448.77 k allocations: 153.522 MiB, 2.98% gc time, 26.04% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.457831 seconds (200.04 M allocations: 2.983 GiB, 3.25% gc time, 0.31% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.490108 seconds (600.05 M allocations: 8.944 GiB, 6.86% gc time, 0.53% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.773495 seconds (600.03 M allocations: 8.943 GiB, 4.41% gc time, 0.16% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.079579 seconds (111.10 k allocations: 4.245 MiB, 95.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.351394 seconds (252.71 k allocations: 13.877 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.633289 seconds (277.25 k allocations: 14.964 MiB, 99.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.353666 seconds (224.24 k allocations: 11.980 MiB, 99.65% compilation time)
Running: chebyshev_quadrature with k=4
  0.394871 seconds (224.24 k allocations: 11.976 MiB, 99.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.787234 seconds (394.78 k allocations: 35.540 MiB, 95.34% compilation time)
Running: laguerre_quadrature with k=2
  0.396255 seconds (185.19 k allocations: 10.841 MiB, 90.68% compilation time)
Running: legendre_quadrature
  0.245979 seconds (149.17 k allocations: 8.338 MiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.017648 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.022471 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.069776 seconds (19.35 k allocations: 1.157 MiB, 77.80% compilation time)
Running: rectangle_rule_midpoint
  0.053201 seconds (26.33 k allocations: 1.636 MiB, 84.03% compilation time)
Running: rectangle_rule_right
  0.152097 seconds (17.96 k allocations: 1.084 MiB, 94.30% compilation time)
Running: rombergs_method
  0.621432 seconds (176.49 k allocations: 10.190 MiB, 99.54% compilation time)
Running: simpsons_rule
  0.000622 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.083837 seconds (80.36 k allocations: 3.491 MiB, 98.58% compilation time)
Running: trapezoidal_rule
  0.184381 seconds (2.39 M allocations: 37.744 MiB, 67.56% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000441 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.105380 seconds (2.46 k allocations: 1.691 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.095767 seconds (2.71 k allocations: 2.355 MiB, 96.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.095564 seconds (2.31 k allocations: 2.028 MiB, 96.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.172613 seconds (2.31 k allocations: 1.469 MiB, 98.76% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.086027 seconds (371.61 k allocations: 905.325 MiB, 6.82% gc time, 13.49% compilation time)
Running: legendre_quadrature
  0.065286 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000135 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000092 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.070486 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.088512 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.088185 seconds (993 allocations: 56.609 KiB, 90.68% compilation time)
Running: simpsons_rule
  0.000022 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000019 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000542 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000142 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.120526 seconds (2.53 k allocations: 579.203 KiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.098008 seconds (2.79 k allocations: 780.188 KiB, 97.45% compilation time)
Running: chebyshev_quadrature with k=3
  0.121308 seconds (2.39 k allocations: 661.047 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.160980 seconds (2.39 k allocations: 491.547 KiB, 99.61% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.328797 seconds (378.17 k allocations: 253.436 MiB, 31.50% compilation time)
Running: legendre_quadrature
  0.082481 seconds (1.32 k allocations: 67.859 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000129 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000065 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.040917 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000065 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.999281 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.169987 seconds (1.21 k allocations: 64.875 KiB, 99.82% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000766 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001108 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
