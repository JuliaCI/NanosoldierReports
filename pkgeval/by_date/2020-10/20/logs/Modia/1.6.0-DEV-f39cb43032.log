Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed RecursiveFactorization â”€â”€â”€â”€â”€â”€â”€ v0.1.4
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Roots â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.5
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed SLEEFPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.5
   Installed CategoricalArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed Unitful â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.0
   Installed IteratorInterfaceExtensions â”€â”€ v1.0.0
   Installed METIS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.1.0+4
   Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
   Installed DiffEqBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.48.2
   Installed ChainRulesCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.17
   Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10+0
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed MuladdMacro â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed Modia â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed StructTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.21.0
   Installed VectorizationBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.33
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed Sundials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.3.0
   Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed ModiaMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed ZygoteRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed Sundials_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.2.0+1
   Installed TreeViews â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed FunctionWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
   Installed RecursiveArrayTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.2
   Installed LabelledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed CpuId â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed SuiteSparse_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.4.0+9
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed SIMDPirates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.25
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed ConstructionBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.8
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.7
   Installed LoopVectorization â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.26
   Installed IterativeSolvers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [cb905087] + Modia v0.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.13.6
  [fa961155] + CEnum v0.4.1
  [324d7699] + CategoricalArrays v0.8.3
  [d360d2e6] + ChainRulesCore v0.9.17
  [34da2185] + Compat v3.21.0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.8
  [864edb3b] + DataStructures v0.18.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.48.2
  [ffbed154] + DocStringExtensions v0.8.3
  [069b7b12] + FunctionWrappers v1.1.1
  [41ab1584] + InvertedIndices v1.0.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.2
  [682c06a0] + JSON v0.21.1
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [cb905087] + Modia v0.3.0
  [67ccffd1] + ModiaMath v0.5.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [2dfb63ee] + PooledArrays v0.5.3
  [3cdcf5f2] + RecipesBase v1.1.0
  [731186ca] + RecursiveArrayTools v2.7.2
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [a2af1166] + SortingAlgorithms v0.3.1
  [90137ffa] + StaticArrays v0.12.4
  [856f2bd8] + StructTypes v1.1.0
  [c3572dad] + Sundials v4.3.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [1986cc42] + Unitful v0.18.0
  [3d5dd08c] + VectorizationBase v0.12.33
  [700de1a5] + ZygoteRules v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [d00139f3] + METIS_jll v5.1.0+4
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [bea87d4a] + SuiteSparse_jll v5.4.0+9
  [fb77eaff] + Sundials_jll v5.2.0+1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building SLEEFPirates â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mInvertedIndices[39m
[32m  âœ“ [39m[90mTreeViews[39m
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mRecipesBase[39m
[32m  âœ“ [39m[90mCEnum[39m
[32m  âœ“ [39m[90mMuladdMacro[39m
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mConstructionBase[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mStructTypes[39m
[32m  âœ“ [39m[90mOffsetArrays[39m
[32m  âœ“ [39m[90mDocStringExtensions[39m
[32m  âœ“ [39m[90mPooledArrays[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mFunctionWrappers[39m
[32m  âœ“ [39m[90mChainRulesCore[39m
[32m  âœ“ [39m[90mMETIS_jll[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mIterativeSolvers[39m
[32m  âœ“ [39m[90mRoots[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mSIMDPirates[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mSLEEFPirates[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mZygoteRules[39m
[32m  âœ“ [39m[90mOpenBLAS_jll[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mLoopVectorization[39m
[32m  âœ“ [39m[90mLabelledArrays[39m
[32m  âœ“ [39m[90mSuiteSparse_jll[39m
[32m  âœ“ [39m[90mCategoricalArrays[39m
[32m  âœ“ [39m[90mUnitful[39m
[32m  âœ“ [39m[90mSundials_jll[39m
[32m  âœ“ [39m[90mRecursiveArrayTools[39m
[32m  âœ“ [39m[90mRecursiveFactorization[39m
[32m  âœ“ [39m[90mDataFrames[39m
[32m  âœ“ [39m[90mDiffEqBase[39m
[32m  âœ“ [39m[90mSundials[39m
[32m  âœ“ [39m[90mModiaMath[39m
[91m  âœ— [39mModia
52 dependencies successfully precompiled, 1 errored (2 already precompiled)
     Testing Modia
Status `/tmp/jl_19T5oX/Project.toml`
  [864edb3b] DataStructures v0.18.7
  [682c06a0] JSON v0.21.1
  [cb905087] Modia v0.3.0
  [67ccffd1] ModiaMath v0.5.2
  [90137ffa] StaticArrays v0.12.4
  [1986cc42] Unitful v0.18.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [d6f4376e] Markdown
  [de0858da] Printf
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_19T5oX/Manifest.toml`
  [4fba245c] ArrayInterface v2.13.6
  [fa961155] CEnum v0.4.1
  [324d7699] CategoricalArrays v0.8.3
  [d360d2e6] ChainRulesCore v0.9.17
  [34da2185] Compat v3.21.0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.8
  [864edb3b] DataStructures v0.18.7
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.48.2
  [ffbed154] DocStringExtensions v0.8.3
  [069b7b12] FunctionWrappers v1.1.1
  [41ab1584] InvertedIndices v1.0.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [2ee39098] LabelledArrays v1.3.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [cb905087] Modia v0.3.0
  [67ccffd1] ModiaMath v0.5.2
  [46d2c3a1] MuladdMacro v0.2.2
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [2dfb63ee] PooledArrays v0.5.3
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.2
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.4
  [856f2bd8] StructTypes v1.1.0
  [c3572dad] Sundials v4.3.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v0.18.0
  [3d5dd08c] VectorizationBase v0.12.33
  [700de1a5] ZygoteRules v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [d00139f3] METIS_jll v5.1.0+4
  [4536629a] OpenBLAS_jll v0.3.10+0
  [bea87d4a] SuiteSparse_jll v5.4.0+9
  [fb77eaff] Sundials_jll v5.2.0+1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
 

Welcome to Modia - Dynamic Modeling and Simulation with Julia
Version 0.3.0 (2019-04-07)
Type "?Modia" for help.


 
Importing ModiaMath Version 0.5.2 (2019-07-10)
    PyPlot not available (plot commands will be ignored).
    Try to install PyPlot. See hints here:
    https://github.com/ModiaSim/ModiaMath.jl/wiki/Installing-PyPlot-in-a-robust-way.

Test match
assign = [8, 1, 2, 7, 4, 5, 3, 0]

Singular system
assign = [0, 3, 1, 0]
(invAssign, unAssignedVariables) = ([3, 0, 2], [1, 4])
(ass, unAssignedEquations) = ([0, 3, 1, 0], [2])

Test Tarjans strong connect
components = Any[Any[6], Any[7, 5, 4, 3], Any[8, 2, 1]]

Fixed-length pendulum
assign = [5, 4, 1, 2, 0, 0, 3, 0, 0]

Assigned original equations:

Test diagnostics for too many equations
Gbig = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 10], [2, 10]]
EGbig = Any[[3, 5, 11], [4, 6, 11], [1, 7, 9, 11], [2, 8, 9, 11], [1, 2, 11], [1, 10, 11], [2, 10, 11], [1, 5, 11], [2, 6, 11], [3, 7, 11], [4, 8, 11]]
componentsBig = Any[Any[5, 10, 3, 4, 11, 2, 9, 7, 6, 8, 1]]

Test diagnostics for too many variables
Gbig = Any[[3, 5], [4, 6], [1, 7, 9], [10, 8, 9], [1, 10]]
EGbig = Any[[3, 5], [4, 6], [1, 7, 9], [10, 8, 9], [1, 10], [1, 5], [2, 6], [3, 7], [4, 8], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
componentsBig = Any[Any[5, 4, 9, 2, 7, 10, 6, 3, 8, 1]]

Test diagnostics for too few equations
Gbig = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9]]
EGbig = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 5], [2, 6], [3, 7], [4, 8], [1, 2, 3, 4, 5, 6, 7, 8, 9]]
componentsBig = Any[Any[6, 2, 8, 4, 9, 7, 3, 5, 1]]

Check consistency of equations by matching extended equation set
EG = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 5], [2, 6], [3, 7], [4, 8]]
assign = [5, 7, 1, 9, 6, 2, 8, 4, 3]

Perform index reduction
G = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11]]
assign = [0, 0, 0, 0, 1, 2, 7, 4, 3, 9, 8]
A = [5, 6, 7, 8, 10, 11, 0, 0, 0, 0, 0]
B = [7, 8, 0, 0, 6, 9, 0, 0, 0]
------------------------------------------------------

vActive = Bool[0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
assign = [0, 5, 0, 2, 1, 6, 7, 4, 3, 9, 8]
components = Any[Any[1], Any[5], Any[6], Any[2], Any[4, 8, 9, 7, 3]]
------------------------------------------------------


All unknowns:

All equations:

Assigned equations:

Sorted equations:

Build augmented system.
AG = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]
assignAG = [5, 4, 1, 2, 6, 8, 3, 10, 11, 7, 9]
componentsAG = Any[Any[11, 3, 7, 9, 8, 2, 10, 4, 5, 6, 1]]

Assigned augmented equations:

Sorted augmented equations:

Set initial conditions on x and y. Should fail.
IG1 = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11], [1], [2]]
assignIG1 = [10, 5, 1, 2, 6, 8, 3, 4, 0, 7, 9]
componentsIG1 = Any[Any[10], Any[5], Any[4], Any[3], Any[7, 9, 2, 8, 6, 1], Any[11]]

Set initial conditions on x and w.
IG2 = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11], [1], [3]]
assignIG2 = [10, 5, 11, 2, 1, 6, 3, 8, 4, 7, 9]
componentsIG2 = Any[Any[11], Any[1], Any[10], Any[5], Any[6], Any[2], Any[7, 9, 8, 4, 3]]

Sorted IG2 equations:

Set initial conditions on w and z.
IG3 = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11], [3], [4]]
assignIG3 = [6, 5, 10, 11, 1, 2, 3, 8, 4, 7, 9]
componentsIG3 = Any[Any[10], Any[1], Any[11], Any[2], Any[5, 6], Any[7, 9, 8, 4, 3]]

Sorted IG3 equations:

Fixed-length pendulum

Perform index reduction

Set initial conditions on x and w.
IG = Any[[3, 5], [4, 6], [1, 7, 9], [2, 8, 9], [1, 2], [1, 2, 5, 6], [3, 5, 7, 10], [4, 6, 8, 11], [1, 2, 5, 6, 10, 11], [1], [3]]
assignIG = [10, 5, 11, 2, 1, 6, 3, 8, 4, 7, 9]
componentsIG = Any[Any[11], Any[1], Any[10], Any[5], Any[6], Any[2], Any[7, 9, 8, 4, 3]]

Exothermic Reactor Model
assign = [0, 0, 1, 7, 3, 2, 8, 6]
A = [3, 4, 7, 0, 8, 0, 0, 0]
B = [6, 0, 7, 5, 8, 0, 0, 0]
components = Any[Any[3], Any[1], Any[8], Any[6], Any[7], Any[2], Any[4], Any[5]]


----------------------


----------------------


Big tests, n = 5000

Big test: diagonal
  0.170417 seconds (76.44 k allocations: 51.765 MiB, 7.58% gc time)

Big test: band
  0.163054 seconds (112.88 k allocations: 52.218 MiB, 7.28% gc time)

Big test: full, n=1000
  0.360855 seconds (4.80 M allocations: 106.005 MiB, 2.44% gc time)

Test solve

Solve: x from: y = x
x = y

Solve: x from: y = x + z
x = y - z

Solve: x from: y = x + z + v + w
x = y - (z + v + w)

Solve: z from: y = x + z + v + w
z = (y - x) - (v + w)

Solve: v from: y = x + z + v + w
v = ((y - x) - z) - w

Solve: w from: y = x + z + v + w
w = ((y - x) - z) - v

Solve: x from: y = x - z
x = y + z

Solve: x from: y = (x - z) - w
x = (y + w) + z

Solve: x from: y = -(x, z, v, w)
x = y + (z + v + w)

Solve: v from: y = -(x, z, v, w)
v = ((x - y) - z) - w

Solve: x from: y = z - x
x = z - y

Solve: x from: y = x * z
x = y / z

Solve: x from: y = x * z * z * z
x = y / (z * z * z)

Solve: x from: y = /(x, z, w)
x = y * (z * w)

Solve: z from: y = /(x, z, w)
z = (x / y) / w

Solve: x from: y = x / z
x = y * z

Solve: z from: y = x / z
z = x / y

Solve: x from: y = x \ z
NOT SOLVED
x \ z = y


----------------------


Test differentiate

Equation: x + 5 + z = w
Differentiated: der(x) + der(z) = der(w)

Equation: der(x) + der(z) = der(w)
Differentiated: der(der(x)) + der(der(z)) = der(der(w))

Equation: +x = w
Differentiated: der(x) = der(w)

Equation: 2 + 3 = w
Differentiated: 0.0 = der(w)

Equation: -x = w
Differentiated: -(der(x)) = der(w)

Equation: (x - 5) - z = w
Differentiated: der(x) - der(z) = der(w)

Equation: 5x = w
Differentiated: 5 * der(x) = der(w)

Equation: x * 5 * z = w
Differentiated: der(x) * 5 * z + x * 5 * der(z) = der(w)

Equation: 4 * 5 * 6 = w
Differentiated: 0.0 = der(w)

Equation: y = x / y
Differentiated: der(y) = der(x) / y + (x / y ^ 2) * der(y)

Equation: y = x / 5
Differentiated: der(y) = der(x) / 5

Equation: y = 5 / y
Differentiated: der(y) = (5 / y ^ 2) * der(y)

Equation: y = [1, x]
Differentiated: der(y) = [0.0, der(x)]

Equation: y = [2x 3x; 4x 5x]
Differentiated: der(y) = [2 * der(x) 3 * der(x); 4 * der(x) 5 * der(x)]

Equation: y = [2x 3x; 4x 5x] * [1, x]
Differentiated: der(y) = [2 * der(x) 3 * der(x); 4 * der(x) 5 * der(x)] * [1, x] + [2x 3x; 4x 5x] * [0.0, der(x)]

Equation: y = transpose(B) + BÂ´
Differentiated: der(y) = transpose(der(B)) + der(BÂ´)

Equation: y = x[5, 6]
Differentiated: der(y) = (der(x))[5, 6]

Equation: y = x[5:7]
Differentiated: der(y) = (der(x))[5:7]

Equation: y = sin(x)
Differentiated: der(y) = cos(x) * der(x)

Equation: y = cos(x)
Differentiated: der(y) = -(sin(x)) * der(x)

Equation: y = tan(x)
Differentiated: der(y) = (1 / cos(x) ^ 2) * der(x)

Equation: y = exp(x)
Differentiated: der(y) = exp(x) * der(x)

Equation: y = x ^ y
Differentiated: der(y) = y * x ^ (y - 1) * der(x) + x ^ y * log(x) * der(y)

Equation: y = log(x)
Differentiated: der(y) = (1 / x) * der(x)

Equation: y = asin(x)
Differentiated: der(y) = (1 / sqrt(1 - x ^ 2)) * der(x)

Equation: y = acos(x)
Differentiated: der(y) = (-1 / sqrt(1 - x ^ 2)) * der(x)

Equation: y = atan(x)
Differentiated: der(y) = (1 / (1 + x ^ 2)) * der(x)

Equation: y = f(x, 5, z)
Derivative function f_der_1 not found.
Derivative function f_der_3 not found.
Differentiated: der(y) = f_der_1(x, 5, z) * der(x) + f_der_3(x, 5, z) * der(z)

Equation: y = f(x, 5, g(z))
Derivative function f_der_1 not found.
Derivative function g_der_1 not found.
Derivative function f_der_3 not found.
Differentiated: der(y) = f_der_1(x, 5, g(z)) * der(x) + f_der_3(x, 5, g(z)) * (g_der_1(z) * der(z))

Equation: y = if true
        x
    else
        y
    end
Differentiated: der(y) = if true
        der(x)
    else
        der(y)
    end

Equation: y = time
Differentiated: der(y) = 1.0

Equation: y = a * x
Differentiated: der(y) = a * der(x)


----------------------



... Test two coupled inertias (all unknowns can be solved for)

  Variables of _x vector (length=2):
     _x[1]: J1_phi
     _x[2]: der(J1_phi)      # = der(_x[1])

  Variables of _der_x vector (length=2):
     _der_x[1]: ---      # = _x[2] = der(J1_phi)
     _der_x[2]: der2(J1_phi)

  Sorted equations (length(_r) = 2, nc = 0):
     _r[1]   = _der_x[1] - _x[2]
     J2_phi   = < solved from eq.5 >
     der(J2_phi)   = < solved from eq.7 = der(eq.5) >
     J1_w   = < solved from eq.1 >
     J2_w   = < solved from eq.3 >
     der2(J2_phi)   = < solved from eq.10 = der2(eq.5) >
     der(J1_w)   = < solved from eq.8 = der(eq.1) >
     der(J2_w)   = < solved from eq.9 = der(eq.3) >
     J2_tau   = < solved from eq.4 >
     J1_tau   = < solved from eq.6 >
     _r[2]   = < residue of eq.2 >


... Test two coupled inertias (only a subset of unknowns can be solved for)

  Variables of _x vector (length=2):
     _x[1]: J2_phi
     _x[2]: der(J2_phi)      # = der(_x[1])

  Variables of _der_x vector (length=2):
     _der_x[1]: ---      # = _x[2] = der(J2_phi)
     _der_x[2]: der2(J2_phi)

  Sorted equations (length(_r) = 2, nc = 0):
     _r[1]   = _der_x[1] - _x[2]
     J1_phi   = < solved from eq.5 >
     der(J1_phi)   = < solved from eq.7 = der(eq.5) >
     J1_w   = < solved from eq.1 >
     J2_w   = < solved from eq.3 >
     der2(J1_phi)   = < solved from eq.10 = der2(eq.5) >
     der(J1_w)   = < solved from eq.8 = der(eq.1) >
     der(J2_w)   = < solved from eq.9 = der(eq.3) >
     J2_tau   = < solved from eq.4 >
     J1_tau   = < solved from eq.6 >
     _r[2]   = < residue of eq.2 >


... Test two coupled inertias (no unknowns can be solved for)

  Variables of _x vector (length=9):
     _x[1]: J1_phi
     _x[2]: J2_phi
     _x[3]: der(J1_phi)      # = der(_x[1])
     _x[4]: der(J2_phi)      # = der(_x[2])
     _x[5]: J2_w
     _x[6]: J1_w
     _x[7]: ---      # integral of lambda variable
     _x[8]: ---      # integral of lambda variable
     _x[9]: ---      # integral of mue variable

  Variables of _der_x vector (length=9):
     _der_x[1]: ---      # = _x[3] = der(J1_phi)
     _der_x[2]: ---      # = _x[4] = der(J2_phi)
     _der_x[3]: der2(J1_phi)
     _der_x[4]: der2(J2_phi)
     _der_x[5]: der(J2_w)
     _der_x[6]: der(J1_w)
     _der_x[7]: J2_tau     # lambda variable
     _der_x[8]: J1_tau     # lambda variable
     _der_x[9]: ---      # mue variable associated with equation eq.7 = der(eq.5)

  Sorted equations (length(_r) = 9, nc = 4):
     _r[1]   = _der_x[1] - _x[3]
     _r[2]   = _der_x[2] - _x[4]
     _r[6]   = < residue of eq.5 >
     _r[7]   = < residue of eq.1 >
     _r[9]   = < residue of eq.7 = der(eq.5) >
     _r[8]   = < residue of eq.3 >
     _r[3]   = < residue of eq.4 >
     _r[4]   = < residue of eq.6 >
     _r[5]   = < residue of eq.2 >


... Test simple sliding mass model with Tearing

  Variables of _x vector (length=3):
     _x[1]: s
     _x[2]: der(s)      # = der(_x[1])
     _x[3]: sf

  Variables of _der_x vector (length=3):
     _der_x[1]: ---      # = _x[2] = der(s)
     _der_x[2]: der2(s)
     _der_x[3]: der(sf)

  Sorted equations (length(_r) = 3, nc = 0):
     _r[1]   = _der_x[1] - _x[2]
     r   = < solved from eq.1 >
     der(r)   = < solved from eq.6 = der(eq.1) >
     v   = < solved from eq.2 >
     der2(r)   = < solved from eq.7 = der2(eq.1) >
     der(v)   = < solved from eq.8 = der(eq.2) >
     u   = < solved from eq.5 >
     _r[2]   = < residue of eq.9 >
     f   = < solved from eq.3 >
     _r[3]   = < residue of eq.4 >


... Test Multi-Index DAE without tearing

  Variables of _x vector (length=21):
     _x[1]: x7
     _x[2]: x6
     _x[3]: der(x7)      # = der(_x[1])
     _x[4]: der(x6)      # = der(_x[2])
     _x[5]: der2(x7)      # = der(_x[3])
     _x[6]: der2(x6)      # = der(_x[4])
     _x[7]: x1
     _x[8]: x2
     _x[9]: x3
     _x[10]: der(x1)      # = der(_x[7])
     _x[11]: der(x2)      # = der(_x[8])
     _x[12]: der(x3)      # = der(_x[9])
     _x[13]: x4
     _x[14]: x8      # algebraic variable
     _x[15]: ---      # integral of lambda variable
     _x[16]: ---      # integral of mue variable
     _x[17]: ---      # integral of mue variable
     _x[18]: ---      # integral of mue variable
     _x[19]: ---      # integral of mue variable
     _x[20]: ---      # integral of mue variable
     _x[21]: ---      # integral of mue variable

  Variables of _der_x vector (length=21):
     _der_x[1]: ---      # = _x[3] = der(x7)
     _der_x[2]: ---      # = _x[4] = der(x6)
     _der_x[3]: ---      # = _x[5] = der2(x7)
     _der_x[4]: ---      # = _x[6] = der2(x6)
     _der_x[5]: der3(x7)
     _der_x[6]: der3(x6)
     _der_x[7]: ---      # = _x[10] = der(x1)
     _der_x[8]: ---      # = _x[11] = der(x2)
     _der_x[9]: ---      # = _x[12] = der(x3)
     _der_x[10]: der2(x1)
     _der_x[11]: der2(x2)
     _der_x[12]: der2(x3)
     _der_x[13]: der(x4)
     _der_x[14]: ---      # derivative of algebraic variable
     _der_x[15]: x5     # lambda variable
     _der_x[16]: ---      # mue variable associated with equation eq.14 = der(eq.6)
     _der_x[17]: ---      # mue variable associated with equation eq.15 = der(eq.7)
     _der_x[18]: ---      # mue variable associated with equation eq.16 = der2(eq.6)
     _der_x[19]: ---      # mue variable associated with equation eq.17 = der2(eq.7)
     _der_x[20]: ---      # mue variable associated with equation eq.9 = der(eq.1)
     _der_x[21]: ---      # mue variable associated with equation eq.11 = der(eq.2)

  Sorted equations (length(_r) = 21, nc = 12):
     _r[1]   = _der_x[1] - _x[3]
     _r[2]   = _der_x[2] - _x[4]
     _r[3]   = _der_x[3] - _x[5]
     _r[4]   = _der_x[4] - _x[6]
     _r[5]   = _der_x[7] - _x[10]
     _r[6]   = _der_x[8] - _x[11]
     _r[7]   = _der_x[9] - _x[12]
     _r[11]   = < residue of eq.6 >
     _r[12]   = < residue of eq.7 >
     _r[16]   = < residue of eq.14 = der(eq.6) >
     _r[17]   = < residue of eq.15 = der(eq.7) >
     _r[18]   = < residue of eq.16 = der2(eq.6) >
     _r[19]   = < residue of eq.17 = der2(eq.7) >
     _r[13]   = < residue of eq.1 >
     _r[14]   = < residue of eq.2 >
     _r[20]   = < residue of eq.9 = der(eq.1) >
     _r[21]   = < residue of eq.11 = der(eq.2) >
     _r[15]   = < residue of eq.3 >
     _r[10]   = < residue of eq.8 >
     _r[8]   = < residue of eq.4 >
     _r[9]   = < residue of eq.5 >


... Test Multi-Index DAE WITH tearing

  Variables of _x vector (length=8):
     _x[1]: x7
     _x[2]: der(x7)      # = der(_x[1])
     _x[3]: der2(x7)      # = der(_x[2])
     _x[4]: x2
     _x[5]: der(x2)      # = der(_x[4])
     _x[6]: x8      # algebraic variable
     _x[7]: ---      # integral of mue variable
     _x[8]: ---      # integral of mue variable

  Variables of _der_x vector (length=8):
     _der_x[1]: ---      # = _x[2] = der(x7)
     _der_x[2]: ---      # = _x[3] = der2(x7)
     _der_x[3]: der3(x7)
     _der_x[4]: ---      # = _x[5] = der(x2)
     _der_x[5]: der2(x2)
     _der_x[6]: ---      # derivative of algebraic variable
     _der_x[7]: ---      # mue variable associated with equation eq.15 = der(eq.7)
     _der_x[8]: ---      # mue variable associated with equation eq.17 = der2(eq.7)

  Sorted equations (length(_r) = 8, nc = 4):
     _r[1]   = _der_x[1] - _x[2]
     _r[2]   = _der_x[2] - _x[3]
     _r[3]   = _der_x[4] - _x[5]
     x6   = < solved from eq.6 >
     _r[6]   = < residue of eq.7 >
     der(x6)   = < solved from eq.14 = der(eq.6) >
     _r[7]   = < residue of eq.15 = der(eq.7) >
     der2(x6)   = < solved from eq.16 = der2(eq.6) >
     _r[8]   = < residue of eq.17 = der2(eq.7) >
     x1   = < solved from eq.1 >
     x3   = < solved from eq.2 >
     der(x1)   = < solved from eq.9 = der(eq.1) >
     der(x3)   = < solved from eq.11 = der(eq.2) >
     x4   = < solved from eq.3 >
     der3(x6)   = < solved from eq.18 = der3(eq.6) >
     der2(x1)   = < solved from eq.10 = der2(eq.1) >
     der2(x3)   = < solved from eq.12 = der2(eq.2) >
     der(x4)   = < solved from eq.13 = der(eq.3) >
     x5   = < solved from eq.5 >
     _r[5]   = < residue of eq.8 >
     _r[4]   = < residue of eq.4 >

TestVariableTypes: Demonstrating the handling of various variable types

Simulating model: TestVariableTypes1
Number of equations: 9
Number of variables: 11
Number of continuous states: 2

signal (15): Terminated
in expression starting at none:31
