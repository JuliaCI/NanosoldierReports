Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed LeftChildRightSiblingTrees â”€ v0.1.2
   Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed BenchmarkCI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.6
   Installed PkgBenchmark â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.10
   Installed Zstd_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.5+2
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed GitHub â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.1.7
   Installed MbedTLS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.16.8+0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed ProgressLogging â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed AbstractTrees â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed Setfield â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed CpuId â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed ConstructionBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed TerminalLoggers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [20533458] + BenchmarkCI v0.1.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [20533458] + BenchmarkCI v0.1.6
  [6e4b80f9] + BenchmarkTools v0.5.0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [bc5e4493] + GitHub v5.1.7
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [692b3bcd] + JLLWrappers v1.1.2
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.2
  [69de0a69] + Parsers v1.0.11
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [ae029012] + Requires v1.1.0
  [efcf1570] + Setfield v0.7.0
  [5d786b92] + TerminalLoggers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [3161d3a3] + Zstd_jll v1.4.5+2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [a4e569a6] + Tar
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building PkgBenchmark â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/6e2856f677f8dcab289ded9c3ffb018fad38f29c/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mProgressLogging[39m
[32m  âœ“ [39m[90mConstructionBase[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mAbstractTrees[39m
[32m  âœ“ [39m[90mCpuId[39m
[32m  âœ“ [39m[90mLeftChildRightSiblingTrees[39m
[32m  âœ“ [39m[90mTerminalLoggers[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mZstd_jll[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mBenchmarkTools[39m
[32m  âœ“ [39m[90mSetfield[39m
[32m  âœ“ [39m[90mHTTP[39m
[91m  âœ— [39m[90mGitHub[39m
[32m  âœ“ [39m[90mPkgBenchmark[39m
[91m  âœ— [39mBenchmarkCI
20 dependencies successfully precompiled, 2 errored
     Testing BenchmarkCI
Status `/tmp/jl_VSdrZ0/Project.toml`
  [20533458] BenchmarkCI v0.1.6
  [6e4b80f9] BenchmarkTools v0.5.0
  [adafc99b] CpuId v0.2.2
  [bc5e4493] GitHub v5.1.7
  [682c06a0] JSON v0.21.1
  [32113eaa] PkgBenchmark v0.2.10
  [efcf1570] Setfield v0.7.0
  [3a884ed6] UnPack v1.0.2
  [3161d3a3] Zstd_jll v1.4.5+2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [a4e569a6] Tar
  [8dfed614] Test
Status `/tmp/jl_VSdrZ0/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [20533458] BenchmarkCI v0.1.6
  [6e4b80f9] BenchmarkTools v0.5.0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.2
  [69de0a69] Parsers v1.0.11
  [32113eaa] PkgBenchmark v0.2.10
  [33c8b6b6] ProgressLogging v0.1.3
  [ae029012] Requires v1.1.0
  [efcf1570] Setfield v0.7.0
  [5d786b92] TerminalLoggers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [3161d3a3] Zstd_jll v1.4.5+2
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [a4e569a6] Tar
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Cloning into 'BenchmarkCIExample.jl'...


[ Info: Testing with target = testcase/0000-with-manifest
Note: switching to 'testcase/0000-with-manifest'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 4f8cbb1 Add benchmark/{Project,Manifest}.toml
[ Info: Using existing manifest file.
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/Project.toml`
   Installed BenchmarkTools â”€ v0.4.3
   Installed ProgressMeter â”€â”€ v1.2.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
   Installed PkgBenchmark â”€â”€â”€ v0.2.6
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
    Building PkgBenchmark â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/eeda9bde6194b57515c2494082ee1875ebf140ad/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39mBenchmarkCIExample
[32m  âœ“ [39m[90mProgressMeter[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39mBenchmarkTools
[32m  âœ“ [39mPkgBenchmark
6 dependencies successfully precompiled
PkgBenchmark: creating benchmark tuning file /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json...
(1/1) tuning "sum(xs)"...
  (1/2) tuning "base"...
  done (took 14.613497329 seconds)
  (2/2) tuning "naive_sum"...
  done (took 10.398323417 seconds)
done (took 29.7311507 seconds)
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 3.698400676 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 3.552370263 seconds)
done (took 13.437136463 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-target.json
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/Project.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 9.545974842 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 8.051977259 seconds)
done (took 25.906441606 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-baseline.json
â”Œ Info: Finish running benchmarks.
â”‚ * Target: 2 minutes 29 seconds
â”” * Baseline: 1 minutes 53 seconds
Benchmarkjudgement (target / baseline):
    Package: /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl
    Dates: 21 Oct 2020 - 9:49 / 21 Oct 2020 - 9:51
    Package commits: 4f8cbb / b45747
    Julia commits: f39cb4 / f39cb4
  Judge result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmarks:
      
          â€¢    Target: 21 Oct 2020 - 09:49
      
          â€¢   
      Baseline: 21 Oct 2020 - 09:51

    â€¢    Package commits:
      
          â€¢    Target: 4f8cbb
      
          â€¢    Baseline:
      b45747

    â€¢    Julia commits:
      
          â€¢    Target: f39cb4
      
          â€¢    Baseline: f39cb4

    â€¢    Julia command flags:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

    â€¢    Environment variables:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

  Results
  =========

  A ratio greater than 1.0 denotes a possible regression (marked with :x:),
  while a ratio less than 1.0 denotes a possible improvement (marked with
  :whitecheckmark:). Only significant results - results that indicate possible
  regressions or improvements - are shown below (thus, an empty table means
  that all benchmark results remained invariant between builds).

  | ID | time ratio | memory ratio | |â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“â€“|

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Target
  â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2765 MHz   29017155 s    3397841 s    7123508 s  114577045 s          0 s
         
    Memory: 503.8203659057617 GB (282218.2734375 MB free)
    Uptime: 126510.0 sec
    Load Avg:  246.83  250.43  241.68
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  Baseline
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2373 MHz   29084042 s    3398060 s    7141166 s  114589606 s          0 s
         
    Memory: 503.8203659057617 GB (279416.6015625 MB free)
    Uptime: 126628.0 sec
    Load Avg:  248.57  247.61  241.61
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Target result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:49

    â€¢    Package commit: 4f8cbb

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.960 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2765 MHz   29017155 s    3397841 s    7123508 s  114577045 s          0 s
         
    Memory: 503.8203659057617 GB (282218.2734375 MB free)
    Uptime: 126510.0 sec
    Load Avg:  246.83  250.43  241.68
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Baseline result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:51

    â€¢    Package commit: b45747

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.973 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2373 MHz   29084042 s    3398060 s    7141166 s  114589606 s          0 s
         
    Memory: 503.8203659057617 GB (279416.6015625 MB free)
    Uptime: 126628.0 sec
    Load Avg:  248.57  247.61  241.61
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Runtime information
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Runtime Info              
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  BLAS #threads   8         
  BLAS.vendor()   openblas64
  Sys.CPU_THREADS 128       

  lscpu output:

  Architecture:                    x86_64
  CPU op-mode(s):                  32-bit, 64-bit
  Byte Order:                      Little Endian
  Address sizes:                   43 bits physical, 48 bits virtual
  CPU(s):                          128
  On-line CPU(s) list:             0-127
  Thread(s) per core:              2
  Core(s) per socket:              32
  Socket(s):                       2
  NUMA node(s):                    2
  Vendor ID:                       AuthenticAMD
  CPU family:                      23
  Model:                           49
  Model name:                      AMD EPYC 7502 32-Core Processor
  Stepping:                        0
  Frequency boost:                 enabled
  CPU MHz:                         2987.415
  CPU max MHz:                     2500.0000
  CPU min MHz:                     1500.0000
  BogoMIPS:                        5000.03
  Virtualization:                  AMD-V
  L1d cache:                       2 MiB
  L1i cache:                       2 MiB
  L2 cache:                        32 MiB
  L3 cache:                        256 MiB
  NUMA node0 CPU(s):               0-31,64-95
  NUMA node1 CPU(s):               32-63,96-127
  Vulnerability Itlb multihit:     Not affected
  Vulnerability L1tf:              Not affected
  Vulnerability Mds:               Not affected
  Vulnerability Meltdown:          Not affected
  Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp
  Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Vulnerability Spectre v2:        Mitigation; Full AMD retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling
  Vulnerability Srbds:             Not affected
  Vulnerability Tsx async abort:   Not affected
  Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca

  Cpu Property       Value                                                     
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  Brand              AMD EPYC 7502 32-Core Processor                           
  Vendor             :AMD                                                      
  Architecture       :Zen                                                      
  Model              Family: 0x8f, Model: 0x31, Stepping: 0x00, Type: 0x00     
  Cores              32 physical cores, 64 logical cores (on executing CPU)    
                     Hyperthreading detected                                   
  Clock Frequencies  Not supported by CPU                                      
  Data Cache         Level 1:3 : (32, 512, 16384) kbytes                       
                     64 byte cache line size                                   
  Address Size       48 bits virtual, 48 bits physical                         
  SIMD               256 bit = 32 byte max. SIMD vector size                   
  Time Stamp Counter TSC is accessible via rdtsc                               
                     TSC runs at constant rate (invariant from clock frequency)
  Perf. Monitoring   Performance Monitoring Counters (PMC) are not supported   
                     CPU supports AMD's Instruction Based Sampling (IBS)       
  Hypervisor         No                                                        
[ Info: Using existing manifest file.
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/Project.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 7.528696364 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 3.957728608 seconds)
done (took 15.15765529 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-target.json
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/Project.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 9.050505755 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 6.960512746 seconds)
done (took 19.777056765 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-baseline.json
â”Œ Info: Finish running benchmarks.
â”‚ * Target: 1 minutes 37 seconds
â”” * Baseline: 1 minutes 28 seconds
Benchmarkjudgement (target / baseline):
    Package: /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl
    Dates: 21 Oct 2020 - 9:53 / 21 Oct 2020 - 9:55
    Package commits: 4f8cbb / b45747
    Julia commits: f39cb4 / f39cb4
  Judge result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmarks:
      
          â€¢    Target: 21 Oct 2020 - 09:53
      
          â€¢   
      Baseline: 21 Oct 2020 - 09:55

    â€¢    Package commits:
      
          â€¢    Target: 4f8cbb
      
          â€¢    Baseline:
      b45747

    â€¢    Julia commits:
      
          â€¢    Target: f39cb4
      
          â€¢    Baseline: f39cb4

    â€¢    Julia command flags:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

    â€¢    Environment variables:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

  Results
  =========

  A ratio greater than 1.0 denotes a possible regression (marked with :x:),
  while a ratio less than 1.0 denotes a possible improvement (marked with
  :whitecheckmark:). Only significant results - results that indicate possible
  regressions or improvements - are shown below (thus, an empty table means
  that all benchmark results remained invariant between builds).

  | ID | time ratio | memory ratio | |â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“â€“|

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Target
  â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2797 MHz   29162526 s    3398155 s    7162037 s  114603175 s          0 s
         
    Memory: 503.8203659057617 GB (287085.1484375 MB free)
    Uptime: 126766.0 sec
    Load Avg:  263.22  253.7  244.72
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  Baseline
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  3002 MHz   29216355 s    3398155 s    7176334 s  114612442 s          0 s
         
    Memory: 503.8203659057617 GB (280850.0390625 MB free)
    Uptime: 126855.0 sec
    Load Avg:  232.51  247.42  243.41
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Target result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:53

    â€¢    Package commit: 4f8cbb

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.960 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2797 MHz   29162526 s    3398155 s    7162037 s  114603175 s          0 s
         
    Memory: 503.8203659057617 GB (287085.1484375 MB free)
    Uptime: 126766.0 sec
    Load Avg:  263.22  253.7  244.72
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Baseline result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:55

    â€¢    Package commit: b45747

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.960 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  3002 MHz   29216355 s    3398155 s    7176334 s  114612442 s          0 s
         
    Memory: 503.8203659057617 GB (280850.0390625 MB free)
    Uptime: 126855.0 sec
    Load Avg:  232.51  247.42  243.41
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Runtime information
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Runtime Info              
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  BLAS #threads   8         
  BLAS.vendor()   openblas64
  Sys.CPU_THREADS 128       

  lscpu output:

  Architecture:                    x86_64
  CPU op-mode(s):                  32-bit, 64-bit
  Byte Order:                      Little Endian
  Address sizes:                   43 bits physical, 48 bits virtual
  CPU(s):                          128
  On-line CPU(s) list:             0-127
  Thread(s) per core:              2
  Core(s) per socket:              32
  Socket(s):                       2
  NUMA node(s):                    2
  Vendor ID:                       AuthenticAMD
  CPU family:                      23
  Model:                           49
  Model name:                      AMD EPYC 7502 32-Core Processor
  Stepping:                        0
  Frequency boost:                 enabled
  CPU MHz:                         2728.087
  CPU max MHz:                     2500.0000
  CPU min MHz:                     1500.0000
  BogoMIPS:                        5000.03
  Virtualization:                  AMD-V
  L1d cache:                       2 MiB
  L1i cache:                       2 MiB
  L2 cache:                        32 MiB
  L3 cache:                        256 MiB
  NUMA node0 CPU(s):               0-31,64-95
  NUMA node1 CPU(s):               32-63,96-127
  Vulnerability Itlb multihit:     Not affected
  Vulnerability L1tf:              Not affected
  Vulnerability Mds:               Not affected
  Vulnerability Meltdown:          Not affected
  Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp
  Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Vulnerability Spectre v2:        Mitigation; Full AMD retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling
  Vulnerability Srbds:             Not affected
  Vulnerability Tsx async abort:   Not affected
  Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca

  Cpu Property       Value                                                     
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  Brand              AMD EPYC 7502 32-Core Processor                           
  Vendor             :AMD                                                      
  Architecture       :Zen                                                      
  Model              Family: 0x8f, Model: 0x31, Stepping: 0x00, Type: 0x00     
  Cores              32 physical cores, 64 logical cores (on executing CPU)    
                     Hyperthreading detected                                   
  Clock Frequencies  Not supported by CPU                                      
  Data Cache         Level 1:3 : (32, 512, 16384) kbytes                       
                     64 byte cache line size                                   
  Address Size       48 bits virtual, 48 bits physical                         
  SIMD               256 bit = 32 byte max. SIMD vector size                   
  Time Stamp Counter TSC is accessible via rdtsc                               
                     TSC runs at constant rate (invariant from clock frequency)
  Perf. Monitoring   Performance Monitoring Counters (PMC) are not supported   
                     CPU supports AMD's Instruction Based Sampling (IBS)       
  Hypervisor         No                                                        


[ Info: Testing with target = testcase/0001-without-manifest
Previous HEAD position was 4f8cbb1 Add benchmark/{Project,Manifest}.toml
HEAD is now at 5e619c2 Use BenchmarkCI without benchmark/Manifest.toml
Removing .benchmarkci/
Removing benchmark/tune.json
Path `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl` exists and looks like the correct package. Using existing path.
   Resolving package versions...
  Installing known registries into `~/.julia`
       Added registry `General` to `~/.julia/registries/General`
Updating `/tmp/BenchmarkCI_jl_FBhWnv/Project.toml`
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [32113eaa] + PkgBenchmark v0.2.10
Updating `/tmp/BenchmarkCI_jl_FBhWnv/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [69de0a69] + Parsers v1.0.11
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
[ Info: Using temporary project `/tmp/BenchmarkCI_jl_FBhWnv`.
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_FBhWnv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_FBhWnv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_FBhWnv/Manifest.toml`
PkgBenchmark: creating benchmark tuning file /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json...
(1/1) tuning "sum(xs)"...
  (1/2) tuning "base"...
  done (took 12.922789871 seconds)
  (2/2) tuning "naive_sum"...
  done (took 13.487680889 seconds)
done (took 32.832722513 seconds)
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 3.254212703 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 5.716152906 seconds)
done (took 11.947662121 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-target.json
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_FBhWnv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_FBhWnv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_FBhWnv/Manifest.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 6.040927594 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 6.121519502 seconds)
done (took 15.675823244 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-baseline.json
â”Œ Info: Finish running benchmarks.
â”‚ * Target: 1 minutes 59 seconds
â”” * Baseline: 1 minutes 20 seconds
Benchmarkjudgement (target / baseline):
    Package: /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl
    Dates: 21 Oct 2020 - 9:57 / 21 Oct 2020 - 9:58
    Package commits: 5e619c / b45747
    Julia commits: f39cb4 / f39cb4
  Judge result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmarks:
      
          â€¢    Target: 21 Oct 2020 - 09:57
      
          â€¢   
      Baseline: 21 Oct 2020 - 09:58

    â€¢    Package commits:
      
          â€¢    Target: 5e619c
      
          â€¢    Baseline:
      b45747

    â€¢    Julia commits:
      
          â€¢    Target: f39cb4
      
          â€¢    Baseline: f39cb4

    â€¢    Julia command flags:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

    â€¢    Environment variables:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

  Results
  =========

  A ratio greater than 1.0 denotes a possible regression (marked with :x:),
  while a ratio less than 1.0 denotes a possible improvement (marked with
  :whitecheckmark:). Only significant results - results that indicate possible
  regressions or improvements - are shown below (thus, an empty table means
  that all benchmark results remained invariant between builds).

  | ID | time ratio | memory ratio | |â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“â€“|

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Target
  â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2782 MHz   29313079 s    3398155 s    7200220 s  114626494 s          0 s
         
    Memory: 503.8203659057617 GB (267323.07421875 MB free)
    Uptime: 127003.0 sec
    Load Avg:  245.24  247.13  244.03
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  Baseline
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  3034 MHz   29364881 s    3398155 s    7213892 s  114634227 s          0 s
         
    Memory: 503.8203659057617 GB (277696.2109375 MB free)
    Uptime: 127082.0 sec
    Load Avg:  220.06  240.31  241.99
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Target result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:57

    â€¢    Package commit: 5e619c

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.976 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2782 MHz   29313079 s    3398155 s    7200220 s  114626494 s          0 s
         
    Memory: 503.8203659057617 GB (267323.07421875 MB free)
    Uptime: 127003.0 sec
    Load Avg:  245.24  247.13  244.03
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Baseline result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 9:58

    â€¢    Package commit: b45747

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.963 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  3034 MHz   29364881 s    3398155 s    7213892 s  114634227 s          0 s
         
    Memory: 503.8203659057617 GB (277696.2109375 MB free)
    Uptime: 127082.0 sec
    Load Avg:  220.06  240.31  241.99
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Runtime information
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Runtime Info              
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  BLAS #threads   8         
  BLAS.vendor()   openblas64
  Sys.CPU_THREADS 128       

  lscpu output:

  Architecture:                    x86_64
  CPU op-mode(s):                  32-bit, 64-bit
  Byte Order:                      Little Endian
  Address sizes:                   43 bits physical, 48 bits virtual
  CPU(s):                          128
  On-line CPU(s) list:             0-127
  Thread(s) per core:              2
  Core(s) per socket:              32
  Socket(s):                       2
  NUMA node(s):                    2
  Vendor ID:                       AuthenticAMD
  CPU family:                      23
  Model:                           49
  Model name:                      AMD EPYC 7502 32-Core Processor
  Stepping:                        0
  Frequency boost:                 enabled
  CPU MHz:                         2706.003
  CPU max MHz:                     2500.0000
  CPU min MHz:                     1500.0000
  BogoMIPS:                        5000.03
  Virtualization:                  AMD-V
  L1d cache:                       2 MiB
  L1i cache:                       2 MiB
  L2 cache:                        32 MiB
  L3 cache:                        256 MiB
  NUMA node0 CPU(s):               0-31,64-95
  NUMA node1 CPU(s):               32-63,96-127
  Vulnerability Itlb multihit:     Not affected
  Vulnerability L1tf:              Not affected
  Vulnerability Mds:               Not affected
  Vulnerability Meltdown:          Not affected
  Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp
  Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Vulnerability Spectre v2:        Mitigation; Full AMD retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling
  Vulnerability Srbds:             Not affected
  Vulnerability Tsx async abort:   Not affected
  Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca

  Cpu Property       Value                                                     
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  Brand              AMD EPYC 7502 32-Core Processor                           
  Vendor             :AMD                                                      
  Architecture       :Zen                                                      
  Model              Family: 0x8f, Model: 0x31, Stepping: 0x00, Type: 0x00     
  Cores              32 physical cores, 64 logical cores (on executing CPU)    
                     Hyperthreading detected                                   
  Clock Frequencies  Not supported by CPU                                      
  Data Cache         Level 1:3 : (32, 512, 16384) kbytes                       
                     64 byte cache line size                                   
  Address Size       48 bits virtual, 48 bits physical                         
  SIMD               256 bit = 32 byte max. SIMD vector size                   
  Time Stamp Counter TSC is accessible via rdtsc                               
                     TSC runs at constant rate (invariant from clock frequency)
  Perf. Monitoring   Performance Monitoring Counters (PMC) are not supported   
                     CPU supports AMD's Instruction Based Sampling (IBS)       
  Hypervisor         No                                                        
Path `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl` exists and looks like the correct package. Using existing path.
   Resolving package versions...
Updating `/tmp/BenchmarkCI_jl_qOvZjt/Project.toml`
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [32113eaa] + PkgBenchmark v0.2.10
Updating `/tmp/BenchmarkCI_jl_qOvZjt/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [69de0a69] + Parsers v1.0.11
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
[ Info: Using temporary project `/tmp/BenchmarkCI_jl_qOvZjt`.
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_qOvZjt/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_qOvZjt/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_qOvZjt/Manifest.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 6.493110423 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 4.060571922 seconds)
done (took 13.020747589 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-target.json
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_qOvZjt/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_qOvZjt/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_qOvZjt/Manifest.toml`
PkgBenchmark: using benchmark tuning data in /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 7.093245745 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 7.096295947 seconds)
done (took 16.519830479 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-baseline.json
â”Œ Info: Finish running benchmarks.
â”‚ * Target: 1 minutes 8 seconds
â”” * Baseline: 1 minutes 14 seconds
Benchmarkjudgement (target / baseline):
    Package: /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl
    Dates: 21 Oct 2020 - 10:0 / 21 Oct 2020 - 10:1
    Package commits: 5e619c / b45747
    Julia commits: f39cb4 / f39cb4
  Judge result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmarks:
      
          â€¢    Target: 21 Oct 2020 - 10:00
      
          â€¢   
      Baseline: 21 Oct 2020 - 10:01

    â€¢    Package commits:
      
          â€¢    Target: 5e619c
      
          â€¢    Baseline:
      b45747

    â€¢    Julia commits:
      
          â€¢    Target: f39cb4
      
          â€¢    Baseline: f39cb4

    â€¢    Julia command flags:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

    â€¢    Environment variables:
      
          â€¢    Target: None
      
          â€¢    Baseline:
      None

  Results
  =========

  A ratio greater than 1.0 denotes a possible regression (marked with :x:),
  while a ratio less than 1.0 denotes a possible improvement (marked with
  :whitecheckmark:). Only significant results - results that indicate possible
  regressions or improvements - are shown below (thus, an empty table means
  that all benchmark results remained invariant between builds).

  | ID | time ratio | memory ratio | |â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“|â€“â€“â€“â€“â€“â€“â€“|

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Target
  â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  1434 MHz   29425632 s    3398155 s    7229691 s  114642716 s          0 s
         
    Memory: 503.8203659057617 GB (273338.05078125 MB free)
    Uptime: 127171.0 sec
    Load Avg:  225.43  237.09  240.69
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  Baseline
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2237 MHz   29478493 s    3398198 s    7242495 s  114649726 s          0 s
         
    Memory: 503.8203659057617 GB (281033.4609375 MB free)
    Uptime: 127244.0 sec
    Load Avg:  218.39  230.43  237.98
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Target result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 10:0

    â€¢    Package commit: 5e619c

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  8.970 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  1434 MHz   29425632 s    3398155 s    7229691 s  114642716 s          0 s
         
    Memory: 503.8203659057617 GB (273338.05078125 MB free)
    Uptime: 127171.0 sec
    Load Avg:  225.43  237.09  240.69
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Baseline result
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Benchmark Report for
 /tmp/BenchmarkCIjltest_wfLAkw/BenchmarkCIExample.jl
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Job Properties
  ================

    â€¢    Time of benchmark: 21 Oct 2020 - 10:1

    â€¢    Package commit: b45747

    â€¢    Julia commit: f39cb4

    â€¢    Julia command flags: None

    â€¢    Environment variables: None

  Results
  =========

  Below is a table of this job's results, obtained by running the benchmarks.
  The values listed in the ID column have the structure [parent_group,
  child_group, ..., key], and can be used to index into the BaseBenchmarks
  suite to retrieve the corresponding benchmarks. The percentages accompanying
  time and memory values in the below table are noise tolerances. The "true"
  time/memory value for a given benchmark is expected to fall within this
  percentage of the reported value. An empty cell means that the value was
  zero.

                        ID           time GC time memory allocations
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
       ["sum(xs)", "base"]  9.003 Î¼s (5%)                           
  ["sum(xs)", "naive_sum"] 29.869 Î¼s (5%)                           

  Benchmark Group List
  ======================

  Here's a list of all the benchmark groups executed by this job:

    â€¢    ["sum(xs)"]

  Julia versioninfo
  ===================

  Julia Version 1.6.0-DEV.1300
  Commit f39cb43032 (2020-10-21 02:53 UTC)
  Platform Info:
    OS: Linux (x86_64-linux-gnu)
    uname: Linux 4.15.0-121-generic #123-Ubuntu SMP Mon Oct 5 16:16:40 UTC 2020 x86_64 x86_64
    CPU: AMD EPYC 7502 32-Core Processor: 
                    speed         user         nice          sys         idle          irq
         #1-128  2237 MHz   29478493 s    3398198 s    7242495 s  114649726 s          0 s
         
    Memory: 503.8203659057617 GB (281033.4609375 MB free)
    Uptime: 127244.0 sec
    Load Avg:  218.39  230.43  237.98
    WORD_SIZE: 64
    LIBM: libopenlibm
    LLVM: libLLVM-11.0.0 (ORCJIT, znver2)

  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  Runtime information
  â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡

  Runtime Info              
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  BLAS #threads   8         
  BLAS.vendor()   openblas64
  Sys.CPU_THREADS 128       

  lscpu output:

  Architecture:                    x86_64
  CPU op-mode(s):                  32-bit, 64-bit
  Byte Order:                      Little Endian
  Address sizes:                   43 bits physical, 48 bits virtual
  CPU(s):                          128
  On-line CPU(s) list:             0-127
  Thread(s) per core:              2
  Core(s) per socket:              32
  Socket(s):                       2
  NUMA node(s):                    2
  Vendor ID:                       AuthenticAMD
  CPU family:                      23
  Model:                           49
  Model name:                      AMD EPYC 7502 32-Core Processor
  Stepping:                        0
  Frequency boost:                 enabled
  CPU MHz:                         2874.108
  CPU max MHz:                     2500.0000
  CPU min MHz:                     1500.0000
  BogoMIPS:                        5000.03
  Virtualization:                  AMD-V
  L1d cache:                       2 MiB
  L1i cache:                       2 MiB
  L2 cache:                        32 MiB
  L3 cache:                        256 MiB
  NUMA node0 CPU(s):               0-31,64-95
  NUMA node1 CPU(s):               32-63,96-127
  Vulnerability Itlb multihit:     Not affected
  Vulnerability L1tf:              Not affected
  Vulnerability Mds:               Not affected
  Vulnerability Meltdown:          Not affected
  Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp
  Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Vulnerability Spectre v2:        Mitigation; Full AMD retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling
  Vulnerability Srbds:             Not affected
  Vulnerability Tsx async abort:   Not affected
  Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca

  Cpu Property       Value                                                     
  â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“ â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
  Brand              AMD EPYC 7502 32-Core Processor                           
  Vendor             :AMD                                                      
  Architecture       :Zen                                                      
  Model              Family: 0x8f, Model: 0x31, Stepping: 0x00, Type: 0x00     
  Cores              32 physical cores, 64 logical cores (on executing CPU)    
                     Hyperthreading detected                                   
  Clock Frequencies  Not supported by CPU                                      
  Data Cache         Level 1:3 : (32, 512, 16384) kbytes                       
                     64 byte cache line size                                   
  Address Size       48 bits virtual, 48 bits physical                         
  SIMD               256 bit = 32 byte max. SIMD vector size                   
  Time Stamp Counter TSC is accessible via rdtsc                               
                     TSC runs at constant rate (invariant from clock frequency)
  Perf. Monitoring   Performance Monitoring Counters (PMC) are not supported   
                     CPU supports AMD's Instruction Based Sampling (IBS)       
  Hypervisor         No                                                        


[ Info: Testing with `BenchmarkCI.judge(retune = true)`
Path `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl` exists and looks like the correct package. Using existing path.
   Resolving package versions...
Updating `/tmp/BenchmarkCI_jl_usFTzv/Project.toml`
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [32113eaa] + PkgBenchmark v0.2.10
Updating `/tmp/BenchmarkCI_jl_usFTzv/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [d70a8896] + BenchmarkCIExample v0.1.0 `/tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [69de0a69] + Parsers v1.0.11
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
[ Info: Using temporary project `/tmp/BenchmarkCI_jl_usFTzv`.
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_usFTzv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_usFTzv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_usFTzv/Manifest.toml`
PkgBenchmark: creating benchmark tuning file /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json...
(1/1) tuning "sum(xs)"...
  (1/2) tuning "base"...
  done (took 12.332832361 seconds)
  (2/2) tuning "naive_sum"...
  done (took 14.531259326 seconds)
done (took 30.98638496 seconds)
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 4.147831407 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 4.865580053 seconds)
done (took 15.677320791 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-target.json
PkgBenchmark: Running benchmarks...
  Activating environment at `/tmp/BenchmarkCI_jl_usFTzv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_usFTzv/Project.toml`
No Changes to `/tmp/BenchmarkCI_jl_usFTzv/Manifest.toml`
PkgBenchmark: creating benchmark tuning file /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl/benchmark/tune.json...
(1/1) tuning "sum(xs)"...
  (1/2) tuning "base"...
  done (took 10.028890314 seconds)
  (2/2) tuning "naive_sum"...
  done (took 9.372236259 seconds)
done (took 22.987218152 seconds)
(1/1) benchmarking "sum(xs)"...
  (1/2) benchmarking "base"...
  done (took 2.802888501 seconds)
  (2/2) benchmarking "naive_sum"...
  done (took 6.861613011 seconds)
done (took 12.278088661 seconds)
PkgBenchmark: benchmark results written to .benchmarkci/result-baseline.json
â”Œ Info: Finish running benchmarks.
â”‚ * Target: 2 minutes 1 seconds
â”” * Baseline: 1 minutes 32 seconds
Benchmarkjudgement (target / baseline):
    Package: /tmp/BenchmarkCI_jl_test_wfLAkw/BenchmarkCIExample.jl
    Dates: 21 Oct 2020 - 10:4 / 21 Oct 2020 - 10:5
    Package commits: 5e619c / b45747
    Julia commits: f39cb4 / f39cb4


Test Summary:       | Pass  Total
test_integration.jl |   88     88
                                                                               /*stdin*\            :  9.47%   (  1024 =>     97 bytes, /tmp/jl_3uyQkw/dest.tar.zst) 
Test Summary: | Pass  Total
test_misc.jl  |   21     21
Initialized empty Git repository in /tmp/jl_ALFayw/origin/.git/
Switched to a new branch 'somebranch'
[somebranch (root-commit) 5769012] First commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt
Switched to a new branch 'somebranch.0'
Cloning into '/tmp/jl_vJSFdw/repo'...
â”Œ Info: Committing uncommitted files.
â”‚   git status --short =
â”‚    ?? spam.txt
â””    

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'pkgeval@6895abbd0761.(none)')
updating: Error During Test at /home/pkgeval/.julia/packages/BenchmarkCI/jXf18/test/test_updating.jl:25
  Got exception outside of a @test
  failed process: Process(`git commit --allow-empty-message --message ''`, ProcessExited(128)) [128]
  
  Stacktrace:
    [1] pipeline_error
      @ ./process.jl:525 [inlined]
    [2] run(::Cmd; wait::Bool)
      @ Base ./process.jl:440
    [3] run(::Cmd)
      @ Base ./process.jl:438
    [4] (::BenchmarkCI.GitUtils.var"#7#14"{String, String})()
      @ BenchmarkCI.GitUtils ~/.julia/packages/BenchmarkCI/jXf18/src/gitutils.jl:55
    [5] cd(f::BenchmarkCI.GitUtils.var"#7#14"{String, String}, dir::String)
      @ Base.Filesystem ./file.jl:104
    [6] (::BenchmarkCI.GitUtils.var"#2#8"{Nothing, String, Main.TestBenchmarkCI.TestUpdating.var"#4#9", String, String})(tmpd::String)
      @ BenchmarkCI.GitUtils ~/.julia/packages/BenchmarkCI/jXf18/src/gitutils.jl:48
    [7] mktempdir(fn::BenchmarkCI.GitUtils.var"#2#8"{Nothing, String, Main.TestBenchmarkCI.TestUpdating.var"#4#9", String, String}, parent::String; prefix::String)
      @ Base.Filesystem ./file.jl:711
    [8] mktempdir
      @ ./file.jl:709 [inlined]
    [9] #updating#1
      @ ~/.julia/packages/BenchmarkCI/jXf18/src/gitutils.jl:16 [inlined]
   [10] updating
      @ ~/.julia/packages/BenchmarkCI/jXf18/src/gitutils.jl:16 [inlined]
   [11] (::Main.TestBenchmarkCI.TestUpdating.var"#3#8")(dir::String)
      @ Main.TestBenchmarkCI.TestUpdating ~/.julia/packages/BenchmarkCI/jXf18/test/test_updating.jl:32
   [12] mktempdir(fn::Main.TestBenchmarkCI.TestUpdating.var"#3#8", parent::String; prefix::String)
      @ Base.Filesystem ./file.jl:711
   [13] mktempdir(fn::Function, parent::String)
      @ Base.Filesystem ./file.jl:709
   [14] top-level scope
      @ ~/.julia/packages/BenchmarkCI/jXf18/test/test_updating.jl:26
   [15] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [16] top-level scope
      @ ~/.julia/packages/BenchmarkCI/jXf18/test/test_updating.jl:26
   [17] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [18] include(x::String)
      @ Main.TestBenchmarkCI ~/.julia/packages/BenchmarkCI/jXf18/test/runtests.jl:1
   [19] top-level scope
      @ ~/.julia/packages/BenchmarkCI/jXf18/test/runtests.jl:7
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ none:6
   [23] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [24] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [25] _start()
      @ Base ./client.jl:485
Initialized empty Git repository in /tmp/jl_v6ETOw/origin/.git/
Switched to a new branch 'somebranch'
[somebranch (root-commit) 3aa353a] First commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt
Switched to a new branch 'somebranch.0'
Cloning into '/tmp/jl_v6ETOw/workdir'...
Switched to branch 'somebranch'
[somebranch bbfbf4c] Add file-1
 1 file changed, 1 insertion(+)
 create mode 100644 file-1
Switched to branch 'somebranch.0'
[somebranch.0 9eeb80f] Add file-2
 1 file changed, 1 insertion(+)
 create mode 100644 file-2
To file:///tmp/jl_v6ETOw/origin
 ! [rejected]        HEAD -> somebranch (fetch first)
error: failed to push some refs to 'file:///tmp/jl_v6ETOw/origin'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
From file:///tmp/jl_v6ETOw/origin
 * branch            somebranch -> FETCH_HEAD
   3aa353a..bbfbf4c  somebranch -> origin/somebranch
Merge made by the 'recursive' strategy.
 file-1 | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 file-1
To file:///tmp/jl_v6ETOw/origin
   bbfbf4c..a3f02c3  HEAD -> somebranch
Test Summary:         | Pass  Error  Total
test_updating.jl      |    2      1      3
  updating            |           1      1
  prepare_ssh_command |    1             1
  _push_with_retry    |    1             1
ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/BenchmarkCI/jXf18/test/runtests.jl:1
ERROR: Package BenchmarkCI errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1650
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:31
