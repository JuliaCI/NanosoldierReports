Julia Version 1.6.0-DEV.1300
Commit f39cb43032 (2020-10-21 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

   Resolving package versions...
   Installed AbstractLattices â”€â”€â”€ v0.2.1
   Installed AbstractTensors â”€â”€â”€â”€ v0.6.3
   Installed ComputedFieldTypes â”€ v0.1.0
   Installed Leibniz â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed Combinatorics â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed DirectSum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.4
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Grassmann â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [4df31cd9] + Grassmann v0.7.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [398f06c4] + AbstractLattices v0.2.1
  [a8e43f4a] + AbstractTensors v0.6.3
  [861a8166] + Combinatorics v1.0.2
  [459fdd68] + ComputedFieldTypes v0.1.0
  [22fd7b30] + DirectSum v0.7.4
  [4df31cd9] + Grassmann v0.7.1
  [edad4870] + Leibniz v0.1.2
  [ae029012] + Requires v1.1.0
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mAbstractLattices[39m
[32m  âœ“ [39m[90mComputedFieldTypes[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mCombinatorics[39m
[32m  âœ“ [39m[90mAbstractTensors[39m
[32m  âœ“ [39m[90mLeibniz[39m
[32m  âœ“ [39m[90mDirectSum[39m
[91m  âœ— [39mGrassmann
7 dependencies successfully precompiled, 1 errored
     Testing Grassmann
Status `/tmp/jl_btM1eY/Project.toml`
  [a8e43f4a] AbstractTensors v0.6.3
  [459fdd68] ComputedFieldTypes v0.1.0
  [22fd7b30] DirectSum v0.7.4
  [4df31cd9] Grassmann v0.7.1
  [edad4870] Leibniz v0.1.2
  [ae029012] Requires v1.1.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_btM1eY/Manifest.toml`
  [398f06c4] AbstractLattices v0.2.1
  [a8e43f4a] AbstractTensors v0.6.3
  [861a8166] Combinatorics v1.0.2
  [459fdd68] ComputedFieldTypes v0.1.0
  [22fd7b30] DirectSum v0.7.4
  [4df31cd9] Grassmann v0.7.1
  [edad4870] Leibniz v0.1.2
  [ae029012] Requires v1.1.0
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
     Testing Running tests...
WARNING: Method definition ==(AbstractTensors.TensorTerm{V, G} where G where V, AbstractTensors.TensorTerm{V, G} where G where V) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:63 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition ==(AbstractTensors.TensorTerm{V, G} where V, T<:(Base.Complex{T} where T<:Real)) where {T<:(Base.Complex{T} where T<:Real), G} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:59 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition ==(AbstractTensors.TensorTerm{V, G} where V, T<:Real) where {T<:Real, G} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:59 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition ==(T<:(Base.Complex{T} where T<:Real), AbstractTensors.TensorTerm{V, G} where V) where {T<:(Base.Complex{T} where T<:Real), G} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:58 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition ==(T<:Real, AbstractTensors.TensorTerm{V, G} where V) where {T<:Real, G} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:58 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition zero(T<:(AbstractTensors.TensorGraded{V, G} where G where V)) where {T<:(AbstractTensors.TensorGraded{V, G} where G where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:82 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition ~(AbstractTensors.TensorAlgebra{V} where V) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:152 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition <=(T<:AbstractTensors.TensorTerm{V, 0}, Any) where {V, T<:AbstractTensors.TensorTerm{V, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:192 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition <=(T<:AbstractTensors.TensorTerm{V, 0}, S<:AbstractTensors.TensorTerm{W, 0}) where {V, W, T<:AbstractTensors.TensorTerm{V, 0}, S<:AbstractTensors.TensorTerm{W, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:191 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition <=(Any, T<:AbstractTensors.TensorTerm{V, 0}) where {V, T<:AbstractTensors.TensorTerm{V, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:193 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition union(A<:(AbstractTensors.Manifold{V} where V), B<:(AbstractTensors.Manifold{V} where V), C<:(AbstractTensors.Manifold{V} where V)...) where {A<:(AbstractTensors.Manifold{V} where V), B<:(AbstractTensors.Manifold{V} where V), C<:(AbstractTensors.Manifold{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/operations.jl:34 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition union(T<:(AbstractTensors.Manifold{V} where V)) where {T<:(AbstractTensors.Manifold{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/operations.jl:33 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isless(T<:AbstractTensors.TensorTerm{V, 0}, Any) where {V, T<:AbstractTensors.TensorTerm{V, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:189 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isless(T<:AbstractTensors.TensorTerm{V, 0}, S<:AbstractTensors.TensorTerm{W, 0}) where {V, W, T<:AbstractTensors.TensorTerm{V, 0}, S<:AbstractTensors.TensorTerm{W, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:188 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isless(Any, T<:AbstractTensors.TensorTerm{V, 0}) where {V, T<:AbstractTensors.TensorTerm{V, 0}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:190 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isfinite(T<:(AbstractTensors.TensorTerm{V, G} where G where V)) where {T<:(AbstractTensors.TensorTerm{V, G} where G where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:184 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:Real, T<:(AbstractTensors.TensorAlgebra{V} where V)) where {S<:Real, T<:(AbstractTensors.TensorAlgebra{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:68 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:Symbol, T<:(AbstractTensors.TensorAlgebra{V} where V)) where {S<:Symbol, T<:(AbstractTensors.TensorAlgebra{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:68 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:Expr, T<:(AbstractTensors.TensorAlgebra{V} where V)) where {S<:Expr, T<:(AbstractTensors.TensorAlgebra{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:68 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Expr) where {S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Expr} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:67 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Symbol) where {S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Symbol} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:67 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:(AbstractTensors.TensorAlgebra{V} where V), T<:(Base.Complex{T} where T<:Real)) where {S<:(AbstractTensors.TensorAlgebra{V} where V), T<:(Base.Complex{T} where T<:Real)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:67 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Real) where {S<:(AbstractTensors.TensorAlgebra{V} where V), T<:Real} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:67 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition isapprox(S<:(Base.Complex{T} where T<:Real), T<:(AbstractTensors.TensorAlgebra{V} where V)) where {S<:(Base.Complex{T} where T<:Real), T<:(AbstractTensors.TensorAlgebra{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:68 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition real(T<:AbstractTensors.TensorGraded{V, G}) where {V, G, T<:AbstractTensors.TensorGraded{V, G}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:182 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition imag(T<:AbstractTensors.TensorGraded{V, G}) where {V, G, T<:AbstractTensors.TensorGraded{V, G}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:175 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition intersect(A<:(AbstractTensors.Manifold{V} where V), B<:(AbstractTensors.Manifold{V} where V), C<:(AbstractTensors.Manifold{V} where V)...) where {A<:(AbstractTensors.Manifold{V} where V), B<:(AbstractTensors.Manifold{V} where V), C<:(AbstractTensors.Manifold{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/operations.jl:37 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition intersect(T<:(AbstractTensors.Manifold{V} where V)) where {T<:(AbstractTensors.Manifold{V} where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/operations.jl:36 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition one(T<:(AbstractTensors.TensorGraded{V, G} where G where V)) where {T<:(AbstractTensors.TensorGraded{V, G} where G where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/Leibniz.jl:81 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition reflectorApply!(AbstractArray{T, 1} where T, AbstractTensors.TensorAlgebra{V} where V, Union{DenseArray{T, 2}, Base.ReinterpretArray{T, 2, S, A, IsReshaped} where S where IsReshaped where A<:Union{Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T}, Base.ReshapedArray{T, 2, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where S where IsReshaped where A<:Union{Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T} where N where T, Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T}, Base.SubArray{T, 2, A, I, L} where L where I<:Tuple{Vararg{Union{Int64, Base.AbstractRange{Int64}, Base.AbstractCartesianIndex{N} where N, Base.ReshapedArray{T, N, A, Tuple{}} where A<:(Base.AbstractUnitRange{T} where T) where N where T}, N} where N} where A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where S where IsReshaped where A<:Union{Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where S where IsReshaped where A<:Union{Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T} where N where T, Base.SubArray{T, N, A, I, true} where I<:Union{Tuple{Vararg{Real, N} where N}, Tuple{Base.AbstractUnitRange{T} where T, Vararg{Any, N} where N}} where A<:(DenseArray{T, N} where N where T) where N where T, DenseArray{T, N} where N where T} where N where T, DenseArray{T, N} where N where T}} where T) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/operations.jl:142 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition odd(T<:AbstractTensors.TensorGraded{V, G}) where {V, G, T<:AbstractTensors.TensorGraded{V, G}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:167 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition norm(AbstractTensors.Values{N, Any} where N) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/utilities.jl:17 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition even(T<:AbstractTensors.TensorGraded{V, G}) where {V, G, T<:AbstractTensors.TensorGraded{V, G}} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:168 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition -(AbstractTensors.Values{N, Any} where N) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/utilities.jl:16 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition -(AbstractTensors.Values{N, T} where T where N) in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/utilities.jl:15 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition (::Type{UInt64})(T<:(AbstractTensors.TensorTerm{V, G} where G where V)) where {T<:(AbstractTensors.TensorTerm{V, G} where G where V)} in module Leibniz at /home/pkgeval/.julia/packages/Leibniz/3rIKg/src/generic.jl:41 overwritten in module Leibniz on the same line (check for duplicate calls to `include`).
  ** incremental compilation may be fatally broken for this module **

â”Œ Warning: Replacing module `Leibniz`
â”” @ Base loading.jl:949
WARNING: using Leibniz.norm in module Grassmann conflicts with an existing identifier.
WARNING: using Leibniz.Leibniz in module Grassmann conflicts with an existing identifier.
WARNING: both Leibniz and Leibniz export "Derivation"; uses of it in module Grassmann must be qualified
ERROR: LoadError: UndefVarError: Derivation not defined
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Grassmann/phhme/src/Grassmann.jl:57
 [2] eval(m::Module, e::Any)
   @ Core ./boot.jl:360
 [3] top-level scope
   @ ~/.julia/packages/Grassmann/phhme/src/Grassmann.jl:56
 [4] include
   @ ./Base.jl:389 [inlined]
 [5] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
   @ Base ./loading.jl:1225
 [6] top-level scope
   @ none:1
 [7] eval
   @ ./boot.jl:360 [inlined]
 [8] eval(x::Expr)
   @ Base.MainInclude ./client.jl:446
 [9] top-level scope
   @ none:1
in expression starting at /home/pkgeval/.julia/packages/Grassmann/phhme/src/Grassmann.jl:1
ERROR: LoadError: Failed to precompile Grassmann [4df31cd9-4c27-5bea-88d0-e6a7146666d8] to /home/pkgeval/.julia/compiled/v1.6/Grassmann/i5fGo_gYDmE.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
   @ Base ./loading.jl:1360
 [3] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1313
 [4] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1033
 [5] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:926
 [6] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:913
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [8] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/Grassmann/phhme/test/runtests.jl:1
ERROR: Package Grassmann errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1650
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:31
