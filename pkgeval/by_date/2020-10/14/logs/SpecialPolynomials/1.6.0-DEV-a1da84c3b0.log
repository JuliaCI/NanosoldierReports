Julia Version 1.6.0-DEV.1210
Commit a1da84c3b0 (2020-10-13 13:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10+0
  Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
  Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.20.0
  Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.5
  Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
  Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.10
  Installed DSP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.8
  Installed SpecialPolynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.1
  Installed FFTW_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.3.9+5
  Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+6
  Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
  Installed GMP_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.2.0+2
  Installed IntelOpenMP_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2018.0.3+0
  Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
  Installed Intervals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.2
  Installed FastTransforms_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3+0
  Installed FastTransforms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.4
  Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed DualNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
  Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
  Installed HypergeometricFunctions â”€â”€â”€â”€â”€â”€ v0.2.3
  Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.9
  Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
  Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
  Installed MPFR_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.1.0+1
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.4.1
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.7
  Installed FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.4
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed ArrayLayouts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.8
  Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
  Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
  Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+17
  Installed Memoize â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
  Installed ToeplitzMatrices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
  Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+2
  Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.14
  Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
  Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.33.2
  Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
  Installed MKL_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2020.2.254+0
  Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [a25cea48] + SpecialPolynomials v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4c555306] + ArrayLayouts v0.3.8
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [34da2185] + Compat v3.20.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.8
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.7
  [fa6b7ba4] + DualNumbers v0.6.2
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.4
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.3
  [057dd010] + FastTransforms v0.9.4
  [34b6f7d7] + FastTransforms_jll v0.3.3+0
  [1a297f60] + FillArrays v0.8.14
  [781609d7] + GMP_jll v6.2.0+2
  [34004b35] + HypergeometricFunctions v0.2.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [d8418881] + Intervals v1.4.2
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.1.2
  [94ce4f54] + Libiconv_jll v1.16.0+6
  [856f044c] + MKL_jll v2020.2.254+0
  [3a97d323] + MPFR_jll v4.1.0+1
  [1914dd2f] + MacroTools v0.5.5
  [c03570c3] + Memoize v0.4.3
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [f27b6e38] + Polynomials v1.1.9
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [a25cea48] + SpecialPolynomials v0.1.1
  [2913bbd2] + StatsBase v0.33.2
  [f269a46b] + TimeZones v1.4.0
  [c751599d] + ToeplitzMatrices v0.6.2
  [02c8fc9c] + XML2_jll v2.9.10+2
  [83775a58] + Zlib_jll v1.2.11+17
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/8b7c16b56936047ca41bf25effa137ae0b381ae8/build.log`
   Building TimeZones â”€â”€â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
   Building FastTransforms â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/4e7a982af719a5ef8e099e4fe4d40d5758c5426f/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mReexport[39m
[90m[32m  âœ“ [39mNaNMath[39m
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mAbstractFFTs[39m
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mOffsetArrays[39m
[90m[32m  âœ“ [39mIterTools[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mCompat[39m
[90m[32m  âœ“ [39mCalculus[39m
[90m[32m  âœ“ [39mFillArrays[39m
[90m[32m  âœ“ [39mGMP_jll[39m
[90m[32m  âœ“ [39mIntelOpenMP_jll[39m
[90m[32m  âœ“ [39mLibiconv_jll[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mFFTW_jll[39m
[90m[32m  âœ“ [39mZlib_jll[39m
[90m[32m  âœ“ [39mMPFR_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mMKL_jll[39m
[90m[32m  âœ“ [39mOpenBLAS_jll[39m
[90m[32m  âœ“ [39mMacroTools[39m
[90m[32m  âœ“ [39mXML2_jll[39m
[90m[32m  âœ“ [39mArrayLayouts[39m
[90m[32m  âœ“ [39mFFTW[39m
[90m[32m  âœ“ [39mMemoize[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mEzXML[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mFastTransforms_jll[39m
[90m[32m  âœ“ [39mQuadGK[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mStatsBase[39m
[90m[32m  âœ“ [39mDualNumbers[39m
[90m[32m  âœ“ [39mTimeZones[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[90m[32m  âœ“ [39mToeplitzMatrices[39m
[90m[32m  âœ“ [39mHypergeometricFunctions[39m
[90m[32m  âœ“ [39mIntervals[39m
[90m[32m  âœ“ [39mPolynomials[39m
[90m[32m  âœ“ [39mDSP[39m
[90m[32m  âœ“ [39mFastTransforms[39m
[32m  âœ“ [39mSpecialPolynomials
44 dependencies successfully precompiled (4 already precompiled)

    Testing SpecialPolynomials
Status `/tmp/jl_aUfck0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [057dd010] FastTransforms v0.9.4
  [34004b35] HypergeometricFunctions v0.2.3
  [c03570c3] Memoize v0.4.3
  [f27b6e38] Polynomials v1.1.9
  [1fd47b50] QuadGK v2.4.1
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_aUfck0/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4c555306] ArrayLayouts v0.3.8
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [34da2185] Compat v3.20.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.8
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.7
  [fa6b7ba4] DualNumbers v0.6.2
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.3
  [057dd010] FastTransforms v0.9.4
  [34b6f7d7] FastTransforms_jll v0.3.3+0
  [1a297f60] FillArrays v0.8.14
  [781609d7] GMP_jll v6.2.0+2
  [34004b35] HypergeometricFunctions v0.2.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.4.2
  [c8e1da08] IterTools v1.3.0
  [692b3bcd] JLLWrappers v1.1.2
  [94ce4f54] Libiconv_jll v1.16.0+6
  [856f044c] MKL_jll v2020.2.254+0
  [3a97d323] MPFR_jll v4.1.0+1
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [f27b6e38] Polynomials v1.1.9
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [2913bbd2] StatsBase v0.33.2
  [f269a46b] TimeZones v1.4.0
  [c751599d] ToeplitzMatrices v0.6.2
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+17
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain(#unused#::Type{Chebyshev}) at Chebyshev.jl:40
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain(#unused#::Type{Jacobi{0.5, 0.5, T, N} where N where T}) at Jacobi.jl:31
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain(#unused#::Type{Jacobi{0.25, 0.75, T, N} where N where T}) at Jacobi.jl:31
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain(#unused#::Type{Jacobi{-0.5, 0.5, T, N} where N where T}) at Jacobi.jl:31
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain(#unused#::Type{Jacobi{0.5, -0.5, T, N} where N where T}) at Jacobi.jl:31
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 3}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 4}, g::Chebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 4}, g::Chebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 4}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 4}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 5}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64, 5}, g::Chebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 5}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 5}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 3}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 4}, g::ChebyshevU{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 4}, g::ChebyshevU{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 4}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 4}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 5}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64, 5}, g::ChebyshevU{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 3}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 4}, g::Jacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 4}, g::Jacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 4}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 4}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 5}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::Jacobi{0.5, 0.5, Float64, 5}, g::Jacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 3}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 4}, g::Jacobi{0.25, 0.75, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 4}, g::Jacobi{0.25, 0.75, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 4}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 4}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 5}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::Jacobi{0.25, 0.75, Float64, 5}, g::Jacobi{0.25, 0.75, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 3}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 4}, g::Jacobi{-0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 4}, g::Jacobi{-0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 4}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 4}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 5}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::Jacobi{-0.5, 0.5, Float64, 5}, g::Jacobi{-0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 3}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 4}, g::Jacobi{0.5, -0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 4}, g::Jacobi{0.5, -0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 4}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 4}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 5}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::Jacobi{0.5, -0.5, Float64, 5}, g::Jacobi{0.5, -0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 5}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 5}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 3}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 4}, g::Legendre{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 4}, g::Legendre{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 4}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 4}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 5}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64, 5}, g::Legendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 5}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 5}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 3}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 4}, g::Gegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 4}, g::Gegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 4}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 4}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 5}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::Gegenbauer{0.5, Float64, 5}, g::Gegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 5}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 5}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(âŸ’))(), Tuple), world=0x000000000000106a)
jl_method_error_bare at /buildworker/worker/package_linux64/build/src/gf.c:1767
jl_method_error at /buildworker/worker/package_linux64/build/src/gf.c:1785
jl_lookup_generic_ at /buildworker/worker/package_linux64/build/src/gf.c:2354 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2369
apply_type_tfunc at ./compiler/tfuncs.jl:1162
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:672
builtin_tfunction at ./compiler/tfuncs.jl:1503
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_13164.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1386
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1442
_typeinf at ./compiler/typeinfer.jl:205
typeinf at ./compiler/typeinfer.jl:200
typeinf_edge at ./compiler/typeinfer.jl:734
abstract_call_method at ./compiler/abstractinterpretation.jl:466
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:130
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1386
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1442
_typeinf at ./compiler/typeinfer.jl:205
typeinf at ./compiler/typeinfer.jl:200
typeinf_ext at ./compiler/typeinfer.jl:824
typeinf_ext_toplevel at ./compiler/typeinfer.jl:857
typeinf_ext_toplevel at ./compiler/typeinfer.jl:853
jfptr_typeinf_ext_toplevel_11847.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
jl_type_infer at /buildworker/worker/package_linux64/build/src/gf.c:300
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:316
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1924
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
ComposedFunction at ./operators.jl:918
unknown function (ip: 0x7f248d4fec71)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:351 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:879
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:827
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:922
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:879
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:827
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:922
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:879
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:827
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:922
eval at ./boot.jl:360
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_21281.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1690 [inlined]
true_main at /buildworker/worker/package_linux64/build/src/jlapi.c:553
repl_entrypoint at /buildworker/worker/package_linux64/build/src/jlapi.c:672
main at /buildworker/worker/package_linux64/build/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 1}, g::OrthonormalChebyshev{Float64, 1}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 1}, g::OrthonormalChebyshev{Float64, 1}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 2}, g::OrthonormalChebyshev{Float64, 2}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 2}, g::OrthonormalChebyshev{Float64, 2}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 3}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 3}, g::OrthonormalChebyshev{Float64, 3}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 4}, g::OrthonormalChebyshev{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 5}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 5}, g::OrthonormalChebyshev{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 6}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 6}, g::OrthonormalChebyshev{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 7}, g::OrthonormalChebyshev{Float64, 7}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 7}, g::OrthonormalChebyshev{Float64, 7}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 8}, g::OrthonormalChebyshev{Float64, 8}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 8}, g::OrthonormalChebyshev{Float64, 8}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 9}, g::OrthonormalChebyshev{Float64, 9}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 9}, g::OrthonormalChebyshev{Float64, 9}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 10}, g::OrthonormalChebyshev{Float64, 10}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 10}, g::OrthonormalChebyshev{Float64, 10}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 11}, g::OrthonormalChebyshev{Float64, 11}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64, 11}, g::OrthonormalChebyshev{Float64, 11}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 1}, g::OrthonormalJacobi{0.5, 0.5, Float64, 1}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 1}, g::OrthonormalJacobi{0.5, 0.5, Float64, 1}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 2}, g::OrthonormalJacobi{0.5, 0.5, Float64, 2}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 2}, g::OrthonormalJacobi{0.5, 0.5, Float64, 2}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 3}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 3}, g::OrthonormalJacobi{0.5, 0.5, Float64, 3}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 4}, g::OrthonormalJacobi{0.5, 0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 5}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 5}, g::OrthonormalJacobi{0.5, 0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 6}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 6}, g::OrthonormalJacobi{0.5, 0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 7}, g::OrthonormalJacobi{0.5, 0.5, Float64, 7}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 7}, g::OrthonormalJacobi{0.5, 0.5, Float64, 7}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 8}, g::OrthonormalJacobi{0.5, 0.5, Float64, 8}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 8}, g::OrthonormalJacobi{0.5, 0.5, Float64, 8}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 9}, g::OrthonormalJacobi{0.5, 0.5, Float64, 9}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 9}, g::OrthonormalJacobi{0.5, 0.5, Float64, 9}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 10}, g::OrthonormalJacobi{0.5, 0.5, Float64, 10}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 10}, g::OrthonormalJacobi{0.5, 0.5, Float64, 10}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 11}, g::OrthonormalJacobi{0.5, 0.5, Float64, 11}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::OrthonormalJacobi{0.5, 0.5, Float64, 11}, g::OrthonormalJacobi{0.5, 0.5, Float64, 11}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 1}, g::OrthonormalLegendre{Float64, 1}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 1}, g::OrthonormalLegendre{Float64, 1}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 2}, g::OrthonormalLegendre{Float64, 2}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 2}, g::OrthonormalLegendre{Float64, 2}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 3}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 3}, g::OrthonormalLegendre{Float64, 3}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 4}, g::OrthonormalLegendre{Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 5}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 5}, g::OrthonormalLegendre{Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 6}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 6}, g::OrthonormalLegendre{Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 7}, g::OrthonormalLegendre{Float64, 7}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 7}, g::OrthonormalLegendre{Float64, 7}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 8}, g::OrthonormalLegendre{Float64, 8}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 8}, g::OrthonormalLegendre{Float64, 8}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 9}, g::OrthonormalLegendre{Float64, 9}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 9}, g::OrthonormalLegendre{Float64, 9}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 10}, g::OrthonormalLegendre{Float64, 10}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 10}, g::OrthonormalLegendre{Float64, 10}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 11}, g::OrthonormalLegendre{Float64, 11}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64, 11}, g::OrthonormalLegendre{Float64, 11}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 1}, g::OrthonormalGegenbauer{0.5, Float64, 1}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 1}, g::OrthonormalGegenbauer{0.5, Float64, 1}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 2}, g::OrthonormalGegenbauer{0.5, Float64, 2}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 2}, g::OrthonormalGegenbauer{0.5, Float64, 2}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 3}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 3}, g::OrthonormalGegenbauer{0.5, Float64, 3}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 4}, g::OrthonormalGegenbauer{0.5, Float64, 4}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 5}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 5}, g::OrthonormalGegenbauer{0.5, Float64, 5}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 6}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 6}, g::OrthonormalGegenbauer{0.5, Float64, 6}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 7}, g::OrthonormalGegenbauer{0.5, Float64, 7}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 7}, g::OrthonormalGegenbauer{0.5, Float64, 7}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 8}, g::OrthonormalGegenbauer{0.5, Float64, 8}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 8}, g::OrthonormalGegenbauer{0.5, Float64, 8}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 9}, g::OrthonormalGegenbauer{0.5, Float64, 9}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 9}, g::OrthonormalGegenbauer{0.5, Float64, 9}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 10}, g::OrthonormalGegenbauer{0.5, Float64, 10}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 10}, g::OrthonormalGegenbauer{0.5, Float64, 10}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 11}, g::OrthonormalGegenbauer{0.5, Float64, 11}; atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::OrthonormalGegenbauer{0.5, Float64, 11}, g::OrthonormalGegenbauer{0.5, Float64, 11}; atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Chebyshev.jl:40 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.25, 0.75, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{-0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Jacobi{0.5, -0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
â”‚   caller = domain at Jacobi.jl:31 [inlined]
â”” @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalJacobi{0.5, 0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalLegendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{Gegenbauer{0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
â”Œ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
â”‚   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5, T, N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
â”” @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
Test Summary: | Pass  Total
Orthogonal    | 6268   6268
Test Summary:                  | Pass  Total
Orthogonal compare with tables |  649    649
Test Summary: | Pass  Total
Lagrange      |   15     15
Test Summary: | Pass  Total
Newton        |   11     11
Test Summary: | Pass  Total
Bernstein     |  168    168
    Testing SpecialPolynomials tests passed 
