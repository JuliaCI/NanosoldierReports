Julia Version 1.6.0-DEV.1210
Commit a1da84c3b0 (2020-10-13 13:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_BifZVW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_BifZVW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.210702 seconds (289.21 k allocations: 13.535 MiB, 91.30% compilation time)
Running: chebyshev_quadrature with k=1
  2.174931 seconds (2.19 M allocations: 126.545 MiB, 3.68% gc time, 97.66% compilation time)
Running: chebyshev_quadrature with k=2
  0.320680 seconds (409.38 k allocations: 23.560 MiB, 88.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.449860 seconds (473.75 k allocations: 26.615 MiB, 10.17% gc time, 92.68% compilation time)
Running: chebyshev_quadrature with k=4
  0.659411 seconds (418.56 k allocations: 23.256 MiB, 96.59% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 39.944401 seconds (34.87 M allocations: 2.927 GiB, 14.06% gc time, 83.12% compilation time)
Running: laguerre_quadrature with k=1
  2.486484 seconds (3.17 M allocations: 177.061 MiB, 1.91% gc time, 99.88% compilation time)
Running: legendre_quadrature
  0.138345 seconds (206.25 k allocations: 11.844 MiB, 99.00% compilation time)
Running: lobatto_quadrature
  0.237805 seconds (329.68 k allocations: 19.902 MiB, 99.13% compilation time)
Running: radau_quadrature
  0.280585 seconds (447.64 k allocations: 27.309 MiB, 11.60% gc time, 99.36% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 38.664722 seconds (100.02 M allocations: 1.491 GiB, 0.80% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.061103 seconds (172.46 k allocations: 3.827 MiB, 26.74% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 38.788060 seconds (100.02 M allocations: 1.491 GiB, 0.66% gc time, 0.06% compilation time)
Running: rombergs_method
  0.309024 seconds (723.24 k allocations: 41.758 MiB, 99.37% compilation time)
Running: simpsons_rule
  0.042385 seconds (46.55 k allocations: 2.532 MiB, 46.64% gc time, 94.95% compilation time)
Running: simpsons38_rule
  0.041135 seconds (108.59 k allocations: 5.759 MiB, 96.91% compilation time)
Running: trapezoidal_rule
  0.266885 seconds (1.72 M allocations: 28.609 MiB, 12.22% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.039552 seconds (29.80 k allocations: 1.767 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.282987 seconds (290.33 k allocations: 15.352 MiB, 99.60% compilation time)
Running: chebyshev_quadrature with k=2
  0.098197 seconds (93.80 k allocations: 2.675 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.167183 seconds (82.06 k allocations: 2.476 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=4
  0.116616 seconds (64.67 k allocations: 2.122 MiB, 98.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.777170 seconds (504.28 k allocations: 161.851 MiB, 8.98% gc time, 14.74% compilation time)
Running: legendre_quadrature
  0.108610 seconds (41.30 k allocations: 2.381 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.011296 seconds (15.69 k allocations: 1000.544 KiB, 98.96% compilation time)
Running: radau_quadrature
  0.010964 seconds (15.80 k allocations: 1007.759 KiB, 99.09% compilation time)
Running: rectangle_rule_left
 11.956671 seconds (471.41 M allocations: 7.025 GiB, 9.28% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.788951 seconds (476.96 M allocations: 7.107 GiB, 9.02% gc time)
Running: rombergs_method
  0.196635 seconds (326.63 k allocations: 18.536 MiB, 4.32% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000015 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.030685 seconds (18.91 k allocations: 1.146 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.029943 seconds (16.49 k allocations: 1.001 MiB, 99.70% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.015216 seconds (1.03 k allocations: 34.125 KiB, 99.27% compilation time)
Running: chebyshev_quadrature with k=1
  0.071886 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.067326 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.063633 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.065573 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.160454 seconds (364.10 k allocations: 19.000 MiB, 99.12% compilation time)
Running: legendre_quadrature
  0.042073 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000028 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000178 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000125 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000176 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.044950 seconds (1.04 k allocations: 56.531 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000014 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.013004 seconds (923 allocations: 39.281 KiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.009930 seconds (44.29 k allocations: 702.859 KiB, 89.73% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.025655 seconds (80.91 k allocations: 4.823 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.094263 seconds (230.61 k allocations: 12.982 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.114671 seconds (283.17 k allocations: 15.880 MiB, 11.12% gc time, 87.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.094538 seconds (234.76 k allocations: 13.158 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.092231 seconds (234.76 k allocations: 13.049 MiB, 98.63% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.204424 seconds (447.19 k allocations: 163.211 MiB, 2.86% gc time, 29.30% compilation time)
Running: legendre_quadrature
  0.093983 seconds (185.44 k allocations: 10.707 MiB, 98.53% compilation time)
Running: lobatto_quadrature
  0.105996 seconds (196.77 k allocations: 11.418 MiB, 98.50% compilation time)
Running: radau_quadrature
  0.092872 seconds (196.76 k allocations: 11.419 MiB, 98.25% compilation time)
Running: rectangle_rule_left
  0.422617 seconds (18.82 k allocations: 1.147 MiB, 3.32% compilation time)
Running: rectangle_rule_midpoint
  0.018356 seconds (24.67 k allocations: 1.555 MiB, 99.22% compilation time)
Running: rectangle_rule_right
  0.429515 seconds (17.39 k allocations: 1.062 MiB, 4.96% compilation time)
Running: rombergs_method
  0.065538 seconds (134.27 k allocations: 7.778 MiB, 97.46% compilation time)
Running: simpsons_rule
  0.015054 seconds (36.49 k allocations: 2.341 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.015870 seconds (42.37 k allocations: 2.678 MiB, 99.37% compilation time)
Running: trapezoidal_rule
  0.010318 seconds (42.32 k allocations: 1.671 MiB, 96.55% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.032644 seconds (66.94 k allocations: 2.959 MiB, 47.36% gc time, 98.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.098697 seconds (237.20 k allocations: 13.036 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.099023 seconds (290.20 k allocations: 15.887 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.096268 seconds (241.34 k allocations: 13.181 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=4
  0.105779 seconds (241.34 k allocations: 13.123 MiB, 98.54% compilation time)
Running: hermite_quadrature with k=2
  8.084004 seconds (20.10 M allocations: 1.056 GiB, 10.45% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.352479 seconds (456.36 k allocations: 49.417 MiB, 8.68% gc time, 92.10% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.126606 seconds (276.26 k allocations: 15.248 MiB, 97.68% compilation time)
Running: legendre_quadrature
  0.108773 seconds (191.98 k allocations: 11.035 MiB, 97.99% compilation time)
Running: lobatto_quadrature
  0.150057 seconds (217.42 k allocations: 37.193 MiB, 16.79% gc time, 68.34% compilation time)
Running: radau_quadrature
  0.137818 seconds (214.01 k allocations: 29.880 MiB, 13.28% gc time, 90.10% compilation time)
Running: rectangle_rule_left
  0.022194 seconds (21.73 k allocations: 1.293 MiB, 99.44% compilation time)
Running: rectangle_rule_midpoint
  0.020331 seconds (26.47 k allocations: 1.642 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.019509 seconds (18.50 k allocations: 1.117 MiB, 99.37% compilation time)
Running: rombergs_method
  0.088436 seconds (136.74 k allocations: 7.803 MiB, 97.54% compilation time)
Running: simpsons_rule
  0.021527 seconds (43.97 k allocations: 2.609 MiB, 98.96% compilation time)
Running: simpsons38_rule
  0.022734 seconds (57.34 k allocations: 3.063 MiB, 98.40% compilation time)
Running: trapezoidal_rule
  0.022964 seconds (28.35 k allocations: 1.595 MiB, 98.75% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.028531 seconds (50.91 k allocations: 2.619 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=1
  0.193285 seconds (232.72 k allocations: 12.830 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.213373 seconds (285.38 k allocations: 15.643 MiB, 12.23% gc time, 98.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.164979 seconds (236.87 k allocations: 12.928 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.158768 seconds (236.87 k allocations: 12.929 MiB, 98.44% compilation time)
Running: hermite_quadrature with k=2
  0.149206 seconds (170.79 k allocations: 9.852 MiB, 98.52% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.615526 seconds (449.62 k allocations: 1.175 GiB, 14.35% gc time, 3.01% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.114275 seconds (271.55 k allocations: 15.060 MiB, 97.56% compilation time)
Running: legendre_quadrature
  0.115904 seconds (187.55 k allocations: 10.818 MiB, 8.97% gc time, 98.47% compilation time)
Running: lobatto_quadrature
  0.143006 seconds (208.19 k allocations: 22.927 MiB, 92.66% compilation time)
Running: radau_quadrature
  0.147746 seconds (207.34 k allocations: 20.852 MiB, 92.59% compilation time)
Running: rectangle_rule_left
  0.013060 seconds (19.52 k allocations: 1.188 MiB, 99.30% compilation time)
Running: rectangle_rule_midpoint
  0.013181 seconds (25.36 k allocations: 1.591 MiB, 99.24% compilation time)
Running: rectangle_rule_right
  0.012351 seconds (17.36 k allocations: 1.062 MiB, 99.14% compilation time)
Running: rombergs_method
  0.086062 seconds (132.58 k allocations: 7.622 MiB, 97.84% compilation time)
Running: simpsons_rule
  0.015357 seconds (39.30 k allocations: 2.442 MiB, 99.06% compilation time)
Running: simpsons38_rule
  0.025833 seconds (48.16 k allocations: 2.821 MiB, 99.16% compilation time)
Running: trapezoidal_rule
  0.026402 seconds (23.26 k allocations: 1.433 MiB, 99.32% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.012634 seconds (39.05 k allocations: 2.475 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.167638 seconds (231.10 k allocations: 13.042 MiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=2
  0.130288 seconds (283.67 k allocations: 15.996 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.111643 seconds (235.25 k allocations: 13.141 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=4
  0.173497 seconds (235.25 k allocations: 12.976 MiB, 98.79% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.447394 seconds (447.72 k allocations: 194.256 MiB, 7.41% gc time, 19.69% compilation time)
Running: legendre_quadrature
  0.081515 seconds (185.93 k allocations: 10.732 MiB, 97.69% compilation time)
Running: lobatto_quadrature
  0.113780 seconds (197.26 k allocations: 11.448 MiB, 9.24% gc time, 98.18% compilation time)
Running: radau_quadrature
  0.094101 seconds (197.26 k allocations: 11.445 MiB, 98.16% compilation time)
Running: rectangle_rule_left
  0.299570 seconds (19.34 k allocations: 1.173 MiB, 6.05% compilation time)
Running: rectangle_rule_midpoint
  0.035228 seconds (25.01 k allocations: 1.573 MiB, 99.67% compilation time)
Running: rectangle_rule_right
  0.136165 seconds (17.73 k allocations: 1.081 MiB, 11.17% compilation time)
Running: rombergs_method
  0.097347 seconds (145.03 k allocations: 8.489 MiB, 97.50% compilation time)
Running: simpsons_rule
  0.014379 seconds (37.11 k allocations: 2.369 MiB, 98.85% compilation time)
Running: simpsons38_rule
  0.027626 seconds (43.08 k allocations: 2.709 MiB, 99.27% compilation time)
Running: trapezoidal_rule
  0.019928 seconds (43.25 k allocations: 1.703 MiB, 97.05% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014678 seconds (38.85 k allocations: 2.409 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=1
  0.142372 seconds (231.69 k allocations: 12.988 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.162528 seconds (284.30 k allocations: 15.895 MiB, 14.81% gc time, 98.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.119485 seconds (235.84 k allocations: 13.067 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.113621 seconds (235.84 k allocations: 13.143 MiB, 97.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.906993 seconds (448.43 k allocations: 148.940 MiB, 8.22% gc time, 34.00% compilation time)
Running: legendre_quadrature
  0.096836 seconds (186.53 k allocations: 10.750 MiB, 97.80% compilation time)
Running: lobatto_quadrature
  0.156840 seconds (197.86 k allocations: 11.468 MiB, 11.73% gc time, 98.39% compilation time)
Running: radau_quadrature
  0.138940 seconds (197.85 k allocations: 11.462 MiB, 98.20% compilation time)
Running: rectangle_rule_left
  0.560487 seconds (19.59 k allocations: 1.186 MiB, 4.08% compilation time)
Running: rectangle_rule_midpoint
  0.014811 seconds (25.01 k allocations: 1.574 MiB, 98.78% compilation time)
Running: rectangle_rule_right
  0.655625 seconds (17.69 k allocations: 1.078 MiB, 3.13% compilation time)
Running: rombergs_method
  0.092012 seconds (135.49 k allocations: 7.878 MiB, 96.77% compilation time)
Running: simpsons_rule
  0.021831 seconds (37.60 k allocations: 2.390 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.019222 seconds (43.78 k allocations: 2.734 MiB, 99.06% compilation time)
Running: trapezoidal_rule
  0.026604 seconds (55.40 k allocations: 1.899 MiB, 96.41% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.072724 seconds (147.46 k allocations: 8.795 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.083980 seconds (69.93 k allocations: 2.205 MiB, 98.17% compilation time)
Running: chebyshev_quadrature with k=2
  0.133644 seconds (105.09 k allocations: 2.868 MiB, 96.82% compilation time)
Running: chebyshev_quadrature with k=3
  0.124009 seconds (92.57 k allocations: 2.654 MiB, 98.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.111333 seconds (72.10 k allocations: 2.248 MiB, 98.37% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.237857 seconds (480.57 k allocations: 167.807 MiB, 7.67% gc time, 29.66% compilation time)
Running: legendre_quadrature
  0.081201 seconds (18.73 k allocations: 1.094 MiB, 99.68% compilation time)
Running: lobatto_quadrature
  0.000070 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000024 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.335259 seconds (590.00 M allocations: 8.792 GiB, 8.12% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 18.965874 seconds (592.75 M allocations: 8.833 GiB, 7.72% gc time)
Running: rombergs_method
  0.107034 seconds (20.51 k allocations: 1.165 MiB, 99.47% compilation time)
Running: simpsons_rule
  0.000037 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.036408 seconds (463 allocations: 22.578 KiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.015147 seconds (171 allocations: 7.859 KiB, 99.31% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.386987 seconds (209.93 M allocations: 3.138 GiB, 2.34% gc time, 0.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.388814 seconds (414.15 k allocations: 22.965 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=2
 17.149135 seconds (468.79 k allocations: 4.040 GiB, 2.66% gc time, 2.32% compilation time)
Running: chebyshev_quadrature with k=3
  8.159041 seconds (249.12 k allocations: 1.642 GiB, 3.90% gc time, 1.87% compilation time)
Running: chebyshev_quadrature with k=4
 11.077315 seconds (249.12 k allocations: 2.260 GiB, 2.32% gc time, 1.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 35.330848 seconds (484.64 k allocations: 13.254 GiB, 6.11% gc time, 0.97% compilation time)
Running: legendre_quadrature.
  9.439596 seconds (223.40 k allocations: 1.976 GiB, 0.97% gc time, 1.94% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.644986 seconds (8.23 M allocations: 13.383 GiB, 8.89% gc time, 0.59% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.721800 seconds (7.23 M allocations: 13.369 GiB, 10.54% gc time, 1.23% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.840405 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.186466 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.343986 seconds (22.45 k allocations: 1.357 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.401066 seconds (438.25 k allocations: 152.688 MiB, 2.02% gc time, 21.73% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.353068 seconds (200.04 M allocations: 2.983 GiB, 2.11% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.525174 seconds (600.05 M allocations: 8.943 GiB, 5.99% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.148150 seconds (600.03 M allocations: 8.943 GiB, 3.93% gc time, 0.09% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.056469 seconds (109.56 k allocations: 4.131 MiB, 93.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.211022 seconds (247.70 k allocations: 13.448 MiB, 98.01% compilation time)
Running: chebyshev_quadrature with k=2
  0.193104 seconds (272.34 k allocations: 14.525 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.244977 seconds (220.25 k allocations: 11.633 MiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.318538 seconds (220.25 k allocations: 11.661 MiB, 43.90% gc time, 99.50% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.356984 seconds (389.30 k allocations: 35.275 MiB, 92.87% compilation time)
Running: laguerre_quadrature with k=2
  0.177338 seconds (180.54 k allocations: 10.477 MiB, 78.66% compilation time)
Running: legendre_quadrature
  0.107728 seconds (145.98 k allocations: 8.073 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.021345 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019580 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.043080 seconds (18.88 k allocations: 1.121 MiB, 59.62% compilation time)
Running: rectangle_rule_midpoint
  0.036381 seconds (25.48 k allocations: 1.575 MiB, 66.04% compilation time)
Running: rectangle_rule_right
  0.040017 seconds (17.48 k allocations: 1.049 MiB, 54.72% compilation time)
Running: rombergs_method
  0.214121 seconds (172.17 k allocations: 9.829 MiB, 98.72% compilation time)
Running: simpsons_rule
  0.000532 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.037234 seconds (78.86 k allocations: 3.385 MiB, 97.50% compilation time)
Running: trapezoidal_rule
  0.114442 seconds (2.39 M allocations: 37.684 MiB, 27.73% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000742 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.138340 seconds (2.46 k allocations: 1.691 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=2
  0.111943 seconds (2.71 k allocations: 2.355 MiB, 96.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.098471 seconds (2.31 k allocations: 2.028 MiB, 95.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.176400 seconds (2.31 k allocations: 1.469 MiB, 53.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.584235 seconds (366.38 k allocations: 904.821 MiB, 4.30% gc time, 4.06% compilation time)
Running: legendre_quadrature
  0.065451 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000152 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000111 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.829081 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000349 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.966618 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083841 seconds (997 allocations: 56.672 KiB, 99.66% compilation time)
Running: simpsons_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001152 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000151 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.108078 seconds (2.53 k allocations: 579.203 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.108184 seconds (2.79 k allocations: 780.188 KiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=3
  0.105657 seconds (2.39 k allocations: 661.047 KiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=4
  0.103954 seconds (2.39 k allocations: 491.547 KiB, 99.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.829186 seconds (372.94 k allocations: 252.932 MiB, 23.75% compilation time)
Running: legendre_quadrature
  0.065440 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.222463 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000070 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.284021 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.112814 seconds (1.21 k allocations: 64.938 KiB, 99.83% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000006 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000432 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
