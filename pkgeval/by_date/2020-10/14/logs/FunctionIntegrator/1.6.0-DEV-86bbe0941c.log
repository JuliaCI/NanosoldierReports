Julia Version 1.6.0-DEV.1227
Commit 86bbe0941c (2020-10-15 00:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled
    Testing FunctionIntegrator
Status `/tmp/jl_L0sxgY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_L0sxgY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.299977 seconds (294.29 k allocations: 13.891 MiB, 90.09% compilation time)
Running: chebyshev_quadrature with k=1
  1.692459 seconds (2.25 M allocations: 130.599 MiB, 4.49% gc time, 98.03% compilation time)
Running: chebyshev_quadrature with k=2
  0.303471 seconds (417.68 k allocations: 24.229 MiB, 88.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.332851 seconds (483.50 k allocations: 27.370 MiB, 4.16% gc time, 90.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.296873 seconds (427.02 k allocations: 23.922 MiB, 91.51% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 37.247880 seconds (35.48 M allocations: 2.980 GiB, 12.25% gc time, 79.81% compilation time)
Running: laguerre_quadrature with k=1
  4.508319 seconds (3.24 M allocations: 182.159 MiB, 1.74% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.540966 seconds (211.36 k allocations: 12.238 MiB, 88.49% compilation time)
Running: lobatto_quadrature
  0.532962 seconds (340.22 k allocations: 20.687 MiB, 8.41% gc time, 99.62% compilation time)
Running: radau_quadrature
  0.780984 seconds (463.38 k allocations: 28.454 MiB, 99.69% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.883938 seconds (100.02 M allocations: 1.491 GiB, 0.83% gc time, 0.48% compilation time)
Running: rectangle_rule_midpoint.
  0.098783 seconds (173.35 k allocations: 3.888 MiB, 30.00% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.997516 seconds (100.02 M allocations: 1.491 GiB, 1.19% gc time, 0.06% compilation time)
Running: rombergs_method
  1.005360 seconds (741.34 k allocations: 43.167 MiB, 1.88% gc time, 96.44% compilation time)
Running: simpsons_rule
  0.052668 seconds (48.04 k allocations: 2.633 MiB, 96.47% compilation time)
Running: simpsons38_rule
  0.102734 seconds (111.29 k allocations: 5.950 MiB, 14.08% gc time, 83.83% compilation time)
Running: trapezoidal_rule
  0.304447 seconds (1.72 M allocations: 28.724 MiB, 22.41% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.148003 seconds (30.72 k allocations: 1.831 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.634356 seconds (295.77 k allocations: 15.777 MiB, 4.41% gc time, 99.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.335957 seconds (94.22 k allocations: 2.707 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.197225 seconds (82.47 k allocations: 2.508 MiB, 98.71% compilation time)
Running: chebyshev_quadrature with k=4
  0.165455 seconds (65.08 k allocations: 2.154 MiB, 98.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.589810 seconds (510.66 k allocations: 162.388 MiB, 21.57% gc time, 25.45% compilation time)
Running: legendre_quadrature
  0.141175 seconds (42.04 k allocations: 2.440 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.021850 seconds (16.02 k allocations: 1022.810 KiB, 99.30% compilation time)
Running: radau_quadrature
  0.017920 seconds (16.12 k allocations: 1.006 MiB, 99.17% compilation time)
Running: rectangle_rule_left
 14.443069 seconds (471.41 M allocations: 7.025 GiB, 4.71% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.197657 seconds (476.96 M allocations: 7.107 GiB, 4.27% gc time)
Running: rombergs_method
  0.355202 seconds (334.19 k allocations: 19.148 MiB, 99.89% compilation time)
Running: simpsons_rule
  0.000022 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.069637 seconds (19.43 k allocations: 1.184 MiB, 99.88% compilation time)
Running: trapezoidal_rule
  0.050283 seconds (16.97 k allocations: 1.034 MiB, 99.83% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018348 seconds (1.03 k allocations: 34.125 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.094683 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.148695 seconds (2.71 k allocations: 124.266 KiB, 99.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.101076 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.093697 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.426483 seconds (369.35 k allocations: 19.525 MiB, 99.56% compilation time)
Running: legendre_quadrature
  0.067175 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000038 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000347 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000242 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000335 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071259 seconds (1.04 k allocations: 56.531 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000019 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.019940 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.017209 seconds (44.29 k allocations: 702.859 KiB, 91.79% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058944 seconds (83.54 k allocations: 5.004 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=1
  0.252671 seconds (235.65 k allocations: 13.448 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.287879 seconds (289.14 k allocations: 16.381 MiB, 18.83% gc time, 98.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.195784 seconds (239.80 k allocations: 13.561 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.233071 seconds (239.80 k allocations: 13.448 MiB, 96.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.905979 seconds (454.96 k allocations: 163.901 MiB, 7.89% gc time, 20.97% compilation time)
Running: legendre_quadrature
  0.229072 seconds (190.36 k allocations: 11.085 MiB, 99.02% compilation time)
Running: lobatto_quadrature
  0.283344 seconds (201.88 k allocations: 11.872 MiB, 11.47% gc time, 99.05% compilation time)
Running: radau_quadrature
  0.264213 seconds (201.88 k allocations: 11.810 MiB, 99.12% compilation time)
Running: rectangle_rule_left
  0.669196 seconds (19.37 k allocations: 1.189 MiB, 4.81% compilation time)
Running: rectangle_rule_midpoint
  0.028257 seconds (25.55 k allocations: 1.616 MiB, 99.39% compilation time)
Running: rectangle_rule_right
  0.574201 seconds (17.90 k allocations: 1.099 MiB, 4.32% compilation time)
Running: rombergs_method
  0.128633 seconds (137.80 k allocations: 8.045 MiB, 97.70% compilation time)
Running: simpsons_rule
  0.040115 seconds (37.98 k allocations: 2.442 MiB, 99.54% compilation time)
Running: simpsons38_rule
  0.020833 seconds (43.94 k allocations: 2.785 MiB, 99.27% compilation time)
Running: trapezoidal_rule
  0.013012 seconds (43.20 k allocations: 1.730 MiB, 96.36% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.030849 seconds (68.44 k allocations: 3.060 MiB, 96.96% compilation time)
Running: chebyshev_quadrature with k=1
  0.406656 seconds (242.23 k allocations: 13.451 MiB, 97.97% compilation time)
Running: chebyshev_quadrature with k=2
  0.293842 seconds (296.17 k allocations: 16.373 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.142609 seconds (246.37 k allocations: 13.521 MiB, 98.71% compilation time)
Running: chebyshev_quadrature with k=4
  0.215488 seconds (246.37 k allocations: 13.525 MiB, 13.51% gc time, 99.17% compilation time)
Running: hermite_quadrature with k=2
 17.699815 seconds (20.49 M allocations: 1.088 GiB, 8.86% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.449965 seconds (464.13 k allocations: 50.107 MiB, 20.95% gc time, 70.33% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  1.931735 seconds (282.35 k allocations: 15.735 MiB, 89.08% gc time, 99.82% compilation time)
Running: legendre_quadrature
  0.213891 seconds (196.90 k allocations: 11.410 MiB, 98.90% compilation time)
Running: lobatto_quadrature
  0.324107 seconds (222.54 k allocations: 37.614 MiB, 5.27% gc time, 90.91% compilation time)
Running: radau_quadrature
  0.272893 seconds (219.12 k allocations: 30.245 MiB, 85.22% compilation time)
Running: rectangle_rule_left
  0.027097 seconds (22.28 k allocations: 1.333 MiB, 99.57% compilation time)
Running: rectangle_rule_midpoint
  0.016695 seconds (27.36 k allocations: 1.703 MiB, 99.32% compilation time)
Running: rectangle_rule_right
  0.042029 seconds (19.02 k allocations: 1.153 MiB, 99.68% compilation time)
Running: rombergs_method
  0.133204 seconds (140.13 k allocations: 8.061 MiB, 19.19% gc time, 98.30% compilation time)
Running: simpsons_rule
  0.048604 seconds (45.46 k allocations: 2.710 MiB, 98.71% compilation time)
Running: simpsons38_rule
  0.036702 seconds (58.91 k allocations: 3.170 MiB, 98.88% compilation time)
Running: trapezoidal_rule
  0.027786 seconds (29.23 k allocations: 1.655 MiB, 99.02% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.037168 seconds (52.41 k allocations: 2.720 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=1
  0.263971 seconds (237.76 k allocations: 13.249 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.244511 seconds (291.35 k allocations: 16.145 MiB, 95.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.198505 seconds (241.90 k allocations: 13.330 MiB, 11.10% gc time, 98.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.178386 seconds (241.91 k allocations: 13.331 MiB, 98.74% compilation time)
Running: hermite_quadrature with k=2
  0.314507 seconds (175.13 k allocations: 10.127 MiB, 97.05% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  9.238804 seconds (457.40 k allocations: 1.175 GiB, 26.38% gc time, 6.21% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.382656 seconds (277.64 k allocations: 15.547 MiB, 3.82% gc time, 99.12% compilation time)
Running: legendre_quadrature
  0.139261 seconds (192.47 k allocations: 11.193 MiB, 98.37% compilation time)
Running: lobatto_quadrature
  0.187709 seconds (213.30 k allocations: 23.314 MiB, 91.15% compilation time)
Running: radau_quadrature
  0.241941 seconds (212.45 k allocations: 21.243 MiB, 6.00% gc time, 88.62% compilation time)
Running: rectangle_rule_left
  0.048932 seconds (20.07 k allocations: 1.228 MiB, 99.41% compilation time)
Running: rectangle_rule_midpoint
  0.134614 seconds (26.25 k allocations: 1.652 MiB, 99.88% compilation time)
Running: rectangle_rule_right
  0.019797 seconds (17.87 k allocations: 1.098 MiB, 99.30% compilation time)
Running: rombergs_method
  0.119107 seconds (135.98 k allocations: 7.880 MiB, 97.64% compilation time)
Running: simpsons_rule
  0.023416 seconds (40.80 k allocations: 2.543 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.055607 seconds (49.73 k allocations: 2.929 MiB, 99.47% compilation time)
Running: trapezoidal_rule
  0.022373 seconds (24.14 k allocations: 1.492 MiB, 99.13% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.023560 seconds (40.61 k allocations: 2.580 MiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=1
  0.268879 seconds (236.14 k allocations: 13.461 MiB, 19.58% gc time, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.199747 seconds (289.64 k allocations: 16.497 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.195187 seconds (240.28 k allocations: 13.543 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.229469 seconds (240.29 k allocations: 13.441 MiB, 9.46% gc time, 98.84% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.477116 seconds (455.50 k allocations: 194.951 MiB, 4.14% gc time, 18.11% compilation time)
Running: legendre_quadrature
  0.129576 seconds (190.85 k allocations: 11.108 MiB, 98.16% compilation time)
Running: lobatto_quadrature
  0.230559 seconds (202.38 k allocations: 11.842 MiB, 10.59% gc time, 99.07% compilation time)
Running: radau_quadrature
  0.150869 seconds (202.38 k allocations: 11.836 MiB, 98.31% compilation time)
Running: rectangle_rule_left
  0.354871 seconds (19.89 k allocations: 1.214 MiB, 7.24% compilation time)
Running: rectangle_rule_midpoint
  0.021249 seconds (25.89 k allocations: 1.634 MiB, 99.08% compilation time)
Running: rectangle_rule_right
  0.166388 seconds (18.24 k allocations: 1.118 MiB, 19.97% compilation time)
Running: rombergs_method
  0.187721 seconds (149.10 k allocations: 8.789 MiB, 98.05% compilation time)
Running: simpsons_rule
  0.055264 seconds (38.61 k allocations: 2.470 MiB, 99.68% compilation time)
Running: simpsons38_rule
  0.098698 seconds (44.65 k allocations: 2.815 MiB, 99.80% compilation time)
Running: trapezoidal_rule
  0.025228 seconds (44.13 k allocations: 1.763 MiB, 97.48% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.033023 seconds (40.35 k allocations: 2.510 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=1
  0.223241 seconds (236.73 k allocations: 13.473 MiB, 14.89% gc time, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.296642 seconds (290.27 k allocations: 16.409 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.162170 seconds (240.88 k allocations: 13.470 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.196058 seconds (240.87 k allocations: 13.545 MiB, 9.67% gc time, 98.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.477957 seconds (456.21 k allocations: 149.630 MiB, 7.58% gc time, 57.91% compilation time)
Running: legendre_quadrature
  0.258194 seconds (191.45 k allocations: 11.126 MiB, 99.14% compilation time)
Running: lobatto_quadrature
  0.486427 seconds (202.98 k allocations: 11.859 MiB, 6.27% gc time, 99.50% compilation time)
Running: radau_quadrature
  0.216127 seconds (202.97 k allocations: 11.857 MiB, 93.32% compilation time)
Running: rectangle_rule_left
  0.663118 seconds (20.14 k allocations: 1.227 MiB, 4.43% compilation time)
Running: rectangle_rule_midpoint
  0.021472 seconds (25.89 k allocations: 1.635 MiB, 99.10% compilation time)
Running: rectangle_rule_right
  0.705038 seconds (18.20 k allocations: 1.115 MiB, 3.28% compilation time)
Running: rombergs_method
  0.245730 seconds (139.02 k allocations: 8.083 MiB, 94.73% compilation time)
Running: simpsons_rule
  0.026520 seconds (39.09 k allocations: 2.491 MiB, 99.16% compilation time)
Running: simpsons38_rule
  0.029329 seconds (45.35 k allocations: 2.842 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.020530 seconds (56.28 k allocations: 1.959 MiB, 94.64% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.236439 seconds (152.11 k allocations: 9.113 MiB, 99.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.467184 seconds (70.34 k allocations: 2.237 MiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.331142 seconds (105.50 k allocations: 2.900 MiB, 12.27% gc time, 98.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.194140 seconds (92.98 k allocations: 2.686 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.167078 seconds (72.52 k allocations: 2.280 MiB, 98.62% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.846298 seconds (485.75 k allocations: 168.222 MiB, 7.97% gc time, 20.76% compilation time)
Running: legendre_quadrature
  0.141901 seconds (19.14 k allocations: 1.125 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.910262 seconds (590.00 M allocations: 8.792 GiB, 5.79% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.286855 seconds (592.75 M allocations: 8.833 GiB, 6.20% gc time)
Running: rombergs_method
  0.116861 seconds (20.92 k allocations: 1.198 MiB, 99.47% compilation time)
Running: simpsons_rule
  0.000043 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026940 seconds (463 allocations: 22.578 KiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.019896 seconds (171 allocations: 7.859 KiB, 99.41% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.293588 seconds (209.94 M allocations: 3.138 GiB, 1.60% gc time, 0.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.407739 seconds (422.88 k allocations: 23.734 MiB, 5.31% gc time, 99.13% compilation time)
Running: chebyshev_quadrature with k=2
 17.272675 seconds (478.46 k allocations: 4.041 GiB, 2.85% gc time, 2.19% compilation time)
Running: chebyshev_quadrature with k=3
  7.347443 seconds (254.30 k allocations: 1.642 GiB, 3.42% gc time, 1.87% compilation time)
Running: chebyshev_quadrature with k=4
 10.671264 seconds (254.30 k allocations: 2.261 GiB, 1.62% gc time, 1.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 32.385891 seconds (492.96 k allocations: 13.255 GiB, 9.64% gc time, 1.41% compilation time)
Running: legendre_quadrature.
  9.724687 seconds (228.79 k allocations: 1.976 GiB, 1.53% gc time, 3.09% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.036862 seconds (8.24 M allocations: 13.384 GiB, 15.75% gc time, 0.61% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.119074 seconds (7.24 M allocations: 13.369 GiB, 8.97% gc time, 0.61% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.931093 seconds (22.89 k allocations: 1.394 MiB, 0.31% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.363364 seconds (31.47 k allocations: 1.956 MiB, 0.23% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.440135 seconds (23.10 k allocations: 1.403 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.086529 seconds (448.61 k allocations: 153.517 MiB, 4.90% gc time, 14.23% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.406803 seconds (200.04 M allocations: 2.983 GiB, 1.97% gc time, 0.45% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.507145 seconds (600.05 M allocations: 8.944 GiB, 5.97% gc time, 0.22% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.147095 seconds (600.03 M allocations: 8.943 GiB, 3.90% gc time, 0.14% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.235844 seconds (111.10 k allocations: 4.244 MiB, 91.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.293729 seconds (252.71 k allocations: 13.877 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.217431 seconds (277.25 k allocations: 14.962 MiB, 96.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.188682 seconds (224.24 k allocations: 11.983 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=4
  0.281831 seconds (224.24 k allocations: 12.011 MiB, 41.98% gc time, 99.51% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.372508 seconds (394.80 k allocations: 35.548 MiB, 94.27% compilation time)
Running: laguerre_quadrature with k=2
  0.176848 seconds (185.19 k allocations: 10.835 MiB, 76.14% compilation time)
Running: legendre_quadrature
  0.102208 seconds (149.17 k allocations: 8.338 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.023210 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017558 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.051042 seconds (19.35 k allocations: 1.157 MiB, 59.16% compilation time)
Running: rectangle_rule_midpoint
  0.039803 seconds (26.33 k allocations: 1.636 MiB, 59.83% compilation time)
Running: rectangle_rule_right
  0.038945 seconds (17.96 k allocations: 1.084 MiB, 55.28% compilation time)
Running: rombergs_method
  0.276461 seconds (176.51 k allocations: 10.149 MiB, 99.02% compilation time)
Running: simpsons_rule
  0.000507 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.042521 seconds (80.36 k allocations: 3.491 MiB, 97.60% compilation time)
Running: trapezoidal_rule
  0.140567 seconds (2.39 M allocations: 37.744 MiB, 37.84% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000680 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.110977 seconds (2.46 k allocations: 1.691 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.115209 seconds (2.71 k allocations: 2.355 MiB, 97.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.097825 seconds (2.31 k allocations: 2.028 MiB, 96.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.107755 seconds (2.31 k allocations: 1.469 MiB, 97.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.303798 seconds (371.63 k allocations: 905.326 MiB, 6.85% gc time, 6.76% compilation time)
Running: legendre_quadrature
  0.090460 seconds (1.27 k allocations: 68.203 KiB, 92.10% compilation time)
Running: lobatto_quadrature
  0.000331 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000181 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.865974 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000336 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.849297 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.086199 seconds (997 allocations: 56.672 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001026 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000134 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.123558 seconds (2.53 k allocations: 579.203 KiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.106281 seconds (2.79 k allocations: 780.188 KiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.115850 seconds (2.39 k allocations: 661.047 KiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.112711 seconds (2.39 k allocations: 491.547 KiB, 99.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.309507 seconds (378.19 k allocations: 253.437 MiB, 22.80% compilation time)
Running: legendre_quadrature
  0.069684 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000119 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000104 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.342216 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000111 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.315186 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.102632 seconds (1.21 k allocations: 64.938 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000458 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
