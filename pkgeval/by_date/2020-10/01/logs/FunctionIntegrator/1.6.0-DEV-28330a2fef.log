Julia Version 1.6.0-DEV.1093
Commit 28330a2fef (2020-09-30 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_kt6CoC/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_kt6CoC/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.736065 seconds (1.25 M allocations: 65.201 MiB, 1.75% gc time, 95.77% compilation time)
Running: chebyshev_quadrature with k=1
  1.660878 seconds (2.19 M allocations: 126.472 MiB, 4.94% gc time, 98.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.318623 seconds (409.38 k allocations: 23.548 MiB, 7.07% gc time, 79.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.362405 seconds (473.74 k allocations: 26.610 MiB, 10.71% gc time, 73.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.364079 seconds (418.55 k allocations: 23.251 MiB, 88.05% compilation time)
Running: jacobi_quadrature with α=β=1
 38.515415 seconds (36.40 M allocations: 2.999 GiB, 9.39% gc time, 78.17% compilation time)
Running: laguerre_quadrature with k=1
  2.871640 seconds (3.17 M allocations: 177.081 MiB, 3.09% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.214466 seconds (206.27 k allocations: 11.846 MiB, 98.75% compilation time)
Running: lobatto_quadrature
  0.324513 seconds (329.54 k allocations: 19.899 MiB, 99.35% compilation time)
Running: radau_quadrature
  0.446606 seconds (447.06 k allocations: 27.274 MiB, 5.15% gc time, 99.52% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.601558 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.158932 seconds (172.46 k allocations: 3.827 MiB, 24.61% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.307975 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time, 0.04% compilation time)
Running: rombergs_method
  0.629768 seconds (722.94 k allocations: 41.717 MiB, 5.95% gc time, 99.56% compilation time)
Running: simpsons_rule
  0.043530 seconds (45.77 k allocations: 2.043 MiB, 88.41% compilation time)
Running: simpsons38_rule
  0.107835 seconds (108.40 k allocations: 5.747 MiB, 95.96% compilation time)
Running: trapezoidal_rule
  0.314835 seconds (1.51 M allocations: 25.667 MiB, 4.58% gc time, 26.54% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.085017 seconds (30.98 k allocations: 1.865 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.474206 seconds (290.36 k allocations: 15.354 MiB, 6.02% gc time, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.170192 seconds (93.80 k allocations: 2.675 MiB, 97.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.187856 seconds (82.06 k allocations: 2.476 MiB, 97.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.171618 seconds (64.67 k allocations: 2.123 MiB, 98.16% compilation time)
Running: jacobi_quadrature with α=β=1
  2.237585 seconds (503.85 k allocations: 161.819 MiB, 6.50% gc time, 21.60% compilation time)
Running: legendre_quadrature
  0.191681 seconds (41.32 k allocations: 2.383 MiB, 6.87% gc time, 99.86% compilation time)
Running: lobatto_quadrature
  0.021818 seconds (15.71 k allocations: 1002.778 KiB, 99.31% compilation time)
Running: radau_quadrature
  0.024792 seconds (15.82 k allocations: 1009.993 KiB, 99.43% compilation time)
Running: rectangle_rule_left
 29.914536 seconds (471.41 M allocations: 7.025 GiB, 2.85% gc time)
Running: rectangle_rule_midpoint
  0.000047 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.100313 seconds (476.96 M allocations: 7.107 GiB, 2.61% gc time)
Running: rombergs_method
  0.619232 seconds (326.49 k allocations: 18.530 MiB, 1.26% gc time, 99.90% compilation time)
Running: simpsons_rule
  0.000049 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.074827 seconds (18.91 k allocations: 1.146 MiB, 99.74% compilation time)
Running: trapezoidal_rule
  0.058882 seconds (17.40 k allocations: 1.054 MiB, 99.81% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033999 seconds (1.99 k allocations: 53.594 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.128774 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.119479 seconds (2.71 k allocations: 124.266 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.121098 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.116490 seconds (2.31 k allocations: 109.297 KiB, 99.85% compilation time)
Running: jacobi_quadrature with α=β=1
  0.335720 seconds (363.64 k allocations: 18.976 MiB, 99.36% compilation time)
Running: legendre_quadrature
  0.075058 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000113 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000046 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000573 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000328 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000459 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.086603 seconds (1.04 k allocations: 56.531 KiB, 98.91% compilation time)
Running: simpsons_rule
  0.000054 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025983 seconds (923 allocations: 39.281 KiB, 99.49% compilation time)
Running: trapezoidal_rule
  0.023113 seconds (44.33 k allocations: 704.859 KiB, 87.90% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058394 seconds (72.31 k allocations: 4.214 MiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=1
  0.193811 seconds (230.61 k allocations: 12.965 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.229764 seconds (283.17 k allocations: 15.882 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=3
  0.286543 seconds (234.76 k allocations: 13.149 MiB, 28.52% gc time, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.192091 seconds (234.76 k allocations: 13.083 MiB, 98.84% compilation time)
Running: jacobi_quadrature with α=β=1
  3.435234 seconds (446.72 k allocations: 163.188 MiB, 8.36% gc time, 17.57% compilation time)
Running: legendre_quadrature
  0.175389 seconds (185.44 k allocations: 10.708 MiB, 98.85% compilation time)
Running: lobatto_quadrature
  0.192240 seconds (196.61 k allocations: 11.411 MiB, 98.57% compilation time)
Running: radau_quadrature
  0.191541 seconds (196.61 k allocations: 11.409 MiB, 98.98% compilation time)
Running: rectangle_rule_left
  1.128610 seconds (18.82 k allocations: 1.147 MiB, 2.91% compilation time)
Running: rectangle_rule_midpoint
  0.031542 seconds (24.67 k allocations: 1.555 MiB, 99.08% compilation time)
Running: rectangle_rule_right
  1.332370 seconds (17.39 k allocations: 1.065 MiB, 2.25% compilation time)
Running: rombergs_method
  0.225415 seconds (134.27 k allocations: 7.759 MiB, 34.73% gc time, 97.45% compilation time)
Running: simpsons_rule
  0.029700 seconds (27.54 k allocations: 1.730 MiB, 99.40% compilation time)
Running: simpsons38_rule
  0.046178 seconds (42.37 k allocations: 2.678 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.028377 seconds (44.10 k allocations: 1.772 MiB, 95.49% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039705 seconds (99.53 k allocations: 2.979 MiB, 91.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.319555 seconds (237.20 k allocations: 13.055 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.315423 seconds (290.20 k allocations: 15.887 MiB, 13.75% gc time, 97.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.188336 seconds (241.33 k allocations: 13.124 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.240750 seconds (241.34 k allocations: 13.124 MiB, 99.18% compilation time)
Running: hermite_quadrature with k=2
 15.742109 seconds (20.09 M allocations: 1.056 GiB, 7.22% gc time, 99.97% compilation time)
Running: jacobi_quadrature with α=β=1
  0.645331 seconds (455.89 k allocations: 49.388 MiB, 33.20% gc time, 92.02% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.226729 seconds (276.26 k allocations: 15.256 MiB, 98.47% compilation time)
Running: legendre_quadrature
  0.151502 seconds (191.98 k allocations: 11.043 MiB, 98.50% compilation time)
Running: lobatto_quadrature
  0.212817 seconds (217.27 k allocations: 37.186 MiB, 78.96% compilation time)
Running: radau_quadrature
  0.231840 seconds (213.85 k allocations: 29.846 MiB, 9.31% gc time, 75.70% compilation time)
Running: rectangle_rule_left
  0.029472 seconds (21.73 k allocations: 1.293 MiB, 99.43% compilation time)
Running: rectangle_rule_midpoint
  0.036359 seconds (26.47 k allocations: 1.642 MiB, 99.61% compilation time)
Running: rectangle_rule_right
  0.025072 seconds (18.50 k allocations: 1.117 MiB, 99.40% compilation time)
Running: rombergs_method
  0.128520 seconds (136.74 k allocations: 7.809 MiB, 98.19% compilation time)
Running: simpsons_rule
  0.036333 seconds (39.38 k allocations: 2.061 MiB, 98.57% compilation time)
Running: simpsons38_rule
  0.038066 seconds (57.34 k allocations: 3.063 MiB, 98.26% compilation time)
Running: trapezoidal_rule
  0.032044 seconds (30.13 k allocations: 1.697 MiB, 98.92% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040899 seconds (59.92 k allocations: 2.280 MiB, 95.59% compilation time)
Running: chebyshev_quadrature with k=1
  0.227016 seconds (232.72 k allocations: 12.824 MiB, 10.31% gc time, 99.02% compilation time)
Running: chebyshev_quadrature with k=2
  0.223468 seconds (285.38 k allocations: 15.643 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.185249 seconds (236.87 k allocations: 12.928 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.211814 seconds (236.87 k allocations: 12.929 MiB, 8.56% gc time, 98.99% compilation time)
Running: hermite_quadrature with k=2
  0.149672 seconds (170.78 k allocations: 9.790 MiB, 98.52% compilation time)
Running: jacobi_quadrature with α=β=1
 10.606778 seconds (449.16 k allocations: 1.175 GiB, 16.40% gc time, 4.98% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.223050 seconds (271.55 k allocations: 15.063 MiB, 98.29% compilation time)
Running: legendre_quadrature
  0.175123 seconds (187.55 k allocations: 10.817 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.262983 seconds (208.03 k allocations: 22.913 MiB, 7.95% gc time, 80.41% compilation time)
Running: radau_quadrature
  0.247177 seconds (207.18 k allocations: 20.844 MiB, 87.39% compilation time)
Running: rectangle_rule_left
  0.025741 seconds (19.52 k allocations: 1.188 MiB, 99.46% compilation time)
Running: rectangle_rule_midpoint
  0.026285 seconds (25.36 k allocations: 1.591 MiB, 99.52% compilation time)
Running: rectangle_rule_right
  0.039177 seconds (17.36 k allocations: 1.062 MiB, 38.81% gc time, 99.68% compilation time)
Running: rombergs_method
  0.120397 seconds (132.58 k allocations: 7.622 MiB, 97.82% compilation time)
Running: simpsons_rule
  0.031826 seconds (31.90 k allocations: 1.855 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.036135 seconds (48.16 k allocations: 2.821 MiB, 98.93% compilation time)
Running: trapezoidal_rule
  0.027565 seconds (25.05 k allocations: 1.535 MiB, 99.15% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032815 seconds (30.87 k allocations: 1.875 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.237362 seconds (231.10 k allocations: 13.042 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.300392 seconds (283.67 k allocations: 15.985 MiB, 6.39% gc time, 98.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.202532 seconds (235.25 k allocations: 13.149 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.203204 seconds (235.25 k allocations: 12.971 MiB, 98.61% compilation time)
Running: jacobi_quadrature with α=β=1
  2.896666 seconds (447.26 k allocations: 194.233 MiB, 5.48% gc time, 17.27% compilation time)
Running: legendre_quadrature
  0.168672 seconds (185.93 k allocations: 10.749 MiB, 98.62% compilation time)
Running: lobatto_quadrature
  0.232434 seconds (197.11 k allocations: 11.437 MiB, 98.83% compilation time)
Running: radau_quadrature
  0.303994 seconds (197.11 k allocations: 11.439 MiB, 98.72% compilation time)
Running: rectangle_rule_left
  0.337219 seconds (19.34 k allocations: 1.173 MiB, 10.24% compilation time)
Running: rectangle_rule_midpoint
  0.024600 seconds (25.01 k allocations: 1.573 MiB, 99.47% compilation time)
Running: rectangle_rule_right
  0.150816 seconds (17.73 k allocations: 1.081 MiB, 18.72% compilation time)
Running: rombergs_method
  0.161882 seconds (145.02 k allocations: 8.483 MiB, 11.29% gc time, 97.64% compilation time)
Running: simpsons_rule
  0.030246 seconds (28.23 k allocations: 1.758 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.034043 seconds (43.08 k allocations: 2.708 MiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.029201 seconds (45.03 k allocations: 1.805 MiB, 95.72% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032292 seconds (31.64 k allocations: 1.826 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.202702 seconds (231.69 k allocations: 12.989 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.280403 seconds (284.30 k allocations: 15.958 MiB, 93.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.300504 seconds (235.84 k allocations: 13.067 MiB, 16.63% gc time, 94.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.184077 seconds (235.84 k allocations: 13.143 MiB, 98.33% compilation time)
Running: jacobi_quadrature with α=β=1
  1.902005 seconds (447.97 k allocations: 148.916 MiB, 11.45% gc time, 36.77% compilation time)
Running: legendre_quadrature
  0.239280 seconds (186.53 k allocations: 10.750 MiB, 98.85% compilation time)
Running: lobatto_quadrature
  0.183639 seconds (197.71 k allocations: 11.460 MiB, 98.37% compilation time)
Running: radau_quadrature
  0.256174 seconds (197.70 k allocations: 11.454 MiB, 98.95% compilation time)
Running: rectangle_rule_left
  1.434784 seconds (19.59 k allocations: 1.186 MiB, 2.81% compilation time)
Running: rectangle_rule_midpoint
  0.034551 seconds (25.01 k allocations: 1.574 MiB, 99.07% compilation time)
Running: rectangle_rule_right
  1.353058 seconds (17.69 k allocations: 1.078 MiB, 2.70% compilation time)
Running: rombergs_method
  0.196224 seconds (135.49 k allocations: 7.815 MiB, 92.39% compilation time)
Running: simpsons_rule
  0.072352 seconds (28.93 k allocations: 1.785 MiB, 99.60% compilation time)
Running: simpsons38_rule
  0.072317 seconds (43.78 k allocations: 2.734 MiB, 38.90% gc time, 99.60% compilation time)
Running: trapezoidal_rule
  0.036204 seconds (57.27 k allocations: 2.006 MiB, 94.54% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.168727 seconds (145.08 k allocations: 8.695 MiB, 11.75% gc time, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.156035 seconds (69.93 k allocations: 2.205 MiB, 97.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.168003 seconds (105.09 k allocations: 2.868 MiB, 96.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.175101 seconds (92.57 k allocations: 2.654 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.172509 seconds (72.10 k allocations: 2.248 MiB, 97.48% compilation time)
Running: jacobi_quadrature with α=β=1
  2.599702 seconds (480.13 k allocations: 167.772 MiB, 7.12% gc time, 18.89% compilation time)
Running: legendre_quadrature
  0.125075 seconds (18.73 k allocations: 1.158 MiB, 99.41% compilation time)
Running: lobatto_quadrature
  0.000138 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000115 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 46.186506 seconds (590.00 M allocations: 8.792 GiB, 3.42% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.133659 seconds (592.75 M allocations: 8.833 GiB, 3.42% gc time)
Running: rombergs_method
  0.133238 seconds (20.51 k allocations: 1.165 MiB, 99.46% compilation time)
Running: simpsons_rule
  0.000052 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.036713 seconds (463 allocations: 22.578 KiB, 99.55% compilation time)
Running: trapezoidal_rule
  0.028351 seconds (179 allocations: 8.766 KiB, 99.54% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.814177 seconds (629.32 M allocations: 9.387 GiB, 3.26% gc time, 0.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.670143 seconds (414.16 k allocations: 22.967 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=2
 28.827073 seconds (468.80 k allocations: 4.040 GiB, 2.05% gc time, 2.19% compilation time)
Running: chebyshev_quadrature with k=3
 12.810959 seconds (249.12 k allocations: 1.642 GiB, 2.17% gc time, 1.77% compilation time)
Running: chebyshev_quadrature with k=4
 20.222991 seconds (249.12 k allocations: 2.260 GiB, 0.96% gc time, 0.98% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 67.306246 seconds (484.19 k allocations: 13.254 GiB, 3.47% gc time, 0.85% compilation time)
Running: legendre_quadrature.
 14.313106 seconds (223.42 k allocations: 1.976 GiB, 1.32% gc time, 2.45% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.636612 seconds (8.23 M allocations: 13.383 GiB, 4.37% gc time, 0.41% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.317012 seconds (7.23 M allocations: 13.369 GiB, 3.34% gc time, 0.39% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.041114 seconds (22.25 k allocations: 1.347 MiB, 0.18% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.655259 seconds (30.45 k allocations: 1.884 MiB, 0.16% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.652435 seconds (22.45 k allocations: 1.357 MiB, 0.16% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.894258 seconds (438.27 k allocations: 152.680 MiB, 10.07% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.254848 seconds (600.04 M allocations: 8.943 GiB, 5.57% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.296768 seconds (600.05 M allocations: 8.943 GiB, 6.08% gc time, 0.09% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.514608 seconds (600.03 M allocations: 8.943 GiB, 5.84% gc time, 0.09% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058998 seconds (180.45 k allocations: 4.404 MiB, 82.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.222049 seconds (247.70 k allocations: 13.449 MiB, 97.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.219783 seconds (272.34 k allocations: 14.523 MiB, 98.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.196306 seconds (220.25 k allocations: 11.646 MiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.198514 seconds (220.25 k allocations: 11.627 MiB, 99.19% compilation time)
Running: jacobi_quadrature with α=β=1
  0.391506 seconds (388.84 k allocations: 34.995 MiB, 90.15% compilation time)
Running: laguerre_quadrature with k=2
  0.204722 seconds (180.54 k allocations: 10.477 MiB, 77.54% compilation time)
Running: legendre_quadrature
  0.135685 seconds (145.99 k allocations: 8.082 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.041489 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.033531 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.055420 seconds (18.88 k allocations: 1.122 MiB, 57.89% compilation time)
Running: rectangle_rule_midpoint
  0.044607 seconds (25.48 k allocations: 1.576 MiB, 63.47% compilation time)
Running: rectangle_rule_right
  0.049056 seconds (17.48 k allocations: 1.049 MiB, 52.86% compilation time)
Running: rombergs_method
  0.245967 seconds (171.62 k allocations: 9.827 MiB, 98.68% compilation time)
Running: simpsons_rule
  0.001763 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.048992 seconds (78.86 k allocations: 3.384 MiB, 95.66% compilation time)
Running: trapezoidal_rule
  0.182010 seconds (2.39 M allocations: 37.691 MiB, 19.76% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001978 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.137327 seconds (2.46 k allocations: 1.691 MiB, 97.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.137678 seconds (2.71 k allocations: 2.355 MiB, 96.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.123458 seconds (2.31 k allocations: 2.028 MiB, 95.50% compilation time)
Running: chebyshev_quadrature with k=4
  0.122155 seconds (2.31 k allocations: 1.469 MiB, 96.50% compilation time)
Running: jacobi_quadrature with α=β=1
  8.188445 seconds (365.92 k allocations: 904.813 MiB, 3.22% gc time, 4.71% compilation time)
Running: legendre_quadrature
  0.087475 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000190 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000142 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.811526 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000507 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.079268 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084382 seconds (997 allocations: 56.672 KiB, 99.20% compilation time)
Running: simpsons_rule
  0.000096 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000086 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000848 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000462 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.137711 seconds (2.53 k allocations: 579.203 KiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=2
  0.127943 seconds (2.79 k allocations: 780.188 KiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.126340 seconds (2.39 k allocations: 661.047 KiB, 98.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.127469 seconds (2.39 k allocations: 491.547 KiB, 99.29% compilation time)
Running: jacobi_quadrature with α=β=1
  3.502624 seconds (372.48 k allocations: 252.962 MiB, 17.95% compilation time)
Running: legendre_quadrature
  0.086819 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000089 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000052 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.225020 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000206 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.985143 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095813 seconds (1.21 k allocations: 64.938 KiB, 99.79% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000416 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
