Julia Version 1.6.0-DEV.1101
Commit 2fe2b43606 (2020-10-01 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_mUifd0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_mUifd0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.369353 seconds (379.82 k allocations: 15.434 MiB, 22.74% gc time, 92.22% compilation time)
Running: chebyshev_quadrature with k=1
  1.691912 seconds (2.20 M allocations: 126.811 MiB, 3.21% gc time, 97.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.322789 seconds (409.38 k allocations: 23.563 MiB, 81.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.399675 seconds (473.75 k allocations: 26.622 MiB, 5.37% gc time, 88.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.403868 seconds (418.56 k allocations: 23.272 MiB, 15.24% gc time, 90.97% compilation time)
Running: jacobi_quadrature with α=β=1
 37.888278 seconds (36.43 M allocations: 3.001 GiB, 7.81% gc time, 77.95% compilation time)
Running: laguerre_quadrature with k=1
  2.722016 seconds (3.17 M allocations: 177.058 MiB, 2.24% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.187974 seconds (206.05 k allocations: 11.826 MiB, 99.16% compilation time)
Running: lobatto_quadrature
  0.323804 seconds (329.86 k allocations: 19.955 MiB, 8.74% gc time, 99.36% compilation time)
Running: radau_quadrature
  0.320174 seconds (449.22 k allocations: 27.475 MiB, 99.35% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 77.412417 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.142101 seconds (172.46 k allocations: 3.827 MiB, 22.29% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.626409 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time, 0.04% compilation time)
Running: rombergs_method
  0.526364 seconds (722.72 k allocations: 41.707 MiB, 5.57% gc time, 99.53% compilation time)
Running: simpsons_rule
  0.029675 seconds (45.77 k allocations: 2.043 MiB, 90.98% compilation time)
Running: simpsons38_rule
  0.072539 seconds (108.42 k allocations: 5.747 MiB, 96.31% compilation time)
Running: trapezoidal_rule
  0.289141 seconds (1.51 M allocations: 25.668 MiB, 6.04% gc time, 22.07% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.085652 seconds (30.98 k allocations: 1.865 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.431350 seconds (290.67 k allocations: 15.400 MiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=2
  0.165520 seconds (93.80 k allocations: 2.675 MiB, 97.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.248283 seconds (82.06 k allocations: 2.476 MiB, 30.67% gc time, 67.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.164262 seconds (64.67 k allocations: 2.122 MiB, 98.03% compilation time)
Running: jacobi_quadrature with α=β=1
  2.260045 seconds (503.60 k allocations: 161.792 MiB, 14.97% gc time, 23.73% compilation time)
Running: legendre_quadrature
  0.164882 seconds (41.10 k allocations: 2.366 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.020135 seconds (15.49 k allocations: 985.403 KiB, 99.13% compilation time)
Running: radau_quadrature
  0.020376 seconds (15.60 k allocations: 992.618 KiB, 99.24% compilation time)
Running: rectangle_rule_left
 27.900079 seconds (471.41 M allocations: 7.025 GiB, 2.19% gc time)
Running: rectangle_rule_midpoint
  0.000049 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.209991 seconds (476.96 M allocations: 7.107 GiB, 2.25% gc time)
Running: rombergs_method
  0.393738 seconds (326.27 k allocations: 18.513 MiB, 2.54% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000035 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064966 seconds (18.91 k allocations: 1.146 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.076419 seconds (17.40 k allocations: 1.054 MiB, 99.86% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030376 seconds (1.99 k allocations: 53.594 KiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.134083 seconds (2.46 k allocations: 116.359 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.118014 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.116225 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.105109 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.325793 seconds (363.64 k allocations: 18.976 MiB, 99.33% compilation time)
Running: legendre_quadrature
  0.078070 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000045 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000465 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000322 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000456 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.084433 seconds (1.04 k allocations: 56.531 KiB, 99.77% compilation time)
Running: simpsons_rule
  0.000034 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027025 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.034166 seconds (44.33 k allocations: 704.859 KiB, 93.23% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.056396 seconds (72.31 k allocations: 4.214 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.222944 seconds (230.61 k allocations: 12.965 MiB, 11.76% gc time, 99.02% compilation time)
Running: chebyshev_quadrature with k=2
  0.224413 seconds (283.17 k allocations: 15.881 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.198515 seconds (234.76 k allocations: 13.133 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.205473 seconds (234.76 k allocations: 13.067 MiB, 11.15% gc time, 98.92% compilation time)
Running: jacobi_quadrature with α=β=1
  2.916299 seconds (446.72 k allocations: 163.188 MiB, 4.43% gc time, 15.05% compilation time)
Running: legendre_quadrature
  0.150514 seconds (185.44 k allocations: 10.709 MiB, 9.51% gc time, 98.77% compilation time)
Running: lobatto_quadrature
  0.142223 seconds (196.61 k allocations: 11.411 MiB, 98.93% compilation time)
Running: radau_quadrature
  0.170900 seconds (196.61 k allocations: 11.409 MiB, 99.01% compilation time)
Running: rectangle_rule_left
  0.914819 seconds (18.82 k allocations: 1.147 MiB, 2.66% compilation time)
Running: rectangle_rule_midpoint
  0.024049 seconds (24.67 k allocations: 1.555 MiB, 99.30% compilation time)
Running: rectangle_rule_right
  1.030148 seconds (17.39 k allocations: 1.065 MiB, 2.98% compilation time)
Running: rombergs_method
  0.144692 seconds (134.27 k allocations: 7.759 MiB, 98.02% compilation time)
Running: simpsons_rule
  0.023453 seconds (27.54 k allocations: 1.729 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.030224 seconds (42.37 k allocations: 2.678 MiB, 99.44% compilation time)
Running: trapezoidal_rule
  0.042746 seconds (44.10 k allocations: 1.772 MiB, 40.40% gc time, 97.94% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034622 seconds (99.53 k allocations: 2.979 MiB, 91.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.166001 seconds (237.20 k allocations: 13.054 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.182699 seconds (290.20 k allocations: 15.875 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=3
  0.194967 seconds (241.33 k allocations: 13.116 MiB, 9.56% gc time, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.168584 seconds (241.34 k allocations: 13.141 MiB, 98.93% compilation time)
Running: hermite_quadrature with k=2
 15.696267 seconds (20.10 M allocations: 1.056 GiB, 8.38% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.465791 seconds (455.90 k allocations: 49.401 MiB, 7.40% gc time, 90.72% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.246151 seconds (276.26 k allocations: 15.240 MiB, 98.50% compilation time)
Running: legendre_quadrature
  0.177045 seconds (191.98 k allocations: 11.044 MiB, 98.58% compilation time)
Running: lobatto_quadrature
  0.332643 seconds (217.27 k allocations: 37.211 MiB, 20.53% gc time, 63.37% compilation time)
Running: radau_quadrature
  0.428749 seconds (213.85 k allocations: 29.846 MiB, 42.20% gc time, 88.18% compilation time)
Running: rectangle_rule_left
  0.027972 seconds (21.73 k allocations: 1.293 MiB, 99.49% compilation time)
Running: rectangle_rule_midpoint
  0.026997 seconds (26.47 k allocations: 1.642 MiB, 99.45% compilation time)
Running: rectangle_rule_right
  0.024577 seconds (18.50 k allocations: 1.117 MiB, 99.39% compilation time)
Running: rombergs_method
  0.127867 seconds (136.74 k allocations: 7.808 MiB, 97.84% compilation time)
Running: simpsons_rule
  0.037100 seconds (39.38 k allocations: 2.061 MiB, 98.36% compilation time)
Running: simpsons38_rule
  0.043327 seconds (57.34 k allocations: 3.063 MiB, 98.54% compilation time)
Running: trapezoidal_rule
  0.029752 seconds (30.13 k allocations: 1.697 MiB, 98.81% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044665 seconds (59.92 k allocations: 2.280 MiB, 95.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.245183 seconds (232.72 k allocations: 12.824 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.265266 seconds (285.38 k allocations: 15.643 MiB, 7.34% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.192522 seconds (236.87 k allocations: 12.990 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.188867 seconds (236.87 k allocations: 12.929 MiB, 98.57% compilation time)
Running: hermite_quadrature with k=2
  0.140468 seconds (170.78 k allocations: 9.790 MiB, 98.44% compilation time)
Running: jacobi_quadrature with α=β=1
  9.847735 seconds (449.16 k allocations: 1.175 GiB, 15.61% gc time, 5.06% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.265210 seconds (271.55 k allocations: 15.079 MiB, 7.42% gc time, 98.51% compilation time)
Running: legendre_quadrature
  0.182753 seconds (187.55 k allocations: 10.817 MiB, 98.61% compilation time)
Running: lobatto_quadrature
  0.229079 seconds (208.03 k allocations: 22.976 MiB, 88.58% compilation time)
Running: radau_quadrature
  0.246065 seconds (207.18 k allocations: 20.844 MiB, 6.07% gc time, 84.06% compilation time)
Running: rectangle_rule_left
  0.029082 seconds (19.52 k allocations: 1.188 MiB, 99.36% compilation time)
Running: rectangle_rule_midpoint
  0.028995 seconds (25.36 k allocations: 1.591 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.027069 seconds (17.36 k allocations: 1.062 MiB, 99.46% compilation time)
Running: rombergs_method
  0.129468 seconds (132.58 k allocations: 7.622 MiB, 97.94% compilation time)
Running: simpsons_rule
  0.035993 seconds (31.90 k allocations: 1.853 MiB, 99.10% compilation time)
Running: simpsons38_rule
  0.041031 seconds (48.16 k allocations: 2.821 MiB, 99.03% compilation time)
Running: trapezoidal_rule
  0.038329 seconds (25.05 k allocations: 1.535 MiB, 99.33% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036036 seconds (30.87 k allocations: 1.877 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.267269 seconds (231.10 k allocations: 13.043 MiB, 6.96% gc time, 99.00% compilation time)
Running: chebyshev_quadrature with k=2
  0.302866 seconds (283.67 k allocations: 15.985 MiB, 98.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.230610 seconds (235.25 k allocations: 13.146 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.255535 seconds (235.25 k allocations: 12.971 MiB, 7.41% gc time, 94.81% compilation time)
Running: jacobi_quadrature with α=β=1
  2.801018 seconds (447.26 k allocations: 194.232 MiB, 4.41% gc time, 22.90% compilation time)
Running: legendre_quadrature
  0.189591 seconds (185.93 k allocations: 10.745 MiB, 97.86% compilation time)
Running: lobatto_quadrature
  0.227788 seconds (197.11 k allocations: 11.437 MiB, 97.48% compilation time)
Running: radau_quadrature
  0.302468 seconds (197.11 k allocations: 11.459 MiB, 27.29% gc time, 99.08% compilation time)
Running: rectangle_rule_left
  0.382309 seconds (19.34 k allocations: 1.173 MiB, 8.37% compilation time)
Running: rectangle_rule_midpoint
  0.024665 seconds (25.01 k allocations: 1.573 MiB, 99.33% compilation time)
Running: rectangle_rule_right
  0.165051 seconds (17.73 k allocations: 1.081 MiB, 15.94% compilation time)
Running: rombergs_method
  0.180103 seconds (145.02 k allocations: 8.483 MiB, 97.89% compilation time)
Running: simpsons_rule
  0.034934 seconds (28.23 k allocations: 1.758 MiB, 99.37% compilation time)
Running: simpsons38_rule
  0.036493 seconds (43.08 k allocations: 2.708 MiB, 99.41% compilation time)
Running: trapezoidal_rule
  0.025748 seconds (45.03 k allocations: 1.805 MiB, 95.42% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031110 seconds (31.64 k allocations: 1.826 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.184755 seconds (231.69 k allocations: 12.988 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.251756 seconds (284.30 k allocations: 15.892 MiB, 16.24% gc time, 98.10% compilation time)
Running: chebyshev_quadrature with k=3
  0.193870 seconds (235.84 k allocations: 13.071 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.188511 seconds (235.84 k allocations: 13.142 MiB, 98.23% compilation time)
Running: jacobi_quadrature with α=β=1
  2.665154 seconds (447.97 k allocations: 148.924 MiB, 5.46% gc time, 19.53% compilation time)
Running: legendre_quadrature
  0.188060 seconds (186.53 k allocations: 10.754 MiB, 98.54% compilation time)
Running: lobatto_quadrature
  0.195521 seconds (197.71 k allocations: 11.460 MiB, 98.15% compilation time)
Running: radau_quadrature
  0.247828 seconds (197.70 k allocations: 11.454 MiB, 21.90% gc time, 98.98% compilation time)
Running: rectangle_rule_left
  1.109278 seconds (19.59 k allocations: 1.186 MiB, 2.39% compilation time)
Running: rectangle_rule_midpoint
  0.030894 seconds (25.01 k allocations: 1.574 MiB, 80.34% compilation time)
Running: rectangle_rule_right
  1.031603 seconds (17.69 k allocations: 1.078 MiB, 2.59% compilation time)
Running: rombergs_method
  0.179661 seconds (135.49 k allocations: 7.815 MiB, 97.56% compilation time)
Running: simpsons_rule
  0.057361 seconds (28.93 k allocations: 1.785 MiB, 99.56% compilation time)
Running: simpsons38_rule
  0.048375 seconds (43.78 k allocations: 2.734 MiB, 99.34% compilation time)
Running: trapezoidal_rule
  0.031359 seconds (57.27 k allocations: 2.006 MiB, 93.48% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.229512 seconds (146.69 k allocations: 8.789 MiB, 99.86% compilation time)
Running: chebyshev_quadrature with k=1
  0.200189 seconds (69.93 k allocations: 2.205 MiB, 95.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.275864 seconds (105.09 k allocations: 2.868 MiB, 96.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.237366 seconds (92.57 k allocations: 2.654 MiB, 96.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.280990 seconds (72.10 k allocations: 2.248 MiB, 97.37% compilation time)
Running: jacobi_quadrature with α=β=1
  2.984010 seconds (480.07 k allocations: 167.765 MiB, 12.55% gc time, 20.98% compilation time)
Running: legendre_quadrature
  0.136376 seconds (18.73 k allocations: 1.094 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000188 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000137 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 47.648124 seconds (590.00 M allocations: 8.792 GiB, 3.18% gc time)
Running: rectangle_rule_midpoint
  0.000049 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.943306 seconds (592.75 M allocations: 8.833 GiB, 3.06% gc time)
Running: rombergs_method
  0.184367 seconds (20.51 k allocations: 1.165 MiB, 99.53% compilation time)
Running: simpsons_rule
  0.000038 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033587 seconds (463 allocations: 22.578 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.028564 seconds (179 allocations: 8.766 KiB, 99.54% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.586575 seconds (629.32 M allocations: 9.387 GiB, 2.73% gc time, 0.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.550960 seconds (413.94 k allocations: 22.950 MiB, 6.34% gc time, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
 27.818540 seconds (468.58 k allocations: 4.040 GiB, 2.38% gc time, 1.95% compilation time)
Running: chebyshev_quadrature with k=3
 12.979254 seconds (249.12 k allocations: 1.642 GiB, 2.41% gc time, 1.69% compilation time)
Running: chebyshev_quadrature with k=4
 18.586712 seconds (249.12 k allocations: 2.260 GiB, 1.26% gc time, 1.15% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 69.263398 seconds (484.00 k allocations: 13.254 GiB, 3.69% gc time, 0.58% compilation time)
Running: legendre_quadrature.
 14.945797 seconds (223.20 k allocations: 1.976 GiB, 0.91% gc time, 1.49% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.347349 seconds (8.23 M allocations: 13.383 GiB, 4.08% gc time, 0.48% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.353800 seconds (7.23 M allocations: 13.369 GiB, 3.84% gc time, 0.43% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.342454 seconds (22.25 k allocations: 1.347 MiB, 0.24% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.302392 seconds (30.45 k allocations: 1.884 MiB, 0.20% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.769115 seconds (22.45 k allocations: 1.357 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.801508 seconds (438.05 k allocations: 152.663 MiB, 9.56% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.486685 seconds (600.04 M allocations: 8.943 GiB, 5.55% gc time, 0.09% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.284385 seconds (600.05 M allocations: 8.943 GiB, 6.35% gc time, 0.10% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.397254 seconds (600.03 M allocations: 8.943 GiB, 5.85% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.108038 seconds (180.45 k allocations: 4.404 MiB, 82.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.277913 seconds (247.70 k allocations: 13.449 MiB, 97.23% compilation time)
Running: chebyshev_quadrature with k=2
  0.252110 seconds (272.34 k allocations: 14.523 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.236943 seconds (220.25 k allocations: 11.631 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.217934 seconds (220.25 k allocations: 11.626 MiB, 99.27% compilation time)
Running: jacobi_quadrature with α=β=1
  0.478291 seconds (388.84 k allocations: 34.972 MiB, 91.20% compilation time)
Running: laguerre_quadrature with k=2
  0.227472 seconds (180.54 k allocations: 10.477 MiB, 76.74% compilation time)
Running: legendre_quadrature
  0.148532 seconds (145.99 k allocations: 8.082 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.038736 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.052621 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.063486 seconds (18.88 k allocations: 1.122 MiB, 54.21% compilation time)
Running: rectangle_rule_midpoint
  0.058628 seconds (25.48 k allocations: 1.576 MiB, 68.05% compilation time)
Running: rectangle_rule_right
  0.058884 seconds (17.48 k allocations: 1.049 MiB, 54.60% compilation time)
Running: rombergs_method
  0.295084 seconds (172.65 k allocations: 9.888 MiB, 98.86% compilation time)
Running: simpsons_rule
  0.001788 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.050544 seconds (78.86 k allocations: 3.384 MiB, 95.77% compilation time)
Running: trapezoidal_rule
  0.201526 seconds (2.39 M allocations: 37.691 MiB, 17.54% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001959 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.131223 seconds (2.46 k allocations: 1.691 MiB, 97.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.134692 seconds (2.71 k allocations: 2.355 MiB, 95.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.141615 seconds (2.31 k allocations: 2.028 MiB, 95.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.121275 seconds (2.31 k allocations: 1.469 MiB, 97.18% compilation time)
Running: jacobi_quadrature with α=β=1
  8.087745 seconds (365.92 k allocations: 904.797 MiB, 2.10% gc time, 5.63% compilation time)
Running: legendre_quadrature
  0.071181 seconds (1.27 k allocations: 68.203 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000189 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000163 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.984557 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000477 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.248756 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084503 seconds (997 allocations: 56.672 KiB, 99.39% compilation time)
Running: simpsons_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000247 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000964 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000473 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.135586 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.125016 seconds (2.79 k allocations: 780.188 KiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.121294 seconds (2.39 k allocations: 661.047 KiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.121864 seconds (2.39 k allocations: 491.547 KiB, 99.30% compilation time)
Running: jacobi_quadrature with α=β=1
  3.221688 seconds (372.48 k allocations: 252.962 MiB, 4.64% gc time, 19.81% compilation time)
Running: legendre_quadrature
  0.111016 seconds (1.32 k allocations: 67.859 KiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.000097 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000061 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.552906 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000243 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  2.064683 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.117012 seconds (1.21 k allocations: 64.938 KiB, 99.44% compilation time)
Running: simpsons_rule
  0.000025 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000510 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
