Julia Version 1.6.0-DEV.1093
Commit 28330a2fef (2020-09-30 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_qjuXU4/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_qjuXU4/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04275849492499906 -0.16220804627052837; -0.04275849492499906 0.0 0.08787210153109032; 0.16220804627052837 -0.08787210153109032 0.0])
dAA = so3([0.0 -0.018225807837536672 -0.09153126063419235; 0.018225807837536672 0.0 0.08369540980917795; 0.09153126063419235 -0.08369540980917795 0.0])
dAA = so3([0.0 -0.1256514731250878 -0.243124747848237; 0.1256514731250878 0.0 -0.09890642433226392; 0.243124747848237 0.09890642433226392 0.0])
dAA = Quaternion(0.9992609165942687, [0.030619722794469725, 0.011459942626808977, 0.02021689536407673])
dAA = SO3([0.9995155974707469 -0.003309067474148248 -0.03094544368962976; 0.004240626371170095 0.9995383106166117 0.03008625429777777; 0.03083159906129828 -0.03020290850467797 0.9990681642496583])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9730028352302791 -0.02107776202438744 -0.22982865483198914; 0.06856681572871252 0.9772586116539346 0.20065940727772805; 0.22037258090484643 -0.2110007912218996 0.9523206349171844]), [-0.8787210153109031, -1.6220804627052836, -0.4275849492499906])
xj = SE3(SO3([0.9932682604687322 -0.09801389536743763 0.061736853339961054; 0.1063446333949109 0.9828668121505848 -0.15054450677805845; -0.04592365069896855 0.1560964634059589 0.9866736605477169]), [0.9890642433226391, -2.43124747848237, 1.2565147312508778])
Dx = SE3(SO3([0.9636242330329459 0.006423630021005634 0.26718359696848976; 0.09268026340110053 0.9296444925590494 -0.3566111134422621; -0.2506764972780051 0.36840175682531784 0.895232617413178]), [2.1330077396802207, -1.1854805327108406, 1.01216532971713])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
