Julia Version 1.6.0-DEV.1203
Commit 21e7486322 (2020-10-13 02:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed NBInclude â”€â”€â”€â”€â”€â”€â”€ v2.2.0
  Installed SoftGlobalScope â”€ v1.1.0
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [0db19996] + NBInclude v2.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [682c06a0] + JSON v0.21.1
  [0db19996] + NBInclude v2.2.0
  [69de0a69] + Parsers v1.0.11
  [b85f4697] + SoftGlobalScope v1.1.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [6462fe0b] + Sockets
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mSoftGlobalScope[32m âœ“[39m[39m
  [90mParsers[32m âœ“[39m[39m
  [90mJSON[32m âœ“[39m[39m
  NBInclude[32m âœ“[39m
4 dependencies successfully precompiled

    Testing NBInclude
Status `/tmp/jl_4X1l09/Project.toml`
  [682c06a0] JSON v0.21.1
  [0db19996] NBInclude v2.2.0
  [b85f4697] SoftGlobalScope v1.1.0
  [8dfed614] Test
Status `/tmp/jl_4X1l09/Manifest.toml`
  [682c06a0] JSON v0.21.1
  [0db19996] NBInclude v2.2.0
  [69de0a69] Parsers v1.0.11
  [b85f4697] SoftGlobalScope v1.1.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
â”Œ Warning: Assignment to `a` in soft scope is ambiguous because a global variable by the same name exists: `a` will be treated as a new local. Disambiguate by using `local a` to suppress this warning or `global a` to assign to the existing global variable.
â”” @ ~/.julia/packages/NBInclude/mNhzW/test/includes/scoping.ipynb:In[2]:4
Test Summary: | Pass  Total
Scoping Tests |    2      2
    Testing NBInclude tests passed 
