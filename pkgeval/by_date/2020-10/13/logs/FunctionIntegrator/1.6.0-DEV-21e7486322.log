Julia Version 1.6.0-DEV.1203
Commit 21e7486322 (2020-10-13 02:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mCompilerSupportLibraries_jll[32m âœ“[39m[39m
  [90mOpenSpecFun_jll[32m âœ“[39m[39m
  [90mSpecialFunctions[32m âœ“[39m[39m
  [90mFastGaussQuadrature[32m âœ“[39m[39m
  FunctionIntegrator[32m âœ“[39m
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_jL0riX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_jL0riX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.264113 seconds (289.22 k allocations: 13.533 MiB, 90.72% compilation time)
Running: chebyshev_quadrature with k=1
  1.701673 seconds (2.20 M allocations: 126.674 MiB, 4.87% gc time, 98.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.220935 seconds (409.38 k allocations: 23.559 MiB, 86.60% compilation time)
Running: chebyshev_quadrature with k=3
  0.253007 seconds (473.75 k allocations: 26.635 MiB, 5.10% gc time, 82.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.484066 seconds (418.55 k allocations: 23.258 MiB, 83.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 68.939289 seconds (34.88 M allocations: 2.927 GiB, 25.08% gc time, 89.17% compilation time)
Running: laguerre_quadrature with k=1
  3.091108 seconds (3.17 M allocations: 177.107 MiB, 2.57% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.792349 seconds (206.13 k allocations: 11.834 MiB, 94.93% compilation time)
Running: lobatto_quadrature
  0.451967 seconds (329.25 k allocations: 19.875 MiB, 98.34% compilation time)
Running: radau_quadrature
  1.363350 seconds (446.99 k allocations: 27.275 MiB, 59.74% gc time, 99.86% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 45.545876 seconds (100.02 M allocations: 1.491 GiB, 0.97% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.113686 seconds (172.46 k allocations: 3.827 MiB, 34.63% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.311281 seconds (100.02 M allocations: 1.491 GiB, 1.02% gc time, 0.07% compilation time)
Running: rombergs_method
  0.384512 seconds (722.80 k allocations: 41.724 MiB, 99.48% compilation time)
Running: simpsons_rule
  0.030911 seconds (46.55 k allocations: 2.532 MiB, 93.42% compilation time)
Running: simpsons38_rule
  0.073674 seconds (108.58 k allocations: 5.757 MiB, 97.09% compilation time)
Running: trapezoidal_rule
  0.313910 seconds (1.72 M allocations: 28.606 MiB, 6.56% gc time, 23.87% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.092434 seconds (29.80 k allocations: 1.768 MiB, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.448240 seconds (290.07 k allocations: 15.332 MiB, 6.29% gc time, 99.60% compilation time)
Running: chebyshev_quadrature with k=2
  0.190044 seconds (93.80 k allocations: 2.675 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=3
  0.159769 seconds (82.06 k allocations: 2.476 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.176176 seconds (64.67 k allocations: 2.122 MiB, 98.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.111678 seconds (503.81 k allocations: 161.842 MiB, 4.56% gc time, 21.02% compilation time)
Running: legendre_quadrature
  0.164461 seconds (41.18 k allocations: 2.370 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.024988 seconds (15.57 k allocations: 990.060 KiB, 99.29% compilation time)
Running: radau_quadrature
  0.024541 seconds (15.68 k allocations: 997.274 KiB, 99.37% compilation time)
Running: rectangle_rule_left
 16.434762 seconds (471.41 M allocations: 7.025 GiB, 8.66% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.875714 seconds (476.96 M allocations: 7.107 GiB, 8.78% gc time)
Running: rombergs_method
  0.418540 seconds (326.35 k allocations: 18.518 MiB, 99.91% compilation time)
Running: simpsons_rule
  0.000023 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.072811 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.073834 seconds (16.49 k allocations: 1.000 MiB, 99.82% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.017989 seconds (1.03 k allocations: 34.125 KiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.094638 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.115724 seconds (2.71 k allocations: 124.266 KiB, 85.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.099032 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.093600 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.256292 seconds (363.64 k allocations: 18.961 MiB, 99.23% compilation time)
Running: legendre_quadrature
  0.062718 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000051 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000351 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000249 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000340 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075054 seconds (1.04 k allocations: 56.531 KiB, 99.77% compilation time)
Running: simpsons_rule
  0.000021 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.024942 seconds (923 allocations: 39.281 KiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.017353 seconds (44.29 k allocations: 702.859 KiB, 90.55% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.109911 seconds (80.91 k allocations: 4.823 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.148267 seconds (230.61 k allocations: 12.967 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.183313 seconds (283.17 k allocations: 15.880 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.292148 seconds (234.76 k allocations: 13.158 MiB, 15.98% gc time, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.165418 seconds (234.76 k allocations: 13.047 MiB, 98.82% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.131698 seconds (446.72 k allocations: 163.203 MiB, 18.20% gc time, 20.60% compilation time)
Running: legendre_quadrature
  0.128096 seconds (185.44 k allocations: 10.707 MiB, 98.37% compilation time)
Running: lobatto_quadrature
  0.158844 seconds (196.61 k allocations: 11.410 MiB, 7.98% gc time, 98.84% compilation time)
Running: radau_quadrature
  0.145249 seconds (196.61 k allocations: 11.412 MiB, 98.71% compilation time)
Running: rectangle_rule_left
  0.612068 seconds (18.82 k allocations: 1.147 MiB, 3.59% compilation time)
Running: rectangle_rule_midpoint
  0.018345 seconds (24.67 k allocations: 1.555 MiB, 99.07% compilation time)
Running: rectangle_rule_right
  0.613564 seconds (17.39 k allocations: 1.062 MiB, 3.61% compilation time)
Running: rombergs_method
  0.108083 seconds (134.27 k allocations: 7.782 MiB, 97.36% compilation time)
Running: simpsons_rule
  0.025504 seconds (36.49 k allocations: 2.341 MiB, 99.26% compilation time)
Running: simpsons38_rule
  0.022503 seconds (42.37 k allocations: 2.678 MiB, 99.32% compilation time)
Running: trapezoidal_rule
  0.034279 seconds (42.32 k allocations: 1.671 MiB, 98.13% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.030071 seconds (66.94 k allocations: 2.959 MiB, 97.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.243526 seconds (237.20 k allocations: 13.033 MiB, 6.88% gc time, 99.28% compilation time)
Running: chebyshev_quadrature with k=2
  0.185933 seconds (290.20 k allocations: 15.872 MiB, 98.60% compilation time)
Running: chebyshev_quadrature with k=3
  0.315779 seconds (241.33 k allocations: 13.134 MiB, 99.43% compilation time)
Running: chebyshev_quadrature with k=4
  0.212185 seconds (241.34 k allocations: 13.123 MiB, 9.13% gc time, 99.17% compilation time)
Running: hermite_quadrature with k=2
 12.216586 seconds (20.10 M allocations: 1.056 GiB, 8.79% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.535451 seconds (455.90 k allocations: 49.394 MiB, 22.04% gc time, 51.11% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.189764 seconds (276.26 k allocations: 15.248 MiB, 13.95% gc time, 98.38% compilation time)
Running: legendre_quadrature
  0.245202 seconds (191.98 k allocations: 11.035 MiB, 99.12% compilation time)
Running: lobatto_quadrature
  0.318609 seconds (217.27 k allocations: 37.185 MiB, 6.79% gc time, 92.18% compilation time)
Running: radau_quadrature
  0.240109 seconds (213.85 k allocations: 29.847 MiB, 92.03% compilation time)
Running: rectangle_rule_left
  0.028378 seconds (21.73 k allocations: 1.293 MiB, 99.42% compilation time)
Running: rectangle_rule_midpoint
  0.024438 seconds (26.47 k allocations: 1.642 MiB, 99.42% compilation time)
Running: rectangle_rule_right
  0.023405 seconds (18.50 k allocations: 1.117 MiB, 99.35% compilation time)
Running: rombergs_method
  0.223889 seconds (136.74 k allocations: 7.829 MiB, 98.92% compilation time)
Running: simpsons_rule
  0.046701 seconds (43.97 k allocations: 2.609 MiB, 41.08% gc time, 99.41% compilation time)
Running: simpsons38_rule
  0.046109 seconds (57.34 k allocations: 3.063 MiB, 99.14% compilation time)
Running: trapezoidal_rule
  0.041704 seconds (28.35 k allocations: 1.595 MiB, 99.31% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.054426 seconds (50.91 k allocations: 2.619 MiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=1
  0.163924 seconds (232.72 k allocations: 12.830 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.311262 seconds (285.38 k allocations: 15.644 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.466549 seconds (236.87 k allocations: 12.928 MiB, 6.60% gc time, 99.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.167651 seconds (236.87 k allocations: 12.929 MiB, 98.72% compilation time)
Running: hermite_quadrature with k=2
  0.165996 seconds (170.78 k allocations: 9.790 MiB, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.913541 seconds (449.16 k allocations: 1.175 GiB, 23.53% gc time, 5.29% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.203681 seconds (271.55 k allocations: 15.060 MiB, 15.41% gc time, 98.41% compilation time)
Running: legendre_quadrature
  0.142620 seconds (187.55 k allocations: 10.818 MiB, 96.14% compilation time)
Running: lobatto_quadrature
  0.284758 seconds (208.03 k allocations: 22.920 MiB, 89.31% compilation time)
Running: radau_quadrature
  0.290349 seconds (207.18 k allocations: 20.844 MiB, 96.10% compilation time)
Running: rectangle_rule_left
  0.038926 seconds (19.52 k allocations: 1.188 MiB, 99.65% compilation time)
Running: rectangle_rule_midpoint
  0.023599 seconds (25.36 k allocations: 1.591 MiB, 99.43% compilation time)
Running: rectangle_rule_right
  0.028430 seconds (17.36 k allocations: 1.062 MiB, 99.57% compilation time)
Running: rombergs_method
  0.121431 seconds (132.59 k allocations: 7.623 MiB, 98.25% compilation time)
Running: simpsons_rule
  0.032906 seconds (39.30 k allocations: 2.442 MiB, 99.40% compilation time)
Running: simpsons38_rule
  0.049782 seconds (48.16 k allocations: 2.821 MiB, 99.43% compilation time)
Running: trapezoidal_rule
  0.018942 seconds (23.26 k allocations: 1.433 MiB, 98.93% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.021922 seconds (39.05 k allocations: 2.475 MiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.294958 seconds (231.10 k allocations: 13.042 MiB, 6.30% gc time, 92.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.225055 seconds (283.67 k allocations: 15.997 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.165773 seconds (235.25 k allocations: 13.204 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.218207 seconds (235.25 k allocations: 12.975 MiB, 9.22% gc time, 98.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.278268 seconds (447.26 k allocations: 194.232 MiB, 2.95% gc time, 22.29% compilation time)
Running: legendre_quadrature
  0.185595 seconds (185.93 k allocations: 10.857 MiB, 98.82% compilation time)
Running: lobatto_quadrature
  0.794427 seconds (197.11 k allocations: 11.439 MiB, 2.31% gc time, 99.71% compilation time)
Running: radau_quadrature
  0.334939 seconds (197.11 k allocations: 11.437 MiB, 99.32% compilation time)
Running: rectangle_rule_left
  0.344883 seconds (19.34 k allocations: 1.173 MiB, 6.99% compilation time)
Running: rectangle_rule_midpoint
  0.431862 seconds (25.01 k allocations: 1.573 MiB, 99.97% compilation time)
Running: rectangle_rule_right
  0.195065 seconds (17.73 k allocations: 1.081 MiB, 14.32% compilation time)
Running: rombergs_method
  0.108696 seconds (145.02 k allocations: 8.485 MiB, 93.04% compilation time)
Running: simpsons_rule
  0.021449 seconds (37.11 k allocations: 2.369 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.022430 seconds (43.08 k allocations: 2.708 MiB, 99.16% compilation time)
Running: trapezoidal_rule
  0.018167 seconds (43.25 k allocations: 1.703 MiB, 96.72% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.029179 seconds (38.85 k allocations: 2.409 MiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.196060 seconds (231.69 k allocations: 13.051 MiB, 8.23% gc time, 98.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.145188 seconds (284.30 k allocations: 15.895 MiB, 97.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.119750 seconds (235.84 k allocations: 13.067 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.132283 seconds (235.84 k allocations: 13.142 MiB, 98.19% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.040946 seconds (447.97 k allocations: 148.920 MiB, 11.92% gc time, 32.91% compilation time)
Running: legendre_quadrature
  0.425030 seconds (186.53 k allocations: 10.754 MiB, 99.57% compilation time)
Running: lobatto_quadrature
  0.255086 seconds (197.71 k allocations: 11.460 MiB, 99.13% compilation time)
Running: radau_quadrature
  0.202999 seconds (197.70 k allocations: 11.516 MiB, 5.29% gc time, 99.15% compilation time)
Running: rectangle_rule_left
  0.473177 seconds (19.59 k allocations: 1.186 MiB, 3.10% compilation time)
Running: rectangle_rule_midpoint
  0.014901 seconds (25.01 k allocations: 1.574 MiB, 99.00% compilation time)
Running: rectangle_rule_right
  0.537694 seconds (17.69 k allocations: 1.078 MiB, 2.83% compilation time)
Running: rombergs_method
  0.203226 seconds (135.49 k allocations: 7.815 MiB, 98.72% compilation time)
Running: simpsons_rule
  0.026041 seconds (37.60 k allocations: 2.389 MiB, 99.37% compilation time)
Running: simpsons38_rule
  0.032785 seconds (43.78 k allocations: 2.735 MiB, 99.02% compilation time)
Running: trapezoidal_rule
  0.633505 seconds (55.40 k allocations: 1.899 MiB, 99.85% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.390065 seconds (147.45 k allocations: 8.799 MiB, 90.55% compilation time)
Running: chebyshev_quadrature with k=1
  0.137962 seconds (69.93 k allocations: 2.205 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.154643 seconds (105.09 k allocations: 2.868 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.121805 seconds (92.57 k allocations: 2.654 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=4
  0.103575 seconds (72.10 k allocations: 2.248 MiB, 98.46% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.153996 seconds (480.20 k allocations: 167.772 MiB, 12.88% gc time, 36.10% compilation time)
Running: legendre_quadrature
  0.095809 seconds (18.73 k allocations: 1.095 MiB, 99.74% compilation time)
Running: lobatto_quadrature
  0.000090 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 17.113668 seconds (590.00 M allocations: 8.792 GiB, 8.66% gc time)
Running: rectangle_rule_midpoint
  0.000030 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.348131 seconds (592.75 M allocations: 8.833 GiB, 6.82% gc time)
Running: rombergs_method
  0.141299 seconds (20.51 k allocations: 1.165 MiB, 99.60% compilation time)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031259 seconds (463 allocations: 22.578 KiB, 96.67% compilation time)
Running: trapezoidal_rule
  0.013856 seconds (171 allocations: 7.859 KiB, 99.25% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.724563 seconds (209.93 M allocations: 3.138 GiB, 2.49% gc time, 0.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.426050 seconds (414.02 k allocations: 22.954 MiB, 95.60% compilation time)
Running: chebyshev_quadrature with k=2
 18.373583 seconds (468.66 k allocations: 4.040 GiB, 5.06% gc time, 3.80% compilation time)
Running: chebyshev_quadrature with k=3
  8.210641 seconds (249.12 k allocations: 1.642 GiB, 3.86% gc time, 2.79% compilation time)
Running: chebyshev_quadrature with k=4
 10.818181 seconds (249.12 k allocations: 2.260 GiB, 1.72% gc time, 2.15% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.448689 seconds (484.08 k allocations: 13.254 GiB, 8.74% gc time, 4.39% compilation time)
Running: legendre_quadrature.
  8.789742 seconds (223.28 k allocations: 1.976 GiB, 1.20% gc time, 4.00% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.121308 seconds (8.23 M allocations: 13.383 GiB, 19.67% gc time, 0.53% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.757296 seconds (7.23 M allocations: 13.369 GiB, 15.74% gc time, 1.89% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.693262 seconds (22.25 k allocations: 1.347 MiB, 0.27% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.830542 seconds (30.45 k allocations: 1.884 MiB, 0.31% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.003120 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.025491 seconds (438.13 k allocations: 152.678 MiB, 1.86% gc time, 14.48% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.371466 seconds (200.04 M allocations: 2.983 GiB, 2.13% gc time, 0.64% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.396187 seconds (600.05 M allocations: 8.943 GiB, 5.81% gc time, 0.11% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.327701 seconds (600.03 M allocations: 8.943 GiB, 3.86% gc time, 0.06% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.048244 seconds (109.56 k allocations: 4.131 MiB, 93.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.191475 seconds (247.70 k allocations: 13.452 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.201582 seconds (272.34 k allocations: 14.537 MiB, 96.68% compilation time)
Running: chebyshev_quadrature with k=3
  0.345971 seconds (220.25 k allocations: 11.663 MiB, 99.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.308851 seconds (220.25 k allocations: 11.661 MiB, 37.33% gc time, 99.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.313074 seconds (388.84 k allocations: 34.971 MiB, 93.76% compilation time)
Running: laguerre_quadrature with k=2
  0.158166 seconds (180.54 k allocations: 10.477 MiB, 76.01% compilation time)
Running: legendre_quadrature
  0.091296 seconds (145.98 k allocations: 8.073 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.019930 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017584 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.049722 seconds (18.88 k allocations: 1.121 MiB, 66.33% compilation time)
Running: rectangle_rule_midpoint
  0.034337 seconds (25.48 k allocations: 1.575 MiB, 65.32% compilation time)
Running: rectangle_rule_right
  0.038469 seconds (17.48 k allocations: 1.049 MiB, 55.81% compilation time)
Running: rombergs_method
  0.227370 seconds (172.15 k allocations: 9.828 MiB, 98.80% compilation time)
Running: simpsons_rule
  0.000502 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.041814 seconds (78.86 k allocations: 3.385 MiB, 97.59% compilation time)
Running: trapezoidal_rule
  0.141943 seconds (2.39 M allocations: 37.684 MiB, 42.41% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000828 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.117128 seconds (2.46 k allocations: 1.691 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.111358 seconds (2.71 k allocations: 2.355 MiB, 97.07% compilation time)
Running: chebyshev_quadrature with k=3
  0.087821 seconds (2.31 k allocations: 2.028 MiB, 95.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.097908 seconds (2.31 k allocations: 1.469 MiB, 97.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.634960 seconds (365.92 k allocations: 904.797 MiB, 6.17% gc time, 6.09% compilation time)
Running: legendre_quadrature
  0.059791 seconds (1.27 k allocations: 68.203 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000153 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000119 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.713778 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000364 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.796730 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.079759 seconds (997 allocations: 56.672 KiB, 99.48% compilation time)
Running: simpsons_rule
  0.000040 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001056 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000236 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.136643 seconds (2.53 k allocations: 579.203 KiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.108173 seconds (2.79 k allocations: 780.188 KiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.123847 seconds (2.39 k allocations: 661.047 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.125037 seconds (2.39 k allocations: 491.547 KiB, 99.37% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.804643 seconds (372.48 k allocations: 252.908 MiB, 13.60% compilation time)
Running: legendre_quadrature
  0.072228 seconds (1.32 k allocations: 67.859 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.005655 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000879 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.202382 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000067 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.058245 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.102165 seconds (1.21 k allocations: 64.938 KiB, 91.70% compilation time)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000419 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
