Julia Version 1.6.0-DEV.1210
Commit a1da84c3b0 (2020-10-13 13:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_EtF5xX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_EtF5xX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.154115 seconds (289.21 k allocations: 13.535 MiB, 88.39% compilation time)
Running: chebyshev_quadrature with k=1
  1.481864 seconds (2.19 M allocations: 126.565 MiB, 3.41% gc time, 98.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.195332 seconds (409.38 k allocations: 23.560 MiB, 84.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.304985 seconds (473.75 k allocations: 26.615 MiB, 7.87% gc time, 91.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.249502 seconds (418.56 k allocations: 23.256 MiB, 88.21% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 32.936186 seconds (34.87 M allocations: 2.927 GiB, 12.65% gc time, 78.56% compilation time)
Running: laguerre_quadrature with k=1
  2.360639 seconds (3.17 M allocations: 177.061 MiB, 3.89% gc time, 99.86% compilation time)
Running: legendre_quadrature
  0.208449 seconds (206.25 k allocations: 11.844 MiB, 16.64% gc time, 99.17% compilation time)
Running: lobatto_quadrature
  0.297241 seconds (329.68 k allocations: 19.902 MiB, 99.31% compilation time)
Running: radau_quadrature
  0.417965 seconds (447.64 k allocations: 27.309 MiB, 6.40% gc time, 86.83% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.295969 seconds (100.02 M allocations: 1.491 GiB, 1.11% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.100685 seconds (172.46 k allocations: 3.827 MiB, 24.03% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 43.031271 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time, 0.06% compilation time)
Running: rombergs_method
  0.365036 seconds (723.24 k allocations: 41.758 MiB, 99.41% compilation time)
Running: simpsons_rule
  0.038416 seconds (46.55 k allocations: 2.532 MiB, 46.59% gc time, 95.41% compilation time)
Running: simpsons38_rule
  0.083984 seconds (108.59 k allocations: 5.759 MiB, 97.77% compilation time)
Running: trapezoidal_rule
  0.228022 seconds (1.72 M allocations: 28.609 MiB, 17.31% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.051068 seconds (29.80 k allocations: 1.767 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.353804 seconds (290.33 k allocations: 15.352 MiB, 8.54% gc time, 99.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.126892 seconds (93.80 k allocations: 2.675 MiB, 98.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.159902 seconds (82.06 k allocations: 2.476 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=4
  0.140612 seconds (64.67 k allocations: 2.122 MiB, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.398812 seconds (504.28 k allocations: 161.851 MiB, 10.68% gc time, 33.50% compilation time)
Running: legendre_quadrature
  0.183888 seconds (41.30 k allocations: 2.381 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.016717 seconds (15.69 k allocations: 1000.544 KiB, 99.05% compilation time)
Running: radau_quadrature
  0.017366 seconds (15.80 k allocations: 1007.759 KiB, 99.11% compilation time)
Running: rectangle_rule_left
 13.387768 seconds (471.41 M allocations: 7.025 GiB, 6.74% gc time)
Running: rectangle_rule_midpoint
  0.000009 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.762443 seconds (476.96 M allocations: 7.107 GiB, 7.39% gc time)
Running: rombergs_method
  0.349177 seconds (326.63 k allocations: 18.536 MiB, 99.89% compilation time)
Running: simpsons_rule
  0.000022 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.049604 seconds (18.91 k allocations: 1.146 MiB, 99.79% compilation time)
Running: trapezoidal_rule
  0.045984 seconds (16.49 k allocations: 1.001 MiB, 99.81% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016354 seconds (1.03 k allocations: 34.125 KiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=1
  0.092755 seconds (2.46 k allocations: 116.359 KiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.100585 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.101540 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.098012 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.356104 seconds (364.10 k allocations: 19.000 MiB, 13.75% gc time, 99.46% compilation time)
Running: legendre_quadrature
  0.059618 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000071 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000033 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000305 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000209 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000297 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.060138 seconds (1.04 k allocations: 56.531 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000017 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.013851 seconds (923 allocations: 39.281 KiB, 99.77% compilation time)
Running: trapezoidal_rule
  0.009202 seconds (44.29 k allocations: 702.859 KiB, 90.61% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.039713 seconds (80.91 k allocations: 4.823 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.154143 seconds (230.61 k allocations: 12.982 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.353854 seconds (283.17 k allocations: 15.880 MiB, 10.46% gc time, 97.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.223248 seconds (234.76 k allocations: 13.158 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=4
  0.142030 seconds (234.76 k allocations: 13.049 MiB, 99.10% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.519999 seconds (447.19 k allocations: 163.211 MiB, 5.26% gc time, 21.52% compilation time)
Running: legendre_quadrature
  0.137684 seconds (185.44 k allocations: 10.707 MiB, 98.20% compilation time)
Running: lobatto_quadrature
  0.199105 seconds (196.77 k allocations: 11.418 MiB, 99.04% compilation time)
Running: radau_quadrature
  0.231547 seconds (196.76 k allocations: 11.419 MiB, 13.14% gc time, 99.15% compilation time)
Running: rectangle_rule_left
  0.621345 seconds (18.82 k allocations: 1.147 MiB, 3.89% compilation time)
Running: rectangle_rule_midpoint
  0.019075 seconds (24.67 k allocations: 1.555 MiB, 99.14% compilation time)
Running: rectangle_rule_right
  0.630060 seconds (17.39 k allocations: 1.062 MiB, 4.05% compilation time)
Running: rombergs_method
  0.105550 seconds (134.27 k allocations: 7.778 MiB, 97.18% compilation time)
Running: simpsons_rule
  0.035764 seconds (36.49 k allocations: 2.341 MiB, 99.56% compilation time)
Running: simpsons38_rule
  0.043120 seconds (42.37 k allocations: 2.678 MiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.019415 seconds (42.32 k allocations: 1.671 MiB, 96.38% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.039811 seconds (66.94 k allocations: 2.959 MiB, 97.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.162732 seconds (237.20 k allocations: 13.036 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.240363 seconds (290.20 k allocations: 15.887 MiB, 10.20% gc time, 98.52% compilation time)
Running: chebyshev_quadrature with k=3
  0.173438 seconds (241.34 k allocations: 13.181 MiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.124719 seconds (241.34 k allocations: 13.123 MiB, 98.50% compilation time)
Running: hermite_quadrature with k=2
 15.253543 seconds (20.10 M allocations: 1.056 GiB, 11.29% gc time, 99.99% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.537887 seconds (456.36 k allocations: 49.417 MiB, 42.58% gc time, 51.79% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.416291 seconds (276.26 k allocations: 15.248 MiB, 32.99% gc time, 99.21% compilation time)
Running: legendre_quadrature
  0.139021 seconds (191.98 k allocations: 11.035 MiB, 98.72% compilation time)
Running: lobatto_quadrature
  0.289658 seconds (217.42 k allocations: 37.193 MiB, 3.59% gc time, 89.44% compilation time)
Running: radau_quadrature
  0.188243 seconds (214.01 k allocations: 29.880 MiB, 89.73% compilation time)
Running: rectangle_rule_left
  0.071792 seconds (21.73 k allocations: 1.293 MiB, 99.80% compilation time)
Running: rectangle_rule_midpoint
  0.029780 seconds (26.47 k allocations: 1.642 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.048129 seconds (18.50 k allocations: 1.117 MiB, 99.74% compilation time)
Running: rombergs_method
  0.358252 seconds (136.74 k allocations: 7.803 MiB, 7.85% gc time, 99.36% compilation time)
Running: simpsons_rule
  0.150748 seconds (43.97 k allocations: 2.609 MiB, 99.82% compilation time)
Running: simpsons38_rule
  0.031362 seconds (57.34 k allocations: 3.063 MiB, 98.66% compilation time)
Running: trapezoidal_rule
  0.019303 seconds (28.35 k allocations: 1.595 MiB, 98.73% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025348 seconds (50.91 k allocations: 2.619 MiB, 97.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.152948 seconds (232.72 k allocations: 12.830 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.193202 seconds (285.38 k allocations: 15.644 MiB, 8.91% gc time, 98.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.328716 seconds (236.87 k allocations: 12.928 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.171378 seconds (236.87 k allocations: 12.929 MiB, 98.64% compilation time)
Running: hermite_quadrature with k=2
  0.144747 seconds (170.78 k allocations: 9.790 MiB, 98.52% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  8.651338 seconds (449.62 k allocations: 1.175 GiB, 31.98% gc time, 5.03% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.283608 seconds (271.55 k allocations: 15.060 MiB, 5.62% gc time, 98.78% compilation time)
Running: legendre_quadrature
  0.248292 seconds (187.55 k allocations: 10.818 MiB, 99.04% compilation time)
Running: lobatto_quadrature
  0.190790 seconds (208.19 k allocations: 22.927 MiB, 94.09% compilation time)
Running: radau_quadrature
  0.221162 seconds (207.34 k allocations: 20.852 MiB, 4.26% gc time, 91.64% compilation time)
Running: rectangle_rule_left
  0.018771 seconds (19.52 k allocations: 1.188 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.030890 seconds (25.36 k allocations: 1.591 MiB, 99.58% compilation time)
Running: rectangle_rule_right
  0.031033 seconds (17.36 k allocations: 1.062 MiB, 99.54% compilation time)
Running: rombergs_method
  0.115339 seconds (132.58 k allocations: 7.622 MiB, 97.99% compilation time)
Running: simpsons_rule
  0.037463 seconds (39.30 k allocations: 2.442 MiB, 99.44% compilation time)
Running: simpsons38_rule
  0.034558 seconds (48.16 k allocations: 2.821 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.014040 seconds (23.26 k allocations: 1.433 MiB, 98.39% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024288 seconds (39.05 k allocations: 2.475 MiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=1
  0.142855 seconds (231.10 k allocations: 13.042 MiB, 10.16% gc time, 98.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.138286 seconds (283.67 k allocations: 15.997 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.118215 seconds (235.25 k allocations: 13.142 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.206986 seconds (235.25 k allocations: 12.976 MiB, 9.55% gc time, 98.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.374811 seconds (447.72 k allocations: 194.256 MiB, 7.00% gc time, 29.97% compilation time)
Running: legendre_quadrature
  0.124120 seconds (185.93 k allocations: 10.732 MiB, 98.13% compilation time)
Running: lobatto_quadrature
  0.261391 seconds (197.26 k allocations: 11.447 MiB, 85.80% compilation time)
Running: radau_quadrature
  0.208863 seconds (197.26 k allocations: 11.445 MiB, 7.50% gc time, 93.10% compilation time)
Running: rectangle_rule_left
  0.339021 seconds (19.34 k allocations: 1.173 MiB, 8.28% compilation time)
Running: rectangle_rule_midpoint
  0.063891 seconds (25.01 k allocations: 1.573 MiB, 99.77% compilation time)
Running: rectangle_rule_right
  0.178605 seconds (17.73 k allocations: 1.081 MiB, 29.74% compilation time)
Running: rombergs_method
  0.100314 seconds (145.03 k allocations: 8.489 MiB, 96.76% compilation time)
Running: simpsons_rule
  0.019817 seconds (37.11 k allocations: 2.369 MiB, 98.88% compilation time)
Running: simpsons38_rule
  0.026225 seconds (43.08 k allocations: 2.708 MiB, 99.15% compilation time)
Running: trapezoidal_rule
  0.021503 seconds (43.25 k allocations: 1.703 MiB, 96.86% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.016438 seconds (38.85 k allocations: 2.409 MiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.195307 seconds (231.69 k allocations: 12.988 MiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=2
  0.186450 seconds (284.30 k allocations: 15.895 MiB, 9.38% gc time, 98.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.126211 seconds (235.84 k allocations: 13.067 MiB, 98.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.293198 seconds (235.84 k allocations: 13.143 MiB, 99.33% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.650514 seconds (448.43 k allocations: 148.940 MiB, 3.77% gc time, 27.43% compilation time)
Running: legendre_quadrature
  0.125071 seconds (186.53 k allocations: 10.750 MiB, 98.06% compilation time)
Running: lobatto_quadrature
  0.153658 seconds (197.86 k allocations: 11.468 MiB, 98.44% compilation time)
Running: radau_quadrature
  0.259658 seconds (197.85 k allocations: 11.462 MiB, 7.27% gc time, 99.06% compilation time)
Running: rectangle_rule_left
  0.599998 seconds (19.59 k allocations: 1.186 MiB, 3.52% compilation time)
Running: rectangle_rule_midpoint
  0.014309 seconds (25.01 k allocations: 1.574 MiB, 98.87% compilation time)
Running: rectangle_rule_right
  0.610796 seconds (17.69 k allocations: 1.078 MiB, 2.40% compilation time)
Running: rombergs_method
  0.107800 seconds (135.49 k allocations: 7.878 MiB, 97.05% compilation time)
Running: simpsons_rule
  0.022260 seconds (37.60 k allocations: 2.389 MiB, 99.29% compilation time)
Running: simpsons38_rule
  0.027320 seconds (43.78 k allocations: 2.735 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.020863 seconds (55.40 k allocations: 1.899 MiB, 95.36% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.165712 seconds (147.46 k allocations: 8.795 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.238810 seconds (69.93 k allocations: 2.205 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.120430 seconds (105.09 k allocations: 2.868 MiB, 97.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.130293 seconds (92.57 k allocations: 2.654 MiB, 97.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.169787 seconds (72.10 k allocations: 2.248 MiB, 98.63% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.621197 seconds (480.57 k allocations: 167.807 MiB, 3.19% gc time, 17.18% compilation time)
Running: legendre_quadrature
  0.123594 seconds (18.73 k allocations: 1.094 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000108 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000039 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.120233 seconds (590.00 M allocations: 8.792 GiB, 8.90% gc time)
Running: rectangle_rule_midpoint
  0.000037 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.757948 seconds (592.75 M allocations: 8.833 GiB, 6.04% gc time)
Running: rombergs_method
  0.110886 seconds (20.51 k allocations: 1.165 MiB, 99.47% compilation time)
Running: simpsons_rule
  0.000045 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026109 seconds (463 allocations: 22.578 KiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.019215 seconds (171 allocations: 7.859 KiB, 99.42% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.138420 seconds (209.93 M allocations: 3.138 GiB, 1.55% gc time, 0.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.533933 seconds (414.15 k allocations: 22.965 MiB, 4.99% gc time, 99.38% compilation time)
Running: chebyshev_quadrature with k=2
 17.951252 seconds (468.79 k allocations: 4.040 GiB, 3.01% gc time, 2.89% compilation time)
Running: chebyshev_quadrature with k=3
  7.867181 seconds (249.12 k allocations: 1.642 GiB, 4.42% gc time, 3.45% compilation time)
Running: chebyshev_quadrature with k=4
 11.103110 seconds (249.12 k allocations: 2.261 GiB, 1.88% gc time, 2.83% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 38.482154 seconds (484.64 k allocations: 13.254 GiB, 15.16% gc time, 1.97% compilation time)
Running: legendre_quadrature.
  9.537772 seconds (223.40 k allocations: 1.976 GiB, 1.04% gc time, 3.46% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.568321 seconds (8.23 M allocations: 13.383 GiB, 19.68% gc time, 0.76% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.872626 seconds (7.23 M allocations: 13.369 GiB, 18.60% gc time, 0.77% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.529861 seconds (22.25 k allocations: 1.347 MiB, 0.26% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.622247 seconds (30.45 k allocations: 1.884 MiB, 0.37% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.091718 seconds (22.45 k allocations: 1.357 MiB, 0.24% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.963389 seconds (438.25 k allocations: 152.688 MiB, 2.04% gc time, 14.69% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.571042 seconds (200.04 M allocations: 2.983 GiB, 2.28% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.518031 seconds (600.05 M allocations: 8.943 GiB, 6.07% gc time, 0.36% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.998416 seconds (600.03 M allocations: 8.943 GiB, 4.02% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.047275 seconds (109.56 k allocations: 4.132 MiB, 95.36% compilation time)
Running: chebyshev_quadrature with k=1
  0.186118 seconds (247.70 k allocations: 13.448 MiB, 98.40% compilation time)
Running: chebyshev_quadrature with k=2
  0.208146 seconds (272.34 k allocations: 14.521 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=3
  0.160993 seconds (220.25 k allocations: 11.633 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.278749 seconds (220.25 k allocations: 11.661 MiB, 49.80% gc time, 99.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.296140 seconds (389.30 k allocations: 35.025 MiB, 92.96% compilation time)
Running: laguerre_quadrature with k=2
  0.154464 seconds (180.54 k allocations: 10.477 MiB, 76.52% compilation time)
Running: legendre_quadrature
  0.093472 seconds (145.98 k allocations: 8.073 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.020308 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.016544 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.048355 seconds (18.88 k allocations: 1.121 MiB, 65.37% compilation time)
Running: rectangle_rule_midpoint
  0.046329 seconds (25.48 k allocations: 1.575 MiB, 77.15% compilation time)
Running: rectangle_rule_right
  0.036765 seconds (17.48 k allocations: 1.049 MiB, 56.26% compilation time)
Running: rombergs_method
  0.263625 seconds (172.17 k allocations: 9.829 MiB, 98.99% compilation time)
Running: simpsons_rule
  0.000288 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.078691 seconds (78.86 k allocations: 3.385 MiB, 98.75% compilation time)
Running: trapezoidal_rule
  0.109039 seconds (2.39 M allocations: 37.684 MiB, 37.11% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.001031 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.112971 seconds (2.46 k allocations: 1.691 MiB, 98.01% compilation time)
Running: chebyshev_quadrature with k=2
  0.142956 seconds (2.71 k allocations: 2.355 MiB, 97.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.123906 seconds (2.31 k allocations: 2.028 MiB, 97.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.126349 seconds (2.31 k allocations: 1.469 MiB, 97.88% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.275536 seconds (366.38 k allocations: 904.821 MiB, 6.53% gc time, 14.88% compilation time)
Running: legendre_quadrature
  0.084494 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000187 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000107 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.734056 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000341 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.893923 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.136095 seconds (997 allocations: 56.672 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000066 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001118 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000237 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.189909 seconds (2.53 k allocations: 579.203 KiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.148679 seconds (2.79 k allocations: 780.188 KiB, 97.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.124029 seconds (2.39 k allocations: 661.047 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.112633 seconds (2.39 k allocations: 491.547 KiB, 99.38% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.625089 seconds (372.94 k allocations: 252.932 MiB, 15.94% compilation time)
Running: legendre_quadrature
  0.081272 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000125 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000066 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.338009 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000118 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.187263 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.105064 seconds (1.21 k allocations: 64.938 KiB, 99.62% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000435 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
