Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_wSnzIY/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_wSnzIY/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0020556460013001292 0.042024459812670084; -0.0020556460013001292 0.0 0.09017840591415272; -0.042024459812670084 -0.09017840591415272 0.0])
dAA = so3([0.0 0.059694017509851406 0.08387418477814906; -0.059694017509851406 0.0 0.09958073800314877; -0.08387418477814906 -0.09958073800314877 0.0])
dAA = so3([0.0 -0.036381030749009606 -0.00890576382156153; 0.036381030749009606 0.0 -0.025155927254052798; 0.00890576382156153 0.025155927254052798 0.0])
dAA = Quaternion(0.9942245125862835, [0.04450138557246225, 0.09431551519201878, 0.025334341293237334])
dAA = SO3([0.994764789964265 -0.017033765586155384 0.10076141859515454; 0.03463828938964271 0.9838437417553897 -0.17564646514209709; -0.09614157038197062 0.17821712218165364 0.9792831336267253])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9672328170508291 0.12024326772499179 0.22361179348758284; -0.1718894716800409 0.9583241030256063 0.22818615883905724; -0.1868547220315127 -0.25914565426991626 0.9475910735794967]), [-0.9017840591415272, 0.4202445981267008, -0.020556460013001293])
xj = SE3(SO3([0.8831971257631086 -0.08832755759698069 0.4606094653963765; 0.19634048172329044 0.9615367624098973 -0.19208714108695293; -0.4259263460745883 0.2600870952262814 0.8665687800840192]), [0.25155927254052796, -0.08905763821561528, 0.363810307490096])
Dx = SE3(SO3([0.9000947312918908 -0.2993098603318116 0.3166118794497929; 0.40473328610645853 0.8434426207474054 -0.35326408340534177; -0.16130852989859665 0.4461145066178638 0.8803189224179232]), [1.1312744665600245, -0.449001815245609, 0.5059079677718145])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
