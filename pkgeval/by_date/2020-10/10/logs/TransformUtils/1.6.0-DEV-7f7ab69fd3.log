Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_0Ut0GW/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_0Ut0GW/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07491057296952779 0.0005512404157540983; 0.07491057296952779 0.0 0.135412109662099; -0.0005512404157540983 -0.135412109662099 0.0])
dAA = so3([0.0 -0.07269299818524994 -0.07362497297074848; 0.07269299818524994 0.0 -0.18986607187211677; 0.07362497297074848 0.18986607187211677 0.0])
dAA = so3([0.0 -0.12206605800382792 0.01560646721703219; 0.12206605800382792 0.0 -0.1783397874786853; -0.01560646721703219 0.1783397874786853 0.0])
dAA = Quaternion(0.995195101270624, [-0.03482067410852048, 0.006890049742548425, 0.09125107273958857])
dAA = SO3([0.9877026545724659 0.11095132048787208 -0.11015112633333254; -0.10146955363954642 0.9909159903578799 0.08825774604675309; 0.11894282590680069 -0.07599542443502404 0.9899885351004045])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9673538792117916 -0.21564072631647327 -0.13313733333517835; 0.13037958776955041 0.8739480059763521 -0.46820513233304056; 0.21731920179068537 0.4355616603922593 0.8735321428141025]), [-1.3541210966209898, 0.005512404157540983, 0.7491057296952779])
xj = SE3(SO3([0.8970887473535415 -0.44173298123858495 0.010185904855528751; 0.43335749163853005 0.8841099101734191 0.17478830388189684; -0.0862152179862425 -0.15238648240320032 0.9845533485638875]), [1.783397874786853, 0.15606467217032188, 1.220660580038279])
Dx = SE3(SO3([0.9055670285113931 -0.34515873606510405 0.2466045494125891; 0.14773100314558574 0.8015480046753474 0.5793930849695813; -0.3976479694184859 -0.4882481368309659 0.7768460911264505]), [3.157198014410312, -0.3396108018196936, -0.07629193483523])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
