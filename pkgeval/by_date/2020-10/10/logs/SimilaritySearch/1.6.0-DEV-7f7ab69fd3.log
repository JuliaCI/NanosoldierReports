Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed JSON ─────────────── v0.21.1
  Installed StatsBase ────────── v0.32.2
  Installed DataStructures ───── v0.17.20
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_ucILB1/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ucILB1/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(14, 0.0030792952f0), Item(17, 0.038047194f0), Item(20, 0.07329261f0), Item(19, 0.0822736f0)])
Vsorted = Item[Item(14, 0.0030792952f0), Item(17, 0.038047194f0), Item(20, 0.07329261f0), Item(19, 0.0822736f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004646778106689453, 0.0037965695063273113, 301.0, 50.57345453836024))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033986727396647137, 0.003342135747273763, 301.0, 73.62718188762665))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003908570607503255, 0.004296334584554037, 301.0, 41.288724422454834))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004045891761779785, 0.003678297996520996, 301.0, 9.251332268002443))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0034078439076741535, 0.005820830663045247, 301.0, 45.839345490559936))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.2838185628255205e-5, 1.483758290608724e-5, 301.0, 182.5206367224455))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.848075866699219e-5, 0.009161098798116048, 300.0, 28.641292442567647)
p = PerformanceResult(1.0, 1.0, 1.0, 3.619988759358724e-5, 1.9900004069010417e-5, 300.0, 28.641292442567647)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00373837153116862, 0.0032162030537923178, 300.0, 1.7256665635686659)
p = PerformanceResult(1.0, 1.0, 1.0, 2.9714902242024738e-5, 1.5401840209960936e-5, 300.0, 1.7256665635686659)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.848075866699219e-5, 0.009161098798116048, 300.0, 28.641292442567647), PerformanceResult(1.0, 1.0, 1.0, 3.619988759358724e-5, 1.9900004069010417e-5, 300.0, 28.641292442567647), PerformanceResult(1.0, 1.0, 1.0, 0.00373837153116862, 0.0032162030537923178, 300.0, 1.7256665635686659), PerformanceResult(1.0, 1.0, 1.0, 2.9714902242024738e-5, 1.5401840209960936e-5, 300.0, 1.7256665635686659))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008206041653951009, 0.0055326382319132485, 346.6333333333333, 28660.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008900809288024902, 0.0034624973932902018, 302.8, 6961.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6951560974121092e-5, 7.5658162434895836e-6, 96.6, 50.57345453836024))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.675287882486979e-5, 8.169809977213541e-6, 88.56666666666666, 73.62718188762665))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.750787099202474e-5, 8.567174275716145e-6, 92.76666666666667, 41.27526235580444))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.651777903238932e-5, 6.48339589436849e-5, 97.76666666666667, 45.83712006174028))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8233333333333331, 0.8233333333333331, 0.8233333333333331, 1.8517176310221355e-5, 2.4636586507161457e-5, 72.66666666666667, 191.1316793113947))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-11T03:29:05.503
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8990000000000002, 0.8990000000000002, 0.8990000000000002, 1.7364025115966796e-5, 1.581907272338867e-5, 154.81, 50.17886247788556))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6069412231445314e-5, 1.1849403381347657e-5, 158.67, 0.0))
*** advance 1 from 1000; 2020-10-11T03:29:06.193
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9145555555555557, 0.914, 0.9142631578947369, 1.5447139739990236e-5, 1.5518665313720704e-5, 152.87, 74.52527823671699))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.444101333618164e-5, 1.1179447174072266e-5, 156.49, 0.0))
*** advance 1 from 1000; 2020-10-11T03:29:06.761
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9191428571428572, 0.916, 0.9173560371517029, 1.746654510498047e-5, 2.15601921081543e-5, 153.58, 39.725328117609024))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7626285552978517e-5, 1.8320083618164063e-5, 157.29, 0.0))
*** advance 1 from 1000; 2020-10-11T03:29:07.307
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9080000000000001, 0.9080000000000001, 0.9080000000000001, 7.904052734375e-5, 0.0002334117889404297, 155.64, 44.899036563700065))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.5809745788574215e-5, 0.00020844936370849608, 159.66, 0.0))
*** advance 1 from 1000; 2020-10-11T03:29:07.726
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8885555555555557, 0.8880000000000001, 0.888263157894737, 2.556800842285156e-5, 7.096052169799805e-5, 153.49, 198.4978198185563))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.436399459838867e-5, 7.431983947753907e-5, 157.29, 0.0))
*** advance 1 from 1000; 2020-10-11T03:29:08.901
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8990000000000002, 0.8990000000000002, 0.8990000000000002, 2.0132064819335937e-5, 4.626035690307617e-5, 154.81, 50.18837821658235))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1016597747802736e-5, 3.782033920288086e-5, 158.67, 0.014752289047464728))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:10.798
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.8129999999999998, 0.8129999999999998, 0.8129999999999998, 0.0015923476219177246, 6.582975387573243e-5, 197.46, 182.36666876077652))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:11.680
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.8140000000000002, 0.8140000000000002, 0.8140000000000002, 0.0015359711647033691, 6.328105926513672e-5, 199.29, 103.54127192497253))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:12.462
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6829999999999999, 0.6829999999999999, 0.6829999999999999, 0.0015315723419189453, 6.102800369262695e-5, 298.0, 0.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:13.273
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9590000000000001, 0.9590000000000001, 0.9590000000000001, 0.0017105603218078613, 1.1751651763916015e-5, 216.69, 595.2000207602978))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:14.411
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5660000000000001, 0.5660000000000001, 0.5660000000000001, 0.0016230463981628418, 0.00034091949462890627, 252.72, 2360.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:15.253
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37999999999999995, 0.37999999999999995, NaN, 0.0018175601959228515, 0.0002533888816833496, 240.26, 3674.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-11T03:29:16.122
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6190000000000001, 0.6190000000000001, 0.6190000000000001, 0.001864938735961914, 1.8718242645263673e-5, 246.24, 2344.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0588235294117645,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9662202380952384,"seconds":0.002181345596909523,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5,"distances_sum":583.9857514202595}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0588235294117645,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9662202380952384,"seconds":0.002181345596909523,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5,"distances_sum":583.9857514202595}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.685554668794892, conf: {"restarts":12}, perf: {"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":1.8211081624031067e-5,"exhaustive_search_seconds":4.578381776809692e-6,"evaluations":58.734375,"distances_sum":302.93842999637127}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.740898475065256, conf: {"restarts":11}, perf: {"precision":0.906249999999999,"recall":0.906249999999999,"f1":0.906249999999999,"seconds":1.7676502466201782e-5,"exhaustive_search_seconds":4.578381776809692e-6,"evaluations":56.8671875,"distances_sum":303.82874742150307}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.740898475065256,"state":{"restarts":11},"perf":{"precision":0.906249999999999,"recall":0.906249999999999,"f1":0.906249999999999,"seconds":1.7676502466201782e-5,"exhaustive_search_seconds":4.578381776809692e-6,"evaluations":56.8671875,"distances_sum":303.82874742150307}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.740898475065256,"state":{"restarts":11},"perf":{"precision":0.906249999999999,"recall":0.906249999999999,"f1":0.906249999999999,"seconds":1.7676502466201782e-5,"exhaustive_search_seconds":4.578381776809692e-6,"evaluations":56.8671875,"distances_sum":303.82874742150307}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.740898475065256,"state":{"restarts":11},"perf":{"precision":0.906249999999999,"recall":0.906249999999999,"f1":0.906249999999999,"seconds":1.7676502466201782e-5,"exhaustive_search_seconds":4.578381776809692e-6,"evaluations":56.8671875,"distances_sum":303.82874742150307}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888878, conf: {"restarts":21}, perf: {"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":5.443952977657318e-5,"exhaustive_search_seconds":2.1342188119888306e-5,"evaluations":196.203125,"distances_sum":125.43529279250652}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8654513888888878,"state":{"restarts":21},"perf":{"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":5.443952977657318e-5,"exhaustive_search_seconds":2.1342188119888306e-5,"evaluations":196.203125,"distances_sum":125.43529279250652}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8654513888888878,"state":{"restarts":21},"perf":{"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":5.443952977657318e-5,"exhaustive_search_seconds":2.1342188119888306e-5,"evaluations":196.203125,"distances_sum":125.43529279250652}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8567708333333321, conf: {"restarts":34}, perf: {"precision":0.8567708333333321,"recall":0.8567708333333321,"f1":0.8567708333333321,"seconds":0.00017383135855197906,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":410.75,"distances_sum":58.01672336272895}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555547, conf: {"restarts":17}, perf: {"precision":0.8602430555555547,"recall":0.8602430555555547,"f1":0.8602430555555547,"seconds":0.00019852444529533386,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":268.2734375,"distances_sum":57.63764391839504}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444434, conf: {"restarts":14}, perf: {"precision":0.8506944444444434,"recall":0.8506944444444434,"f1":null,"seconds":8.224323391914368e-5,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":241.8984375,"distances_sum":58.48318464215845}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777766, conf: {"restarts":18}, perf: {"precision":0.8480902777777766,"recall":0.8480902777777766,"f1":0.8480902777777766,"seconds":8.854828774929047e-5,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":282.7890625,"distances_sum":58.01505235955119}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.848958333333332, conf: {"restarts":23}, perf: {"precision":0.848958333333332,"recall":0.848958333333332,"f1":null,"seconds":9.021535515785217e-5,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":326.21875,"distances_sum":58.243521962314844}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555547, conf: {"restarts":28}, perf: {"precision":0.8446180555555547,"recall":0.8446180555555547,"f1":0.8446180555555547,"seconds":7.958151400089264e-5,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":360.96875,"distances_sum":58.10317439213395}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444432, conf: {"restarts":15}, perf: {"precision":0.8428819444444432,"recall":0.8428819444444432,"f1":0.8428819444444432,"seconds":7.962249219417572e-5,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":248.609375,"distances_sum":58.286825944669545}, best_list's length: 12, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555547,"state":{"restarts":17},"perf":{"precision":0.8602430555555547,"recall":0.8602430555555547,"f1":0.8602430555555547,"seconds":0.00019852444529533386,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":268.2734375,"distances_sum":57.63764391839504}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555547,"state":{"restarts":17},"perf":{"precision":0.8602430555555547,"recall":0.8602430555555547,"f1":0.8602430555555547,"seconds":0.00019852444529533386,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":268.2734375,"distances_sum":57.63764391839504}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555547,"state":{"restarts":17},"perf":{"precision":0.8602430555555547,"recall":0.8602430555555547,"f1":0.8602430555555547,"seconds":0.00019852444529533386,"exhaustive_search_seconds":0.00022742897272109985,"evaluations":268.2734375,"distances_sum":57.63764391839504}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(17), SatNeighborhood(32), 2020-10-11T03:29:23.272
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6583, 0.02428153f0), Item(3164, 0.026154356f0), Item(4364, 0.03313161f0), Item(2002, 0.03351803f0), Item(3890, 0.03436819f0), Item(1441, 0.041592307f0), Item(3294, 0.052860904f0), Item(1616, 0.053733647f0), Item(8413, 0.05432458f0), Item(3460, 0.06283884f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.074626865671642, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9525557775557779,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.375,"distances_sum":559.5692076832056}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.074626865671642,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9525557775557779,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.375,"distances_sum":559.5692076832056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.074626865671642,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9525557775557779,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.375,"distances_sum":559.5692076832056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.86114247008354, conf: {"bsize":4}, perf: {"precision":0.9913194444444442,"recall":0.9913194444444442,"f1":0.9913194444444442,"seconds":1.2503936886787415e-5,"exhaustive_search_seconds":4.8354268074035645e-6,"evaluations":34.6015625,"distances_sum":288.66623201034963}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.108930323846909, conf: {"bsize":2}, perf: {"precision":0.9479166666666657,"recall":0.9479166666666657,"f1":0.9479166666666657,"seconds":1.1226162314414978e-5,"exhaustive_search_seconds":4.8354268074035645e-6,"evaluations":31.84375,"distances_sum":291.01286860369146}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.108930323846909,"state":{"bsize":2},"perf":{"precision":0.9479166666666657,"recall":0.9479166666666657,"f1":0.9479166666666657,"seconds":1.1226162314414978e-5,"exhaustive_search_seconds":4.8354268074035645e-6,"evaluations":31.84375,"distances_sum":291.01286860369146}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.108930323846909,"state":{"bsize":2},"perf":{"precision":0.9479166666666657,"recall":0.9479166666666657,"f1":0.9479166666666657,"seconds":1.1226162314414978e-5,"exhaustive_search_seconds":4.8354268074035645e-6,"evaluations":31.84375,"distances_sum":291.01286860369146}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.108930323846909,"state":{"bsize":2},"perf":{"precision":0.9479166666666657,"recall":0.9479166666666657,"f1":0.9479166666666657,"seconds":1.1226162314414978e-5,"exhaustive_search_seconds":4.8354268074035645e-6,"evaluations":31.84375,"distances_sum":291.01286860369146}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.535885167464116,"state":{"bsize":2},"perf":{"precision":0.9244791666666659,"recall":0.9244791666666659,"f1":0.9244791666666659,"seconds":2.286769449710846e-5,"exhaustive_search_seconds":2.1008774638175964e-5,"evaluations":60.4140625,"distances_sum":121.33146303612739}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.535885167464116,"state":{"bsize":2},"perf":{"precision":0.9244791666666659,"recall":0.9244791666666659,"f1":0.9244791666666659,"seconds":2.286769449710846e-5,"exhaustive_search_seconds":2.1008774638175964e-5,"evaluations":60.4140625,"distances_sum":121.33146303612739}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 92.39331619537275, conf: {"bsize":9}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":5.188398063182831e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":109.40625,"distances_sum":55.754579685628414}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.30647000684255, conf: {"bsize":7}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.698708653450012e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":102.7578125,"distances_sum":55.7656357511878}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.51405714285714, conf: {"bsize":6}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.5958906412124634e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":102.5390625,"distances_sum":55.76792734116316}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.69487554904832, conf: {"bsize":4}, perf: {"precision":0.9861111111111108,"recall":0.9861111111111108,"f1":0.9861111111111108,"seconds":4.829093813896179e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":106.71875,"distances_sum":55.82434130087495}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.51405714285714,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.5958906412124634e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":102.5390625,"distances_sum":55.76792734116316}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.51405714285714,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.5958906412124634e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":102.5390625,"distances_sum":55.76792734116316}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.51405714285714,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":4.5958906412124634e-5,"exhaustive_search_seconds":0.00020673498511314392,"evaluations":102.5390625,"distances_sum":55.76792734116316}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-10-11T03:29:26.744
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1432, 0.028175857f0), Item(8802, 0.03065401f0), Item(5957, 0.034073263f0), Item(44, 0.03663476f0), Item(1449, 0.038036495f0), Item(2779, 0.041506242f0), Item(2963, 0.04291727f0), Item(8356, 0.04469331f0), Item(2372, 0.047737263f0), Item(1495, 0.048229147f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
