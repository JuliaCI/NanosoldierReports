Julia Version 1.6.0-DEV.1175
Commit 7f7ab69fd3 (2020-10-09 21:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.11
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_0Z7URW/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_0Z7URW/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(37, 0.0042016506f0), Item(17, 0.033694267f0), Item(30, 0.06035757f0), Item(21, 0.06384039f0)])
Vsorted = Item[Item(37, 0.0042016506f0), Item(17, 0.033694267f0), Item(30, 0.06035757f0), Item(21, 0.06384039f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004428275426228841, 0.004364538192749024, 301.0, 51.151758160442114))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00454103946685791, 0.004389270146687826, 301.0, 74.8486635684967))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0044204314549764, 0.004658293724060058, 301.0, 41.67176306247711))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033340215682983398, 0.0029129664103190104, 301.0, 9.591770687780809))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003278938929239909, 0.0051157633463541664, 301.0, 46.32391093671322))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.8806597391764326e-5, 2.49942143758138e-5, 301.0, 188.91916505992413))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.364880879720052e-5, 0.008235772450764975, 300.0, 25.63097755610943)
p = PerformanceResult(1.0, 1.0, 1.0, 1.9669532775878906e-5, 1.3105074564615886e-5, 300.0, 25.63097755610943)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003349860509236654, 0.004431931177775065, 300.0, 1.307864545378834)
p = PerformanceResult(1.0, 1.0, 1.0, 2.6509496900770398e-5, 1.4138221740722656e-5, 300.0, 1.307864545378834)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.364880879720052e-5, 0.008235772450764975, 300.0, 25.63097755610943), PerformanceResult(1.0, 1.0, 1.0, 1.9669532775878906e-5, 1.3105074564615886e-5, 300.0, 25.63097755610943), PerformanceResult(1.0, 1.0, 1.0, 0.003349860509236654, 0.004431931177775065, 300.0, 1.307864545378834), PerformanceResult(1.0, 1.0, 1.0, 2.6509496900770398e-5, 1.4138221740722656e-5, 300.0, 1.307864545378834))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007243490219116211, 0.0031923611958821615, 348.56666666666666, 28647.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0069211800893147785, 0.0026108662287394205, 304.73333333333335, 7004.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5091896057128906e-5, 7.700920104980468e-6, 96.5, 50.97777984663844))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6148885091145834e-5, 5.269050598144532e-6, 88.16666666666667, 74.59380078315735))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6609827677408855e-5, 8.002916971842449e-6, 91.7, 41.498074412345886))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.143151601155599e-5, 6.256898244222005e-5, 96.16666666666667, 46.15807221829891))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8100000000000003, 0.8100000000000003, 0.8100000000000003, 1.3573964436848958e-5, 1.8699963887532553e-5, 73.2, 197.6916303485632))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-10T08:41:47.586
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.893, 0.893, 0.893, 1.7032623291015624e-5, 1.7671585083007814e-5, 152.86, 49.655556513462216))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.633167266845703e-5, 1.4250278472900391e-5, 156.44, 0.0))
*** advance 1 from 1000; 2020-10-10T08:41:48.275
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8729999999999998, 0.8729999999999998, 0.8729999999999998, 1.585245132446289e-5, 1.3899803161621093e-5, 153.29, 75.79836516268551))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3005733489990234e-5, 8.68082046508789e-6, 156.86, 0.0))
*** advance 1 from 1000; 2020-10-10T08:41:49.005
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.867, 0.867, 0.867, 1.272439956665039e-5, 1.8558502197265626e-5, 153.49, 40.41224046424031))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2824535369873047e-5, 1.1680126190185547e-5, 157.15, 0.0))
*** advance 1 from 1000; 2020-10-10T08:41:49.768
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.888, 0.888, 0.888, 4.356622695922851e-5, 0.00022541999816894532, 153.04, 44.66450531804003))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.2548179626464846e-5, 0.00020156145095825195, 156.59, 0.0))
*** advance 1 from 1000; 2020-10-10T08:41:50.150
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9510000000000001, 0.9510000000000001, 0.9510000000000001, 2.4001598358154297e-5, 5.5170059204101564e-5, 170.09, 188.89661757973954))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.301454544067383e-5, 5.548954010009766e-5, 175.27, 0.0))
*** advance 1 from 1000; 2020-10-10T08:41:52.111
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.893, 0.893, 0.893, 1.279592514038086e-5, 3.0519962310791013e-5, 152.86, 49.66506936622318))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.953601837158203e-5, 4.2331218719482425e-5, 156.44, 0.016175370634300634))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:41:54.552
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.6839999999999999, 0.6839999999999999, 0.6839999999999999, 0.0013394689559936524, 4.677057266235351e-5, 197.29, 208.50000259280205))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:41:55.590
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.696, 0.696, 0.696, 0.0013485527038574218, 6.459951400756836e-5, 199.27, 119.64444672316313))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:41:56.660
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.5460000000000003, 0.5460000000000003, 0.5460000000000003, 0.001569068431854248, 5.4018497467041014e-5, 267.49, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:41:57.564
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9510000000000005, 0.9500000000000006, 0.9504736842105268, 0.001327226161956787, 1.1560916900634766e-5, 218.68, 602.4000204950571))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:41:58.694
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5909999999999999, 0.5909999999999999, 0.5909999999999999, 0.0012341094017028808, 0.00035635948181152345, 253.65, 2345.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:42:00.112
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3879999999999999, 0.3879999999999999, 0.38799999999999996, 0.001540513038635254, 0.00023499011993408203, 241.95, 3638.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-10T08:42:01.252
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6169999999999998, 0.6169999999999998, 0.6169999999999998, 0.001316666603088379, 1.8188953399658205e-5, 243.2, 2341.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0194690265486726, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.978515625,"f1":0.9881696428571431,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.828125,"distances_sum":681.8142496943474}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0194690265486726,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.978515625,"f1":0.9881696428571431,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.828125,"distances_sum":681.8142496943474}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0194690265486726,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.978515625,"f1":0.9881696428571431,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.828125,"distances_sum":681.8142496943474}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.1441624365482235, conf: {"restarts":6}, perf: {"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.4448538422584534e-5,"exhaustive_search_seconds":4.9602240324020386e-6,"evaluations":46.171875,"distances_sum":296.0517697557807}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1441624365482235,"state":{"restarts":6},"perf":{"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.4448538422584534e-5,"exhaustive_search_seconds":4.9602240324020386e-6,"evaluations":46.171875,"distances_sum":296.0517697557807}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1441624365482235,"state":{"restarts":6},"perf":{"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.4448538422584534e-5,"exhaustive_search_seconds":4.9602240324020386e-6,"evaluations":46.171875,"distances_sum":296.0517697557807}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.1441624365482235,"state":{"restarts":6},"perf":{"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.4448538422584534e-5,"exhaustive_search_seconds":4.9602240324020386e-6,"evaluations":46.171875,"distances_sum":296.0517697557807}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8472222222222214,"state":{"restarts":6},"perf":{"precision":0.8472222222222214,"recall":0.8472222222222214,"f1":0.8472222222222214,"seconds":2.4780631065368652e-5,"exhaustive_search_seconds":1.845322549343109e-5,"evaluations":102.3828125,"distances_sum":131.11697013676167}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8472222222222214,"state":{"restarts":6},"perf":{"precision":0.8472222222222214,"recall":0.8472222222222214,"f1":0.8472222222222214,"seconds":2.4780631065368652e-5,"exhaustive_search_seconds":1.845322549343109e-5,"evaluations":102.3828125,"distances_sum":131.11697013676167}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777768, conf: {"restarts":1}, perf: {"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":3.7087127566337585e-5,"exhaustive_search_seconds":0.000227438285946846,"evaluations":128.34375,"distances_sum":57.205613882280886}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222209, conf: {"restarts":7}, perf: {"precision":0.8550347222222209,"recall":0.8550347222222209,"f1":0.8550347222222209,"seconds":6.721168756484985e-5,"exhaustive_search_seconds":0.000227438285946846,"evaluations":187.1484375,"distances_sum":57.347798460163176}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777768,"state":{"restarts":1},"perf":{"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":3.7087127566337585e-5,"exhaustive_search_seconds":0.000227438285946846,"evaluations":128.34375,"distances_sum":57.205613882280886}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8559027777777768,"state":{"restarts":1},"perf":{"precision":0.8559027777777768,"recall":0.8559027777777768,"f1":0.8559027777777768,"seconds":3.7087127566337585e-5,"exhaustive_search_seconds":0.000227438285946846,"evaluations":128.34375,"distances_sum":57.205613882280886}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(1), SatNeighborhood(32), 2020-10-10T08:42:07.796
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5199, 0.022330202f0), Item(6345, 0.036165655f0), Item(2171, 0.042011395f0), Item(4134, 0.04348224f0), Item(5139, 0.043893587f0), Item(8224, 0.044176273f0), Item(3420, 0.047461186f0), Item(372, 0.050391167f0), Item(3697, 0.050398394f0), Item(9417, 0.052149683f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0796626054358014, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532051282051284,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.3359375,"distances_sum":618.3401316106319}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.062730627306273, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9616300366300368,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.46875,"distances_sum":637.8635986149311}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0796626054358014,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9532051282051284,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.3359375,"distances_sum":618.3401316106319}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.084745762711864, conf: {"bsize":10}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498054029304033,"seconds":3.864988684654236e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.296875,"distances_sum":619.4009324014187}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0950570342205324, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9437385531135537,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.21875,"distances_sum":611.142980068922}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.080675422138837, conf: {"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516285797535801,"seconds":3.91155481338501e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.328125,"distances_sum":623.2410985529423}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0950570342205324,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9437385531135537,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.21875,"distances_sum":611.142980068922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0950570342205324,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9437385531135537,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.21875,"distances_sum":611.142980068922}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0950570342205324,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9437385531135537,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.21875,"distances_sum":611.142980068922}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.6779374471682162, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":9.391456842422485e-6,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":36.96875,"distances_sum":267.1595948934555}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.822271714922049, conf: {"bsize":4}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":7.770955562591553e-6,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":35.078125,"distances_sum":267.2570540904999}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.404554079696395, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":1.1295080184936523e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":41.171875,"distances_sum":267.1595948934555}, best_list's length: 6, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.565182186234818, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":1.1967495083808899e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":38.59375,"distances_sum":267.1671856343746}, best_list's length: 7, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.822271714922049,"state":{"bsize":4},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":7.770955562591553e-6,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":35.078125,"distances_sum":267.2570540904999}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.016424660795049, conf: {"bsize":3}, perf: {"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.0155141353607178e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":32.8203125,"distances_sum":267.53981806337833}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.016424660795049,"state":{"bsize":3},"perf":{"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.0155141353607178e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":32.8203125,"distances_sum":267.53981806337833}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.016424660795049,"state":{"bsize":3},"perf":{"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.0155141353607178e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":32.8203125,"distances_sum":267.53981806337833}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.016424660795049,"state":{"bsize":3},"perf":{"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":1.0155141353607178e-5,"exhaustive_search_seconds":4.28222119808197e-6,"evaluations":32.8203125,"distances_sum":267.53981806337833}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.947912524850896, conf: {"bsize":2}, perf: {"precision":0.9305555555555549,"recall":0.9305555555555549,"f1":0.9305555555555549,"seconds":1.8984079360961914e-5,"exhaustive_search_seconds":1.8524006009101868e-5,"evaluations":58.9453125,"distances_sum":123.01631269603968}, best_list's length: 5, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.947912524850896,"state":{"bsize":2},"perf":{"precision":0.9305555555555549,"recall":0.9305555555555549,"f1":0.9305555555555549,"seconds":1.8984079360961914e-5,"exhaustive_search_seconds":1.8524006009101868e-5,"evaluations":58.9453125,"distances_sum":123.01631269603968}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.947912524850896,"state":{"bsize":2},"perf":{"precision":0.9305555555555549,"recall":0.9305555555555549,"f1":0.9305555555555549,"seconds":1.8984079360961914e-5,"exhaustive_search_seconds":1.8524006009101868e-5,"evaluations":58.9453125,"distances_sum":123.01631269603968}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.947912524850896,"state":{"bsize":2},"perf":{"precision":0.9305555555555549,"recall":0.9305555555555549,"f1":0.9305555555555549,"seconds":1.8984079360961914e-5,"exhaustive_search_seconds":1.8524006009101868e-5,"evaluations":58.9453125,"distances_sum":123.01631269603968}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.05882352941177, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.027411341667175e-5,"exhaustive_search_seconds":0.00017671845853328705,"evaluations":105.1875,"distances_sum":54.645007906481624}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.18758454832407, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.891997039318085e-5,"exhaustive_search_seconds":0.00017671845853328705,"evaluations":103.953125,"distances_sum":54.65792343206704}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.18758454832407,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.891997039318085e-5,"exhaustive_search_seconds":0.00017671845853328705,"evaluations":103.953125,"distances_sum":54.65792343206704}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.18758454832407,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.891997039318085e-5,"exhaustive_search_seconds":0.00017671845853328705,"evaluations":103.953125,"distances_sum":54.65792343206704}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.18758454832407,"state":{"bsize":5},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":3.891997039318085e-5,"exhaustive_search_seconds":0.00017671845853328705,"evaluations":103.953125,"distances_sum":54.65792343206704}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-10-10T08:42:11.573
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2862, 0.029812152f0), Item(812, 0.036987904f0), Item(7088, 0.037944388f0), Item(1086, 0.04007089f0), Item(5262, 0.04352679f0), Item(3319, 0.04651086f0), Item(4370, 0.0510122f0), Item(4194, 0.05364073f0), Item(4946, 0.054994695f0), Item(6322, 0.05927144f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
