Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_A6FvGX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_A6FvGX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723350989496795
curgen: 20 fitness: 0.21723350989496795
curgen: 30 fitness: 0.21723350989496795
curgen: 40 fitness: 0.21723350989496795
curgen: 50 fitness: 0.21723350989496795
CoordinateCreature{Vector{Float64}}([0.22249647464343422], -0.21723350989496795) 0.22249647464343422 -0.21723350989496795
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581924370904134
curgen: 100 fitness: 3.258249473319114
curgen: 150 fitness: 3.2583164113019536
curgen: 200 fitness: 3.2583164113019536
curgen: 250 fitness: 3.258354574371504
curgen: 300 fitness: 3.258405682532815
curgen: 350 fitness: 3.258405682532815
curgen: 400 fitness: 3.258405682532815
curgen: 450 fitness: 3.258405682532815
curgen: 500 fitness: 3.2584335901280994
CoordinateCreature{Vector{Float64}}([-0.22296548422406512, 0.22229129724558225, 0.2226498166329591, 0.22245968071074876, 0.22261333470037645, -0.22294343954166343, 0.22263026858955517, 0.22237855243582094, 0.2228798027493503, 0.2216419365718177, -0.22283378880074844, 0.2224896743577351, -0.22223798319870455, -0.2224151578266708, 0.2226560839605359], -3.2584335901280994) [-0.22296548422406512, 0.22229129724558225, 0.2226498166329591, 0.22245968071074876, 0.22261333470037645, -0.22294343954166343, 0.22263026858955517, 0.22237855243582094, 0.2228798027493503, 0.2216419365718177, -0.22283378880074844, 0.2224896743577351, -0.22223798319870455, -0.2224151578266708, 0.2226560839605359] -3.2584335901280994
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0015188876065508339
curgen: 100 fitness: -0.0015188876065508339
curgen: 150 fitness: -0.0015188876065508339
curgen: 200 fitness: -0.001482597213794179
curgen: 250 fitness: -0.001135419721663311
curgen: 300 fitness: -0.001135419721663311
curgen: 350 fitness: -0.0008006700363125674
curgen: 400 fitness: -0.0007881275158467815
curgen: 450 fitness: -0.000779006432622964
curgen: 500 fitness: -0.000779006432622964
CoordinateCreature{Vector{Float64}}([0.00038398799574245, -3.8497267327422535e-5, -0.0009763166255717846, 0.00015031144077725492, 0.00026155266098255137, 0.0002874000010609597, -0.0002142755060076843, 0.0004273564504819207, -0.0003928990644554986, -0.000687930236438118, 0.0010353729027236956, -0.000546471135627162, -0.00018476631752595892, 0.00026892757333730967, 0.0005635867855482077], 0.000779006432622964) [0.00038398799574245, -3.8497267327422535e-5, -0.0009763166255717846, 0.00015031144077725492, 0.00026155266098255137, 0.0002874000010609597, -0.0002142755060076843, 0.0004273564504819207, -0.0003928990644554986, -0.000687930236438118, 0.0010353729027236956, -0.000546471135627162, -0.00018476631752595892, 0.00026892757333730967, 0.0005635867855482077] 0.000779006432622964
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
