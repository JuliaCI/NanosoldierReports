Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_4Zl2VW/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_4Zl2VW/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722887056844747
curgen: 20 fitness: 0.21722887056844747
curgen: 30 fitness: 0.21722887056844747
curgen: 40 fitness: 0.21722887056844747
curgen: 50 fitness: 0.2172315990497172
CoordinateCreature{Vector{Float64}}([-0.22233422452695115], -0.2172315990497172) -0.22233422452695115 -0.2172315990497172
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257381104758328
curgen: 100 fitness: 3.257688975739343
curgen: 150 fitness: 3.2583178646441073
curgen: 200 fitness: 3.2583911357045587
curgen: 250 fitness: 3.2584467714880594
curgen: 300 fitness: 3.2584526555379822
curgen: 350 fitness: 3.258464590750614
curgen: 400 fitness: 3.2584711339932455
curgen: 450 fitness: 3.2584781148693316
curgen: 500 fitness: 3.258480131586112
CoordinateCreature{Vector{Float64}}([0.2223836935725456, -0.22265060452122443, 0.22268199153877805, -0.222495875171756, -0.22242474598601536, 0.22232845594287512, 0.22314573914626235, -0.2225641977974725, -0.22249017773594662, 0.2224027230173064, 0.22251912546773436, 0.22259825792831284, 0.222590439625679, -0.22242351865602583, 0.22270801052557646], -3.258480131586112) [0.2223836935725456, -0.22265060452122443, 0.22268199153877805, -0.222495875171756, -0.22242474598601536, 0.22232845594287512, 0.22314573914626235, -0.2225641977974725, -0.22249017773594662, 0.2224027230173064, 0.22251912546773436, 0.22259825792831284, 0.222590439625679, -0.22242351865602583, 0.22270801052557646] -3.258480131586112
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0024237792330836783
curgen: 100 fitness: -0.0024237792330836783
curgen: 150 fitness: -0.0020108686002799914
curgen: 200 fitness: -0.0012728483206387864
curgen: 250 fitness: -0.0012728483206387864
curgen: 300 fitness: -0.0010891917332571666
curgen: 350 fitness: -0.0009813437494301525
curgen: 400 fitness: -0.000741311769843378
curgen: 450 fitness: -0.0005939644582895198
curgen: 500 fitness: -0.0005489285031501367
CoordinateCreature{Vector{Float64}}([-0.0008201793001426109, -0.00035064247053456093, -0.00019455047509620683, 0.00022572727845332832, 4.148949654462716e-5, -2.7271721551752636e-6, -0.00022139940556835228, -0.0001374766225670323, -0.00019795116650637534, 3.023876571341263e-5, -0.0011063605326164768, -0.00017070169988673417, 0.00041029389199822403, -0.0003611549286598563, -0.00046984559639941074], 0.0005489285031501367) [-0.0008201793001426109, -0.00035064247053456093, -0.00019455047509620683, 0.00022572727845332832, 4.148949654462716e-5, -2.7271721551752636e-6, -0.00022139940556835228, -0.0001374766225670323, -0.00019795116650637534, 3.023876571341263e-5, -0.0011063605326164768, -0.00017070169988673417, 0.00041029389199822403, -0.0003611549286598563, -0.00046984559639941074] 0.0005489285031501367
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
