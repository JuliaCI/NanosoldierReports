Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_oTFqIZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_oTFqIZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.240539 seconds (289.13 k allocations: 13.529 MiB, 7.89% gc time, 91.29% compilation time)
Running: chebyshev_quadrature with k=1
  1.671191 seconds (2.20 M allocations: 126.827 MiB, 8.40% gc time, 98.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.208766 seconds (409.38 k allocations: 23.550 MiB, 84.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.334922 seconds (473.75 k allocations: 26.645 MiB, 5.21% gc time, 90.73% compilation time)
Running: chebyshev_quadrature with k=4
  0.281434 seconds (418.56 k allocations: 23.256 MiB, 6.09% gc time, 92.11% compilation time)
Running: jacobi_quadrature with α=β=1
 35.256935 seconds (36.46 M allocations: 3.003 GiB, 11.41% gc time, 80.17% compilation time)
Running: laguerre_quadrature with k=1
  2.582652 seconds (3.17 M allocations: 177.071 MiB, 2.20% gc time, 99.88% compilation time)
Running: legendre_quadrature
  0.235001 seconds (206.22 k allocations: 11.841 MiB, 15.86% gc time, 99.28% compilation time)
Running: lobatto_quadrature
  0.431158 seconds (329.83 k allocations: 19.931 MiB, 97.38% compilation time)
Running: radau_quadrature
  0.384032 seconds (449.32 k allocations: 27.451 MiB, 6.88% gc time, 99.46% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 50.492969 seconds (100.02 M allocations: 1.491 GiB, 0.48% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.106331 seconds (172.46 k allocations: 3.827 MiB, 26.59% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 50.691685 seconds (100.02 M allocations: 1.491 GiB, 0.39% gc time, 0.05% compilation time)
Running: rombergs_method
  0.434119 seconds (722.90 k allocations: 41.723 MiB, 4.38% gc time, 99.51% compilation time)
Running: simpsons_rule
  0.027139 seconds (46.55 k allocations: 2.532 MiB, 91.85% compilation time)
Running: simpsons38_rule
  0.087855 seconds (108.54 k allocations: 5.754 MiB, 97.52% compilation time)
Running: trapezoidal_rule
  0.308148 seconds (1.72 M allocations: 28.603 MiB, 19.24% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.063481 seconds (29.80 k allocations: 1.768 MiB, 99.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.374489 seconds (290.65 k allocations: 15.388 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.149185 seconds (93.80 k allocations: 2.675 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.142365 seconds (82.06 k allocations: 2.476 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.155473 seconds (64.67 k allocations: 2.122 MiB, 98.82% compilation time)
Running: jacobi_quadrature with α=β=1
  2.667581 seconds (503.80 k allocations: 161.822 MiB, 3.26% gc time, 20.25% compilation time)
Running: legendre_quadrature
  0.144885 seconds (41.27 k allocations: 2.378 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.032108 seconds (15.67 k allocations: 997.466 KiB, 99.39% compilation time)
Running: radau_quadrature
  0.022655 seconds (15.77 k allocations: 1004.681 KiB, 99.23% compilation time)
Running: rectangle_rule_left
 15.325475 seconds (471.41 M allocations: 7.025 GiB, 5.37% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.779373 seconds (476.96 M allocations: 7.107 GiB, 5.09% gc time)
Running: rombergs_method
  0.330123 seconds (326.45 k allocations: 18.526 MiB, 99.86% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.062864 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.040711 seconds (16.49 k allocations: 1.001 MiB, 99.76% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022142 seconds (1.03 k allocations: 34.125 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.102862 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.107291 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.106538 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.106265 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with α=β=1
  0.258604 seconds (363.66 k allocations: 18.978 MiB, 99.16% compilation time)
Running: legendre_quadrature
  0.065475 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000105 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000044 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000348 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000347 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.085617 seconds (1.04 k allocations: 56.531 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023655 seconds (923 allocations: 39.281 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.019223 seconds (44.29 k allocations: 702.859 KiB, 91.08% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058015 seconds (80.91 k allocations: 4.823 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.198814 seconds (230.61 k allocations: 12.982 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=2
  0.252398 seconds (283.17 k allocations: 15.880 MiB, 28.31% gc time, 98.71% compilation time)
Running: chebyshev_quadrature with k=3
  0.165623 seconds (234.77 k allocations: 13.221 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.155456 seconds (234.76 k allocations: 13.045 MiB, 98.65% compilation time)
Running: jacobi_quadrature with α=β=1
  2.781304 seconds (446.74 k allocations: 163.204 MiB, 7.97% gc time, 20.88% compilation time)
Running: legendre_quadrature
  0.155737 seconds (185.44 k allocations: 10.707 MiB, 98.80% compilation time)
Running: lobatto_quadrature
  0.173143 seconds (196.62 k allocations: 11.411 MiB, 9.06% gc time, 98.69% compilation time)
Running: radau_quadrature
  0.172053 seconds (196.62 k allocations: 11.411 MiB, 98.82% compilation time)
Running: rectangle_rule_left
  0.701709 seconds (18.82 k allocations: 1.147 MiB, 3.54% compilation time)
Running: rectangle_rule_midpoint
  0.021288 seconds (24.67 k allocations: 1.555 MiB, 99.27% compilation time)
Running: rectangle_rule_right
  0.680220 seconds (17.39 k allocations: 1.062 MiB, 5.83% compilation time)
Running: rombergs_method
  0.126651 seconds (134.27 k allocations: 7.778 MiB, 97.72% compilation time)
Running: simpsons_rule
  0.036029 seconds (36.49 k allocations: 2.341 MiB, 99.48% compilation time)
Running: simpsons38_rule
  0.048575 seconds (42.37 k allocations: 2.678 MiB, 99.53% compilation time)
Running: trapezoidal_rule
  0.026973 seconds (42.32 k allocations: 1.671 MiB, 96.73% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045197 seconds (66.94 k allocations: 2.959 MiB, 97.65% compilation time)
Running: chebyshev_quadrature with k=1
  0.219469 seconds (237.20 k allocations: 13.033 MiB, 11.38% gc time, 98.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.221411 seconds (290.20 k allocations: 15.872 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.198736 seconds (241.33 k allocations: 13.118 MiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=4
  0.220621 seconds (241.34 k allocations: 13.123 MiB, 16.08% gc time, 99.11% compilation time)
Running: hermite_quadrature with k=2
 12.079767 seconds (20.10 M allocations: 1.056 GiB, 8.57% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.426669 seconds (455.91 k allocations: 49.394 MiB, 12.15% gc time, 80.25% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.225474 seconds (276.26 k allocations: 15.248 MiB, 14.57% gc time, 98.40% compilation time)
Running: legendre_quadrature
  0.134391 seconds (191.98 k allocations: 11.035 MiB, 98.32% compilation time)
Running: lobatto_quadrature
  0.209416 seconds (217.28 k allocations: 37.185 MiB, 12.10% gc time, 87.65% compilation time)
Running: radau_quadrature
  0.299523 seconds (213.86 k allocations: 29.847 MiB, 93.24% compilation time)
Running: rectangle_rule_left
  0.038917 seconds (21.73 k allocations: 1.293 MiB, 99.53% compilation time)
Running: rectangle_rule_midpoint
  0.026273 seconds (26.47 k allocations: 1.642 MiB, 99.41% compilation time)
Running: rectangle_rule_right
  0.038324 seconds (18.50 k allocations: 1.117 MiB, 66.69% compilation time)
Running: rombergs_method
  0.145108 seconds (136.74 k allocations: 7.803 MiB, 13.65% gc time, 98.32% compilation time)
Running: simpsons_rule
  0.026537 seconds (43.97 k allocations: 2.609 MiB, 98.93% compilation time)
Running: simpsons38_rule
  0.032593 seconds (57.34 k allocations: 3.064 MiB, 98.59% compilation time)
Running: trapezoidal_rule
  0.027959 seconds (28.35 k allocations: 1.595 MiB, 98.96% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.029440 seconds (50.91 k allocations: 2.619 MiB, 98.01% compilation time)
Running: chebyshev_quadrature with k=1
  0.164834 seconds (232.72 k allocations: 12.845 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=2
  0.235053 seconds (285.39 k allocations: 15.671 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.248785 seconds (236.87 k allocations: 12.932 MiB, 11.48% gc time, 99.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.209317 seconds (236.87 k allocations: 12.929 MiB, 98.69% compilation time)
Running: hermite_quadrature with k=2
  0.148247 seconds (170.78 k allocations: 9.790 MiB, 98.41% compilation time)
Running: jacobi_quadrature with α=β=1
  8.680606 seconds (449.18 k allocations: 1.175 GiB, 28.72% gc time, 6.11% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.206391 seconds (271.55 k allocations: 15.060 MiB, 97.29% compilation time)
Running: legendre_quadrature
  0.135304 seconds (187.55 k allocations: 10.818 MiB, 98.28% compilation time)
Running: lobatto_quadrature
  0.172592 seconds (208.04 k allocations: 22.919 MiB, 9.88% gc time, 91.30% compilation time)
Running: radau_quadrature
  0.184845 seconds (207.19 k allocations: 20.846 MiB, 92.90% compilation time)
Running: rectangle_rule_left
  0.022484 seconds (19.52 k allocations: 1.188 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.020698 seconds (25.36 k allocations: 1.591 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.019507 seconds (17.36 k allocations: 1.062 MiB, 99.20% compilation time)
Running: rombergs_method
  0.095170 seconds (132.58 k allocations: 7.622 MiB, 97.41% compilation time)
Running: simpsons_rule
  0.039197 seconds (39.30 k allocations: 2.442 MiB, 39.50% gc time, 99.46% compilation time)
Running: simpsons38_rule
  0.028374 seconds (48.16 k allocations: 2.821 MiB, 99.04% compilation time)
Running: trapezoidal_rule
  0.019730 seconds (23.26 k allocations: 1.433 MiB, 99.01% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.021812 seconds (39.05 k allocations: 2.475 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=1
  0.179828 seconds (231.10 k allocations: 13.058 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.236322 seconds (283.67 k allocations: 15.996 MiB, 98.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.201937 seconds (235.25 k allocations: 13.141 MiB, 9.40% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.198435 seconds (235.25 k allocations: 13.039 MiB, 98.77% compilation time)
Running: jacobi_quadrature with α=β=1
  1.830089 seconds (447.27 k allocations: 194.232 MiB, 7.40% gc time, 32.03% compilation time)
Running: legendre_quadrature
  0.172736 seconds (185.93 k allocations: 10.732 MiB, 10.94% gc time, 98.65% compilation time)
Running: lobatto_quadrature
  0.154347 seconds (197.11 k allocations: 11.440 MiB, 98.33% compilation time)
Running: radau_quadrature
  0.153780 seconds (197.11 k allocations: 11.438 MiB, 98.36% compilation time)
Running: rectangle_rule_left
  0.338554 seconds (19.34 k allocations: 1.173 MiB, 7.15% compilation time)
Running: rectangle_rule_midpoint
  0.020948 seconds (25.01 k allocations: 1.573 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.156296 seconds (17.73 k allocations: 1.081 MiB, 14.09% compilation time)
Running: rombergs_method
  0.105095 seconds (145.03 k allocations: 8.486 MiB, 96.95% compilation time)
Running: simpsons_rule
  0.036509 seconds (37.11 k allocations: 2.369 MiB, 46.49% gc time, 99.57% compilation time)
Running: simpsons38_rule
  0.023061 seconds (43.08 k allocations: 2.708 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.016960 seconds (43.25 k allocations: 1.703 MiB, 96.90% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025887 seconds (38.85 k allocations: 2.409 MiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=1
  0.163131 seconds (231.69 k allocations: 12.988 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.191622 seconds (284.30 k allocations: 15.891 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.225558 seconds (235.84 k allocations: 13.071 MiB, 7.57% gc time, 98.87% compilation time)
Running: chebyshev_quadrature with k=4
  0.190738 seconds (235.84 k allocations: 13.143 MiB, 98.48% compilation time)
Running: jacobi_quadrature with α=β=1
  1.355338 seconds (447.99 k allocations: 148.917 MiB, 5.41% gc time, 29.83% compilation time)
Running: legendre_quadrature
  0.140205 seconds (186.53 k allocations: 10.751 MiB, 10.13% gc time, 98.40% compilation time)
Running: lobatto_quadrature
  0.116423 seconds (197.71 k allocations: 11.461 MiB, 98.01% compilation time)
Running: radau_quadrature
  0.143334 seconds (197.71 k allocations: 11.454 MiB, 93.50% compilation time)
Running: rectangle_rule_left
  0.676722 seconds (19.59 k allocations: 1.186 MiB, 3.19% compilation time)
Running: rectangle_rule_midpoint
  0.021484 seconds (25.01 k allocations: 1.574 MiB, 99.18% compilation time)
Running: rectangle_rule_right
  0.710178 seconds (17.69 k allocations: 1.078 MiB, 3.20% compilation time)
Running: rombergs_method
  0.118946 seconds (135.49 k allocations: 7.815 MiB, 96.93% compilation time)
Running: simpsons_rule
  0.022610 seconds (37.60 k allocations: 2.389 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.032675 seconds (43.78 k allocations: 2.734 MiB, 99.37% compilation time)
Running: trapezoidal_rule
  0.039963 seconds (55.40 k allocations: 1.899 MiB, 43.09% gc time, 95.59% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.136730 seconds (147.45 k allocations: 8.795 MiB, 14.30% gc time, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.134631 seconds (69.93 k allocations: 2.205 MiB, 88.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.140038 seconds (105.09 k allocations: 2.868 MiB, 97.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.148119 seconds (92.57 k allocations: 2.654 MiB, 97.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.171605 seconds (72.10 k allocations: 2.248 MiB, 98.61% compilation time)
Running: jacobi_quadrature with α=β=1
  2.050152 seconds (480.13 k allocations: 167.768 MiB, 4.18% gc time, 21.69% compilation time)
Running: legendre_quadrature
  0.098085 seconds (18.73 k allocations: 1.094 MiB, 99.78% compilation time)
Running: lobatto_quadrature
  0.000097 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 22.930315 seconds (590.00 M allocations: 8.792 GiB, 4.79% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.170801 seconds (592.75 M allocations: 8.833 GiB, 4.98% gc time)
Running: rombergs_method
  0.117082 seconds (20.51 k allocations: 1.165 MiB, 99.61% compilation time)
Running: simpsons_rule
  0.000035 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025835 seconds (463 allocations: 22.578 KiB, 99.55% compilation time)
Running: trapezoidal_rule
  0.016424 seconds (171 allocations: 7.859 KiB, 99.23% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.962216 seconds (209.93 M allocations: 3.138 GiB, 1.45% gc time, 0.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.323883 seconds (414.12 k allocations: 22.962 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=2
 18.050558 seconds (468.76 k allocations: 4.040 GiB, 2.38% gc time, 2.17% compilation time)
Running: chebyshev_quadrature with k=3
  8.273602 seconds (249.12 k allocations: 1.642 GiB, 3.57% gc time, 2.61% compilation time)
Running: chebyshev_quadrature with k=4
 11.270861 seconds (249.12 k allocations: 2.260 GiB, 1.99% gc time, 1.54% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 39.942095 seconds (484.17 k allocations: 13.254 GiB, 6.34% gc time, 0.89% compilation time)
Running: legendre_quadrature.
  9.769403 seconds (223.37 k allocations: 1.976 GiB, 1.06% gc time, 1.90% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.706469 seconds (8.23 M allocations: 13.383 GiB, 6.57% gc time, 0.53% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.784311 seconds (7.23 M allocations: 13.369 GiB, 6.70% gc time, 0.54% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.029983 seconds (22.25 k allocations: 1.347 MiB, 0.37% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.117378 seconds (30.45 k allocations: 1.884 MiB, 0.38% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.718454 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.966620 seconds (438.23 k allocations: 152.685 MiB, 1.95% gc time, 11.74% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.893657 seconds (200.04 M allocations: 2.983 GiB, 2.00% gc time, 0.17% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.588309 seconds (600.05 M allocations: 8.943 GiB, 5.57% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.538609 seconds (600.03 M allocations: 8.943 GiB, 3.92% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.059796 seconds (109.56 k allocations: 4.131 MiB, 94.04% compilation time)
Running: chebyshev_quadrature with k=1
  0.173197 seconds (247.70 k allocations: 13.448 MiB, 97.60% compilation time)
Running: chebyshev_quadrature with k=2
  0.230925 seconds (272.34 k allocations: 14.521 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=3
  0.156860 seconds (220.25 k allocations: 11.633 MiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=4
  0.301941 seconds (220.25 k allocations: 11.661 MiB, 40.31% gc time, 99.52% compilation time)
Running: jacobi_quadrature with α=β=1
  0.380104 seconds (388.85 k allocations: 34.972 MiB, 93.23% compilation time)
Running: laguerre_quadrature with k=2
  0.188018 seconds (180.54 k allocations: 10.481 MiB, 79.91% compilation time)
Running: legendre_quadrature
  0.132060 seconds (145.98 k allocations: 8.073 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.020379 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017932 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.041277 seconds (18.88 k allocations: 1.122 MiB, 58.44% compilation time)
Running: rectangle_rule_midpoint
  0.048807 seconds (25.48 k allocations: 1.575 MiB, 75.96% compilation time)
Running: rectangle_rule_right
  0.037342 seconds (17.48 k allocations: 1.049 MiB, 52.27% compilation time)
Running: rombergs_method
  0.241222 seconds (172.71 k allocations: 9.856 MiB, 98.66% compilation time)
Running: simpsons_rule
  0.000545 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.041755 seconds (78.86 k allocations: 3.385 MiB, 97.66% compilation time)
Running: trapezoidal_rule
  0.115220 seconds (2.39 M allocations: 37.684 MiB, 30.43% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000589 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.090007 seconds (2.46 k allocations: 1.691 MiB, 97.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.092140 seconds (2.71 k allocations: 2.355 MiB, 96.52% compilation time)
Running: chebyshev_quadrature with k=3
  0.089100 seconds (2.31 k allocations: 2.028 MiB, 96.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.091685 seconds (2.31 k allocations: 1.469 MiB, 97.31% compilation time)
Running: jacobi_quadrature with α=β=1
  5.252236 seconds (365.93 k allocations: 904.798 MiB, 5.50% gc time, 7.44% compilation time)
Running: legendre_quadrature
  0.064272 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000163 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000115 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.825614 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000375 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.009382 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073354 seconds (997 allocations: 56.672 KiB, 99.34% compilation time)
Running: simpsons_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001166 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000142 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.116190 seconds (2.53 k allocations: 579.203 KiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.122867 seconds (2.79 k allocations: 780.188 KiB, 99.16% compilation time)
Running: chebyshev_quadrature with k=3
  0.117350 seconds (2.39 k allocations: 661.047 KiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.116700 seconds (2.39 k allocations: 491.547 KiB, 99.44% compilation time)
Running: jacobi_quadrature with α=β=1
  2.024425 seconds (372.49 k allocations: 252.909 MiB, 16.93% compilation time)
Running: legendre_quadrature
  0.080708 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000048 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.386504 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000129 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.344193 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.087002 seconds (1.21 k allocations: 64.938 KiB, 99.40% compilation time)
Running: simpsons_rule
  0.000017 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000457 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
