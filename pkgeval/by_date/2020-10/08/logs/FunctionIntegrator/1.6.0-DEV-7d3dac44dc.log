Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_JiuXxZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_JiuXxZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.221000 seconds (288.83 k allocations: 13.508 MiB, 5.55% gc time, 90.49% compilation time)
Running: chebyshev_quadrature with k=1
  1.248331 seconds (2.19 M allocations: 126.577 MiB, 3.81% gc time, 98.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.197852 seconds (409.38 k allocations: 23.549 MiB, 84.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.247636 seconds (473.75 k allocations: 26.612 MiB, 87.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.239714 seconds (418.55 k allocations: 23.251 MiB, 7.28% gc time, 91.19% compilation time)
Running: jacobi_quadrature with α=β=1
 31.042494 seconds (36.41 M allocations: 3.000 GiB, 13.57% gc time, 78.44% compilation time)
Running: laguerre_quadrature with k=1
  2.487787 seconds (3.17 M allocations: 177.112 MiB, 3.32% gc time, 99.87% compilation time)
Running: legendre_quadrature
  0.169371 seconds (206.11 k allocations: 11.831 MiB, 98.99% compilation time)
Running: lobatto_quadrature
  0.263537 seconds (329.53 k allocations: 19.894 MiB, 99.06% compilation time)
Running: radau_quadrature
  0.346942 seconds (443.89 k allocations: 27.121 MiB, 6.72% gc time, 99.45% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 49.461599 seconds (100.02 M allocations: 1.491 GiB, 0.62% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.097346 seconds (172.46 k allocations: 3.827 MiB, 26.53% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.097499 seconds (100.02 M allocations: 1.491 GiB, 0.51% gc time, 0.05% compilation time)
Running: rombergs_method
  0.426579 seconds (723.09 k allocations: 41.726 MiB, 4.94% gc time, 99.51% compilation time)
Running: simpsons_rule
  0.026742 seconds (46.55 k allocations: 2.532 MiB, 91.99% compilation time)
Running: simpsons38_rule
  0.075932 seconds (108.39 k allocations: 5.744 MiB, 97.22% compilation time)
Running: trapezoidal_rule
  0.276559 seconds (1.72 M allocations: 28.594 MiB, 4.32% gc time, 17.61% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.059773 seconds (29.80 k allocations: 1.767 MiB, 99.67% compilation time)
Running: chebyshev_quadrature with k=1
  0.372452 seconds (290.20 k allocations: 15.342 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.154257 seconds (93.80 k allocations: 2.675 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=3
  0.149410 seconds (82.06 k allocations: 2.476 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.139979 seconds (64.67 k allocations: 2.122 MiB, 98.80% compilation time)
Running: jacobi_quadrature with α=β=1
  2.428656 seconds (504.14 k allocations: 161.820 MiB, 5.61% gc time, 20.66% compilation time)
Running: legendre_quadrature
  0.199995 seconds (41.16 k allocations: 2.371 MiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.021548 seconds (15.55 k allocations: 990.622 KiB, 99.38% compilation time)
Running: radau_quadrature
  0.018533 seconds (15.66 k allocations: 997.837 KiB, 99.22% compilation time)
Running: rectangle_rule_left
 15.354091 seconds (471.41 M allocations: 7.025 GiB, 6.92% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.892621 seconds (476.96 M allocations: 7.107 GiB, 6.42% gc time)
Running: rombergs_method
  0.353299 seconds (326.49 k allocations: 18.526 MiB, 99.84% compilation time)
Running: simpsons_rule
  0.000040 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.050194 seconds (18.91 k allocations: 1.146 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.042705 seconds (16.49 k allocations: 1.001 MiB, 99.75% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.018401 seconds (1.03 k allocations: 34.125 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.098980 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.101732 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.095926 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.094760 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.260265 seconds (364.10 k allocations: 18.999 MiB, 99.22% compilation time)
Running: legendre_quadrature
  0.068162 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000099 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000346 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000237 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000399 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071573 seconds (1.04 k allocations: 56.531 KiB, 99.72% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.025986 seconds (923 allocations: 39.281 KiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.017839 seconds (44.29 k allocations: 702.859 KiB, 90.89% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.041880 seconds (80.91 k allocations: 4.823 MiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=1
  0.182561 seconds (230.61 k allocations: 12.965 MiB, 15.13% gc time, 98.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.227320 seconds (283.17 k allocations: 15.897 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=3
  0.178559 seconds (234.76 k allocations: 13.150 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.190852 seconds (234.76 k allocations: 13.067 MiB, 13.93% gc time, 97.02% compilation time)
Running: jacobi_quadrature with α=β=1
  1.875127 seconds (447.18 k allocations: 163.211 MiB, 2.29% gc time, 27.45% compilation time)
Running: legendre_quadrature
  0.125607 seconds (185.44 k allocations: 10.708 MiB, 98.54% compilation time)
Running: lobatto_quadrature
  0.162996 seconds (196.77 k allocations: 11.423 MiB, 9.19% gc time, 98.83% compilation time)
Running: radau_quadrature
  0.143731 seconds (196.76 k allocations: 11.417 MiB, 98.67% compilation time)
Running: rectangle_rule_left
  0.635187 seconds (18.82 k allocations: 1.147 MiB, 3.51% compilation time)
Running: rectangle_rule_midpoint
  0.034027 seconds (24.67 k allocations: 1.555 MiB, 99.54% compilation time)
Running: rectangle_rule_right
  0.600348 seconds (17.39 k allocations: 1.062 MiB, 3.35% compilation time)
Running: rombergs_method
  0.121477 seconds (134.27 k allocations: 7.759 MiB, 97.59% compilation time)
Running: simpsons_rule
  0.018765 seconds (36.49 k allocations: 2.341 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.023442 seconds (42.37 k allocations: 2.678 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.018198 seconds (42.32 k allocations: 1.671 MiB, 95.37% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046762 seconds (66.94 k allocations: 2.959 MiB, 45.00% gc time, 98.11% compilation time)
Running: chebyshev_quadrature with k=1
  0.182876 seconds (237.20 k allocations: 13.055 MiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=2
  0.162339 seconds (290.20 k allocations: 15.887 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=3
  0.148564 seconds (241.33 k allocations: 13.116 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.185850 seconds (241.34 k allocations: 13.121 MiB, 11.98% gc time, 99.03% compilation time)
Running: hermite_quadrature with k=2
 12.149254 seconds (20.10 M allocations: 1.056 GiB, 7.77% gc time, 99.96% compilation time)
Running: jacobi_quadrature with α=β=1
  0.470740 seconds (456.36 k allocations: 49.426 MiB, 24.68% gc time, 76.93% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.182070 seconds (276.26 k allocations: 15.255 MiB, 98.22% compilation time)
Running: legendre_quadrature
  0.138028 seconds (191.98 k allocations: 11.070 MiB, 98.39% compilation time)
Running: lobatto_quadrature
  0.234519 seconds (217.42 k allocations: 37.193 MiB, 25.37% gc time, 63.24% compilation time)
Running: radau_quadrature
  0.353373 seconds (214.01 k allocations: 29.871 MiB, 52.64% gc time, 94.64% compilation time)
Running: rectangle_rule_left
  0.023183 seconds (21.73 k allocations: 1.293 MiB, 99.35% compilation time)
Running: rectangle_rule_midpoint
  0.028294 seconds (26.47 k allocations: 1.642 MiB, 99.44% compilation time)
Running: rectangle_rule_right
  0.025355 seconds (18.50 k allocations: 1.117 MiB, 99.38% compilation time)
Running: rombergs_method
  0.115091 seconds (136.74 k allocations: 7.808 MiB, 97.85% compilation time)
Running: simpsons_rule
  0.025743 seconds (43.97 k allocations: 2.609 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.028795 seconds (57.34 k allocations: 3.063 MiB, 98.35% compilation time)
Running: trapezoidal_rule
  0.031252 seconds (28.35 k allocations: 1.595 MiB, 99.16% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.025551 seconds (50.91 k allocations: 2.619 MiB, 97.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.145126 seconds (232.72 k allocations: 12.824 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.256546 seconds (285.38 k allocations: 15.643 MiB, 7.68% gc time, 98.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.204827 seconds (236.87 k allocations: 12.932 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.179841 seconds (236.87 k allocations: 12.929 MiB, 98.72% compilation time)
Running: hermite_quadrature with k=2
  0.149533 seconds (170.78 k allocations: 9.790 MiB, 98.41% compilation time)
Running: jacobi_quadrature with α=β=1
  6.806951 seconds (449.62 k allocations: 1.175 GiB, 21.25% gc time, 5.05% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.201013 seconds (271.55 k allocations: 15.063 MiB, 9.02% gc time, 98.20% compilation time)
Running: legendre_quadrature
  0.144452 seconds (187.55 k allocations: 10.817 MiB, 98.39% compilation time)
Running: lobatto_quadrature
  0.200290 seconds (208.19 k allocations: 22.983 MiB, 91.24% compilation time)
Running: radau_quadrature
  0.199003 seconds (207.34 k allocations: 20.853 MiB, 9.20% gc time, 80.98% compilation time)
Running: rectangle_rule_left
  0.021863 seconds (19.52 k allocations: 1.188 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.022742 seconds (25.36 k allocations: 1.591 MiB, 99.43% compilation time)
Running: rectangle_rule_right
  0.020212 seconds (17.36 k allocations: 1.062 MiB, 99.32% compilation time)
Running: rombergs_method
  0.098437 seconds (132.58 k allocations: 7.622 MiB, 97.56% compilation time)
Running: simpsons_rule
  0.023045 seconds (39.30 k allocations: 2.442 MiB, 99.09% compilation time)
Running: simpsons38_rule
  0.030580 seconds (48.16 k allocations: 2.821 MiB, 98.79% compilation time)
Running: trapezoidal_rule
  0.024409 seconds (23.26 k allocations: 1.433 MiB, 99.03% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023849 seconds (39.05 k allocations: 2.475 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.210534 seconds (231.10 k allocations: 13.042 MiB, 15.61% gc time, 98.39% compilation time)
Running: chebyshev_quadrature with k=2
  0.220198 seconds (283.67 k allocations: 15.985 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.158816 seconds (235.25 k allocations: 13.146 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.196863 seconds (235.25 k allocations: 12.971 MiB, 10.88% gc time, 98.76% compilation time)
Running: jacobi_quadrature with α=β=1
  1.824340 seconds (447.72 k allocations: 194.255 MiB, 7.22% gc time, 28.70% compilation time)
Running: legendre_quadrature
  0.143363 seconds (185.93 k allocations: 10.746 MiB, 98.30% compilation time)
Running: lobatto_quadrature
  0.154191 seconds (197.26 k allocations: 11.449 MiB, 98.14% compilation time)
Running: radau_quadrature
  0.187877 seconds (197.26 k allocations: 11.451 MiB, 12.56% gc time, 98.70% compilation time)
Running: rectangle_rule_left
  0.369169 seconds (19.34 k allocations: 1.173 MiB, 6.07% compilation time)
Running: rectangle_rule_midpoint
  0.036424 seconds (25.01 k allocations: 1.573 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.155747 seconds (17.73 k allocations: 1.081 MiB, 14.31% compilation time)
Running: rombergs_method
  0.137577 seconds (145.02 k allocations: 8.483 MiB, 96.30% compilation time)
Running: simpsons_rule
  0.026891 seconds (37.11 k allocations: 2.369 MiB, 99.19% compilation time)
Running: simpsons38_rule
  0.027933 seconds (43.08 k allocations: 2.708 MiB, 99.24% compilation time)
Running: trapezoidal_rule
  0.020098 seconds (43.25 k allocations: 1.703 MiB, 96.87% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033383 seconds (38.85 k allocations: 2.409 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=1
  0.228050 seconds (231.69 k allocations: 13.004 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.252348 seconds (284.30 k allocations: 15.891 MiB, 12.02% gc time, 98.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.161887 seconds (235.84 k allocations: 13.067 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.176582 seconds (235.84 k allocations: 13.146 MiB, 98.37% compilation time)
Running: jacobi_quadrature with α=β=1
  1.635785 seconds (448.43 k allocations: 148.940 MiB, 6.69% gc time, 25.51% compilation time)
Running: legendre_quadrature
  0.134921 seconds (186.53 k allocations: 10.750 MiB, 98.27% compilation time)
Running: lobatto_quadrature
  0.158272 seconds (197.86 k allocations: 11.468 MiB, 96.98% compilation time)
Running: radau_quadrature
  0.176497 seconds (197.85 k allocations: 11.462 MiB, 12.37% gc time, 98.48% compilation time)
Running: rectangle_rule_left
  0.753313 seconds (19.59 k allocations: 1.186 MiB, 3.39% compilation time)
Running: rectangle_rule_midpoint
  0.018804 seconds (25.01 k allocations: 1.574 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.755873 seconds (17.69 k allocations: 1.078 MiB, 2.94% compilation time)
Running: rombergs_method
  0.160473 seconds (135.49 k allocations: 7.815 MiB, 95.86% compilation time)
Running: simpsons_rule
  0.023245 seconds (37.60 k allocations: 2.389 MiB, 99.18% compilation time)
Running: simpsons38_rule
  0.036434 seconds (43.78 k allocations: 2.735 MiB, 99.41% compilation time)
Running: trapezoidal_rule
  0.028625 seconds (55.40 k allocations: 1.899 MiB, 97.07% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.123821 seconds (147.46 k allocations: 8.796 MiB, 99.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.126016 seconds (69.93 k allocations: 2.205 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=2
  0.135491 seconds (105.09 k allocations: 2.868 MiB, 97.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.140324 seconds (92.57 k allocations: 2.654 MiB, 97.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.138475 seconds (72.10 k allocations: 2.248 MiB, 98.16% compilation time)
Running: jacobi_quadrature with α=β=1
  2.157801 seconds (480.58 k allocations: 167.780 MiB, 7.38% gc time, 22.25% compilation time)
Running: legendre_quadrature
  0.098638 seconds (18.73 k allocations: 1.094 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 22.317075 seconds (590.00 M allocations: 8.792 GiB, 5.14% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.007911 seconds (592.75 M allocations: 8.833 GiB, 4.90% gc time)
Running: rombergs_method
  0.118258 seconds (20.51 k allocations: 1.165 MiB, 99.51% compilation time)
Running: simpsons_rule
  0.000044 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026099 seconds (463 allocations: 22.578 KiB, 99.46% compilation time)
Running: trapezoidal_rule
  0.017122 seconds (171 allocations: 7.859 KiB, 99.31% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.022387 seconds (209.93 M allocations: 3.138 GiB, 1.49% gc time, 0.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.454518 seconds (414.01 k allocations: 23.017 MiB, 5.26% gc time, 99.23% compilation time)
Running: chebyshev_quadrature with k=2
 18.276099 seconds (468.65 k allocations: 4.040 GiB, 2.58% gc time, 2.25% compilation time)
Running: chebyshev_quadrature with k=3
  8.208722 seconds (249.12 k allocations: 1.642 GiB, 3.89% gc time, 2.12% compilation time)
Running: chebyshev_quadrature with k=4
 11.081903 seconds (249.12 k allocations: 2.260 GiB, 1.94% gc time, 1.42% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.501637 seconds (484.50 k allocations: 13.254 GiB, 6.65% gc time, 1.13% compilation time)
Running: legendre_quadrature.
 10.198817 seconds (223.26 k allocations: 1.976 GiB, 3.63% gc time, 2.41% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.951085 seconds (8.23 M allocations: 13.383 GiB, 7.61% gc time, 0.46% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.495628 seconds (7.23 M allocations: 13.369 GiB, 7.04% gc time, 0.59% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.035982 seconds (22.25 k allocations: 1.347 MiB, 0.17% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.661229 seconds (30.45 k allocations: 1.884 MiB, 0.21% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.737572 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.884169 seconds (438.11 k allocations: 152.668 MiB, 2.19% gc time, 8.87% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.870096 seconds (200.04 M allocations: 2.983 GiB, 2.08% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.826256 seconds (600.05 M allocations: 8.943 GiB, 5.78% gc time, 0.14% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.919924 seconds (600.03 M allocations: 8.943 GiB, 3.62% gc time, 1.97% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.052610 seconds (109.56 k allocations: 4.131 MiB, 93.70% compilation time)
Running: chebyshev_quadrature with k=1
  0.199848 seconds (247.70 k allocations: 13.449 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.243911 seconds (272.34 k allocations: 14.523 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.246308 seconds (220.25 k allocations: 11.631 MiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.316284 seconds (220.25 k allocations: 11.626 MiB, 41.38% gc time, 99.57% compilation time)
Running: jacobi_quadrature with α=β=1
  0.364605 seconds (389.30 k allocations: 34.995 MiB, 93.87% compilation time)
Running: laguerre_quadrature with k=2
  0.164635 seconds (180.54 k allocations: 10.477 MiB, 78.04% compilation time)
Running: legendre_quadrature
  0.137285 seconds (145.99 k allocations: 8.082 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.020442 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017865 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.040406 seconds (18.88 k allocations: 1.122 MiB, 58.21% compilation time)
Running: rectangle_rule_midpoint
  0.032342 seconds (25.48 k allocations: 1.575 MiB, 63.35% compilation time)
Running: rectangle_rule_right
  0.036602 seconds (17.48 k allocations: 1.049 MiB, 55.13% compilation time)
Running: rombergs_method
  0.182483 seconds (170.84 k allocations: 9.796 MiB, 98.55% compilation time)
Running: simpsons_rule
  0.000467 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.040599 seconds (78.86 k allocations: 3.385 MiB, 97.47% compilation time)
Running: trapezoidal_rule
  0.143180 seconds (2.39 M allocations: 37.684 MiB, 33.50% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000661 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.131156 seconds (2.46 k allocations: 1.691 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.119657 seconds (2.71 k allocations: 2.355 MiB, 97.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.100628 seconds (2.31 k allocations: 2.028 MiB, 97.56% compilation time)
Running: chebyshev_quadrature with k=4
  0.141510 seconds (2.31 k allocations: 1.469 MiB, 98.12% compilation time)
Running: jacobi_quadrature with α=β=1
  5.201296 seconds (366.38 k allocations: 904.821 MiB, 4.38% gc time, 8.36% compilation time)
Running: legendre_quadrature
  0.083322 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000161 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000118 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.800535 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000364 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.810645 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075205 seconds (997 allocations: 56.672 KiB, 99.41% compilation time)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001139 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000138 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.093192 seconds (2.53 k allocations: 579.203 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
  0.096564 seconds (2.79 k allocations: 780.188 KiB, 99.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.106417 seconds (2.39 k allocations: 661.047 KiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.116871 seconds (2.39 k allocations: 491.547 KiB, 99.40% compilation time)
Running: jacobi_quadrature with α=β=1
  2.653521 seconds (372.95 k allocations: 253.064 MiB, 29.71% compilation time)
Running: legendre_quadrature
  0.084228 seconds (1.32 k allocations: 67.859 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000082 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000038 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.297951 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000072 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.259066 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077364 seconds (1.21 k allocations: 64.938 KiB, 99.58% compilation time)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000469 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
