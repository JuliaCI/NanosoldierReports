Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed Parsers ──────────── v1.0.11
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_IJ8OdX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_IJ8OdX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(42, 0.0047813654f0), Item(40, 0.030334234f0), Item(10, 0.044760466f0), Item(17, 0.048846006f0)])
Vsorted = Item[Item(42, 0.0047813654f0), Item(40, 0.030334234f0), Item(10, 0.044760466f0), Item(17, 0.048846006f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035076220830281574, 0.003739468256632487, 301.0, 51.567139115184546))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003607376416524251, 0.0031607627868652345, 301.0, 75.57334494590759))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0033705790837605795, 0.0042833725611368815, 301.0, 42.11384189128876))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003526703516642253, 0.0034343957901000976, 301.0, 9.758701632148586))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0031963984171549478, 0.0040239651997884115, 301.0, 46.7127884440124))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.876122792561849e-5, 1.910527547200521e-5, 301.0, 189.4371601343155))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.2456715901692707e-5, 0.00938710371653239, 300.0, 30.59689590567723)
p = PerformanceResult(1.0, 1.0, 1.0, 2.0702679951985676e-5, 1.320044199625651e-5, 300.0, 30.59689590567723)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003637846310933431, 0.0028637011845906576, 300.0, 1.9296928761432355)
p = PerformanceResult(1.0, 1.0, 1.0, 2.6986334058973523e-5, 1.5036265055338542e-5, 300.0, 1.9296928761432355)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.2456715901692707e-5, 0.00938710371653239, 300.0, 30.59689590567723), PerformanceResult(1.0, 1.0, 1.0, 2.0702679951985676e-5, 1.320044199625651e-5, 300.0, 30.59689590567723), PerformanceResult(1.0, 1.0, 1.0, 0.003637846310933431, 0.0028637011845906576, 300.0, 1.9296928761432355), PerformanceResult(1.0, 1.0, 1.0, 2.6986334058973523e-5, 1.5036265055338542e-5, 300.0, 1.9296928761432355))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008429495493570964, 0.0033243656158447265, 345.93333333333334, 28714.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.005532972017923991, 0.002439999580383301, 304.46666666666664, 7046.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6848246256510418e-5, 8.400281270345052e-6, 94.23333333333333, 51.635807167738676))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.548926035563151e-5, 7.430712381998698e-6, 83.46666666666667, 75.69485020637512))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6069412231445314e-5, 9.640057881673176e-6, 87.83333333333333, 42.225690603256226))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.8538703918457032e-5, 6.133715311686198e-5, 93.9, 46.791156996041536))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8433333333333334, 0.8433333333333334, 0.8433333333333334, 1.757939656575521e-5, 2.532800038655599e-5, 68.3, 198.3827659189701))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-08T08:11:52.198
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8975714285714286, 0.8949999999999999, 0.8960588235294117, 1.6732215881347658e-5, 1.6200542449951173e-5, 153.22, 50.65519257436972))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3422966003417968e-5, 1.1620521545410157e-5, 156.84, 0.0))
*** advance 1 from 1000; 2020-10-08T08:11:52.764
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8830000000000001, 0.8830000000000001, 0.8830000000000001, 1.4822483062744141e-5, 1.4100074768066406e-5, 153.57, 77.49279045127332))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4436244964599609e-5, 1.0020732879638672e-5, 157.28, 0.0))
*** advance 1 from 1000; 2020-10-08T08:11:53.296
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9620000000000002, 0.9620000000000002, 0.9620000000000002, 1.5702247619628906e-5, 1.4960765838623047e-5, 168.32, 39.60046127438545))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4684200286865235e-5, 1.3079643249511719e-5, 173.39, 0.0))
*** advance 1 from 1000; 2020-10-08T08:11:53.793
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9030000000000001, 0.9030000000000001, 0.9030000000000001, 4.069089889526367e-5, 0.00017361879348754884, 153.46, 45.281739372061566))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.469705581665039e-5, 0.00023993015289306641, 157.13, 0.0))
*** advance 1 from 1000; 2020-10-08T08:11:54.200
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9690000000000002, 0.9690000000000002, 0.9690000000000002, 2.6602745056152343e-5, 0.0001037907600402832, 168.16, 192.28107794513926))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.1543502807617187e-5, 6.436824798583985e-5, 173.4, 0.0))
*** advance 1 from 1000; 2020-10-08T08:11:54.820
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8975714285714286, 0.8949999999999999, 0.8960588235294117, 2.138853073120117e-5, 5.8088302612304684e-5, 153.22, 50.66508328798227))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0596981048583985e-5, 4.547119140625e-5, 156.84, 0.01705068102455698))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:11:56.405
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7469999999999999, 0.7469999999999999, 0.7469999999999999, 0.0012160873413085938, 5.3420066833496094e-5, 195.23, 191.4166687577963))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:11:57.518
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.762, 0.762, 0.762, 0.0015363121032714844, 5.497932434082031e-5, 197.47, 107.82301815599203))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:11:58.294
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6150000000000001, 0.6150000000000001, 0.6150000000000001, 0.0014144134521484374, 5.884170532226563e-5, 268.22, 1.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:11:59.013
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9660000000000002, 0.9570000000000002, 0.9607058823529414, 0.0014616203308105468, 9.679794311523438e-6, 216.95, 592.8000204116106))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:11:59.900
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5930000000000001, 0.5930000000000001, 0.5930000000000001, 0.0014136695861816405, 0.00024307012557983398, 255.69, 2325.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:12:00.645
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4019999999999999, 0.4019999999999999, 0.40199999999999997, 0.001681370735168457, 0.00034120082855224607, 235.18, 3638.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-08T08:12:01.508
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.615, 0.615, 0.615, 0.0014648485183715821, 1.4810562133789062e-5, 248.26, 2327.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0313339301700983, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000001,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.7265625,"distances_sum":534.1383974850178}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0313339301700983,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000001,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.7265625,"distances_sum":534.1383974850178}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0313339301700983,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000001,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.7265625,"distances_sum":534.1383974850178}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7050592034445637, conf: {"restarts":12}, perf: {"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":1.654401421546936e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":58.0625,"distances_sum":289.46520825102925}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7050592034445637,"state":{"restarts":12},"perf":{"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":1.654401421546936e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":58.0625,"distances_sum":289.46520825102925}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7108140947752126, conf: {"restarts":13}, perf: {"precision":0.9071180555555547,"recall":0.9071180555555547,"f1":0.9071180555555547,"seconds":1.8054619431495667e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":57.8671875,"distances_sum":289.94744128361344}, best_list's length: 8, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7108140947752126,"state":{"restarts":13},"perf":{"precision":0.9071180555555547,"recall":0.9071180555555547,"f1":0.9071180555555547,"seconds":1.8054619431495667e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":57.8671875,"distances_sum":289.94744128361344}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7108140947752126,"state":{"restarts":13},"perf":{"precision":0.9071180555555547,"recall":0.9071180555555547,"f1":0.9071180555555547,"seconds":1.8054619431495667e-5,"exhaustive_search_seconds":4.507601261138916e-6,"evaluations":57.8671875,"distances_sum":289.94744128361344}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555544, conf: {"restarts":15}, perf: {"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":5.207955837249756e-5,"exhaustive_search_seconds":2.496875822544098e-5,"evaluations":159.90625,"distances_sum":125.34663506131619}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444434, conf: {"restarts":23}, perf: {"precision":0.8819444444444434,"recall":0.8819444444444434,"f1":0.8819444444444434,"seconds":5.9407204389572144e-5,"exhaustive_search_seconds":2.496875822544098e-5,"evaluations":207.5703125,"distances_sum":124.48482778202742}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8819444444444434,"state":{"restarts":23},"perf":{"precision":0.8819444444444434,"recall":0.8819444444444434,"f1":0.8819444444444434,"seconds":5.9407204389572144e-5,"exhaustive_search_seconds":2.496875822544098e-5,"evaluations":207.5703125,"distances_sum":124.48482778202742}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8819444444444434,"state":{"restarts":23},"perf":{"precision":0.8819444444444434,"recall":0.8819444444444434,"f1":0.8819444444444434,"seconds":5.9407204389572144e-5,"exhaustive_search_seconds":2.496875822544098e-5,"evaluations":207.5703125,"distances_sum":124.48482778202742}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8819444444444434,"state":{"restarts":23},"perf":{"precision":0.8819444444444434,"recall":0.8819444444444434,"f1":0.8819444444444434,"seconds":5.9407204389572144e-5,"exhaustive_search_seconds":2.496875822544098e-5,"evaluations":207.5703125,"distances_sum":124.48482778202742}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111102, conf: {"restarts":35}, perf: {"precision":0.8454861111111102,"recall":0.8454861111111102,"f1":0.8454861111111102,"seconds":0.00011730939149856567,"exhaustive_search_seconds":0.00020714104175567627,"evaluations":424.1484375,"distances_sum":58.10561952507123}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.856770833333332, conf: {"restarts":37}, perf: {"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":0.00019085220992565155,"exhaustive_search_seconds":0.00020714104175567627,"evaluations":441.0703125,"distances_sum":57.743617025669664}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.856770833333332,"state":{"restarts":37},"perf":{"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":0.00019085220992565155,"exhaustive_search_seconds":0.00020714104175567627,"evaluations":441.0703125,"distances_sum":57.743617025669664}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.856770833333332,"state":{"restarts":37},"perf":{"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":0.00019085220992565155,"exhaustive_search_seconds":0.00020714104175567627,"evaluations":441.0703125,"distances_sum":57.743617025669664}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.856770833333332,"state":{"restarts":37},"perf":{"precision":0.856770833333332,"recall":0.856770833333332,"f1":0.856770833333332,"seconds":0.00019085220992565155,"exhaustive_search_seconds":0.00020714104175567627,"evaluations":441.0703125,"distances_sum":57.743617025669664}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(37), SatNeighborhood(32), 2020-10-08T08:12:08.069
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9599, 0.0106795505f0), Item(81, 0.030675465f0), Item(5687, 0.033801734f0), Item(9574, 0.049887568f0), Item(2967, 0.050506424f0), Item(5868, 0.05101298f0), Item(1806, 0.054358277f0), Item(9026, 0.05809602f0), Item(1173, 0.058179554f0), Item(1037, 0.061110448f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.050136736554239,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9664510836385839,"seconds":0.0030115358531475067,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5703125,"distances_sum":523.1266069710255}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.050136736554239,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9664510836385839,"seconds":0.0030115358531475067,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5703125,"distances_sum":523.1266069710255}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.072,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":9.84780490398407e-6,"exhaustive_search_seconds":4.6174973249435425e-6,"evaluations":32.2265625,"distances_sum":289.9258502535522}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.072,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":9.84780490398407e-6,"exhaustive_search_seconds":4.6174973249435425e-6,"evaluations":32.2265625,"distances_sum":289.9258502535522}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.606753246753247,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":1.8579885363578796e-5,"exhaustive_search_seconds":1.9358471035957336e-5,"evaluations":60.15625,"distances_sum":122.95056251715869}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.606753246753247,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":1.8579885363578796e-5,"exhaustive_search_seconds":1.9358471035957336e-5,"evaluations":60.15625,"distances_sum":122.95056251715869}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.4770713508472, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.07882034778595e-5,"exhaustive_search_seconds":0.0002620704472064972,"evaluations":100.515625,"distances_sum":54.32480404432863}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.4770713508472,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.07882034778595e-5,"exhaustive_search_seconds":0.0002620704472064972,"evaluations":100.515625,"distances_sum":54.32480404432863}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.4770713508472,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.07882034778595e-5,"exhaustive_search_seconds":0.0002620704472064972,"evaluations":100.515625,"distances_sum":54.32480404432863}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.4770713508472,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.07882034778595e-5,"exhaustive_search_seconds":0.0002620704472064972,"evaluations":100.515625,"distances_sum":54.32480404432863}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-10-08T08:12:11.206
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5267, 0.043637086f0), Item(640, 0.048278794f0), Item(9228, 0.051654298f0), Item(716, 0.05674915f0), Item(9237, 0.05749177f0), Item(4199, 0.05806388f0), Item(2953, 0.06189838f0), Item(9638, 0.06499472f0), Item(2417, 0.07167057f0), Item(6190, 0.07309681f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
