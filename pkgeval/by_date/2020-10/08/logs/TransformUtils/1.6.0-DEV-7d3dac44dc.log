Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_I3MlmX/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_I3MlmX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.18542864974978512 -0.08364683391028455; -0.18542864974978512 0.0 -0.05910078620185616; 0.08364683391028455 0.05910078620185616 0.0])
dAA = so3([0.0 -0.1621755689864755 0.10091059617085173; 0.1621755689864755 0.0 0.08414957084956581; -0.10091059617085173 -0.08414957084956581 0.0])
dAA = so3([0.0 -0.23690862838187662 0.07893592320901838; 0.23690862838187662 0.0 0.005223254322041386; -0.07893592320901838 -0.005223254322041386 0.0])
dAA = Quaternion(0.9969006837248315, [-0.006015532768690214, -0.006740409277773829, 0.07814990106993391])
dAA = SO3([0.9897923046893035 0.12269218034836507 0.07251084373527542; -0.1035008176103859 0.9685912940668747 -0.22609397562040237; -0.09797333479992859 0.2162811455934653 0.9714029502369034])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8885515074888021 -0.413228407076029 0.19929501279456277; 0.3613493530804643 0.8980266752289613 0.2509476750351506; -0.2826709457438228 -0.15096481100781498 0.9472627736112443]), [0.5910078620185616, -0.8364683391028453, -1.8542864974978512])
xj = SE3(SO3([0.9239189709244982 -0.38081935374773335 -0.036747176449015886; 0.381825595823539 0.9238756606361529 0.025748360299472292; 0.024144347989038997 -0.03782041109335986 0.9989928262830087]), [-0.05223254322041385, 0.7893592320901837, 2.369086283818766])
Dx = SE3(SO3([0.9520971207724346 0.006154992816380836 -0.3057338526893456; -0.04254494121879658 0.9927399139918901 -0.11250507163707624; 0.30282173071549756 0.12012318356922133 0.9454466775951279]), [-1.1778852690053034, 1.0882610625308815, 4.280446859031069])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
