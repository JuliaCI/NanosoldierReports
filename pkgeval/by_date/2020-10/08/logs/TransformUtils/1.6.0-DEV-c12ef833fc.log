Julia Version 1.6.0-DEV.1155
Commit c12ef833fc (2020-10-08 05:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_sSVwqX/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_sSVwqX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.20445999731587797 -0.04389990606787648; 0.20445999731587797 0.0 0.07021758606105881; 0.04389990606787648 -0.07021758606105881 0.0])
dAA = so3([0.0 -0.016514211717470327 0.08937753019548395; 0.016514211717470327 0.0 0.024755098572423275; -0.08937753019548395 -0.024755098572423275 0.0])
dAA = so3([0.0 -0.06615119387380888 0.10029091571065255; 0.06615119387380888 0.0 -0.06478780148499037; -0.10029091571065255 0.06478780148499037 0.0])
dAA = Quaternion(0.9940281537575265, [-0.0020046879596443117, -0.08722621869637666, -0.06554080816956552])
dAA = SO3([0.9828948401827095 -0.05767532212057884 0.17490366022612017; 0.038039964803145004 0.9927970532549678 0.11360885584332185; -0.18019626583251416 -0.10501222912851944 0.9780090682163832])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9743032764319572 -0.04778727858347329 0.2201124747476586; 0.03402263814181206 0.9972454722445735 0.06590848338088916; -0.22265575588298733 -0.05672604422382316 0.9732453803018498]), [-0.702175860610588, -0.43899906067876476, 2.0445999731587796])
xj = SE3(SO3([0.8537626879385426 0.31051709871496586 -0.41793349242384836; -0.31856421042740035 0.9464503720419446 0.05242649231477949; 0.41183263168272827 0.08837887002731372 0.9069636480113045]), [0.6478780148499037, 1.0029091571065254, 0.6615119387380888])
Dx = SE3(SO3([0.7292884833929754 0.31506050108328737 -0.6073509600284845; -0.3818473479582346 0.9239911974321765 0.020805526311911883; 0.5677419403634338 0.21674212263655773 0.7941611558288172]), [1.672371947504887, 1.4518781539352839, -0.9538863566717583])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
