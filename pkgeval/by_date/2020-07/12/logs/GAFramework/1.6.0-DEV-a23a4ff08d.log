Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_klOrDJ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_klOrDJ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723232146747265
curgen: 20 fitness: 0.21723232146747265
curgen: 30 fitness: 0.21723232146747265
curgen: 40 fitness: 0.21723232146747265
curgen: 50 fitness: 0.21723232146747265
CoordinateCreature{Vector{Float64}}([0.22272003570513688], -0.21723232146747265) 0.22272003570513688 -0.21723232146747265
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25737997108344
curgen: 100 fitness: 3.2579797231218315
curgen: 150 fitness: 3.258025613634411
curgen: 200 fitness: 3.258172774376545
curgen: 250 fitness: 3.258185975552527
curgen: 300 fitness: 3.258272804887309
curgen: 350 fitness: 3.2582957258324226
curgen: 400 fitness: 3.258392836292422
curgen: 450 fitness: 3.2584211405880454
curgen: 500 fitness: 3.258442466635928
CoordinateCreature{Vector{Float64}}([-0.22301083849167858, -0.22250121715753676, -0.22294772360598242, -0.2226953359448317, -0.22298614542589226, -0.2225373752617212, 0.22277937700691913, -0.2226368417609305, 0.22294034529918016, -0.22217206683820936, -0.22259035855513423, 0.22211285926058089, -0.2222504254360253, 0.22255428467425592, 0.2221314048736005], -3.258442466635928) [-0.22301083849167858, -0.22250121715753676, -0.22294772360598242, -0.2226953359448317, -0.22298614542589226, -0.2225373752617212, 0.22277937700691913, -0.2226368417609305, 0.22294034529918016, -0.22217206683820936, -0.22259035855513423, 0.22211285926058089, -0.2222504254360253, 0.22255428467425592, 0.2221314048736005] -3.258442466635928
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0008914653258500493
curgen: 100 fitness: -0.0007292413178277002
curgen: 150 fitness: -0.0006084982971685804
curgen: 200 fitness: -0.0003170151090046147
curgen: 250 fitness: -0.0002749596827698042
curgen: 300 fitness: -0.0002749596827698042
curgen: 350 fitness: -0.00023735023191306936
curgen: 400 fitness: -0.00023735023191306936
curgen: 450 fitness: -0.0002288063826654252
curgen: 500 fitness: -0.00022786702331245579
CoordinateCreature{Vector{Float64}}([-0.0006578922742247597, -0.00011612552415312847, 0.00029500364644702553, -6.931944773777609e-6, 7.989575840974849e-5, 0.00022391439408235743, 2.8573437754629907e-5, 7.249841761316086e-6, 2.306922543129919e-5, -0.0006190874445752737, -8.065386903648519e-5, -0.000336037808570464, 0.00021894825736538124, -6.0657974173050806e-5, 5.433296803719059e-5], 0.00022786702331245579) [-0.0006578922742247597, -0.00011612552415312847, 0.00029500364644702553, -6.931944773777609e-6, 7.989575840974849e-5, 0.00022391439408235743, 2.8573437754629907e-5, 7.249841761316086e-6, 2.306922543129919e-5, -0.0006190874445752737, -8.065386903648519e-5, -0.000336037808570464, 0.00021894825736538124, -6.0657974173050806e-5, 5.433296803719059e-5] 0.00022786702331245579
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
