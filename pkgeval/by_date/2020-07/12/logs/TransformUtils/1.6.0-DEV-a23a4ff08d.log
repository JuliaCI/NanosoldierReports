Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ZcgIq7/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ZcgIq7/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.051508514496185244 0.034132118197966375; 0.051508514496185244 0.0 -0.002136525874262812; -0.034132118197966375 0.002136525874262812 0.0])
dAA = so3([0.0 0.1285534614034852 -0.021416215945787524; -0.1285534614034852 0.0 -0.0708118500057941; 0.021416215945787524 0.0708118500057941 0.0])
dAA = so3([0.0 0.07976083150205783 0.050707868022969296; -0.07976083150205783 0.0 -0.20478731305908832; -0.050707868022969296 0.20478731305908832 0.0])
dAA = Quaternion(0.9985714218233828, [-0.007821129136145074, -0.04834550951311445, -0.021369538286563114])
dAA = SO3([0.9931128223901843 -0.09233927544606126 0.07211366177291993; 0.08676400199046215 0.9932519680773296 0.07695801367700891; -0.07873328370391867 -0.07017112027471156 0.9944229904404819])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9475283441379686 0.3093843433482965 -0.08044479564336521; -0.3187545015780662 0.9334542673251821 -0.16449528423674037; 0.024199272279926173 0.18150608503119334 0.983092028407194]), [0.02136525874262812, 0.34132118197966377, 0.5150851449618524])
xj = SE3(SO3([0.9652324370844513 0.10819241469927998 -0.23795113742436638; -0.09998188127672755 0.9939093627864901 0.046344384575905735; 0.24151597424679186 -0.020942300897755246 0.9701708376449638]), [2.047873130590883, 0.5070786802296929, -0.7976083150205783])
Dx = SE3(SO3([0.9522992783728366 -0.2148044924420768 -0.21676050017767662; 0.24913590895091753 0.9574408201570084 0.14573391770029157; 0.17623105084455154 -0.19278512889685498 0.965285714591513]), [1.8355714729992272, 0.5434350005370998, -1.4807868146604988])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
