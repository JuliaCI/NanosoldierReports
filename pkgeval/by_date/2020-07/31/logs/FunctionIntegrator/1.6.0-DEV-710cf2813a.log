Julia Version 1.6.0-DEV.558
Commit 710cf2813a (2020-07-30 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_PG0Uh6/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_PG0Uh6/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.853046 seconds (1.38 M allocations: 72.941 MiB, 6.31% gc time)
Running: chebyshev_quadrature with k=1
  1.709920 seconds (2.24 M allocations: 128.887 MiB, 6.16% gc time)
Running: chebyshev_quadrature with k=2
  0.258522 seconds (425.06 k allocations: 24.384 MiB)
Running: chebyshev_quadrature with k=3
  0.213314 seconds (544.94 k allocations: 29.893 MiB, 4.80% gc time)
Running: chebyshev_quadrature with k=4
  0.191131 seconds (487.81 k allocations: 26.414 MiB)
Running: jacobi_quadrature with α=β=1
 36.880710 seconds (39.39 M allocations: 3.139 GiB, 9.66% gc time)
Running: laguerre_quadrature with k=1
  2.911237 seconds (3.33 M allocations: 185.640 MiB, 2.77% gc time)
Running: legendre_quadrature
  0.189540 seconds (215.20 k allocations: 12.320 MiB)
Running: lobatto_quadrature
  0.329272 seconds (344.08 k allocations: 20.645 MiB, 7.86% gc time)
Running: radau_quadrature
  0.252155 seconds (326.49 k allocations: 19.639 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 76.764918 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time)
Running: rectangle_rule_midpoint.
  0.148439 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.438434 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time)
Running: rombergs_method
  0.535319 seconds (752.87 k allocations: 43.361 MiB, 7.16% gc time)
Running: simpsons_rule
  0.037312 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.098002 seconds (113.21 k allocations: 5.979 MiB)
Running: trapezoidal_rule
  0.304239 seconds (1.52 M allocations: 25.802 MiB, 5.31% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081508 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.402917 seconds (275.07 k allocations: 13.950 MiB)
Running: chebyshev_quadrature with k=2
  0.148744 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.155239 seconds (105.23 k allocations: 3.649 MiB)
Running: chebyshev_quadrature with k=4
  0.153927 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  2.823450 seconds (536.51 k allocations: 163.518 MiB, 16.03% gc time)
Running: legendre_quadrature
  0.144688 seconds (62.54 k allocations: 3.490 MiB)
Running: lobatto_quadrature
  0.019706 seconds (16.87 k allocations: 1.041 MiB)
Running: radau_quadrature
  0.019687 seconds (16.85 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 28.260231 seconds (471.41 M allocations: 7.025 GiB, 2.33% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.465201 seconds (476.96 M allocations: 7.107 GiB, 2.08% gc time)
Running: rombergs_method
  0.343220 seconds (360.52 k allocations: 20.330 MiB)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.056778 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.049857 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028634 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.093265 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.094213 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.099858 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.101356 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.304925 seconds (379.02 k allocations: 19.830 MiB)
Running: legendre_quadrature
  0.061321 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000069 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000502 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.080559 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000037 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026432 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023177 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059681 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.208913 seconds (240.27 k allocations: 13.488 MiB, 12.56% gc time)
Running: chebyshev_quadrature with k=2
  0.217162 seconds (295.46 k allocations: 16.575 MiB)
Running: chebyshev_quadrature with k=3
  0.211282 seconds (275.42 k allocations: 14.966 MiB)
Running: chebyshev_quadrature with k=4
  0.220606 seconds (275.45 k allocations: 14.922 MiB, 10.60% gc time)
Running: jacobi_quadrature with α=β=1
  1.109100 seconds (465.79 k allocations: 164.201 MiB, 4.49% gc time)
Running: legendre_quadrature
  0.125381 seconds (193.01 k allocations: 11.105 MiB)
Running: lobatto_quadrature
  0.169929 seconds (204.22 k allocations: 11.813 MiB)
Running: radau_quadrature
  0.149805 seconds (204.22 k allocations: 11.812 MiB)
Running: rectangle_rule_left
  1.089782 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.025668 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.153516 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.155266 seconds (139.92 k allocations: 8.060 MiB, 14.44% gc time)
Running: simpsons_rule
  0.030477 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.037227 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.027346 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041654 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.194619 seconds (247.36 k allocations: 13.596 MiB)
Running: chebyshev_quadrature with k=2
  0.250468 seconds (303.09 k allocations: 16.585 MiB, 8.52% gc time)
Running: chebyshev_quadrature with k=3
  0.200380 seconds (282.83 k allocations: 14.999 MiB)
Running: chebyshev_quadrature with k=4
  0.197957 seconds (282.87 k allocations: 15.012 MiB)
Running: hermite_quadrature with k=2
 14.906182 seconds (22.12 M allocations: 1.147 GiB, 11.52% gc time)
Running: jacobi_quadrature with α=β=1
  0.520857 seconds (475.82 k allocations: 50.441 MiB, 16.41% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.243388 seconds (288.36 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.221406 seconds (200.08 k allocations: 11.519 MiB, 22.04% gc time)
Running: lobatto_quadrature
  0.229348 seconds (225.73 k allocations: 37.647 MiB)
Running: radau_quadrature
  0.241192 seconds (222.33 k allocations: 30.297 MiB, 9.04% gc time)
Running: rectangle_rule_left
  0.029736 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.028242 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.025030 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.125042 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.037555 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.052317 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.029948 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039505 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.237741 seconds (242.49 k allocations: 13.352 MiB, 17.22% gc time)
Running: chebyshev_quadrature with k=2
  0.218088 seconds (297.81 k allocations: 16.331 MiB)
Running: chebyshev_quadrature with k=3
  0.193594 seconds (277.69 k allocations: 14.833 MiB)
Running: chebyshev_quadrature with k=4
  0.235874 seconds (277.72 k allocations: 14.772 MiB, 11.67% gc time)
Running: hermite_quadrature with k=2
  0.144735 seconds (177.72 k allocations: 10.161 MiB)
Running: jacobi_quadrature with α=β=1
  9.006347 seconds (468.39 k allocations: 1.176 GiB, 11.84% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.209612 seconds (283.22 k allocations: 15.704 MiB)
Running: legendre_quadrature
  0.170895 seconds (195.25 k allocations: 11.222 MiB, 9.46% gc time)
Running: lobatto_quadrature
  0.191928 seconds (216.10 k allocations: 23.334 MiB)
Running: radau_quadrature
  0.212583 seconds (215.25 k allocations: 21.263 MiB, 8.33% gc time)
Running: rectangle_rule_left
  0.025223 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.024837 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022415 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.105186 seconds (138.22 k allocations: 7.926 MiB)
Running: simpsons_rule
  0.030138 seconds (33.50 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.034502 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.026765 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029578 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.218972 seconds (240.82 k allocations: 13.568 MiB)
Running: chebyshev_quadrature with k=2
  0.254934 seconds (296.04 k allocations: 16.652 MiB, 6.73% gc time)
Running: chebyshev_quadrature with k=3
  0.188895 seconds (276.01 k allocations: 14.978 MiB)
Running: chebyshev_quadrature with k=4
  0.217738 seconds (276.05 k allocations: 14.812 MiB, 8.77% gc time)
Running: jacobi_quadrature with α=β=1
  2.273546 seconds (466.43 k allocations: 195.252 MiB, 7.99% gc time)
Running: legendre_quadrature
  0.117296 seconds (193.57 k allocations: 11.137 MiB)
Running: lobatto_quadrature
  0.149012 seconds (204.78 k allocations: 11.840 MiB, 11.13% gc time)
Running: radau_quadrature
  0.183875 seconds (204.79 k allocations: 11.861 MiB)
Running: rectangle_rule_left
  0.293793 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.027950 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.104340 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.141499 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.031376 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.050371 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.026552 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032079 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.250919 seconds (241.39 k allocations: 13.513 MiB, 7.88% gc time)
Running: chebyshev_quadrature with k=2
  0.207458 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.195646 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.217912 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.766631 seconds (467.09 k allocations: 149.921 MiB, 13.22% gc time)
Running: legendre_quadrature
  0.140148 seconds (194.15 k allocations: 11.151 MiB)
Running: lobatto_quadrature
  0.178473 seconds (205.37 k allocations: 11.873 MiB, 9.86% gc time)
Running: radau_quadrature
  0.189733 seconds (205.36 k allocations: 11.865 MiB)
Running: rectangle_rule_left
  1.479830 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.034356 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.149669 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.149195 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.035315 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.041624 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.046042 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.157184 seconds (152.90 k allocations: 9.086 MiB)
Running: chebyshev_quadrature with k=1
  0.136414 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.220776 seconds (127.17 k allocations: 3.998 MiB, 30.97% gc time)
Running: chebyshev_quadrature with k=3
  0.145502 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.145207 seconds (95.28 k allocations: 3.421 MiB)
Running: jacobi_quadrature with α=β=1
  1.540481 seconds (510.03 k allocations: 169.321 MiB, 12.43% gc time)
Running: legendre_quadrature
  0.093215 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000105 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000047 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 42.883459 seconds (590.00 M allocations: 8.792 GiB, 3.14% gc time)
Running: rectangle_rule_midpoint
  0.000051 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.560070 seconds (592.75 M allocations: 8.833 GiB, 2.90% gc time)
Running: rombergs_method
  0.139873 seconds (42.05 k allocations: 2.268 MiB)
Running: simpsons_rule
  0.000045 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030174 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023456 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.660024 seconds (629.34 M allocations: 9.388 GiB, 4.64% gc time)
Running: chebyshev_quadrature with k=1
  0.504355 seconds (439.30 k allocations: 24.287 MiB)
Running: chebyshev_quadrature with k=2
 12.865134 seconds (496.66 k allocations: 4.042 GiB, 4.36% gc time)
Running: chebyshev_quadrature with k=3
  5.903460 seconds (290.52 k allocations: 1.643 GiB, 4.83% gc time)
Running: chebyshev_quadrature with k=4
  7.601842 seconds (290.55 k allocations: 2.262 GiB, 2.73% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 49.091108 seconds (505.42 k allocations: 13.255 GiB, 3.81% gc time)
Running: legendre_quadrature.
  5.451786 seconds (232.98 k allocations: 1.976 GiB, 1.35% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.048345 seconds (8.24 M allocations: 13.384 GiB, 4.54% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.321850 seconds (7.24 M allocations: 13.369 GiB, 3.35% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.866958 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.073373 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.060054 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.166535 seconds (456.75 k allocations: 153.723 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.043597 seconds (600.04 M allocations: 8.943 GiB, 8.66% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.552521 seconds (600.05 M allocations: 8.944 GiB, 7.99% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.941479 seconds (600.04 M allocations: 8.943 GiB, 8.66% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060005 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.229482 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.223383 seconds (284.13 k allocations: 15.177 MiB)
Running: chebyshev_quadrature with k=3
  0.217068 seconds (260.63 k allocations: 13.460 MiB)
Running: chebyshev_quadrature with k=4
  0.204812 seconds (260.66 k allocations: 13.518 MiB)
Running: jacobi_quadrature with α=β=1
  0.395435 seconds (405.40 k allocations: 35.857 MiB)
Running: laguerre_quadrature with k=2
  0.185496 seconds (187.99 k allocations: 10.934 MiB)
Running: legendre_quadrature
  0.140793 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.037815 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.033600 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.058738 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.049211 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.054532 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.239983 seconds (170.17 k allocations: 9.706 MiB)
Running: simpsons_rule
  0.001922 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053866 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.178497 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002182 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.123689 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.100967 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.104076 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.115868 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  5.875735 seconds (402.19 k allocations: 906.503 MiB, 4.22% gc time)
Running: legendre_quadrature
  0.067566 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000171 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000127 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.479693 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000432 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.305817 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.068104 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000025 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000029 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000594 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000726 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.102369 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.099423 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.121500 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.123139 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.021659 seconds (388.47 k allocations: 253.765 MiB)
Running: legendre_quadrature
  0.042101 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000084 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000036 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.162590 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001084 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.141569 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075308 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001693 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
