Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_AshabB/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_AshabB/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(5, 0.0017396212f0), Item(1, 0.036817312f0), Item(36, 0.072651386f0), Item(23, 0.077974916f0)])
Vsorted = Item[Item(5, 0.0017396212f0), Item(1, 0.036817312f0), Item(36, 0.072651386f0), Item(23, 0.077974916f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004160547256469726, 0.004851500193277995, 301.0, 48.91127747297287))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038070837656656903, 0.004651029904683431, 301.0, 71.3123848438263))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038306554158528644, 0.003955467542012533, 301.0, 39.83867645263672))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003775819142659505, 0.00373689333597819, 301.0, 8.760306957177818))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003629295031229655, 0.004802672068277994, 301.0, 44.273589961230755))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015892187754313152, 0.00013356208801269532, 301.0, 178.16482661664486))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.188551584879557e-5, 0.010512995719909667, 300.0, 29.670004767831415)
p = PerformanceResult(1.0, 1.0, 1.0, 6.316502888997396e-5, 3.062884012858073e-5, 300.0, 29.670004767831415)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003808927536010742, 0.0035243988037109374, 300.0, 1.948640635436277)
p = PerformanceResult(1.0, 1.0, 1.0, 0.000217233763800727, 2.19265619913737e-5, 300.0, 1.948640635436277)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.188551584879557e-5, 0.010512995719909667, 300.0, 29.670004767831415), PerformanceResult(1.0, 1.0, 1.0, 6.316502888997396e-5, 3.062884012858073e-5, 300.0, 29.670004767831415), PerformanceResult(1.0, 1.0, 1.0, 0.003808927536010742, 0.0035243988037109374, 300.0, 1.948640635436277), PerformanceResult(1.0, 1.0, 1.0, 0.000217233763800727, 2.19265619913737e-5, 300.0, 1.948640635436277))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008007280031840007, 0.0037426312764485678, 348.0, 28657.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006994422276814779, 0.0038451671600341795, 303.6333333333333, 6960.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4549166361490886e-5, 1.1603037516276041e-5, 91.9, 48.92108869552612))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3563702901204426e-5, 1.190503438313802e-5, 82.0, 71.3231372833252))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.689361572265625e-5, 1.719792683919271e-5, 86.73333333333333, 39.807780027389526))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.697741190592448e-5, 0.00017580191294352214, 91.66666666666667, 44.26753268390894))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7866666666666667, 0.7866666666666667, 0.7866666666666667, 4.818439483642578e-5, 0.00012737115224202474, 68.83333333333333, 187.98741887509823))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-01T05:31:10.296
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9127500000000001, 0.9009999999999999, 0.905748366013072, 2.8200149536132813e-5, 2.5339126586914063e-5, 152.49, 50.74584780097939))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5877952575683595e-5, 2.2258758544921875e-5, 155.84, 0.0))
*** advance 1 from 1000; 2020-08-01T05:31:11.150
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.93025, 0.9130000000000001, 0.9199150326797385, 2.2437572479248047e-5, 5.613088607788086e-5, 151.92, 73.20402855239809))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.199888229370117e-5, 3.033161163330078e-5, 155.38, 0.0))
*** advance 1 from 1000; 2020-08-01T05:31:11.965
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.92975, 0.916, 0.9217189542483659, 2.5377273559570312e-5, 3.4239292144775394e-5, 153.23, 40.267520781606436))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4399757385253907e-5, 3.093957901000977e-5, 156.86, 0.0))
*** advance 1 from 1000; 2020-08-01T05:31:12.677
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9301428571428574, 0.9130000000000001, 0.9199771241830067, 0.00010201454162597656, 0.0005058503150939942, 152.03, 44.759112384868786))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010468006134033203, 0.0006043910980224609, 155.41, 0.0))
*** advance 1 from 1000; 2020-08-01T05:31:13.262
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9750000000000004, 0.9750000000000004, 0.9750000000000004, 9.81903076171875e-5, 0.00040875911712646485, 166.64, 191.9545980161056))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.849071502685547e-5, 0.0004479384422302246, 171.33, 0.0))
*** advance 1 from 1000; 2020-08-01T05:31:14.484
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9127500000000001, 0.9009999999999999, 0.905748366013072, 6.319761276245117e-5, 9.085178375244141e-5, 152.49, 50.757711976068094))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.248453140258789e-5, 7.057905197143554e-5, 155.84, 0.013960754498839378))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:16.486
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7500000000000001, 0.7500000000000001, 0.7500000000000001, 0.0017119789123535157, 7.481813430786133e-5, 198.95, 193.53333549201488))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:17.502
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7430000000000001, 0.7430000000000001, 0.7430000000000001, 0.0014647340774536133, 7.483005523681641e-5, 201.7, 111.55238318443298))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:18.411
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6300000000000001, 0.6300000000000001, NaN, 0.0015228605270385743, 7.174015045166015e-5, 265.43, 2.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:19.251
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9490000000000001, 0.9490000000000001, 0.9490000000000001, 0.0016836190223693847, 1.9159317016601562e-5, 224.19, 609.4000205248594))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:20.320
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5800000000000001, 0.5800000000000001, 0.5800000000000001, 0.0016240477561950684, 0.0004031896591186523, 259.06, 2375.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:21.269
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3949999999999999, 0.3949999999999999, NaN, 0.0015226006507873535, 0.00047935009002685546, 237.64, 3690.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T05:31:22.232
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5890000000000001, 0.5890000000000001, 0.5890000000000001, 0.0014891171455383302, 3.395795822143555e-5, 247.13, 2406.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0294906166219837, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9815705128205131,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.7421875,"distances_sum":633.6853165030479}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0294906166219837,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9815705128205131,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.7421875,"distances_sum":633.6853165030479}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.045372050816697, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9719207875457879,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.609375,"distances_sum":615.7447460889816}, best_list's length: 6, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.045372050816697,"state":{"restarts":3},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9719207875457879,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.609375,"distances_sum":615.7447460889816}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0491803278688527, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9698546245421249,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.578125,"distances_sum":610.0702840685844}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0491803278688527,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9698546245421249,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.578125,"distances_sum":610.0702840685844}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0491803278688527,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9698546245421249,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":2.0936131477355957e-6,"evaluations":8.578125,"distances_sum":610.0702840685844}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.793376733654118, conf: {"restarts":11}, perf: {"precision":0.9149305555555546,"recall":0.9149305555555546,"f1":0.9149305555555546,"seconds":3.0213966965675354e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":55.203125,"distances_sum":297.34917721152306}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.921747042766151, conf: {"restarts":8}, perf: {"precision":0.9114583333333323,"recall":0.9114583333333323,"f1":0.9114583333333323,"seconds":2.796575427055359e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":51.515625,"distances_sum":297.21433252096176}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8880208333333324, conf: {"restarts":7}, perf: {"precision":0.8880208333333324,"recall":0.8880208333333324,"f1":0.8880208333333324,"seconds":2.6805326342582703e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":47.03125,"distances_sum":300.399922773242}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.83068477318694, conf: {"restarts":10}, perf: {"precision":0.9071180555555546,"recall":0.9071180555555546,"f1":0.9071180555555546,"seconds":2.8580427169799805e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":54.078125,"distances_sum":298.1925633251667}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.921747042766151,"state":{"restarts":8},"perf":{"precision":0.9114583333333323,"recall":0.9114583333333323,"f1":0.9114583333333323,"seconds":2.796575427055359e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":51.515625,"distances_sum":297.21433252096176}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.921747042766151,"state":{"restarts":8},"perf":{"precision":0.9114583333333323,"recall":0.9114583333333323,"f1":0.9114583333333323,"seconds":2.796575427055359e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":51.515625,"distances_sum":297.21433252096176}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.921747042766151,"state":{"restarts":8},"perf":{"precision":0.9114583333333323,"recall":0.9114583333333323,"f1":0.9114583333333323,"seconds":2.796575427055359e-5,"exhaustive_search_seconds":7.757917046546936e-6,"evaluations":51.515625,"distances_sum":297.21433252096176}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.865451388888888, conf: {"restarts":15}, perf: {"precision":0.865451388888888,"recall":0.865451388888888,"f1":0.865451388888888,"seconds":6.545521318912506e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":158.59375,"distances_sum":126.44186470005661}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999989, conf: {"restarts":1}, perf: {"precision":0.8749999999999989,"recall":0.8749999999999989,"f1":0.8749999999999989,"seconds":3.355182707309723e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":67.21875,"distances_sum":126.47131929267198}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888875, conf: {"restarts":4}, perf: {"precision":0.8654513888888875,"recall":0.8654513888888875,"f1":0.8654513888888875,"seconds":3.956817090511322e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":87.7265625,"distances_sum":126.4024827228859}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999989,"state":{"restarts":1},"perf":{"precision":0.8749999999999989,"recall":0.8749999999999989,"f1":0.8749999999999989,"seconds":3.355182707309723e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":67.21875,"distances_sum":126.47131929267198}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555545, conf: {"restarts":14}, perf: {"precision":0.8758680555555545,"recall":0.8758680555555545,"f1":0.8758680555555545,"seconds":6.464309990406036e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":153.9453125,"distances_sum":125.8269908213988}, best_list's length: 12, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555545,"state":{"restarts":14},"perf":{"precision":0.8758680555555545,"recall":0.8758680555555545,"f1":0.8758680555555545,"seconds":6.464309990406036e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":153.9453125,"distances_sum":125.8269908213988}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8758680555555545,"state":{"restarts":14},"perf":{"precision":0.8758680555555545,"recall":0.8758680555555545,"f1":0.8758680555555545,"seconds":6.464309990406036e-5,"exhaustive_search_seconds":3.102235496044159e-5,"evaluations":153.9453125,"distances_sum":125.8269908213988}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888878, conf: {"restarts":24}, perf: {"precision":0.8498263888888878,"recall":0.8498263888888878,"f1":null,"seconds":0.00018360652029514313,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":328.0546875,"distances_sum":56.58685207297094}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444434, conf: {"restarts":18}, perf: {"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":0.00013914704322814941,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":282.1328125,"distances_sum":56.00556021486409}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999989, conf: {"restarts":27}, perf: {"precision":0.8671874999999989,"recall":0.8671874999999989,"f1":0.8671874999999989,"seconds":0.00021047517657279968,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":356.03125,"distances_sum":56.112776319729164}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666659, conf: {"restarts":20}, perf: {"precision":0.8697916666666659,"recall":0.8697916666666659,"f1":null,"seconds":0.0003426428884267807,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":295.09375,"distances_sum":56.486641372786835}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8697916666666659,"state":{"restarts":20},"perf":{"precision":0.8697916666666659,"recall":0.8697916666666659,"f1":null,"seconds":0.0003426428884267807,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":295.09375,"distances_sum":56.486641372786835}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8697916666666659,"state":{"restarts":20},"perf":{"precision":0.8697916666666659,"recall":0.8697916666666659,"f1":null,"seconds":0.0003426428884267807,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":295.09375,"distances_sum":56.486641372786835}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8697916666666659,"state":{"restarts":20},"perf":{"precision":0.8697916666666659,"recall":0.8697916666666659,"f1":null,"seconds":0.0003426428884267807,"exhaustive_search_seconds":0.0003719460219144821,"evaluations":295.09375,"distances_sum":56.486641372786835}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(20), SatNeighborhood(32), 2020-08-01T05:31:30.630
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2015, 0.06438264f0), Item(8733, 0.07044794f0), Item(8847, 0.07928955f0), Item(7999, 0.07968408f0), Item(4228, 0.08343405f0), Item(2006, 0.08625857f0), Item(4874, 0.09795816f0), Item(6606, 0.100022934f0), Item(3577, 0.10294188f0), Item(2516, 0.10607187f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0588235294117645, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9593104811854816,"seconds":7.245689630508423e-6,"exhaustive_search_seconds":2.468004822731018e-6,"evaluations":8.5,"distances_sum":620.2494315356016}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0588235294117645,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9593104811854816,"seconds":7.245689630508423e-6,"exhaustive_search_seconds":2.468004822731018e-6,"evaluations":8.5,"distances_sum":620.2494315356016}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0588235294117645,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9593104811854816,"seconds":7.245689630508423e-6,"exhaustive_search_seconds":2.468004822731018e-6,"evaluations":8.5,"distances_sum":620.2494315356016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0588235294117645,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9593104811854816,"seconds":7.245689630508423e-6,"exhaustive_search_seconds":2.468004822731018e-6,"evaluations":8.5,"distances_sum":620.2494315356016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.084712755598831, conf: {"bsize":3}, perf: {"precision":0.9774305555555551,"recall":0.9774305555555551,"f1":0.9774305555555551,"seconds":1.578405499458313e-5,"exhaustive_search_seconds":7.946044206619263e-6,"evaluations":32.09375,"distances_sum":275.644629528746}, best_list's length: 2, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.084712755598831,"state":{"bsize":3},"perf":{"precision":0.9774305555555551,"recall":0.9774305555555551,"f1":0.9774305555555551,"seconds":1.578405499458313e-5,"exhaustive_search_seconds":7.946044206619263e-6,"evaluations":32.09375,"distances_sum":275.644629528746}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.084712755598831,"state":{"bsize":3},"perf":{"precision":0.9774305555555551,"recall":0.9774305555555551,"f1":0.9774305555555551,"seconds":1.578405499458313e-5,"exhaustive_search_seconds":7.946044206619263e-6,"evaluations":32.09375,"distances_sum":275.644629528746}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.084712755598831,"state":{"bsize":3},"perf":{"precision":0.9774305555555551,"recall":0.9774305555555551,"f1":0.9774305555555551,"seconds":1.578405499458313e-5,"exhaustive_search_seconds":7.946044206619263e-6,"evaluations":32.09375,"distances_sum":275.644629528746}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.10891089108911,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":3.5954639315605164e-5,"exhaustive_search_seconds":3.6913901567459106e-5,"evaluations":58.390625,"distances_sum":123.30852914694697}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.10891089108911,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":3.5954639315605164e-5,"exhaustive_search_seconds":3.6913901567459106e-5,"evaluations":58.390625,"distances_sum":123.30852914694697}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.87762669962918, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":7.043778896331787e-5,"exhaustive_search_seconds":0.00042301416397094727,"evaluations":101.125,"distances_sum":52.790848314529285}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.87762669962918,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":7.043778896331787e-5,"exhaustive_search_seconds":0.00042301416397094727,"evaluations":101.125,"distances_sum":52.790848314529285}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.87762669962918,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":7.043778896331787e-5,"exhaustive_search_seconds":0.00042301416397094727,"evaluations":101.125,"distances_sum":52.790848314529285}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.87762669962918,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":7.043778896331787e-5,"exhaustive_search_seconds":0.00042301416397094727,"evaluations":101.125,"distances_sum":52.790848314529285}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-08-01T05:31:35.049
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1373, 0.04288389f0), Item(8539, 0.04326808f0), Item(724, 0.04510244f0), Item(1705, 0.047129337f0), Item(4823, 0.047712766f0), Item(3550, 0.052761957f0), Item(2268, 0.053162523f0), Item(1497, 0.05349086f0), Item(715, 0.053574577f0), Item(1668, 0.05515003f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
