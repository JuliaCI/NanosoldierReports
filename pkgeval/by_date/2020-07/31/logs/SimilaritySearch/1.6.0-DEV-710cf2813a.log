Julia Version 1.6.0-DEV.558
Commit 710cf2813a (2020-07-30 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.19
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_1oN6EC/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_1oN6EC/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(15, 0.026418924f0), Item(22, 0.03135109f0), Item(17, 0.040183663f0), Item(42, 0.051481605f0)])
Vsorted = Item[Item(15, 0.026418924f0), Item(22, 0.03135109f0), Item(17, 0.040183663f0), Item(42, 0.051481605f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004176203409830729, 0.00403443972269694, 301.0, 49.98280358687043))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003957851727803548, 0.004385797182718912, 301.0, 73.4623429775238))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003935082753499349, 0.004492537180582682, 301.0, 40.434260964393616))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0040413777033487955, 0.004139129320780436, 301.0, 8.970615321886726))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003862770398457845, 0.005282966295878092, 301.0, 45.08537382259965))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001561562220255534, 0.00014189879099527994, 301.0, 180.04612278193235))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.035168965657552e-5, 0.011256996790568035, 300.0, 25.632845020852983)
p = PerformanceResult(1.0, 1.0, 1.0, 5.96920649210612e-5, 3.073215484619141e-5, 300.0, 25.632845020852983)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004988559087117513, 0.0036773045857747396, 300.0, 1.271646102599334)
p = PerformanceResult(1.0, 1.0, 1.0, 5.994372897677951e-5, 2.266565958658854e-5, 300.0, 1.271646102599334)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.035168965657552e-5, 0.011256996790568035, 300.0, 25.632845020852983), PerformanceResult(1.0, 1.0, 1.0, 5.96920649210612e-5, 3.073215484619141e-5, 300.0, 25.632845020852983), PerformanceResult(1.0, 1.0, 1.0, 0.004988559087117513, 0.0036773045857747396, 300.0, 1.271646102599334), PerformanceResult(1.0, 1.0, 1.0, 5.994372897677951e-5, 2.266565958658854e-5, 300.0, 1.271646102599334))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 119.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00770112673441569, 0.003723732630411784, 346.3666666666667, 28652.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006606046358744303, 0.0033464352289835613, 304.56666666666666, 6990.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5351842244466145e-5, 1.1467933654785157e-5, 92.36666666666666, 49.814996246248484))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3357073465983073e-5, 1.2795130411783854e-5, 82.6, 73.21597921848297))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9540061950683595e-5, 1.3899803161621093e-5, 85.46666666666667, 40.30096089839935))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011124610900878907, 0.00015799999237060548, 92.8, 44.92001708969474))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8133333333333332, 0.8133333333333332, 0.8133333333333332, 8.742809295654297e-5, 0.00021692911783854167, 68.5, 188.76945837587118))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-01T00:43:00.270
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.917, 0.917, 0.917, 2.260446548461914e-5, 2.2139549255371094e-5, 153.85, 50.368254172150046))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1665096282958985e-5, 1.744985580444336e-5, 157.48, 0.0))
*** advance 1 from 1000; 2020-08-01T00:43:00.919
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8984444444444445, 0.8960000000000001, 0.8971578947368422, 2.2399425506591798e-5, 2.5501251220703124e-5, 152.21, 75.01476857159287))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1958351135253905e-5, 1.9991397857666014e-5, 155.75, 0.0))
*** advance 1 from 1000; 2020-08-01T00:43:01.547
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8970000000000001, 0.8960000000000002, 0.8964736842105264, 2.5811195373535157e-5, 3.159999847412109e-5, 153.28, 41.04606436192989))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4924278259277345e-5, 2.892017364501953e-5, 156.82, 0.0))
*** advance 1 from 1000; 2020-08-01T00:43:02.208
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.00010297775268554688, 0.0005022788047790527, 153.8, 45.56855212873779))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.881019592285156e-5, 0.000544121265411377, 157.29, 0.0))
*** advance 1 from 1000; 2020-08-01T00:43:02.775
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9740000000000001, 0.9740000000000001, 0.9740000000000001, 9.492158889770508e-5, 0.00039893150329589844, 165.85, 188.04581361822784))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.59157943725586e-5, 0.0004295420646667481, 170.64, 0.0))
*** advance 1 from 1000; 2020-08-01T00:43:03.926
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.917, 0.917, 0.917, 3.473281860351563e-5, 7.422924041748046e-5, 153.85, 50.37820115417708))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 4.762887954711914e-5, 0.00010902881622314453, 157.48, 0.015744902339065447))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:06.041
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7289999999999999, 0.7289999999999999, 0.7289999999999999, 0.0019739532470703126, 8.786916732788086e-5, 197.21, 188.5500020980835))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:07.300
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7450000000000003, 0.7450000000000003, 0.7450000000000003, 0.0019375300407409668, 8.910179138183594e-5, 201.36, 107.13254190981388))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:08.437
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6579999999999998, 0.6579999999999998, 0.6579999999999998, 0.001656334400177002, 0.00010925054550170899, 273.19, 3.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:09.318
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9460000000000001, 0.9460000000000001, 0.9460000000000001, 0.0014318394660949706, 1.9021034240722657e-5, 223.13, 606.0000203847885))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:10.271
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6049999999999998, 0.6049999999999998, 0.6049999999999998, 0.0015977764129638673, 0.00034297943115234374, 252.7, 2324.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:11.224
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4039999999999999, 0.4039999999999999, 0.4039999999999999, 0.001612536907196045, 0.0004875612258911133, 244.95, 3650.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T00:43:12.257
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.616, 0.616, 0.616, 0.001450514793395996, 3.34787368774414e-5, 245.27, 2344.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0607734806629834, conf: {"restarts":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9649553571428577,"seconds":7.469207048416138e-6,"exhaustive_search_seconds":2.462416887283325e-6,"evaluations":8.484375,"distances_sum":563.4337258189917}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.080675422138837, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9536114926739934,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":2.462416887283325e-6,"evaluations":8.328125,"distances_sum":549.7777660638094}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.080675422138837,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9536114926739934,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":2.462416887283325e-6,"evaluations":8.328125,"distances_sum":549.7777660638094}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.080675422138837,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9536114926739934,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":2.462416887283325e-6,"evaluations":8.328125,"distances_sum":549.7777660638094}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.080675422138837,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9536114926739934,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":2.462416887283325e-6,"evaluations":8.328125,"distances_sum":549.7777660638094}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6741973840665874, conf: {"restarts":13}, perf: {"precision":0.919270833333332,"recall":0.919270833333332,"f1":0.919270833333332,"seconds":2.849474549293518e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":59.1328125,"distances_sum":297.3891099039465}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8914930555555542, conf: {"restarts":10}, perf: {"precision":0.8914930555555542,"recall":0.8914930555555542,"f1":0.8914930555555542,"seconds":4.9171969294548035e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":53.4453125,"distances_sum":300.0737087223679}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999991, conf: {"restarts":11}, perf: {"precision":0.8984374999999991,"recall":0.8984374999999991,"f1":0.8984374999999991,"seconds":4.290975630283356e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":54.84375,"distances_sum":299.71324221231043}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6741973840665874,"state":{"restarts":13},"perf":{"precision":0.919270833333332,"recall":0.919270833333332,"f1":0.919270833333332,"seconds":2.849474549293518e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":59.1328125,"distances_sum":297.3891099039465}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6741973840665874,"state":{"restarts":13},"perf":{"precision":0.919270833333332,"recall":0.919270833333332,"f1":0.919270833333332,"seconds":2.849474549293518e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":59.1328125,"distances_sum":297.3891099039465}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.6741973840665874,"state":{"restarts":13},"perf":{"precision":0.919270833333332,"recall":0.919270833333332,"f1":0.919270833333332,"seconds":2.849474549293518e-5,"exhaustive_search_seconds":4.4852495193481445e-6,"evaluations":59.1328125,"distances_sum":297.3891099039465}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444435, conf: {"restarts":11}, perf: {"precision":0.8819444444444435,"recall":0.8819444444444435,"f1":0.8819444444444435,"seconds":8.469447493553162e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":138.515625,"distances_sum":125.74064666591585}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8993055555555545, conf: {"restarts":16}, perf: {"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":9.660795331001282e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":168.09375,"distances_sum":124.6239239629358}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8940972222222211, conf: {"restarts":18}, perf: {"precision":0.8940972222222211,"recall":0.8940972222222211,"f1":0.8940972222222211,"seconds":9.314343333244324e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":183.5703125,"distances_sum":124.86161054484546}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8993055555555545,"state":{"restarts":16},"perf":{"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":9.660795331001282e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":168.09375,"distances_sum":124.6239239629358}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8993055555555545,"state":{"restarts":16},"perf":{"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":9.660795331001282e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":168.09375,"distances_sum":124.6239239629358}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8993055555555545,"state":{"restarts":16},"perf":{"precision":0.8993055555555545,"recall":0.8993055555555545,"f1":0.8993055555555545,"seconds":9.660795331001282e-5,"exhaustive_search_seconds":6.145238876342773e-5,"evaluations":168.09375,"distances_sum":124.6239239629358}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8420138888888881, conf: {"restarts":14}, perf: {"precision":0.8420138888888881,"recall":0.8420138888888881,"f1":null,"seconds":0.00013873912394046783,"exhaustive_search_seconds":0.00051877461373806,"evaluations":234.90625,"distances_sum":57.66812753351405}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888878, conf: {"restarts":23}, perf: {"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":0.00028659217059612274,"exhaustive_search_seconds":0.00051877461373806,"evaluations":317.4140625,"distances_sum":56.78644388215616}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888878,"state":{"restarts":23},"perf":{"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":0.00028659217059612274,"exhaustive_search_seconds":0.00051877461373806,"evaluations":317.4140625,"distances_sum":56.78644388215616}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555546, conf: {"restarts":18}, perf: {"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.00013953261077404022,"exhaustive_search_seconds":0.00051877461373806,"evaluations":270.2109375,"distances_sum":56.53927745344117}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555546,"state":{"restarts":18},"perf":{"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.00013953261077404022,"exhaustive_search_seconds":0.00051877461373806,"evaluations":270.2109375,"distances_sum":56.53927745344117}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555546,"state":{"restarts":18},"perf":{"precision":0.8602430555555546,"recall":0.8602430555555546,"f1":0.8602430555555546,"seconds":0.00013953261077404022,"exhaustive_search_seconds":0.00051877461373806,"evaluations":270.2109375,"distances_sum":56.53927745344117}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(18), SatNeighborhood(32), 2020-08-01T00:43:20.738
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3887, 0.016105972f0), Item(553, 0.022504123f0), Item(8727, 0.033408187f0), Item(8905, 0.03522796f0), Item(2229, 0.043787085f0), Item(8495, 0.044290353f0), Item(2034, 0.04811401f0), Item(4788, 0.049707174f0), Item(7538, 0.055826932f0), Item(5390, 0.056864027f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.07563025210084, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9534543581418585,"seconds":6.591901183128357e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.3671875,"distances_sum":550.0937606543303}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0607734806629834, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9601081210456215,"seconds":8.421018719673157e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.484375,"distances_sum":562.7141194492579}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.07563025210084,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9534543581418585,"seconds":6.591901183128357e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.3671875,"distances_sum":550.0937606543303}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.088846880907372, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9469665750915754,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.265625,"distances_sum":546.4428160339594}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9469665750915754,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.265625,"distances_sum":546.4428160339594}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9469665750915754,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.265625,"distances_sum":546.4428160339594}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.088846880907372,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9469665750915754,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":2.514570951461792e-6,"evaluations":8.265625,"distances_sum":546.4428160339594}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.17753259779338, conf: {"bsize":3}, perf: {"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":1.6497448086738586e-5,"exhaustive_search_seconds":7.709488272666931e-6,"evaluations":31.15625,"distances_sum":277.93298111483455}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.17753259779338,"state":{"bsize":3},"perf":{"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":1.6497448086738586e-5,"exhaustive_search_seconds":7.709488272666931e-6,"evaluations":31.15625,"distances_sum":277.93298111483455}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.17753259779338,"state":{"bsize":3},"perf":{"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":1.6497448086738586e-5,"exhaustive_search_seconds":7.709488272666931e-6,"evaluations":31.15625,"distances_sum":277.93298111483455}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.17753259779338,"state":{"bsize":3},"perf":{"precision":0.9826388888888885,"recall":0.9826388888888885,"f1":0.9826388888888885,"seconds":1.6497448086738586e-5,"exhaustive_search_seconds":7.709488272666931e-6,"evaluations":31.15625,"distances_sum":277.93298111483455}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.262495230827927,"state":{"bsize":3},"perf":{"precision":0.987847222222222,"recall":0.987847222222222,"f1":0.987847222222222,"seconds":3.26354056596756e-5,"exhaustive_search_seconds":3.1577423214912415e-5,"evaluations":61.4296875,"distances_sum":120.41413005720824}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.262495230827927,"state":{"bsize":3},"perf":{"precision":0.987847222222222,"recall":0.987847222222222,"f1":0.987847222222222,"seconds":3.26354056596756e-5,"exhaustive_search_seconds":3.1577423214912415e-5,"evaluations":61.4296875,"distances_sum":120.41413005720824}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.38951851584494, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.321499288082123e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":108.2265625,"distances_sum":54.52777943201363}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.05764034824377, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.75451010465622e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":104.09375,"distances_sum":54.52466374821961}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.98939072446196, conf: {"bsize":8}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.036514580249786e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":103.09375,"distances_sum":54.52777943201363}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.98939072446196,"state":{"bsize":8},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.036514580249786e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":103.09375,"distances_sum":54.52777943201363}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.98939072446196,"state":{"bsize":8},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.036514580249786e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":103.09375,"distances_sum":54.52777943201363}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.98939072446196,"state":{"bsize":8},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.036514580249786e-5,"exhaustive_search_seconds":0.00036205537617206573,"evaluations":103.09375,"distances_sum":54.52777943201363}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(8), SatNeighborhood(32), 2020-08-01T00:43:24.741
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2832, 0.022127485f0), Item(7727, 0.023227038f0), Item(3572, 0.032654114f0), Item(6916, 0.037188392f0), Item(4747, 0.040451113f0), Item(3792, 0.043613303f0), Item(652, 0.045647208f0), Item(1144, 0.049446844f0), Item(4915, 0.06421023f0), Item(8083, 0.07051639f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
