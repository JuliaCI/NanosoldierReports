Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed UnPack ────────────── v1.0.1
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed VectorizationBase ─── v0.12.29
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_4X84XF/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_4X84XF/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-7.182032746300138e-13, -1.553202011450594e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.828626635841829e-12, 1.5051959678658022e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5580314816077134e-11, -3.029532180676142e-11, 7.315481553860081e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0305201964276876e-11, -3.929356839904585e-11, -1.765254609153999e-14]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-4.18243217836789e-12, 4.360956040727615e-13, -8.511191751381375e-12, 3.2174263253637037e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.696987078110169e-11, 6.210143510543276e-12, -5.209044307008526e-11, 1.3665069076296277e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [1.531219595563016e-11, 2.2706725388843552e-11, 3.220357314148714e-11, 4.6845194390243705e-11, 8.172573728870702e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1094237467877974e-12, -1.7916601535716836e-10, 5.785372181321691e-12, -3.5988456659197254e-10, 6.848486222565953e-10]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.7497781001907242e-11, -3.015188099197985e-11, -6.482148151576439e-12, 3.827405059553257e-11, -6.000944186013157e-11, -1.1255441023649837e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.496769954291494e-11, 2.2168933355715126e-12, 2.1321344689795296e-10, -1.615438893765031e-10, 5.146549852952376e-12, 4.250648721892958e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.2025047624319996e-11, 1.7492229886784116e-11, -2.7143842729060452e-12, 3.152300642739192e-11, 3.122857528126133e-11, -4.0644154708502356e-12, 1.43642875372052e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7841284005726266e-13, -2.3977486662829506e-12, 5.496048061104375e-12, -3.326228181776969e-13, -5.145772696835138e-12, 1.1296075186351118e-11, 8.282263763703668e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5995749169661622e-10, -2.9891644715007715e-11, 6.998801538316002e-11, 2.0881074647149944e-10, -3.3445923808272937e-10, -4.7324921759184235e-11, 1.395037418916445e-10, 4.0611936036327734e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.694289649862185e-12, -2.2420953982305036e-12, 6.437073096776658e-13, -6.087352844019733e-13, -1.6400880653577588e-11, -2.9206637108813993e-12, -4.574118861455645e-14, -1.7931212070720903e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [7.294675974378606e-11, -3.5005331966431186e-11, 2.1405321959377943e-11, -2.856825886965453e-12, 1.6515144807272009e-10, -6.587252965317703e-11, 3.284927885260913e-11, -1.2264300686126717e-11, -2.3817614547283483e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.628852773829294e-11, -1.49036338825681e-11, 5.929257085313111e-11, 6.789013795582832e-11, -8.628064929183665e-11, -3.732636422171254e-11, 1.2658829540157512e-10, 1.339905963959609e-10, -3.92418986194798e-10]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [4.9287462999814124e-11, -9.382195020890549e-11, -4.4715786629012655e-11, -1.1143752587372546e-11, 5.823563853368796e-12, 1.04392716693269e-10, -1.9030277353948577e-10, -8.594014389018412e-11, -2.1425639040728583e-11, 6.718847700426522e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [8.111267213450901e-11, 1.406375016443917e-10, -1.356672552077498e-10, -7.185385619834506e-11, 5.610445441561751e-11, 1.51873846832018e-10, 2.807682975003445e-10, -2.7029001259393226e-10, -1.4008438853352345e-10, 1.0828893337588852e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-3.001199289087708e-11, -4.990696744755496e-11, 1.503943636294025e-10, 5.356404209067023e-11, -1.2123413384301784e-11, -5.537359459850677e-11, -1.0289158414167332e-10, 3.039741791610595e-10, 1.0403167216566089e-10, -2.6349034065731303e-11, 2.8388402739665253e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.458773350535239e-10, 7.204681296002491e-12, 7.973732785160337e-11, -1.117119730054128e-10, -1.121935877534952e-10, 8.735789869263044e-10, 1.7556178733002525e-11, 1.604198995863726e-10, -2.24857799047129e-10, -2.2229240670412764e-10, 4.154454558147336e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [3.5323521885288756e-11, -1.9938384276940724e-11, -6.463607427065199e-11, -2.7164270832713555e-11, 7.672040780448697e-11, 8.519962513275914e-11, 6.034550636968561e-11, -5.183187212765006e-11, -1.3211498561815915e-10, -6.045930422970969e-11, 1.5579182388592017e-10, 1.61926250186184e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.823230786461409e-11, 4.3433256990965674e-11, -3.01434432969927e-11, 3.405231652209295e-11, -1.1724177184646578e-11, 4.214384397016602e-11, 1.1584710968293166e-10, 8.574385645943039e-11, -6.026312782125842e-11, 6.452327561135007e-11, -2.0608736939209393e-11, 8.194778189363205e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [7.735945217746121e-11, 1.1875389560600524e-11, 7.424794112864674e-11, 1.85049309209262e-10, -2.9310442961616445e-11, -1.1803480415295553e-10, 1.58342450262694e-10, 2.4267921006071447e-11, 1.3800360854077098e-10, 3.7461189705823017e-10, -6.805733754333687e-11, -2.376614460786186e-10, 1.6990853168863396e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.004330531719006e-11, 5.889577714413008e-11, 4.25472990173148e-11, -6.488432013895817e-11, -1.0741885159148978e-10, -9.122147481832599e-12, -1.6528156621120615e-10, 1.2394885118283128e-10, 8.683653796026647e-11, -1.2597300980132786e-10, -2.2241886110663245e-10, -1.7533197116392785e-11, 5.868638908168577e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2738699811952756e-11, 2.8206104119021802e-11, -3.965383577053672e-12, -4.2288506030274675e-11, -1.509292690826669e-11, -6.34670094257217e-12, 2.621169947758517e-11, -4.5768722145567153e-11, 5.3235194030776256e-11, -5.526246127374179e-12, -8.087330805039983e-11, -2.7568058946769725e-11, -1.5836332245555695e-11, 4.941003162173274e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.113953539468639e-12, -2.3049340214242875e-12, 2.14608331106092e-11, -2.543187882508846e-11, 2.5707436179800425e-11, -5.128109048513352e-11, -1.7955970044170044e-11, 4.612088488897825e-12, -4.835909450662257e-12, 4.2048364790048254e-11, -5.220057719412807e-11, 5.472089448232964e-11, -1.0302680930607266e-10, -3.6483704946022044e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-3.797517855730348e-12, 1.2945200467129325e-12, 2.212852123761877e-11, -6.092681914537934e-12, 2.4019897182370187e-11, -3.214717381183618e-11, -9.476863738200336e-12, -9.003575662802632e-12, 3.652633751016765e-12, 4.2898795626911124e-11, -1.1412315537029372e-11, 5.163158789400768e-11, -6.565159527127662e-11, -1.836486518413949e-11, 8.060219158778636e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [4.384936858059518e-12, 4.370703798883824e-11, 7.876499452663666e-11, 1.5553291987657758e-10, 1.5715873047383866e-11, 2.0575297021707684e-10, 1.0490697199827537e-10, 9.552358903874847e-13, 8.86082318629633e-11, 1.6098256061525262e-10, 3.212932142560021e-10, 2.7306379379865575e-11, 4.009466092469438e-10, 2.1146195905430432e-10, 1.978417429882029e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2846280423038934e-11, -6.458522605612416e-11, -2.72165623371734e-11, -5.423950177885217e-11, -8.598244338742234e-11, 1.194462306841615e-10, 4.810329912174893e-11, -1.1699075042059803e-10, -4.259459451816383e-11, -1.3408019139404814e-10, -5.4391824377830744e-11, -1.1172729408315263e-10, -1.7525869644430259e-10, 2.406039811830851e-10, 9.710054982292604e-11, -2.36540786957562e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.02581540221081e-10, 4.3750914002771424e-10, -2.3473978316701505e-10, 1.9377144333532215e-10, 2.152682476719292e-10, -1.951606654060356e-10, 6.625791026948491e-10, -4.0753744823263105e-10, 1.203664501403523e-9, 8.85937101458012e-10, -4.747952031536329e-10, 3.701687845136803e-10, 4.2531556054825614e-10, -3.859105257575379e-10, 1.3206873372695327e-9, -8.122666983467752e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [5.052180895859237e-12, -2.397104736928668e-11, 4.2758907525808354e-11, 7.953926406401024e-11, 1.581001995987208e-11, -5.911604539221571e-12, -4.7193471353068617e-11, -1.4014833737974186e-10, 1.0520251336743058e-11, -4.754852067634374e-11, 7.50060014098608e-11, 1.581126340965966e-10, 3.339084564402128e-11, -1.5246692797177275e-11, -1.0645273551546097e-10, -2.5895274813336755e-10, -4.506950368465823e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0902467817430761e-10, 6.903833060789566e-11, -4.377642692787731e-11, 1.3148859778766564e-10, 7.99478261370723e-11, 1.0697331909170771e-10, 4.158895450245836e-12, 5.544498193899017e-11, -2.1313739662076614e-10, 1.43109746275627e-10, -8.854172950378825e-11, 2.5312973939151107e-10, 1.6816081860326904e-10, 2.0658696975317525e-10, 3.2593927556945346e-12, 1.0933054461759184e-10, 3.0588864774472313e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [1.1410872247097359e-12, 2.0711654613592145e-11, 5.900102628686454e-11, 1.2367884494324244e-12, 2.383204744660361e-12, 6.924549822429071e-11, -1.4088730182493236e-11, -7.474465490986404e-12, -6.219191828193971e-11, 3.927747016518879e-12, 3.402278458963792e-11, 1.1446554815108811e-10, 4.051203816857196e-12, 4.988454094245753e-12, 1.3900236517372377e-10, -3.353062272282159e-11, -1.723554632349078e-11, -1.2256606840566064e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.442956947845687e-11, -4.1137093731435925e-12, -4.428613031848272e-11, -2.552325018001511e-11, 7.76734232488252e-12, 2.3796520309815605e-11, -6.406286612303802e-11, -1.1543543898540065e-11, -1.3355316852425858e-11, 3.958788852287398e-11, 2.616795669041494e-12, -8.917566685084921e-11, -5.205036401889629e-11, 1.545075178910338e-11, 4.746003590128112e-11, -1.1507295116786054e-10, -1.768085677866793e-11, -2.3139712368447363e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-8.704026388528519e-11, 2.9887203822909214e-13, -1.4178325180580487e-10, 9.443135162712224e-11, 6.024092336076592e-11, -2.318500946785207e-11, 9.727285643634787e-11, 8.014700014769005e-12, 6.889355752548454e-11, -1.7274182084747736e-10, -1.2533307724993392e-12, -2.793608677720272e-10, 1.7759238524206467e-10, 1.2181988751081008e-10, -4.590772206825022e-11, 1.9893864333653255e-10, 2.5201618569781203e-11, 1.3888312722087903e-10, 1.8129497902918956e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.1763703606534364e-11, -8.15525424968655e-12, 5.0353277103454275e-11, -4.955658106098326e-10, 2.9842772697463715e-10, -1.7433121612953073e-10, -1.5992429602817992e-10, -5.686218162992418e-11, 1.074567101966295e-10, 8.559020159282227e-11, -1.5820567078606018e-11, 9.936718115000076e-11, -9.863838634771582e-10, 5.952236481476803e-10, -3.47028850100628e-10, -3.20178439316976e-10, -1.1863976467907378e-10, 2.139997068439925e-10, 3.319566843629218e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.2220224832049098e-10, -4.181777146783361e-11, 3.185784969161887e-11, 1.5234968842037233e-10, 5.771960687184219e-11, 1.5907808403881063e-10, -3.960276551140396e-11, 1.7337753455137772e-10, 5.643108202946223e-11, 1.393467563559625e-10, 2.3532975568230086e-10, -8.438916232478277e-11, 5.4189319698139116e-11, 2.938667087448721e-10, 1.252911108196031e-10, 3.170572693278473e-10, -7.770561971653933e-11, 3.5903124917524565e-10, 1.1502643282312874e-10, 2.844249280542499e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.465040394028506e-10, 8.809797336084557e-11, 1.5476975256945025e-10, 4.20568246894959e-10, -3.4103897483817036e-10, -2.2716584169302223e-10, 2.065039250709333e-10, -1.0103595737831483e-10, -4.0541703327789946e-10, 2.3079782529578097e-10, -5.026631333393539e-10, 1.6145906833742174e-10, 3.048867824873014e-10, 8.30518320782403e-10, -6.883154046732898e-10, -4.357807448229778e-10, 4.2046055526157033e-10, -2.0338886130844003e-10, -8.271499041256902e-10, 4.684777010766084e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [6.804712349151032e-11, 7.738920615452116e-12, 6.422751219758993e-11, 5.5465632087248196e-11, -4.832867439574784e-11, -2.0283041912705357e-10, 1.3772494256159007e-10, -3.578526364123036e-11, 2.872369009310205e-11, 1.582785014164756e-10, 1.4140244530835844e-10, 1.715338981966852e-11, 1.4079071242178998e-10, 1.1373457731167491e-10, -9.435452419381818e-11, -3.9925973638332835e-10, 2.690876410582632e-10, -7.428779813523079e-11, 6.076028569168557e-11, 3.155282701783335e-10, -2.956257461050882e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.802047813891932e-11, -9.880452012112073e-11, -7.598321971613586e-11, 1.3238965479445142e-11, 5.263967040036732e-11, 1.1838752200787894e-11, -4.356515148629114e-11, -2.7948865444216153e-11, 7.662426249055443e-11, 1.8106627308611678e-11, -1.374310665269718e-10, -1.9957524521885261e-10, -1.5863399482896057e-10, 2.4582114122040366e-11, 1.0599809918687697e-10, 3.7910119488060445e-11, -8.868494827396489e-11, -5.583611351056561e-11, 1.6772960798050462e-10, 3.066369380633205e-11, 6.3367089353505435e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [8.628209258176867e-12, -3.509381674149381e-11, 9.037215420448774e-14, -1.8810730750828952e-11, -1.5770607042497886e-11, -1.5642487305456143e-11, 2.7816193792773447e-11, 1.251998504869789e-11, 3.3470781701794294e-11, -4.154210309081918e-11, 1.3542722498982585e-11, 1.7080781233858033e-11, -7.215072983512982e-11, 2.743361093848762e-12, -3.506805956732251e-11, -3.3500868745761636e-11, -3.256406255758293e-11, 5.659606117092153e-11, 2.7182922579527258e-11, 6.640710203953404e-11, -8.260203632204366e-11, 3.0242475190789264e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.7347460113987836e-11, -7.649714195423485e-11, 5.8200555486109806e-11, 6.189049273075398e-11, -4.03442834695511e-11, 1.215105793761495e-10, -2.929656517380863e-12, 5.7420290744403246e-11, 1.019595519125005e-10, -2.4199153791926165e-10, -2.1956658713406796e-10, 1.269961913408224e-10, -1.613623679119769e-10, 1.1847300918077508e-10, 1.220932244194728e-10, -8.09702305204496e-11, 2.4863933134611216e-10, -4.207079129514568e-12, 1.081832401439442e-10, 1.9235635306813492e-10, -4.852549473355339e-10, -4.3282533113142563e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5077783466210803e-10, 1.4662493441619517e-11, 2.0726664828885077e-10, 4.228395411587371e-12, 1.6893442200682784e-10, -1.3944378984831474e-10, -9.065570516497701e-11, 1.3432788215084202e-10, 3.614908372640002e-11, -1.5350587467821697e-10, 9.250045174269417e-11, -3.081409571947802e-10, 1.2492673562292111e-11, 4.035918266254157e-10, 4.8470116809085084e-12, 3.4389779912658014e-10, -2.7772040223084105e-10, -1.868021293205402e-10, 2.535964771510635e-10, 6.315103995291338e-11, -3.040521168173882e-10, 1.8734369611195234e-10, -3.642752766097601e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0874313388929977e-10, -1.1050516057764526e-10, -1.7936330198864425e-9, 2.2150126177677976e-10, 4.3578474162586645e-12, 1.2152636674755968e-9, -3.596554165596899e-10, -7.297307202946968e-11, -2.3124796522111524e-9, -8.947108609547172e-10, 3.550497451598744e-9, -4.1897274538627016e-10, -2.2252100162489796e-10, -3.5946638998751723e-9, 4.4518522201997257e-10, 8.912204307875982e-12, 2.4316297864146463e-9, -7.196379048224344e-10, -1.4552059557360053e-10, -4.632897954159887e-9, -1.793237780489676e-9, 7.115534828017189e-9, -1.574962382733247e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [7.68058949773831e-11, 4.346234483421085e-11, -8.047151833778798e-11, -3.3838376545247684e-11, 7.026934589760003e-11, 1.2454259845640081e-11, 1.0569167763208043e-10, -1.7347911995813092e-10, 1.5237811012980274e-11, -6.132971908101581e-11, 5.6072924081718156e-11, 3.79354325730219e-11, 1.4307488527265377e-10, 8.862843792201147e-11, -1.583356779022438e-10, -8.219935843101212e-11, 1.343187783220401e-10, 2.5524249380737274e-11, 1.9878543255913428e-10, -3.452087504740575e-10, 3.77704534315626e-11, -1.1354905904426005e-10, 1.0898348890009402e-10, 7.963163461965905e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.875721882844573e-11, 2.940399035367136e-10, 2.651798780561876e-10, 2.9381297395048023e-10, -1.5644552320281946e-10, 2.7015345516190337e-10, -3.526972047751542e-10, -3.995601627337919e-10, 1.0901013425268502e-10, 3.541067439272183e-10, -5.211919784642305e-11, -1.483145828373722e-10, 5.614686493515819e-11, 5.833713512259919e-10, 5.378721912308038e-10, 6.066198654508526e-10, -3.17182502485025e-10, 5.587328377743006e-10, -7.116131017781413e-10, -8.108037574672267e-10, 2.1862023302787748e-10, 7.212352937102651e-10, -1.0320455601231515e-10, -3.026047190601844e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
