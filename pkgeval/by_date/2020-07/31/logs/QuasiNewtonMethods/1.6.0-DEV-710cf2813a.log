Julia Version 1.6.0-DEV.558
Commit 710cf2813a (2020-07-30 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed StackPointers ─────── v0.1.2
  Installed VectorizationBase ─── v0.12.29
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_IUaJ74/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_IUaJ74/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [3.9850300836974384e-10, 8.110865312715987e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3959389200124406e-11, -2.9287017255796854e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [2.458899750479304e-10, 4.728311076007685e-10, -6.793898776891183e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1711742686770776e-12, -2.2577495428777183e-12, 1.0609291223317996e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [7.94253551816837e-13, -1.8002266344296913e-12, 2.291056233616473e-12, -2.3070434451710753e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.248512570053208e-12, 1.0162315433603908e-11, -6.2374549969490545e-12, 1.947486616415972e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.708067103895928e-11, 1.1894707441229002e-11, -5.192901664230476e-11, 2.0819346246980786e-11, -1.2800760451625592e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.2844615088501996e-11, 8.502820669775701e-11, 4.454836499689918e-11, 1.7762435966517387e-10, -2.3034796292620285e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [5.944045256001118e-11, 2.3244406399669515e-10, 5.520293111516139e-10, 1.4332823816687323e-10, 4.645175355477704e-10, 1.1105807384836908e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1984747355929812e-11, -3.002964543696862e-11, 3.3002489630007403e-11, -4.322697755299032e-11, -6.289280207738557e-11, 6.68156641125961e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.4562795414008178e-11, 2.474687121889474e-12, 1.4386269953092778e-11, 3.099387413385557e-11, 4.9185100436943685e-12, 2.793987263771669e-11, -5.401235014801387e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1161738200371474e-11, -4.218847493575595e-14, -4.024880428943334e-11, 1.7174484057136397e-11, 5.775380174100064e-13, -8.803979767435521e-11, 7.249534306197347e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [7.0676797747637465e-12, -7.698730541960686e-12, 1.3516299190996506e-11, -4.733879954699205e-12, 1.2652323633233209e-11, -1.5779377804392425e-11, 2.5777158185746885e-11, -1.1266987343105939e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.228295491515155e-11, 1.216293732397844e-11, -8.521594541122113e-11, -1.4402923298462156e-12, -7.884970454341556e-11, 2.014166611274959e-11, -1.7398926743794618e-10, -3.036459972349803e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [6.9468875096845295e-12, 2.6749491510713597e-11, 3.453459740399012e-12, 6.247669048775606e-12, 1.4545253890219101e-11, 5.428524296746673e-11, 7.779332733548472e-12, 1.339950372880594e-11, 1.2929657344784573e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.541967133623984e-11, 1.4065038023147736e-10, -8.863698663930109e-11, 1.5117729290636817e-10, -1.5997003721679448e-10, 2.769813267633481e-10, -1.7747248115540515e-10, 3.029407835697384e-10, -2.277511512716046e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [4.139599774077851e-11, -1.0844880549143454e-11, 2.1146862039245207e-11, 6.056666279619094e-11, 8.455214306479775e-11, 8.913536575505532e-11, -1.4053647134915082e-11, 4.073097414902804e-11, 1.2384671066456576e-10, 1.6769052813003782e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.150046889999203e-11, 2.4470647730368e-11, 6.426703613726659e-11, 6.538458663385427e-11, -7.708766958103297e-11, -6.428135801428425e-11, 4.054556690391564e-11, 1.203528388060704e-10, 1.3775380836023032e-10, -1.5516521401082173e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-4.2908121500317975e-11, 5.7703619660287586e-11, 3.507572010619242e-11, 5.237166256222281e-11, 1.5865087021893487e-11, -8.843092924593066e-11, 1.1303891156444479e-10, 6.829692367205098e-11, 1.0171596898089774e-10, 3.3575364710713984e-11, 5.1523230126804265e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [9.133582778986238e-12, 8.177236665574128e-12, 1.3722356584366935e-13, 5.8406612879480235e-12, 1.4047651930582106e-11, 1.8439250126789375e-11, 1.5976331368960928e-11, -3.510525203864745e-13, 8.8680174314959e-12, 3.0136115825030174e-11, -5.649924972317422e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [2.3826496331480485e-11, -3.400857373492272e-11, -9.441347703642577e-11, -6.859446344265052e-11, 4.177724832743479e-11, 5.997402574564603e-11, 4.803690778487635e-11, -6.191147594591939e-11, -1.8304813220737515e-10, -1.3657108777209714e-10, 9.177925086589767e-11, 1.134718985440486e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.339861555038624e-11, -6.6525673858564005e-12, -4.065681125098308e-11, -5.171241213020039e-11, -1.4144008186889323e-10, -4.914613160877934e-11, -2.637590146292723e-11, -1.1374456931889654e-11, -8.377676330439954e-11, -1.0157163998769647e-10, -2.8408420060799244e-10, -9.583356330722381e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [5.2730708688386585e-11, -3.5582536916933805e-11, -6.274869512878922e-12, -9.491740726730313e-12, -2.2281509970412117e-11, -2.7253421741590955e-11, 9.43130018526972e-11, -6.934430807348235e-11, -1.9401258377627073e-11, -2.036371071767462e-11, -4.771572026385229e-11, -4.9189541329042186e-11, -4.227063143957821e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.900258059909902e-11, 2.4350477190182573e-10, -1.427762352790296e-10, 3.708811036062798e-11, -5.7170823630769974e-11, -1.5420908994201454e-10, 1.276285743756489e-10, 4.863798253040841e-10, -2.695360601379093e-10, 6.740719094011638e-11, -1.2290812811954765e-10, -3.226677813827905e-10, -5.1304738235558034e-11]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.227569157435937e-10, -1.3275502919185556e-10, 1.0454925813974114e-10, 3.735878273403159e-11, 3.015698801789313e-11, -5.547828862972892e-11, 2.454374481430932e-10, 2.5559931948748726e-10, -2.753238748098852e-10, 2.0818657908705518e-10, 5.240208267309754e-11, 3.734190734405729e-11, -1.1744805128444114e-10, 4.881794968270015e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.313272210041077e-11, -1.2648548874949483e-11, -3.6553426951968504e-11, 2.4175994539632484e-11, 4.594546965108748e-12, 2.1768586933035294e-11, 7.90367771230649e-12, -1.4236434253689367e-10, -2.5527358005206224e-11, -7.335931861973677e-11, 5.103362177294457e-11, 7.2666317407765746e-12, 3.8020919745918036e-11, 1.2153611450571589e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [9.81885683870587e-11, 2.4070079263083244e-11, -1.855948728035628e-11, -2.7585711492861265e-11, -9.603207118402679e-12, 6.10347328233729e-11, -1.8011447888710563e-10, 1.9333423750822476e-10, 4.753153426406698e-11, -3.585909347236793e-11, -5.373801403862899e-11, -1.9678036977666125e-11, 1.1756262630058245e-10, -3.7258629514980157e-10, -1.6043832928858137e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8314351691326465e-11, -7.113736266717297e-10, 2.0060397787347028e-10, 1.7824985931724768e-10, 2.817583943937052e-10, -6.288136678023193e-11, -4.690714483501779e-11, -8.114009464321725e-11, -1.4042690343885056e-9, 4.18799883661336e-10, 3.6776448553155205e-10, 5.523002055696224e-10, -1.2988543574010691e-10, -1.1098877372717197e-10, -8.697931264123326e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.40971687048841e-10, 1.4559464744934303e-11, 2.122990672148717e-11, -1.1669798460900438e-10, 2.404927368360177e-10, -3.590547859033677e-10, -2.0137358447414044e-10, -1.6860590701384126e-10, -4.964887390102035e-10, 2.9884095198440264e-11, 4.855338353593197e-11, -2.381688180008723e-10, 4.674265419168933e-10, -6.966317522838494e-10, -4.248672524909125e-10, -3.5430447464790404e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.86682932737881e-11, 2.762079454043942e-11, 8.300937714977863e-11, -9.860723348964484e-11, -1.287792095183704e-11, -2.911559882079473e-11, 3.468114684324064e-12, 3.7690295329184664e-11, -1.3195122772202694e-10, 4.459987934524179e-11, 1.665558801988709e-10, -1.9145107721385557e-10, -3.869626841179752e-11, -6.139533326177116e-11, 4.579003842763996e-12, 7.276867997063619e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [7.014877567712574e-11, 2.9265034839909276e-11, 2.598654624819119e-11, 1.4279688542728763e-11, 1.3323342429316654e-11, -4.881983706184201e-12, 2.3507418234203215e-11, -5.4455440157141766e-11, 1.4433854111928213e-10, 6.137224062285895e-11, 4.8968828991746705e-11, 2.8207436386651352e-11, 2.6915358830592595e-11, -8.092748693400154e-12, 4.9141801738983304e-11, -1.0376288717139914e-10, -9.9253938401489e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [6.002531804938371e-11, -2.5185409313621676e-12, 7.4608541567045e-11, 4.479860926664969e-11, 5.981215522865568e-12, -4.2190029247990424e-11, 4.6245007823131346e-11, 3.658850999954666e-11, 1.20866427977262e-10, -3.920530566858815e-12, 1.4736345477217583e-10, 8.356848546497986e-11, 1.5313306178654784e-11, -8.670242301889175e-11, 8.648681770750954e-11, 7.113687416904213e-11, -3.1186164761720647e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [2.2241053443394776e-10, -1.6727985663322897e-10, 3.780753488058508e-10, 3.047078145357318e-10, 1.5639245454224238e-10, -1.477251654335987e-11, 1.5343104564635723e-10, -4.572575651451416e-11, 3.2385361059539264e-10, 4.2933767652186816e-10, -3.403668458190623e-10, 7.588720762896628e-10, 6.064622137813558e-10, 3.2080471612516703e-10, -2.8947955144076332e-11, 3.086180200284616e-10, -9.42854683216865e-11, 6.347089520630789e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.035505428769739e-11, -1.2430323437229163e-10, -1.495049639643753e-10, 8.84770035014526e-11, -3.67906816123309e-11, 5.292366545006644e-11, -4.3378522995851654e-11, 1.7230883386787355e-11, 2.12772022223362e-11, 1.255182624504414e-10, -2.2973467572739992e-10, -3.0723978916569195e-10, 1.7669909979645126e-10, -7.523026646083508e-11, 1.0328915500679159e-10, -9.101752684870235e-11, 4.3431036544916424e-11, 3.668310100124472e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-5.882072606766542e-12, 1.0369172187552067e-10, 7.170841698211916e-11, 3.668665371492352e-11, -3.99601463030308e-11, 5.756817245128332e-11, 1.534972149386249e-11, -1.2734990839646798e-10, 1.4370504786143101e-11, -1.5683676579669736e-11, 2.049338476695084e-10, 1.3850720570474095e-10, 7.843392602069343e-11, -8.018830044420611e-11, 1.1257639265238595e-10, 3.130629089298509e-11, -2.495825768278337e-10, 2.496403084251142e-11, 1.2639667090752482e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.118971913020687e-11, -1.6597723195843628e-11, 2.610578420103593e-11, 1.0404344052972192e-11, 4.7410964043592685e-11, -9.82436354490801e-12, -8.112910343527346e-11, 2.4942714560438617e-11, 4.5859316344376566e-11, -1.0162526375978587e-10, -3.8277270242303985e-11, 4.9903192689271236e-11, 2.6459501256681506e-11, 9.396461386756982e-11, -2.4997781622460025e-11, -1.68951741486012e-10, 5.0200954504475703e-11, 9.00479690812972e-11, -6.447065103998284e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [2.44599895893316e-11, 1.1562084623051305e-10, 2.3242296975922727e-11, 4.5026427031302774e-11, 9.628631225666595e-11, -1.1736200900003269e-10, 1.9513279880811751e-10, 1.1827117063489823e-10, -1.4313517038289092e-10, 5.725464546912917e-11, 4.3299586138800805e-11, 2.3894886069797394e-10, 5.7413185317045645e-11, 8.665868023172152e-11, 1.8146906199945079e-10, -2.465597725986868e-10, 3.972919770944827e-10, 2.284810118879932e-10, -2.873186133456329e-10, 1.3291612255272867e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [7.645573063541633e-11, 7.808020896504786e-11, 1.529509852105093e-11, 9.762968211646239e-11, -3.0631275294012994e-11, -3.027367245778123e-11, -4.500766426218661e-11, 7.2513106630367474e-12, -2.4289348310446712e-11, -1.2514866920554368e-10, 1.6014034542877198e-10, 1.5922663187950548e-10, 1.985034359108795e-11, 1.9890644686881842e-10, -6.251255069145145e-11, -5.544142922531137e-11, -8.912359739099429e-11, 1.1128431509632719e-11, -5.0469406431830066e-11, -2.536355570015303e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [1.2556200523761163e-10, -3.1352920260019346e-11, 2.486255645806068e-11, -2.7054469775578127e-11, -3.044309249133903e-11, 6.905587213168474e-12, -1.71975766960486e-11, -3.7024827648224345e-12, 7.176703675781937e-12, -2.6789237494995177e-11, 2.489379813397363e-10, -6.085798531785258e-11, 4.748312854019332e-11, -5.703215677499429e-11, -6.113409778407686e-11, 1.2471357280219308e-11, -3.5048963731298954e-11, -9.547029833356646e-12, 1.6103340882978046e-11, -5.298073091353217e-11, -7.630562848248701e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.406541715378353e-11, 9.097611552988383e-12, -2.248290442707912e-11, -2.4584778657299466e-11, 1.1711298597560926e-11, 9.657163957399462e-12, -3.794375924570659e-11, 7.931433287922118e-12, 2.3522517267338117e-11, 2.3021584638627246e-12, 6.421707610115845e-11, 2.3721469233350945e-11, -4.5395798231595563e-11, -4.996814073621181e-11, 2.106625984765742e-11, 2.176214763949247e-11, -6.965383825274785e-11, 1.9536816608933805e-11, 5.0573101262330056e-11, 3.641087431560663e-12, 1.0843992370723754e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [5.815570247591495e-12, 2.4481527916009327e-11, 2.063682558173241e-12, -1.1433076707589862e-12, 6.941558439166329e-12, 4.246603069191224e-12, -2.1486146195570655e-12, 6.998845947236987e-12, -5.413891557282113e-12, 1.1199041693998879e-11, -7.578382366091319e-12, 6.583622536027178e-12, 4.785216667357872e-11, 3.866240660954645e-12, -2.328692794151266e-12, 1.502797886132612e-11, 8.690381747555875e-12, -3.152478278423132e-12, 1.4135137504922568e-11, -1.052913312094006e-11, 2.3290702699796384e-11, -1.3893552974764134e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.965128225758008e-11, 4.063238634444133e-11, -9.000222789268264e-11, -1.1837864022368194e-11, -1.3388734565467075e-11, -2.4371171747361586e-11, 5.625744314841086e-11, 7.799871859504037e-11, -2.6121327323380683e-11, -1.91446858366362e-12, 2.1725066190469988e-11, -7.89849297078149e-11, 7.73265895759323e-11, -1.7982881850286958e-10, -2.2877366667728438e-11, -3.075695254040056e-11, -4.7192472152346454e-11, 1.0797673866136392e-10, 1.5234369321603936e-10, -5.077838149958325e-11, -3.2259750426533174e-12, 4.3775871816365e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.419830919502374e-10, -1.4718926077961214e-10, 2.0067281170099704e-11, 9.124478950184312e-12, 1.19782406216018e-10, 2.2063018079165886e-11, -2.7890245668515945e-11, 4.538369680062715e-11, -2.2814972133744504e-11, -1.724291820437429e-10, 7.262013212994134e-11, 2.8041036159720534e-10, -2.852402758435346e-10, 4.2047476611628554e-11, 1.7657209028243415e-11, 2.47274423159638e-10, 4.208877690814461e-11, -5.1875392870215364e-11, 8.940648221766878e-11, -4.2442049874580334e-11, -3.5232095019210874e-10, 1.3760059758283205e-10, -1.7078560787808783e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.934786078716115e-12, -1.2495893209063524e-11, 2.8836932841613816e-12, 3.907763002075626e-12, 3.1508129438861943e-13, -2.0051404980847565e-11, -1.1900702645561978e-11, 4.884537219140839e-12, -1.4093171074591737e-12, -5.239364497811039e-12, 1.3504752871540404e-12, -1.331790233649599e-11, -2.515554431425926e-11, 4.694022948115162e-12, 7.750244890303293e-12, 3.708144902248023e-13, -4.1269987427483557e-11, -2.437394730492315e-11, 1.014122119613603e-11, -2.0149437673921966e-12, -9.213629859061712e-12, 2.5548452242674102e-12, 2.5195401320843303e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-7.967837500899577e-11, 2.3957280603781328e-11, 6.972999955223713e-11, 2.8901769866251925e-11, -1.8409829216636808e-11, -2.0534129951954583e-11, -6.855671585981327e-11, -8.272593721159183e-11, 1.2759127088202149e-11, -3.335631770795544e-11, 8.415068641909329e-11, 1.8371948407036598e-10, -1.6016388215689403e-10, 5.040945438850031e-11, 1.4821788241192735e-10, 5.9008575803432e-11, -2.9634850129411916e-11, -4.5905612644503435e-11, -1.4689460758887662e-10, -1.5045087398135593e-10, 2.681455057995663e-11, -6.815148445582508e-11, 1.7534418361719872e-10, 3.7343994563343585e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [9.900524844397296e-12, 5.349276577248929e-11, 4.4608094995624015e-11, 3.1270319666987234e-11, 4.7307269213092695e-11, -5.840650185717777e-11, -9.459133476497072e-11, -9.826306435201104e-11, 1.0839551478625253e-11, 1.1150635970125222e-11, 3.2226221691189494e-11, -4.5928039149600863e-11, 1.226441170842918e-11, 1.0749268142262736e-10, 8.779621474275245e-11, 6.257150353405905e-11, 9.170220138798868e-11, -1.3508894003422256e-10, -1.8544099589234975e-10, -1.9888213298457913e-10, 2.4961588351857245e-11, 3.329403419627397e-11, 6.317346645801081e-11, -9.446621263009547e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
