Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Xs4XIv/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Xs4XIv/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723362054787784
curgen: 20 fitness: 0.21723362054787784
curgen: 30 fitness: 0.21723362054787784
curgen: 40 fitness: 0.21723362054787784
curgen: 50 fitness: 0.21723362054787784
CoordinateCreature{Vector{Float64}}([0.22253500342540977], -0.21723362054787784) 0.22253500342540977 -0.21723362054787784
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577424543151245
curgen: 100 fitness: 3.2581053523038017
curgen: 150 fitness: 3.258176257942978
curgen: 200 fitness: 3.2582592577029783
curgen: 250 fitness: 3.258373929792999
curgen: 300 fitness: 3.2583995150792306
curgen: 350 fitness: 3.258448552532124
curgen: 400 fitness: 3.2584507429125584
curgen: 450 fitness: 3.2584694724478354
curgen: 500 fitness: 3.2584694724478354
CoordinateCreature{Vector{Float64}}([-0.22280150690937436, 0.22293693226810912, 0.22270324548999068, 0.22247950183101556, -0.22258601340168052, 0.22271056514603993, 0.22273829469104975, 0.2227788273676399, -0.22257112416100003, -0.2229499838282479, -0.22226463194210055, -0.22266625542742613, -0.22252325662147662, -0.22270449943604098, -0.22216445582789537], -3.2584694724478354) [-0.22280150690937436, 0.22293693226810912, 0.22270324548999068, 0.22247950183101556, -0.22258601340168052, 0.22271056514603993, 0.22273829469104975, 0.2227788273676399, -0.22257112416100003, -0.2229499838282479, -0.22226463194210055, -0.22266625542742613, -0.22252325662147662, -0.22270449943604098, -0.22216445582789537] -3.2584694724478354
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002997398039354948
curgen: 100 fitness: -0.0029915180384989526
curgen: 150 fitness: -0.0016264388012530162
curgen: 200 fitness: -0.0016264388012530162
curgen: 250 fitness: -0.0015382061445734507
curgen: 300 fitness: -0.0012660518846416835
curgen: 350 fitness: -0.0011847597320695513
curgen: 400 fitness: -0.0011451846564796142
curgen: 450 fitness: -0.0011451846564796142
curgen: 500 fitness: -0.0009527936811082327
CoordinateCreature{Vector{Float64}}([-0.00010918802046438027, 0.0003495776774557211, 0.00019926069664393068, -0.00024034677230367192, 7.911008953852099e-5, -0.00021538499510735166, 0.00048136776869324677, 0.00019599993558399226, -0.00022744186295768143, -0.0011394769932461693, -0.00041766972756971527, 0.00024987005073870546, 0.0006884995670238808, -0.0014679768565371096, -0.0001794840192112109], 0.0009527936811082327) [-0.00010918802046438027, 0.0003495776774557211, 0.00019926069664393068, -0.00024034677230367192, 7.911008953852099e-5, -0.00021538499510735166, 0.00048136776869324677, 0.00019599993558399226, -0.00022744186295768143, -0.0011394769932461693, -0.00041766972756971527, 0.00024987005073870546, 0.0006884995670238808, -0.0014679768565371096, -0.0001794840192112109] 0.0009527936811082327
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
