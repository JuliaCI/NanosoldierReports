Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SpatialGrids ─ v1.0.0
  Installed StaticArrays ─ v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [3ce1bdb9] + SpatialGrids v1.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [3ce1bdb9] + SpatialGrids v1.0.0
  [90137ffa] + StaticArrays v0.12.4
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
    Testing SpatialGrids
Status `/tmp/jl_4CZ4s7/Project.toml`
  [3ce1bdb9] SpatialGrids v1.0.0
  [90137ffa] StaticArrays v0.12.4
  [8dfed614] Test
Status `/tmp/jl_4CZ4s7/Manifest.toml`
  [3ce1bdb9] SpatialGrids v1.0.0
  [90137ffa] StaticArrays v0.12.4
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
state = (CartesianIndex(0, 0, 0), 1)
state = (CartesianIndex(0, 0, 0), 1)
state = (CartesianIndex(1, 0, 0), 1)
io = IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1)
grid = SparseVoxelGrid{Float64}
  Number of voxels: 27
  Number of points in grid: 27
  Side length per dimension: [1.5, 1.5, 1.5]
io = IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1)
voxel = SpatialGrids.Voxel (0, 0, 0) with 1 points
io = IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1)
cuboid = SpatialGrids.VoxelCuboid ID iteration range: (-1, -1, -1) -> (1, 1, 1)
Test Summary:         | Pass  Total
SparseVoxelGrid tests |  118    118
    Testing SpatialGrids tests passed 
