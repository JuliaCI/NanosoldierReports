Julia Version 1.6.0-DEV.544
Commit 7adb9ce4f8 (2020-07-27 02:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_UluzHC/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_UluzHC/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21698816045344546
curgen: 20 fitness: 0.21721792682208438
curgen: 30 fitness: 0.21721792682208438
curgen: 40 fitness: 0.21721792682208438
curgen: 50 fitness: 0.21721792682208438
CoordinateCreature{Vector{Float64}}([0.22314470729811745], -0.21721792682208438) 0.22314470729811745 -0.21721792682208438
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257889641311281
curgen: 100 fitness: 3.258134401226818
curgen: 150 fitness: 3.2583042191969915
curgen: 200 fitness: 3.25841135281772
curgen: 250 fitness: 3.2584117265510812
curgen: 300 fitness: 3.2584117265510812
curgen: 350 fitness: 3.2584232177678913
curgen: 400 fitness: 3.2584504587650804
curgen: 450 fitness: 3.2584504587650804
curgen: 500 fitness: 3.258459987868252
CoordinateCreature{Vector{Float64}}([-0.22277230492316694, 0.22274199225839586, 0.22251792962565226, -0.2226170008582611, -0.22253201897634536, 0.2225076747361417, 0.22275740363956345, -0.222705167022177, -0.22261269944702747, 0.22242175721357044, 0.2232170908793382, 0.22212186585778756, -0.22257934984137798, 0.2228846004488797, 0.2222691885914469], -3.258459987868252) [-0.22277230492316694, 0.22274199225839586, 0.22251792962565226, -0.2226170008582611, -0.22253201897634536, 0.2225076747361417, 0.22275740363956345, -0.222705167022177, -0.22261269944702747, 0.22242175721357044, 0.2232170908793382, 0.22212186585778756, -0.22257934984137798, 0.2228846004488797, 0.2222691885914469] -3.258459987868252
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002870559810020268
curgen: 100 fitness: -0.002531499798550385
curgen: 150 fitness: -0.0020447040079716317
curgen: 200 fitness: -0.0018646393652659299
curgen: 250 fitness: -0.0018240923240000484
curgen: 300 fitness: -0.0018240923240000484
curgen: 350 fitness: -0.0017925713424347123
curgen: 400 fitness: -0.0017743003770362975
curgen: 450 fitness: -0.0014328094498807786
curgen: 500 fitness: -0.001429633099945704
CoordinateCreature{Vector{Float64}}([-0.0024120258409885817, -0.00019185579604897923, 0.0001521984215633234, 0.00018379312282463476, -0.0002845803719646968, -5.121621546090279e-6, -0.00013818845122169198, -0.0005520157040962651, -0.0001779264819900849, 9.558261500273746e-5, 3.0076112936942216e-5, 0.0007729593659947696, 0.00035426442366216, 0.00018619373161357915, -0.00030070676517391336], 0.001429633099945704) [-0.0024120258409885817, -0.00019185579604897923, 0.0001521984215633234, 0.00018379312282463476, -0.0002845803719646968, -5.121621546090279e-6, -0.00013818845122169198, -0.0005520157040962651, -0.0001779264819900849, 9.558261500273746e-5, 3.0076112936942216e-5, 0.0007729593659947696, 0.00035426442366216, 0.00018619373161357915, -0.00030070676517391336] 0.001429633099945704
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
