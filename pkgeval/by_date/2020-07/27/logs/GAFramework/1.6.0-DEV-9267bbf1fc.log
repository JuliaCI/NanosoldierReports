Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_WHuIag/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_WHuIag/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722908349667602
curgen: 20 fitness: 0.21722908349667602
curgen: 30 fitness: 0.21723267203658517
curgen: 40 fitness: 0.21723267203658517
curgen: 50 fitness: 0.21723267203658517
CoordinateCreature{Vector{Float64}}([-0.22269517269710495], -0.21723267203658517) -0.22269517269710495 -0.21723267203658517
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2569122000874073
curgen: 100 fitness: 3.257257957606267
curgen: 150 fitness: 3.2575499381517914
curgen: 200 fitness: 3.2576591872176914
curgen: 250 fitness: 3.258189497963797
curgen: 300 fitness: 3.258304461578157
curgen: 350 fitness: 3.2583170744599563
curgen: 400 fitness: 3.2584204010040896
curgen: 450 fitness: 3.258432483492604
curgen: 500 fitness: 3.2584339104748263
CoordinateCreature{Vector{Float64}}([0.22209220629930138, -0.22255163302479514, 0.2222375105996716, -0.2220845249578907, -0.22229327327470452, -0.2221821512909546, -0.2224662624518214, -0.22249331295456426, -0.22267462571683086, -0.22257726187120327, 0.2219733869523198, -0.22286642826183908, 0.22206180556200664, 0.2228920652053439, -0.2223074644950171], -3.2584339104748263) [0.22209220629930138, -0.22255163302479514, 0.2222375105996716, -0.2220845249578907, -0.22229327327470452, -0.2221821512909546, -0.2224662624518214, -0.22249331295456426, -0.22267462571683086, -0.22257726187120327, 0.2219733869523198, -0.22286642826183908, 0.22206180556200664, 0.2228920652053439, -0.2223074644950171] -3.2584339104748263
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0016424579143858864
curgen: 100 fitness: -0.0014565593456836723
curgen: 150 fitness: -0.0014565593456836723
curgen: 200 fitness: -0.0014476755047212464
curgen: 250 fitness: -0.0014476755047212464
curgen: 300 fitness: -0.001433448834234241
curgen: 350 fitness: -0.001197840499060021
curgen: 400 fitness: -0.001197840499060021
curgen: 450 fitness: -0.0008877152548052436
curgen: 500 fitness: -0.0007795596336563904
CoordinateCreature{Vector{Float64}}([0.0002096751821142953, 0.0007343119780162994, -0.00016146058207330393, 0.0001499180087362846, 8.093717446981414e-6, -2.5664673210337923e-5, -0.00019998271260072108, 0.00012226118763593134, 0.00010877510581501845, -4.607271564094719e-5, 0.0006842626886523213, -0.0009442838741779297, -0.0004994475108203128, 0.0009515635342964689, -0.0008445393119556055], 0.0007795596336563904) [0.0002096751821142953, 0.0007343119780162994, -0.00016146058207330393, 0.0001499180087362846, 8.093717446981414e-6, -2.5664673210337923e-5, -0.00019998271260072108, 0.00012226118763593134, 0.00010877510581501845, -4.607271564094719e-5, 0.0006842626886523213, -0.0009442838741779297, -0.0004994475108203128, 0.0009515635342964689, -0.0008445393119556055] 0.0007795596336563904
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
