Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_ExA7Xw/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ExA7Xw/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(34, 0.018690228f0), Item(5, 0.021616101f0), Item(28, 0.06287706f0), Item(44, 0.06857288f0)])
Vsorted = Item[Item(34, 0.018690228f0), Item(5, 0.021616101f0), Item(28, 0.06287706f0), Item(44, 0.06857288f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0047627449035644535, 0.01118456522623698, 301.0, 50.62837854679674))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004581268628438314, 0.0048246622085571286, 301.0, 73.5579479932785))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003990793228149414, 0.005562098821004232, 301.0, 41.246851205825806))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004760082562764486, 0.0037816683451334637, 301.0, 9.279012061182584))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004859161376953125, 0.006281598409016927, 301.0, 45.89390340074897))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00014785130818684896, 0.00013337135314941406, 301.0, 179.80860923975706))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.318887074788412e-5, 0.0107391357421875, 300.0, 26.869012673851103)
p = PerformanceResult(1.0, 1.0, 1.0, 6.12656275431315e-5, 3.097057342529297e-5, 300.0, 26.869012673851103)
p = PerformanceResult(1.0, 1.0, 1.0, 0.008421595891316731, 0.004877130190531413, 300.0, 1.4586531381828536)
p = PerformanceResult(1.0, 1.0, 1.0, 5.192756652832032e-5, 2.330144246419271e-5, 300.0, 1.4586531381828536)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.318887074788412e-5, 0.0107391357421875, 300.0, 26.869012673851103), PerformanceResult(1.0, 1.0, 1.0, 6.12656275431315e-5, 3.097057342529297e-5, 300.0, 26.869012673851103), PerformanceResult(1.0, 1.0, 1.0, 0.008421595891316731, 0.004877130190531413, 300.0, 1.4586531381828536), PerformanceResult(1.0, 1.0, 1.0, 5.192756652832032e-5, 2.330144246419271e-5, 300.0, 1.4586531381828536))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008112661043802897, 0.004413596789042155, 349.1, 28698.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007416939735412598, 0.0036721070607503253, 303.56666666666666, 6936.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 5.296866099039713e-5, 1.5099843343098959e-5, 94.5, 50.626749253831804))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5010108947753908e-5, 1.2501080830891926e-5, 86.13333333333334, 73.62304973602295))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6686986287434897e-5, 3.887017567952474e-5, 86.06666666666666, 41.20944964885712))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.663899739583333e-5, 0.000159303347269694, 94.06666666666666, 45.87190632149577))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7866666666666668, 0.7866666666666668, 0.7866666666666668, 6.341139475504557e-5, 0.00016256968180338542, 70.9, 190.5828653499484))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-28T07:03:38.889
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8809999999999999, 0.88, 0.8804736842105263, 4.237651824951172e-5, 2.7790069580078126e-5, 151.01, 52.95486552314833))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.029895782470703e-5, 2.3109912872314455e-5, 154.38, 0.0))
*** advance 1 from 1000; 2020-07-28T07:03:39.750
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8902222222222221, 0.8819999999999998, 0.8857192982456138, 2.317190170288086e-5, 2.6409626007080077e-5, 151.21, 77.81999287521467))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1700859069824218e-5, 2.161979675292969e-5, 154.64, 0.0))
*** advance 1 from 1000; 2020-07-28T07:03:40.592
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.894, 0.894, 0.894, 3.259897232055664e-5, 6.000041961669922e-5, 151.63, 43.0409162058495))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.162933349609375e-5, 2.627134323120117e-5, 155.12, 0.0))
*** advance 1 from 1000; 2020-07-28T07:03:41.306
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8965555555555558, 0.8950000000000002, 0.8957368421052635, 0.0001173996925354004, 0.0005608010292053223, 151.26, 47.66870786133222))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001165485382080078, 0.0006364798545837403, 154.61, 0.0))
*** advance 1 from 1000; 2020-07-28T07:03:42.079
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9569999999999999, 0.9569999999999999, 0.9569999999999999, 0.00011419296264648437, 0.0005569005012512207, 165.65, 195.1399852791801))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010160923004150391, 0.0004943585395812988, 170.78, 0.0))
*** advance 1 from 1000; 2020-07-28T07:03:43.446
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8809999999999999, 0.88, 0.8804736842105263, 4.3964385986328126e-5, 9.463071823120118e-5, 151.01, 52.96605574269779))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 4.9703121185302734e-5, 8.50510597229004e-5, 154.38, 0.015662300458643585))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:45.799
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.75, 0.75, 0.75, 0.002685863971710205, 8.099079132080078e-5, 205.09, 195.16666889190674))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:46.854
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7840000000000003, 0.7840000000000003, 0.7840000000000003, 0.002321929931640625, 8.14509391784668e-5, 209.84, 108.48968461155891))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:47.995
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6499999999999999, 0.6499999999999999, 0.6499999999999999, 0.0026123785972595216, 0.00010711193084716797, 268.64, 4.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:49.423
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9470000000000003, 0.9470000000000003, 0.9470000000000003, 0.0017434334754943847, 6.67119026184082e-5, 221.0, 608.2000204324722))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:51.150
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5710000000000001, 0.5710000000000001, 0.5710000000000001, 0.0022797513008117674, 0.000707559585571289, 253.13, 2367.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:52.526
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.357, 0.357, NaN, 0.001928701400756836, 0.0004712796211242676, 252.39, 3694.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T07:03:53.762
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.587, 0.587, 0.587, 0.002063171863555908, 3.841161727905274e-5, 243.9, 2372.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0578512396694215,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.966019917582418,"seconds":0.0036864951252937317,"exhaustive_search_seconds":2.21841037273407e-6,"evaluations":8.5078125,"distances_sum":643.2723970115185}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0578512396694215,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.966019917582418,"seconds":0.0036864951252937317,"exhaustive_search_seconds":2.21841037273407e-6,"evaluations":8.5078125,"distances_sum":643.2723970115185}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6050664977834073, conf: {"restarts":15}, perf: {"precision":0.9114583333333324,"recall":0.9114583333333324,"f1":0.9114583333333324,"seconds":5.3668394684791565e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":61.6796875,"distances_sum":278.68434282392263}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999987, conf: {"restarts":11}, perf: {"precision":0.8984374999999987,"recall":0.8984374999999987,"f1":0.8984374999999987,"seconds":2.600252628326416e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":55.03125,"distances_sum":280.4060501381755}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6050664977834073,"state":{"restarts":15},"perf":{"precision":0.9114583333333324,"recall":0.9114583333333324,"f1":0.9114583333333324,"seconds":5.3668394684791565e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":61.6796875,"distances_sum":278.68434282392263}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7034547654254606, conf: {"restarts":13}, perf: {"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":2.841465175151825e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":58.1171875,"distances_sum":279.16343035548925}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.667807317715188, conf: {"restarts":14}, perf: {"precision":0.9149305555555548,"recall":0.9149305555555548,"f1":0.9149305555555548,"seconds":3.059953451156616e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":59.359375,"distances_sum":278.24876648932695}, best_list's length: 10, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7034547654254606,"state":{"restarts":13},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":2.841465175151825e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":58.1171875,"distances_sum":279.16343035548925}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7034547654254606,"state":{"restarts":13},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":2.841465175151825e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":58.1171875,"distances_sum":279.16343035548925}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7034547654254606,"state":{"restarts":13},"perf":{"precision":0.9062499999999989,"recall":0.9062499999999989,"f1":0.9062499999999989,"seconds":2.841465175151825e-5,"exhaustive_search_seconds":7.64802098274231e-6,"evaluations":58.1171875,"distances_sum":279.16343035548925}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8888888888888877, conf: {"restarts":23}, perf: {"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":9.413622319698334e-5,"exhaustive_search_seconds":3.647617995738983e-5,"evaluations":203.3125,"distances_sum":126.76272664964199}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8880208333333323, conf: {"restarts":22}, perf: {"precision":0.8880208333333323,"recall":0.8880208333333323,"f1":0.8880208333333323,"seconds":9.919330477714539e-5,"exhaustive_search_seconds":3.647617995738983e-5,"evaluations":200.5234375,"distances_sum":127.30049805343151}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8888888888888877,"state":{"restarts":23},"perf":{"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":9.413622319698334e-5,"exhaustive_search_seconds":3.647617995738983e-5,"evaluations":203.3125,"distances_sum":126.76272664964199}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8888888888888877,"state":{"restarts":23},"perf":{"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":9.413622319698334e-5,"exhaustive_search_seconds":3.647617995738983e-5,"evaluations":203.3125,"distances_sum":126.76272664964199}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555545,"state":{"restarts":23},"perf":{"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":0.00012046471238136292,"exhaustive_search_seconds":0.00034896843135356903,"evaluations":312.796875,"distances_sum":55.857371636200696}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555545,"state":{"restarts":23},"perf":{"precision":0.8602430555555545,"recall":0.8602430555555545,"f1":0.8602430555555545,"seconds":0.00012046471238136292,"exhaustive_search_seconds":0.00034896843135356903,"evaluations":312.796875,"distances_sum":55.857371636200696}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(23), SatNeighborhood(32), 2020-07-28T07:04:03.532
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6424, 0.025485922f0), Item(8583, 0.02721559f0), Item(6754, 0.035120696f0), Item(5214, 0.041546877f0), Item(2266, 0.04431167f0), Item(7831, 0.044474754f0), Item(2505, 0.04773387f0), Item(5432, 0.04927514f0), Item(3177, 0.059940837f0), Item(5606, 0.06374446f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.063711911357341,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.960149572649573,"seconds":0.004187554121017456,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.4609375,"distances_sum":621.9973769187927}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.063711911357341,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.960149572649573,"seconds":0.004187554121017456,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.4609375,"distances_sum":621.9973769187927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.1735537190082646, conf: {"bsize":2}, perf: {"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":1.5906989574432373e-5,"exhaustive_search_seconds":7.711350917816162e-6,"evaluations":31.1953125,"distances_sum":292.92773639038205}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1735537190082646,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":1.5906989574432373e-5,"exhaustive_search_seconds":7.711350917816162e-6,"evaluations":31.1953125,"distances_sum":292.92773639038205}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1735537190082646,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":1.5906989574432373e-5,"exhaustive_search_seconds":7.711350917816162e-6,"evaluations":31.1953125,"distances_sum":292.92773639038205}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.1735537190082646,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":1.5906989574432373e-5,"exhaustive_search_seconds":7.711350917816162e-6,"evaluations":31.1953125,"distances_sum":292.92773639038205}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.60244092443521, conf: {"bsize":3}, perf: {"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":2.8697773814201355e-5,"exhaustive_search_seconds":2.789124846458435e-5,"evaluations":60.171875,"distances_sum":122.13215527869761}, best_list's length: 2, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 16.771090281203747, conf: {"bsize":5}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":3.0035153031349182e-5,"exhaustive_search_seconds":2.789124846458435e-5,"evaluations":63.34375,"distances_sum":121.67259723879397}, best_list's length: 7, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.60244092443521,"state":{"bsize":3},"perf":{"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":2.8697773814201355e-5,"exhaustive_search_seconds":2.789124846458435e-5,"evaluations":60.171875,"distances_sum":122.13215527869761}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.60244092443521,"state":{"bsize":3},"perf":{"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":2.8697773814201355e-5,"exhaustive_search_seconds":2.789124846458435e-5,"evaluations":60.171875,"distances_sum":122.13215527869761}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.60244092443521,"state":{"bsize":3},"perf":{"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":2.8697773814201355e-5,"exhaustive_search_seconds":2.789124846458435e-5,"evaluations":60.171875,"distances_sum":122.13215527869761}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":94.57841631936829,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":6.582029163837433e-5,"exhaustive_search_seconds":0.0003693755716085434,"evaluations":106.8515625,"distances_sum":54.5963071025908}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":94.57841631936829,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":6.582029163837433e-5,"exhaustive_search_seconds":0.0003693755716085434,"evaluations":106.8515625,"distances_sum":54.5963071025908}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(3), SatNeighborhood(32), 2020-07-28T07:04:07.644
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1062, 0.027955098f0), Item(6587, 0.048954263f0), Item(4028, 0.04947529f0), Item(4645, 0.049642093f0), Item(901, 0.05030539f0), Item(388, 0.051003687f0), Item(5986, 0.05815969f0), Item(8114, 0.058625013f0), Item(8340, 0.059014566f0), Item(2975, 0.06313168f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
