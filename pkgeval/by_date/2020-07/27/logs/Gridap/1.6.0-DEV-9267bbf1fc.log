Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CodecZlib ──────────────────── v0.7.0
  Installed DiffResults ────────────────── v1.0.2
  Installed BSON ───────────────────────── v0.2.6
  Installed NLSolversBase ──────────────── v7.6.1
  Installed QuadGK ─────────────────────── v2.4.0
  Installed Parameters ─────────────────── v0.12.1
  Installed DocStringExtensions ────────── v0.8.2
  Installed Gridap ─────────────────────── v0.13.1
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed LightXML ───────────────────── v0.9.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Reexport ───────────────────── v0.2.0
  Installed JLD2 ───────────────────────── v0.1.14
  Installed FiniteDiff ─────────────────── v2.5.1
  Installed JSON ───────────────────────── v0.21.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed StaticArrays ───────────────── v0.12.4
  Installed Requires ───────────────────── v1.0.1
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed FileIO ─────────────────────── v1.4.0
  Installed LineSearches ───────────────── v7.0.1
  Installed DataStructures ─────────────── v0.17.19
  Installed NLsolve ────────────────────── v4.4.0
  Installed CommonSubexpressions ───────── v0.3.0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed ArrayInterface ─────────────── v2.11.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed NaNMath ────────────────────── v0.3.4
  Installed DiffRules ──────────────────── v1.0.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Parsers ────────────────────── v1.0.7
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed OrderedCollections ─────────── v1.3.0
  Installed FillArrays ─────────────────── v0.8.13
  Installed Combinatorics ──────────────── v1.0.2
  Installed WriteVTK ───────────────────── v1.7.2
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Distances ──────────────────── v0.9.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [56d4f2e9] + Gridap v0.13.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.11.0
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.4.0
  [1a297f60] + FillArrays v0.8.13
  [6a86dc24] + FiniteDiff v2.5.1
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.13.1
  [033835bb] + JLD2 v0.1.14
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.4.0
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.7
  [1fd47b50] + QuadGK v2.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [64499a7a] + WriteVTK v1.7.2
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_OQH8vh/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.4.0
  [1a297f60] FillArrays v0.8.13
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.13.1
  [033835bb] JLD2 v0.1.14
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.4.0
  [1fd47b50] QuadGK v2.4.0
  [90137ffa] StaticArrays v0.12.4
  [64499a7a] WriteVTK v1.7.2
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_OQH8vh/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.11.0
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.4.0
  [1a297f60] FillArrays v0.8.13
  [6a86dc24] FiniteDiff v2.5.1
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.13.1
  [033835bb] JLD2 v0.1.14
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.7
  [1fd47b50] QuadGK v2.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [64499a7a] WriteVTK v1.7.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   14     14
215.304694 seconds (10.33 M allocations: 661.452 MiB, 0.40% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  1.082811 seconds (1.27 M allocations: 73.627 MiB, 2.54% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 29.979062 seconds (28.23 M allocations: 1.450 GiB, 4.52% gc time)
Test Summary: | Pass  Total
Algebra       |  723    723
 79.194599 seconds (67.95 M allocations: 3.710 GiB, 3.93% gc time)
Test Summary: | Pass  Total
TensorValues  |  349    349
 16.037012 seconds (15.19 M allocations: 910.785 MiB, 3.20% gc time)
Test Summary: | Pass  Total
Arrays        |  497    497
 38.796416 seconds (30.24 M allocations: 1.721 GiB, 3.29% gc time)
Test Summary: | Pass  Total
Fields        |  773    773
 67.540614 seconds (47.56 M allocations: 2.697 GiB, 3.69% gc time)
Test Summary: | Pass  Total
Polynomials   |  115    115
 17.232785 seconds (12.36 M allocations: 703.239 MiB, 7.70% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 17.412792 seconds (24.11 M allocations: 1.264 GiB, 7.91% gc time)
Test Summary: | Pass  Total
ReferenceFEs  | 1226   1226
1008.108064 seconds (786.00 M allocations: 52.557 GiB, 2.78% gc time)
Test Summary: | Pass  Total
Geometry      | 2483   2483
290.152060 seconds (391.40 M allocations: 25.181 GiB, 4.05% gc time)
Test Summary: | Pass  Total
FESpaces      | 1235   1235
775.134264 seconds (1.08 G allocations: 70.236 GiB, 4.01% gc time)
Test Summary: | Pass  Total
MultiField    |  352    352
 72.538975 seconds (90.09 M allocations: 5.323 GiB, 4.70% gc time)
Test Summary: |
Visualization | No tests
180.235788 seconds (258.69 M allocations: 17.265 GiB, 4.38% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000023 seconds
  0.000013 seconds
  0.000000 seconds
  0.000013 seconds
  0.000015 seconds
  0.000017 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.002246 seconds
  0.001271 seconds
  0.000000 seconds
  0.001299 seconds
  0.001504 seconds
  0.001723 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000001 seconds
  0.000002 seconds
  0.000029 seconds
  0.000136 seconds
  0.000002 seconds
  0.000054 seconds
  0.000089 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000155 seconds
  0.000251 seconds
  0.002713 seconds
  0.013689 seconds
  0.000229 seconds
  0.005860 seconds
  0.008927 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000021 seconds
  0.000021 seconds
  0.000034 seconds
  0.000038 seconds
+++ running suite for n = 100000 +++
  0.002251 seconds
  0.002208 seconds
  0.003475 seconds
  0.003811 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000011 seconds
  0.000000 seconds
  0.000023 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001533 seconds
  0.000000 seconds
  0.002293 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000051 seconds
  0.000054 seconds
  0.000066 seconds
+++ running suite for n = 100000 +++
  0.005129 seconds
  0.005190 seconds
  0.006623 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
+++ running suite for n = 1000 +++
  0.000028 seconds
  0.000003 seconds
  0.000054 seconds
  0.000075 seconds
  0.000026 seconds
  0.000001 seconds
  0.000078 seconds
  0.000073 seconds
  0.000029 seconds
  0.000003 seconds
  0.000145 seconds (3.49 k allocations: 101.391 KiB)
  0.000061 seconds
  0.000040 seconds
  0.000001 seconds
  0.000224 seconds
  0.000224 seconds
+++ running suite for n = 100000 +++
  0.002692 seconds
  0.000251 seconds
  0.005287 seconds
  0.007465 seconds
  0.002684 seconds
  0.000072 seconds
  0.007476 seconds
  0.006889 seconds
  0.002545 seconds
  0.000307 seconds
  0.014180 seconds (399.49 k allocations: 10.673 MiB)
  0.006298 seconds
  0.004124 seconds
  0.000089 seconds
  0.021664 seconds
  0.021819 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000038 seconds
  0.000003 seconds
  0.000110 seconds
  0.000088 seconds (1 allocation: 112 bytes)
  0.000003 seconds
  0.000110 seconds
  0.000094 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.004324 seconds
  0.000272 seconds
  0.010922 seconds
  0.009150 seconds (1 allocation: 112 bytes)
  0.000289 seconds
  0.011279 seconds
  0.009331 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1000 +++
  0.000055 seconds
  0.000066 seconds
  0.000156 seconds
  0.000050 seconds
  0.000065 seconds
  0.000137 seconds
  0.000059 seconds
  0.000073 seconds
  0.000058 seconds
  0.000060 seconds
  0.000074 seconds
  0.000056 seconds
  0.000159 seconds
+++ running suite for n = 100000 +++
  0.005351 seconds
  0.006620 seconds
  0.015167 seconds
  0.004916 seconds
  0.006647 seconds
  0.013205 seconds
  0.005799 seconds
  0.007201 seconds
  0.005356 seconds
  0.005892 seconds
  0.007204 seconds
  0.005261 seconds
  0.013506 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000073 seconds
  0.000125 seconds
  0.000412 seconds
+++ running suite for n = 100000 +++
  0.007326 seconds
  0.012428 seconds
  0.041121 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000040 seconds
  0.000348 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.003725 seconds
  0.032966 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000011 seconds
  0.256139 seconds (182.68 k allocations: 10.595 MiB, 46.08% gc time)
  0.000000 seconds
  0.000008 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000007 seconds
  0.000000 seconds
  0.000004 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000011 seconds
  0.000040 seconds
  0.000000 seconds
  0.000013 seconds (50 allocations: 1.250 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000012 seconds
  0.000079 seconds
  0.001054 seconds
  0.002159 seconds
  0.000033 seconds
  0.000607 seconds (5.49 k allocations: 132.641 KiB)
  0.000001 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.001194 seconds
  0.007612 seconds
  0.096041 seconds
  0.209702 seconds
  0.001517 seconds
  0.058073 seconds (599.49 k allocations: 13.725 MiB)
  0.000035 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000007 seconds
  0.000002 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000007 seconds
  0.000011 seconds
  0.000009 seconds
  0.000025 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000668 seconds
  0.001157 seconds
  0.000923 seconds
  0.002429 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.064041 seconds
  0.114356 seconds
  0.094855 seconds
  0.390289 seconds (3.00 M allocations: 137.329 MiB, 25.73% gc time)
    Testing Gridap tests passed 
