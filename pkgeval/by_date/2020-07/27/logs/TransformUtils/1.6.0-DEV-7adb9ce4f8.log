Julia Version 1.6.0-DEV.544
Commit 7adb9ce4f8 (2020-07-27 02:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_pfYsFi/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_pfYsFi/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11961852852287236 0.005298192714680099; 0.11961852852287236 0.0 0.0419584766790613; -0.005298192714680099 -0.0419584766790613 0.0])
dAA = so3([0.0 -0.12467528511516457 -0.09184056331803159; 0.12467528511516457 0.0 -0.12091984789461091; 0.09184056331803159 0.12091984789461091 0.0])
dAA = so3([0.0 0.011700063670434545 -0.11879442902162285; -0.011700063670434545 0.0 0.03163000564857362; 0.11879442902162285 -0.03163000564857362 0.0])
dAA = Quaternion(0.9970247124373954, [0.07699550682251408, 0.0008891389888803982, 0.003553048005842314])
dAA = SO3([0.9981932972667109 -0.014406646550709532 0.05833172230420583; 0.009969753200220428 0.9970844509304926 0.07565184554103828; -0.05925154270513763 -0.07493361226980418 0.9954266464382295])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.926561240869635 -0.3333180777525967 -0.17430813509826829; 0.2652938926478157 0.9076127005699731 -0.32535878086790526; 0.26665224064667353 0.2552219520483969 0.9293860004060284]), [-0.41958476679061296, 0.052981927146800986, 1.1961852852287236])
xj = SE3(SO3([0.9998343848516466 -0.01702704830387774 0.006425145475939797; 0.018193493849202515 0.9264995178129836 -0.37585587699791007; 0.0004468219876032495 0.37591052541577824 0.9266558569564782]), [-0.31630005648573617, -1.1879442902162285, -0.11700063670434543])
Dx = SE3(SO3([0.9313535571805535 0.3302554444969281 0.1533358826474288; -0.31663619036452867 0.9425187705416225 -0.10677026799697742; -0.17978340990916702 0.05088917917244157 0.9823890354460333]), [-0.5836745058191407, -1.4958609308472277, -0.8347137357840295])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
