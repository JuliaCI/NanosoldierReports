Julia Version 1.6.0-DEV.544
Commit 7adb9ce4f8 (2020-07-27 02:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_9rdkFo/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_9rdkFo/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07326953089836007 -0.005041128037039218; 0.07326953089836007 0.0 -0.18928067020644565; 0.005041128037039218 0.18928067020644565 0.0])
dAA = so3([0.0 -0.04685306477443976 -0.029306781428482944; 0.04685306477443976 0.0 0.03658517869904776; 0.029306781428482944 -0.03658517869904776 0.0])
dAA = so3([0.0 0.020068743464237142 -0.12833061556666733; -0.020068743464237142 0.0 0.06460784845654009; 0.12833061556666733 -0.06460784845654009 0.0])
dAA = Quaternion(0.9991792933325387, [0.02261122278175622, -0.013129948442627635, 0.03093665841193322])
dAA = SO3([0.9964440417372082 0.013616043498745803 -0.08314971464687518; -0.018565140946195303 0.9980829523710042 -0.05904028902391489; 0.08218641754003156 0.060374030392377855 0.9947865948162529])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9904777614071247 -0.11325449813601364 -0.07827657893578734; 0.11994039261259042 0.9889824749505498 0.0867638545744867; 0.06758776796039748 -0.09532619205991967 0.9931489368314739]), [1.8928067020644563, -0.05041128037039218, 0.7326953089836007])
xj = SE3(SO3([0.9859209896972845 -0.1560147982433911 -0.06015966093156671; 0.14836957890025018 0.9821595496514642 -0.11553824944751152; 0.07711206216468046 0.1049857216839839 0.9914795651505902]), [-0.6460784845654008, -1.2833061556666734, -0.2006874346423714])
Dx = SE3(SO3([0.9995401525092581 -0.029632835520764657 -0.006432618500141901; 0.027724127210165653 0.9790000708186727 -0.2019659231342474; 0.012282356948224993 0.20169471087768637 0.979371424594246]), [-2.7256684678103693, -0.8427954348033377, -0.8352235444346815])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
