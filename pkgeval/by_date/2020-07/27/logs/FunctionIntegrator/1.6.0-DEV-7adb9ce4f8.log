Julia Version 1.6.0-DEV.544
Commit 7adb9ce4f8 (2020-07-27 02:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_FBhrql/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_FBhrql/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.100005 seconds (1.38 M allocations: 72.847 MiB, 10.03% gc time)
Running: chebyshev_quadrature with k=1
  1.545639 seconds (2.24 M allocations: 128.670 MiB, 3.23% gc time)
Running: chebyshev_quadrature with k=2
  0.246523 seconds (425.06 k allocations: 24.387 MiB)
Running: chebyshev_quadrature with k=3
  0.309677 seconds (544.93 k allocations: 29.869 MiB, 4.31% gc time)
Running: chebyshev_quadrature with k=4
  0.297200 seconds (487.81 k allocations: 26.407 MiB)
Running: jacobi_quadrature with α=β=1
 37.483320 seconds (39.37 M allocations: 3.137 GiB, 10.09% gc time)
Running: laguerre_quadrature with k=1
  3.170457 seconds (3.33 M allocations: 185.516 MiB, 3.05% gc time)
Running: legendre_quadrature
  0.219247 seconds (215.20 k allocations: 12.319 MiB)
Running: lobatto_quadrature
  0.317487 seconds (343.80 k allocations: 20.592 MiB)
Running: radau_quadrature
  0.287061 seconds (326.13 k allocations: 19.592 MiB, 9.32% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 75.855161 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time)
Running: rectangle_rule_midpoint.
  0.206422 seconds (173.73 k allocations: 3.887 MiB, 13.70% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.542042 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rombergs_method
  0.536690 seconds (752.87 k allocations: 43.340 MiB, 6.63% gc time)
Running: simpsons_rule
  0.039936 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.096373 seconds (113.22 k allocations: 5.979 MiB)
Running: trapezoidal_rule
  0.349808 seconds (1.52 M allocations: 25.802 MiB, 5.85% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.080661 seconds (32.65 k allocations: 1.944 MiB)
Running: chebyshev_quadrature with k=1
  0.428696 seconds (274.99 k allocations: 13.945 MiB)
Running: chebyshev_quadrature with k=2
  0.153425 seconds (115.88 k allocations: 3.802 MiB)
Running: chebyshev_quadrature with k=3
  0.155338 seconds (105.24 k allocations: 3.650 MiB)
Running: chebyshev_quadrature with k=4
  0.153942 seconds (87.85 k allocations: 3.298 MiB)
Running: jacobi_quadrature with α=β=1
  2.117432 seconds (536.54 k allocations: 163.519 MiB, 3.75% gc time)
Running: legendre_quadrature
  0.155921 seconds (62.55 k allocations: 3.490 MiB)
Running: lobatto_quadrature
  0.021267 seconds (16.87 k allocations: 1.041 MiB)
Running: radau_quadrature
  0.021533 seconds (16.86 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 28.949620 seconds (471.41 M allocations: 7.025 GiB, 3.30% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.279971 seconds (476.96 M allocations: 7.107 GiB, 3.33% gc time)
Running: rombergs_method
  0.400543 seconds (360.52 k allocations: 20.330 MiB, 1.87% gc time)
Running: simpsons_rule
  0.000050 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065641 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.057668 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027310 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.089373 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.093766 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.097452 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.096935 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.281196 seconds (379.02 k allocations: 19.793 MiB)
Running: legendre_quadrature
  0.056083 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000127 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000114 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000537 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000384 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000531 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.066502 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000079 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022719 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020486 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057640 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.200922 seconds (240.26 k allocations: 13.486 MiB)
Running: chebyshev_quadrature with k=2
  0.224838 seconds (295.46 k allocations: 16.570 MiB)
Running: chebyshev_quadrature with k=3
  0.230269 seconds (275.42 k allocations: 14.966 MiB, 11.55% gc time)
Running: chebyshev_quadrature with k=4
  0.212733 seconds (275.45 k allocations: 14.914 MiB)
Running: jacobi_quadrature with α=β=1
  1.421077 seconds (465.79 k allocations: 164.176 MiB, 4.50% gc time)
Running: legendre_quadrature
  0.157668 seconds (193.02 k allocations: 11.144 MiB)
Running: lobatto_quadrature
  0.185319 seconds (204.22 k allocations: 11.813 MiB)
Running: radau_quadrature
  0.162736 seconds (204.22 k allocations: 11.814 MiB)
Running: rectangle_rule_left
  1.128084 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.031311 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.104977 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.128992 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.032183 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.038711 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.031721 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.067117 seconds (101.41 k allocations: 3.076 MiB, 36.73% gc time)
Running: chebyshev_quadrature with k=1
  0.186298 seconds (247.36 k allocations: 13.619 MiB)
Running: chebyshev_quadrature with k=2
  0.211692 seconds (303.09 k allocations: 16.578 MiB)
Running: chebyshev_quadrature with k=3
  0.191455 seconds (282.83 k allocations: 15.034 MiB)
Running: chebyshev_quadrature with k=4
  0.242717 seconds (282.86 k allocations: 15.006 MiB, 9.69% gc time)
Running: hermite_quadrature with k=2
 15.707871 seconds (22.12 M allocations: 1.147 GiB, 9.31% gc time)
Running: jacobi_quadrature with α=β=1
  0.522210 seconds (475.82 k allocations: 50.443 MiB, 5.95% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.250073 seconds (288.36 k allocations: 15.899 MiB, 11.77% gc time)
Running: legendre_quadrature
  0.169028 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.215990 seconds (225.73 k allocations: 37.628 MiB)
Running: radau_quadrature
  0.223351 seconds (222.33 k allocations: 30.282 MiB)
Running: rectangle_rule_left
  0.029647 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.029290 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026806 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.143867 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.041282 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.041849 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.072127 seconds (31.57 k allocations: 1.770 MiB, 49.44% gc time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041370 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.206966 seconds (242.49 k allocations: 13.415 MiB)
Running: chebyshev_quadrature with k=2
  0.211252 seconds (297.81 k allocations: 16.381 MiB)
Running: chebyshev_quadrature with k=3
  0.203321 seconds (277.69 k allocations: 14.784 MiB)
Running: chebyshev_quadrature with k=4
  0.220170 seconds (277.72 k allocations: 14.770 MiB, 11.92% gc time)
Running: hermite_quadrature with k=2
  0.169761 seconds (177.72 k allocations: 10.164 MiB)
Running: jacobi_quadrature with α=β=1
  9.595998 seconds (468.39 k allocations: 1.176 GiB, 11.60% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.259648 seconds (283.22 k allocations: 15.755 MiB, 7.09% gc time)
Running: legendre_quadrature
  0.152333 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.197927 seconds (216.09 k allocations: 23.333 MiB)
Running: radau_quadrature
  0.194690 seconds (215.25 k allocations: 21.263 MiB)
Running: rectangle_rule_left
  0.037732 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.034136 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025164 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.162041 seconds (138.22 k allocations: 7.929 MiB, 13.62% gc time)
Running: simpsons_rule
  0.035839 seconds (33.50 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.043615 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.034357 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035250 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.260236 seconds (240.82 k allocations: 13.640 MiB)
Running: chebyshev_quadrature with k=2
  0.233786 seconds (296.04 k allocations: 16.715 MiB)
Running: chebyshev_quadrature with k=3
  0.234534 seconds (276.02 k allocations: 14.983 MiB, 9.10% gc time)
Running: chebyshev_quadrature with k=4
  0.214011 seconds (276.05 k allocations: 14.817 MiB)
Running: jacobi_quadrature with α=β=1
  1.359849 seconds (466.43 k allocations: 195.253 MiB, 7.64% gc time)
Running: legendre_quadrature
  0.186294 seconds (193.57 k allocations: 11.135 MiB)
Running: lobatto_quadrature
  0.187060 seconds (204.79 k allocations: 11.860 MiB)
Running: radau_quadrature
  0.203186 seconds (204.78 k allocations: 11.843 MiB, 9.14% gc time)
Running: rectangle_rule_left
  0.301203 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.030169 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.114827 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.142746 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.035091 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.040383 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.030199 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036150 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.210053 seconds (241.39 k allocations: 13.512 MiB)
Running: chebyshev_quadrature with k=2
  0.248806 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.273759 seconds (276.56 k allocations: 14.965 MiB, 8.10% gc time)
Running: chebyshev_quadrature with k=4
  0.251861 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.649392 seconds (467.10 k allocations: 150.175 MiB, 6.01% gc time)
Running: legendre_quadrature
  0.181539 seconds (194.15 k allocations: 11.153 MiB, 8.28% gc time)
Running: lobatto_quadrature
  0.185082 seconds (205.37 k allocations: 11.857 MiB)
Running: radau_quadrature
  0.190970 seconds (205.36 k allocations: 11.859 MiB)
Running: rectangle_rule_left
  1.185528 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.027293 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.173006 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.138506 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.031679 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.039923 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.032296 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.172969 seconds (152.90 k allocations: 9.090 MiB)
Running: chebyshev_quadrature with k=1
  0.145964 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.154352 seconds (127.17 k allocations: 3.997 MiB)
Running: chebyshev_quadrature with k=3
  0.155739 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.167452 seconds (95.28 k allocations: 3.421 MiB)
Running: jacobi_quadrature with α=β=1
  2.017749 seconds (510.10 k allocations: 169.324 MiB, 8.31% gc time)
Running: legendre_quadrature
  0.109454 seconds (38.51 k allocations: 2.116 MiB)
Running: lobatto_quadrature
  0.000107 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.350586 seconds (590.00 M allocations: 8.792 GiB, 3.13% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.079218 seconds (592.75 M allocations: 8.833 GiB, 3.14% gc time)
Running: rombergs_method
  0.126465 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000153 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030238 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024222 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.982318 seconds (629.34 M allocations: 9.388 GiB, 4.65% gc time)
Running: chebyshev_quadrature with k=1
  0.535462 seconds (439.30 k allocations: 24.274 MiB)
Running: chebyshev_quadrature with k=2
 12.377358 seconds (496.67 k allocations: 4.042 GiB, 4.10% gc time)
Running: chebyshev_quadrature with k=3
  6.784621 seconds (290.51 k allocations: 1.643 GiB, 4.73% gc time)
Running: chebyshev_quadrature with k=4
  8.642890 seconds (290.55 k allocations: 2.262 GiB, 2.92% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.920502 seconds (505.40 k allocations: 13.255 GiB, 4.32% gc time)
Running: legendre_quadrature.
  5.671958 seconds (232.98 k allocations: 1.976 GiB, 2.35% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.676274 seconds (8.24 M allocations: 13.384 GiB, 4.76% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.957958 seconds (7.24 M allocations: 13.369 GiB, 4.25% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.242574 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.919205 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.987295 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.112920 seconds (456.75 k allocations: 153.705 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.727939 seconds (600.04 M allocations: 8.943 GiB, 8.70% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.803344 seconds (600.05 M allocations: 8.944 GiB, 8.04% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.949480 seconds (600.04 M allocations: 8.943 GiB, 8.61% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063351 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.218464 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.200155 seconds (284.14 k allocations: 15.179 MiB)
Running: chebyshev_quadrature with k=3
  0.196962 seconds (260.63 k allocations: 13.457 MiB)
Running: chebyshev_quadrature with k=4
  0.201578 seconds (260.66 k allocations: 13.453 MiB)
Running: jacobi_quadrature with α=β=1
  0.378786 seconds (405.39 k allocations: 35.875 MiB)
Running: laguerre_quadrature with k=2
  0.188645 seconds (187.98 k allocations: 10.889 MiB)
Running: legendre_quadrature
  0.130979 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.035606 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.032628 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.058646 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.048760 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.054440 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.235056 seconds (170.75 k allocations: 9.719 MiB)
Running: simpsons_rule
  0.001985 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.050036 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.208805 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002075 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.104493 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.109872 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.118518 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.116135 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.321674 seconds (402.19 k allocations: 906.504 MiB, 6.77% gc time)
Running: legendre_quadrature
  0.066723 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000249 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000129 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.614644 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000432 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.255731 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077175 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000803 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000780 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.097806 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.111856 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.123335 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.106545 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  1.760771 seconds (388.47 k allocations: 253.764 MiB)
Running: legendre_quadrature
  0.056857 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000113 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000051 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.153308 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001235 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.173139 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.088562 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001728 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
