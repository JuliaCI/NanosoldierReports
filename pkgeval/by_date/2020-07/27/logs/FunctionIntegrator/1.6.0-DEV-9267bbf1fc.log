Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_cG1jGn/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_cG1jGn/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.002930 seconds (1.37 M allocations: 72.637 MiB, 8.30% gc time)
Running: chebyshev_quadrature with k=1
  1.763590 seconds (2.24 M allocations: 128.635 MiB, 3.72% gc time)
Running: chebyshev_quadrature with k=2
  0.257240 seconds (425.06 k allocations: 24.388 MiB)
Running: chebyshev_quadrature with k=3
  0.351599 seconds (544.94 k allocations: 29.871 MiB, 12.21% gc time)
Running: chebyshev_quadrature with k=4
  0.271366 seconds (487.81 k allocations: 26.417 MiB)
Running: jacobi_quadrature with α=β=1
 37.208839 seconds (39.37 M allocations: 3.137 GiB, 10.51% gc time)
Running: laguerre_quadrature with k=1
  3.015561 seconds (3.33 M allocations: 185.513 MiB, 4.33% gc time)
Running: legendre_quadrature
  0.177994 seconds (215.12 k allocations: 12.315 MiB)
Running: lobatto_quadrature
  0.316159 seconds (343.69 k allocations: 20.586 MiB)
Running: radau_quadrature
  0.280148 seconds (326.02 k allocations: 19.584 MiB, 9.09% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.947044 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.197627 seconds (173.73 k allocations: 3.887 MiB, 21.51% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.265966 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rombergs_method
  0.489859 seconds (752.77 k allocations: 43.337 MiB, 6.39% gc time)
Running: simpsons_rule
  0.041455 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.092709 seconds (113.05 k allocations: 5.970 MiB)
Running: trapezoidal_rule
  0.298957 seconds (1.52 M allocations: 25.793 MiB, 7.57% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.097287 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.494827 seconds (275.58 k allocations: 13.978 MiB)
Running: chebyshev_quadrature with k=2
  0.169313 seconds (115.88 k allocations: 3.802 MiB)
Running: chebyshev_quadrature with k=3
  0.160535 seconds (105.24 k allocations: 3.650 MiB)
Running: chebyshev_quadrature with k=4
  0.162156 seconds (87.85 k allocations: 3.298 MiB)
Running: jacobi_quadrature with α=β=1
  2.573407 seconds (536.35 k allocations: 163.523 MiB, 5.30% gc time)
Running: legendre_quadrature
  0.140987 seconds (62.46 k allocations: 3.485 MiB)
Running: lobatto_quadrature
  0.021260 seconds (16.79 k allocations: 1.036 MiB)
Running: radau_quadrature
  0.030200 seconds (16.77 k allocations: 1.036 MiB)
Running: rectangle_rule_left
 32.238977 seconds (471.41 M allocations: 7.025 GiB, 4.13% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.832117 seconds (476.96 M allocations: 7.107 GiB, 4.25% gc time)
Running: rombergs_method
  0.377179 seconds (360.44 k allocations: 20.325 MiB)
Running: simpsons_rule
  0.000024 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.058349 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.054184 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031959 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101104 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.097887 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.164173 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.108964 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.319318 seconds (379.00 k allocations: 19.793 MiB)
Running: legendre_quadrature
  0.080900 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000034 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000506 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000621 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.082913 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000035 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.034086 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023496 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066255 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.234703 seconds (240.27 k allocations: 13.487 MiB)
Running: chebyshev_quadrature with k=2
  0.436859 seconds (295.46 k allocations: 16.565 MiB, 34.35% gc time)
Running: chebyshev_quadrature with k=3
  0.236953 seconds (275.42 k allocations: 14.986 MiB)
Running: chebyshev_quadrature with k=4
  0.225558 seconds (275.45 k allocations: 14.899 MiB)
Running: jacobi_quadrature with α=β=1
  1.609364 seconds (465.77 k allocations: 164.176 MiB, 4.21% gc time)
Running: legendre_quadrature
  0.161236 seconds (193.01 k allocations: 11.129 MiB)
Running: lobatto_quadrature
  0.173513 seconds (204.22 k allocations: 11.812 MiB)
Running: radau_quadrature
  0.195162 seconds (204.21 k allocations: 11.814 MiB, 8.33% gc time)
Running: rectangle_rule_left
  1.141234 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027569 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.093060 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.110230 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.034864 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.036053 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.024528 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046464 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.209639 seconds (247.36 k allocations: 13.619 MiB)
Running: chebyshev_quadrature with k=2
  0.232297 seconds (303.09 k allocations: 16.593 MiB, 7.54% gc time)
Running: chebyshev_quadrature with k=3
  0.212637 seconds (282.83 k allocations: 15.019 MiB)
Running: chebyshev_quadrature with k=4
  0.252487 seconds (282.86 k allocations: 15.006 MiB, 7.03% gc time)
Running: hermite_quadrature with k=2
 15.588336 seconds (22.13 M allocations: 1.148 GiB, 8.45% gc time)
Running: jacobi_quadrature with α=β=1
  0.500730 seconds (475.80 k allocations: 50.454 MiB, 8.01% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.310924 seconds (288.36 k allocations: 15.898 MiB, 18.60% gc time)
Running: legendre_quadrature
  0.158618 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.448504 seconds (225.73 k allocations: 37.627 MiB, 42.14% gc time)
Running: radau_quadrature
  0.253353 seconds (222.32 k allocations: 30.282 MiB)
Running: rectangle_rule_left
  0.033821 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.025873 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.028178 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.129813 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.055622 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.101978 seconds (60.02 k allocations: 3.196 MiB, 31.03% gc time)
Running: trapezoidal_rule
  0.036847 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038493 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.214286 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.279605 seconds (297.81 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.279438 seconds (277.69 k allocations: 14.784 MiB, 8.78% gc time)
Running: chebyshev_quadrature with k=4
  0.238987 seconds (277.72 k allocations: 14.770 MiB)
Running: hermite_quadrature with k=2
  0.162325 seconds (177.72 k allocations: 10.160 MiB)
Running: jacobi_quadrature with α=β=1
  9.502817 seconds (468.37 k allocations: 1.176 GiB, 16.63% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.282826 seconds (283.22 k allocations: 15.695 MiB)
Running: legendre_quadrature
  0.181080 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.264536 seconds (216.09 k allocations: 23.338 MiB, 8.18% gc time)
Running: radau_quadrature
  0.202954 seconds (215.24 k allocations: 21.263 MiB)
Running: rectangle_rule_left
  0.028486 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.029076 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.024742 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.130378 seconds (138.22 k allocations: 7.930 MiB)
Running: simpsons_rule
  0.039569 seconds (33.50 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.061857 seconds (50.55 k allocations: 2.939 MiB, 29.90% gc time)
Running: trapezoidal_rule
  0.031655 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.046788 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.225831 seconds (240.82 k allocations: 13.578 MiB)
Running: chebyshev_quadrature with k=2
  0.231695 seconds (296.04 k allocations: 16.652 MiB)
Running: chebyshev_quadrature with k=3
  0.232481 seconds (276.02 k allocations: 14.984 MiB, 8.35% gc time)
Running: chebyshev_quadrature with k=4
  0.216502 seconds (276.05 k allocations: 14.817 MiB)
Running: jacobi_quadrature with α=β=1
  1.844838 seconds (466.41 k allocations: 195.251 MiB, 9.63% gc time)
Running: legendre_quadrature
  0.211078 seconds (193.57 k allocations: 11.135 MiB, 9.81% gc time)
Running: lobatto_quadrature
  0.169691 seconds (204.78 k allocations: 11.843 MiB)
Running: radau_quadrature
  0.173234 seconds (204.78 k allocations: 11.843 MiB)
Running: rectangle_rule_left
  0.298129 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.025779 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.133089 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.156855 seconds (151.29 k allocations: 8.828 MiB, 13.36% gc time)
Running: simpsons_rule
  0.033260 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.040066 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.027857 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034777 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.229907 seconds (241.39 k allocations: 13.512 MiB)
Running: chebyshev_quadrature with k=2
  0.255341 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.247379 seconds (276.56 k allocations: 14.903 MiB, 8.00% gc time)
Running: chebyshev_quadrature with k=4
  0.220035 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.532481 seconds (467.08 k allocations: 149.927 MiB, 9.58% gc time)
Running: legendre_quadrature
  0.144624 seconds (194.15 k allocations: 11.153 MiB)
Running: lobatto_quadrature
  0.171434 seconds (205.36 k allocations: 11.857 MiB)
Running: radau_quadrature
  0.174453 seconds (205.35 k allocations: 11.862 MiB)
Running: rectangle_rule_left
  1.167116 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.028018 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.196432 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.138816 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.033190 seconds (30.52 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.044898 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.030733 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.149796 seconds (152.90 k allocations: 9.086 MiB)
Running: chebyshev_quadrature with k=1
  0.143858 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.157079 seconds (127.17 k allocations: 3.997 MiB)
Running: chebyshev_quadrature with k=3
  0.171033 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.161205 seconds (95.28 k allocations: 3.423 MiB)
Running: jacobi_quadrature with α=β=1
  1.367889 seconds (509.97 k allocations: 169.316 MiB, 18.55% gc time)
Running: legendre_quadrature
  0.115232 seconds (38.51 k allocations: 2.116 MiB)
Running: lobatto_quadrature
  0.000088 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000057 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 43.879880 seconds (590.00 M allocations: 8.792 GiB, 2.34% gc time)
Running: rectangle_rule_midpoint
  0.000099 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.100364 seconds (592.75 M allocations: 8.833 GiB, 2.25% gc time)
Running: rombergs_method
  0.123008 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026564 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021297 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.777419 seconds (629.34 M allocations: 9.388 GiB, 3.45% gc time)
Running: chebyshev_quadrature with k=1
  0.554620 seconds (439.22 k allocations: 24.269 MiB, 3.01% gc time)
Running: chebyshev_quadrature with k=2
 14.321294 seconds (496.58 k allocations: 4.042 GiB, 4.35% gc time)
Running: chebyshev_quadrature with k=3
  6.422723 seconds (290.51 k allocations: 1.643 GiB, 5.57% gc time)
Running: chebyshev_quadrature with k=4
  7.979978 seconds (290.55 k allocations: 2.262 GiB, 2.73% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.719702 seconds (505.31 k allocations: 13.255 GiB, 3.89% gc time)
Running: legendre_quadrature.
  6.136975 seconds (232.90 k allocations: 1.977 GiB, 2.53% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.560036 seconds (8.24 M allocations: 13.384 GiB, 3.36% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.700059 seconds (7.24 M allocations: 13.369 GiB, 3.09% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.291195 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.618902 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.568929 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.192085 seconds (456.67 k allocations: 153.700 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.226281 seconds (600.04 M allocations: 8.943 GiB, 8.24% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.611437 seconds (600.05 M allocations: 8.944 GiB, 8.18% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.922616 seconds (600.04 M allocations: 8.943 GiB, 9.45% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064484 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.252077 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.230703 seconds (284.14 k allocations: 15.179 MiB)
Running: chebyshev_quadrature with k=3
  0.228434 seconds (260.63 k allocations: 13.457 MiB)
Running: chebyshev_quadrature with k=4
  0.203812 seconds (260.66 k allocations: 13.453 MiB)
Running: jacobi_quadrature with α=β=1
  0.418946 seconds (405.38 k allocations: 35.875 MiB)
Running: laguerre_quadrature with k=2
  0.190470 seconds (187.98 k allocations: 10.889 MiB)
Running: legendre_quadrature
  0.127546 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.036003 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.032837 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.053430 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.048113 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.049121 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.228917 seconds (171.42 k allocations: 9.755 MiB)
Running: simpsons_rule
  0.001912 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054889 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.198872 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001949 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.098708 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.104127 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.109642 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.108804 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.324289 seconds (402.17 k allocations: 906.503 MiB, 5.02% gc time)
Running: legendre_quadrature
  0.067383 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000178 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000124 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.018378 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000481 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.060780 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.066488 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000072 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000071 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000803 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000730 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.105321 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.132222 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.122156 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.111856 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.948197 seconds (388.45 k allocations: 253.763 MiB)
Running: legendre_quadrature
  0.101747 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.001843 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000068 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.792087 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001054 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.373813 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.165880 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000077 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000073 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.003463 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
