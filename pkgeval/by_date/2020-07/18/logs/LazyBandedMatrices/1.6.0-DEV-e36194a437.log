Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MatrixFactorizations ─ v0.5.0
  Installed LazyBandedMatrices ─── v0.2.12
  Installed ArrayLayouts ───────── v0.3.7
  Installed Compat ─────────────── v3.13.0
  Installed MacroTools ─────────── v0.5.5
  Installed BlockBandedMatrices ── v0.8.10
  Installed BlockArrays ────────── v0.12.10
  Installed BandedMatrices ─────── v0.15.15
  Installed LazyArrays ─────────── v0.16.15
  Installed FillArrays ─────────── v0.8.13
  Installed StaticArrays ───────── v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [d7e5e226] + LazyBandedMatrices v0.2.12
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4c555306] + ArrayLayouts v0.3.7
  [aae01518] + BandedMatrices v0.15.15
  [8e7c35d0] + BlockArrays v0.12.10
  [ffab5731] + BlockBandedMatrices v0.8.10
  [34da2185] + Compat v3.13.0
  [1a297f60] + FillArrays v0.8.13
  [5078a376] + LazyArrays v0.16.15
  [d7e5e226] + LazyBandedMatrices v0.2.12
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.5.0
  [90137ffa] + StaticArrays v0.12.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing LazyBandedMatrices
Status `/tmp/jl_rbUbsm/Project.toml`
  [4c555306] ArrayLayouts v0.3.7
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.10
  [1a297f60] FillArrays v0.8.13
  [5078a376] LazyArrays v0.16.15
  [d7e5e226] LazyBandedMatrices v0.2.12
  [a3b82374] MatrixFactorizations v0.5.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_rbUbsm/Manifest.toml`
  [4c555306] ArrayLayouts v0.3.7
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.10
  [34da2185] Compat v3.13.0
  [1a297f60] FillArrays v0.8.13
  [5078a376] LazyArrays v0.16.15
  [d7e5e226] LazyBandedMatrices v0.2.12
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.5.0
  [90137ffa] StaticArrays v0.12.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
LazyBlock     |    1      1
Test Summary: | Pass  Total
Padded        |   18     18
MulBandedBlockBanded: Error During Test at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:171
  Test threw exception
  Expression: BandedBlockBandedMatrix(M) ≈ BlockBandedMatrix(M) ≈ A * B
  MethodError: no method matching elsize(::Type{PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, X::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, β::Float64, Y::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!(M::MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},Float64,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [13] _mulbanded_copyto!
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:354 [inlined]
   [14] _copyto!
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:368 [inlined]
   [15] copyto!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:145 [inlined]
   [16] (BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS)(A::ApplyArray{Float64,2,typeof(*),Tuple{BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}}})
      @ BlockBandedMatrices ~/.julia/packages/BlockBandedMatrices/3ajHH/src/BandedBlockBandedMatrix.jl:178
   [17] BandedBlockBandedMatrix(A::ApplyArray{Float64,2,typeof(*),Tuple{BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}}})
      @ BlockBandedMatrices ~/.julia/packages/BlockBandedMatrices/3ajHH/src/BandedBlockBandedMatrix.jl:181
   [18] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:171
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [20] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:165
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [22] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:100
  
MulBandedBlockBanded: Error During Test at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:176
  Test threw exception
  Expression: M[Block.(1:2), Block.(1:2)] isa BandedBlockBandedMatrix
  MethodError: no method matching elsize(::Type{PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}}},false}, X::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}}},false}, β::Float64, Y::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!
      @ ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112 [inlined]
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [13] _mulbanded_copyto!
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:354 [inlined]
   [14] _copyto!(#unused#::BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor}, #unused#::ApplyBandedBlockBandedLayout{typeof(*)}, dest::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, src::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}}},false})
      @ LazyBandedMatrices ~/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:368
   [15] copyto!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:156 [inlined]
   [16] (BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS)(A::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Vector{Int64}}}},false})
      @ BlockBandedMatrices ~/.julia/packages/BlockBandedMatrices/3ajHH/src/BandedBlockBandedMatrix.jl:178
   [17] BandedBlockBandedMatrix
      @ ~/.julia/packages/BlockBandedMatrices/3ajHH/src/BandedBlockBandedMatrix.jl:181 [inlined]
   [18] sub_materialize
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:329 [inlined]
   [19] sub_materialize
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:102 [inlined]
   [20] sub_materialize
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:103 [inlined]
   [21] layout_getindex
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:105 [inlined]
   [22] getindex(A::ApplyArray{Float64,2,typeof(*),Tuple{BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}}}, kr::BlockRange{1,Tuple{UnitRange{Int64}}}, jr::BlockRange{1,Tuple{UnitRange{Int64}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/ArrayLayouts.jl:113
   [23] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:176
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [25] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:165
   [26] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [27] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:100
  
MulBandedBlockBanded: Error During Test at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:180
  Test threw exception
  Expression: M[1:3, 1:3] ≈ (A * B)[1:3, 1:3]
  MethodError: no method matching elsize(::Type{PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, X::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, β::Float64, Y::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!(M::MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},Float64,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [13] copyto!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:94 [inlined]
   [14] copy
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:82 [inlined]
   [15] materialize(M::MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ColumnMajor},ZerosLayout,Float64,BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}},Zeros{Float64,2,Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:81
   [16] _mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:447 [inlined]
   [17] mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:448 [inlined]
   [18] *(A::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}}, B::BandedBlockBandedMatrix{Float64,PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockedUnitRange{Vector{Int64}},BlockedUnitRange{Vector{Int64}}}},BlockedUnitRange{Vector{Int64}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:460
   [19] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:180
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [21] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:165
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [23] top-level scope
      @ ~/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:100
  
Test Summary:          | Pass  Error  Broken  Total
MulMatrix              |   44      3       1     48
  MulBanded            |   25              1     26
  MulBlockBanded       |    7                     7
  MulBandedBlockBanded |    8      3             11
  Psuedo Mul           |    1                     1
  MulStyle             |    3                     3
ERROR: LoadError: Some tests did not pass: 44 passed, 0 failed, 3 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/test/runtests.jl:99
ERROR: Package LazyBandedMatrices errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
