Julia Version 1.6.0-DEV.487
Commit 6a4793ae77 (2020-07-17 20:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_SmXRsI/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_SmXRsI/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.059965143500693735 -0.12443042092964202; 0.059965143500693735 0.0 0.059621008061953855; 0.12443042092964202 -0.059621008061953855 0.0])
dAA = so3([0.0 0.09584354937425664 0.18755812558743568; -0.09584354937425664 0.0 0.011861151005677794; -0.18755812558743568 -0.011861151005677794 0.0])
dAA = so3([0.0 -0.16963595430408596 0.04991829162388259; 0.16963595430408596 0.0 -0.087688214786923; -0.04991829162388259 0.087688214786923 0.0])
dAA = Quaternion(0.9981015064521804, [0.05935789863774602, 0.0024996346241164345, 0.01624113647333083])
dAA = SO3([0.9808445478347644 -0.18511595930653293 -0.06063047577612059; 0.16806680714209368 0.9615896857580976 -0.21702263610210218; 0.09847599362219699 0.20267549889827638 0.974281848761669])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8645462947714605 0.22186190430474437 0.45092904055428884; -0.23544668245862704 0.9715235019631849 -0.026588434561211616; -0.4439871213404342 -0.08318281403909 0.8921636932381707]), [-0.5962100806195385, -1.24430420929642, 0.5996514350069373])
xj = SE3(SO3([0.996651051482503 -0.07939052531294125 0.0195914795091237; 0.08164687600178164 0.9528856551255556 -0.29213475639692443; 0.00452429198558972 0.29275599523575246 0.9561764784994208]), [0.8768821478692299, 0.4991829162388258, 1.6963595430408596])
Dx = SE3(SO3([0.8404187602767621 -0.4229704423408662 -0.3388101419391725; 0.30006441576794296 0.8837848079978562 -0.35900662882742973; 0.451284448839879 0.20005103863305645 0.869667711357115]), [0.3761338925433018, 1.9294344982510192, 1.5963466279626013])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
