Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_WfHkrp/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_WfHkrp/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.2948405656165865 -0.11540800481070755; -0.2948405656165865 0.0 -0.1286211828384981; 0.11540800481070755 0.1286211828384981 0.0])
dAA = so3([0.0 -0.034318226364993556 0.008739804117018237; 0.034318226364993556 0.0 0.13204478438102454; -0.008739804117018237 -0.13204478438102454 0.0])
dAA = so3([0.0 0.11950270221377664 0.03744223768685023; -0.11950270221377664 0.0 -0.058491322847117416; -0.03744223768685023 0.058491322847117416 0.0])
dAA = Quaternion(0.9981868415646193, [0.023221749782591224, -0.0008406280953114369, 0.0555254266862466])
dAA = SO3([0.9962652284933573 0.056700366998170326 0.06512037221447564; -0.05849887313981296 0.9979475267438471 0.026050253496094904; -0.06350965545845075 -0.029762430144588875 0.9975373283318463])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9961188619244117 -0.08770638947957296 0.007402848294557693; 0.08056354373706982 0.9423966286244984 0.32465075046533387; -0.035450364440158026 -0.3227943363840771 0.9458049947316959]), [1.286211828384981, -1.1540800481070754, -2.948405656165865])
xj = SE3(SO3([0.9617031670423727 -0.2740387633216037 0.0054566196345623725; 0.27281661025625514 0.955115662109782 -0.11543469652092977; 0.02642187860385393 0.11250256970291238 0.9933000836309662]), [0.5849132284711741, 0.3744223768685023, -1.1950270221377663])
Dx = SE3(SO3([0.9790130719502294 -0.20001593572116974 -0.03907723644476187; 0.16422510843594965 0.8878175380983442 -0.42989549056043314; 0.12067940466283153 0.4144558414386017 0.9020326140376771]), [-0.6375931028264701, 0.9359832076857548, 2.14939212193167])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
