Julia Version 1.6.0-DEV.487
Commit 6a4793ae77 (2020-07-17 20:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_RUCuBv/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_RUCuBv/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.050917 seconds (1.41 M allocations: 76.684 MiB, 5.34% gc time)
Running: chebyshev_quadrature with k=1
  1.841538 seconds (2.26 M allocations: 130.455 MiB, 3.00% gc time)
Running: chebyshev_quadrature with k=2
  0.305068 seconds (428.83 k allocations: 24.718 MiB)
Running: chebyshev_quadrature with k=3
  0.366003 seconds (549.72 k allocations: 30.241 MiB, 3.25% gc time)
Running: chebyshev_quadrature with k=4
  0.391339 seconds (492.42 k allocations: 26.766 MiB, 12.40% gc time)
Running: jacobi_quadrature with α=β=1
 43.024577 seconds (39.59 M allocations: 3.159 GiB, 9.17% gc time)
Running: laguerre_quadrature with k=1
  3.416789 seconds (3.36 M allocations: 188.495 MiB, 3.06% gc time)
Running: legendre_quadrature
  0.200988 seconds (217.75 k allocations: 12.525 MiB)
Running: lobatto_quadrature
  0.376153 seconds (348.92 k allocations: 21.055 MiB)
Running: radau_quadrature
  0.319284 seconds (330.97 k allocations: 20.032 MiB, 8.12% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 86.760565 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.174188 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.098901 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: simpsons_rule
  0.052955 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.105597 seconds (113.92 k allocations: 6.068 MiB)
Running: trapezoidal_rule
  0.333419 seconds (1.52 M allocations: 25.850 MiB, 8.77% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105066 seconds (56.10 k allocations: 3.370 MiB)
Running: chebyshev_quadrature with k=1
  0.412900 seconds (279.81 k allocations: 14.298 MiB)
Running: chebyshev_quadrature with k=2
  0.144985 seconds (116.33 k allocations: 3.845 MiB)
Running: chebyshev_quadrature with k=3
  0.173517 seconds (105.68 k allocations: 3.693 MiB, 13.09% gc time)
Running: chebyshev_quadrature with k=4
  0.151191 seconds (88.29 k allocations: 3.338 MiB)
Running: jacobi_quadrature with α=β=1
  2.712952 seconds (540.22 k allocations: 163.844 MiB, 4.54% gc time)
Running: legendre_quadrature
  0.199438 seconds (63.11 k allocations: 3.549 MiB)
Running: lobatto_quadrature
  0.027108 seconds (16.96 k allocations: 1.056 MiB)
Running: radau_quadrature
  0.028307 seconds (16.95 k allocations: 1.055 MiB)
Running: rectangle_rule_left
 37.396750 seconds (471.41 M allocations: 7.025 GiB, 3.53% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.016121 seconds (476.96 M allocations: 7.107 GiB, 3.83% gc time)
Running: simpsons_rule
  0.000043 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.058940 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.050732 seconds (18.51 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032197 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.097269 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.098491 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.182087 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.104892 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.365493 seconds (382.75 k allocations: 20.089 MiB, 5.72% gc time)
Running: legendre_quadrature
  0.060024 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000158 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000508 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000359 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000519 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000057 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022923 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021514 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.067974 seconds (76.98 k allocations: 4.494 MiB)
Running: chebyshev_quadrature with k=1
  0.198506 seconds (242.94 k allocations: 13.707 MiB)
Running: chebyshev_quadrature with k=2
  0.226311 seconds (298.53 k allocations: 16.824 MiB)
Running: chebyshev_quadrature with k=3
  0.239171 seconds (278.56 k allocations: 15.193 MiB, 8.37% gc time)
Running: chebyshev_quadrature with k=4
  0.242005 seconds (278.57 k allocations: 15.105 MiB)
Running: jacobi_quadrature with α=β=1
  2.616942 seconds (470.39 k allocations: 164.552 MiB, 10.53% gc time)
Running: legendre_quadrature
  0.144432 seconds (195.43 k allocations: 11.316 MiB)
Running: lobatto_quadrature
  0.182403 seconds (206.89 k allocations: 12.020 MiB)
Running: radau_quadrature
  0.196482 seconds (206.89 k allocations: 12.021 MiB, 9.94% gc time)
Running: rectangle_rule_left
  1.123507 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.026579 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.162366 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.034158 seconds (29.27 k allocations: 1.831 MiB)
Running: simpsons38_rule
  0.038954 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.027670 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051985 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.209865 seconds (250.14 k allocations: 13.840 MiB)
Running: chebyshev_quadrature with k=2
  0.231448 seconds (306.34 k allocations: 16.827 MiB)
Running: chebyshev_quadrature with k=3
  0.310596 seconds (286.04 k allocations: 15.249 MiB, 8.65% gc time)
Running: chebyshev_quadrature with k=4
  0.193762 seconds (286.05 k allocations: 15.275 MiB)
Running: hermite_quadrature with k=2
 16.758235 seconds (22.35 M allocations: 1.164 GiB, 9.32% gc time)
Running: jacobi_quadrature with α=β=1
  0.451961 seconds (480.54 k allocations: 50.801 MiB, 7.97% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.251516 seconds (291.46 k allocations: 16.141 MiB, 12.06% gc time)
Running: legendre_quadrature
  0.157701 seconds (202.56 k allocations: 11.656 MiB)
Running: lobatto_quadrature
  0.253631 seconds (228.50 k allocations: 37.845 MiB, 9.33% gc time)
Running: radau_quadrature
  0.222929 seconds (225.09 k allocations: 30.507 MiB)
Running: rectangle_rule_left
  0.030984 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.028664 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.025656 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.037834 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.041660 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.031780 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042933 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.238032 seconds (245.23 k allocations: 13.569 MiB, 15.86% gc time)
Running: chebyshev_quadrature with k=2
  0.230361 seconds (300.95 k allocations: 16.580 MiB)
Running: chebyshev_quadrature with k=3
  0.204380 seconds (280.89 k allocations: 15.007 MiB)
Running: chebyshev_quadrature with k=4
  0.330339 seconds (280.90 k allocations: 15.008 MiB, 7.86% gc time)
Running: hermite_quadrature with k=2
  0.159203 seconds (180.02 k allocations: 10.331 MiB)
Running: jacobi_quadrature with α=β=1
  8.759900 seconds (473.05 k allocations: 1.176 GiB, 12.51% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.253423 seconds (286.31 k allocations: 15.937 MiB)
Running: legendre_quadrature
  0.174732 seconds (197.72 k allocations: 11.427 MiB)
Running: lobatto_quadrature
  0.228735 seconds (218.85 k allocations: 23.549 MiB, 6.29% gc time)
Running: radau_quadrature
  0.211666 seconds (218.00 k allocations: 21.493 MiB)
Running: rectangle_rule_left
  0.029053 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.029445 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.026605 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.035782 seconds (33.83 k allocations: 1.966 MiB)
Running: simpsons38_rule
  0.043418 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.030445 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035293 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.207746 seconds (243.50 k allocations: 13.781 MiB)
Running: chebyshev_quadrature with k=2
  0.263495 seconds (299.12 k allocations: 16.906 MiB)
Running: chebyshev_quadrature with k=3
  0.231783 seconds (279.16 k allocations: 15.212 MiB, 7.92% gc time)
Running: chebyshev_quadrature with k=4
  0.230042 seconds (279.17 k allocations: 15.105 MiB)
Running: jacobi_quadrature with α=β=1
  2.732425 seconds (471.02 k allocations: 195.589 MiB, 3.69% gc time)
Running: legendre_quadrature
  0.184056 seconds (195.99 k allocations: 11.335 MiB, 7.03% gc time)
Running: lobatto_quadrature
  0.253922 seconds (207.45 k allocations: 12.049 MiB)
Running: radau_quadrature
  0.182189 seconds (207.45 k allocations: 12.048 MiB)
Running: rectangle_rule_left
  0.304684 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.026247 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.102579 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.034815 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.040303 seconds (45.77 k allocations: 2.865 MiB)
Running: trapezoidal_rule
  0.027319 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.054249 seconds (33.01 k allocations: 1.928 MiB, 32.72% gc time)
Running: chebyshev_quadrature with k=1
  0.196356 seconds (244.09 k allocations: 13.728 MiB)
Running: chebyshev_quadrature with k=2
  0.257379 seconds (299.74 k allocations: 16.824 MiB)
Running: chebyshev_quadrature with k=3
  0.238964 seconds (279.72 k allocations: 15.136 MiB, 8.62% gc time)
Running: chebyshev_quadrature with k=4
  0.204198 seconds (279.73 k allocations: 15.217 MiB)
Running: jacobi_quadrature with α=β=1
  2.000901 seconds (471.71 k allocations: 150.279 MiB, 8.06% gc time)
Running: legendre_quadrature
  0.188341 seconds (196.58 k allocations: 11.345 MiB, 8.58% gc time)
Running: lobatto_quadrature
  0.190716 seconds (208.06 k allocations: 12.075 MiB)
Running: radau_quadrature
  0.196775 seconds (208.04 k allocations: 12.065 MiB)
Running: rectangle_rule_left
  1.224187 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.025345 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.274022 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.036662 seconds (30.79 k allocations: 1.894 MiB)
Running: simpsons38_rule
  0.037193 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.029723 seconds (58.63 k allocations: 2.084 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.234929 seconds (154.67 k allocations: 9.251 MiB)
Running: chebyshev_quadrature with k=1
  0.155002 seconds (91.85 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.145060 seconds (127.62 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.200703 seconds (116.19 k allocations: 3.873 MiB)
Running: chebyshev_quadrature with k=4
  0.163992 seconds (95.73 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  1.909939 seconds (513.33 k allocations: 169.627 MiB, 7.72% gc time)
Running: legendre_quadrature
  0.106945 seconds (38.95 k allocations: 2.158 MiB)
Running: lobatto_quadrature
  0.000110 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000047 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.734749 seconds (590.00 M allocations: 8.792 GiB, 2.67% gc time)
Running: rectangle_rule_midpoint
  0.000035 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.293787 seconds (592.75 M allocations: 8.833 GiB, 2.69% gc time)
Running: simpsons_rule
  0.000046 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029907 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021211 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.524854 seconds (565.30 M allocations: 8.434 GiB, 4.10% gc time)
Running: chebyshev_quadrature with k=1
  0.479707 seconds (445.63 k allocations: 24.757 MiB, 3.24% gc time)
Running: chebyshev_quadrature with k=2
 14.062379 seconds (503.47 k allocations: 4.042 GiB, 4.00% gc time)
Running: chebyshev_quadrature with k=3
  6.713625 seconds (293.78 k allocations: 1.644 GiB, 4.11% gc time)
Running: chebyshev_quadrature with k=4
  8.431633 seconds (293.79 k allocations: 2.262 GiB, 2.41% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 60.419244 seconds (510.20 k allocations: 13.256 GiB, 3.54% gc time)
Running: legendre_quadrature.
  6.068287 seconds (235.61 k allocations: 1.977 GiB, 1.67% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.645306 seconds (8.24 M allocations: 13.384 GiB, 3.86% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.821947 seconds (7.24 M allocations: 13.369 GiB, 2.67% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.428002 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.043667 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.089571 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.084693 seconds (600.04 M allocations: 8.943 GiB, 7.78% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.595736 seconds (600.05 M allocations: 8.944 GiB, 8.21% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.694244 seconds (600.04 M allocations: 8.943 GiB, 8.07% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.059859 seconds (129.55 k allocations: 3.741 MiB)
Running: chebyshev_quadrature with k=1
  0.210341 seconds (260.77 k allocations: 14.234 MiB)
Running: chebyshev_quadrature with k=2
  0.224172 seconds (286.83 k allocations: 15.388 MiB)
Running: chebyshev_quadrature with k=3
  0.208690 seconds (263.25 k allocations: 13.643 MiB)
Running: chebyshev_quadrature with k=4
  0.213612 seconds (263.26 k allocations: 13.645 MiB)
Running: jacobi_quadrature with α=β=1
  0.376831 seconds (409.18 k allocations: 36.144 MiB)
Running: laguerre_quadrature with k=2
  0.209150 seconds (190.38 k allocations: 11.061 MiB)
Running: legendre_quadrature
  0.116511 seconds (153.60 k allocations: 8.536 MiB)
Running: lobatto_quadrature
  0.035508 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.032058 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.073114 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.050465 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.054960 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.002014 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055128 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.204590 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001144 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.106310 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.104183 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.117870 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.127602 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  7.956905 seconds (406.05 k allocations: 906.780 MiB, 4.40% gc time)
Running: legendre_quadrature
  0.067216 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000172 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000133 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.368691 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000474 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.453822 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000897 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000426 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.132392 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.103348 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.136008 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.124523 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.598797 seconds (392.25 k allocations: 254.054 MiB)
Running: legendre_quadrature
  0.061953 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000126 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000092 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.316061 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001097 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.394883 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000067 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001662 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
