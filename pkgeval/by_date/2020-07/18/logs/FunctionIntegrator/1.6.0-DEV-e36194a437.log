Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ISIDPM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ISIDPM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.142840 seconds (1.41 M allocations: 76.774 MiB, 3.55% gc time)
Running: chebyshev_quadrature with k=1
  1.737918 seconds (2.26 M allocations: 130.383 MiB, 4.42% gc time)
Running: chebyshev_quadrature with k=2
  0.282642 seconds (428.78 k allocations: 24.713 MiB)
Running: chebyshev_quadrature with k=3
  0.327062 seconds (549.69 k allocations: 30.243 MiB)
Running: chebyshev_quadrature with k=4
  0.335805 seconds (492.39 k allocations: 26.778 MiB, 5.33% gc time)
Running: jacobi_quadrature with α=β=1
 43.448897 seconds (39.59 M allocations: 3.158 GiB, 9.12% gc time)
Running: laguerre_quadrature with k=1
  3.047973 seconds (3.36 M allocations: 188.467 MiB, 2.85% gc time)
Running: legendre_quadrature
  0.185084 seconds (217.55 k allocations: 12.510 MiB)
Running: lobatto_quadrature
  0.371095 seconds (348.50 k allocations: 21.026 MiB, 6.70% gc time)
Running: radau_quadrature
  0.266534 seconds (330.56 k allocations: 19.999 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 77.653497 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rectangle_rule_midpoint.
  0.166473 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 75.747714 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: simpsons_rule
  0.037602 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.094728 seconds (113.90 k allocations: 6.067 MiB)
Running: trapezoidal_rule
  0.362049 seconds (1.52 M allocations: 25.848 MiB, 9.97% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.095319 seconds (56.59 k allocations: 3.392 MiB)
Running: chebyshev_quadrature with k=1
  0.398708 seconds (279.57 k allocations: 14.281 MiB, 6.13% gc time)
Running: chebyshev_quadrature with k=2
  0.135684 seconds (116.32 k allocations: 3.844 MiB)
Running: chebyshev_quadrature with k=3
  0.129635 seconds (105.67 k allocations: 3.692 MiB)
Running: chebyshev_quadrature with k=4
  0.122999 seconds (88.28 k allocations: 3.337 MiB)
Running: jacobi_quadrature with α=β=1
  1.974956 seconds (540.17 k allocations: 163.835 MiB, 4.47% gc time)
Running: legendre_quadrature
  0.212521 seconds (62.93 k allocations: 3.536 MiB, 28.86% gc time)
Running: lobatto_quadrature
  0.019981 seconds (16.79 k allocations: 1.042 MiB)
Running: radau_quadrature
  0.020281 seconds (16.78 k allocations: 1.042 MiB)
Running: rectangle_rule_left
 27.886967 seconds (471.41 M allocations: 7.025 GiB, 3.02% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.576759 seconds (476.96 M allocations: 7.107 GiB, 2.00% gc time)
Running: simpsons_rule
  0.000062 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.073901 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.062661 seconds (18.50 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033624 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.110439 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.103103 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.136414 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.123290 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.410157 seconds (382.73 k allocations: 20.087 MiB)
Running: legendre_quadrature
  0.113429 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000123 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000046 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000734 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000505 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000592 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000040 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.040500 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021026 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063329 seconds (76.98 k allocations: 4.494 MiB)
Running: chebyshev_quadrature with k=1
  0.191909 seconds (242.91 k allocations: 13.703 MiB)
Running: chebyshev_quadrature with k=2
  0.268269 seconds (298.48 k allocations: 16.793 MiB, 16.75% gc time)
Running: chebyshev_quadrature with k=3
  0.224763 seconds (278.53 k allocations: 15.193 MiB)
Running: chebyshev_quadrature with k=4
  0.252304 seconds (278.54 k allocations: 15.103 MiB)
Running: jacobi_quadrature with α=β=1
  2.270555 seconds (470.35 k allocations: 164.558 MiB, 6.25% gc time)
Running: legendre_quadrature
  0.147924 seconds (195.40 k allocations: 11.317 MiB)
Running: lobatto_quadrature
  0.206080 seconds (206.86 k allocations: 12.022 MiB, 9.19% gc time)
Running: radau_quadrature
  0.161939 seconds (206.86 k allocations: 12.035 MiB)
Running: rectangle_rule_left
  1.121143 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.022782 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.147036 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.034542 seconds (29.27 k allocations: 1.831 MiB)
Running: simpsons38_rule
  0.035876 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.035873 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.060942 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.238384 seconds (250.11 k allocations: 13.823 MiB, 10.17% gc time)
Running: chebyshev_quadrature with k=2
  0.201393 seconds (306.29 k allocations: 16.824 MiB)
Running: chebyshev_quadrature with k=3
  0.220136 seconds (286.00 k allocations: 15.232 MiB)
Running: chebyshev_quadrature with k=4
  0.207035 seconds (286.02 k allocations: 15.273 MiB, 8.31% gc time)
Running: hermite_quadrature with k=2
 13.528018 seconds (22.35 M allocations: 1.164 GiB, 10.01% gc time)
Running: jacobi_quadrature with α=β=1
  0.527520 seconds (480.50 k allocations: 50.803 MiB, 13.42% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.239188 seconds (291.41 k allocations: 16.139 MiB)
Running: legendre_quadrature
  0.214567 seconds (202.53 k allocations: 11.655 MiB, 17.60% gc time)
Running: lobatto_quadrature
  0.217555 seconds (228.47 k allocations: 37.843 MiB)
Running: radau_quadrature
  0.335826 seconds (225.06 k allocations: 30.506 MiB, 14.86% gc time)
Running: rectangle_rule_left
  0.030417 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.032833 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.029058 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.043406 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.048270 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.034505 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.035976 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.169302 seconds (245.19 k allocations: 13.567 MiB, 12.36% gc time)
Running: chebyshev_quadrature with k=2
  0.183979 seconds (300.90 k allocations: 16.577 MiB)
Running: chebyshev_quadrature with k=3
  0.160674 seconds (280.86 k allocations: 15.010 MiB)
Running: chebyshev_quadrature with k=4
  0.190105 seconds (280.87 k allocations: 15.006 MiB, 12.33% gc time)
Running: hermite_quadrature with k=2
  0.113322 seconds (179.99 k allocations: 10.329 MiB)
Running: jacobi_quadrature with α=β=1
 12.154963 seconds (473.01 k allocations: 1.176 GiB, 8.53% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.221010 seconds (286.26 k allocations: 15.930 MiB, 6.36% gc time)
Running: legendre_quadrature
  0.172663 seconds (197.69 k allocations: 11.426 MiB)
Running: lobatto_quadrature
  0.199070 seconds (218.82 k allocations: 23.548 MiB)
Running: radau_quadrature
  0.198871 seconds (217.97 k allocations: 21.537 MiB, 6.86% gc time)
Running: rectangle_rule_left
  0.024473 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.025460 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.022041 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.028528 seconds (33.83 k allocations: 1.966 MiB)
Running: simpsons38_rule
  0.035056 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.024093 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031897 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.188284 seconds (243.47 k allocations: 13.779 MiB, 8.33% gc time)
Running: chebyshev_quadrature with k=2
  0.214380 seconds (299.07 k allocations: 16.903 MiB)
Running: chebyshev_quadrature with k=3
  0.227962 seconds (279.13 k allocations: 15.210 MiB)
Running: chebyshev_quadrature with k=4
  0.302618 seconds (279.14 k allocations: 15.040 MiB, 5.96% gc time)
Running: jacobi_quadrature with α=β=1
  3.077398 seconds (470.99 k allocations: 195.588 MiB, 2.68% gc time)
Running: legendre_quadrature
  0.157301 seconds (195.96 k allocations: 11.333 MiB)
Running: lobatto_quadrature
  0.157541 seconds (207.42 k allocations: 12.047 MiB, 9.18% gc time)
Running: radau_quadrature
  0.134965 seconds (207.42 k allocations: 12.047 MiB)
Running: rectangle_rule_left
  0.411699 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.028857 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.129120 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.034256 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.035923 seconds (45.77 k allocations: 2.865 MiB)
Running: trapezoidal_rule
  0.039627 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031630 seconds (33.01 k allocations: 1.928 MiB)
Running: chebyshev_quadrature with k=1
  0.263414 seconds (244.06 k allocations: 13.726 MiB, 8.24% gc time)
Running: chebyshev_quadrature with k=2
  0.257417 seconds (299.69 k allocations: 16.822 MiB)
Running: chebyshev_quadrature with k=3
  0.315490 seconds (279.69 k allocations: 15.134 MiB)
Running: chebyshev_quadrature with k=4
  0.214087 seconds (279.70 k allocations: 15.215 MiB, 7.78% gc time)
Running: jacobi_quadrature with α=β=1
  2.634798 seconds (471.68 k allocations: 150.273 MiB, 8.11% gc time)
Running: legendre_quadrature
  0.227923 seconds (196.55 k allocations: 11.359 MiB)
Running: lobatto_quadrature
  0.252484 seconds (208.02 k allocations: 12.069 MiB, 15.00% gc time)
Running: radau_quadrature
  0.197053 seconds (208.01 k allocations: 12.064 MiB)
Running: rectangle_rule_left
  1.249253 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.024921 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.253015 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.029288 seconds (30.79 k allocations: 1.895 MiB)
Running: simpsons38_rule
  0.028722 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.031816 seconds (58.63 k allocations: 2.084 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.196363 seconds (154.65 k allocations: 9.250 MiB, 9.29% gc time)
Running: chebyshev_quadrature with k=1
  0.127148 seconds (91.84 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.155862 seconds (127.61 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.147200 seconds (116.19 k allocations: 3.878 MiB)
Running: chebyshev_quadrature with k=4
  0.133720 seconds (95.72 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  3.266697 seconds (513.44 k allocations: 169.630 MiB, 6.33% gc time)
Running: legendre_quadrature
  0.155666 seconds (38.94 k allocations: 2.158 MiB)
Running: lobatto_quadrature
  0.000088 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000036 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.691813 seconds (590.00 M allocations: 8.792 GiB, 2.96% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.705834 seconds (592.75 M allocations: 8.833 GiB, 3.00% gc time)
Running: simpsons_rule
  0.000053 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032449 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.018107 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.356646 seconds (565.30 M allocations: 8.434 GiB, 4.49% gc time)
Running: chebyshev_quadrature with k=1
  0.530998 seconds (445.43 k allocations: 24.742 MiB)
Running: chebyshev_quadrature with k=2
 13.452874 seconds (503.25 k allocations: 4.042 GiB, 3.45% gc time)
Running: chebyshev_quadrature with k=3
  5.921203 seconds (293.75 k allocations: 1.644 GiB, 5.05% gc time)
Running: chebyshev_quadrature with k=4
  8.748390 seconds (293.76 k allocations: 2.262 GiB, 3.81% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.596078 seconds (510.00 k allocations: 13.256 GiB, 2.64% gc time)
Running: legendre_quadrature.
  5.859751 seconds (235.41 k allocations: 1.977 GiB, 3.14% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.191001 seconds (8.24 M allocations: 13.384 GiB, 3.41% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.428024 seconds (7.24 M allocations: 13.369 GiB, 2.11% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.148263 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.068827 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.290133 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.154664 seconds (600.04 M allocations: 8.943 GiB, 8.37% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.735300 seconds (600.05 M allocations: 8.944 GiB, 8.93% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.375878 seconds (600.04 M allocations: 8.943 GiB, 8.69% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.056463 seconds (129.55 k allocations: 3.741 MiB)
Running: chebyshev_quadrature with k=1
  0.201758 seconds (260.74 k allocations: 14.232 MiB)
Running: chebyshev_quadrature with k=2
  0.188269 seconds (286.78 k allocations: 15.385 MiB)
Running: chebyshev_quadrature with k=3
  0.180205 seconds (263.22 k allocations: 13.642 MiB)
Running: chebyshev_quadrature with k=4
  0.210947 seconds (263.23 k allocations: 13.643 MiB)
Running: jacobi_quadrature with α=β=1
  0.374591 seconds (409.16 k allocations: 36.127 MiB)
Running: laguerre_quadrature with k=2
  0.186686 seconds (190.35 k allocations: 11.059 MiB)
Running: legendre_quadrature
  0.111000 seconds (153.58 k allocations: 8.539 MiB)
Running: lobatto_quadrature
  0.036309 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.032665 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.054405 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.044143 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.048567 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.002014 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.047832 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.186600 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001220 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.101920 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.102766 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.114517 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.105001 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  9.068127 seconds (406.03 k allocations: 906.779 MiB, 4.03% gc time)
Running: legendre_quadrature
  0.054457 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000152 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000109 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.685811 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000427 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.474835 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000768 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000681 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.107961 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.110579 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.114127 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.114111 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  2.411060 seconds (392.23 k allocations: 254.052 MiB)
Running: legendre_quadrature
  0.067308 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000154 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000070 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.292361 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001064 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.931207 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001962 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
