Julia Version 1.6.0-DEV.487
Commit 6a4793ae77 (2020-07-17 20:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_s12y3Z/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_s12y3Z/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719132526483284
curgen: 20 fitness: 0.2171975964049112
curgen: 30 fitness: 0.21723088600834192
curgen: 40 fitness: 0.21723270686560137
curgen: 50 fitness: 0.21723270686560137
CoordinateCreature{Vector{Float64}}([-0.22240397238792545], -0.21723270686560137) -0.22240397238792545 -0.21723270686560137
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581104365692473
curgen: 100 fitness: 3.258220446716624
curgen: 150 fitness: 3.258307395991898
curgen: 200 fitness: 3.2583792325240726
curgen: 250 fitness: 3.2583815130418534
curgen: 300 fitness: 3.258398970487921
curgen: 350 fitness: 3.2584439480529728
curgen: 400 fitness: 3.2584563623420775
curgen: 450 fitness: 3.2584598093093
curgen: 500 fitness: 3.2584598093093
CoordinateCreature{Vector{Float64}}([-0.22251748373812755, -0.22188457494899777, 0.22280571762398405, 0.2224908326184326, -0.2227397694157407, 0.2224647753197349, -0.22280097106663604, 0.2224596682168307, 0.2225570171025163, 0.22267936058844082, -0.2224390391794963, -0.2223722540741948, -0.2229706711193518, 0.22263737979270282, -0.22291397387113304], -3.2584598093093) [-0.22251748373812755, -0.22188457494899777, 0.22280571762398405, 0.2224908326184326, -0.2227397694157407, 0.2224647753197349, -0.22280097106663604, 0.2224596682168307, 0.2225570171025163, 0.22267936058844082, -0.2224390391794963, -0.2223722540741948, -0.2229706711193518, 0.22263737979270282, -0.22291397387113304] -3.2584598093093
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0019564177123641002
curgen: 100 fitness: -0.0016996788537255725
curgen: 150 fitness: -0.0014070301411663877
curgen: 200 fitness: -0.001391861572557218
curgen: 250 fitness: -0.0012511942033768264
curgen: 300 fitness: -0.0005245866321956782
curgen: 350 fitness: -0.0005245866321956782
curgen: 400 fitness: -0.0005245866321956782
curgen: 450 fitness: -0.0005245866321956782
curgen: 500 fitness: -0.000524256212884211
CoordinateCreature{Vector{Float64}}([0.0007270355605846165, -0.00012041674115715977, 8.866488093250881e-6, -0.0008455409355466854, 0.00042615481848648365, -0.0008596349766460205, -0.0005283784069687321, -0.00014057738483803567, 0.00011146057221620342, 0.0003058792034640992, 0.00010444877834701768, -4.095612434086918e-5, -3.9346347723228465e-5, 1.7901285676626815e-5, 0.00021086617960814713], 0.000524256212884211) [0.0007270355605846165, -0.00012041674115715977, 8.866488093250881e-6, -0.0008455409355466854, 0.00042615481848648365, -0.0008596349766460205, -0.0005283784069687321, -0.00014057738483803567, 0.00011146057221620342, 0.0003058792034640992, 0.00010444877834701768, -4.095612434086918e-5, -3.9346347723228465e-5, 1.7901285676626815e-5, 0.00021086617960814713] 0.000524256212884211
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
