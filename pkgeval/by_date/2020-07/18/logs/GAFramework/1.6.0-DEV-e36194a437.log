Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_5ZcTvh/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_5ZcTvh/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172006228481864
curgen: 20 fitness: 0.2172206314599741
curgen: 30 fitness: 0.21723324680550818
curgen: 40 fitness: 0.21723324680550818
curgen: 50 fitness: 0.21723324680550818
CoordinateCreature{Vector{Float64}}([0.22264099390440364], -0.21723324680550818) 0.22264099390440364 -0.21723324680550818
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2569981578896647
curgen: 100 fitness: 3.2576139479570405
curgen: 150 fitness: 3.2581017912911574
curgen: 200 fitness: 3.2582721600120936
curgen: 250 fitness: 3.2583479465825738
curgen: 300 fitness: 3.258364703407023
curgen: 350 fitness: 3.2584638770359997
curgen: 400 fitness: 3.2584642578075824
curgen: 450 fitness: 3.258471076813287
curgen: 500 fitness: 3.258471076813287
CoordinateCreature{Vector{Float64}}([-0.22209187498335162, 0.22245841623732346, 0.22257033293033426, 0.22309695656449216, 0.22258172189475348, 0.22251899007885356, -0.2225375341740161, -0.22271378605096612, -0.22280234674977717, 0.2224898480768707, -0.22283171003102048, 0.22257557845764375, -0.22260026955234097, -0.22235605642639664, 0.22268050354736188], -3.258471076813287) [-0.22209187498335162, 0.22245841623732346, 0.22257033293033426, 0.22309695656449216, 0.22258172189475348, 0.22251899007885356, -0.2225375341740161, -0.22271378605096612, -0.22280234674977717, 0.2224898480768707, -0.22283171003102048, 0.22257557845764375, -0.22260026955234097, -0.22235605642639664, 0.22268050354736188] -3.258471076813287
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0023007227452467305
curgen: 100 fitness: -0.0023007227452467305
curgen: 150 fitness: -0.002069501834228049
curgen: 200 fitness: -0.002019471884750601
curgen: 250 fitness: -0.0016645722909629512
curgen: 300 fitness: -0.0016645722909629512
curgen: 350 fitness: -0.0015804741244096476
curgen: 400 fitness: -0.0015804741244096476
curgen: 450 fitness: -0.001361221988588568
curgen: 500 fitness: -0.0013594157696275033
CoordinateCreature{Vector{Float64}}([-0.000873850348504862, 0.0001603836446619273, -0.0005633726680194919, 0.001703215240207113, -0.00034456718536260357, -0.00017762614002359684, 0.0012447771711527468, 8.406029463271141e-5, 0.0008498813348546974, 0.0003051255924687187, -9.972789609999095e-5, 0.00030858217676137567, 0.0003807459122741833, -0.00016231995649184196, -0.00021410479202343003], 0.0013594157696275033) [-0.000873850348504862, 0.0001603836446619273, -0.0005633726680194919, 0.001703215240207113, -0.00034456718536260357, -0.00017762614002359684, 0.0012447771711527468, 8.406029463271141e-5, 0.0008498813348546974, 0.0003051255924687187, -9.972789609999095e-5, 0.00030858217676137567, 0.0003807459122741833, -0.00016231995649184196, -0.00021410479202343003] 0.0013594157696275033
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
