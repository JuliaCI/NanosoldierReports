Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_xE2bsy/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_xE2bsy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0410311969553404 0.1481793853320759; -0.0410311969553404 0.0 0.012672641898429532; -0.1481793853320759 -0.012672641898429532 0.0])
dAA = so3([0.0 0.0042566585959595594 -0.094105563818371; -0.0042566585959595594 0.0 -0.06212313972566133; 0.094105563818371 0.06212313972566133 0.0])
dAA = so3([0.0 0.07719551672645747 -0.024026422013076264; -0.07719551672645747 0.0 0.04576764019836454; 0.024026422013076264 -0.04576764019836454 0.0])
dAA = Quaternion(0.9977898146421141, [-0.007623987049458444, -0.05938978191669306, 0.028813441686352574])
dAA = SO3([0.988695305549744 0.05890420612392407 -0.1378836004926211; -0.05388812422179456 0.9977520190404847 0.0398368995843443; 0.13992020172853853 -0.03195626701520309 0.9896469745048981])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9724522475040516 -0.007647269188295293 -0.23297670612806023; -0.02864938572026045 0.9879632588417044 -0.15201253855103872; 0.23133490662278042 0.15449957428045247 0.9605280019473604]), [-0.12672641898429532, 1.4817938533207589, -0.410311969553404])
xj = SE3(SO3([0.945908045774958 -0.13753226387351655 -0.2938415309857087; 0.15128758772721818 0.9881863328206258 0.02449157867926265; 0.28700180267357045 -0.06762135772334552 0.9555403273759681]), [-0.45767640198364534, -0.24026422013076262, -0.7719551672645746])
Dx = SE3(SO3([0.9819096438125984 -0.17769767099522502 -0.06539869349374361; 0.18657462107065628 0.9668960649796923 0.1740744389596821; 0.032301117010977654 -0.1831271068128907 0.9825584463990846]), [-0.3561578441734216, -1.7546729626417723, -0.008490361905361787])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
