Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_PrDkNf/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_PrDkNf/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.217191685161302
curgen: 20 fitness: 0.21719193952772609
curgen: 30 fitness: 0.21719193952772609
curgen: 40 fitness: 0.21721716868339414
curgen: 50 fitness: 0.21723341257409756
CoordinateCreature{Vector{Float64}}([-0.22261795790715502], -0.21723341257409756) -0.22261795790715502 -0.21723341257409756
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25830204165268
curgen: 100 fitness: 3.258396021442325
curgen: 150 fitness: 3.258398539459349
curgen: 200 fitness: 3.2584122443161334
curgen: 250 fitness: 3.258451093676199
curgen: 300 fitness: 3.258453367442428
curgen: 350 fitness: 3.258453367442428
curgen: 400 fitness: 3.258456981372084
curgen: 450 fitness: 3.258456981372084
curgen: 500 fitness: 3.25848104035181
CoordinateCreature{Vector{Float64}}([0.22243137798793644, 0.22280566269460148, -0.22207870552854234, 0.2226099773944285, 0.22264089777891008, 0.2227032810649526, -0.2226537798682275, 0.2226351251075324, -0.2225942476443412, 0.22242899300959587, 0.2228125360141024, -0.22274957481718521, -0.22238456976682694, 0.22263626839105913, -0.2226524309276108], -3.25848104035181) [0.22243137798793644, 0.22280566269460148, -0.22207870552854234, 0.2226099773944285, 0.22264089777891008, 0.2227032810649526, -0.2226537798682275, 0.2226351251075324, -0.2225942476443412, 0.22242899300959587, 0.2228125360141024, -0.22274957481718521, -0.22238456976682694, 0.22263626839105913, -0.2226524309276108] -3.25848104035181
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0009029515989311676
curgen: 100 fitness: -0.0006387536004126559
curgen: 150 fitness: -0.0003813816935007708
curgen: 200 fitness: -0.0003813816935007708
curgen: 250 fitness: -0.0003686721236988433
curgen: 300 fitness: -0.0003551211209185112
curgen: 350 fitness: -0.0003249434478505009
curgen: 400 fitness: -0.0003249434478505009
curgen: 450 fitness: -0.000268420485099341
curgen: 500 fitness: -0.000268420485099341
CoordinateCreature{Vector{Float64}}([8.080427564434453e-5, 6.486757833071174e-5, -8.303736630173329e-5, 2.7778136903156784e-5, 0.0003271925856819522, -8.377576680578523e-5, 0.00018766197959233416, -0.00010916532463534849, 0.0008890115076116685, 0.00014477814758756706, -0.0004994649420847941, -2.1491666946363535e-5, 4.0193193261264196e-5, 0.00026311694014451766, -0.00020321263455218828], 0.000268420485099341) [8.080427564434453e-5, 6.486757833071174e-5, -8.303736630173329e-5, 2.7778136903156784e-5, 0.0003271925856819522, -8.377576680578523e-5, 0.00018766197959233416, -0.00010916532463534849, 0.0008890115076116685, 0.00014477814758756706, -0.0004994649420847941, -2.1491666946363535e-5, 4.0193193261264196e-5, 0.00026311694014451766, -0.00020321263455218828] 0.000268420485099341
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
