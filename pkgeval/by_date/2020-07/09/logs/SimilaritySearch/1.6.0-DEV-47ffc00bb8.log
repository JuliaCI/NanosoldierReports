Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed DataStructures ───── v0.17.19
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_p2mAow/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_p2mAow/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(32, 0.033019662f0), Item(8, 0.03346765f0), Item(44, 0.041956186f0), Item(2, 0.10476422f0)])
Vsorted = Item[Item(32, 0.033019662f0), Item(8, 0.03346765f0), Item(44, 0.041956186f0), Item(2, 0.10476422f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0052825927734375, 0.006043163935343424, 301.0, 51.18291988223791))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003926523526509603, 0.004363401730855306, 301.0, 74.15878510475159))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005415948232014974, 0.005575029055277506, 301.0, 41.99977743625641))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005991911888122559, 0.004184563954671224, 301.0, 9.425710175419226))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003944587707519531, 0.0064134359359741214, 301.0, 46.48028839379549))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017601648966471354, 0.00013569990793863931, 301.0, 182.83179900050163))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.884170532226563e-5, 0.01329653263092041, 300.0, 28.63874101359397)
p = PerformanceResult(1.0, 1.0, 1.0, 5.734761555989583e-5, 2.7704238891601563e-5, 300.0, 28.63874101359397)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0055797815322875975, 0.0037993669509887697, 300.0, 1.6046531294814486)
p = PerformanceResult(1.0, 1.0, 1.0, 4.9238734775119355e-5, 1.9733111063639323e-5, 300.0, 1.6046531294814486)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.884170532226563e-5, 0.01329653263092041, 300.0, 28.63874101359397), PerformanceResult(1.0, 1.0, 1.0, 5.734761555989583e-5, 2.7704238891601563e-5, 300.0, 28.63874101359397), PerformanceResult(1.0, 1.0, 1.0, 0.0055797815322875975, 0.0037993669509887697, 300.0, 1.6046531294814486), PerformanceResult(1.0, 1.0, 1.0, 4.9238734775119355e-5, 1.9733111063639323e-5, 300.0, 1.6046531294814486))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 130.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.011054460207621257, 0.003498999277750651, 349.03333333333336, 28643.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007978391647338868, 0.0035643657048543293, 305.3666666666667, 6964.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5010108947753908e-5, 1.0959307352701823e-5, 100.56666666666666, 51.21640972048044))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.381006876627604e-5, 1.080036163330078e-5, 87.63333333333334, 74.12396264076233))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.609093983968099e-5, 1.3836224873860677e-5, 94.6, 41.994433641433716))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.231004079182943e-5, 0.00015929539998372396, 102.23333333333333, 46.47510219365358))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8100000000000002, 0.8100000000000002, 0.8100000000000002, 5.049705505371094e-5, 0.00012400150299072266, 72.06666666666666, 191.09889593720436))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-10T03:14:27.024
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.981, 0.981, 0.981, 2.587556838989258e-5, 2.393960952758789e-5, 167.12, 49.07965784519911))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5348663330078123e-5, 1.9180774688720704e-5, 171.74, 0.0))
*** advance 1 from 1000; 2020-07-10T03:14:27.813
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8949999999999999, 0.8949999999999999, 0.8949999999999999, 2.289295196533203e-5, 3.072023391723633e-5, 151.5, 75.51664058305323))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.7682781219482422e-5, 2.4080276489257812e-5, 154.77, 0.0))
*** advance 1 from 1000; 2020-07-10T03:14:28.581
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.977, 0.977, 0.977, 3.236770629882812e-5, 3.979921340942383e-5, 166.95, 40.03569769859314))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 3.141164779663086e-5, 3.5309791564941405e-5, 171.57, 0.0))
*** advance 1 from 1000; 2020-07-10T03:14:29.343
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9139999999999999, 0.9139999999999999, 0.9139999999999999, 0.0001010441780090332, 0.0004990315437316895, 152.49, 45.7510552178137))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001006484031677246, 0.0005426716804504395, 155.74, 0.0))
*** advance 1 from 1000; 2020-07-10T03:14:29.911
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9610000000000001, 0.9610000000000001, 0.9610000000000001, 9.061574935913086e-5, 0.00044620990753173827, 166.92, 189.61738781514578))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.332656860351562e-5, 0.00043057918548583985, 171.82, 0.0))
*** advance 1 from 1000; 2020-07-10T03:14:31.163
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.981, 0.981, 0.981, 4.142045974731445e-5, 6.258010864257813e-5, 167.12, 49.08821426628856))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.992795944213867e-5, 5.910873413085937e-5, 171.74, 0.014625325566157699))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:33.523
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7849999999999998, 0.7849999999999998, 0.7849999999999998, 0.0019652223587036132, 9.127140045166015e-5, 200.56, 185.90000215172768))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:34.915
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7939999999999999, 0.7939999999999999, 0.7939999999999999, 0.0016592669486999512, 8.773088455200196e-5, 205.09, 105.98571629822254))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:35.997
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6609999999999997, 0.6609999999999997, 0.6609999999999997, 0.001549081802368164, 8.89420509338379e-5, 250.28, 2.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:36.908
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9740000000000003, 0.9730000000000004, 0.9734736842105266, 0.0015787816047668458, 1.7910003662109376e-5, 219.83, 595.0000205039978))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:37.983
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.601, 0.601, 0.601, 0.0016803884506225587, 0.0003997802734375, 250.85, 2335.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:39.034
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38099999999999995, 0.38099999999999995, NaN, 0.0016132307052612305, 0.0004370307922363281, 239.33, 3626.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T03:14:40.105
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.619, 0.619, 0.619, 0.0014752864837646485, 3.207921981811524e-5, 248.05, 2356.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0258236865538732, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9843578296703299,"seconds":7.620081305503845e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.7734375,"distances_sum":644.0661938488483}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0350404312668466, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750916,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.6953125,"distances_sum":635.5409225225449}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0350404312668466,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750916,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.6953125,"distances_sum":635.5409225225449}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0530164533820843, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.967880036630037,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.546875,"distances_sum":620.3509285151958}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0530164533820843,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.967880036630037,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.546875,"distances_sum":620.3509285151958}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0530164533820843,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.967880036630037,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.546875,"distances_sum":620.3509285151958}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0530164533820843,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.967880036630037,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.546875,"distances_sum":620.3509285151958}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444436,"state":{"restarts":4},"perf":{"precision":0.8663194444444436,"recall":0.8663194444444436,"f1":0.8663194444444436,"seconds":1.6121193766593933e-5,"exhaustive_search_seconds":6.537884473800659e-6,"evaluations":39.5078125,"distances_sum":301.39042810723186}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":0.8663194444444436,"state":{"restarts":4},"perf":{"precision":0.8663194444444436,"recall":0.8663194444444436,"f1":0.8663194444444436,"seconds":1.6121193766593933e-5,"exhaustive_search_seconds":6.537884473800659e-6,"evaluations":39.5078125,"distances_sum":301.39042810723186}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666654, conf: {"restarts":1}, perf: {"precision":0.8619791666666654,"recall":0.8619791666666654,"f1":0.8619791666666654,"seconds":2.7341768145561218e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":64.03125,"distances_sum":123.81001455057412}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777767, conf: {"restarts":6}, perf: {"precision":0.8715277777777767,"recall":0.8715277777777767,"f1":0.8715277777777767,"seconds":3.731623291969299e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":99.3828125,"distances_sum":123.17718763370067}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999989, conf: {"restarts":9}, perf: {"precision":0.8671874999999989,"recall":0.8671874999999989,"f1":0.8671874999999989,"seconds":4.6974048018455505e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":122.65625,"distances_sum":123.39342242199928}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8715277777777767,"state":{"restarts":6},"perf":{"precision":0.8715277777777767,"recall":0.8715277777777767,"f1":0.8715277777777767,"seconds":3.731623291969299e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":99.3828125,"distances_sum":123.17718763370067}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.881076388888888, conf: {"restarts":14}, perf: {"precision":0.881076388888888,"recall":0.881076388888888,"f1":0.881076388888888,"seconds":5.4176896810531616e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":151.5,"distances_sum":123.04466589260846}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.881076388888888,"state":{"restarts":14},"perf":{"precision":0.881076388888888,"recall":0.881076388888888,"f1":0.881076388888888,"seconds":5.4176896810531616e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":151.5,"distances_sum":123.04466589260846}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.881076388888888,"state":{"restarts":14},"perf":{"precision":0.881076388888888,"recall":0.881076388888888,"f1":0.881076388888888,"seconds":5.4176896810531616e-5,"exhaustive_search_seconds":3.052316606044769e-5,"evaluations":151.5,"distances_sum":123.04466589260846}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8324652777777769, conf: {"restarts":6}, perf: {"precision":0.8324652777777769,"recall":0.8324652777777769,"f1":null,"seconds":8.888915181159973e-5,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":178.7578125,"distances_sum":56.59201887669042}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666652, conf: {"restarts":16}, perf: {"precision":0.8385416666666652,"recall":0.8385416666666652,"f1":0.8385416666666652,"seconds":0.00012549199163913727,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":253.4609375,"distances_sum":55.91723496187478}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444433, conf: {"restarts":26}, perf: {"precision":0.8428819444444433,"recall":0.8428819444444433,"f1":0.8428819444444433,"seconds":0.0002651885151863098,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":344.8359375,"distances_sum":55.83368930313736}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555542, conf: {"restarts":19}, perf: {"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":0.00013034231960773468,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":288.3125,"distances_sum":55.93434955831617}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8524305555555542,"state":{"restarts":19},"perf":{"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":0.00013034231960773468,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":288.3125,"distances_sum":55.93434955831617}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666656, conf: {"restarts":20}, perf: {"precision":0.8541666666666656,"recall":0.8541666666666656,"f1":0.8541666666666656,"seconds":0.00022382475435733795,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":287.828125,"distances_sum":55.87991810310632}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8532986111111099, conf: {"restarts":27}, perf: {"precision":0.8532986111111099,"recall":0.8532986111111099,"f1":0.8532986111111099,"seconds":0.0001661255955696106,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":359.359375,"distances_sum":55.69682438019663}, best_list's length: 19, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666656,"state":{"restarts":20},"perf":{"precision":0.8541666666666656,"recall":0.8541666666666656,"f1":0.8541666666666656,"seconds":0.00022382475435733795,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":287.828125,"distances_sum":55.87991810310632}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8541666666666656,"state":{"restarts":20},"perf":{"precision":0.8541666666666656,"recall":0.8541666666666656,"f1":0.8541666666666656,"seconds":0.00022382475435733795,"exhaustive_search_seconds":0.00041904672980308533,"evaluations":287.828125,"distances_sum":55.87991810310632}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(20), SatNeighborhood(32), 2020-07-10T03:14:48.885
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6062, 0.027366145f0), Item(1264, 0.029100016f0), Item(3277, 0.04978189f0), Item(819, 0.054532804f0), Item(4815, 0.05589216f0), Item(9811, 0.05666452f0), Item(6470, 0.060974818f0), Item(1865, 0.06251427f0), Item(4291, 0.0637032f0), Item(2545, 0.06661026f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.090909090909091, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.90625,"f1":0.942144834332335,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.25,"distances_sum":588.921296313405}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.942144834332335,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.25,"distances_sum":588.921296313405}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.942144834332335,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.25,"distances_sum":588.921296313405}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.090909090909091,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.942144834332335,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.25,"distances_sum":588.921296313405}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.238435982622029, conf: {"bsize":2}, perf: {"precision":0.9531249999999992,"recall":0.9531249999999992,"f1":0.9531249999999992,"seconds":1.657940447330475e-5,"exhaustive_search_seconds":7.743015885353088e-6,"evaluations":30.5703125,"distances_sum":292.0844662450254}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.9690721649484537, conf: {"bsize":3}, perf: {"precision":0.9904513888888887,"recall":0.9904513888888887,"f1":0.9904513888888887,"seconds":1.8633902072906494e-5,"exhaustive_search_seconds":7.743015885353088e-6,"evaluations":33.34375,"distances_sum":289.7291169129312}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.238435982622029,"state":{"bsize":2},"perf":{"precision":0.9531249999999992,"recall":0.9531249999999992,"f1":0.9531249999999992,"seconds":1.657940447330475e-5,"exhaustive_search_seconds":7.743015885353088e-6,"evaluations":30.5703125,"distances_sum":292.0844662450254}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.238435982622029,"state":{"bsize":2},"perf":{"precision":0.9531249999999992,"recall":0.9531249999999992,"f1":0.9531249999999992,"seconds":1.657940447330475e-5,"exhaustive_search_seconds":7.743015885353088e-6,"evaluations":30.5703125,"distances_sum":292.0844662450254}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.238435982622029,"state":{"bsize":2},"perf":{"precision":0.9531249999999992,"recall":0.9531249999999992,"f1":0.9531249999999992,"seconds":1.657940447330475e-5,"exhaustive_search_seconds":7.743015885353088e-6,"evaluations":30.5703125,"distances_sum":292.0844662450254}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.74374754484745,"state":{"bsize":2},"perf":{"precision":0.9383680555555547,"recall":0.9383680555555547,"f1":0.9383680555555547,"seconds":3.313086926937103e-5,"exhaustive_search_seconds":3.4827739000320435e-5,"evaluations":59.6640625,"distances_sum":124.66539593599737}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.74374754484745,"state":{"bsize":2},"perf":{"precision":0.9383680555555547,"recall":0.9383680555555547,"f1":0.9383680555555547,"seconds":3.313086926937103e-5,"exhaustive_search_seconds":3.4827739000320435e-5,"evaluations":59.6640625,"distances_sum":124.66539593599737}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 91.62323868866387, conf: {"bsize":9}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.586872041225433e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":110.3359375,"distances_sum":54.18648319179192}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.55319148936171, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.398558616638184e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":105.75,"distances_sum":54.18648319179192}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.55319148936171,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.398558616638184e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":105.75,"distances_sum":54.18648319179192}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.47720999627005, conf: {"bsize":8}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.40978866815567e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":104.7265625,"distances_sum":54.18648319179192}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.47720999627005,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.40978866815567e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":104.7265625,"distances_sum":54.18648319179192}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.89634717452388, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":5.9684738516807556e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":100.09375,"distances_sum":54.187346706632525}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.89634717452388,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":5.9684738516807556e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":100.09375,"distances_sum":54.187346706632525}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.89634717452388,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":5.9684738516807556e-5,"exhaustive_search_seconds":0.0004128608852624893,"evaluations":100.09375,"distances_sum":54.187346706632525}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(6), SatNeighborhood(32), 2020-07-10T03:14:53.268
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1762, 0.026196498f0), Item(9389, 0.030289054f0), Item(5049, 0.039006487f0), Item(8612, 0.039722793f0), Item(2121, 0.051245753f0), Item(1065, 0.058842767f0), Item(9581, 0.058867633f0), Item(9547, 0.061698854f0), Item(1343, 0.06484598f0), Item(2419, 0.06500337f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
