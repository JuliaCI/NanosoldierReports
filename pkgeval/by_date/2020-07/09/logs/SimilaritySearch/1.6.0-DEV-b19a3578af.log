Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_rRMmjz/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_rRMmjz/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(50, 0.041245222f0), Item(36, 0.045692205f0), Item(44, 0.049813747f0), Item(29, 0.072538614f0)])
Vsorted = Item[Item(50, 0.041245222f0), Item(36, 0.045692205f0), Item(44, 0.049813747f0), Item(29, 0.072538614f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0041218757629394535, 0.004752167065938314, 301.0, 49.45057917945087))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003962087631225586, 0.0051448980967203775, 301.0, 71.97934925556183))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004148109753926595, 0.004384469985961914, 301.0, 40.57238173484802))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0040235757827758786, 0.003941734631856282, 301.0, 8.949552328733262))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003646524747212728, 0.005326461791992187, 301.0, 44.8882423825562))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018446445465087892, 0.00014663537343343098, 301.0, 177.06829892843962))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.8881441752115886e-5, 0.012038596471150716, 300.0, 27.569998055696487)
p = PerformanceResult(1.0, 1.0, 1.0, 5.557537078857422e-5, 2.693335215250651e-5, 300.0, 27.569998055696487)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003917050361633301, 0.00381926695505778, 300.0, 1.5162252879599691)
p = PerformanceResult(1.0, 1.0, 1.0, 5.004141065809462e-5, 1.903374989827474e-5, 300.0, 1.5162252879599691)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.8881441752115886e-5, 0.012038596471150716, 300.0, 27.569998055696487), PerformanceResult(1.0, 1.0, 1.0, 5.557537078857422e-5, 2.693335215250651e-5, 300.0, 27.569998055696487), PerformanceResult(1.0, 1.0, 1.0, 0.003917050361633301, 0.00381926695505778, 300.0, 1.5162252879599691), PerformanceResult(1.0, 1.0, 1.0, 5.004141065809462e-5, 1.903374989827474e-5, 300.0, 1.5162252879599691))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 117.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008422533671061197, 0.003874699274698893, 347.8, 28592.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007545344034830729, 0.003519598642985026, 304.2, 6908.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.372264862060547e-5, 1.2199083964029947e-5, 94.63333333333334, 49.45057917945087))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1409988403320312e-5, 1.1499722798665365e-5, 84.1, 71.97934925556183))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.418359120686849e-5, 1.3701121012369792e-5, 91.06666666666666, 40.57238173484802))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.034706115722656e-5, 0.0001544952392578125, 96.46666666666667, 44.8882423825562))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8133333333333334, 0.8133333333333334, 0.8133333333333334, 4.564921061197917e-5, 0.00013113816579182942, 69.46666666666667, 186.19446485489607))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-10T05:03:32.968
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8910000000000001, 0.8910000000000001, 0.8910000000000001, 2.347230911254883e-5, 2.572059631347656e-5, 152.29, 52.32844580383971))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.716064453125e-5, 1.8908977508544922e-5, 155.9, 0.0))
*** advance 1 from 1000; 2020-07-10T05:03:33.676
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9020000000000001, 0.9020000000000001, 0.9020000000000001, 2.926349639892578e-5, 2.7370452880859374e-5, 152.55, 76.55168546270579))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8278827667236328e-5, 2.479076385498047e-5, 156.18, 0.0))
*** advance 1 from 1000; 2020-07-10T05:03:34.472
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8733333333333335, 0.8730000000000002, 0.8731578947368424, 3.1545162200927735e-5, 5.306005477905274e-5, 153.26, 43.09135138988495))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 3.2863616943359376e-5, 4.678964614868164e-5, 157.01, 0.0))
*** advance 1 from 1000; 2020-07-10T05:03:35.199
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8850000000000001, 0.8850000000000001, 0.8850000000000001, 0.00010082006454467774, 0.0004996991157531738, 152.03, 47.57169675268233))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.571552276611328e-5, 0.0008561491966247558, 155.55, 0.0))
*** advance 1 from 1000; 2020-07-10T05:03:35.798
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9590000000000003, 0.9590000000000003, 0.9590000000000003, 0.00010627985000610351, 0.0004703378677368164, 166.13, 193.19360195705667))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010643482208251954, 0.0006117796897888183, 171.65, 0.0))
*** advance 1 from 1000; 2020-07-10T05:03:36.906
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8910000000000001, 0.8910000000000001, 0.8910000000000001, 3.323078155517578e-5, 6.433963775634766e-5, 152.29, 52.340353740146384))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.206014633178711e-5, 6.0291290283203124e-5, 155.9, 0.013758501794654876))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:38.841
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7580000000000001, 0.7580000000000001, 0.7580000000000001, 0.0014725732803344727, 7.679939270019531e-5, 201.74, 191.250001847744))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:39.964
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.775, 0.775, 0.775, 0.0015195059776306153, 7.804155349731445e-5, 207.55, 108.87778004258871))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:40.897
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6840000000000002, 0.6840000000000002, 0.6840000000000002, 0.0014870977401733399, 9.891033172607422e-5, 286.68, 4.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:41.939
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9300000000000002, 0.9300000000000002, 0.9300000000000002, 0.001487264633178711, 1.6379356384277344e-5, 222.69, 609.8000201582909))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:42.958
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.589, 0.589, 0.589, 0.0017506909370422364, 0.00041675806045532226, 255.91, 2333.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:44.006
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3939999999999999, 0.3939999999999999, NaN, 0.0016150617599487306, 0.0005212497711181641, 251.07, 3670.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-10T05:03:45.053
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.602, 0.602, 0.602, 0.0015361762046813964, 2.8967857360839844e-5, 249.01, 2357.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0406504065040654, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.976041666666667,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6484375,"distances_sum":561.1161190122366}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0676552363299354, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599988553113559,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.4296875,"distances_sum":541.2652940005064}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0676552363299354,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599988553113559,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.4296875,"distances_sum":541.2652940005064}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0796626054358014, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9525583791208795,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3359375,"distances_sum":530.6389535218477}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0796626054358014,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9525583791208795,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3359375,"distances_sum":530.6389535218477}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0796626054358014,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9525583791208795,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3359375,"distances_sum":530.6389535218477}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0796626054358014,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9525583791208795,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3359375,"distances_sum":530.6389535218477}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.72572518044396, conf: {"restarts":13}, perf: {"precision":0.9062499999999988,"recall":0.9062499999999988,"f1":0.9062499999999988,"seconds":1.772865653038025e-5,"exhaustive_search_seconds":4.405155777931213e-6,"evaluations":57.3671875,"distances_sum":283.91729974746704}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8941704035874443, conf: {"restarts":10}, perf: {"precision":0.917534722222221,"recall":0.917534722222221,"f1":0.917534722222221,"seconds":1.603737473487854e-5,"exhaustive_search_seconds":4.405155777931213e-6,"evaluations":52.265625,"distances_sum":283.53735887259245}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8941704035874443,"state":{"restarts":10},"perf":{"precision":0.917534722222221,"recall":0.917534722222221,"f1":0.917534722222221,"seconds":1.603737473487854e-5,"exhaustive_search_seconds":4.405155777931213e-6,"evaluations":52.265625,"distances_sum":283.53735887259245}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8941704035874443,"state":{"restarts":10},"perf":{"precision":0.917534722222221,"recall":0.917534722222221,"f1":0.917534722222221,"seconds":1.603737473487854e-5,"exhaustive_search_seconds":4.405155777931213e-6,"evaluations":52.265625,"distances_sum":283.53735887259245}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8941704035874443,"state":{"restarts":10},"perf":{"precision":0.917534722222221,"recall":0.917534722222221,"f1":0.917534722222221,"seconds":1.603737473487854e-5,"exhaustive_search_seconds":4.405155777931213e-6,"evaluations":52.265625,"distances_sum":283.53735887259245}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999986, conf: {"restarts":2}, perf: {"precision":0.8671874999999986,"recall":0.8671874999999986,"f1":0.8671874999999986,"seconds":3.5760924220085144e-5,"exhaustive_search_seconds":2.9241666197776794e-5,"evaluations":73.4609375,"distances_sum":123.67258096579462}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8671874999999986,"state":{"restarts":2},"perf":{"precision":0.8671874999999986,"recall":0.8671874999999986,"f1":0.8671874999999986,"seconds":3.5760924220085144e-5,"exhaustive_search_seconds":2.9241666197776794e-5,"evaluations":73.4609375,"distances_sum":123.67258096579462}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8671874999999986,"state":{"restarts":2},"perf":{"precision":0.8671874999999986,"recall":0.8671874999999986,"f1":0.8671874999999986,"seconds":3.5760924220085144e-5,"exhaustive_search_seconds":2.9241666197776794e-5,"evaluations":73.4609375,"distances_sum":123.67258096579462}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999988, conf: {"restarts":5}, perf: {"precision":0.8515624999999988,"recall":0.8515624999999988,"f1":0.8515624999999988,"seconds":7.718987762928009e-5,"exhaustive_search_seconds":0.0004071798175573349,"evaluations":162.7578125,"distances_sum":57.80938839633018}, best_list's length: 2, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999988,"state":{"restarts":5},"perf":{"precision":0.8515624999999988,"recall":0.8515624999999988,"f1":0.8515624999999988,"seconds":7.718987762928009e-5,"exhaustive_search_seconds":0.0004071798175573349,"evaluations":162.7578125,"distances_sum":57.80938839633018}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8515624999999988,"state":{"restarts":5},"perf":{"precision":0.8515624999999988,"recall":0.8515624999999988,"f1":0.8515624999999988,"seconds":7.718987762928009e-5,"exhaustive_search_seconds":0.0004071798175573349,"evaluations":162.7578125,"distances_sum":57.80938839633018}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(5), SatNeighborhood(32), 2020-07-10T05:03:52.154
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9947, 0.048939284f0), Item(2202, 0.057006128f0), Item(882, 0.058308724f0), Item(3608, 0.06238967f0), Item(9141, 0.064307205f0), Item(757, 0.067849316f0), Item(5324, 0.07106711f0), Item(7272, 0.0763609f0), Item(4605, 0.086878225f0), Item(5251, 0.0878878f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8876299048174054,"seconds":0.004623472690582275,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":7.609375,"distances_sum":478.4118628874421}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.826171875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8876299048174054,"seconds":0.004623472690582275,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":7.609375,"distances_sum":478.4118628874421}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.240092048069547,"state":{"bsize":3},"perf":{"precision":0.9782986111111107,"recall":0.9782986111111107,"f1":0.9782986111111107,"seconds":1.6363337635993958e-5,"exhaustive_search_seconds":6.625428795814514e-6,"evaluations":30.5546875,"distances_sum":288.6296137366444}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.240092048069547,"state":{"bsize":3},"perf":{"precision":0.9782986111111107,"recall":0.9782986111111107,"f1":0.9782986111111107,"seconds":1.6363337635993958e-5,"exhaustive_search_seconds":6.625428795814514e-6,"evaluations":30.5546875,"distances_sum":288.6296137366444}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.5959766385464,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":2.925470471382141e-5,"exhaustive_search_seconds":2.8617680072784424e-5,"evaluations":60.1953125,"distances_sum":120.11575942486525}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.5959766385464,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":2.925470471382141e-5,"exhaustive_search_seconds":2.8617680072784424e-5,"evaluations":60.1953125,"distances_sum":120.11575942486525}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.47692307692307, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.066581070423126e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":102.578125,"distances_sum":53.51764821028337}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.47692307692307,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.066581070423126e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":102.578125,"distances_sum":53.51764821028337}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 103.83400289249558, conf: {"bsize":5}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.7773664593696594e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":97.234375,"distances_sum":53.543192551936954}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.6552207428171, conf: {"bsize":4}, perf: {"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":5.571544170379639e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":100.3359375,"distances_sum":53.568454885389656}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":103.83400289249558,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.7773664593696594e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":97.234375,"distances_sum":53.543192551936954}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":103.83400289249558,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.7773664593696594e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":97.234375,"distances_sum":53.543192551936954}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":103.83400289249558,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.7773664593696594e-5,"exhaustive_search_seconds":0.00040624290704727173,"evaluations":97.234375,"distances_sum":53.543192551936954}}, n: 9999
added n=10000, neighborhood=6, BeamSearch(5), SatNeighborhood(32), 2020-07-10T05:03:56.393
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4264, 0.017781995f0), Item(573, 0.024058307f0), Item(2889, 0.036366634f0), Item(382, 0.042743288f0), Item(862, 0.043632932f0), Item(2783, 0.044396944f0), Item(270, 0.056379262f0), Item(9744, 0.058068287f0), Item(3607, 0.05866121f0), Item(807, 0.062823996f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
