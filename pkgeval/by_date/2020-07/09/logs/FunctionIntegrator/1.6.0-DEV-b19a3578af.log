Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_9r5lYH/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_9r5lYH/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.011116 seconds (1.22 M allocations: 63.859 MiB, 4.24% gc time)
Running: chebyshev_quadrature with k=1
  1.904993 seconds (2.08 M allocations: 117.882 MiB, 1.86% gc time)
Running: chebyshev_quadrature with k=2
  0.369046 seconds (338.12 k allocations: 21.341 MiB, 6.74% gc time)
Running: chebyshev_quadrature with k=3
  0.385242 seconds (482.66 k allocations: 27.744 MiB)
Running: chebyshev_quadrature with k=4
  0.367360 seconds (442.95 k allocations: 24.686 MiB)
Running: jacobi_quadrature with α=β=1
 48.948274 seconds (42.40 M allocations: 3.215 GiB, 8.89% gc time)
Running: laguerre_quadrature with k=1
  3.208743 seconds (3.32 M allocations: 181.501 MiB, 2.20% gc time)
Running: legendre_quadrature
  0.269123 seconds (186.54 k allocations: 10.375 MiB)
Running: lobatto_quadrature
  0.381759 seconds (308.01 k allocations: 18.043 MiB, 7.26% gc time)
Running: radau_quadrature
  0.293986 seconds (291.09 k allocations: 17.092 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 77.935585 seconds (19.93 k allocations: 1.171 MiB)
Running: rectangle_rule_midpoint.
  0.173476 seconds (25.45 k allocations: 1.554 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.641138 seconds (18.15 k allocations: 1.073 MiB)
Running: simpsons_rule
  0.049830 seconds (43.81 k allocations: 1.987 MiB)
Running: simpsons38_rule
  0.104504 seconds (105.91 k allocations: 5.588 MiB)
Running: trapezoidal_rule
  0.353410 seconds (1.30 M allocations: 22.377 MiB, 18.02% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.110911 seconds (45.53 k allocations: 2.659 MiB)
Running: chebyshev_quadrature with k=1
  0.571655 seconds (279.97 k allocations: 13.921 MiB, 22.33% gc time)
Running: chebyshev_quadrature with k=2
  0.167260 seconds (115.76 k allocations: 3.761 MiB)
Running: chebyshev_quadrature with k=3
  0.173658 seconds (105.75 k allocations: 3.632 MiB)
Running: chebyshev_quadrature with k=4
  0.175355 seconds (88.37 k allocations: 3.280 MiB)
Running: jacobi_quadrature with α=β=1
  2.605012 seconds (475.43 k allocations: 160.010 MiB, 0.70% gc time)
Running: legendre_quadrature
  0.164919 seconds (61.51 k allocations: 3.367 MiB)
Running: lobatto_quadrature
  0.020876 seconds (15.59 k allocations: 967.675 KiB)
Running: radau_quadrature
  0.020276 seconds (15.57 k allocations: 967.378 KiB)
Running: rectangle_rule_left
 30.463977 seconds (471.41 M allocations: 7.025 GiB, 3.72% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.533643 seconds (476.96 M allocations: 7.107 GiB, 3.70% gc time)
Running: simpsons_rule
  0.000042 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.069418 seconds (18.85 k allocations: 1.120 MiB)
Running: trapezoidal_rule
  0.059797 seconds (17.27 k allocations: 1.025 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000196 seconds (1.38 k allocations: 21.906 KiB)
Running: chebyshev_quadrature with k=1
  0.089597 seconds (2.56 k allocations: 119.547 KiB)
Running: chebyshev_quadrature with k=2
  0.097442 seconds (2.83 k allocations: 128.422 KiB)
Running: chebyshev_quadrature with k=3
  0.115748 seconds (4.05 k allocations: 171.469 KiB)
Running: chebyshev_quadrature with k=4
  0.125422 seconds (4.05 k allocations: 171.469 KiB)
Running: jacobi_quadrature with α=β=1
  0.196159 seconds (31.29 k allocations: 1.813 MiB)
Running: legendre_quadrature
  0.065146 seconds (1.31 k allocations: 67.188 KiB)
Running: lobatto_quadrature
  0.000136 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000594 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000412 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000585 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000680 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063432 seconds (74.11 k allocations: 4.212 MiB)
Running: chebyshev_quadrature with k=1
  0.206362 seconds (205.32 k allocations: 11.226 MiB)
Running: chebyshev_quadrature with k=2
  0.287489 seconds (263.66 k allocations: 14.502 MiB, 8.63% gc time)
Running: chebyshev_quadrature with k=3
  0.289314 seconds (252.05 k allocations: 13.306 MiB)
Running: chebyshev_quadrature with k=4
  0.234933 seconds (252.05 k allocations: 13.205 MiB)
Running: jacobi_quadrature with α=β=1
  3.223701 seconds (423.62 k allocations: 161.521 MiB, 7.61% gc time)
Running: legendre_quadrature
  0.181619 seconds (165.81 k allocations: 9.246 MiB)
Running: lobatto_quadrature
  0.206589 seconds (176.94 k allocations: 9.971 MiB)
Running: radau_quadrature
  0.351442 seconds (176.93 k allocations: 9.952 MiB, 41.45% gc time)
Running: rectangle_rule_left
  1.127288 seconds (19.22 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.030225 seconds (25.02 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  1.080806 seconds (17.72 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.032450 seconds (28.04 k allocations: 1.710 MiB)
Running: simpsons38_rule
  0.040389 seconds (43.02 k allocations: 2.640 MiB)
Running: trapezoidal_rule
  0.030285 seconds (44.30 k allocations: 1.744 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046474 seconds (236.12 k allocations: 5.048 MiB)
Running: chebyshev_quadrature with k=1
  0.226665 seconds (210.78 k allocations: 11.262 MiB)
Running: chebyshev_quadrature with k=2
  0.383414 seconds (270.08 k allocations: 14.483 MiB, 32.88% gc time)
Running: chebyshev_quadrature with k=3
  0.241247 seconds (257.79 k allocations: 13.253 MiB)
Running: chebyshev_quadrature with k=4
  0.237354 seconds (257.80 k allocations: 13.262 MiB)
Running: hermite_quadrature with k=2
 19.575271 seconds (22.78 M allocations: 1.155 GiB, 6.59% gc time)
Running: jacobi_quadrature with α=β=1
  0.436237 seconds (432.04 k allocations: 47.707 MiB, 7.68% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.280385 seconds (255.07 k allocations: 13.707 MiB)
Running: legendre_quadrature
  0.209871 seconds (171.18 k allocations: 9.547 MiB)
Running: lobatto_quadrature
  0.275322 seconds (195.87 k allocations: 35.673 MiB, 10.86% gc time)
Running: radau_quadrature
  0.336810 seconds (192.46 k allocations: 28.382 MiB, 5.46% gc time)
Running: rectangle_rule_left
  0.034335 seconds (22.35 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.032608 seconds (26.97 k allocations: 1.627 MiB)
Running: rectangle_rule_right
  0.028806 seconds (18.94 k allocations: 1.113 MiB)
Running: simpsons_rule
  0.042761 seconds (40.22 k allocations: 2.058 MiB)
Running: simpsons38_rule
  0.051421 seconds (58.34 k allocations: 3.042 MiB)
Running: trapezoidal_rule
  0.034756 seconds (30.63 k allocations: 1.683 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.047328 seconds (46.67 k allocations: 2.056 MiB)
Running: chebyshev_quadrature with k=1
  0.236985 seconds (207.08 k allocations: 11.078 MiB)
Running: chebyshev_quadrature with k=2
  0.286415 seconds (265.66 k allocations: 14.255 MiB)
Running: chebyshev_quadrature with k=3
  0.267816 seconds (253.86 k allocations: 13.084 MiB, 10.60% gc time)
Running: chebyshev_quadrature with k=4
  0.322074 seconds (253.86 k allocations: 13.084 MiB)
Running: hermite_quadrature with k=2
  0.202913 seconds (164.78 k allocations: 9.211 MiB)
Running: jacobi_quadrature with α=β=1
 10.444795 seconds (425.85 k allocations: 1.173 GiB, 11.16% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.287163 seconds (250.92 k allocations: 13.543 MiB)
Running: legendre_quadrature
  0.221684 seconds (167.58 k allocations: 9.358 MiB)
Running: lobatto_quadrature
  0.283907 seconds (187.46 k allocations: 21.413 MiB)
Running: radau_quadrature
  0.299886 seconds (186.60 k allocations: 19.340 MiB, 14.61% gc time)
Running: rectangle_rule_left
  0.029524 seconds (19.95 k allocations: 1.181 MiB)
Running: rectangle_rule_midpoint
  0.030601 seconds (25.77 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  0.025856 seconds (17.73 k allocations: 1.055 MiB)
Running: simpsons_rule
  0.035677 seconds (32.53 k allocations: 1.839 MiB)
Running: simpsons38_rule
  0.052206 seconds (48.94 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.031379 seconds (25.37 k allocations: 1.512 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037161 seconds (31.12 k allocations: 1.851 MiB)
Running: chebyshev_quadrature with k=1
  0.247855 seconds (205.81 k allocations: 11.306 MiB)
Running: chebyshev_quadrature with k=2
  0.298706 seconds (264.20 k allocations: 14.599 MiB)
Running: chebyshev_quadrature with k=3
  0.279686 seconds (252.58 k allocations: 13.306 MiB)
Running: chebyshev_quadrature with k=4
  0.275982 seconds (252.59 k allocations: 13.139 MiB)
Running: jacobi_quadrature with α=β=1
  3.388117 seconds (424.20 k allocations: 192.581 MiB, 19.59% gc time)
Running: legendre_quadrature
  0.234018 seconds (166.30 k allocations: 9.270 MiB)
Running: lobatto_quadrature
  0.233426 seconds (177.43 k allocations: 9.962 MiB)
Running: radau_quadrature
  0.244768 seconds (177.43 k allocations: 9.970 MiB)
Running: rectangle_rule_left
  0.311986 seconds (19.78 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.029136 seconds (25.37 k allocations: 1.550 MiB)
Running: rectangle_rule_right
  0.121041 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.036275 seconds (28.78 k allocations: 1.742 MiB)
Running: simpsons38_rule
  0.068900 seconds (43.78 k allocations: 2.674 MiB, 41.55% gc time)
Running: trapezoidal_rule
  0.027612 seconds (45.28 k allocations: 1.779 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037671 seconds (31.75 k allocations: 1.804 MiB)
Running: chebyshev_quadrature with k=1
  0.250854 seconds (206.19 k allocations: 11.242 MiB)
Running: chebyshev_quadrature with k=2
  0.351995 seconds (264.65 k allocations: 14.517 MiB)
Running: chebyshev_quadrature with k=3
  0.285952 seconds (252.94 k allocations: 13.243 MiB, 6.63% gc time)
Running: chebyshev_quadrature with k=4
  0.309519 seconds (252.94 k allocations: 13.292 MiB)
Running: jacobi_quadrature with α=β=1
  2.512763 seconds (424.73 k allocations: 147.267 MiB, 10.64% gc time)
Running: legendre_quadrature
  0.256536 seconds (166.69 k allocations: 9.286 MiB)
Running: lobatto_quadrature
  0.299823 seconds (177.82 k allocations: 9.979 MiB, 9.64% gc time)
Running: radau_quadrature
  0.251521 seconds (177.81 k allocations: 9.974 MiB)
Running: rectangle_rule_left
  0.977585 seconds (20.06 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.033204 seconds (25.38 k allocations: 1.551 MiB)
Running: rectangle_rule_right
  0.941572 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.040505 seconds (29.53 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.047796 seconds (44.53 k allocations: 2.702 MiB)
Running: trapezoidal_rule
  0.040397 seconds (57.55 k allocations: 1.981 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179633 seconds (149.07 k allocations: 8.698 MiB)
Running: chebyshev_quadrature with k=1
  0.185689 seconds (91.30 k allocations: 3.265 MiB, 17.90% gc time)
Running: chebyshev_quadrature with k=2
  0.160225 seconds (127.05 k allocations: 3.955 MiB)
Running: chebyshev_quadrature with k=3
  0.186831 seconds (116.27 k allocations: 3.813 MiB)
Running: chebyshev_quadrature with k=4
  0.167899 seconds (95.81 k allocations: 3.408 MiB)
Running: jacobi_quadrature with α=β=1
  2.213008 seconds (454.46 k allocations: 166.202 MiB, 9.50% gc time)
Running: legendre_quadrature
  0.114114 seconds (38.39 k allocations: 2.080 MiB)
Running: lobatto_quadrature
  0.000136 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000048 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 46.017021 seconds (590.00 M allocations: 8.792 GiB, 3.90% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 46.037521 seconds (592.75 M allocations: 8.833 GiB, 3.61% gc time)
Running: simpsons_rule
  0.000082 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.029455 seconds (462 allocations: 22.562 KiB)
Running: trapezoidal_rule
  0.022678 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.464014 seconds (565.29 M allocations: 8.433 GiB, 5.46% gc time)
Running: chebyshev_quadrature with k=1
  0.538907 seconds (406.25 k allocations: 21.886 MiB)
Running: chebyshev_quadrature with k=2
 12.249279 seconds (467.39 k allocations: 4.040 GiB, 4.94% gc time)
Running: chebyshev_quadrature with k=3
  5.526812 seconds (264.01 k allocations: 1.642 GiB, 5.09% gc time)
Running: chebyshev_quadrature with k=4
  7.419182 seconds (264.01 k allocations: 2.260 GiB, 2.55% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 67.789768 seconds (458.62 k allocations: 13.252 GiB, 3.52% gc time)
Running: legendre_quadrature.
  6.411657 seconds (201.56 k allocations: 1.974 GiB, 2.07% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.616916 seconds (8.21 M allocations: 13.382 GiB, 4.13% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.252181 seconds (7.21 M allocations: 13.367 GiB, 3.50% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.660075 seconds (22.70 k allocations: 1.337 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.702861 seconds (30.95 k allocations: 1.862 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.805408 seconds (22.91 k allocations: 1.348 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.840631 seconds (600.04 M allocations: 8.943 GiB, 9.15% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.148924 seconds (600.05 M allocations: 8.943 GiB, 8.57% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.481631 seconds (600.03 M allocations: 8.943 GiB, 8.48% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060579 seconds (128.26 k allocations: 3.604 MiB)
Running: chebyshev_quadrature with k=1
  0.297519 seconds (217.70 k allocations: 11.521 MiB)
Running: chebyshev_quadrature with k=2
  0.268489 seconds (248.37 k allocations: 13.012 MiB)
Running: chebyshev_quadrature with k=3
  0.248604 seconds (233.62 k allocations: 11.691 MiB)
Running: chebyshev_quadrature with k=4
  0.239732 seconds (233.62 k allocations: 11.690 MiB)
Running: jacobi_quadrature with α=β=1
  0.407183 seconds (361.23 k allocations: 33.253 MiB)
Running: laguerre_quadrature with k=2
  0.245241 seconds (161.82 k allocations: 9.121 MiB)
Running: legendre_quadrature
  0.145053 seconds (121.21 k allocations: 6.506 MiB)
Running: lobatto_quadrature
  0.040526 seconds (10.00 k allocations: 15.076 MiB)
Running: radau_quadrature
  0.033813 seconds (8.77 k allocations: 13.150 MiB)
Running: rectangle_rule_left
  0.057136 seconds (19.32 k allocations: 1.119 MiB)
Running: rectangle_rule_midpoint
  0.049755 seconds (25.88 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  0.049272 seconds (17.84 k allocations: 1.043 MiB)
Running: simpsons_rule
  0.002170 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.061061 seconds (79.93 k allocations: 3.372 MiB)
Running: trapezoidal_rule
  0.219664 seconds (2.39 M allocations: 37.680 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000916 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.129672 seconds (2.75 k allocations: 1.702 MiB)
Running: chebyshev_quadrature with k=2
  0.132556 seconds (3.02 k allocations: 2.367 MiB)
Running: chebyshev_quadrature with k=3
  0.146170 seconds (4.25 k allocations: 2.097 MiB)
Running: chebyshev_quadrature with k=4
  0.124237 seconds (4.25 k allocations: 1.538 MiB)
Running: jacobi_quadrature with α=β=1
  7.430037 seconds (358.26 k allocations: 903.927 MiB, 3.60% gc time)
Running: legendre_quadrature
  0.072672 seconds (1.45 k allocations: 76.844 KiB)
Running: lobatto_quadrature
  0.000289 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000131 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.475976 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000420 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.400680 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000079 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000085 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000816 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000422 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.106429 seconds (2.63 k allocations: 582.531 KiB)
Running: chebyshev_quadrature with k=2
  0.104457 seconds (2.90 k allocations: 784.469 KiB)
Running: chebyshev_quadrature with k=3
  0.120995 seconds (4.12 k allocations: 723.609 KiB)
Running: chebyshev_quadrature with k=4
  0.126463 seconds (4.12 k allocations: 554.109 KiB)
Running: jacobi_quadrature with α=β=1
  3.162602 seconds (348.18 k allocations: 251.400 MiB)
Running: legendre_quadrature
  0.070783 seconds (1.35 k allocations: 69.234 KiB)
Running: lobatto_quadrature
  0.000136 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.823995 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001087 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.871568 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001521 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
