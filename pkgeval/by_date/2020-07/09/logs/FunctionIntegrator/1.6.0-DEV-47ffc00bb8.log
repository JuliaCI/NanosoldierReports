Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_lzngfE/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_lzngfE/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.136005 seconds (1.26 M allocations: 66.439 MiB, 9.45% gc time)
Running: chebyshev_quadrature with k=1
  1.995738 seconds (2.19 M allocations: 124.170 MiB, 1.92% gc time)
Running: chebyshev_quadrature with k=2
  0.341657 seconds (377.91 k allocations: 23.512 MiB, 3.84% gc time)
Running: chebyshev_quadrature with k=3
  0.443769 seconds (534.68 k allocations: 30.602 MiB)
Running: chebyshev_quadrature with k=4
  0.388020 seconds (493.27 k allocations: 27.444 MiB)
Running: jacobi_quadrature with α=β=1
 47.586479 seconds (41.63 M allocations: 3.195 GiB, 8.91% gc time)
Running: laguerre_quadrature with k=1
  3.159004 seconds (3.32 M allocations: 180.500 MiB, 2.30% gc time)
Running: legendre_quadrature
  0.232528 seconds (215.73 k allocations: 12.104 MiB, 11.89% gc time)
Running: lobatto_quadrature
  0.403786 seconds (337.15 k allocations: 19.768 MiB)
Running: radau_quadrature
  0.320026 seconds (320.23 k allocations: 18.833 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 76.640092 seconds (19.93 k allocations: 1.171 MiB)
Running: rectangle_rule_midpoint.
  0.150900 seconds (25.45 k allocations: 1.554 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.040729 seconds (18.15 k allocations: 1.073 MiB)
Running: simpsons_rule
  0.059384 seconds (43.81 k allocations: 1.987 MiB)
Running: simpsons38_rule
  0.192824 seconds (105.91 k allocations: 5.588 MiB, 42.86% gc time)
Running: trapezoidal_rule
  0.312411 seconds (1.30 M allocations: 22.378 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.124285 seconds (45.54 k allocations: 2.660 MiB)
Running: chebyshev_quadrature with k=1
  0.567394 seconds (279.84 k allocations: 13.909 MiB, 6.41% gc time)
Running: chebyshev_quadrature with k=2
  0.191642 seconds (115.56 k allocations: 3.746 MiB)
Running: chebyshev_quadrature with k=3
  0.237260 seconds (105.55 k allocations: 3.617 MiB)
Running: chebyshev_quadrature with k=4
  0.253505 seconds (88.17 k allocations: 3.264 MiB)
Running: jacobi_quadrature with α=β=1
  2.272422 seconds (527.70 k allocations: 162.723 MiB, 2.33% gc time)
Running: legendre_quadrature
  0.181699 seconds (61.27 k allocations: 3.351 MiB)
Running: lobatto_quadrature
  0.025088 seconds (15.59 k allocations: 967.690 KiB)
Running: radau_quadrature
  0.020515 seconds (15.57 k allocations: 967.394 KiB)
Running: rectangle_rule_left
 29.966220 seconds (471.41 M allocations: 7.025 GiB, 4.03% gc time)
Running: rectangle_rule_midpoint
  0.000039 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.897842 seconds (476.96 M allocations: 7.107 GiB, 4.07% gc time)
Running: simpsons_rule
  0.000027 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.063174 seconds (18.85 k allocations: 1.120 MiB)
Running: trapezoidal_rule
  0.060936 seconds (17.28 k allocations: 1.025 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029410 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.096148 seconds (2.58 k allocations: 120.422 KiB)
Running: chebyshev_quadrature with k=2
  0.096267 seconds (2.86 k allocations: 129.391 KiB)
Running: chebyshev_quadrature with k=3
  0.113072 seconds (4.09 k allocations: 172.625 KiB)
Running: chebyshev_quadrature with k=4
  0.112392 seconds (4.09 k allocations: 172.625 KiB)
Running: jacobi_quadrature with α=β=1
  0.423108 seconds (388.13 k allocations: 19.900 MiB, 5.05% gc time)
Running: legendre_quadrature
  0.074518 seconds (1.31 k allocations: 67.438 KiB)
Running: lobatto_quadrature
  0.000106 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000042 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000472 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000331 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000475 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000037 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027143 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023205 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.071255 seconds (74.11 k allocations: 4.210 MiB)
Running: chebyshev_quadrature with k=1
  0.247403 seconds (243.16 k allocations: 13.389 MiB)
Running: chebyshev_quadrature with k=2
  0.318332 seconds (300.92 k allocations: 16.523 MiB)
Running: chebyshev_quadrature with k=3
  0.290986 seconds (296.12 k allocations: 15.708 MiB, 9.03% gc time)
Running: chebyshev_quadrature with k=4
  0.278056 seconds (296.12 k allocations: 15.606 MiB)
Running: jacobi_quadrature with α=β=1
  3.516486 seconds (474.10 k allocations: 164.114 MiB, 11.67% gc time)
Running: legendre_quadrature
  0.210167 seconds (194.27 k allocations: 10.949 MiB)
Running: lobatto_quadrature
  0.214808 seconds (205.40 k allocations: 11.673 MiB)
Running: radau_quadrature
  0.221830 seconds (205.39 k allocations: 11.640 MiB)
Running: rectangle_rule_left
  0.901085 seconds (19.22 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.027545 seconds (25.02 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  0.907989 seconds (17.72 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.033432 seconds (28.04 k allocations: 1.710 MiB)
Running: simpsons38_rule
  0.038987 seconds (43.02 k allocations: 2.641 MiB)
Running: trapezoidal_rule
  0.027704 seconds (44.30 k allocations: 1.744 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.056478 seconds (236.12 k allocations: 5.048 MiB)
Running: chebyshev_quadrature with k=1
  0.231352 seconds (250.34 k allocations: 13.493 MiB)
Running: chebyshev_quadrature with k=2
  0.323433 seconds (308.70 k allocations: 16.532 MiB, 7.21% gc time)
Running: chebyshev_quadrature with k=3
  0.278306 seconds (303.55 k allocations: 15.705 MiB)
Running: chebyshev_quadrature with k=4
  0.301501 seconds (303.56 k allocations: 15.714 MiB)
Running: hermite_quadrature with k=2
 19.392414 seconds (22.87 M allocations: 1.162 GiB, 6.44% gc time)
Running: jacobi_quadrature with α=β=1
  0.515849 seconds (484.15 k allocations: 50.360 MiB, 7.43% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.314748 seconds (289.50 k allocations: 15.636 MiB, 10.43% gc time)
Running: legendre_quadrature
  0.248639 seconds (201.35 k allocations: 11.340 MiB)
Running: lobatto_quadrature
  0.340915 seconds (226.81 k allocations: 37.459 MiB, 10.60% gc time)
Running: radau_quadrature
  0.303596 seconds (223.40 k allocations: 30.125 MiB)
Running: rectangle_rule_left
  0.037362 seconds (22.35 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.033828 seconds (26.97 k allocations: 1.627 MiB)
Running: rectangle_rule_right
  0.026301 seconds (18.94 k allocations: 1.113 MiB)
Running: simpsons_rule
  0.052753 seconds (40.22 k allocations: 2.058 MiB)
Running: simpsons38_rule
  0.048746 seconds (58.34 k allocations: 3.042 MiB)
Running: trapezoidal_rule
  0.037618 seconds (30.63 k allocations: 1.683 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.069225 seconds (46.67 k allocations: 2.056 MiB)
Running: chebyshev_quadrature with k=1
  0.372805 seconds (245.43 k allocations: 13.241 MiB, 8.28% gc time)
Running: chebyshev_quadrature with k=2
  0.527618 seconds (303.33 k allocations: 16.290 MiB)
Running: chebyshev_quadrature with k=3
  0.472449 seconds (298.43 k allocations: 15.491 MiB)
Running: chebyshev_quadrature with k=4
  0.317241 seconds (298.43 k allocations: 15.491 MiB)
Running: hermite_quadrature with k=2
  0.263299 seconds (179.49 k allocations: 10.058 MiB)
Running: jacobi_quadrature with α=β=1
 10.719584 seconds (476.74 k allocations: 1.176 GiB, 16.04% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.272229 seconds (284.38 k allocations: 15.439 MiB)
Running: legendre_quadrature
  0.245198 seconds (196.53 k allocations: 11.076 MiB, 7.13% gc time)
Running: lobatto_quadrature
  0.325150 seconds (217.19 k allocations: 23.164 MiB)
Running: radau_quadrature
  0.276418 seconds (216.34 k allocations: 21.087 MiB, 5.12% gc time)
Running: rectangle_rule_left
  0.025515 seconds (19.95 k allocations: 1.181 MiB)
Running: rectangle_rule_midpoint
  0.029325 seconds (25.77 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  0.021535 seconds (17.73 k allocations: 1.055 MiB)
Running: simpsons_rule
  0.033451 seconds (32.53 k allocations: 1.839 MiB)
Running: simpsons38_rule
  0.042184 seconds (48.94 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.031554 seconds (25.37 k allocations: 1.512 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026834 seconds (31.12 k allocations: 1.851 MiB)
Running: chebyshev_quadrature with k=1
  0.201020 seconds (243.71 k allocations: 13.460 MiB)
Running: chebyshev_quadrature with k=2
  0.327075 seconds (301.52 k allocations: 16.628 MiB, 5.20% gc time)
Running: chebyshev_quadrature with k=3
  0.277001 seconds (296.71 k allocations: 15.699 MiB)
Running: chebyshev_quadrature with k=4
  0.268151 seconds (296.71 k allocations: 15.528 MiB)
Running: jacobi_quadrature with α=β=1
  1.501145 seconds (474.73 k allocations: 195.178 MiB, 2.34% gc time)
Running: legendre_quadrature
  0.216787 seconds (194.82 k allocations: 10.977 MiB)
Running: lobatto_quadrature
  0.251325 seconds (205.94 k allocations: 11.667 MiB)
Running: radau_quadrature
  0.333826 seconds (205.94 k allocations: 11.671 MiB)
Running: rectangle_rule_left
  0.324024 seconds (19.78 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.023012 seconds (25.37 k allocations: 1.550 MiB)
Running: rectangle_rule_right
  0.106401 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.029097 seconds (28.78 k allocations: 1.742 MiB)
Running: simpsons38_rule
  0.043976 seconds (43.78 k allocations: 2.674 MiB)
Running: trapezoidal_rule
  0.030163 seconds (45.28 k allocations: 1.779 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028331 seconds (31.75 k allocations: 1.804 MiB)
Running: chebyshev_quadrature with k=1
  0.236130 seconds (244.30 k allocations: 13.397 MiB)
Running: chebyshev_quadrature with k=2
  0.323473 seconds (302.12 k allocations: 16.541 MiB, 8.36% gc time)
Running: chebyshev_quadrature with k=3
  0.249026 seconds (297.27 k allocations: 15.621 MiB)
Running: chebyshev_quadrature with k=4
  0.267758 seconds (297.27 k allocations: 15.727 MiB)
Running: jacobi_quadrature with α=β=1
  2.652195 seconds (475.42 k allocations: 149.877 MiB, 6.09% gc time)
Running: legendre_quadrature
  0.228610 seconds (195.41 k allocations: 10.995 MiB)
Running: lobatto_quadrature
  0.253202 seconds (206.54 k allocations: 11.689 MiB)
Running: radau_quadrature
  0.255010 seconds (206.53 k allocations: 11.683 MiB)
Running: rectangle_rule_left
  1.019320 seconds (20.06 k allocations: 1.180 MiB, 1.61% gc time)
Running: rectangle_rule_midpoint
  0.035104 seconds (25.38 k allocations: 1.551 MiB)
Running: rectangle_rule_right
  0.969638 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.031078 seconds (29.53 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.032894 seconds (44.53 k allocations: 2.702 MiB)
Running: trapezoidal_rule
  0.032453 seconds (57.55 k allocations: 1.981 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.159983 seconds (149.05 k allocations: 8.696 MiB)
Running: chebyshev_quadrature with k=1
  0.146814 seconds (91.09 k allocations: 3.250 MiB)
Running: chebyshev_quadrature with k=2
  0.154285 seconds (126.85 k allocations: 3.940 MiB)
Running: chebyshev_quadrature with k=3
  0.162329 seconds (116.06 k allocations: 3.797 MiB)
Running: chebyshev_quadrature with k=4
  0.184493 seconds (95.60 k allocations: 3.393 MiB, 12.25% gc time)
Running: jacobi_quadrature with α=β=1
  2.092755 seconds (503.28 k allocations: 168.700 MiB, 3.98% gc time)
Running: legendre_quadrature
  0.128047 seconds (38.15 k allocations: 2.065 MiB)
Running: lobatto_quadrature
  0.000134 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000048 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 47.863594 seconds (590.00 M allocations: 8.792 GiB, 4.27% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 47.689379 seconds (592.75 M allocations: 8.833 GiB, 4.29% gc time)
Running: simpsons_rule
  0.000060 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.027527 seconds (462 allocations: 22.562 KiB)
Running: trapezoidal_rule
  0.020924 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.758244 seconds (565.29 M allocations: 8.433 GiB, 6.48% gc time)
Running: chebyshev_quadrature with k=1
  0.616837 seconds (447.38 k allocations: 24.165 MiB, 4.85% gc time)
Running: chebyshev_quadrature with k=2
 12.464401 seconds (507.47 k allocations: 4.042 GiB, 4.03% gc time)
Running: chebyshev_quadrature with k=3
  6.365701 seconds (311.27 k allocations: 1.644 GiB, 4.06% gc time)
Running: chebyshev_quadrature with k=4
  7.551755 seconds (311.27 k allocations: 2.263 GiB, 2.35% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.794802 seconds (511.91 k allocations: 13.255 GiB, 2.52% gc time)
Running: legendre_quadrature.
  6.275898 seconds (233.29 k allocations: 1.976 GiB, 1.64% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.455322 seconds (8.24 M allocations: 13.384 GiB, 4.41% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.565917 seconds (7.24 M allocations: 13.369 GiB, 2.90% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.662399 seconds (22.70 k allocations: 1.337 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.641742 seconds (30.95 k allocations: 1.862 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.753452 seconds (22.91 k allocations: 1.348 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.954285 seconds (600.04 M allocations: 8.943 GiB, 8.11% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.481108 seconds (600.05 M allocations: 8.943 GiB, 8.59% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.932579 seconds (600.03 M allocations: 8.943 GiB, 8.84% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063044 seconds (128.26 k allocations: 3.604 MiB)
Running: chebyshev_quadrature with k=1
  0.275946 seconds (261.13 k allocations: 13.895 MiB)
Running: chebyshev_quadrature with k=2
  0.285336 seconds (289.83 k allocations: 15.184 MiB)
Running: chebyshev_quadrature with k=3
  0.262229 seconds (281.50 k allocations: 14.200 MiB)
Running: chebyshev_quadrature with k=4
  0.269031 seconds (281.51 k allocations: 14.267 MiB)
Running: jacobi_quadrature with α=β=1
  0.429518 seconds (414.31 k allocations: 35.895 MiB)
Running: laguerre_quadrature with k=2
  0.291355 seconds (189.03 k allocations: 10.737 MiB)
Running: legendre_quadrature
  0.156404 seconds (153.55 k allocations: 8.333 MiB)
Running: lobatto_quadrature
  0.039145 seconds (10.78 k allocations: 15.105 MiB)
Running: radau_quadrature
  0.033459 seconds (9.55 k allocations: 13.179 MiB)
Running: rectangle_rule_left
  0.069352 seconds (19.32 k allocations: 1.119 MiB)
Running: rectangle_rule_midpoint
  0.048266 seconds (25.88 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  0.050298 seconds (17.84 k allocations: 1.043 MiB)
Running: simpsons_rule
  0.002283 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052486 seconds (79.93 k allocations: 3.372 MiB)
Running: trapezoidal_rule
  0.166713 seconds (2.39 M allocations: 37.680 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001170 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.105139 seconds (2.77 k allocations: 1.703 MiB)
Running: chebyshev_quadrature with k=2
  0.115707 seconds (3.05 k allocations: 2.368 MiB)
Running: chebyshev_quadrature with k=3
  0.124156 seconds (4.29 k allocations: 2.098 MiB)
Running: chebyshev_quadrature with k=4
  0.132598 seconds (4.29 k allocations: 1.539 MiB)
Running: jacobi_quadrature with α=β=1
  6.885340 seconds (411.36 k allocations: 906.563 MiB, 3.65% gc time)
Running: legendre_quadrature
  0.068837 seconds (1.45 k allocations: 76.828 KiB)
Running: lobatto_quadrature
  0.000260 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000139 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.434539 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000527 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.484051 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000067 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000071 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000838 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000388 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.098871 seconds (2.66 k allocations: 583.406 KiB)
Running: chebyshev_quadrature with k=2
  0.099476 seconds (2.94 k allocations: 785.438 KiB)
Running: chebyshev_quadrature with k=3
  0.115304 seconds (4.17 k allocations: 724.766 KiB)
Running: chebyshev_quadrature with k=4
  0.114025 seconds (4.17 k allocations: 555.266 KiB)
Running: jacobi_quadrature with α=β=1
  2.811761 seconds (397.53 k allocations: 253.858 MiB, 7.05% gc time)
Running: legendre_quadrature
  0.067331 seconds (1.36 k allocations: 69.547 KiB)
Running: lobatto_quadrature
  0.000152 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000049 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.071688 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001103 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.634981 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001625 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
