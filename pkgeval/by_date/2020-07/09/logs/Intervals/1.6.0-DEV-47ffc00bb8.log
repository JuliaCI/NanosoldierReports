Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed XML2_jll ───── v2.9.10+1
  Installed Mocking ────── v0.7.1
  Installed Zlib_jll ───── v1.2.11+14
  Installed EzXML ──────── v1.1.0
  Installed ExprTools ──── v0.1.1
  Installed RecipesBase ── v1.0.1
  Installed Intervals ──── v1.3.4
  Installed TimeZones ──── v1.2.0
  Installed Libiconv_jll ─ v1.16.0+5
Updating `~/.julia/environments/v1.6/Project.toml`
  [d8418881] + Intervals v1.3.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.3.4
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [78c3b35d] + Mocking v0.7.1
  [3cdcf5f2] + RecipesBase v1.0.1
  [f269a46b] + TimeZones v1.2.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
    Testing Intervals
Status `/tmp/jl_kKBO08/Project.toml`
  [e30172f5] Documenter v0.24.11
  [6218d12a] ImageMagick v1.1.5
  [d8418881] Intervals v1.3.4
  [91a5bcdd] Plots v1.5.4
  [3cdcf5f2] RecipesBase v1.0.1
  [f269a46b] TimeZones v1.2.0
  [34922c18] VisualRegressionTests v1.0.0
  [ade2ca70] Dates
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_kKBO08/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [39de3d68] AxisArrays v0.4.3
  [6e34b625] Bzip2_jll v1.0.6+2
  [aafaddc9] CatIndices v0.2.1
  [35d6a980] ColorSchemes v3.9.0
  [3da002f7] ColorTypes v0.10.6
  [c3611d14] ColorVectorSpace v0.8.5
  [5ae59095] Colors v0.12.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [ed09eef8] ComputationalResources v0.3.2
  [d38c429a] Contour v0.5.4
  [dc8bdbbb] CustomUnitRanges v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.2
  [e30172f5] Documenter v0.24.11
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.3.0
  [b22a6f82] FFMPEG_jll v4.1.0+3
  [4f61f5a4] FFTViews v0.3.1
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [5789e2e9] FileIO v1.3.0
  [53c48c17] FixedPointNumbers v0.7.1
  [d7e528f0] FreeType2_jll v2.10.1+2
  [559328eb] FriBidi_jll v1.0.5+3
  [28b8d3ca] GR v0.50.1
  [5c1252a2] GeometryBasics v0.2.15
  [4d00f742] GeometryTypes v0.8.3
  [a2bd30eb] Graphics v1.0.2
  [cd3eb016] HTTP v0.8.16
  [2803e5a7] ImageAxes v0.6.4
  [a09fc81d] ImageCore v0.8.14
  [6a3955dd] ImageFiltering v0.6.14
  [6218d12a] ImageMagick v1.1.5
  [c73af94c] ImageMagick_jll v6.9.10-12+3
  [bc367c6b] ImageMetadata v0.9.1
  [9b13fd28] IndirectArrays v0.5.1
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.3.4
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [aacddb02] JpegTurbo_jll v2.0.1+1
  [c1c5ebd0] LAME_jll v3.100.0+1
  [dd192d2f] LibVPX_jll v1.8.1+1
  [94ce4f54] Libiconv_jll v1.16.0+5
  [89763e89] Libtiff_jll v4.1.0+0
  [856f044c] MKL_jll v2020.1.216+0
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [e94cdb99] MosaicViews v0.2.2
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.1.1
  [e7412a2a] Ogg_jll v1.3.4+0
  [458c3c95] OpenSSL_jll v1.1.1+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+1
  [bac558e1] OrderedCollections v1.3.0
  [5432bcbf] PaddedViews v0.5.5
  [69de0a69] Parsers v1.0.7
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.5
  [91a5bcdd] Plots v1.5.4
  [dca85d43] QuartzImageIO v0.7.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [01d81517] RecipesPipeline v0.1.11
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [06e1c1a7] TiledIteration v0.2.4
  [f269a46b] TimeZones v1.2.0
  [34922c18] VisualRegressionTests v1.0.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [3161d3a3] Zstd_jll v1.4.5+0
  [0ac62f75] libass_jll v0.14.0+2
  [f638f0a6] libfdk_aac_jll v0.1.6+2
  [b53b4c65] libpng_jll v1.6.37+3
  [f27f6e37] libvorbis_jll v1.3.6+4
  [1270edf5] x264_jll v2019.5.25+2
  [dfaa095f] x265_jll v3.0.0+1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:228
  Expression: sprint(show, AnchoredInterval{Hour(-1)}) == "AnchoredInterval{$(repr(Hour(-1))),T,L,R} $(where_tlr)"
   Evaluated: "HourEnding{T,L,R} where R<:Bounded where L<:Bounded where T" == "AnchoredInterval{Hour(-1),T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:228
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:230
  Expression: sprint(show, AnchoredInterval{Hour(1)}) == "AnchoredInterval{$(repr(Hour(1))),T,L,R} $(where_tlr)"
   Evaluated: "HourBeginning{T,L,R} where R<:Bounded where L<:Bounded where T" == "AnchoredInterval{Hour(1),T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:230
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))" == "AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))" == "AnchoredInterval{Hour(-1),DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourBeginning{DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourBeginning{DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourBeginning{DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))" == "AnchoredInterval{Hour(1),DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourBeginning{DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))" == "AnchoredInterval{Hour(1),DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))" == "AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:406
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))" == "AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:408
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/Intervals/cpG6o/test/anchoredinterval.jl:4
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_closed_closed.png matches.  Difference: 0.005425957028976611
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_closed_closed.png matches.  Difference: 0.005425957028976611
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_open_closed.png matches.  Difference: 0.005384653312996539
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_open_closed.png matches.  Difference: 0.005384653312996539
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_closed_open.png matches.  Difference: 0.0053749982644806385
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_closed_open.png matches.  Difference: 0.0053749982644806385
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_open_open.png matches.  Difference: 0.0052424159367496495
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_open_open.png matches.  Difference: 0.0052424159367496495
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/interval_datetime.png matches.  Difference: 0.008275341877869309
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/HE.png matches.  Difference: 0.008094545646682768
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Reference image references/HB.png matches.  Difference: 0.00823588233765477
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:67-87
│ 
│ ```jldoctest
│ julia> a = Interval('a', 'z')
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│ julia> string(a)
│ "[a .. z]"
│ 
│ julia> using Dates
│ 
│ julia> b = Interval{Closed,Open}(Date(2013), Date(2016))
│ Interval{Date,Closed,Open}(2013-01-01, 2016-01-01)
│ 
│ julia> string(b)
│ "[2013-01-01 .. 2016-01-01)"
│ 
│ julia> c = HourEnding(DateTime(2016, 8, 11))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T00:00:00)
│ 
│ julia> string(c)
│ "(2016-08-10 HE24]"
│ ```
│ 
│ Subexpression:
│ 
│ b = Interval{Closed,Open}(Date(2013), Date(2016))
│ 
│ Evaluated output:
│ 
│ Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│ Expected output:
│ 
│ Interval{Date,Closed,Open}(2013-01-01, 2016-01-01)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Date,Closed,Open}(2013-01-01, 2016-01-01)Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:67-87
│ 
│ ```jldoctest
│ julia> a = Interval('a', 'z')
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│ julia> string(a)
│ "[a .. z]"
│ 
│ julia> using Dates
│ 
│ julia> b = Interval{Closed,Open}(Date(2013), Date(2016))
│ Interval{Date,Closed,Open}(2013-01-01, 2016-01-01)
│ 
│ julia> string(b)
│ "[2013-01-01 .. 2016-01-01)"
│ 
│ julia> c = HourEnding(DateTime(2016, 8, 11))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T00:00:00)
│ 
│ julia> string(c)
│ "(2016-08-10 HE24]"
│ ```
│ 
│ Subexpression:
│ 
│ c = HourEnding(DateTime(2016, 8, 11))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T00:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T00:00:00)HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:91-132
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:91-132
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:91-132
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ he + Hour(1)
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:166-181
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2013-02-13T01:00:00)
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ Interval{DateTime,Closed,Open}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{DateTime,Closed,Open}(2013-02-13T00:00:00, 2013-02-13T01:00:00)Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:166-181
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2013-02-13T01:00:00)
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ Interval{DateTime,Open,Closed}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{DateTime,Open,Closed}(2013-02-13T00:00:00, 2013-02-13T01:00:00)Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/docs/src/index.md:166-181
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(2013-02-13T00:00:00, 2013-02-13T01:00:00)
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2013-02-13T01:00:00)
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ c = HourEnding(DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2013-02-13T01:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,DateTime,Open,Closed}(2013-02-13T01:00:00)HourEnding{DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:30-33
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> HourEnding(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T02:30:00)
│ ```
│ 
│ Subexpression:
│ 
│ HourEnding(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T02:30:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T02:30:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T02:30:00)HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T02:30:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:38-44
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> HE(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T03:00:00)
│ 
│ julia> HB(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{1 hour,DateTime,Closed,Open}(2016-08-11T02:00:00)
│ ```
│ 
│ Subexpression:
│ 
│ HE(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T03:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T03:00:00)HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:38-44
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> HE(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T03:00:00)
│ 
│ julia> HB(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{1 hour,DateTime,Closed,Open}(2016-08-11T02:00:00)
│ ```
│ 
│ Subexpression:
│ 
│ HB(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourBeginning{DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{1 hour,DateTime,Closed,Open}(2016-08-11T02:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{1 hour,DateTime,Closed,Open}(2016-08-11T02:00:00)HourBeginning{DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T12:00:00)
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{1 day,DateTime,Closed,Open}(2016-08-11T00:00:00)
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{5 minutes,DateTime,Closed,Closed}(2016-08-11T12:30:00)
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T12:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T12:00:00)HourEnding{DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T12:00:00)
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{1 day,DateTime,Closed,Open}(2016-08-11T00:00:00)
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{5 minutes,DateTime,Closed,Closed}(2016-08-11T12:30:00)
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ 
│ Evaluated output:
│ 
│ AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{1 day,DateTime,Closed,Open}(2016-08-11T00:00:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{1 day,DateTime,Closed,Open}(2016-08-11T00:00:00)AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/cpG6o/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates)
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{-1 hour,DateTime,Open,Closed}(2016-08-11T12:00:00)
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{1 day,DateTime,Closed,Open}(2016-08-11T00:00:00)
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{5 minutes,DateTime,Closed,Closed}(2016-08-11T12:30:00)
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ 
│ Evaluated output:
│ 
│ AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{5 minutes,DateTime,Closed,Closed}(2016-08-11T12:30:00)
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{5 minutes,DateTime,Closed,Closed}(2016-08-11T12:30:00)AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/PLD7m/src/Builder.jl:204
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/PLD7m/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:240 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:239
│      [7] (::Documenter.var"#all_doctests#30"{Bool,Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:728
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
│      [9] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:687
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:674
│     [13] top-level scope
│        @ ~/.julia/packages/Intervals/cpG6o/test/runtests.jl:18
│     [14] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
│     [15] top-level scope
│        @ ~/.julia/packages/Intervals/cpG6o/test/runtests.jl:11
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:340
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:260
│     [20] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:737
Doctests: Intervals: Test Failed at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
Test Summary:                                                                                                                                                                                                      | Pass  Fail  Total
Intervals                                                                                                                                                                                                          | 8007    19   8026
  Inclusivity                                                                                                                                                                                                      |  126          126
  Endpoint                                                                                                                                                                                                         |  344          344
  Interval                                                                                                                                                                                                         | 2402         2402
  AnchoredInterval                                                                                                                                                                                                 |  432    18    450
    constructor                                                                                                                                                                                                    |   28           28
    zero-span                                                                                                                                                                                                      |    4            4
    infinite                                                                                                                                                                                                       |   10           10
    nan                                                                                                                                                                                                            |    3            3
    non-bounded                                                                                                                                                                                                    |    9            9
    hash                                                                                                                                                                                                           |    1            1
    conversion                                                                                                                                                                                                     |   19           19
    eltype                                                                                                                                                                                                         |    5            5
    accessors                                                                                                                                                                                                      |   27           27
    display                                                                                                                                                                                                        |   90    18    108
    equality                                                                                                                                                                                                       |   50           50
    broadcasting                                                                                                                                                                                                   |    1            1
    sort                                                                                                                                                                                                           |    2            2
    arithmetic                                                                                                                                                                                                     |   26           26
    range                                                                                                                                                                                                          |   24           24
    isempty                                                                                                                                                                                                        |   72           72
    in                                                                                                                                                                                                             |   19           19
    intersect                                                                                                                                                                                                      |   10           10
    canonicalize                                                                                                                                                                                                   |   16           16
    astimezone                                                                                                                                                                                                     |   15           15
    timezone                                                                                                                                                                                                       |    1            1
  comparisons: Interval vs. Interval                                                                                                                                                                               | 1649         1649
  comparisons: Interval vs. AnchoredInterval{Intervals.Direction{:Right}(),T,L,R} where R<:Bounded where L<:Bounded where T                                                                                        |  595          595
  comparisons: Interval vs. AnchoredInterval{Intervals.Direction{:Left}(),T,L,R} where R<:Bounded where L<:Bounded where T                                                                                         |  901          901
  comparisons: AnchoredInterval{Intervals.Direction{:Right}(),T,L,R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Right}(),T,L,R} where R<:Bounded where L<:Bounded where T |  493          493
  comparisons: AnchoredInterval{Intervals.Direction{:Right}(),T,L,R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Left}(),T,L,R} where R<:Bounded where L<:Bounded where T  |  561          561
  comparisons: AnchoredInterval{Intervals.Direction{:Left}(),T,L,R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Left}(),T,L,R} where R<:Bounded where L<:Bounded where T   |  493          493
  plotting                                                                                                                                                                                                         |   11           11
  Doctests: Intervals                                                                                                                                                                                              |          1      1
ERROR: LoadError: Some tests did not pass: 8007 passed, 19 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Intervals/cpG6o/test/runtests.jl:10
ERROR: Package Intervals errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
