Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ExprTools â”€ v0.1.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [e2ba6199] + ExprTools v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e2ba6199] + ExprTools v0.1.1
    Testing ExprTools
Status `/tmp/jl_rZMGtI/Project.toml`
  [e2ba6199] ExprTools v0.1.1
  [8dfed614] Test
Status `/tmp/jl_rZMGtI/Manifest.toml`
  [e2ba6199] ExprTools v0.1.1
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Basics: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Int64)] == Expr[:(x::var"typename(Int64)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:47
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Basics: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Int64), :y] == Any[:(x::var"typename(Int64)"), :y]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:47
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
missing argnames: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(::Int32)] == Expr[:(::var"typename(Int32)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:54
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
missing argnames: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(::Int32), :(::Bool)] == Expr[:(::var"typename(Int32)"), :(::var"typename(Bool)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:54
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
missing argnames: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:x, :(::Int32)] == Any[:x, :(::var"typename(Int32)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:54
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Whereparams with constraints: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::S), :(y::Int64)] == Expr[:(x::S), :(y::var"typename(Int64)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:68
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Arg types with type-parameters: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Array{Int64, 1})] == Expr[:(x::var"typename(Array)"{var"typename(Int64)", 1})]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:78
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Arg types with type-parameters: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Array{T, 1})] == Expr[:(x::var"typename(Array)"{T, 1})]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:78
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Arg types with type-parameters: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::(Array{T, 1} where T <: Real))] == Expr[:(x::(var"typename(Array)"{T, 1} where T <: Real))]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:78
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Arg types with type-parameters: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:90
  Expression: occursin(r"^\QExpr[:(x::(Array{\E(.*?)\Q, 1} where \E\1\Q <: Real))]\E$", string(f16_alt_sig[:args]))
   Evaluated: occursin(r"^\QExpr[:(x::(Array{\E(.*?)\Q, 1} where \E\1\Q <: Real))]\E$", "Expr[:(x::(var\"typename(Array)\"{var\"#s1516\", 1} where var\"#s1516\" <: Real))]")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:90
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:78
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [5] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
vararg: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(xs::(Vararg{Any, N} where N))] == Expr[:(xs::(var"typename(Vararg)"{var"typename(Any)", N} where N))]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:104
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
vararg: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Expr[:(xs::(Vararg{Any, N} where N))] == Expr[:(xs::(var"typename(Vararg)"{var"typename(Any)", N} where N))]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:109
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:104
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
vararg: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(xs::(Vararg{Int64, N} where N))] == Expr[:(xs::(var"typename(Vararg)"{var"typename(Int64)", N} where N))]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:104
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
vararg: Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:x, :(xs::(Vararg{Any, N} where N))] == Any[:x, :(xs::(var"typename(Vararg)"{var"typename(Any)", N} where N))]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:104
 [5] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [6] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:46
Constructors (basic): Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Bool), :(y::Int32)] == Expr[:(x::var"typename(Bool)"), :(y::var"typename(Int32)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:178
Constructors (basic): Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Bool), :(y::Int32)] == Expr[:(x::var"typename(Bool)"), :(y::var"typename(Int32)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:178
params (via Constructors with type params): Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:18
  Expression: target[:params] == get(candidate, :params, nothing)
   Evaluated: Any[:String] == [Symbol("typename(String)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:18
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:211
params (via Constructors with type params): Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Int32), :(y::Bool)] == Expr[:(x::var"typename(Int32)"), :(y::var"typename(Bool)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:211
params (via Constructors with type params): Test Failed at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/method.jl:19
  Expression: target[:args] == get(candidate, :args, nothing)
   Evaluated: Any[:(x::Float32), :(y::Bool)] == Expr[:(x::var"typename(Float32)"), :(y::var"typename(Bool)")]
Stacktrace:
 [1] test_matches(candidate::Dict{Symbol,Any}, target::Dict{Symbol,Any})
   @ Main ~/.julia/packages/ExprTools/xk0OO/test/method.jl:19
 [2] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:11
 [3] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [4] top-level scope
   @ ~/.julia/packages/ExprTools/xk0OO/test/method.jl:211
Test Summary:                                  | Pass  Fail  Broken  Total
ExprTools.jl                                   |  499    19       5    523
  splitdef / combinedef                        |  422             3    425
  method.jl: signature                         |   77    19       2     98
    Basics                                     |    5     2              7
    missing argnames                           |    3     3              6
    Whereparams                                |   12                   12
    Whereparams with constraints               |   17     1             18
    Arg types with type-parameters             |    5     4              9
    anon functions                             |    4                    4
    vararg                                     |    4     4              8
    kwargs                                     |   12                   12
    Return Type                                |    5             2      7
    Constructors (basic)                       |    6     2              8
    params (via Constructors with type params) |    4     3              7
ERROR: LoadError: Some tests did not pass: 499 passed, 19 failed, 0 errored, 5 broken.
in expression starting at /home/pkgeval/.julia/packages/ExprTools/xk0OO/test/runtests.jl:4
ERROR: Package ExprTools errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
