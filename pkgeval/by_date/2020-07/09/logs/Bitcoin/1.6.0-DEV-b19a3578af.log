Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Base58 ─────── v0.3.0
  Installed IniFile ────── v0.5.0
  Installed Ripemd ─────── v0.3.0
  Installed Compat ─────── v3.13.0
  Installed MerkleTrees ── v0.1.0
  Installed Bitcoin ────── v0.1.12
  Installed MbedTLS ────── v1.0.2
  Installed HTTP ───────── v0.8.16
  Installed BitConverter ─ v0.1.1
  Installed MbedTLS_jll ── v2.16.6+1
  Installed Secp256k1 ──── v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [785d7830] + Bitcoin v0.1.12
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [a832ea1e] + Base58 v0.3.0
  [3a3ce9e8] + BitConverter v0.1.1
  [785d7830] + Bitcoin v0.1.12
  [34da2185] + Compat v3.13.0
  [cd3eb016] + HTTP v0.8.16
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.6+1
  [06dfef30] + MerkleTrees v0.1.0
  [92ef3814] + Ripemd v0.3.0
  [bfa37bea] + Secp256k1 v0.1.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Bitcoin
Status `/tmp/jl_3H4fzf/Project.toml`
  [a832ea1e] Base58 v0.3.0
  [3a3ce9e8] BitConverter v0.1.1
  [785d7830] Bitcoin v0.1.12
  [cd3eb016] HTTP v0.8.16
  [06dfef30] MerkleTrees v0.1.0
  [92ef3814] Ripemd v0.3.0
  [bfa37bea] Secp256k1 v0.1.0
  [ade2ca70] Dates
  [ea8e919c] SHA
  [6462fe0b] Sockets
  [8dfed614] Test
Status `/tmp/jl_3H4fzf/Manifest.toml`
  [a832ea1e] Base58 v0.3.0
  [3a3ce9e8] BitConverter v0.1.1
  [785d7830] Bitcoin v0.1.12
  [34da2185] Compat v3.13.0
  [cd3eb016] HTTP v0.8.16
  [83e8ac13] IniFile v0.5.0
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [06dfef30] MerkleTrees v0.1.0
  [92ef3814] Ripemd v0.3.0
  [bfa37bea] Secp256k1 v0.1.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
GET Tx: Error During Test at /home/pkgeval/.julia/packages/Bitcoin/wnpii/test/rpctest.jl:5
  Test threw exception
  Expression: typeof(get_tx(key)) == Tx
  IOError(Base.IOError("connect: connection timed out (ETIMEDOUT)", -110) during request(http://btc.brane.cc:8332/rest/tx/f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16.bin))
  
  Stacktrace:
    [1] wait_connected(x::TCPSocket)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
    [2] connect
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
    [3] connect(addr::IPv4, port::UInt64)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
    [4] getconnection(::Type{TCPSocket}, host::SubString{String}, port::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:616
    [5] #newconnection#25
      @ ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:583 [inlined]
    [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{TCPSocket}}, host::SubString{String}, port::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:527
    [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, url::HTTP.URIs.URI, req::HTTP.Messages.Request, body::Vector{UInt8}; proxy::Nothing, socket_type::Type, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionRequest ~/.julia/packages/HTTP/ZggHU/src/ConnectionRequest.jl:73
    [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/ZggHU/src/ExceptionRequest.jl:19
    [9] (::Base.var"#59#61"{Base.var"#59#60#62"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ Base ./error.jl:301
   [10] #request#1
      @ ~/.julia/packages/HTTP/ZggHU/src/RetryRequest.jl:44 [inlined]
   [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/ZggHU/src/MessageRequest.jl:51
   [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/ZggHU/src/BasicAuthRequest.jl:28
   [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:24
   [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:21
   [15] request(method::String, url::String, h::Vector{Pair{SubString{String},SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:314
   [16] request
      @ ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:314 [inlined]
   [17] get_tx(key::String; url::String, testnet::Bool)
      @ Bitcoin ~/.julia/packages/Bitcoin/wnpii/src/rpc/rest.jl:19
   [18] get_tx(key::String)
      @ Bitcoin ~/.julia/packages/Bitcoin/wnpii/src/rpc/rest.jl:18
   [19] top-level scope
      @ ~/.julia/packages/Bitcoin/wnpii/test/rpctest.jl:5
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [21] top-level scope
      @ ~/.julia/packages/Bitcoin/wnpii/test/rpctest.jl:4
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [23] top-level scope
      @ ~/.julia/packages/Bitcoin/wnpii/test/rpctest.jl:2
  
Test Summary:           | Pass  Error  Total
REST Client             |    3      1      4
  GET Tx                |           1      1
  GET Headers           |    2             2
  GET BlockHashByHeight |    1             1
ERROR: LoadError: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Bitcoin/wnpii/test/rpctest.jl:1
in expression starting at /home/pkgeval/.julia/packages/Bitcoin/wnpii/test/runtests.jl:5
ERROR: Package Bitcoin errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
