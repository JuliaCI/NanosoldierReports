Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_znpLjv/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_znpLjv/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04024243254882116 0.08652420555190644; -0.04024243254882116 0.0 0.045731293239125656; -0.08652420555190644 -0.045731293239125656 0.0])
dAA = so3([0.0 0.006376952716330275 -0.06260802168367928; -0.006376952716330275 0.0 -0.20839477042568386; 0.06260802168367928 0.20839477042568386 0.0])
dAA = so3([0.0 -0.05033864620096473 -0.16008752002978405; 0.05033864620096473 0.0 -0.17063789849876876; 0.16008752002978405 0.17063789849876876 0.0])
dAA = Quaternion(0.9911133594343392, [0.0348022368573198, 0.08234335552351305, -0.0985022073947283])
dAA = SO3([0.9953409552613192 0.08265767281321036 0.049639620310683134; -0.08088896508089498 0.9960492765482837 -0.03664442680384376; -0.05247245093976718 0.03245840126600161 0.9980947320167705])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9879261255014674 -0.02460901660748655 -0.15295870963521963; -0.054942986402228104 0.8674790825886973 -0.49443028782253684; 0.14485592427258046 0.49686460688268447 0.8556531561505818]), [-0.45731293239125653, 0.8652420555190644, -0.40242432548821155])
xj = SE3(SO3([0.7991104731127825 0.4771249697903429 0.3657515754771662; -0.4219450142422989 0.8784866380525133 -0.22410629558149142; -0.4282345814124905 0.02475863416582249 0.9033283751309443]), [1.7063789849876876, -1.6008752002978404, 0.5033864620096473])
Dx = SE3(SO3([0.7506127166339704 0.42668397821173665 0.5045010727092432; -0.5984684037089213 0.7626288955705598 0.2454235877068952; -0.2800287831446375 -0.4861460175484673 0.8277958264163325]), [2.4042756784067456, -1.742486144120249, 1.6634274000650264])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
