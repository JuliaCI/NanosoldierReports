Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.6
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.19
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.6
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_boMmoK/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_boMmoK/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.6
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(1, 0.004409671f0), Item(10, 0.0056660175f0), Item(44, 0.011758685f0), Item(26, 0.03447652f0)])
Vsorted = Item[Item(1, 0.004409671f0), Item(10, 0.0056660175f0), Item(44, 0.011758685f0), Item(26, 0.03447652f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004245162010192871, 0.004788128534952799, 301.0, 53.689059406518936))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003985977172851563, 0.004792571067810059, 301.0, 78.02807021141052))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004010327657063802, 0.00447239875793457, 301.0, 43.834612131118774))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039024194081624347, 0.004068199793497721, 301.0, 10.41239296970889))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0028757095336914063, 0.005284531911214193, 301.0, 48.633398450911045))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015059312184651693, 0.00012416839599609374, 301.0, 191.46727012097836))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.6131680806477865e-5, 0.010301033655802408, 300.0, 26.19966415455565)
p = PerformanceResult(1.0, 1.0, 1.0, 5.447864532470703e-5, 2.6496251424153647e-5, 300.0, 26.19966415455565)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003320709864298503, 0.0037441015243530273, 300.0, 1.392534322742904)
p = PerformanceResult(1.0, 1.0, 1.0, 3.408061133490668e-5, 1.3629595438639322e-5, 300.0, 1.392534322742904)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.6131680806477865e-5, 0.010301033655802408, 300.0, 26.19966415455565), PerformanceResult(1.0, 1.0, 1.0, 5.447864532470703e-5, 2.6496251424153647e-5, 300.0, 26.19966415455565), PerformanceResult(1.0, 1.0, 1.0, 0.003320709864298503, 0.0037441015243530273, 300.0, 1.392534322742904), PerformanceResult(1.0, 1.0, 1.0, 3.408061133490668e-5, 1.3629595438639322e-5, 300.0, 1.392534322742904))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 129.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0076405843098958336, 0.004008968671162923, 348.8, 28637.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0066226482391357425, 0.003046266237894694, 302.56666666666666, 6918.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3325284322102863e-5, 1.3836224873860677e-5, 92.9, 53.62055657804012))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2427241007486978e-5, 1.2000401814778646e-5, 84.46666666666667, 77.96487355232239))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0964940388997397e-5, 1.4567375183105469e-5, 85.13333333333334, 43.791929841041565))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 5.137920379638672e-5, 0.00011546611785888672, 91.86666666666666, 48.564802668988705))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7866666666666667, 0.7866666666666667, 0.7866666666666667, 5.339781443277995e-5, 0.00013016859690348308, 69.8, 201.64203830063343))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-03T22:07:05.524
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9167777777777778, 0.9089999999999999, 0.9109838056680162, 2.488851547241211e-5, 2.5098323822021483e-5, 153.59, 48.43159992014989))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3992061614990233e-5, 2.0649433135986328e-5, 157.33, 0.0))
*** advance 1 from 1000; 2020-07-03T22:07:06.225
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8919999999999999, 0.8849999999999999, 0.8866153846153846, 2.302408218383789e-5, 2.490997314453125e-5, 154.13, 74.28113794513047))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2029876708984376e-5, 1.8911361694335936e-5, 158.15, 0.0))
*** advance 1 from 1000; 2020-07-03T22:07:06.807
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8935555555555557, 0.8830000000000001, 0.8860364372469637, 0.0003809332847595215, 3.11279296875e-5, 153.64, 39.77163614332676))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3677349090576172e-5, 2.9451847076416016e-5, 157.42, 0.0))
*** advance 1 from 1000; 2020-07-03T22:07:07.452
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9200000000000002, 0.9140000000000001, 0.916388888888889, 9.944438934326172e-5, 0.0004953694343566895, 153.89, 44.35550762829371))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00014234542846679687, 0.0005412697792053223, 157.61, 0.0))
*** advance 1 from 1000; 2020-07-03T22:07:08.010
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8678095238095237, 0.865, 0.8661981424148607, 8.707284927368164e-5, 0.000394899845123291, 154.01, 199.78283195244148))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.507251739501953e-5, 0.00043030977249145506, 157.95, 0.0))
*** advance 1 from 1000; 2020-07-03T22:07:08.968
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9167777777777778, 0.9089999999999999, 0.9109838056680162, 2.8696060180664062e-5, 8.375883102416992e-5, 153.59, 48.43965752678923))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.17835807800293e-5, 6.534814834594726e-5, 157.33, 0.013876978657208383))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:10.752
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.782, 0.782, 0.782, 0.0014896011352539063, 8.379936218261719e-5, 202.68, 189.51666890084743))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:11.764
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.8, 0.8, 0.8, 0.0014682793617248535, 8.15582275390625e-5, 206.12, 107.93333524465561))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:12.799
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6199999999999999, 0.6199999999999999, 0.6199999999999999, 0.0015335941314697265, 8.07499885559082e-5, 269.97, 1.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:13.651
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9620000000000002, 0.9620000000000002, 0.9620000000000002, 0.0015439915657043458, 1.728057861328125e-5, 220.5, 608.0000205785036))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:14.618
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.586, 0.586, 0.586, 0.00165438175201416, 0.00043187141418457033, 251.91, 2343.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:15.508
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37199999999999994, 0.37199999999999994, NaN, 0.0016840887069702148, 0.0003373980522155762, 247.39, 3652.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-03T22:07:16.458
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.605, 0.605, 0.605, 0.0015480852127075196, 2.8710365295410157e-5, 245.84, 2363.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.059797608095676,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644745879120884,"seconds":0.002563968300819397,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4921875,"distances_sum":609.4654006659985}}, beam: 2, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.059797608095676,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644745879120884,"seconds":0.002563968300819397,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4921875,"distances_sum":609.4654006659985}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.923205342237062,"state":{"restarts":8},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":1.8579885363578796e-5,"exhaustive_search_seconds":5.532056093215942e-6,"evaluations":51.4765625,"distances_sum":292.17967339232564}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.923205342237062,"state":{"restarts":8},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":1.8579885363578796e-5,"exhaustive_search_seconds":5.532056093215942e-6,"evaluations":51.4765625,"distances_sum":292.17967339232564}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555546, conf: {"restarts":11}, perf: {"precision":0.8524305555555546,"recall":0.8524305555555546,"f1":0.8524305555555546,"seconds":4.205852746963501e-5,"exhaustive_search_seconds":2.7742236852645874e-5,"evaluations":134.671875,"distances_sum":126.27027879748493}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8524305555555546,"state":{"restarts":11},"perf":{"precision":0.8524305555555546,"recall":0.8524305555555546,"f1":0.8524305555555546,"seconds":4.205852746963501e-5,"exhaustive_search_seconds":2.7742236852645874e-5,"evaluations":134.671875,"distances_sum":126.27027879748493}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8524305555555546,"state":{"restarts":11},"perf":{"precision":0.8524305555555546,"recall":0.8524305555555546,"f1":0.8524305555555546,"seconds":4.205852746963501e-5,"exhaustive_search_seconds":2.7742236852645874e-5,"evaluations":134.671875,"distances_sum":126.27027879748493}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111098, conf: {"restarts":19}, perf: {"precision":0.8689236111111098,"recall":0.8689236111111098,"f1":0.8689236111111098,"seconds":0.0001171305775642395,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":283.71875,"distances_sum":55.9564844253473}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333325, conf: {"restarts":15}, perf: {"precision":0.8645833333333325,"recall":0.8645833333333325,"f1":0.8645833333333325,"seconds":0.00018199533224105835,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":257.5390625,"distances_sum":55.91589406086132}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777766, conf: {"restarts":25}, perf: {"precision":0.8637152777777766,"recall":0.8637152777777766,"f1":0.8637152777777766,"seconds":0.0001340433955192566,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":339.1875,"distances_sum":56.14137205993757}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.862847222222221, conf: {"restarts":21}, perf: {"precision":0.862847222222221,"recall":0.862847222222221,"f1":0.862847222222221,"seconds":0.00012985430657863617,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":310.4375,"distances_sum":56.222593184094876}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8689236111111098,"state":{"restarts":19},"perf":{"precision":0.8689236111111098,"recall":0.8689236111111098,"f1":0.8689236111111098,"seconds":0.0001171305775642395,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":283.71875,"distances_sum":55.9564844253473}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8689236111111098,"state":{"restarts":19},"perf":{"precision":0.8689236111111098,"recall":0.8689236111111098,"f1":0.8689236111111098,"seconds":0.0001171305775642395,"exhaustive_search_seconds":0.00038608722388744354,"evaluations":283.71875,"distances_sum":55.9564844253473}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(19), SatNeighborhood(32), 2020-07-03T22:07:23.258
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1030, 0.036427096f0), Item(4439, 0.04388628f0), Item(8108, 0.044628046f0), Item(7973, 0.045272715f0), Item(6786, 0.048153583f0), Item(1758, 0.05854641f0), Item(9183, 0.059980605f0), Item(4704, 0.06015026f0), Item(1584, 0.06287701f0), Item(569, 0.064627334f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0816901408450703,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9472704378954385,"seconds":0.0033792778849601746,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.3203125,"distances_sum":600.8468481004238}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0816901408450703,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9472704378954385,"seconds":0.0033792778849601746,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.3203125,"distances_sum":600.8468481004238}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.158524426719841,"state":{"bsize":3},"perf":{"precision":0.9687499999999994,"recall":0.9687499999999994,"f1":0.9687499999999994,"seconds":1.5286728739738464e-5,"exhaustive_search_seconds":6.858259439468384e-6,"evaluations":31.34375,"distances_sum":287.16617101058364}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.158524426719841,"state":{"bsize":3},"perf":{"precision":0.9687499999999994,"recall":0.9687499999999994,"f1":0.9687499999999994,"seconds":1.5286728739738464e-5,"exhaustive_search_seconds":6.858259439468384e-6,"evaluations":31.34375,"distances_sum":287.16617101058364}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.129162462159435,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.8578564524650574e-5,"exhaustive_search_seconds":6.230361759662628e-5,"evaluations":61.9375,"distances_sum":122.42780721746385}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.129162462159435,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.8578564524650574e-5,"exhaustive_search_seconds":6.230361759662628e-5,"evaluations":61.9375,"distances_sum":122.42780721746385}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.28889557628649, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":7.168389856815338e-5,"exhaustive_search_seconds":0.0004417896270751953,"evaluations":103.84375,"distances_sum":53.16689681727439}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.56219369894983, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.243027746677399e-5,"exhaustive_search_seconds":0.0004417896270751953,"evaluations":100.4296875,"distances_sum":53.156708871014416}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.56219369894983,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.243027746677399e-5,"exhaustive_search_seconds":0.0004417896270751953,"evaluations":100.4296875,"distances_sum":53.156708871014416}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.56219369894983,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.243027746677399e-5,"exhaustive_search_seconds":0.0004417896270751953,"evaluations":100.4296875,"distances_sum":53.156708871014416}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.56219369894983,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.243027746677399e-5,"exhaustive_search_seconds":0.0004417896270751953,"evaluations":100.4296875,"distances_sum":53.156708871014416}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(6), SatNeighborhood(32), 2020-07-03T22:07:26.849
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3157, 0.027079321f0), Item(6924, 0.035551947f0), Item(398, 0.041810613f0), Item(3210, 0.042673163f0), Item(1603, 0.045899004f0), Item(3333, 0.046994854f0), Item(7220, 0.048409935f0), Item(8064, 0.054999363f0), Item(354, 0.05592329f0), Item(8992, 0.056893997f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
