Julia Version 1.6.0-DEV.356
Commit 0960c9a308 (2020-07-02 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ───────────────────── v0.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed UnPack ─────────────────────── v1.0.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed BSON ───────────────────────── v0.2.6
  Installed WriteVTK ───────────────────── v1.6.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Gridap ─────────────────────── v0.11.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed NaNMath ────────────────────── v0.3.3
  Installed OrderedCollections ─────────── v1.3.0
  Installed FiniteDiff ─────────────────── v2.3.2
  Installed FileIO ─────────────────────── v1.3.0
  Installed StaticArrays ───────────────── v0.12.3
  Installed LightXML ───────────────────── v0.9.0
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DocStringExtensions ────────── v0.8.2
  Installed Parsers ────────────────────── v1.0.6
  Installed Distances ──────────────────── v0.9.0
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed NLSolversBase ──────────────── v7.6.1
  Installed AbstractTrees ──────────────── v0.3.3
  Installed ForwardDiff ────────────────── v0.10.12
  Installed Combinatorics ──────────────── v1.0.2
  Installed ArrayInterface ─────────────── v2.9.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.19
  Installed Requires ───────────────────── v1.0.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Parameters ─────────────────── v0.12.1
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed FillArrays ─────────────────── v0.8.12
  Installed JSON ───────────────────────── v0.21.0
  Installed CodecZlib ──────────────────── v0.7.0
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed DiffResults ────────────────── v1.0.2
  Installed JLD2 ───────────────────────── v0.1.13
  Installed NLsolve ────────────────────── v4.4.0
  Installed QuadGK ─────────────────────── v2.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [56d4f2e9] + Gridap v0.11.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.9.0
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.3.0
  [1a297f60] + FillArrays v0.8.12
  [6a86dc24] + FiniteDiff v2.3.2
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.11.2
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.4.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.6
  [1fd47b50] + QuadGK v2.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [64499a7a] + WriteVTK v1.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_EcdMBx/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.12
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.4.0
  [1fd47b50] QuadGK v2.4.0
  [90137ffa] StaticArrays v0.12.3
  [64499a7a] WriteVTK v1.6.0
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_EcdMBx/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.9.0
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.12
  [6a86dc24] FiniteDiff v2.3.2
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.6
  [1fd47b50] QuadGK v2.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [64499a7a] WriteVTK v1.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
140.048112 seconds (8.67 M allocations: 548.556 MiB, 0.27% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  0.631990 seconds (1.18 M allocations: 66.463 MiB, 1.95% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 16.012245 seconds (24.47 M allocations: 1.295 GiB, 4.76% gc time)
Test Summary: | Pass  Total
Algebra       |  722    722
 49.829282 seconds (67.73 M allocations: 3.508 GiB, 3.26% gc time)
Test Summary: | Pass  Total
TensorValues  |  314    314
  9.111022 seconds (12.39 M allocations: 710.025 MiB, 3.26% gc time)
Test Summary: | Pass  Total
Arrays        |  330    330
 17.467270 seconds (24.38 M allocations: 1.337 GiB, 3.29% gc time)
Test Summary: | Pass  Total
Fields        |  626    626
 39.450757 seconds (45.51 M allocations: 2.499 GiB, 3.10% gc time)
Test Summary: | Pass  Total
Polynomials   |  104    104
  8.405374 seconds (11.81 M allocations: 643.442 MiB, 3.11% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 10.484790 seconds (23.89 M allocations: 1.190 GiB, 9.43% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  987    987
 51.859901 seconds (68.70 M allocations: 3.795 GiB, 3.19% gc time)
Test Summary: | Pass  Total
Geometry      | 2435   2435
106.330747 seconds (133.94 M allocations: 7.489 GiB, 3.75% gc time)
Test Summary: | Pass  Total
FESpaces      | 1107   1107
262.068362 seconds (247.91 M allocations: 13.741 GiB, 3.04% gc time)
Test Summary: | Pass  Total
MultiField    |  326    326
116.617573 seconds (78.58 M allocations: 4.401 GiB, 3.57% gc time)
Test Summary: |
Visualization | No tests
 28.122413 seconds (26.07 M allocations: 1.477 GiB, 2.88% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000050 seconds
  0.000035 seconds
  0.000000 seconds
  0.000035 seconds
  0.000040 seconds
  0.000025 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.003653 seconds
  0.003295 seconds
  0.000000 seconds
  0.003006 seconds
  0.003271 seconds
  0.002881 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000002 seconds
  0.000003 seconds
  0.000058 seconds
  0.000210 seconds
  0.000003 seconds
  0.000076 seconds
  0.000119 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000189 seconds
  0.000324 seconds
  0.005195 seconds
  0.018648 seconds
  0.000289 seconds
  0.007032 seconds
  0.010621 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000027 seconds
  0.000023 seconds
  0.000122 seconds
  0.000122 seconds
+++ running suite for n = 100000 +++
  0.002358 seconds
  0.002244 seconds
  0.012299 seconds
  0.012226 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000018 seconds
  0.000000 seconds
  0.000069 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001847 seconds
  0.000000 seconds
  0.007014 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000077 seconds
  0.000075 seconds
  0.000088 seconds
+++ running suite for n = 100000 +++
  0.007818 seconds
  0.007539 seconds
  0.008783 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ running suite for n = 1000 +++
  0.000029 seconds
  0.000002 seconds
  0.000083 seconds
  0.000107 seconds
  0.000029 seconds
  0.000001 seconds
  0.000110 seconds
  0.000105 seconds
  0.000029 seconds
  0.000004 seconds
  0.000189 seconds (3.49 k allocations: 101.391 KiB)
  0.000096 seconds
  0.000142 seconds
  0.000001 seconds
  0.000555 seconds
  0.000558 seconds
+++ running suite for n = 100000 +++
  0.002661 seconds
  0.000206 seconds
  0.007346 seconds
  0.009454 seconds
  0.002594 seconds
  0.000080 seconds
  0.010056 seconds
  0.009063 seconds
  0.002595 seconds
  0.000420 seconds
  0.018314 seconds (399.49 k allocations: 10.673 MiB)
  0.008425 seconds
  0.012542 seconds
  0.000101 seconds
  0.049229 seconds
  0.048582 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000002 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000146 seconds
  0.000003 seconds
  0.000246 seconds
  0.000242 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000307 seconds
  0.000248 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.013668 seconds
  0.000275 seconds
  0.021725 seconds
  0.021053 seconds (1 allocation: 112 bytes)
  0.000424 seconds
  0.027497 seconds
  0.021785 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000005 seconds
  0.000001 seconds
  0.000001 seconds
  0.000005 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000094 seconds
  0.000108 seconds
  0.000425 seconds
  0.000094 seconds
  0.000109 seconds
  0.000351 seconds
  0.000095 seconds
  0.000115 seconds
  0.000097 seconds
  0.000103 seconds
  0.000119 seconds
  0.000103 seconds
  0.000284 seconds
+++ running suite for n = 100000 +++
  0.007831 seconds
  0.010307 seconds
  0.036884 seconds
  0.007922 seconds
  0.008940 seconds
  0.030072 seconds
  0.008380 seconds
  0.009453 seconds
  0.007928 seconds
  0.008507 seconds
  0.009655 seconds
  0.007898 seconds
  0.025320 seconds
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000001 seconds
  0.000005 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000005 seconds
  0.000020 seconds
+++ running suite for n = 1000 +++
  0.000117 seconds
  0.000460 seconds
  0.001974 seconds
+++ running suite for n = 100000 +++
  0.010243 seconds
  0.041869 seconds
  0.177735 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000004 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000002 seconds
  0.000008 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000145 seconds
  0.000790 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.016280 seconds
  0.109642 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000005 seconds
  0.000001 seconds
  0.000008 seconds (3 allocations: 96 bytes)
  0.242862 seconds (161.62 k allocations: 9.118 MiB)
  0.000000 seconds
  0.000006 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds (3 allocations: 96 bytes)
  0.000011 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000004 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000018 seconds (30 allocations: 960 bytes)
  0.000046 seconds (30 allocations: 960 bytes)
  0.000000 seconds
  0.000012 seconds (50 allocations: 1.250 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000017 seconds
  0.000197 seconds
  0.001636 seconds (3.49 k allocations: 101.391 KiB)
  0.004097 seconds (3.49 k allocations: 101.391 KiB)
  0.000031 seconds
  0.000771 seconds (5.49 k allocations: 132.641 KiB)
  0.000003 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.001460 seconds
  0.017804 seconds
  0.155884 seconds (399.49 k allocations: 10.673 MiB)
  0.397951 seconds (399.49 k allocations: 10.673 MiB)
  0.001792 seconds
  0.076947 seconds (599.49 k allocations: 13.725 MiB)
  0.000042 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000006 seconds
  0.000002 seconds
  0.000008 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000003 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000019 seconds
  0.000012 seconds
  0.000011 seconds
  0.000028 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000890 seconds
  0.001511 seconds
  0.001348 seconds
  0.005433 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.085925 seconds
  0.122607 seconds
  0.106840 seconds
  0.450817 seconds (3.00 M allocations: 137.329 MiB, 27.35% gc time)
    Testing Gridap tests passed 
