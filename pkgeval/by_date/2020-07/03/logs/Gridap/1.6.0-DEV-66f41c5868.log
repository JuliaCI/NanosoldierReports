Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Parsers ────────────────────── v1.0.6
  Installed QuadGK ─────────────────────── v2.4.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed NLsolve ────────────────────── v4.4.0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed Gridap ─────────────────────── v0.11.2
  Installed Distances ──────────────────── v0.9.0
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed FileIO ─────────────────────── v1.3.0
  Installed DataStructures ─────────────── v0.17.19
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Parameters ─────────────────── v0.12.1
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed SpecialFunctions ───────────── v0.10.3
  Installed StaticArrays ───────────────── v0.12.3
  Installed WriteVTK ───────────────────── v1.6.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed NaNMath ────────────────────── v0.3.3
  Installed FiniteDiff ─────────────────── v2.3.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DocStringExtensions ────────── v0.8.2
  Installed NLSolversBase ──────────────── v7.6.1
  Installed UnPack ─────────────────────── v1.0.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed ArrayInterface ─────────────── v2.9.0
  Installed LightXML ───────────────────── v0.9.0
  Installed Combinatorics ──────────────── v1.0.2
  Installed JSON ───────────────────────── v0.21.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Reexport ───────────────────── v0.2.0
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed BSON ───────────────────────── v0.2.6
  Installed FillArrays ─────────────────── v0.8.12
  Installed AbstractTrees ──────────────── v0.3.3
  Installed CodecZlib ──────────────────── v0.7.0
  Installed JLD2 ───────────────────────── v0.1.13
  Installed OrderedCollections ─────────── v1.3.0
  Installed DiffResults ────────────────── v1.0.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [56d4f2e9] + Gridap v0.11.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.9.0
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.3.0
  [1a297f60] + FillArrays v0.8.12
  [6a86dc24] + FiniteDiff v2.3.2
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.11.2
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.4.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.6
  [1fd47b50] + QuadGK v2.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [64499a7a] + WriteVTK v1.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_wPOIz2/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.12
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.4.0
  [1fd47b50] QuadGK v2.4.0
  [90137ffa] StaticArrays v0.12.3
  [64499a7a] WriteVTK v1.6.0
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_wPOIz2/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.9.0
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.12
  [6a86dc24] FiniteDiff v2.3.2
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.6
  [1fd47b50] QuadGK v2.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [64499a7a] WriteVTK v1.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
196.464008 seconds (8.68 M allocations: 550.701 MiB, 0.31% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  0.951840 seconds (1.18 M allocations: 66.458 MiB)
Test Summary: | Pass  Total
Io            |    9      9
 23.908607 seconds (24.48 M allocations: 1.295 GiB, 3.10% gc time)
Test Summary: | Pass  Total
Algebra       |  723    723
 76.584883 seconds (67.64 M allocations: 3.503 GiB, 3.35% gc time)
Test Summary: | Pass  Total
TensorValues  |  314    314
 14.023542 seconds (12.39 M allocations: 710.134 MiB, 2.74% gc time)
Test Summary: | Pass  Total
Arrays        |  330    330
 31.044508 seconds (24.38 M allocations: 1.337 GiB, 2.55% gc time)
Test Summary: | Pass  Total
Fields        |  626    626
 63.383584 seconds (45.51 M allocations: 2.499 GiB, 3.25% gc time)
Test Summary: | Pass  Total
Polynomials   |  104    104
 12.731753 seconds (11.81 M allocations: 643.358 MiB, 3.94% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.065693 seconds (23.89 M allocations: 1.189 GiB, 9.83% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  987    987
 84.741685 seconds (68.71 M allocations: 3.796 GiB, 3.09% gc time)
Test Summary: | Pass  Total
Geometry      | 2435   2435
182.390909 seconds (133.95 M allocations: 7.489 GiB, 2.97% gc time)
Test Summary: | Pass  Total
FESpaces      | 1107   1107
424.781496 seconds (247.92 M allocations: 13.742 GiB, 2.79% gc time)
Test Summary: | Pass  Total
MultiField    |  326    326
158.936157 seconds (78.58 M allocations: 4.401 GiB, 2.15% gc time)
Test Summary: |
Visualization | No tests
 47.361182 seconds (26.08 M allocations: 1.477 GiB, 2.74% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000043 seconds
  0.000035 seconds
  0.000000 seconds
  0.000034 seconds
  0.000039 seconds
  0.000022 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.003481 seconds
  0.003297 seconds
  0.000000 seconds
  0.002872 seconds
  0.003287 seconds
  0.001869 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
  0.000000 seconds
  0.000005 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000002 seconds
  0.000003 seconds
  0.000063 seconds
  0.000219 seconds
  0.000002 seconds
  0.000076 seconds
  0.000117 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000187 seconds
  0.000315 seconds
  0.005003 seconds
  0.024946 seconds
  0.000209 seconds
  0.006651 seconds
  0.010068 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000023 seconds
  0.000022 seconds
  0.000133 seconds
  0.000124 seconds
+++ running suite for n = 100000 +++
  0.002407 seconds
  0.002176 seconds
  0.011436 seconds
  0.011411 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000017 seconds
  0.000000 seconds
  0.000069 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001693 seconds
  0.000000 seconds
  0.006372 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000078 seconds
  0.000076 seconds
  0.000088 seconds
+++ running suite for n = 100000 +++
  0.009641 seconds
  0.007208 seconds
  0.008220 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ running suite for n = 1000 +++
  0.000029 seconds
  0.000003 seconds
  0.000085 seconds
  0.000107 seconds
  0.000029 seconds
  0.000001 seconds
  0.000110 seconds
  0.000104 seconds
  0.000029 seconds
  0.000004 seconds
  0.000187 seconds (3.49 k allocations: 101.391 KiB)
  0.000098 seconds
  0.000154 seconds
  0.000001 seconds
  0.000572 seconds
  0.000545 seconds
+++ running suite for n = 100000 +++
  0.002617 seconds
  0.000284 seconds
  0.007368 seconds
  0.009200 seconds
  0.002468 seconds
  0.000074 seconds
  0.009043 seconds
  0.008495 seconds
  0.002400 seconds
  0.000431 seconds
  0.017931 seconds (399.49 k allocations: 10.673 MiB)
  0.009542 seconds
  0.013336 seconds
  0.000110 seconds
  0.047054 seconds
  0.049522 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000002 seconds
  0.000000 seconds
  0.000004 seconds
  0.000004 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000004 seconds
  0.000004 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000167 seconds
  0.000008 seconds
  0.000325 seconds
  0.000277 seconds (1 allocation: 112 bytes)
  0.000007 seconds
  0.000248 seconds
  0.000255 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.012177 seconds
  0.000375 seconds
  0.020520 seconds
  0.019997 seconds (1 allocation: 112 bytes)
  0.000446 seconds
  0.019394 seconds
  0.025204 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000083 seconds
  0.000097 seconds
  0.000400 seconds
  0.000083 seconds
  0.000097 seconds
  0.000325 seconds
  0.000090 seconds
  0.000102 seconds
  0.000086 seconds
  0.000093 seconds
  0.000104 seconds
  0.000089 seconds
  0.000272 seconds
+++ running suite for n = 100000 +++
  0.007265 seconds
  0.008222 seconds
  0.038878 seconds
  0.007062 seconds
  0.008335 seconds
  0.027478 seconds
  0.007699 seconds
  0.008742 seconds
  0.007461 seconds
  0.010891 seconds
  0.009856 seconds
  0.007220 seconds
  0.023296 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000004 seconds
  0.000016 seconds
+++ running suite for n = 1000 +++
  0.000091 seconds
  0.000376 seconds
  0.001414 seconds
+++ running suite for n = 100000 +++
  0.007733 seconds
  0.035897 seconds
  0.137698 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000006 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000008 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000149 seconds
  0.001264 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.013268 seconds
  0.069425 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000005 seconds (3 allocations: 96 bytes)
  0.195986 seconds (161.62 k allocations: 9.118 MiB)
  0.000000 seconds
  0.000006 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds (3 allocations: 96 bytes)
  0.000011 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000004 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000030 seconds (30 allocations: 960 bytes)
  0.000061 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000015 seconds (50 allocations: 1.250 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000028 seconds
  0.000209 seconds
  0.001718 seconds (3.49 k allocations: 101.391 KiB)
  0.003954 seconds (3.49 k allocations: 101.391 KiB)
  0.000020 seconds
  0.000767 seconds (5.49 k allocations: 132.641 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.001464 seconds
  0.015697 seconds
  0.147050 seconds (399.49 k allocations: 10.673 MiB)
  0.400502 seconds (399.49 k allocations: 10.673 MiB)
  0.001736 seconds
  0.073852 seconds (599.49 k allocations: 13.725 MiB)
  0.000042 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000005 seconds
  0.000002 seconds
  0.000010 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000003 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000007 seconds
  0.000012 seconds
  0.000011 seconds
  0.000030 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000691 seconds
  0.001218 seconds
  0.001084 seconds
  0.002636 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.066351 seconds
  0.121818 seconds
  0.108726 seconds
  0.437293 seconds (3.00 M allocations: 137.329 MiB, 25.52% gc time)
    Testing Gridap tests passed 
