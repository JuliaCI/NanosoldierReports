Julia Version 1.6.0-DEV.356
Commit 0960c9a308 (2020-07-02 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_OoaYxZ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_OoaYxZ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722864680068113
curgen: 20 fitness: 0.21722864680068113
curgen: 30 fitness: 0.21723065520913118
curgen: 40 fitness: 0.21723065520913118
curgen: 50 fitness: 0.21723065520913118
CoordinateCreature{Vector{Float64}}([-0.22228924147967496], -0.21723065520913118) -0.22228924147967496 -0.21723065520913118
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580520524979564
curgen: 100 fitness: 3.2583578935736606
curgen: 150 fitness: 3.25842045785579
curgen: 200 fitness: 3.2584484578587802
curgen: 250 fitness: 3.2584683510756425
curgen: 300 fitness: 3.258468707501518
curgen: 350 fitness: 3.258468707501518
curgen: 400 fitness: 3.2584800723550122
curgen: 450 fitness: 3.258480258696023
curgen: 500 fitness: 3.258480589821921
CoordinateCreature{Vector{Float64}}([0.2224915196839183, 0.22245217653831983, 0.2223572463253275, -0.22210963970094608, 0.22254476519447813, -0.2222928749303796, -0.2223471918617615, 0.22261269329241948, 0.2226284251099545, -0.222544921825229, -0.22239167145576214, 0.22260311630579563, -0.2221729284935181, 0.222552546776122, -0.22265559857055386], -3.258480589821921) [0.2224915196839183, 0.22245217653831983, 0.2223572463253275, -0.22210963970094608, 0.22254476519447813, -0.2222928749303796, -0.2223471918617615, 0.22261269329241948, 0.2226284251099545, -0.222544921825229, -0.22239167145576214, 0.22260311630579563, -0.2221729284935181, 0.222552546776122, -0.22265559857055386] -3.258480589821921
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004356643483362177
curgen: 100 fitness: -0.00404701354901249
curgen: 150 fitness: -0.0038484178128328494
curgen: 200 fitness: -0.003015520533608651
curgen: 250 fitness: -0.003015520533608651
curgen: 300 fitness: -0.0029190000743142264
curgen: 350 fitness: -0.002014862331435552
curgen: 400 fitness: -0.002014862331435552
curgen: 450 fitness: -0.0019120933713736576
curgen: 500 fitness: -0.0015963294220853186
CoordinateCreature{Vector{Float64}}([-0.0002594087939024939, -0.00047161793002127063, 7.50747913800926e-5, -0.0006766231041511509, -0.00012142309416548602, 4.638312024646664e-5, 0.0012168589854985542, -0.00012688859215535678, -0.00025137795538640844, -0.00037865712145380905, -0.00022665776909628482, -0.0016278494827881495, 0.0005822931198382099, 0.0008338906962421342, 0.0013554292964804422], 0.0015963294220853186) [-0.0002594087939024939, -0.00047161793002127063, 7.50747913800926e-5, -0.0006766231041511509, -0.00012142309416548602, 4.638312024646664e-5, 0.0012168589854985542, -0.00012688859215535678, -0.00025137795538640844, -0.00037865712145380905, -0.00022665776909628482, -0.0016278494827881495, 0.0005822931198382099, 0.0008338906962421342, 0.0013554292964804422] 0.0015963294220853186
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
