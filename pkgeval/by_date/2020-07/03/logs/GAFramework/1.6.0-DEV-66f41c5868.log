Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ZScfIs/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ZScfIs/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723172852274475
curgen: 20 fitness: 0.21723172852274475
curgen: 30 fitness: 0.21723172852274475
curgen: 40 fitness: 0.21723172852274475
curgen: 50 fitness: 0.21723172852274475
CoordinateCreature{Vector{Float64}}([-0.22234115787546962], -0.21723172852274475) -0.22234115787546962 -0.21723172852274475
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258210391470957
curgen: 100 fitness: 3.2582710879759036
curgen: 150 fitness: 3.258271113433179
curgen: 200 fitness: 3.2583059438551936
curgen: 250 fitness: 3.25835579189887
curgen: 300 fitness: 3.2583851093302094
curgen: 350 fitness: 3.2584531220515083
curgen: 400 fitness: 3.2584531220515083
curgen: 450 fitness: 3.2584570312190455
curgen: 500 fitness: 3.2584792057989582
CoordinateCreature{Vector{Float64}}([-0.22228101658084146, -0.22217995385510209, 0.22220819049441334, 0.22254093606633094, -0.2224468299276061, 0.22247223031017768, 0.22225032060122435, 0.22263085412648104, -0.2224845279301285, -0.22248211600734083, 0.22238052680138712, 0.22269250291231962, 0.22237017136204346, 0.22234975855693007, 0.22247030652544483], -3.2584792057989582) [-0.22228101658084146, -0.22217995385510209, 0.22220819049441334, 0.22254093606633094, -0.2224468299276061, 0.22247223031017768, 0.22225032060122435, 0.22263085412648104, -0.2224845279301285, -0.22248211600734083, 0.22238052680138712, 0.22269250291231962, 0.22237017136204346, 0.22234975855693007, 0.22247030652544483] -3.2584792057989582
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0023218493818433217
curgen: 100 fitness: -0.002142295015516993
curgen: 150 fitness: -0.0020783235503074593
curgen: 200 fitness: -0.0020783235503074593
curgen: 250 fitness: -0.0015079257984211836
curgen: 300 fitness: -0.000947008932683957
curgen: 350 fitness: -0.000947008932683957
curgen: 400 fitness: -0.0008013389434609053
curgen: 450 fitness: -0.0008013389434609053
curgen: 500 fitness: -0.000687199318463172
CoordinateCreature{Vector{Float64}}([0.00016117480557343894, 0.00021520772592657908, -8.027607379645604e-5, -0.000583971640645957, 0.00016497102936098874, 0.00024824508316223255, 0.0001584879479997847, 0.0003218914276904572, -0.0010684245381076647, 0.0006267124805424277, 0.0006162527583413531, 0.00021701594655108185, -0.0008105065760529197, 0.0004564128490179267, -1.1078049484860414e-5], 0.000687199318463172) [0.00016117480557343894, 0.00021520772592657908, -8.027607379645604e-5, -0.000583971640645957, 0.00016497102936098874, 0.00024824508316223255, 0.0001584879479997847, 0.0003218914276904572, -0.0010684245381076647, 0.0006267124805424277, 0.0006162527583413531, 0.00021701594655108185, -0.0008105065760529197, 0.0004564128490179267, -1.1078049484860414e-5] 0.000687199318463172
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
