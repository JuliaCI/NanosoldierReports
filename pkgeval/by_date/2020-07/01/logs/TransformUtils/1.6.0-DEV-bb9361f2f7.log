Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_wl0dK9/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_wl0dK9/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11439834804050537 -0.16652807999909178; 0.11439834804050537 0.0 -0.04236670115500413; 0.16652807999909178 0.04236670115500413 0.0])
dAA = so3([0.0 0.02995511359522518 0.1041171276687925; -0.02995511359522518 0.0 -0.10244040647582918; -0.1041171276687925 0.10244040647582918 0.0])
dAA = so3([0.0 9.495014633359427e-7 -0.06550408641487358; -9.495014633359427e-7 0.0 0.04579937281186351; 0.06550408641487358 -0.04579937281186351 0.0])
dAA = Quaternion(0.9965870155065019, [0.03814007036876353, 0.0731810993888457, -0.0020450546079303564])
dAA = SO3([0.9963690246972472 0.08095833349698998 -0.026353649865757046; -0.08135280245707975 0.9965834171255332 -0.014255323313591863; 0.025109523218016818 0.01634750585825943 0.9995510346630523])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.963742493379051 0.10611201296840732 0.24482779082310543; -0.040219063453621216 0.9648123297903979 -0.25984532941605487; -0.26378558222625303 0.2405772412100052 0.9340983661378173]), [0.4236670115500412, -1.6652807999909176, 1.1439834804050537])
xj = SE3(SO3([0.933834735775099 0.030890382988202767 0.35636844767556664; 0.03828755020737109 0.9819089637148641 -0.1854423103704213; -0.35564975714735 0.18681694573898744 0.9157579805962858]), [-0.4579937281186351, -0.6550408641487357, -9.495014633359426e-6])
Dx = SE3(SO3([0.9922516055063266 -0.059000700996332346 0.10934198028231762; 0.05047014669893929 0.9955796210612214 0.07920847441898055; -0.11353200281112324 -0.07307623012673903 0.9908432514420025]), [-0.5885559705619018, 0.605918476315646, -1.546963149279383])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
