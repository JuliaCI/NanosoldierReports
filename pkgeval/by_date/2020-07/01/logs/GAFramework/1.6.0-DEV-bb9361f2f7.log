Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_SqaYxS/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_SqaYxS/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723229189558144
curgen: 20 fitness: 0.21723229189558144
curgen: 30 fitness: 0.21723229189558144
curgen: 40 fitness: 0.21723254372333958
curgen: 50 fitness: 0.21723269331096054
CoordinateCreature{Array{Float64,1}}([0.22240291610225293], -0.21723269331096054) 0.22240291610225293 -0.21723269331096054
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578783473718045
curgen: 100 fitness: 3.2580164257980653
curgen: 150 fitness: 3.258279909477293
curgen: 200 fitness: 3.258308780050296
curgen: 250 fitness: 3.2583611870112654
curgen: 300 fitness: 3.258402914663531
curgen: 350 fitness: 3.2584061010539207
curgen: 400 fitness: 3.258421247892478
curgen: 450 fitness: 3.2584349778038293
curgen: 500 fitness: 3.2584354121782524
CoordinateCreature{Array{Float64,1}}([0.22204398555133578, 0.22221437957066953, -0.22212190495461073, 0.22191619671805438, 0.222514751209679, -0.22225772755215453, -0.22251917422195083, -0.22299890414960669, 0.22262470039216728, 0.22214047321072786, 0.22253807293731578, -0.2226926452637226, 0.22279153270106625, 0.22245308902703756, -0.22278960227658415], -3.2584354121782524) [0.22204398555133578, 0.22221437957066953, -0.22212190495461073, 0.22191619671805438, 0.222514751209679, -0.22225772755215453, -0.22251917422195083, -0.22299890414960669, 0.22262470039216728, 0.22214047321072786, 0.22253807293731578, -0.2226926452637226, 0.22279153270106625, 0.22245308902703756, -0.22278960227658415] -3.2584354121782524
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003304713415900551
curgen: 100 fitness: -0.002330645246814811
curgen: 150 fitness: -0.0023223435154307026
curgen: 200 fitness: -0.0011804542362483517
curgen: 250 fitness: -0.0011589279508825712
curgen: 300 fitness: -0.0011589279508825712
curgen: 350 fitness: -0.0009335648560409027
curgen: 400 fitness: -0.0006465927846761588
curgen: 450 fitness: -0.0004997136632312049
curgen: 500 fitness: -0.00043199295373597124
CoordinateCreature{Array{Float64,1}}([-0.0002880368435440263, -0.00028296860387533253, -0.0002918255020094412, -0.0004208882947985228, -6.766420966782156e-5, -0.0005929775562357542, 7.042063846287498e-5, 0.00022086235043275036, -1.2454982057538439e-5, 0.00030365300687166716, 0.00047619041496484176, -0.0005935402449578613, -1.82284668921003e-5, 0.0003522092008415819, 0.0007391860891279832], 0.00043199295373597124) [-0.0002880368435440263, -0.00028296860387533253, -0.0002918255020094412, -0.0004208882947985228, -6.766420966782156e-5, -0.0005929775562357542, 7.042063846287498e-5, 0.00022086235043275036, -1.2454982057538439e-5, 0.00030365300687166716, 0.00047619041496484176, -0.0005935402449578613, -1.82284668921003e-5, 0.0003522092008415819, 0.0007391860891279832] 0.00043199295373597124
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
