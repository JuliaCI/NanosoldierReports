Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CodecZlib ──────────────────── v0.7.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed WriteVTK ───────────────────── v1.6.0
  Installed Parameters ─────────────────── v0.12.1
  Installed JSON ───────────────────────── v0.21.0
  Installed DocStringExtensions ────────── v0.8.2
  Installed ForwardDiff ────────────────── v0.10.12
  Installed Gridap ─────────────────────── v0.11.2
  Installed Parsers ────────────────────── v1.0.6
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed LightXML ───────────────────── v0.9.0
  Installed JLD2 ───────────────────────── v0.1.13
  Installed DiffRules ──────────────────── v1.0.1
  Installed AbstractTrees ──────────────── v0.3.3
  Installed BSON ───────────────────────── v0.2.6
  Installed Requires ───────────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed FillArrays ─────────────────── v0.8.11
  Installed FiniteDiff ─────────────────── v2.3.2
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Distances ──────────────────── v0.9.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed NLsolve ────────────────────── v4.4.0
  Installed DataStructures ─────────────── v0.17.19
  Installed LineSearches ───────────────── v7.0.1
  Installed NLSolversBase ──────────────── v7.6.1
  Installed Reexport ───────────────────── v0.2.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed CommonSubexpressions ───────── v0.3.0
  Installed ArrayInterface ─────────────── v2.9.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed StaticArrays ───────────────── v0.12.3
  Installed OrderedCollections ─────────── v1.2.0
  Installed FileIO ─────────────────────── v1.3.0
  Installed QuadGK ─────────────────────── v2.4.0
  Installed Combinatorics ──────────────── v1.0.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [56d4f2e9] + Gridap v0.11.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.9.0
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.3.0
  [1a297f60] + FillArrays v0.8.11
  [6a86dc24] + FiniteDiff v2.3.2
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.11.2
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.4.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.6
  [1fd47b50] + QuadGK v2.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [64499a7a] + WriteVTK v1.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_3oJaLZ/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.11
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.4.0
  [1fd47b50] QuadGK v2.4.0
  [90137ffa] StaticArrays v0.12.3
  [64499a7a] WriteVTK v1.6.0
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_3oJaLZ/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.9.0
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.11
  [6a86dc24] FiniteDiff v2.3.2
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.11.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.6
  [1fd47b50] QuadGK v2.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [64499a7a] WriteVTK v1.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
138.677472 seconds (10.03 M allocations: 622.120 MiB, 0.35% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  0.772847 seconds (1.18 M allocations: 66.449 MiB, 18.38% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 15.571597 seconds (24.18 M allocations: 1.279 GiB, 3.54% gc time)
Test Summary: | Pass  Total
Algebra       |  724    724
 49.215313 seconds (67.58 M allocations: 3.500 GiB, 4.00% gc time)
Test Summary: | Pass  Total
TensorValues  |  314    314
  9.598843 seconds (12.59 M allocations: 721.379 MiB, 2.87% gc time)
Test Summary: | Pass  Total
Arrays        |  330    330
 20.317829 seconds (24.23 M allocations: 1.329 GiB, 2.95% gc time)
Test Summary: | Pass  Total
Fields        |  626    626
 49.816877 seconds (45.51 M allocations: 2.499 GiB, 3.94% gc time)
Test Summary: | Pass  Total
Polynomials   |  104    104
  9.882509 seconds (11.75 M allocations: 639.762 MiB, 4.58% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 11.482063 seconds (23.72 M allocations: 1.181 GiB, 10.83% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  987    987
 55.381974 seconds (63.64 M allocations: 3.527 GiB, 3.25% gc time)
Test Summary: | Pass  Total
Geometry      | 2435   2435
130.492332 seconds (132.93 M allocations: 7.435 GiB, 3.24% gc time)
Test Summary: | Pass  Total
FESpaces      | 1107   1107
283.999707 seconds (247.77 M allocations: 13.734 GiB, 3.00% gc time)
Test Summary: | Pass  Total
MultiField    |  326    326
109.641183 seconds (78.29 M allocations: 4.385 GiB, 2.32% gc time)
Test Summary: |
Visualization | No tests
 27.275359 seconds (24.42 M allocations: 1.386 GiB, 2.89% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000023 seconds
  0.000018 seconds
  0.000000 seconds
  0.000015 seconds
  0.000018 seconds
  0.000021 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.002275 seconds
  0.001439 seconds
  0.000000 seconds
  0.001418 seconds
  0.001881 seconds
  0.001855 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000003 seconds
  0.000003 seconds
  0.000044 seconds
  0.000201 seconds
  0.000004 seconds
  0.000072 seconds
  0.000115 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000277 seconds
  0.000268 seconds
  0.003835 seconds
  0.016592 seconds
  0.000284 seconds
  0.006628 seconds
  0.009901 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000021 seconds
  0.000021 seconds
  0.000048 seconds
  0.000048 seconds
+++ running suite for n = 100000 +++
  0.001977 seconds
  0.001908 seconds
  0.004004 seconds
  0.004151 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000014 seconds
  0.000000 seconds
  0.000035 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001077 seconds
  0.000000 seconds
  0.002878 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000058 seconds
  0.000060 seconds
  0.000081 seconds
+++ running suite for n = 100000 +++
  0.005876 seconds
  0.005854 seconds
  0.007357 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000025 seconds
  0.000004 seconds
  0.000073 seconds
  0.000092 seconds
  0.000025 seconds
  0.000001 seconds
  0.000098 seconds
  0.000094 seconds
  0.000025 seconds
  0.000004 seconds
  0.000172 seconds (3.49 k allocations: 101.391 KiB)
  0.000073 seconds
  0.000048 seconds
  0.000001 seconds
  0.000292 seconds
  0.000282 seconds
+++ running suite for n = 100000 +++
  0.002335 seconds
  0.000307 seconds
  0.006384 seconds
  0.008078 seconds
  0.002104 seconds
  0.000074 seconds
  0.008374 seconds
  0.007719 seconds
  0.002103 seconds
  0.001282 seconds
  0.016433 seconds (399.49 k allocations: 10.673 MiB)
  0.006465 seconds
  0.004149 seconds
  0.000097 seconds
  0.025028 seconds
  0.024159 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000002 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000054 seconds
  0.000004 seconds
  0.000146 seconds
  0.000145 seconds (1 allocation: 112 bytes)
  0.000004 seconds
  0.000140 seconds
  0.000147 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.004447 seconds
  0.000338 seconds
  0.011974 seconds
  0.011430 seconds (1 allocation: 112 bytes)
  0.000402 seconds
  0.011567 seconds
  0.012658 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000080 seconds
  0.000094 seconds
  0.000232 seconds
  0.000072 seconds
  0.000093 seconds
  0.000225 seconds
  0.000078 seconds
  0.000107 seconds
  0.000084 seconds
  0.000084 seconds
  0.000097 seconds
  0.000072 seconds
  0.000174 seconds
+++ running suite for n = 100000 +++
  0.005746 seconds
  0.007828 seconds
  0.024928 seconds
  0.008066 seconds
  0.011034 seconds
  0.029959 seconds
  0.010103 seconds
  0.012344 seconds
  0.010181 seconds
  0.009705 seconds
  0.012936 seconds
  0.009849 seconds
  0.022068 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000007 seconds
+++ running suite for n = 1000 +++
  0.000077 seconds
  0.000165 seconds
  0.000704 seconds
+++ running suite for n = 100000 +++
  0.006519 seconds
  0.014004 seconds
  0.057524 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000005 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000050 seconds
  0.000416 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.004229 seconds
  0.037347 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds (3 allocations: 96 bytes)
  0.204238 seconds (161.62 k allocations: 9.118 MiB)
  0.000000 seconds
  0.000010 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (3 allocations: 96 bytes)
  0.000008 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000003 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000015 seconds (30 allocations: 960 bytes)
  0.000034 seconds (30 allocations: 960 bytes)
  0.000000 seconds
  0.000012 seconds (50 allocations: 1.250 KiB)
  0.000001 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000015 seconds
  0.000076 seconds
  0.001602 seconds (3.49 k allocations: 101.391 KiB)
  0.004696 seconds (3.49 k allocations: 101.391 KiB)
  0.000032 seconds
  0.001019 seconds (5.49 k allocations: 132.641 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.001293 seconds
  0.006383 seconds
  0.121857 seconds (399.49 k allocations: 10.673 MiB)
  0.282272 seconds (399.49 k allocations: 10.673 MiB)
  0.001632 seconds
  0.061284 seconds (599.49 k allocations: 13.725 MiB)
  0.000039 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000008 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000007 seconds
  0.000016 seconds
  0.000012 seconds
  0.000038 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000684 seconds
  0.001297 seconds
  0.001019 seconds
  0.002590 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.066881 seconds
  0.115173 seconds
  0.104647 seconds
  0.432974 seconds (3.00 M allocations: 137.329 MiB, 23.11% gc time)
    Testing Gridap tests passed 
