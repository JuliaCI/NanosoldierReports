Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed UnPack ───────────────── v1.0.1
  Installed SIMDPirates ──────────── v0.8.13
  Installed RecursiveFactorization ─ v0.1.3
  Installed VectorizationBase ────── v0.12.16
  Installed OffsetArrays ─────────── v1.1.0
  Installed DocStringExtensions ──── v0.8.2
  Installed LoopVectorization ────── v0.8.8
  Installed LLVM ─────────────────── v1.7.0
  Installed CpuId ────────────────── v0.2.2
  Installed SLEEFPirates ─────────── v0.5.1
  Installed CEnum ────────────────── v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [f2c3362d] + RecursiveFactorization v0.1.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fa961155] + CEnum v0.4.1
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [929cbde3] + LLVM v1.7.0
  [bdcacae8] + LoopVectorization v0.8.8
  [6fe1bfb0] + OffsetArrays v1.1.0
  [f2c3362d] + RecursiveFactorization v0.1.3
  [21efa798] + SIMDPirates v0.8.13
  [476501e8] + SLEEFPirates v0.5.1
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building VectorizationBase → `~/.julia/packages/VectorizationBase/v6esN/deps/build.log`
   Building SLEEFPirates ─────→ `~/.julia/packages/SLEEFPirates/kmfoV/deps/build.log`
    Testing RecursiveFactorization
Status `/tmp/jl_dKKqB7/Project.toml`
  [bdcacae8] LoopVectorization v0.8.8
  [f2c3362d] RecursiveFactorization v0.1.3
  [3d5dd08c] VectorizationBase v0.12.16
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_dKKqB7/Manifest.toml`
  [fa961155] CEnum v0.4.1
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [929cbde3] LLVM v1.7.0
  [bdcacae8] LoopVectorization v0.8.8
  [6fe1bfb0] OffsetArrays v1.1.0
  [f2c3362d] RecursiveFactorization v0.1.3
  [21efa798] SIMDPirates v0.8.13
  [476501e8] SLEEFPirates v0.5.1
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: size: 1 × 3, T = Float64, p = true
[ Info: size: 2 × 4, T = Float64, p = true
[ Info: size: 3 × 5, T = Float64, p = true
[ Info: size: 4 × 6, T = Float64, p = true
[ Info: size: 5 × 7, T = Float64, p = true
[ Info: size: 6 × 8, T = Float64, p = true
[ Info: size: 7 × 9, T = Float64, p = true
[ Info: size: 8 × 10, T = Float64, p = true
[ Info: size: 9 × 11, T = Float64, p = true
[ Info: size: 10 × 12, T = Float64, p = true
[ Info: size: 50 × 52, T = Float64, p = true
[ Info: size: 130 × 132, T = Float64, p = true
[ Info: size: 300 × 302, T = Float64, p = true
[ Info: size: 1 × 3, T = Float32, p = true
[ Info: size: 2 × 4, T = Float32, p = true
[ Info: size: 3 × 5, T = Float32, p = true
[ Info: size: 4 × 6, T = Float32, p = true
[ Info: size: 5 × 7, T = Float32, p = true
[ Info: size: 6 × 8, T = Float32, p = true
[ Info: size: 7 × 9, T = Float32, p = true
[ Info: size: 8 × 10, T = Float32, p = true
[ Info: size: 9 × 11, T = Float32, p = true
[ Info: size: 10 × 12, T = Float32, p = true
[ Info: size: 50 × 52, T = Float32, p = true
[ Info: size: 130 × 132, T = Float32, p = true
[ Info: size: 300 × 302, T = Float32, p = true
[ Info: size: 1 × 3, T = Complex{Float64}, p = true
[ Info: size: 2 × 4, T = Complex{Float64}, p = true
[ Info: size: 3 × 5, T = Complex{Float64}, p = true
[ Info: size: 4 × 6, T = Complex{Float64}, p = true
[ Info: size: 5 × 7, T = Complex{Float64}, p = true
[ Info: size: 6 × 8, T = Complex{Float64}, p = true
[ Info: size: 7 × 9, T = Complex{Float64}, p = true
[ Info: size: 8 × 10, T = Complex{Float64}, p = true
[ Info: size: 9 × 11, T = Complex{Float64}, p = true
[ Info: size: 10 × 12, T = Complex{Float64}, p = true
[ Info: size: 50 × 52, T = Complex{Float64}, p = true
[ Info: size: 130 × 132, T = Complex{Float64}, p = true
[ Info: size: 300 × 302, T = Complex{Float64}, p = true
[ Info: size: 1 × 3, T = Complex{Float32}, p = true
[ Info: size: 2 × 4, T = Complex{Float32}, p = true
[ Info: size: 3 × 5, T = Complex{Float32}, p = true
[ Info: size: 4 × 6, T = Complex{Float32}, p = true
[ Info: size: 5 × 7, T = Complex{Float32}, p = true
[ Info: size: 6 × 8, T = Complex{Float32}, p = true
[ Info: size: 7 × 9, T = Complex{Float32}, p = true
[ Info: size: 8 × 10, T = Complex{Float32}, p = true
[ Info: size: 9 × 11, T = Complex{Float32}, p = true
[ Info: size: 10 × 12, T = Complex{Float32}, p = true
[ Info: size: 50 × 52, T = Complex{Float32}, p = true
[ Info: size: 130 × 132, T = Complex{Float32}, p = true
[ Info: size: 300 × 302, T = Complex{Float32}, p = true
[ Info: size: 1 × 3, T = Real, p = true
[ Info: size: 2 × 4, T = Real, p = true
[ Info: size: 3 × 5, T = Real, p = true
[ Info: size: 4 × 6, T = Real, p = true
[ Info: size: 5 × 7, T = Real, p = true
[ Info: size: 6 × 8, T = Real, p = true
[ Info: size: 7 × 9, T = Real, p = true
[ Info: size: 8 × 10, T = Real, p = true
[ Info: size: 9 × 11, T = Real, p = true
[ Info: size: 10 × 12, T = Real, p = true
[ Info: size: 50 × 52, T = Real, p = true
[ Info: size: 130 × 132, T = Real, p = true
[ Info: size: 300 × 302, T = Real, p = true
[ Info: size: 1 × 3, T = Float64, p = false
[ Info: size: 2 × 4, T = Float64, p = false
[ Info: size: 3 × 5, T = Float64, p = false
[ Info: size: 4 × 6, T = Float64, p = false
[ Info: size: 5 × 7, T = Float64, p = false
[ Info: size: 6 × 8, T = Float64, p = false
[ Info: size: 7 × 9, T = Float64, p = false
[ Info: size: 8 × 10, T = Float64, p = false
[ Info: size: 9 × 11, T = Float64, p = false
[ Info: size: 10 × 12, T = Float64, p = false
[ Info: size: 50 × 52, T = Float64, p = false
[ Info: size: 130 × 132, T = Float64, p = false
[ Info: size: 300 × 302, T = Float64, p = false
[ Info: size: 1 × 3, T = Float32, p = false
[ Info: size: 2 × 4, T = Float32, p = false
[ Info: size: 3 × 5, T = Float32, p = false
[ Info: size: 4 × 6, T = Float32, p = false
[ Info: size: 5 × 7, T = Float32, p = false
[ Info: size: 6 × 8, T = Float32, p = false
[ Info: size: 7 × 9, T = Float32, p = false
[ Info: size: 8 × 10, T = Float32, p = false
[ Info: size: 9 × 11, T = Float32, p = false
[ Info: size: 10 × 12, T = Float32, p = false
[ Info: size: 50 × 52, T = Float32, p = false
[ Info: size: 130 × 132, T = Float32, p = false
[ Info: size: 300 × 302, T = Float32, p = false
[ Info: size: 1 × 3, T = Complex{Float64}, p = false
[ Info: size: 2 × 4, T = Complex{Float64}, p = false
[ Info: size: 3 × 5, T = Complex{Float64}, p = false
[ Info: size: 4 × 6, T = Complex{Float64}, p = false
[ Info: size: 5 × 7, T = Complex{Float64}, p = false
[ Info: size: 6 × 8, T = Complex{Float64}, p = false
[ Info: size: 7 × 9, T = Complex{Float64}, p = false
[ Info: size: 8 × 10, T = Complex{Float64}, p = false
[ Info: size: 9 × 11, T = Complex{Float64}, p = false
[ Info: size: 10 × 12, T = Complex{Float64}, p = false
[ Info: size: 50 × 52, T = Complex{Float64}, p = false
[ Info: size: 130 × 132, T = Complex{Float64}, p = false
[ Info: size: 300 × 302, T = Complex{Float64}, p = false
[ Info: size: 1 × 3, T = Complex{Float32}, p = false
[ Info: size: 2 × 4, T = Complex{Float32}, p = false
[ Info: size: 3 × 5, T = Complex{Float32}, p = false
[ Info: size: 4 × 6, T = Complex{Float32}, p = false
[ Info: size: 5 × 7, T = Complex{Float32}, p = false
[ Info: size: 6 × 8, T = Complex{Float32}, p = false
[ Info: size: 7 × 9, T = Complex{Float32}, p = false
[ Info: size: 8 × 10, T = Complex{Float32}, p = false
[ Info: size: 9 × 11, T = Complex{Float32}, p = false
[ Info: size: 10 × 12, T = Complex{Float32}, p = false
[ Info: size: 50 × 52, T = Complex{Float32}, p = false
[ Info: size: 130 × 132, T = Complex{Float32}, p = false
[ Info: size: 300 × 302, T = Complex{Float32}, p = false
[ Info: size: 1 × 3, T = Real, p = false
[ Info: size: 2 × 4, T = Real, p = false
[ Info: size: 3 × 5, T = Real, p = false
[ Info: size: 4 × 6, T = Real, p = false
[ Info: size: 5 × 7, T = Real, p = false
[ Info: size: 6 × 8, T = Real, p = false
[ Info: size: 7 × 9, T = Real, p = false
[ Info: size: 8 × 10, T = Real, p = false
[ Info: size: 9 × 11, T = Real, p = false
[ Info: size: 10 × 12, T = Real, p = false
[ Info: size: 50 × 52, T = Real, p = false
[ Info: size: 130 × 132, T = Real, p = false
[ Info: size: 300 × 302, T = Real, p = false
Test Summary:         | Pass  Total
Test LU factorization |  520    520
    Testing RecursiveFactorization tests passed 
