Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenBLAS_jll ───────────────── v0.3.9+4
  Installed NamedArrays ────────────────── v0.9.4
  Installed DiffEqBayes ────────────────── v2.16.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed NameResolution ─────────────── v0.1.3
  Installed Parameters ─────────────────── v0.12.1
  Installed JSON ───────────────────────── v0.21.0
  Installed LightGraphs ────────────────── v1.3.3
  Installed Inflate ────────────────────── v0.1.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed PrettyPrint ────────────────── v0.1.0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed DocStringExtensions ────────── v0.8.2
  Installed SIMDPirates ────────────────── v0.8.13
  Installed JuliaVariables ─────────────── v0.2.0
  Installed IterativeSolvers ───────────── v0.8.4
  Installed InvertedIndices ────────────── v1.0.0
  Installed ProgressMeter ──────────────── v1.3.1
  Installed SLEEFPirates ───────────────── v0.5.1
  Installed TableTraits ────────────────── v1.0.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed PDMats ─────────────────────── v0.9.12
  Installed RecipesBase ────────────────── v1.0.1
  Installed SafeTestsets ───────────────── v0.0.1
  Installed Parsers ────────────────────── v1.0.6
  Installed RangeArrays ────────────────── v0.3.2
  Installed StatsBase ──────────────────── v0.33.0
  Installed Compat ─────────────────────── v3.12.0
  Installed Roots ──────────────────────── v1.0.2
  Installed ZygoteRules ────────────────── v0.2.0
  Installed EllipsisNotation ───────────── v0.4.0
  Installed TimerOutputs ───────────────── v0.5.6
  Installed DiffEqJump ─────────────────── v6.9.2
  Installed AbstractTrees ──────────────── v0.3.3
  Installed CanonicalTraits ────────────── v0.2.1
  Installed MLStyle ────────────────────── v0.3.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed StatsFuns ──────────────────── v0.9.5
  Installed RecursiveFactorization ─────── v0.1.3
  Installed ProgressLogging ────────────── v0.1.3
  Installed DataAPI ────────────────────── v1.3.0
  Installed RandomNumbers ──────────────── v1.4.0
  Installed TreeViews ──────────────────── v0.3.0
  Installed Requires ───────────────────── v1.0.1
  Installed Arpack ─────────────────────── v0.4.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed Distances ──────────────────── v0.8.2
  Installed FillArrays ─────────────────── v0.8.11
  Installed GeneralizedGenerated ───────── v0.2.4
  Installed DiffEqBase ─────────────────── v6.40.0
  Installed LoopVectorization ──────────── v0.8.8
  Installed BinaryProvider ─────────────── v0.5.10
  Installed DynamicPPL ─────────────────── v0.8.2
  Installed NNlib ──────────────────────── v0.6.6
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed DiffResults ────────────────── v1.0.2
  Installed MuladdMacro ────────────────── v0.2.2
  Installed SimpleTraits ───────────────── v0.9.2
  Installed SymbolicUtils ──────────────── v0.4.2
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed Libtask ────────────────────── v0.4.1
  Installed MCMCChains ─────────────────── v3.0.12
  Installed ApproxBayes ────────────────── v0.3.2
  Installed Distributions ──────────────── v0.23.4
  Installed FiniteDiff ─────────────────── v2.3.2
  Installed VectorizationBase ──────────── v0.12.16
  Installed Unitful ────────────────────── v1.3.0
  Installed PoissonRandom ──────────────── v0.4.0
  Installed LLVM ───────────────────────── v1.7.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed OffsetArrays ───────────────── v1.1.0
  Installed Optim ──────────────────────── v0.22.0
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed AdvancedMH ─────────────────── v0.5.1
  Installed LabelledArrays ─────────────── v1.2.2
  Installed Formatting ─────────────────── v0.4.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Missings ───────────────────── v0.4.3
  Installed CEnum ──────────────────────── v0.4.1
  Installed CpuId ──────────────────────── v0.2.2
  Installed Latexify ───────────────────── v0.13.5
  Installed DataStructures ─────────────── v0.17.19
  Installed Rmath ──────────────────────── v0.6.1
  Installed Tracker ────────────────────── v0.2.7
  Installed RecursiveArrayTools ────────── v2.5.0
  Installed TerminalLoggers ────────────── v0.1.2
  Installed LineSearches ───────────────── v7.0.1
  Installed ConstructionBase ───────────── v1.0.0
  Installed DistributionsAD ────────────── v0.5.3
  Installed AxisArrays ─────────────────── v0.4.3
  Installed Reexport ───────────────────── v0.2.0
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Adapt ──────────────────────── v1.1.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed Bijectors ──────────────────── v0.7.2
  Installed ChainRulesCore ─────────────── v0.8.1
  Installed Turing ─────────────────────── v0.13.0
  Installed DataValueInterfaces ────────── v1.0.0
  Installed MappedArrays ───────────────── v0.2.2
  Installed ArrayInterface ─────────────── v2.9.0
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed StructArrays ───────────────── v0.4.4
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Tables ─────────────────────── v1.0.4
  Installed IterTools ──────────────────── v1.3.0
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed IntervalSets ───────────────── v0.5.1
  Installed LoggingExtras ──────────────── v0.4.1
  Installed TransformVariables ─────────── v0.3.8
  Installed OrderedCollections ─────────── v1.2.0
  Installed StaticArrays ───────────────── v0.12.3
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed QuadGK ─────────────────────── v2.4.0
  Installed LogDensityProblems ─────────── v0.9.1
  Installed ModelingToolkit ────────────── v3.11.0
  Installed Combinatorics ──────────────── v1.0.2
  Installed DynamicHMC ─────────────────── v2.1.0
  Installed AbstractAlgebra ────────────── v0.9.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.16.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [c3fe647b] + AbstractAlgebra v0.9.2
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.1.0
  [0bf59076] + AdvancedHMC v0.2.25
  [5b7e9947] + AdvancedMH v0.5.1
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.9.0
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.2
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [a603d957] + CanonicalTraits v0.2.1
  [d360d2e6] + ChainRulesCore v0.8.1
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.12.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.40.0
  [ebbdde9d] + DiffEqBayes v2.16.0
  [c894b116] + DiffEqJump v6.9.2
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.4
  [ced4e74d] + DistributionsAD v0.5.3
  [ffbed154] + DocStringExtensions v0.8.2
  [bbc10e6e] + DynamicHMC v2.1.0
  [366bfd00] + DynamicPPL v0.8.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [1a297f60] + FillArrays v0.8.11
  [6a86dc24] + FiniteDiff v2.3.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.4
  [d25df0c9] + Inflate v0.1.2
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.0
  [929cbde3] + LLVM v1.7.0
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.2.2
  [23fbe1c1] + Latexify v0.13.5
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] + Libtask v0.4.1
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.9.1
  [e6f89c97] + LoggingExtras v0.4.1
  [bdcacae8] + LoopVectorization v0.8.8
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [961ee093] + ModelingToolkit v3.11.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.1
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [86f7a689] + NamedArrays v0.9.4
  [6fe1bfb0] + OffsetArrays v1.1.0
  [4536629a] + OpenBLAS_jll v0.3.9+4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.2.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.6
  [e409e4f3] + PoissonRandom v0.4.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.1.0
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.3.1
  [1fd47b50] + QuadGK v2.4.0
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.5.0
  [f2c3362d] + RecursiveFactorization v0.1.3
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.2
  [21efa798] + SIMDPirates v0.8.13
  [476501e8] + SLEEFPirates v0.5.1
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.4
  [d1185830] + SymbolicUtils v0.4.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [5d786b92] + TerminalLoggers v0.1.2
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.7
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.13.0
  [3a884ed6] + UnPack v1.0.1
  [1986cc42] + Unitful v1.3.0
  [3d5dd08c] + VectorizationBase v0.12.16
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building VectorizationBase → `~/.julia/packages/VectorizationBase/v6esN/deps/build.log`
   Building SLEEFPirates ─────→ `~/.julia/packages/SLEEFPirates/kmfoV/deps/build.log`
   Building NNlib ────────────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building Libtask ──────────→ `~/.julia/packages/Libtask/Zo6uM/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_JoQIYj/Project.toml`
  [f5f396d3] ApproxBayes v0.3.2
  [2b5f629d] DiffEqBase v6.40.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [163ba53b] DiffResults v1.0.2
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [f6369f11] ForwardDiff v0.10.12
  [2ee39098] LabelledArrays v1.2.2
  [6fdf6af0] LogDensityProblems v0.9.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.11.0
  [429524aa] Optim v0.22.0
  [1dea7af3] OrdinaryDiffEq v5.41.0
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.3.0
  [d96e819e] Parameters v0.12.1
  [731186ca] RecursiveArrayTools v2.5.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [2913bbd2] StatsBase v0.33.0
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.13.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_JoQIYj/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.9.2
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.9.0
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [a603d957] CanonicalTraits v0.2.1
  [d360d2e6] ChainRulesCore v0.8.1
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.12.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.40.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [459566f4] DiffEqCallbacks v2.13.3
  [c894b116] DiffEqJump v6.9.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [366bfd00] DynamicPPL v0.8.2
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.7.0
  [1a297f60] FillArrays v0.8.11
  [6a86dc24] FiniteDiff v2.3.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.4
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.0
  [929cbde3] LLVM v1.7.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.2.2
  [23fbe1c1] Latexify v0.13.5
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.9.1
  [e6f89c97] LoggingExtras v0.4.1
  [bdcacae8] LoopVectorization v0.8.8
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.11.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.1.0
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.41.0
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.6
  [e409e4f3] PoissonRandom v0.4.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.1.0
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.1
  [1fd47b50] QuadGK v2.4.0
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.5.0
  [f2c3362d] RecursiveFactorization v0.1.3
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.2
  [21efa798] SIMDPirates v0.8.13
  [476501e8] SLEEFPirates v0.5.1
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.9.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [d1185830] SymbolicUtils v0.4.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [5d786b92] TerminalLoggers v0.1.2
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.7
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.3.0
  [3d5dd08c] VectorizationBase v0.12.16
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.0625
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0061
│   estimated_seconds_left = 0.46
└   ϵ = 0.0625
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00096
│   estimated_seconds_left = 0.023
└   ϵ = 0.0469
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.13689704549932663, 0.2307097533884569, 0.19757419445517985]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0069
│   estimated_seconds_left = 0.34
└   ϵ = 0.0307
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.20056112773084486, 0.22939482251031798, 0.198468481455997]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00045
│   estimated_seconds_left = 0.044
└   ϵ = 0.247
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.3105545819233704, 1.3881664990921283, 1.4402220518841147]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.034
│   estimated_seconds_left = 6.7
└   ϵ = 0.0016
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.066
│   estimated_seconds_left = 6.6
└   ϵ = 0.0014
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03555297533353811, 0.26530798862608745, 0.22485060181671498]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.098
│   estimated_seconds_left = 39.0
└   ϵ = 0.000832
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.059
│   estimated_seconds_left = 18.0
└   ϵ = 0.00355
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.042
│   estimated_seconds_left = 8.3
└   ϵ = 0.00934
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.045
│   estimated_seconds_left = 4.5
└   ϵ = 0.00734
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.029352209172283625, 0.27609718328401683, 0.2625252837436744]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.027
│   estimated_seconds_left = 1.3
└   ϵ = 0.00813
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.035
└   estimated_seconds_left = 35.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.047
└   estimated_seconds_left = 42.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.047
└   estimated_seconds_left = 37.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.052
└   estimated_seconds_left = 36.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.042
└   estimated_seconds_left = 25.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.046
└   estimated_seconds_left = 23.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.039
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.043
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.046
└   estimated_seconds_left = 9.1
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.044
└   estimated_seconds_left = 4.4
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.082
│   estimated_seconds_left = 6.1
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.1
│   estimated_seconds_left = 2.4
└   ϵ = 0.000276
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014325315435759243, 0.014401134982274539, 0.014160945350637373, 0.08984735352817859, 0.0832914118867838]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.075
│   estimated_seconds_left = 3.7
└   ϵ = 0.000208
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010116508549966215, 0.010619354521388548, 0.010014629406200144, 0.26450404824269474, 0.24528756606005273]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.01
│   estimated_seconds_left = 1.0
└   ϵ = 0.0127
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007304108261386613, 0.008499924538037716, 0.007102804905800612, 0.35126588856568414, 0.30207643856218835]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0082
│   estimated_seconds_left = 1.6
└   ϵ = 0.023
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.013
│   estimated_seconds_left = 1.2
└   ϵ = 0.0451
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.00542857004654648, 0.006691787974966611, 0.005052114571196797, 0.22676737998643084, 0.2101489778591754]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0022
│   estimated_seconds_left = 0.87
└   ϵ = 0.034
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.013
│   estimated_seconds_left = 3.8
└   ϵ = 0.0874
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.01
│   estimated_seconds_left = 2.1
└   ϵ = 0.0676
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0083
│   estimated_seconds_left = 0.82
└   ϵ = 0.0576
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.004204680740079678, 0.0054809524482740115, 0.0036157441890802226, 0.25863233035222205, 0.268694109666069]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0041
│   estimated_seconds_left = 0.2
└   ϵ = 0.0559
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0021
└   estimated_seconds_left = 2.1
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0092
└   estimated_seconds_left = 8.2
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0096
└   estimated_seconds_left = 7.6
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0082
└   estimated_seconds_left = 5.7
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0082
└   estimated_seconds_left = 4.9
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0091
└   estimated_seconds_left = 4.6
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0077
└   estimated_seconds_left = 3.1
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0087
└   estimated_seconds_left = 2.6
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0092
└   estimated_seconds_left = 1.8
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.008
└   estimated_seconds_left = 0.79
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.005
│   estimated_seconds_left = 0.37
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.075
│   estimated_seconds_left = 1.8
└   ϵ = 0.000287
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.04215709929658526, 0.12646940793306705]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0029
│   estimated_seconds_left = 0.14
└   ϵ = 0.000185
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.041646109759736295, 0.1815292733405761]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.022
│   estimated_seconds_left = 2.2
└   ϵ = 0.00474
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03553832243176488, 0.2219341106032153]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.029
│   estimated_seconds_left = 5.8
└   ϵ = 0.00528
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.022
│   estimated_seconds_left = 2.1
└   ϵ = 0.00411
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.02790654333199681, 0.24803158486014998]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0028
│   estimated_seconds_left = 1.1
└   ϵ = 0.00719
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.02
│   estimated_seconds_left = 5.9
└   ϵ = 0.00953
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.016
│   estimated_seconds_left = 3.2
└   ϵ = 0.0059
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.014
│   estimated_seconds_left = 1.4
└   ϵ = 0.0138
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.021171461645839402, 0.2669445390036212]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00055
│   estimated_seconds_left = 0.027
└   ϵ = 0.0112
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0032
└   estimated_seconds_left = 3.2
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.012
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.011
└   estimated_seconds_left = 9.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.011
└   estimated_seconds_left = 7.5
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.012
└   estimated_seconds_left = 6.9
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.011
└   estimated_seconds_left = 5.3
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0095
└   estimated_seconds_left = 3.8
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.013
└   estimated_seconds_left = 4.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.014
└   estimated_seconds_left = 2.8
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.011
└   estimated_seconds_left = 1.0
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0036
│   estimated_seconds_left = 0.27
└   ϵ = 0.000488
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.014
│   estimated_seconds_left = 0.35
└   ϵ = 0.000241
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014162442667718442, 0.014144208236986155, 0.17608984413611653]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.03
│   estimated_seconds_left = 1.5
└   ϵ = 0.000127
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010053343259028236, 0.010007965114709366, 0.1784496360604504]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00098
│   estimated_seconds_left = 0.097
└   ϵ = 0.00962
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007117627006692751, 0.007077367431268267, 0.281262850807188]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0028
│   estimated_seconds_left = 0.56
└   ϵ = 0.0186
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0032
│   estimated_seconds_left = 0.32
└   ϵ = 0.0736
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0050707798919047515, 0.005009194908220426, 0.19387107361319827]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.001
│   estimated_seconds_left = 0.4
└   ϵ = 0.0363
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0024
│   estimated_seconds_left = 0.71
└   ϵ = 0.0687
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0016
│   estimated_seconds_left = 0.32
└   ϵ = 0.0358
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0016
│   estimated_seconds_left = 0.16
└   ϵ = 0.0465
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0036464336269172682, 0.0035514771134497196, 0.2794641162896185]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00051
│   estimated_seconds_left = 0.025
└   ϵ = 0.0459
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00028
└   estimated_seconds_left = 0.28
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.001
└   estimated_seconds_left = 0.9
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0015
└   estimated_seconds_left = 1.2
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0011
└   estimated_seconds_left = 0.79
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0013
└   estimated_seconds_left = 0.75
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0017
└   estimated_seconds_left = 0.83
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.00096
└   estimated_seconds_left = 0.38
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0012
└   estimated_seconds_left = 0.36
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.001
└   estimated_seconds_left = 0.2
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0015
└   estimated_seconds_left = 0.15
┌ Warning: Assignment to `bayesian_result` in soft scope is ambiguous because a global variable by the same name exists: `bayesian_result` will be treated as a new local. Disambiguate by using `local bayesian_result` to suppress this warning or `global bayesian_result` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqBayes/cBMiN/test/dynamicHMC.jl:66
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 12.0
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.038
│   estimated_seconds_left = 0.91
└   ϵ = 0.000104
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014154209537296255, 0.014171328575224998, 0.014165886734086254, 0.014178847647990999, 0.09364050291965074, 0.07221419613796079]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.14
│   estimated_seconds_left = 6.9
└   ϵ = 9.88e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.01006534051018381, 0.010076940295072018, 0.010137585408037506, 0.010151354397267451, 0.22230394260556535, 0.11818275555323728]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.14
│   estimated_seconds_left = 14.0
└   ϵ = 0.00802
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007155711356030845, 0.007258790785345542, 0.007233790192612645, 0.007310785285407304, 0.35326115423534155, 0.25244163088674815]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.023
│   estimated_seconds_left = 4.5
└   ϵ = 0.0125
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.032
│   estimated_seconds_left = 3.2
└   ϵ = 0.0193
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005092511626632375, 0.005224827978326424, 0.005183868439279219, 0.005257613129735801, 0.29582006501391334, 0.23327961890594953]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.017
│   estimated_seconds_left = 6.6
└   ϵ = 0.0191
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.026
│   estimated_seconds_left = 7.7
└   ϵ = 0.0381
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.021
│   estimated_seconds_left = 4.2
└   ϵ = 0.0232
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.021
│   estimated_seconds_left = 2.1
└   ϵ = 0.0314
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0036846819552166688, 0.003877750923845141, 0.003806860211854036, 0.003921780688407065, 0.3017518650606528, 0.26311276650704063]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.014
│   estimated_seconds_left = 0.7
└   ϵ = 0.0279
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.007
└   estimated_seconds_left = 7.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.013
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.014
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.014
└   estimated_seconds_left = 9.7
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.011
└   estimated_seconds_left = 6.6
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.012
└   estimated_seconds_left = 6.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.014
└   estimated_seconds_left = 5.4
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.01
└   estimated_seconds_left = 3.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.013
└   estimated_seconds_left = 2.5
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.014
└   estimated_seconds_left = 1.4
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1365.870718 seconds (687.18 M allocations: 38.288 GiB, 1.60% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.0125
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5004  0.0032    0.0002  0.0001  246.6285  0.9960
        σ[1]  0.1513  0.0334    0.0021  0.0111   16.2070  1.1046

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4949  1.4978  1.5004  1.5027  1.5066
        σ[1]  0.1003  0.1236  0.1504  0.1746  0.2242

┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.01171875
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.0124969482421875
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/gzrxg/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.01171875
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5006  0.0046    0.0003  0.0003  255.2567  1.0045
           b  1.0000  0.0097    0.0006  0.0003  445.4475  0.9968
           c  3.0006  0.0096    0.0006  0.0001  344.2673  1.0020
           d  1.0007  0.0067    0.0004  0.0001  194.6138  0.9966
        σ[1]  0.1589  0.0372    0.0024  0.0020  171.5426  0.9981

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4917  1.4976  1.5005  1.5038  1.5087
           b  0.9783  0.9939  1.0001  1.0067  1.0186
           c  2.9810  2.9948  2.9999  3.0064  3.0208
           d  0.9870  0.9961  1.0010  1.0049  1.0147
        σ[1]  0.1010  0.1325  0.1532  0.1850  0.2405

Steady state problem
┌ Info: Found initial step size
└   ϵ = 1.375
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Test Summary: | Pass  Total
Turing        |   12     12
371.562394 seconds (486.28 M allocations: 26.447 GiB, 3.88% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 33.134225 seconds (77.44 M allocations: 3.154 GiB, 3.68% gc time)
1770.623816 seconds (1.25 G allocations: 67.892 GiB, 2.12% gc time)
    Testing DiffEqBayes tests passed 
