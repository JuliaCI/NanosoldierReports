Julia Version 1.6.0-DEV.549
Commit 3909294e78 (2020-07-28 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed MKL_jll ────────────────────── v2020.1.216+0
  Installed MacroTools ─────────────────── v0.5.5
  Installed RecipesBase ────────────────── v1.0.2
  Installed LazyArrays ─────────────────── v0.16.15
  Installed InfiniteLinearAlgebra ──────── v0.3.5
  Installed TimeZones ──────────────────── v1.3.1
  Installed Mocking ────────────────────── v0.7.1
  Installed SemiseparableMatrices ──────── v0.1.1
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed BandedMatrices ─────────────── v0.15.15
  Installed LazyBandedMatrices ─────────── v0.2.12
  Installed BlockArrays ────────────────── v0.12.10
  Installed StaticArrays ───────────────── v0.12.4
  Installed MatrixFactorizations ───────── v0.4.1
  Installed ExprTools ──────────────────── v0.1.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ArrayLayouts ───────────────── v0.3.7
  Installed InfiniteArrays ─────────────── v0.7.3
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed BlockBandedMatrices ────────── v0.8.11
  Installed DSP ────────────────────────── v0.6.7
  Installed Polynomials ────────────────── v1.1.3
  Installed EzXML ──────────────────────── v1.1.0
  Installed Intervals ──────────────────── v1.4.1
  Installed FillArrays ─────────────────── v0.8.13
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed IterTools ──────────────────── v1.3.0
  Installed Compat ─────────────────────── v3.13.0
  Installed Reexport ───────────────────── v0.2.0
  Installed FFTW ───────────────────────── v1.2.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
Updating `~/.julia/environments/v1.6/Project.toml`
  [cde9dba0] + InfiniteLinearAlgebra v0.3.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4c555306] + ArrayLayouts v0.3.7
  [aae01518] + BandedMatrices v0.15.15
  [8e7c35d0] + BlockArrays v0.12.10
  [ffab5731] + BlockBandedMatrices v0.8.11
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [1a297f60] + FillArrays v0.8.13
  [4858937d] + InfiniteArrays v0.7.3
  [cde9dba0] + InfiniteLinearAlgebra v0.3.5
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [d8418881] + Intervals v1.4.1
  [c8e1da08] + IterTools v1.3.0
  [5078a376] + LazyArrays v0.16.15
  [d7e5e226] + LazyBandedMatrices v0.2.12
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [856f044c] + MKL_jll v2020.1.216+0
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.4.1
  [78c3b35d] + Mocking v0.7.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [f27b6e38] + Polynomials v1.1.3
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [f8ebbe35] + SemiseparableMatrices v0.1.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [f269a46b] + TimeZones v1.3.1
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/cAGJs/deps/build.log`
   Building FFTW ─────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
    Testing InfiniteLinearAlgebra
Status `/tmp/jl_OeprJ4/Project.toml`
  [4c555306] ArrayLayouts v0.3.7
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.11
  [1a297f60] FillArrays v0.8.13
  [4858937d] InfiniteArrays v0.7.3
  [cde9dba0] InfiniteLinearAlgebra v0.3.5
  [5078a376] LazyArrays v0.16.15
  [d7e5e226] LazyBandedMatrices v0.2.12
  [a3b82374] MatrixFactorizations v0.4.1
  [f8ebbe35] SemiseparableMatrices v0.1.1
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_OeprJ4/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4c555306] ArrayLayouts v0.3.7
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.11
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.13
  [4858937d] InfiniteArrays v0.7.3
  [cde9dba0] InfiniteLinearAlgebra v0.3.5
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.4.1
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.15
  [d7e5e226] LazyBandedMatrices v0.2.12
  [94ce4f54] Libiconv_jll v1.16.0+5
  [856f044c] MKL_jll v2020.1.216+0
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.4.1
  [78c3b35d] Mocking v0.7.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [f27b6e38] Polynomials v1.1.3
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [f8ebbe35] SemiseparableMatrices v0.1.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [f269a46b] TimeZones v1.3.1
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
∞-banded      |    6      6
Test Summary:  | Pass  Total
∞-block arrays |    5      5
Test Summary:                | Pass  Total
∞-Toeplitz and Pert-Toeplitz |   16     16
Test Summary: | Pass  Broken  Total
Algebra       |   74       3     77
Test Summary: | Pass  Total
HessenbergQ   |   28     28
solve with QL: Error During Test at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:166
  Test threw exception
  Expression: (qr(A) \ Vcat(1.0, Zeros(∞)))[1:1000] ≈ (ql(A) \ Vcat(1.0, Zeros(∞)))[1:1000]
  MethodError: ldiv!(::InfiniteLinearAlgebra.QLProduct{Float64,Tuple{LowerHessenbergQ{Float64,Fill{QLPackedQ{Float64,Matrix{Float64},Vector{Float64}},1,Tuple{OneToInf{Int64}}}}},LowerTriangular{Float64,BandedMatrix{Float64,ApplyArray{Float64,2,typeof(hcat),Tuple{Vector{Float64},ApplyArray{Float64,2,typeof(*),Tuple{Vector{Float64},Ones{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}}}},OneToInf{Int64}}}}, ::LazyArrays.CachedArray{Float64,1,Vector{Float64},Zeros{Float64,1,Tuple{OneToInf{Int64}}}}) is ambiguous. Candidates:
    ldiv!(F::InfiniteLinearAlgebra.QLProduct, b::AbstractVector{T} where T) in InfiniteLinearAlgebra at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/src/infql.jl:282
    ldiv!(A::Factorization, x::LayoutVector{T} where T) in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/RffWD/src/ldiv.jl:117
  Possible fix, define
    ldiv!(::InfiniteLinearAlgebra.QLProduct, ::LayoutVector{T} where T)
  Stacktrace:
   [1] \(F::InfiniteLinearAlgebra.QLProduct{Float64,Tuple{LowerHessenbergQ{Float64,Fill{QLPackedQ{Float64,Matrix{Float64},Vector{Float64}},1,Tuple{OneToInf{Int64}}}}},LowerTriangular{Float64,BandedMatrix{Float64,ApplyArray{Float64,2,typeof(hcat),Tuple{Vector{Float64},ApplyArray{Float64,2,typeof(*),Tuple{Vector{Float64},Ones{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}}}},OneToInf{Int64}}}}, B::ApplyArray{Float64,1,typeof(vcat),Tuple{Float64,Zeros{Float64,1,Tuple{OneToInf{Int64}}}}})
     @ LinearAlgebra /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:104
   [2] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:166
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:165
   [5] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [6] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:6
  
solve with QL: Error During Test at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:178
  Test threw exception
  Expression: (L * (L \ b))[1:10] ≈ [1; zeros(9)]
  MethodError: \(::LowerTriangular{Float64,BandedMatrix{Float64,ApplyArray{Float64,2,typeof(hcat),Tuple{Matrix{Float64},ApplyArray{Float64,2,typeof(*),Tuple{Vector{Float64},Ones{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}}}},OneToInf{Int64}}}, ::LazyArrays.CachedArray{Float64,1,Vector{Float64},Zeros{Float64,1,Tuple{OneToInf{Int64}}}}) is ambiguous. Candidates:
    \(A::LowerTriangular{T,var"#s170"} where var"#s170"<:LayoutMatrix{T} where T, x::AbstractVector{T} where T) in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/RffWD/src/ldiv.jl:119
    \(x::AbstractMatrix{T} where T, A::LayoutVector{T} where T) in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/RffWD/src/ldiv.jl:122
    \(A::Union{LowerTriangular, UpperTriangular}, B::AbstractVector{T} where T) in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/triangular.jl:2050
  Possible fix, define
    \(::LowerTriangular{T,var"#s170"} where var"#s170"<:LayoutMatrix{T} where T, ::LayoutVector{T} where T)
  Stacktrace:
   [1] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:178
   [2] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [3] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:165
   [4] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [5] top-level scope
     @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:6
  
solve with QL: Error During Test at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:164
  Got exception outside of a @test
  MethodError: ldiv!(::InfiniteLinearAlgebra.QLProduct{Float64,Tuple{LowerHessenbergQ{Float64,ApplyArray{AbstractMatrix{Float64},1,typeof(vcat),Tuple{Vector{Matrix{Float64}},Fill{QLPackedQ{Float64,Matrix{Float64},Vector{Float64}},1,Tuple{OneToInf{Int64}}}}}}},LowerTriangular{Float64,BandedMatrix{Float64,ApplyArray{Float64,2,typeof(hcat),Tuple{Matrix{Float64},ApplyArray{Float64,2,typeof(*),Tuple{Vector{Float64},Ones{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}}}},OneToInf{Int64}}}}, ::LazyArrays.CachedArray{Float64,1,Vector{Float64},Zeros{Float64,1,Tuple{OneToInf{Int64}}}}) is ambiguous. Candidates:
    ldiv!(F::InfiniteLinearAlgebra.QLProduct, b::AbstractVector{T} where T) in InfiniteLinearAlgebra at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/src/infql.jl:282
    ldiv!(A::Factorization, x::LayoutVector{T} where T) in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/RffWD/src/ldiv.jl:117
  Possible fix, define
    ldiv!(::InfiniteLinearAlgebra.QLProduct, ::LayoutVector{T} where T)
  Stacktrace:
    [1] \(F::InfiniteLinearAlgebra.QLProduct{Float64,Tuple{LowerHessenbergQ{Float64,ApplyArray{AbstractMatrix{Float64},1,typeof(vcat),Tuple{Vector{Matrix{Float64}},Fill{QLPackedQ{Float64,Matrix{Float64},Vector{Float64}},1,Tuple{OneToInf{Int64}}}}}}},LowerTriangular{Float64,BandedMatrix{Float64,ApplyArray{Float64,2,typeof(hcat),Tuple{Matrix{Float64},ApplyArray{Float64,2,typeof(*),Tuple{Vector{Float64},Ones{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}}}},OneToInf{Int64}}}}, B::LazyArrays.CachedArray{Float64,1,Vector{Float64},Zeros{Float64,1,Tuple{OneToInf{Int64}}}})
      @ LinearAlgebra /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:104
    [2] top-level scope
      @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:179
    [3] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
    [4] top-level scope
      @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:165
    [5] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
    [6] top-level scope
      @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:6
    [7] include(fname::String)
      @ Base.MainInclude ./client.jl:443
    [8] top-level scope
      @ ~/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/runtests.jl:226
    [9] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [10] top-level scope
      @ none:6
   [11] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [12] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [13] _start()
      @ Base ./client.jl:484
  
Test Summary:              | Pass  Error  Total
Inf QL                     |   78      3     81
  Toeplitz QLHessenberg    |   43            43
  PertTriToeplitz QL       |    9             9
  Pert Hessenberg Toeplitz |   17            17
  Pert faux-periodic QL    |    6             6
  solve with QL            |    3      3      6
ERROR: LoadError: LoadError: Some tests did not pass: 78 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/test_infql.jl:5
in expression starting at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/ifzpO/test/runtests.jl:226
ERROR: Package InfiniteLinearAlgebra errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
