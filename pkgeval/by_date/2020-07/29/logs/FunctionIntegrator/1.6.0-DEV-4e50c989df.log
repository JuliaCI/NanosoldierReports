Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_u3Oj8G/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_u3Oj8G/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.872420 seconds (1.37 M allocations: 72.610 MiB, 3.82% gc time)
Running: chebyshev_quadrature with k=1
  1.660435 seconds (2.24 M allocations: 128.658 MiB, 3.39% gc time)
Running: chebyshev_quadrature with k=2
  0.288587 seconds (425.06 k allocations: 24.383 MiB)
Running: chebyshev_quadrature with k=3
  0.398505 seconds (544.94 k allocations: 29.871 MiB, 3.89% gc time)
Running: chebyshev_quadrature with k=4
  0.334311 seconds (487.81 k allocations: 26.427 MiB)
Running: jacobi_quadrature with α=β=1
 39.325708 seconds (39.38 M allocations: 3.138 GiB, 9.44% gc time)
Running: laguerre_quadrature with k=1
  3.574044 seconds (3.33 M allocations: 185.562 MiB, 7.49% gc time)
Running: legendre_quadrature
  0.194461 seconds (215.13 k allocations: 12.337 MiB)
Running: lobatto_quadrature
  0.364753 seconds (343.69 k allocations: 20.599 MiB)
Running: radau_quadrature
  0.552470 seconds (326.03 k allocations: 19.593 MiB, 8.23% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.652234 seconds (100.02 M allocations: 1.491 GiB, 0.44% gc time)
Running: rectangle_rule_midpoint.
  0.153192 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 75.147276 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rombergs_method
  0.541876 seconds (752.78 k allocations: 43.341 MiB, 5.95% gc time)
Running: simpsons_rule
  0.039178 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.101983 seconds (113.16 k allocations: 5.981 MiB)
Running: trapezoidal_rule
  0.304883 seconds (1.52 M allocations: 25.804 MiB, 5.73% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.087959 seconds (32.65 k allocations: 1.944 MiB)
Running: chebyshev_quadrature with k=1
  0.509443 seconds (275.99 k allocations: 14.003 MiB, 6.48% gc time)
Running: chebyshev_quadrature with k=2
  0.171216 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.170070 seconds (105.23 k allocations: 3.649 MiB)
Running: chebyshev_quadrature with k=4
  0.170290 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  2.459156 seconds (536.42 k allocations: 163.515 MiB, 24.06% gc time)
Running: legendre_quadrature
  0.174888 seconds (62.48 k allocations: 3.489 MiB)
Running: lobatto_quadrature
  0.025031 seconds (16.80 k allocations: 1.039 MiB)
Running: radau_quadrature
  0.025376 seconds (16.79 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 27.809890 seconds (471.41 M allocations: 7.025 GiB, 1.83% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.283632 seconds (476.96 M allocations: 7.107 GiB, 1.88% gc time)
Running: rombergs_method
  0.367555 seconds (360.44 k allocations: 20.328 MiB)
Running: simpsons_rule
  0.000045 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.061904 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.075998 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028229 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.090375 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.096227 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.102577 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.099340 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.282436 seconds (378.99 k allocations: 19.813 MiB)
Running: legendre_quadrature
  0.060390 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000095 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000523 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000512 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.068241 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000034 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023404 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020650 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.056580 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.190299 seconds (240.27 k allocations: 13.550 MiB)
Running: chebyshev_quadrature with k=2
  0.287338 seconds (295.46 k allocations: 16.575 MiB, 14.79% gc time)
Running: chebyshev_quadrature with k=3
  0.290031 seconds (275.42 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.193039 seconds (275.45 k allocations: 14.908 MiB)
Running: jacobi_quadrature with α=β=1
  2.691426 seconds (465.76 k allocations: 164.215 MiB, 3.20% gc time)
Running: legendre_quadrature
  0.154537 seconds (193.01 k allocations: 11.105 MiB)
Running: lobatto_quadrature
  0.198209 seconds (204.21 k allocations: 11.813 MiB, 8.37% gc time)
Running: radau_quadrature
  0.184795 seconds (204.21 k allocations: 11.811 MiB)
Running: rectangle_rule_left
  1.114386 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.025526 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.105345 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.125339 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.029227 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.038364 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.028225 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.057980 seconds (101.41 k allocations: 3.076 MiB, 31.41% gc time)
Running: chebyshev_quadrature with k=1
  0.197197 seconds (247.36 k allocations: 13.598 MiB)
Running: chebyshev_quadrature with k=2
  0.210455 seconds (303.09 k allocations: 16.576 MiB)
Running: chebyshev_quadrature with k=3
  0.233752 seconds (282.83 k allocations: 14.999 MiB, 8.76% gc time)
Running: chebyshev_quadrature with k=4
  0.203535 seconds (282.87 k allocations: 15.012 MiB)
Running: hermite_quadrature with k=2
 15.490905 seconds (22.12 M allocations: 1.147 GiB, 9.60% gc time)
Running: jacobi_quadrature with α=β=1
  0.621372 seconds (475.79 k allocations: 50.443 MiB, 27.34% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.269772 seconds (288.36 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.181710 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.253981 seconds (225.72 k allocations: 37.631 MiB, 7.24% gc time)
Running: radau_quadrature
  0.225159 seconds (222.32 k allocations: 30.297 MiB, 6.06% gc time)
Running: rectangle_rule_left
  0.030167 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.028849 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026697 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.146998 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.037981 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.045691 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.032551 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.060979 seconds (61.52 k allocations: 2.360 MiB, 27.26% gc time)
Running: chebyshev_quadrature with k=1
  0.210970 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.248507 seconds (297.81 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.250199 seconds (277.69 k allocations: 14.770 MiB, 8.22% gc time)
Running: chebyshev_quadrature with k=4
  0.219406 seconds (277.72 k allocations: 14.772 MiB)
Running: hermite_quadrature with k=2
  0.171774 seconds (177.72 k allocations: 10.161 MiB)
Running: jacobi_quadrature with α=β=1
 10.100265 seconds (468.35 k allocations: 1.176 GiB, 15.05% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.219260 seconds (283.22 k allocations: 15.696 MiB)
Running: legendre_quadrature
  0.152005 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.196627 seconds (216.09 k allocations: 23.336 MiB)
Running: radau_quadrature
  0.175617 seconds (215.23 k allocations: 21.263 MiB, 9.82% gc time)
Running: rectangle_rule_left
  0.020913 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.020813 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.019138 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.089984 seconds (138.22 k allocations: 7.926 MiB)
Running: simpsons_rule
  0.026946 seconds (33.50 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.030630 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.023641 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025458 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.195422 seconds (240.82 k allocations: 13.568 MiB)
Running: chebyshev_quadrature with k=2
  0.208721 seconds (296.04 k allocations: 16.653 MiB, 8.79% gc time)
Running: chebyshev_quadrature with k=3
  0.167029 seconds (276.02 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.168234 seconds (276.05 k allocations: 14.887 MiB)
Running: jacobi_quadrature with α=β=1
  3.197189 seconds (466.40 k allocations: 195.250 MiB, 3.79% gc time)
Running: legendre_quadrature
  0.168366 seconds (193.57 k allocations: 11.142 MiB, 8.55% gc time)
Running: lobatto_quadrature
  0.176912 seconds (204.78 k allocations: 11.843 MiB)
Running: radau_quadrature
  0.183364 seconds (204.78 k allocations: 11.861 MiB)
Running: rectangle_rule_left
  0.306926 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.026711 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.118269 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.134875 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.030307 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.041751 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.033503 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037064 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.216788 seconds (241.39 k allocations: 13.512 MiB, 10.14% gc time)
Running: chebyshev_quadrature with k=2
  0.242073 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.217336 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.227158 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  2.483640 seconds (467.06 k allocations: 149.919 MiB, 8.85% gc time)
Running: legendre_quadrature
  0.125060 seconds (194.15 k allocations: 11.151 MiB)
Running: lobatto_quadrature
  0.161210 seconds (205.35 k allocations: 11.873 MiB)
Running: radau_quadrature
  0.165400 seconds (205.35 k allocations: 11.860 MiB)
Running: rectangle_rule_left
  1.163786 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.026624 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.150206 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.158497 seconds (141.22 k allocations: 8.120 MiB, 13.64% gc time)
Running: simpsons_rule
  0.033059 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.042000 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.031736 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.186438 seconds (152.91 k allocations: 9.087 MiB)
Running: chebyshev_quadrature with k=1
  0.166026 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.157449 seconds (127.17 k allocations: 3.998 MiB)
Running: chebyshev_quadrature with k=3
  0.158809 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.160360 seconds (95.28 k allocations: 3.421 MiB)
Running: jacobi_quadrature with α=β=1
  0.731311 seconds (510.01 k allocations: 169.320 MiB, 5.65% gc time)
Running: legendre_quadrature
  0.102214 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000092 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.174640 seconds (590.00 M allocations: 8.792 GiB, 4.35% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 51.221776 seconds (592.75 M allocations: 8.833 GiB, 4.20% gc time)
Running: rombergs_method
  0.123740 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000045 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026686 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022222 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.694882 seconds (629.34 M allocations: 9.388 GiB, 6.23% gc time)
Running: chebyshev_quadrature with k=1
  0.541747 seconds (439.23 k allocations: 24.270 MiB)
Running: chebyshev_quadrature with k=2
 14.174236 seconds (496.60 k allocations: 4.042 GiB, 3.89% gc time)
Running: chebyshev_quadrature with k=3
  7.156283 seconds (290.51 k allocations: 1.643 GiB, 4.18% gc time)
Running: chebyshev_quadrature with k=4
  8.936277 seconds (290.55 k allocations: 2.262 GiB, 2.59% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 63.131891 seconds (505.32 k allocations: 13.255 GiB, 2.98% gc time)
Running: legendre_quadrature.
  5.959341 seconds (232.91 k allocations: 1.976 GiB, 1.88% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.957818 seconds (8.24 M allocations: 13.384 GiB, 3.74% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.894876 seconds (7.24 M allocations: 13.369 GiB, 3.31% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.160964 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.146247 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.745139 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.117089 seconds (456.68 k allocations: 153.722 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.044667 seconds (600.04 M allocations: 8.943 GiB, 9.03% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.734323 seconds (600.05 M allocations: 8.944 GiB, 7.72% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.513070 seconds (600.04 M allocations: 8.943 GiB, 8.92% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.066190 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.250379 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.255461 seconds (284.13 k allocations: 15.177 MiB)
Running: chebyshev_quadrature with k=3
  0.230847 seconds (260.63 k allocations: 13.459 MiB)
Running: chebyshev_quadrature with k=4
  0.252854 seconds (260.66 k allocations: 13.522 MiB)
Running: jacobi_quadrature with α=β=1
  0.446709 seconds (405.36 k allocations: 35.848 MiB)
Running: laguerre_quadrature with k=2
  0.295444 seconds (187.98 k allocations: 10.872 MiB)
Running: legendre_quadrature
  0.148681 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.060080 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.038142 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.060347 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.052898 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.056021 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.220609 seconds (171.16 k allocations: 9.762 MiB)
Running: simpsons_rule
  0.002053 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.048495 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.213678 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002265 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.110428 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.117647 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.127250 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.126547 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.811010 seconds (402.16 k allocations: 906.528 MiB, 6.27% gc time)
Running: legendre_quadrature
  0.073608 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000218 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000164 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.432334 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000432 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.494660 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060047 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000788 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000871 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.109196 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.121391 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.121207 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.150322 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.344235 seconds (388.44 k allocations: 253.776 MiB)
Running: legendre_quadrature
  0.089021 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000275 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.377587 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001107 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.786370 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.068053 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001701 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
