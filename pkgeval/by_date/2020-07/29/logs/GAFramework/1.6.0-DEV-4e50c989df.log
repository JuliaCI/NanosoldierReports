Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_f65i3f/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_f65i3f/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172263531824157
curgen: 20 fitness: 0.2172330479387626
curgen: 30 fitness: 0.2172330479387626
curgen: 40 fitness: 0.2172330479387626
curgen: 50 fitness: 0.2172330479387626
CoordinateCreature{Vector{Float64}}([0.22266267400346812], -0.2172330479387626) 0.22266267400346812 -0.2172330479387626
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579830403115677
curgen: 100 fitness: 3.2581171096178507
curgen: 150 fitness: 3.2582776569425054
curgen: 200 fitness: 3.2582776569425054
curgen: 250 fitness: 3.2583258152122965
curgen: 300 fitness: 3.2583828616211226
curgen: 350 fitness: 3.2583928287126303
curgen: 400 fitness: 3.2584313604399253
curgen: 450 fitness: 3.2584482739367036
curgen: 500 fitness: 3.258454838222789
CoordinateCreature{Vector{Float64}}([-0.2230459839995719, 0.22244985262308933, -0.2229322085402524, 0.22244993831667229, -0.2227249189053318, 0.2226988892852881, 0.22258780451820123, 0.2227972728275272, -0.22234131583260097, 0.22254514764964917, 0.2223375520418308, -0.2221261565189803, 0.22215409973050984, -0.22255884921624222, -0.22213969644681142], -3.258454838222789) [-0.2230459839995719, 0.22244985262308933, -0.2229322085402524, 0.22244993831667229, -0.2227249189053318, 0.2226988892852881, 0.22258780451820123, 0.2227972728275272, -0.22234131583260097, 0.22254514764964917, 0.2223375520418308, -0.2221261565189803, 0.22215409973050984, -0.22255884921624222, -0.22213969644681142] -3.258454838222789
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018600223139912941
curgen: 100 fitness: -0.0018600223139912941
curgen: 150 fitness: -0.0018004685754533511
curgen: 200 fitness: -0.0007527627094248146
curgen: 250 fitness: -0.0007527627094248146
curgen: 300 fitness: -0.0007527627094248146
curgen: 350 fitness: -0.0005539625206836263
curgen: 400 fitness: -0.0005539625206836263
curgen: 450 fitness: -0.0004839361016308885
curgen: 500 fitness: -0.0004839361016308885
CoordinateCreature{Vector{Float64}}([0.00036985540295697214, 0.00033494673040314837, -0.0005381306207233559, -8.440921493078424e-5, -4.8674500425987394e-5, 0.0009775262883856858, -0.00035266346946694917, -0.0002906767344690033, -0.00022730172415966958, -0.00032849824228985006, -0.00038336415753194514, -0.00021638007863724424, -0.00047570460144473643, -0.0003815131156376637, 3.999098272732026e-5], 0.0004839361016308885) [0.00036985540295697214, 0.00033494673040314837, -0.0005381306207233559, -8.440921493078424e-5, -4.8674500425987394e-5, 0.0009775262883856858, -0.00035266346946694917, -0.0002906767344690033, -0.00022730172415966958, -0.00032849824228985006, -0.00038336415753194514, -0.00021638007863724424, -0.00047570460144473643, -0.0003815131156376637, 3.999098272732026e-5] 0.0004839361016308885
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
