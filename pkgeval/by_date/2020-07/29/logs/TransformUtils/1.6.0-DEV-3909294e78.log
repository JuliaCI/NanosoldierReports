Julia Version 1.6.0-DEV.549
Commit 3909294e78 (2020-07-28 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_PZz8Pt/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_PZz8Pt/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03362241690615922 -0.021440850952442; -0.03362241690615922 0.0 0.07717537652583968; 0.021440850952442 -0.07717537652583968 0.0])
dAA = so3([0.0 -0.09984936465695486 0.12776727519856312; 0.09984936465695486 0.0 -0.06345091232124815; -0.12776727519856312 0.06345091232124815 0.0])
dAA = so3([0.0 -0.09623380651243227 -0.09697299662673474; 0.09623380651243227 0.0 0.03594827053474248; 0.09697299662673474 -0.03594827053474248 0.0])
dAA = Quaternion(0.9970023660493351, [0.022220073636762212, 0.0702727458354074, -0.023543398487834464])
dAA = SO3([0.9869481707237244 0.13748966117860928 -0.08384450711934137; -0.14284780132523206 0.9878236216601757 -0.06163601339088071; 0.07434927008142776 0.07280855416202839 0.9945708121995105])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9191195343229565 -0.21687707352652272 0.3289127796308968; 0.2667504000034402 0.9569491135414046 -0.1144229792931677; -0.28993707200693797 0.1929060109765667 0.9374026697237172]), [-0.7717537652583968, -0.21440850952442, -0.3362241690615922])
xj = SE3(SO3([0.9320227824753773 0.12609440118211707 0.3397554045742009; -0.08987353339552759 0.9886514911853869 -0.1203784738726735; -0.35107873894877 0.0816604614696382 0.9327782630886652]), [-0.35948270534742477, -0.9697299662673473, 0.9623380651243226])
Dx = SE3(SO3([0.9344572864388699 0.35594261293569673 0.009717824746963144; -0.3558639707062813 0.9344949772514002 -0.008942697862709625; -0.012264345659793674 0.004898345477148236 0.9999127922159629]), [-0.1990572481158045, -0.5617158788404929, 1.4393030568095464])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
