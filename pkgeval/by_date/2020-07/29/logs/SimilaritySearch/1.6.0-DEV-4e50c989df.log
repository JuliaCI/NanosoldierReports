Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataStructures ───── v0.17.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_TArdEv/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_TArdEv/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(24, 0.012701273f0), Item(11, 0.014166832f0), Item(22, 0.019946337f0), Item(23, 0.023202896f0)])
Vsorted = Item[Item(24, 0.012701273f0), Item(11, 0.014166832f0), Item(22, 0.019946337f0), Item(23, 0.023202896f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00585338274637858, 0.005684399604797363, 301.0, 49.076253440231085))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004598204294840495, 0.006083265940348307, 301.0, 71.17431366443634))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037979841232299804, 0.005182894070943197, 301.0, 40.01718008518219))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005558363596598307, 0.008074331283569335, 301.0, 8.920421895454638))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.006001901626586914, 0.004948035875956217, 301.0, 44.50868917442858))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00021649996439615887, 0.0001421689987182617, 301.0, 173.44465249031782))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 0.00010441144307454427, 0.01418763001759847, 300.0, 28.585614224430174)
p = PerformanceResult(1.0, 1.0, 1.0, 7.166067759195963e-5, 4.783471425374349e-5, 300.0, 28.585614224430174)
p = PerformanceResult(1.0, 1.0, 1.0, 0.005596001942952474, 0.005841573079427083, 300.0, 1.6581072968633634)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00011844105190700956, 1.9868214925130207e-5, 300.0, 1.6581072968633634)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 0.00010441144307454427, 0.01418763001759847, 300.0, 28.585614224430174), PerformanceResult(1.0, 1.0, 1.0, 7.166067759195963e-5, 4.783471425374349e-5, 300.0, 28.585614224430174), PerformanceResult(1.0, 1.0, 1.0, 0.005596001942952474, 0.005841573079427083, 300.0, 1.6581072968633634), PerformanceResult(1.0, 1.0, 1.0, 0.00011844105190700956, 1.9868214925130207e-5, 300.0, 1.6581072968633634))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009701697031656902, 0.004311561584472656, 347.56666666666666, 28571.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.010612146059672038, 0.003812098503112793, 302.8333333333333, 6962.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5645891825358072e-5, 1.4472007751464844e-5, 95.2, 49.03825194016099))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 3.905296325683594e-5, 1.3764699300130209e-5, 83.93333333333334, 71.25384366512299))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6909510294596353e-5, 1.4201800028483074e-5, 90.83333333333333, 39.965455770492554))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.18014144897461e-5, 0.00018550554911295574, 95.76666666666667, 44.45726655609906))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7833333333333331, 0.7833333333333331, 0.7833333333333331, 5.7307879130045575e-5, 0.0001493056615193685, 70.2, 184.65326773375273))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-29T20:51:07.814
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.903, 0.897, 0.8987142857142857, 2.543926239013672e-5, 2.619028091430664e-5, 151.9, 52.23699560249224))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5303363800048827e-5, 2.0289421081542967e-5, 155.17, 0.0))
*** advance 1 from 1000; 2020-07-29T20:51:08.688
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9059999999999999, 0.9, 0.9017142857142857, 3.8790702819824216e-5, 3.0372142791748047e-5, 151.02, 77.43217654619366))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 4.1651725769042966e-5, 3.5400390625e-5, 154.42, 0.0))
*** advance 1 from 1000; 2020-07-29T20:51:09.573
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.978, 0.978, 0.978, 2.657175064086914e-5, 3.168821334838867e-5, 167.43, 41.9174517551437))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9242038726806642e-5, 2.71296501159668e-5, 172.29, 0.0))
*** advance 1 from 1000; 2020-07-29T20:51:10.702
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.976, 0.976, 0.976, 0.00011331796646118165, 0.0009004116058349609, 166.71, 46.53768973471597))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00018475770950317382, 0.0008570313453674317, 171.37, 0.0))
*** advance 1 from 1000; 2020-07-29T20:51:11.767
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9560000000000002, 0.9560000000000002, 0.9560000000000002, 0.00011922836303710937, 0.0007738304138183593, 164.55, 197.9639754574746))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018054723739624023, 0.0008060193061828613, 169.26, 0.0))
*** advance 1 from 1000; 2020-07-29T20:51:13.090
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.903, 0.897, 0.8987142857142857, 3.790140151977539e-5, 7.951021194458008e-5, 151.9, 52.24740043282509))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.237485885620117e-5, 7.432937622070312e-5, 155.17, 0.013884291314752772))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:15.111
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7610000000000003, 0.7610000000000003, 0.7610000000000003, 0.0016421771049499512, 0.00010030031204223633, 202.57, 184.26666851341724))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:16.525
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7759999999999999, 0.7759999999999999, 0.7759999999999999, 0.002362189292907715, 7.766962051391601e-5, 208.52, 103.90555779635906))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:17.781
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.655, 0.655, 0.655, 0.0014099812507629395, 8.074045181274414e-5, 273.99, 2.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:18.578
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.95, 0.95, 0.95, 0.0017281961441040039, 1.9638538360595704e-5, 222.6, 602.6000206917524))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:19.513
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5779999999999998, 0.5779999999999998, 0.578, 0.0015478920936584472, 0.00045042991638183594, 254.03, 2346.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:20.437
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.398, 0.398, NaN, 0.0015880537033081054, 0.00036071062088012697, 247.22, 3654.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-29T20:51:21.697
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5839999999999999, 0.5839999999999999, 0.5839999999999999, 0.001528303623199463, 3.390073776245117e-5, 245.43, 2388.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0786516853932584, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540006868131872,"seconds":3.779307007789612e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.34375,"distances_sum":538.0986666455865}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0786516853932584,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9540006868131872,"seconds":3.779307007789612e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.34375,"distances_sum":538.0986666455865}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0786516853932584,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9540006868131872,"seconds":3.779307007789612e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.34375,"distances_sum":538.0986666455865}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0786516853932584,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9540006868131872,"seconds":3.779307007789612e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.34375,"distances_sum":538.0986666455865}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.953445352242947, conf: {"restarts":9}, perf: {"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.839548349380493e-5,"exhaustive_search_seconds":5.366280674934387e-6,"evaluations":50.6796875,"distances_sum":298.6667767353356}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.953445352242947,"state":{"restarts":9},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.839548349380493e-5,"exhaustive_search_seconds":5.366280674934387e-6,"evaluations":50.6796875,"distances_sum":298.6667767353356}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.953445352242947,"state":{"restarts":9},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.839548349380493e-5,"exhaustive_search_seconds":5.366280674934387e-6,"evaluations":50.6796875,"distances_sum":298.6667767353356}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.953445352242947,"state":{"restarts":9},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.839548349380493e-5,"exhaustive_search_seconds":5.366280674934387e-6,"evaluations":50.6796875,"distances_sum":298.6667767353356}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555544,"state":{"restarts":9},"perf":{"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":3.726780414581299e-5,"exhaustive_search_seconds":2.300739288330078e-5,"evaluations":119.453125,"distances_sum":124.43842335510999}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8680555555555544,"state":{"restarts":9},"perf":{"precision":0.8680555555555544,"recall":0.8680555555555544,"f1":0.8680555555555544,"seconds":3.726780414581299e-5,"exhaustive_search_seconds":2.300739288330078e-5,"evaluations":119.453125,"distances_sum":124.43842335510999}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555541, conf: {"restarts":1}, perf: {"precision":0.8524305555555541,"recall":0.8524305555555541,"f1":0.8524305555555541,"seconds":6.240792572498322e-5,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":127.328125,"distances_sum":56.875943465624005}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888877, conf: {"restarts":23}, perf: {"precision":0.8498263888888877,"recall":0.8498263888888877,"f1":null,"seconds":0.0002685859799385071,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":320.234375,"distances_sum":57.133809190709144}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666657, conf: {"restarts":4}, perf: {"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":null,"seconds":7.617101073265076e-5,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":150.828125,"distances_sum":56.933909722138196}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8541666666666657,"state":{"restarts":4},"perf":{"precision":0.8541666666666657,"recall":0.8541666666666657,"f1":null,"seconds":7.617101073265076e-5,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":150.828125,"distances_sum":56.933909722138196}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":18}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00017673708498477936,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":278.84375,"distances_sum":56.53288331674412}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888877, conf: {"restarts":8}, perf: {"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":0.00011326931416988373,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":189.8671875,"distances_sum":56.94583024689928}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555544,"state":{"restarts":18},"perf":{"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00017673708498477936,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":278.84375,"distances_sum":56.53288331674412}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555544,"state":{"restarts":18},"perf":{"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00017673708498477936,"exhaustive_search_seconds":0.0004099365323781967,"evaluations":278.84375,"distances_sum":56.53288331674412}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(18), SatNeighborhood(32), 2020-07-29T20:51:28.916
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6209, 0.025203818f0), Item(1328, 0.042777095f0), Item(2152, 0.047691688f0), Item(3625, 0.04812613f0), Item(3169, 0.049812004f0), Item(426, 0.052067198f0), Item(8837, 0.058995456f0), Item(9090, 0.061190523f0), Item(9741, 0.061277293f0), Item(9556, 0.061866675f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.063711911357341,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9628376831501835,"seconds":0.0034965183585882187,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4609375,"distances_sum":536.086007989943}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.063711911357341,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9628376831501835,"seconds":0.0034965183585882187,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4609375,"distances_sum":536.086007989943}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.128116514440879,"state":{"bsize":3},"perf":{"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":1.6959384083747864e-5,"exhaustive_search_seconds":7.640570402145386e-6,"evaluations":31.6484375,"distances_sum":281.55713457241654}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.128116514440879,"state":{"bsize":3},"perf":{"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":1.6959384083747864e-5,"exhaustive_search_seconds":7.640570402145386e-6,"evaluations":31.6484375,"distances_sum":281.55713457241654}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.410677618069816, conf: {"bsize":4}, perf: {"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":2.8695911169052124e-5,"exhaustive_search_seconds":2.8273090720176697e-5,"evaluations":60.875,"distances_sum":118.67182278912514}, best_list's length: 5, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.438102583879676, conf: {"bsize":2}, perf: {"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":3.2749027013778687e-5,"exhaustive_search_seconds":2.8273090720176697e-5,"evaluations":60.7734375,"distances_sum":119.8998215822503}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.438102583879676,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":3.2749027013778687e-5,"exhaustive_search_seconds":2.8273090720176697e-5,"evaluations":60.7734375,"distances_sum":119.8998215822503}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.438102583879676,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":3.2749027013778687e-5,"exhaustive_search_seconds":2.8273090720176697e-5,"evaluations":60.7734375,"distances_sum":119.8998215822503}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.438102583879676,"state":{"bsize":2},"perf":{"precision":0.9288194444444435,"recall":0.9288194444444435,"f1":0.9288194444444435,"seconds":3.2749027013778687e-5,"exhaustive_search_seconds":2.8273090720176697e-5,"evaluations":60.7734375,"distances_sum":119.8998215822503}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 86.1091900518686, conf: {"bsize":12}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":9.2359259724617e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":117.484375,"distances_sum":53.27937222830951}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 91.32265349329569, conf: {"bsize":10}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":9.049288928508759e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":110.703125,"distances_sum":53.27937222830951}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.31386861313868, conf: {"bsize":4}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":8.136406540870667e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":102.75,"distances_sum":53.31480689905584}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.31386861313868,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":8.136406540870667e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":102.75,"distances_sum":53.31480689905584}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.31386861313868,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":8.136406540870667e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":102.75,"distances_sum":53.31480689905584}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.31386861313868,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":8.136406540870667e-5,"exhaustive_search_seconds":0.0004112422466278076,"evaluations":102.75,"distances_sum":53.31480689905584}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(4), SatNeighborhood(32), 2020-07-29T20:51:33.730
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6559, 0.02728704f0), Item(6993, 0.038882986f0), Item(4413, 0.040301297f0), Item(1219, 0.040798422f0), Item(7845, 0.043614324f0), Item(5069, 0.048036024f0), Item(3246, 0.049176257f0), Item(490, 0.04935279f0), Item(9586, 0.05077769f0), Item(22, 0.05167995f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
