Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_pgRAuq/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_pgRAuq/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.065475 seconds (1.34 M allocations: 71.207 MiB, 4.92% gc time)
Running: chebyshev_quadrature with k=1
  1.925261 seconds (2.23 M allocations: 126.012 MiB, 2.56% gc time)
Running: chebyshev_quadrature with k=2
  0.302817 seconds (430.37 k allocations: 24.301 MiB)
Running: chebyshev_quadrature with k=3
  0.396684 seconds (556.61 k allocations: 29.978 MiB, 3.86% gc time)
Running: chebyshev_quadrature with k=4
  0.378090 seconds (499.19 k allocations: 26.553 MiB)
Running: jacobi_quadrature with α=β=1
 41.926630 seconds (39.85 M allocations: 3.122 GiB, 8.42% gc time)
Running: laguerre_quadrature with k=1
  3.030700 seconds (3.30 M allocations: 180.671 MiB, 2.37% gc time)
Running: legendre_quadrature
  0.225168 seconds (214.28 k allocations: 12.057 MiB)
Running: lobatto_quadrature
  0.351792 seconds (339.97 k allocations: 20.080 MiB)
Running: radau_quadrature
  0.332903 seconds (322.26 k allocations: 19.086 MiB, 14.34% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.335703 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rectangle_rule_midpoint.
  0.185827 seconds (172.93 k allocations: 3.818 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.319957 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time)
Running: simpsons_rule
  0.043957 seconds (46.42 k allocations: 2.041 MiB)
Running: simpsons38_rule
  0.096146 seconds (110.37 k allocations: 5.741 MiB)
Running: trapezoidal_rule
  0.319398 seconds (1.51 M allocations: 25.648 MiB, 8.60% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.104458 seconds (53.15 k allocations: 3.104 MiB)
Running: chebyshev_quadrature with k=1
  0.482715 seconds (278.50 k allocations: 13.977 MiB, 3.84% gc time)
Running: chebyshev_quadrature with k=2
  0.151198 seconds (115.70 k allocations: 3.759 MiB)
Running: chebyshev_quadrature with k=3
  0.175517 seconds (105.05 k allocations: 3.606 MiB)
Running: chebyshev_quadrature with k=4
  0.163730 seconds (87.66 k allocations: 3.251 MiB)
Running: jacobi_quadrature with α=β=1
  2.736287 seconds (535.47 k allocations: 163.101 MiB, 6.62% gc time)
Running: legendre_quadrature
  0.190457 seconds (61.97 k allocations: 3.409 MiB)
Running: lobatto_quadrature
  0.024714 seconds (16.27 k allocations: 1018.628 KiB)
Running: radau_quadrature
  0.030744 seconds (16.25 k allocations: 1018.331 KiB)
Running: rectangle_rule_left
 32.845168 seconds (471.41 M allocations: 7.025 GiB, 3.73% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.040208 seconds (476.96 M allocations: 7.107 GiB, 3.73% gc time)
Running: simpsons_rule
  0.000073 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.061952 seconds (19.44 k allocations: 1.153 MiB)
Running: trapezoidal_rule
  0.055240 seconds (17.89 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029238 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.094261 seconds (2.45 k allocations: 115.719 KiB)
Running: chebyshev_quadrature with k=2
  0.094836 seconds (2.73 k allocations: 124.625 KiB)
Running: chebyshev_quadrature with k=3
  0.100779 seconds (3.18 k allocations: 138.094 KiB)
Running: chebyshev_quadrature with k=4
  0.111135 seconds (3.19 k allocations: 138.250 KiB)
Running: jacobi_quadrature with α=β=1
  0.423603 seconds (386.51 k allocations: 19.843 MiB)
Running: legendre_quadrature
  0.059697 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000156 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000131 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000561 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000386 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000539 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000067 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023889 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020415 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.062054 seconds (74.53 k allocations: 4.251 MiB)
Running: chebyshev_quadrature with k=1
  0.220984 seconds (241.05 k allocations: 13.300 MiB)
Running: chebyshev_quadrature with k=2
  0.279838 seconds (298.83 k allocations: 16.433 MiB, 9.59% gc time)
Running: chebyshev_quadrature with k=3
  0.325754 seconds (280.63 k allocations: 14.961 MiB)
Running: chebyshev_quadrature with k=4
  0.265522 seconds (280.64 k allocations: 14.905 MiB)
Running: jacobi_quadrature with α=β=1
  1.915311 seconds (473.05 k allocations: 164.131 MiB, 3.58% gc time)
Running: legendre_quadrature
  0.275937 seconds (192.27 k allocations: 10.876 MiB)
Running: lobatto_quadrature
  0.218625 seconds (203.73 k allocations: 11.587 MiB, 7.35% gc time)
Running: radau_quadrature
  0.204684 seconds (203.72 k allocations: 11.623 MiB)
Running: rectangle_rule_left
  1.235297 seconds (19.30 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.025950 seconds (25.15 k allocations: 1.548 MiB)
Running: rectangle_rule_right
  1.430461 seconds (17.80 k allocations: 1.062 MiB)
Running: simpsons_rule
  0.041639 seconds (28.13 k allocations: 1.725 MiB)
Running: simpsons38_rule
  0.051360 seconds (43.20 k allocations: 2.666 MiB)
Running: trapezoidal_rule
  0.028085 seconds (44.41 k allocations: 1.758 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048851 seconds (236.24 k allocations: 5.064 MiB)
Running: chebyshev_quadrature with k=1
  0.238262 seconds (248.18 k allocations: 13.385 MiB)
Running: chebyshev_quadrature with k=2
  0.278282 seconds (306.58 k allocations: 16.465 MiB)
Running: chebyshev_quadrature with k=3
  0.259432 seconds (288.04 k allocations: 14.986 MiB)
Running: chebyshev_quadrature with k=4
  0.283972 seconds (288.05 k allocations: 15.030 MiB, 9.46% gc time)
Running: hermite_quadrature with k=2
 19.659268 seconds (22.60 M allocations: 1.154 GiB, 7.35% gc time)
Running: jacobi_quadrature with α=β=1
  0.616259 seconds (483.14 k allocations: 50.361 MiB, 14.97% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.339802 seconds (287.63 k allocations: 15.571 MiB, 10.62% gc time)
Running: legendre_quadrature
  0.216494 seconds (199.34 k allocations: 11.222 MiB)
Running: lobatto_quadrature
  0.337495 seconds (225.27 k allocations: 37.401 MiB, 11.08% gc time)
Running: radau_quadrature
  0.273033 seconds (221.87 k allocations: 30.063 MiB)
Running: rectangle_rule_left
  0.030448 seconds (22.43 k allocations: 1.305 MiB)
Running: rectangle_rule_midpoint
  0.029751 seconds (27.11 k allocations: 1.643 MiB)
Running: rectangle_rule_right
  0.026733 seconds (19.02 k allocations: 1.122 MiB)
Running: simpsons_rule
  0.040937 seconds (40.34 k allocations: 2.074 MiB)
Running: simpsons38_rule
  0.045586 seconds (58.55 k allocations: 3.069 MiB)
Running: trapezoidal_rule
  0.032543 seconds (30.75 k allocations: 1.698 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041844 seconds (46.77 k allocations: 2.072 MiB)
Running: chebyshev_quadrature with k=1
  0.289093 seconds (243.30 k allocations: 13.159 MiB, 8.83% gc time)
Running: chebyshev_quadrature with k=2
  0.320197 seconds (301.22 k allocations: 16.223 MiB)
Running: chebyshev_quadrature with k=3
  0.285647 seconds (282.93 k allocations: 14.771 MiB)
Running: chebyshev_quadrature with k=4
  0.316535 seconds (282.94 k allocations: 14.771 MiB, 9.92% gc time)
Running: hermite_quadrature with k=2
  0.221409 seconds (177.41 k allocations: 9.962 MiB)
Running: jacobi_quadrature with α=β=1
 11.007610 seconds (475.69 k allocations: 1.176 GiB, 17.64% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.286232 seconds (282.52 k allocations: 15.370 MiB)
Running: legendre_quadrature
  0.212181 seconds (194.53 k allocations: 11.000 MiB, 7.38% gc time)
Running: lobatto_quadrature
  0.237963 seconds (215.66 k allocations: 23.113 MiB)
Running: radau_quadrature
  0.270004 seconds (214.81 k allocations: 21.040 MiB, 5.17% gc time)
Running: rectangle_rule_left
  0.035097 seconds (20.04 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.032698 seconds (25.91 k allocations: 1.587 MiB)
Running: rectangle_rule_right
  0.027623 seconds (17.81 k allocations: 1.065 MiB)
Running: simpsons_rule
  0.038800 seconds (32.63 k allocations: 1.854 MiB)
Running: simpsons38_rule
  0.041786 seconds (49.13 k allocations: 2.817 MiB)
Running: trapezoidal_rule
  0.039556 seconds (25.48 k allocations: 1.527 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031903 seconds (31.21 k allocations: 1.867 MiB)
Running: chebyshev_quadrature with k=1
  0.237465 seconds (241.59 k allocations: 13.374 MiB)
Running: chebyshev_quadrature with k=2
  0.313177 seconds (299.41 k allocations: 16.546 MiB, 5.46% gc time)
Running: chebyshev_quadrature with k=3
  0.268129 seconds (281.21 k allocations: 14.979 MiB)
Running: chebyshev_quadrature with k=4
  0.322760 seconds (281.22 k allocations: 14.809 MiB)
Running: jacobi_quadrature with α=β=1
  2.219845 seconds (473.68 k allocations: 195.178 MiB, 5.75% gc time)
Running: legendre_quadrature
  0.302039 seconds (192.81 k allocations: 10.904 MiB)
Running: lobatto_quadrature
  0.310051 seconds (204.28 k allocations: 11.615 MiB)
Running: radau_quadrature
  0.324853 seconds (204.27 k allocations: 11.615 MiB, 9.83% gc time)
Running: rectangle_rule_left
  0.356055 seconds (19.87 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.031069 seconds (25.50 k allocations: 1.566 MiB)
Running: rectangle_rule_right
  0.121685 seconds (18.16 k allocations: 1.081 MiB)
Running: simpsons_rule
  0.035732 seconds (28.88 k allocations: 1.757 MiB)
Running: simpsons38_rule
  0.035317 seconds (43.97 k allocations: 2.699 MiB)
Running: trapezoidal_rule
  0.027275 seconds (45.39 k allocations: 1.794 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037691 seconds (31.85 k allocations: 1.819 MiB)
Running: chebyshev_quadrature with k=1
  0.446283 seconds (242.18 k allocations: 13.318 MiB)
Running: chebyshev_quadrature with k=2
  0.469575 seconds (300.03 k allocations: 16.464 MiB, 4.88% gc time)
Running: chebyshev_quadrature with k=3
  0.269451 seconds (281.77 k allocations: 14.902 MiB)
Running: chebyshev_quadrature with k=4
  0.282171 seconds (281.78 k allocations: 14.999 MiB)
Running: jacobi_quadrature with α=β=1
  2.441012 seconds (474.37 k allocations: 149.866 MiB, 6.32% gc time)
Running: legendre_quadrature
  0.235747 seconds (193.41 k allocations: 10.920 MiB)
Running: lobatto_quadrature
  0.243643 seconds (204.88 k allocations: 11.636 MiB)
Running: radau_quadrature
  0.240104 seconds (204.87 k allocations: 11.630 MiB)
Running: rectangle_rule_left
  1.198583 seconds (20.15 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.026981 seconds (25.51 k allocations: 1.567 MiB)
Running: rectangle_rule_right
  1.483356 seconds (18.16 k allocations: 1.080 MiB, 1.21% gc time)
Running: simpsons_rule
  0.039471 seconds (29.63 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.045179 seconds (44.72 k allocations: 2.727 MiB)
Running: trapezoidal_rule
  0.035320 seconds (57.66 k allocations: 1.995 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.202322 seconds (149.37 k allocations: 8.741 MiB)
Running: chebyshev_quadrature with k=1
  0.148220 seconds (91.22 k allocations: 3.263 MiB)
Running: chebyshev_quadrature with k=2
  0.170014 seconds (126.99 k allocations: 3.953 MiB)
Running: chebyshev_quadrature with k=3
  0.171452 seconds (115.57 k allocations: 3.786 MiB)
Running: chebyshev_quadrature with k=4
  0.170587 seconds (95.10 k allocations: 3.381 MiB)
Running: jacobi_quadrature with α=β=1
  2.329018 seconds (509.70 k allocations: 168.978 MiB, 4.05% gc time)
Running: legendre_quadrature
  0.113579 seconds (38.33 k allocations: 2.082 MiB)
Running: lobatto_quadrature
  0.000170 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000136 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.928745 seconds (590.00 M allocations: 8.792 GiB, 3.00% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.714562 seconds (592.75 M allocations: 8.833 GiB, 2.96% gc time)
Running: simpsons_rule
  0.000114 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031135 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022724 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.232168 seconds (565.29 M allocations: 8.433 GiB, 4.30% gc time)
Running: chebyshev_quadrature with k=1
  0.997726 seconds (443.71 k allocations: 24.141 MiB, 4.78% gc time)
Running: chebyshev_quadrature with k=2
 14.772222 seconds (503.85 k allocations: 4.042 GiB, 3.35% gc time)
Running: chebyshev_quadrature with k=3
  6.624995 seconds (295.64 k allocations: 1.643 GiB, 5.16% gc time)
Running: chebyshev_quadrature with k=4
  8.036588 seconds (295.65 k allocations: 2.262 GiB, 2.31% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 62.569778 seconds (511.95 k allocations: 13.255 GiB, 3.71% gc time)
Running: legendre_quadrature.
  6.169679 seconds (231.75 k allocations: 1.976 GiB, 1.58% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.913184 seconds (8.24 M allocations: 13.384 GiB, 3.20% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 64.852216 seconds (7.24 M allocations: 13.369 GiB, 2.15% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.863721 seconds (22.76 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.522794 seconds (31.06 k allocations: 1.878 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.033489 seconds (22.97 k allocations: 1.358 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.883644 seconds (600.04 M allocations: 8.943 GiB, 9.14% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.357762 seconds (600.05 M allocations: 8.943 GiB, 9.41% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.741972 seconds (600.03 M allocations: 8.943 GiB, 8.31% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060936 seconds (128.40 k allocations: 3.622 MiB)
Running: chebyshev_quadrature with k=1
  0.278760 seconds (258.94 k allocations: 13.810 MiB)
Running: chebyshev_quadrature with k=2
  0.298230 seconds (287.51 k allocations: 15.092 MiB)
Running: chebyshev_quadrature with k=3
  0.242104 seconds (265.69 k allocations: 13.454 MiB)
Running: chebyshev_quadrature with k=4
  0.250278 seconds (265.70 k allocations: 13.455 MiB)
Running: jacobi_quadrature with α=β=1
  0.438504 seconds (412.86 k allocations: 35.864 MiB)
Running: laguerre_quadrature with k=2
  0.269382 seconds (187.41 k allocations: 10.657 MiB)
Running: legendre_quadrature
  0.168925 seconds (151.27 k allocations: 8.216 MiB)
Running: lobatto_quadrature
  0.035880 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.033546 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.056025 seconds (19.41 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.047703 seconds (26.02 k allocations: 1.572 MiB)
Running: rectangle_rule_right
  0.049808 seconds (17.92 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.002348 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053696 seconds (80.15 k allocations: 3.398 MiB)
Running: trapezoidal_rule
  0.203922 seconds (2.39 M allocations: 37.694 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001098 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.102201 seconds (2.64 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.104141 seconds (2.92 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=3
  0.117380 seconds (3.36 k allocations: 2.064 MiB)
Running: chebyshev_quadrature with k=4
  0.116600 seconds (3.37 k allocations: 1.505 MiB)
Running: jacobi_quadrature with α=β=1
  6.934868 seconds (409.81 k allocations: 906.509 MiB, 2.30% gc time)
Running: legendre_quadrature
  0.063480 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000295 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000238 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.346988 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000556 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.275822 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000803 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000401 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.155903 seconds (2.53 k allocations: 578.641 KiB)
Running: chebyshev_quadrature with k=2
  0.159785 seconds (2.80 k allocations: 780.672 KiB)
Running: chebyshev_quadrature with k=3
  0.127470 seconds (3.25 k allocations: 689.969 KiB)
Running: chebyshev_quadrature with k=4
  0.110347 seconds (3.26 k allocations: 520.625 KiB)
Running: jacobi_quadrature with α=β=1
  2.693404 seconds (396.01 k allocations: 253.806 MiB, 6.23% gc time)
Running: legendre_quadrature
  0.062136 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000138 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000095 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.859960 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001441 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.044236 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000075 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002139 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
