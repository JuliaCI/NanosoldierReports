Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_xbBJWJ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_xbBJWJ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.683156 seconds (1.27 M allocations: 67.465 MiB, 4.39% gc time)
Running: chebyshev_quadrature with k=1
  1.324872 seconds (2.19 M allocations: 124.174 MiB, 7.78% gc time)
Running: chebyshev_quadrature with k=2
  0.199948 seconds (377.91 k allocations: 23.505 MiB, 5.47% gc time)
Running: chebyshev_quadrature with k=3
  0.239617 seconds (534.68 k allocations: 30.606 MiB, 4.31% gc time)
Running: chebyshev_quadrature with k=4
  0.214037 seconds (493.28 k allocations: 27.441 MiB)
Running: jacobi_quadrature with α=β=1
 32.224098 seconds (41.67 M allocations: 3.197 GiB, 11.65% gc time)
Running: laguerre_quadrature with k=1
  2.102099 seconds (3.33 M allocations: 181.313 MiB, 3.19% gc time)
Running: legendre_quadrature
  0.144663 seconds (215.73 k allocations: 12.104 MiB)
Running: lobatto_quadrature
  0.252716 seconds (337.15 k allocations: 19.768 MiB, 6.87% gc time)
Running: radau_quadrature
  0.201189 seconds (320.24 k allocations: 18.817 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.866157 seconds (19.93 k allocations: 1.171 MiB)
Running: rectangle_rule_midpoint.
  0.089323 seconds (25.45 k allocations: 1.554 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 42.727569 seconds (18.15 k allocations: 1.073 MiB)
Running: simpsons_rule
  0.032724 seconds (43.81 k allocations: 1.987 MiB)
Running: simpsons38_rule
  0.071694 seconds (105.92 k allocations: 5.588 MiB)
Running: trapezoidal_rule
  0.238634 seconds (1.30 M allocations: 22.378 MiB, 20.01% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.062657 seconds (45.55 k allocations: 2.660 MiB)
Running: chebyshev_quadrature with k=1
  0.254863 seconds (279.83 k allocations: 13.909 MiB)
Running: chebyshev_quadrature with k=2
  0.092870 seconds (115.56 k allocations: 3.746 MiB)
Running: chebyshev_quadrature with k=3
  0.102846 seconds (105.55 k allocations: 3.617 MiB)
Running: chebyshev_quadrature with k=4
  0.117919 seconds (88.17 k allocations: 3.264 MiB, 15.98% gc time)
Running: jacobi_quadrature with α=β=1
  1.389518 seconds (527.78 k allocations: 162.726 MiB, 12.42% gc time)
Running: legendre_quadrature
  0.098182 seconds (61.27 k allocations: 3.351 MiB)
Running: lobatto_quadrature
  0.013452 seconds (15.59 k allocations: 967.690 KiB)
Running: radau_quadrature
  0.013131 seconds (15.57 k allocations: 967.394 KiB)
Running: rectangle_rule_left
 17.931171 seconds (471.41 M allocations: 7.025 GiB, 3.61% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 17.143956 seconds (476.96 M allocations: 7.107 GiB, 2.34% gc time)
Running: simpsons_rule
  0.000015 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.038936 seconds (18.85 k allocations: 1.120 MiB)
Running: trapezoidal_rule
  0.031346 seconds (17.28 k allocations: 1.025 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.017632 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.057010 seconds (2.58 k allocations: 120.422 KiB)
Running: chebyshev_quadrature with k=2
  0.056512 seconds (2.86 k allocations: 129.391 KiB)
Running: chebyshev_quadrature with k=3
  0.063825 seconds (4.09 k allocations: 172.625 KiB)
Running: chebyshev_quadrature with k=4
  0.066458 seconds (4.09 k allocations: 172.625 KiB)
Running: jacobi_quadrature with α=β=1
  0.216596 seconds (388.13 k allocations: 19.900 MiB, 9.08% gc time)
Running: legendre_quadrature
  0.041253 seconds (1.31 k allocations: 67.438 KiB)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000024 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000248 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000174 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000247 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000022 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.014419 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.012692 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.043062 seconds (74.11 k allocations: 4.210 MiB)
Running: chebyshev_quadrature with k=1
  0.139229 seconds (243.16 k allocations: 13.373 MiB)
Running: chebyshev_quadrature with k=2
  0.168196 seconds (300.92 k allocations: 16.523 MiB)
Running: chebyshev_quadrature with k=3
  0.173039 seconds (296.12 k allocations: 15.721 MiB, 10.01% gc time)
Running: chebyshev_quadrature with k=4
  0.146549 seconds (296.12 k allocations: 15.606 MiB)
Running: jacobi_quadrature with α=β=1
  1.878507 seconds (474.18 k allocations: 164.152 MiB, 2.85% gc time)
Running: legendre_quadrature
  0.106384 seconds (194.27 k allocations: 10.967 MiB)
Running: lobatto_quadrature
  0.125810 seconds (205.39 k allocations: 11.670 MiB)
Running: radau_quadrature
  0.134575 seconds (205.39 k allocations: 11.640 MiB, 8.68% gc time)
Running: rectangle_rule_left
  0.496779 seconds (19.22 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.017454 seconds (25.02 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  0.492549 seconds (17.72 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.020415 seconds (28.04 k allocations: 1.711 MiB)
Running: simpsons38_rule
  0.022046 seconds (43.02 k allocations: 2.640 MiB)
Running: trapezoidal_rule
  0.016242 seconds (44.30 k allocations: 1.744 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031588 seconds (236.12 k allocations: 5.048 MiB)
Running: chebyshev_quadrature with k=1
  0.154824 seconds (250.34 k allocations: 13.493 MiB)
Running: chebyshev_quadrature with k=2
  0.192656 seconds (308.70 k allocations: 16.532 MiB, 9.29% gc time)
Running: chebyshev_quadrature with k=3
  0.187823 seconds (303.55 k allocations: 15.705 MiB)
Running: chebyshev_quadrature with k=4
  0.178683 seconds (303.56 k allocations: 15.714 MiB)
Running: hermite_quadrature with k=2
 10.913747 seconds (22.87 M allocations: 1.162 GiB, 9.63% gc time)
Running: jacobi_quadrature with α=β=1
  0.319849 seconds (484.27 k allocations: 50.362 MiB, 8.76% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.189539 seconds (289.50 k allocations: 15.636 MiB, 11.67% gc time)
Running: legendre_quadrature
  0.121790 seconds (201.35 k allocations: 11.320 MiB)
Running: lobatto_quadrature
  0.184960 seconds (226.93 k allocations: 37.465 MiB, 9.59% gc time)
Running: radau_quadrature
  0.160489 seconds (223.52 k allocations: 30.128 MiB)
Running: rectangle_rule_left
  0.018565 seconds (22.35 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.019201 seconds (26.97 k allocations: 1.627 MiB)
Running: rectangle_rule_right
  0.017015 seconds (18.94 k allocations: 1.113 MiB)
Running: simpsons_rule
  0.024723 seconds (40.22 k allocations: 2.058 MiB)
Running: simpsons38_rule
  0.033789 seconds (58.34 k allocations: 3.042 MiB)
Running: trapezoidal_rule
  0.060676 seconds (30.63 k allocations: 1.683 MiB, 67.20% gc time)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028061 seconds (46.67 k allocations: 2.056 MiB)
Running: chebyshev_quadrature with k=1
  0.144093 seconds (245.43 k allocations: 13.246 MiB)
Running: chebyshev_quadrature with k=2
  0.175306 seconds (303.32 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.204024 seconds (298.43 k allocations: 15.491 MiB)
Running: chebyshev_quadrature with k=4
  0.197499 seconds (298.43 k allocations: 15.507 MiB, 10.24% gc time)
Running: hermite_quadrature with k=2
  0.119197 seconds (179.49 k allocations: 10.058 MiB)
Running: jacobi_quadrature with α=β=1
  8.209373 seconds (476.81 k allocations: 1.176 GiB, 12.98% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.172529 seconds (284.38 k allocations: 15.439 MiB)
Running: legendre_quadrature
  0.129238 seconds (196.53 k allocations: 11.076 MiB)
Running: lobatto_quadrature
  0.173454 seconds (217.31 k allocations: 23.162 MiB, 6.18% gc time)
Running: radau_quadrature
  0.159831 seconds (216.45 k allocations: 21.089 MiB)
Running: rectangle_rule_left
  0.018646 seconds (19.95 k allocations: 1.181 MiB)
Running: rectangle_rule_midpoint
  0.018950 seconds (25.77 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  0.016619 seconds (17.73 k allocations: 1.055 MiB)
Running: simpsons_rule
  0.021955 seconds (32.53 k allocations: 1.839 MiB)
Running: simpsons38_rule
  0.026509 seconds (48.94 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.018582 seconds (25.37 k allocations: 1.512 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.024126 seconds (31.12 k allocations: 1.851 MiB)
Running: chebyshev_quadrature with k=1
  0.163282 seconds (243.71 k allocations: 13.456 MiB, 8.71% gc time)
Running: chebyshev_quadrature with k=2
  0.175157 seconds (301.52 k allocations: 16.620 MiB)
Running: chebyshev_quadrature with k=3
  0.175047 seconds (296.71 k allocations: 15.699 MiB, 7.67% gc time)
Running: chebyshev_quadrature with k=4
  0.163359 seconds (296.71 k allocations: 15.528 MiB)
Running: jacobi_quadrature with α=β=1
  1.571620 seconds (474.81 k allocations: 195.184 MiB, 3.29% gc time)
Running: legendre_quadrature
  0.145470 seconds (194.82 k allocations: 10.976 MiB, 7.49% gc time)
Running: lobatto_quadrature
  0.141332 seconds (205.94 k allocations: 11.667 MiB)
Running: radau_quadrature
  0.138790 seconds (205.94 k allocations: 11.671 MiB)
Running: rectangle_rule_left
  0.262128 seconds (19.78 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.018148 seconds (25.37 k allocations: 1.550 MiB)
Running: rectangle_rule_right
  0.078111 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.022557 seconds (28.78 k allocations: 1.742 MiB)
Running: simpsons38_rule
  0.026047 seconds (43.78 k allocations: 2.674 MiB)
Running: trapezoidal_rule
  0.018902 seconds (45.28 k allocations: 1.779 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023229 seconds (31.75 k allocations: 1.804 MiB)
Running: chebyshev_quadrature with k=1
  0.167380 seconds (244.30 k allocations: 13.397 MiB, 7.92% gc time)
Running: chebyshev_quadrature with k=2
  0.182209 seconds (302.12 k allocations: 16.541 MiB)
Running: chebyshev_quadrature with k=3
  0.164457 seconds (297.27 k allocations: 15.664 MiB)
Running: chebyshev_quadrature with k=4
  0.182816 seconds (297.27 k allocations: 15.700 MiB, 7.38% gc time)
Running: jacobi_quadrature with α=β=1
  1.223990 seconds (475.50 k allocations: 149.867 MiB, 2.74% gc time)
Running: legendre_quadrature
  0.119213 seconds (195.41 k allocations: 10.995 MiB)
Running: lobatto_quadrature
  0.154565 seconds (206.54 k allocations: 11.689 MiB, 7.20% gc time)
Running: radau_quadrature
  0.144420 seconds (206.53 k allocations: 11.683 MiB)
Running: rectangle_rule_left
  0.503368 seconds (20.06 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.018493 seconds (25.38 k allocations: 1.551 MiB)
Running: rectangle_rule_right
  0.521254 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.024216 seconds (29.53 k allocations: 1.771 MiB)
Running: simpsons38_rule
  0.025903 seconds (44.53 k allocations: 2.702 MiB)
Running: trapezoidal_rule
  0.018781 seconds (57.55 k allocations: 1.981 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.119141 seconds (149.05 k allocations: 8.694 MiB)
Running: chebyshev_quadrature with k=1
  0.096918 seconds (91.09 k allocations: 3.250 MiB)
Running: chebyshev_quadrature with k=2
  0.099790 seconds (126.85 k allocations: 3.940 MiB)
Running: chebyshev_quadrature with k=3
  0.110260 seconds (116.06 k allocations: 3.797 MiB)
Running: chebyshev_quadrature with k=4
  0.116359 seconds (95.60 k allocations: 3.393 MiB)
Running: jacobi_quadrature with α=β=1
  1.329755 seconds (503.35 k allocations: 168.700 MiB, 13.79% gc time)
Running: legendre_quadrature
  0.070693 seconds (38.15 k allocations: 2.068 MiB)
Running: lobatto_quadrature
  0.000086 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000026 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 28.740111 seconds (590.00 M allocations: 8.792 GiB, 3.17% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 29.432490 seconds (592.75 M allocations: 8.833 GiB, 3.13% gc time)
Running: simpsons_rule
  0.000043 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.023278 seconds (462 allocations: 22.562 KiB)
Running: trapezoidal_rule
  0.014316 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.660871 seconds (565.29 M allocations: 8.433 GiB, 5.04% gc time)
Running: chebyshev_quadrature with k=1
  0.355197 seconds (447.38 k allocations: 24.165 MiB)
Running: chebyshev_quadrature with k=2
  8.856591 seconds (507.47 k allocations: 4.042 GiB, 4.23% gc time)
Running: chebyshev_quadrature with k=3
  4.249611 seconds (311.27 k allocations: 1.644 GiB, 4.91% gc time)
Running: chebyshev_quadrature with k=4
  5.727968 seconds (311.27 k allocations: 2.263 GiB, 2.33% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 48.400852 seconds (511.99 k allocations: 13.255 GiB, 3.46% gc time)
Running: legendre_quadrature.
  3.975339 seconds (233.29 k allocations: 1.976 GiB, 2.92% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.590439 seconds (8.24 M allocations: 13.384 GiB, 4.79% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.318324 seconds (7.24 M allocations: 13.369 GiB, 2.92% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.581954 seconds (22.70 k allocations: 1.337 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.534097 seconds (30.95 k allocations: 1.862 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.668213 seconds (22.91 k allocations: 1.348 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.684136 seconds (600.04 M allocations: 8.943 GiB, 9.01% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.709832 seconds (600.05 M allocations: 8.943 GiB, 9.10% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.304025 seconds (600.03 M allocations: 8.943 GiB, 9.31% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.035323 seconds (128.26 k allocations: 3.604 MiB)
Running: chebyshev_quadrature with k=1
  0.190378 seconds (261.13 k allocations: 13.895 MiB)
Running: chebyshev_quadrature with k=2
  0.169612 seconds (289.83 k allocations: 15.242 MiB)
Running: chebyshev_quadrature with k=3
  0.157454 seconds (281.50 k allocations: 14.202 MiB)
Running: chebyshev_quadrature with k=4
  0.152456 seconds (281.50 k allocations: 14.201 MiB)
Running: jacobi_quadrature with α=β=1
  0.272887 seconds (414.42 k allocations: 35.898 MiB)
Running: laguerre_quadrature with k=2
  0.156474 seconds (189.03 k allocations: 10.737 MiB)
Running: legendre_quadrature
  0.099812 seconds (153.55 k allocations: 8.333 MiB)
Running: lobatto_quadrature
  0.032732 seconds (10.89 k allocations: 15.107 MiB)
Running: radau_quadrature
  0.029362 seconds (9.67 k allocations: 13.181 MiB)
Running: rectangle_rule_left
  0.040626 seconds (19.32 k allocations: 1.119 MiB)
Running: rectangle_rule_midpoint
  0.039186 seconds (25.88 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  0.028678 seconds (17.84 k allocations: 1.043 MiB)
Running: simpsons_rule
  0.001500 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.035525 seconds (79.93 k allocations: 3.372 MiB)
Running: trapezoidal_rule
  0.153080 seconds (2.39 M allocations: 37.680 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000817 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.065923 seconds (2.77 k allocations: 1.703 MiB)
Running: chebyshev_quadrature with k=2
  0.070000 seconds (3.05 k allocations: 2.368 MiB)
Running: chebyshev_quadrature with k=3
  0.080472 seconds (4.29 k allocations: 2.098 MiB)
Running: chebyshev_quadrature with k=4
  0.077133 seconds (4.29 k allocations: 1.539 MiB)
Running: jacobi_quadrature with α=β=1
  6.127263 seconds (411.44 k allocations: 906.565 MiB, 3.88% gc time)
Running: legendre_quadrature
  0.047799 seconds (1.45 k allocations: 76.828 KiB)
Running: lobatto_quadrature
  0.000181 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000111 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.003622 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000269 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  1.941343 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000029 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000493 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000413 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.068865 seconds (2.66 k allocations: 583.406 KiB)
Running: chebyshev_quadrature with k=2
  0.069819 seconds (2.94 k allocations: 785.438 KiB)
Running: chebyshev_quadrature with k=3
  0.113239 seconds (4.17 k allocations: 724.766 KiB)
Running: chebyshev_quadrature with k=4
  0.128065 seconds (4.17 k allocations: 555.266 KiB)
Running: jacobi_quadrature with α=β=1
  2.138742 seconds (397.61 k allocations: 253.860 MiB, 12.86% gc time)
Running: legendre_quadrature
  0.047670 seconds (1.36 k allocations: 69.547 KiB)
Running: lobatto_quadrature
  0.000099 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000028 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  8.090116 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000783 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  7.612674 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001180 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
