Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_m3E6dq/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_m3E6dq/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(18, 0.020613194f0), Item(4, 0.046051025f0), Item(25, 0.099508286f0), Item(2, 0.14494157f0)])
Vsorted = Item[Item(18, 0.020613194f0), Item(4, 0.046051025f0), Item(25, 0.099508286f0), Item(2, 0.14494157f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00414269765218099, 0.004506532351175944, 301.0, 50.120453760027885))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004388976097106934, 0.005453268686930339, 301.0, 72.66214513778687))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004080772399902344, 0.0040721972783406574, 301.0, 40.89169132709503))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004010589917500814, 0.004241538047790527, 301.0, 9.193209853285225))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003968334197998047, 0.005391669273376465, 301.0, 45.38994847051799))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018012523651123047, 0.0001474301020304362, 301.0, 179.1180037483573))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.7808558146158855e-5, 0.011344202359517415, 300.0, 26.980800168588758)
p = PerformanceResult(1.0, 1.0, 1.0, 5.238056182861328e-5, 2.703666687011719e-5, 300.0, 26.980800168588758)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003934637705485026, 0.004068398475646972, 300.0, 1.468657999237621)
p = PerformanceResult(1.0, 1.0, 1.0, 5.250771840413412e-5, 2.1004676818847655e-5, 300.0, 1.468657999237621)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.7808558146158855e-5, 0.011344202359517415, 300.0, 26.980800168588758), PerformanceResult(1.0, 1.0, 1.0, 5.238056182861328e-5, 2.703666687011719e-5, 300.0, 26.980800168588758), PerformanceResult(1.0, 1.0, 1.0, 0.003934637705485026, 0.004068398475646972, 300.0, 1.468657999237621), PerformanceResult(1.0, 1.0, 1.0, 5.250771840413412e-5, 2.1004676818847655e-5, 300.0, 1.468657999237621))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 130.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008531419436136882, 0.0037385702133178713, 347.4, 28757.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007703264554341634, 0.0037097692489624023, 303.3333333333333, 6969.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5065739949544272e-5, 1.186529795328776e-5, 91.4, 50.02181029319763))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.81277592976888e-5, 9.330113728841146e-6, 82.26666666666667, 72.52399504184723))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.544720967610677e-5, 1.7269452412923178e-5, 86.03333333333333, 40.83828508853912))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.907318115234376e-5, 0.0001718282699584961, 91.46666666666667, 45.31022004596889))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7866666666666666, 0.7866666666666666, 0.7866666666666667, 5.18798828125e-5, 0.0001363992691040039, 68.8, 188.84120797365904))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-12T01:01:14.866
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 2.6352405548095703e-5, 2.5620460510253905e-5, 154.04, 49.95117493416183))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6161670684814454e-5, 1.9538402557373048e-5, 157.72, 0.0))
*** advance 1 from 1000; 2020-07-12T01:01:15.659
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9044444444444446, 0.9030000000000002, 0.9036842105263159, 2.993345260620117e-5, 3.4651756286621095e-5, 154.85, 75.8732362370938))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.99835205078125e-5, 2.8688907623291015e-5, 158.7, 0.0))
*** advance 1 from 1000; 2020-07-12T01:01:16.499
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8779999999999998, 0.8779999999999998, 0.8779999999999998, 3.120899200439453e-5, 4.701852798461914e-5, 152.65, 41.310440295375884))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 3.055572509765625e-5, 5.471229553222656e-5, 156.19, 0.0))
*** advance 1 from 1000; 2020-07-12T01:01:17.225
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.904, 0.904, 0.904, 0.00010672569274902343, 0.0005237102508544922, 153.0, 44.602701355703175))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011182308197021484, 0.0005420398712158203, 156.63, 0.0))
*** advance 1 from 1000; 2020-07-12T01:01:17.798
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9620000000000003, 0.9620000000000003, 0.9620000000000003, 9.586095809936523e-5, 0.0003963303565979004, 167.91, 193.29720421880484))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.644031524658203e-5, 0.0004300999641418457, 173.26, 0.0))
*** advance 1 from 1000; 2020-07-12T01:01:18.902
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 3.259420394897461e-5, 6.133079528808594e-5, 154.04, 49.960202996851876))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.169536590576172e-5, 5.913972854614258e-5, 157.72, 0.011838652339065447))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:20.748
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7610000000000001, 0.7610000000000001, 0.7610000000000001, 0.0013784527778625487, 6.337881088256836e-5, 203.09, 190.1666689068079))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:21.708
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.775, 0.775, 0.775, 0.0014905762672424317, 7.306098937988281e-5, 209.0, 108.00714499503374))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:22.616
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6280000000000001, 0.6280000000000001, 0.6280000000000001, 0.00145524263381958, 8.186817169189453e-5, 261.87, 1.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:23.529
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9490000000000001, 0.9469999999999998, 0.9479473684210526, 0.0013474297523498535, 5.888938903808594e-5, 215.94, 598.4000202864408))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:24.537
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.595, 0.595, 0.595, 0.0014529824256896973, 0.0004047679901123047, 257.92, 2347.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:25.547
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4329999999999999, 0.4329999999999999, NaN, 0.0015741586685180664, 0.00044660091400146486, 258.76, 3618.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-12T01:01:26.503
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6060000000000002, 0.6060000000000002, 0.6060000000000002, 0.0014350104331970215, 2.7070045471191408e-5, 247.06, 2370.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.059797608095676,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642170329670333,"seconds":0.0025769732892513275,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.4921875,"distances_sum":718.8928879201412}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.059797608095676,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642170329670333,"seconds":0.0025769732892513275,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.4921875,"distances_sum":718.8928879201412}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9113122171945705,"state":{"restarts":8},"perf":{"precision":0.9053819444444433,"recall":0.9053819444444433,"f1":0.9053819444444433,"seconds":2.3847445845603943e-5,"exhaustive_search_seconds":7.266178727149963e-6,"evaluations":51.796875,"distances_sum":302.78156613186}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9113122171945705,"state":{"restarts":8},"perf":{"precision":0.9053819444444433,"recall":0.9053819444444433,"f1":0.9053819444444433,"seconds":2.3847445845603943e-5,"exhaustive_search_seconds":7.266178727149963e-6,"evaluations":51.796875,"distances_sum":302.78156613186}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.86892361111111, conf: {"restarts":9}, perf: {"precision":0.86892361111111,"recall":0.86892361111111,"f1":0.86892361111111,"seconds":4.5318156480789185e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":123.90625,"distances_sum":120.9891075771302}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8723958333333321, conf: {"restarts":6}, perf: {"precision":0.8723958333333321,"recall":0.8723958333333321,"f1":0.8723958333333321,"seconds":3.997422754764557e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":104.7734375,"distances_sum":120.95092132128775}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.87673611111111, conf: {"restarts":14}, perf: {"precision":0.87673611111111,"recall":0.87673611111111,"f1":0.87673611111111,"seconds":5.8749690651893616e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":158.9453125,"distances_sum":120.93362604267895}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8888888888888875, conf: {"restarts":18}, perf: {"precision":0.8888888888888875,"recall":0.8888888888888875,"f1":0.8888888888888875,"seconds":6.872043013572693e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":180.4296875,"distances_sum":120.43740605004132}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8888888888888875,"state":{"restarts":18},"perf":{"precision":0.8888888888888875,"recall":0.8888888888888875,"f1":0.8888888888888875,"seconds":6.872043013572693e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":180.4296875,"distances_sum":120.43740605004132}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8888888888888875,"state":{"restarts":18},"perf":{"precision":0.8888888888888875,"recall":0.8888888888888875,"f1":0.8888888888888875,"seconds":6.872043013572693e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":180.4296875,"distances_sum":120.43740605004132}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8888888888888875,"state":{"restarts":18},"perf":{"precision":0.8888888888888875,"recall":0.8888888888888875,"f1":0.8888888888888875,"seconds":6.872043013572693e-5,"exhaustive_search_seconds":2.804771065711975e-5,"evaluations":180.4296875,"distances_sum":120.43740605004132}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8567708333333325,"state":{"restarts":18},"perf":{"precision":0.8567708333333325,"recall":0.8567708333333325,"f1":0.8567708333333325,"seconds":0.00012198276817798615,"exhaustive_search_seconds":0.000354984775185585,"evaluations":282.421875,"distances_sum":58.30636487947777}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8567708333333325,"state":{"restarts":18},"perf":{"precision":0.8567708333333325,"recall":0.8567708333333325,"f1":0.8567708333333325,"seconds":0.00012198276817798615,"exhaustive_search_seconds":0.000354984775185585,"evaluations":282.421875,"distances_sum":58.30636487947777}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(18), SatNeighborhood(32), 2020-07-12T01:01:33.868
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5276, 0.025291251f0), Item(431, 0.047105715f0), Item(3994, 0.061294314f0), Item(7543, 0.06660038f0), Item(9486, 0.067110576f0), Item(2383, 0.0709632f0), Item(1980, 0.07326467f0), Item(8436, 0.07336269f0), Item(5102, 0.07389743f0), Item(8966, 0.07472966f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0837253057384757, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9464266636141643,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.3046875,"distances_sum":679.8115229010582}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0837253057384757,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9464266636141643,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.3046875,"distances_sum":679.8115229010582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0837253057384757,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9464266636141643,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.3046875,"distances_sum":679.8115229010582}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0837253057384757,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9464266636141643,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.944601535797119e-6,"evaluations":8.3046875,"distances_sum":679.8115229010582}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.040307101727447,"state":{"bsize":2},"perf":{"precision":0.9314236111111103,"recall":0.9314236111111103,"f1":0.9314236111111103,"seconds":1.4852732419967651e-5,"exhaustive_search_seconds":6.804242730140686e-6,"evaluations":32.5625,"distances_sum":280.66721649467945}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.040307101727447,"state":{"bsize":2},"perf":{"precision":0.9314236111111103,"recall":0.9314236111111103,"f1":0.9314236111111103,"seconds":1.4852732419967651e-5,"exhaustive_search_seconds":6.804242730140686e-6,"evaluations":32.5625,"distances_sum":280.66721649467945}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.785508007351012,"state":{"bsize":2},"perf":{"precision":0.934027777777777,"recall":0.934027777777777,"f1":0.934027777777777,"seconds":2.800673246383667e-5,"exhaustive_search_seconds":2.7101486921310425e-5,"evaluations":59.515625,"distances_sum":121.0307748131454}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.785508007351012,"state":{"bsize":2},"perf":{"precision":0.934027777777777,"recall":0.934027777777777,"f1":0.934027777777777,"seconds":2.800673246383667e-5,"exhaustive_search_seconds":2.7101486921310425e-5,"evaluations":59.515625,"distances_sum":121.0307748131454}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":91.43753533069531,"state":{"bsize":2},"perf":{"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":6.0088932514190674e-5,"exhaustive_search_seconds":0.00037174858152866364,"evaluations":110.5625,"distances_sum":55.834681787062436}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":91.43753533069531,"state":{"bsize":2},"perf":{"precision":0.935763888888888,"recall":0.935763888888888,"f1":0.935763888888888,"seconds":6.0088932514190674e-5,"exhaustive_search_seconds":0.00037174858152866364,"evaluations":110.5625,"distances_sum":55.834681787062436}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(2), SatNeighborhood(32), 2020-07-12T01:01:37.995
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7292, 0.03132044f0), Item(5740, 0.03233847f0), Item(5262, 0.044165406f0), Item(450, 0.048497025f0), Item(413, 0.05074584f0), Item(3217, 0.05126288f0), Item(1728, 0.056501105f0), Item(2568, 0.057305545f0), Item(9988, 0.060288835f0), Item(4936, 0.061594255f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
