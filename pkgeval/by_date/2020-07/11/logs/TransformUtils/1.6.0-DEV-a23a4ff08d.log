Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_vx2zAa/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_vx2zAa/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08714114819830056 0.13109305864123827; -0.08714114819830056 0.0 -0.10146374179454701; -0.13109305864123827 0.10146374179454701 0.0])
dAA = so3([0.0 -0.03537450501303574 -0.09849102719804077; 0.03537450501303574 0.0 0.21757043238949822; 0.09849102719804077 -0.21757043238949822 0.0])
dAA = so3([0.0 0.1607948147239041 -0.0782908888138532; -0.1607948147239041 0.0 -0.013752448133366235; 0.0782908888138532 0.013752448133366235 0.0])
dAA = Quaternion(0.9945849372180708, [0.0879351693064072, -0.02531190478161287, 0.049269829858714004])
dAA = SO3([0.997761949474112 -0.028385832115078405 -0.06054202438599588; 0.02498245059169242 0.9981041208091584 -0.056249810543776944; 0.062023941700391653 0.05461143249276416 0.9965794610050095])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9668019822662003 -0.018207244687047607 -0.25487727110719705; 0.1481199651155046 0.8527157236888547 0.5009354953564127; 0.20821720154763232 -0.5220578424032138 0.8271041084198372]), [1.01463741794547, 1.3109305864123826, -0.8714114819830056])
xj = SE3(SO3([0.9624177601010596 -0.2557362451079347 -0.09138395909651519; 0.1930730678907415 0.8809651843434575 -0.43199899818165666; 0.1909838880568629 0.39811972685712554 0.897232320856695]), [0.13752448133366235, -0.7829088881385319, -1.607948147239041])
Dx = SE3(SO3([0.9988315050265074 -0.033862400927640646 0.03448133364442413; 0.04740882862921793 0.548027591480956 -0.8351156578244645; 0.009382298997997418 0.8357745490136669 0.5489926007575274]), [-1.3114935589924088, -1.3849652906604843, -1.434514864479649])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
