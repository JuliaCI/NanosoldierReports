Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_LKvShy/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_LKvShy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.05703279767164287 -0.03015713950986919; 0.05703279767164287 0.0 -0.07733218620615538; 0.03015713950986919 0.07733218620615538 0.0])
dAA = so3([0.0 0.12691673559382818 0.11838177247225208; -0.12691673559382818 0.0 0.13681696253574702; -0.11838177247225208 -0.13681696253574702 0.0])
dAA = so3([0.0 -0.04813721058300891 -0.11555364399903037; 0.04813721058300891 0.0 0.17770637534855147; 0.11555364399903037 -0.17770637534855147 0.0])
dAA = Quaternion(0.9987379535942689, [-0.022995080997618902, -0.02847023471867987, -0.034397267846564696])
dAA = SO3([0.9990517768904917 -0.0412042663844076 0.01406255750830208; 0.04323507662640131 0.9769549859843413 -0.20902077291371107; -0.005125938066415932 0.20943057033790158 0.9778100843041458])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9082387193838745 0.25205390841484004 0.3340228373401184; -0.35073387003161616 0.8939069328672578 0.2791346409611271; -0.22822835280609893 -0.37067401126145244 0.9002847307106565]), [0.7733218620615537, -0.3015713950986919, 0.5703279767164287])
xj = SE3(SO3([0.9751743232886747 0.17518322685200563 -0.13544694986670638; -0.15916020076950274 0.979771754123205 0.12130680241993569; 0.15395801274856377 -0.096737515225772 0.9833304548616688]), [-1.7770637534855145, -1.1555364399903036, 0.4813721058300891])
Dx = SE3(SO3([0.9063763680797338 -0.1624527057031635 -0.3899884585424447; 0.04645385851495216 0.9558384634632215 -0.29019798550875653; 0.4199094169171056 0.24491212745388702 0.8738959499908142]), [-1.9965422484481443, -1.3732263069318418, -1.170343878081669])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
