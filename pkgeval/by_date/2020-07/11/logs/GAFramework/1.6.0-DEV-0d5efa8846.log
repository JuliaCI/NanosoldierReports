Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_tlHPCR/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_tlHPCR/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723293328403806
curgen: 20 fitness: 0.21723293328403806
curgen: 30 fitness: 0.21723336768708365
curgen: 40 fitness: 0.2172336098230997
curgen: 50 fitness: 0.21723361233775806
CoordinateCreature{Vector{Float64}}([0.22256709321263557], -0.21723361233775806) 0.22256709321263557 -0.21723361233775806
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579283187984016
curgen: 100 fitness: 3.2581590573930934
curgen: 150 fitness: 3.258221340109239
curgen: 200 fitness: 3.258236581798834
curgen: 250 fitness: 3.2582365993728075
curgen: 300 fitness: 3.2582746432017182
curgen: 350 fitness: 3.2583004841511944
curgen: 400 fitness: 3.2583700289959334
curgen: 450 fitness: 3.258462876329094
curgen: 500 fitness: 3.2584696464585674
CoordinateCreature{Vector{Float64}}([-0.22267887687497243, -0.22271873829471206, 0.22232797643620747, 0.22254763030084404, -0.22197576349800294, -0.22268879637878464, -0.22275285362782218, 0.22219730344103836, -0.2224014261427858, 0.22251421262025378, -0.2227730858797553, 0.222819877899839, -0.22256411941493837, -0.22269213994497042, 0.22245292618512877], -3.2584696464585674) [-0.22267887687497243, -0.22271873829471206, 0.22232797643620747, 0.22254763030084404, -0.22197576349800294, -0.22268879637878464, -0.22275285362782218, 0.22219730344103836, -0.2224014261427858, 0.22251421262025378, -0.2227730858797553, 0.222819877899839, -0.22256411941493837, -0.22269213994497042, 0.22245292618512877] -3.2584696464585674
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0037678728222942937
curgen: 100 fitness: -0.0034079754870788292
curgen: 150 fitness: -0.0034079754870788292
curgen: 200 fitness: -0.0016141855622890944
curgen: 250 fitness: -0.0016141855622890944
curgen: 300 fitness: -0.0011398852924742187
curgen: 350 fitness: -0.0006000922758744309
curgen: 400 fitness: -0.000594259211084136
curgen: 450 fitness: -0.000594259211084136
curgen: 500 fitness: -0.000594259211084136
CoordinateCreature{Vector{Float64}}([-0.0005012060792386943, -0.00025199200579648345, -0.00010755716553153648, 0.0004990219718717627, -0.00016793550277493553, -0.00017452249880780103, -0.0010535731741963738, 0.0006407980778689188, -0.00019215364157422585, -0.0003120999910081341, -0.0007058165717818948, -1.4460664589510303e-5, -0.00040791023370235916, -0.00020190075996374824, 3.025329561575473e-5], 0.000594259211084136) [-0.0005012060792386943, -0.00025199200579648345, -0.00010755716553153648, 0.0004990219718717627, -0.00016793550277493553, -0.00017452249880780103, -0.0010535731741963738, 0.0006407980778689188, -0.00019215364157422585, -0.0003120999910081341, -0.0007058165717818948, -1.4460664589510303e-5, -0.00040791023370235916, -0.00020190075996374824, 3.025329561575473e-5] 0.000594259211084136
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
