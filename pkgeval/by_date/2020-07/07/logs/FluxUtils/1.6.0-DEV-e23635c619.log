Julia Version 1.6.0-DEV.387
Commit e23635c619 (2020-07-07 16:42 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FluxUtils ──────────────────── v0.1.5
  Installed ProgressMeter ──────────────── v1.3.1
  Installed UnPack ─────────────────────── v1.0.1
  Installed OrderedCollections ─────────── v1.3.0
  Installed Parameters ─────────────────── v0.12.1
  Installed FFTW ───────────────────────── v1.2.2
  Installed StatsBase ──────────────────── v0.33.0
  Installed BSON ───────────────────────── v0.2.6
  Installed Missings ───────────────────── v0.4.3
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed CEnum ──────────────────────── v0.4.1
  Installed FixedPointNumbers ──────────── v0.8.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Juno ───────────────────────── v0.8.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed AbstractTrees ──────────────── v0.3.3
  Installed DataStructures ─────────────── v0.17.19
  Installed CuArrays ───────────────────── v1.2.1
  Installed Flux ───────────────────────── v0.9.0
  Installed CUDAnative ─────────────────── v2.4.0
  Installed Requires ───────────────────── v0.5.2
  Installed NaNMath ────────────────────── v0.3.3
  Installed Media ──────────────────────── v0.5.0
  Installed ZipFile ────────────────────── v0.9.2
  Installed Tracker ────────────────────── v0.2.7
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed TimerOutputs ───────────────── v0.5.6
  Installed SpecialFunctions ───────────── v0.10.3
  Installed MKL_jll ────────────────────── v2020.1.216+0
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed Adapt ──────────────────────── v1.1.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DiffResults ────────────────── v1.0.2
  Installed BinaryProvider ─────────────── v0.5.10
  Installed LLVM ───────────────────────── v1.7.0
  Installed StaticArrays ───────────────── v0.12.3
  Installed NNlib ──────────────────────── v0.6.6
  Installed Reexport ───────────────────── v0.2.0
  Installed Colors ─────────────────────── v0.12.3
  Installed ForwardDiff ────────────────── v0.10.12
  Installed FillArrays ─────────────────── v0.7.4
  Installed DataAPI ────────────────────── v1.3.0
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed TranscodingStreams ─────────── v0.9.5
  Installed GPUArrays ──────────────────── v1.0.4
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed MacroTools ─────────────────── v0.5.5
  Installed CUDAapi ────────────────────── v1.2.0
  Installed CodecZlib ──────────────────── v0.7.0
  Installed CUDAdrv ────────────────────── v3.1.0
  Installed ColorTypes ─────────────────── v0.10.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [479fec60] + FluxUtils v0.1.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.1.0
  [fbb218c0] + BSON v0.2.6
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [3895d2a7] + CUDAapi v1.2.0
  [c5f51814] + CUDAdrv v3.1.0
  [be33ccc6] + CUDAnative v2.4.0
  [944b1d66] + CodecZlib v0.7.0
  [3da002f7] + ColorTypes v0.10.6
  [5ae59095] + Colors v0.12.3
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [3a865a2d] + CuArrays v1.2.1
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [1a297f60] + FillArrays v0.7.4
  [53c48c17] + FixedPointNumbers v0.8.1
  [587475ba] + Flux v0.9.0
  [479fec60] + FluxUtils v0.1.5
  [f6369f11] + ForwardDiff v0.10.12
  [0c68f7d7] + GPUArrays v1.0.4
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [e5e0dc1b] + Juno v0.8.2
  [929cbde3] + LLVM v1.7.0
  [856f044c] + MKL_jll v2020.1.216+0
  [1914dd2f] + MacroTools v0.5.5
  [e89f7d12] + Media v0.5.0
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [92933f4c] + ProgressMeter v1.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [2913bbd2] + StatsBase v0.33.0
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.7
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [9abbd945] + Profile
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW ─→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing FluxUtils
Status `/tmp/jl_lY5UaQ/Project.toml`
  [fbb218c0] BSON v0.2.6
  [587475ba] Flux v0.9.0
  [479fec60] FluxUtils v0.1.5
  [da04e1cc] MPI v0.15.0
  [d96e819e] Parameters v0.12.1
  [92933f4c] ProgressMeter v1.3.1
  [ae029012] Requires v0.5.2
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_lY5UaQ/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [fbb218c0] BSON v0.2.6
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [3895d2a7] CUDAapi v1.2.0
  [c5f51814] CUDAdrv v3.1.0
  [be33ccc6] CUDAnative v2.4.0
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.6
  [5ae59095] Colors v0.12.3
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [3a865a2d] CuArrays v1.2.1
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.2
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.7.4
  [53c48c17] FixedPointNumbers v0.8.1
  [587475ba] Flux v0.9.0
  [479fec60] FluxUtils v0.1.5
  [f6369f11] ForwardDiff v0.10.12
  [0c68f7d7] GPUArrays v1.0.4
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [e5e0dc1b] Juno v0.8.2
  [929cbde3] LLVM v1.7.0
  [856f044c] MKL_jll v2020.1.216+0
  [da04e1cc] MPI v0.15.0
  [7cb0a576] MPICH_jll v3.3.2+10
  [1914dd2f] MacroTools v0.5.5
  [e89f7d12] Media v0.5.0
  [9237b28f] MicrosoftMPI_jll v10.1.2+3
  [e1d29d7a] Missings v0.4.3
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [fe0851c0] OpenMPI_jll v4.0.2+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [92933f4c] ProgressMeter v1.3.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.7
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `@get!(dict, key, default)` at /home/pkgeval/.julia/packages/Requires/9Jse8/src/require.jl:11 is deprecated, use `get!(()->default, dict, key)` instead.
└ @ Base deprecated.jl:204
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_support(version::VersionNumber) at CUDAnative.jl:29
└ @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/CUDAnative.jl:29
┌ Warning: CUDNN is not installed, some functionality will not be available.
└ @ Flux.CUDA ~/.julia/packages/Flux/dkJUV/src/cuda/cuda.jl:9
WARNING: Method definition apply!(Flux.Optimise.WeightDecay, Any, Any) in module Optimise at /home/pkgeval/.julia/packages/Flux/dkJUV/src/optimise/optimisers.jl:323 overwritten in module FluxUtils at /home/pkgeval/.julia/packages/FluxUtils/jg4bC/src/util.jl:17.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition bmm(Any, Any) in module FluxUtils at /home/pkgeval/.julia/packages/FluxUtils/jg4bC/src/bmm.jl:10 overwritten at /home/pkgeval/.julia/packages/FluxUtils/jg4bC/src/bmm.jl:16.
  ** incremental compilation may be fatally broken for this module **

[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
ERROR: LoadError: MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#82"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#83"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#81",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob(CUDAnative.Runtime.unbox_uint64, Tuple{Any}, v"7.5.0", false, nothing, nothing, nothing, nothing, nothing), CUDAnative.var"#postprocess#81"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Vector{LLVM.Function}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#86"{CUDAnative.CompilerJob,Vector{Core.MethodInstance}}(CUDAnative.CompilerJob(CUDAnative.Runtime.unbox_uint64, Tuple{Any}, v"7.5.0", false, nothing, nothing, nothing, nothing, nothing), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#87"{CUDAnative.CompilerJob,Vector{Core.MethodInstance}}(CUDAnative.CompilerJob(CUDAnative.Runtime.unbox_uint64, Tuple{Any}, v"7.5.0", false, nothing, nothing, nothing, nothing, nothing), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=3)
Closest candidates are:
  Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function, lookup, generic_context) at reflection.jl:988 got unsupported keyword argument "cached"
Stacktrace:
  [1] kwerr(kw::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#82",CUDAnative.var"#hook_module_activation#83"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#81",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#86"{CUDAnative.CompilerJob,Vector{Core.MethodInstance}},CUDAnative.var"#hook_emitted_function#87"{CUDAnative.CompilerJob,Vector{Core.MethodInstance}},Bool,Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::CUDAnative.CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/irgen.jl:146
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
  [4] irgen(job::CUDAnative.CompilerJob, method_instance::Core.MethodInstance, world::UInt64)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/irgen.jl:163
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/driver.jl:99 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:190 [inlined]
  [8] codegen(target::Symbol, job::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/driver.jl:98
  [9] emit_function!(mod::LLVM.Module, cap::VersionNumber, f::Function, types::Tuple{DataType}, name::String)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/rtlib.jl:146
 [10] build_runtime(cap::VersionNumber)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/rtlib.jl:156
 [11] (::CUDAnative.var"#121#124"{VersionNumber,String})()
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/rtlib.jl:174
 [12] get!(default::CUDAnative.var"#121#124"{VersionNumber,String}, h::Dict{String,LLVM.Module}, key::String)
    @ Base ./dict.jl:451
 [13] load_runtime(cap::VersionNumber)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/rtlib.jl:167
 [14] codegen(target::Symbol, job::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/driver.jl:94
 [15] compile(target::Symbol, job::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/driver.jl:47
 [16] #compile#132
    @ ~/.julia/packages/CUDAnative/Lr0yj/src/compiler/driver.jl:28 [inlined]
 [17] macro expansion
    @ ~/.julia/packages/CUDAnative/Lr0yj/src/execution.jl:389 [inlined]
 [18] cufunction(f::GPUArrays.var"#25#26", tt::Type{Tuple{CuArrays.CuKernelState,CUDAnative.CuDeviceMatrix{Float32,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(float),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceMatrix{Float32,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/execution.jl:356
 [19] cufunction(f::Function, tt::Type)
    @ CUDAnative ~/.julia/packages/CUDAnative/Lr0yj/src/execution.jl:356
 [20] macro expansion
    @ ~/.julia/packages/CUDAnative/Lr0yj/src/execution.jl:174 [inlined]
 [21] _gpu_call(#unused#::CuArrays.CuArrayBackend, f::Function, A::CuArrays.CuMatrix{Float32}, args::Tuple{CuArrays.CuMatrix{Float32},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(float),Tuple{Base.Broadcast.Extruded{CuArrays.CuMatrix{Float32},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, blocks_threads::Tuple{Tuple{Int64},Tuple{Int64}})
    @ CuArrays ~/.julia/packages/CuArrays/wXQp8/src/gpuarray_interface.jl:60
 [22] gpu_call
    @ ~/.julia/packages/GPUArrays/tIMl5/src/abstract_gpu_interface.jl:151 [inlined]
 [23] gpu_call
    @ ~/.julia/packages/GPUArrays/tIMl5/src/abstract_gpu_interface.jl:128 [inlined]
 [24] copyto!
    @ ~/.julia/packages/GPUArrays/tIMl5/src/broadcast.jl:48 [inlined]
 [25] copyto!(dest::CuArrays.CuMatrix{Float32}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.ArrayStyle{CuArrays.CuArray},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(float),Tuple{CuArrays.CuMatrix{Float32}}})
    @ Base.Broadcast ./broadcast.jl:886
 [26] copy
    @ ./broadcast.jl:862 [inlined]
 [27] materialize
    @ ./broadcast.jl:837 [inlined]
 [28] param(xs::CuArrays.CuMatrix{Float32})
    @ Tracker ~/.julia/packages/Tracker/27b5Q/src/Tracker.jl:105
 [29] adapt_structure(T::Type, xs::TrackedArray{…,Matrix{Float32}})
    @ Tracker ~/.julia/packages/Tracker/27b5Q/src/Tracker.jl:113
 [30] adapt
    @ ~/.julia/packages/Adapt/3Zk8x/src/Adapt.jl:81 [inlined]
 [31] cu
    @ ~/.julia/packages/CuArrays/wXQp8/src/array.jl:220 [inlined]
 [32] #mapleaves#31
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [33] #32
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [34] _broadcast_getindex_evalf
    @ ./broadcast.jl:648 [inlined]
 [35] _broadcast_getindex
    @ ./broadcast.jl:621 [inlined]
 [36] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)},Tuple{Tuple{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}},TrackedArray{…,Vector{Float32}},TrackedArray{…,Vector{Float32}}}}}})(k::Int64)
    @ Base.Broadcast ./broadcast.jl:1046
 [37] macro expansion
    @ ./ntuple.jl:67 [inlined]
 [38] ntuple(f::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)},Tuple{Tuple{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}},TrackedArray{…,Vector{Float32}},TrackedArray{…,Vector{Float32}}}}}}, #unused#::Val{5})
    @ Base ./ntuple.jl:62
 [39] copy
    @ ./broadcast.jl:1046 [inlined]
 [40] materialize
    @ ./broadcast.jl:837 [inlined]
 [41] mapchildren(f::Function, x::Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}})
    @ Flux ~/.julia/packages/Flux/dkJUV/src/treelike.jl:15
 [42] #mapleaves#31
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [43] (::Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)})(x::Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}})
    @ Flux ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29
 [44] _broadcast_getindex_evalf(f::Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)}, args::Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}})
    @ Base.Broadcast ./broadcast.jl:648
 [45] _broadcast_getindex
    @ ./broadcast.jl:621 [inlined]
 [46] #19
    @ ./broadcast.jl:1046 [inlined]
 [47] ntuple
    @ ./ntuple.jl:42 [inlined]
 [48] copy(bc::Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)},Tuple{Tuple{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}},Tuple{TrackedArray{…,Vector{Float32}},TrackedArray{…,Vector{Float32}}}}}})
    @ Base.Broadcast ./broadcast.jl:1046
 [49] materialize
    @ ./broadcast.jl:837 [inlined]
 [50] mapchildren(f::Function, x::Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}})
    @ Flux ~/.julia/packages/Flux/dkJUV/src/treelike.jl:15
 [51] #mapleaves#31
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [52] #32
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [53] _broadcast_getindex_evalf(f::Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)}, args::Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}})
    @ Base.Broadcast ./broadcast.jl:648
 [54] _broadcast_getindex
    @ ./broadcast.jl:621 [inlined]
 [55] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,Flux.var"#32#33"{IdDict{Any,Any},typeof(CuArrays.cu)},Tuple{Tuple{Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}},Dense{typeof(identity),TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}}}}})(k::Int64)
    @ Base.Broadcast ./broadcast.jl:1046
 [56] ntuple
    @ ./ntuple.jl:42 [inlined]
 [57] copy
    @ ./broadcast.jl:1046 [inlined]
 [58] materialize
    @ ./broadcast.jl:837 [inlined]
 [59] mapchildren(f::Function, c::Chain{Tuple{Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}},Dense{typeof(identity),TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}}})
    @ Flux ~/.julia/packages/Flux/dkJUV/src/layers/basic.jl:28
 [60] #mapleaves#31
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:29 [inlined]
 [61] mapleaves(f::Function, x::Chain{Tuple{Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}},Dense{typeof(identity),TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}}})
    @ Flux ~/.julia/packages/Flux/dkJUV/src/treelike.jl:28
 [62] gpu
    @ ~/.julia/packages/Flux/dkJUV/src/treelike.jl:69 [inlined]
 [63] |>(x::Chain{Tuple{Flux.Recur{Flux.LSTMCell{TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}},Dense{typeof(identity),TrackedArray{…,Matrix{Float32}},TrackedArray{…,Vector{Float32}}}}}, f::typeof(gpu))
    @ Base ./operators.jl:836
 [64] top-level scope
    @ ~/.julia/packages/FluxUtils/jg4bC/test/runtests.jl:9
 [65] include(fname::String)
    @ Base.MainInclude ./client.jl:444
in expression starting at /home/pkgeval/.julia/packages/FluxUtils/jg4bC/test/runtests.jl:9
ERROR: Package FluxUtils errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
