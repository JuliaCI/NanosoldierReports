Julia Version 1.6.0-DEV.387
Commit e23635c619 (2020-07-07 16:42 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed QuadGK ─────────────────────── v2.4.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed OrderedCollections ─────────── v1.3.0
  Installed Intervals ──────────────────── v1.3.4
  Installed SpecialPolynomials ─────────── v0.1.0
  Installed TimeZones ──────────────────── v1.2.0
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed Memoize ────────────────────── v0.4.3
  Installed Mocking ────────────────────── v0.7.1
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed EzXML ──────────────────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed RecipesBase ────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.19
  Installed Polynomials ────────────────── v1.1.3
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed ExprTools ──────────────────── v0.1.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [a25cea48] + SpecialPolynomials v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.3.4
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [1914dd2f] + MacroTools v0.5.5
  [c03570c3] + Memoize v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [f27b6e38] + Polynomials v1.1.3
  [1fd47b50] + QuadGK v2.4.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [a25cea48] + SpecialPolynomials v0.1.0
  [f269a46b] + TimeZones v1.2.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
    Testing SpecialPolynomials
Status `/tmp/jl_vroPkv/Project.toml`
  [c03570c3] Memoize v0.4.3
  [f27b6e38] Polynomials v1.1.3
  [1fd47b50] QuadGK v2.4.0
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_vroPkv/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [d8418881] Intervals v1.3.4
  [94ce4f54] Libiconv_jll v1.16.0+5
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [78c3b35d] Mocking v0.7.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [f27b6e38] Polynomials v1.1.3
  [1fd47b50] QuadGK v2.4.0
  [3cdcf5f2] RecipesBase v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.0
  [f269a46b] TimeZones v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain(#unused#::Type{Chebyshev}) at Chebyshev.jl:40
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.25,0.75,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{-0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.5,-0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,5}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,5}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,5}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,5}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,5}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,5}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,5}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,5}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,5}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,5}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,5}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,5}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,5}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,5}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,1}, g::ChebyshevU{Float64,1}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,1}, g::ChebyshevU{Float64,1}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,2}, g::ChebyshevU{Float64,2}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,2}, g::ChebyshevU{Float64,2}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,3}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,3}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,6}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,6}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,7}, g::ChebyshevU{Float64,7}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,7}, g::ChebyshevU{Float64,7}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,8}, g::ChebyshevU{Float64,8}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,8}, g::ChebyshevU{Float64,8}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,9}, g::ChebyshevU{Float64,9}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,9}, g::ChebyshevU{Float64,9}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,10}, g::ChebyshevU{Float64,10}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,10}, g::ChebyshevU{Float64,10}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,11}, g::ChebyshevU{Float64,11}; atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,11}, g::ChebyshevU{Float64,11}; atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:277
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:277
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:280
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/73UHh/src/Orthogonal/orthogonal.jl:280
Test Summary: | Pass  Total
Orthogonal    | 4702   4702
Test Summary:                  | Pass  Total
Orthogonal compare with tables |  649    649
Test Summary: | Pass  Total
Lagrange      |   15     15
Test Summary: | Pass  Total
Newton        |   11     11
Test Summary: | Pass  Total
Bernstein     |  168    168
    Testing SpecialPolynomials tests passed 
