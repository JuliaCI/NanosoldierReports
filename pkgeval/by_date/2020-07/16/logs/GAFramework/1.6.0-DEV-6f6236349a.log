Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_7qcU8V/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7qcU8V/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722731652900473
curgen: 20 fitness: 0.21722731652900473
curgen: 30 fitness: 0.21722731652900473
curgen: 40 fitness: 0.21722731652900473
curgen: 50 fitness: 0.2172290750962801
CoordinateCreature{Vector{Float64}}([0.22286913386497634], -0.2172290750962801) 0.22286913386497634 -0.2172290750962801
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258009351683425
curgen: 100 fitness: 3.258055710856491
curgen: 150 fitness: 3.258155880515609
curgen: 200 fitness: 3.258204121164771
curgen: 250 fitness: 3.258327279266904
curgen: 300 fitness: 3.2584036665499427
curgen: 350 fitness: 3.2584037058297746
curgen: 400 fitness: 3.2584486893173725
curgen: 450 fitness: 3.2584610357428603
curgen: 500 fitness: 3.258462620073791
CoordinateCreature{Vector{Float64}}([-0.2225791241631246, -0.2222013689641945, -0.22327741001069318, -0.2227694309262817, -0.22214688680297923, 0.2224957463256722, -0.22248510827738466, -0.2226033398343632, 0.2225280487498713, -0.2226372396253841, -0.22258130105301976, 0.22249415887977023, -0.22271953273928108, -0.22242265847796436, -0.22267309700847238], -3.258462620073791) [-0.2225791241631246, -0.2222013689641945, -0.22327741001069318, -0.2227694309262817, -0.22214688680297923, 0.2224957463256722, -0.22248510827738466, -0.2226033398343632, 0.2225280487498713, -0.2226372396253841, -0.22258130105301976, 0.22249415887977023, -0.22271953273928108, -0.22242265847796436, -0.22267309700847238] -3.258462620073791
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005627221790660997
curgen: 100 fitness: -0.0032802556906972313
curgen: 150 fitness: -0.0031757656742001927
curgen: 200 fitness: -0.0018975166149175493
curgen: 250 fitness: -0.0016126278743797684
curgen: 300 fitness: -0.0016109290806696208
curgen: 350 fitness: -0.0016089421310994112
curgen: 400 fitness: -0.0013217644429630582
curgen: 450 fitness: -0.0013217644429630582
curgen: 500 fitness: -0.0013217644429630582
CoordinateCreature{Vector{Float64}}([-0.0002472509364560868, -2.527996994677859e-5, 0.00029478785893264866, -0.0003552827899671359, 0.0003079086479370292, -0.0011569445229834229, -6.901868037068851e-5, -4.244740216494058e-5, 0.0003062361051679463, 0.0016511732393817832, -7.317257017965284e-5, -0.0005286256324111421, 0.00039854420743377613, -0.0012745619597417264, -0.00024358579628655725], 0.0013217644429630582) [-0.0002472509364560868, -2.527996994677859e-5, 0.00029478785893264866, -0.0003552827899671359, 0.0003079086479370292, -0.0011569445229834229, -6.901868037068851e-5, -4.244740216494058e-5, 0.0003062361051679463, 0.0016511732393817832, -7.317257017965284e-5, -0.0005286256324111421, 0.00039854420743377613, -0.0012745619597417264, -0.00024358579628655725] 0.0013217644429630582
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
