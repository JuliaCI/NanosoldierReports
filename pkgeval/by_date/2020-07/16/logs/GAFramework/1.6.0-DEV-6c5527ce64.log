Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_TxTZ04/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_TxTZ04/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723230665461377
curgen: 20 fitness: 0.21723230665461377
curgen: 30 fitness: 0.21723361364281213
curgen: 40 fitness: 0.21723361364281213
curgen: 50 fitness: 0.21723361364281213
CoordinateCreature{Vector{Float64}}([-0.22253002075649728], -0.21723361364281213) -0.22253002075649728 -0.21723361364281213
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25764847016328
curgen: 100 fitness: 3.257992299589379
curgen: 150 fitness: 3.2583721201164013
curgen: 200 fitness: 3.2584114682875343
curgen: 250 fitness: 3.2584367146455677
curgen: 300 fitness: 3.2584474022511754
curgen: 350 fitness: 3.2584524236475167
curgen: 400 fitness: 3.2584524236475167
curgen: 450 fitness: 3.258452439267669
curgen: 500 fitness: 3.2584589288127592
CoordinateCreature{Vector{Float64}}([-0.22229277968023256, 0.2228698222642968, 0.22245795398259996, -0.22298878879908007, -0.22229177212731696, 0.22253598192084273, -0.2226356644187334, -0.2224794367957288, -0.22258297567804664, 0.22251202510380647, 0.22215322120309536, -0.22256935506081293, -0.22191730046279476, 0.22249321015653806, -0.22241824363627388], -3.2584589288127592) [-0.22229277968023256, 0.2228698222642968, 0.22245795398259996, -0.22298878879908007, -0.22229177212731696, 0.22253598192084273, -0.2226356644187334, -0.2224794367957288, -0.22258297567804664, 0.22251202510380647, 0.22215322120309536, -0.22256935506081293, -0.22191730046279476, 0.22249321015653806, -0.22241824363627388] -3.2584589288127592
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003234072599269666
curgen: 100 fitness: -0.0023032601257853003
curgen: 150 fitness: -0.0022931271871584613
curgen: 200 fitness: -0.0022931271871584613
curgen: 250 fitness: -0.0015473115307997887
curgen: 300 fitness: -0.0015473115307997887
curgen: 350 fitness: -0.0015473115307997887
curgen: 400 fitness: -0.0014243974742385035
curgen: 450 fitness: -0.0009504444104209142
curgen: 500 fitness: -0.0009504444104209142
CoordinateCreature{Vector{Float64}}([-0.0007761646592547517, 6.12058487275309e-5, 8.633032053966677e-5, 0.00024076499982702258, 0.0006605303792055718, -0.0002497635864851175, -0.00012008767375471478, 0.001452733604057904, -6.86094023877907e-5, -0.00012545172012891527, -0.0008576533920399022, 0.00012519283764664312, 0.00044424153341639586, -0.00023404884755425306, -0.00068687881258848], 0.0009504444104209142) [-0.0007761646592547517, 6.12058487275309e-5, 8.633032053966677e-5, 0.00024076499982702258, 0.0006605303792055718, -0.0002497635864851175, -0.00012008767375471478, 0.001452733604057904, -6.86094023877907e-5, -0.00012545172012891527, -0.0008576533920399022, 0.00012519283764664312, 0.00044424153341639586, -0.00023404884755425306, -0.00068687881258848] 0.0009504444104209142
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
