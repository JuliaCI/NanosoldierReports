Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_sYX0gB/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_sYX0gB/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.048254 seconds (1.41 M allocations: 76.708 MiB, 11.15% gc time)
Running: chebyshev_quadrature with k=1
  1.857641 seconds (2.26 M allocations: 130.451 MiB, 3.39% gc time)
Running: chebyshev_quadrature with k=2
  0.321738 seconds (428.78 k allocations: 24.698 MiB)
Running: chebyshev_quadrature with k=3
  0.405374 seconds (549.69 k allocations: 30.243 MiB, 3.28% gc time)
Running: chebyshev_quadrature with k=4
  0.315699 seconds (492.38 k allocations: 26.762 MiB, 4.22% gc time)
Running: jacobi_quadrature with α=β=1
 43.480059 seconds (39.58 M allocations: 3.158 GiB, 8.98% gc time)
Running: laguerre_quadrature with k=1
  3.056846 seconds (3.36 M allocations: 188.492 MiB, 2.84% gc time)
Running: legendre_quadrature
  0.187563 seconds (217.67 k allocations: 12.520 MiB)
Running: lobatto_quadrature
  0.347563 seconds (348.90 k allocations: 21.046 MiB, 6.88% gc time)
Running: radau_quadrature
  0.261380 seconds (330.87 k allocations: 20.035 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 86.998367 seconds (100.02 M allocations: 1.491 GiB, 0.31% gc time)
Running: rectangle_rule_midpoint.
  0.212604 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.275599 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: simpsons_rule
  0.044094 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.102521 seconds (113.89 k allocations: 6.066 MiB)
Running: trapezoidal_rule
  0.313630 seconds (1.52 M allocations: 25.847 MiB, 8.93% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.125794 seconds (55.99 k allocations: 3.362 MiB)
Running: chebyshev_quadrature with k=1
  0.514394 seconds (278.89 k allocations: 14.246 MiB, 9.01% gc time)
Running: chebyshev_quadrature with k=2
  0.157411 seconds (116.32 k allocations: 3.844 MiB)
Running: chebyshev_quadrature with k=3
  0.165775 seconds (105.67 k allocations: 3.693 MiB)
Running: chebyshev_quadrature with k=4
  0.166630 seconds (88.28 k allocations: 3.337 MiB)
Running: jacobi_quadrature with α=β=1
  2.816163 seconds (540.27 k allocations: 163.844 MiB, 19.70% gc time)
Running: legendre_quadrature
  0.197505 seconds (63.05 k allocations: 3.545 MiB)
Running: lobatto_quadrature
  0.022342 seconds (16.91 k allocations: 1.052 MiB)
Running: radau_quadrature
  0.022381 seconds (16.89 k allocations: 1.052 MiB)
Running: rectangle_rule_left
 30.385121 seconds (471.41 M allocations: 7.025 GiB, 1.68% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.492553 seconds (476.96 M allocations: 7.107 GiB, 1.76% gc time)
Running: simpsons_rule
  0.000062 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.083222 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.076329 seconds (18.51 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033027 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.099726 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.112640 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.109484 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.103254 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.322627 seconds (382.71 k allocations: 20.087 MiB, 8.03% gc time)
Running: legendre_quadrature
  0.059104 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000135 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000079 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000531 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000377 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000523 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000041 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024652 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021190 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065964 seconds (76.98 k allocations: 4.494 MiB)
Running: chebyshev_quadrature with k=1
  0.203352 seconds (242.91 k allocations: 13.705 MiB)
Running: chebyshev_quadrature with k=2
  0.256589 seconds (298.48 k allocations: 16.789 MiB, 9.31% gc time)
Running: chebyshev_quadrature with k=3
  0.197563 seconds (278.52 k allocations: 15.191 MiB)
Running: chebyshev_quadrature with k=4
  0.238330 seconds (278.54 k allocations: 15.103 MiB)
Running: jacobi_quadrature with α=β=1
  2.478013 seconds (470.33 k allocations: 164.545 MiB, 4.98% gc time)
Running: legendre_quadrature
  0.154332 seconds (195.40 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.188662 seconds (206.85 k allocations: 12.033 MiB, 8.35% gc time)
Running: radau_quadrature
  0.171766 seconds (206.85 k allocations: 12.022 MiB)
Running: rectangle_rule_left
  1.086848 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.035521 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.062042 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.031125 seconds (29.27 k allocations: 1.831 MiB)
Running: simpsons38_rule
  0.035978 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.026521 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.060153 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.267605 seconds (250.11 k allocations: 13.823 MiB, 7.48% gc time)
Running: chebyshev_quadrature with k=2
  0.239071 seconds (306.29 k allocations: 16.824 MiB)
Running: chebyshev_quadrature with k=3
  0.248596 seconds (286.00 k allocations: 15.228 MiB)
Running: chebyshev_quadrature with k=4
  0.225280 seconds (286.02 k allocations: 15.277 MiB, 7.71% gc time)
Running: hermite_quadrature with k=2
 15.802996 seconds (22.35 M allocations: 1.164 GiB, 9.04% gc time)
Running: jacobi_quadrature with α=β=1
  0.481938 seconds (480.49 k allocations: 50.803 MiB, 10.31% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.226970 seconds (291.41 k allocations: 16.139 MiB)
Running: legendre_quadrature
  0.156293 seconds (202.53 k allocations: 11.655 MiB)
Running: lobatto_quadrature
  0.270270 seconds (228.46 k allocations: 37.843 MiB, 12.56% gc time)
Running: radau_quadrature
  0.238751 seconds (225.06 k allocations: 30.505 MiB, 8.17% gc time)
Running: rectangle_rule_left
  0.027337 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.024812 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.022723 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.036025 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.040950 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.027608 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039992 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.214307 seconds (245.19 k allocations: 13.567 MiB)
Running: chebyshev_quadrature with k=2
  0.272021 seconds (300.90 k allocations: 16.577 MiB, 9.02% gc time)
Running: chebyshev_quadrature with k=3
  0.232138 seconds (280.86 k allocations: 15.005 MiB)
Running: chebyshev_quadrature with k=4
  0.321492 seconds (280.87 k allocations: 15.006 MiB)
Running: hermite_quadrature with k=2
  0.317848 seconds (179.99 k allocations: 10.330 MiB, 10.19% gc time)
Running: jacobi_quadrature with α=β=1
 10.663443 seconds (473.00 k allocations: 1.176 GiB, 10.05% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.206281 seconds (286.26 k allocations: 15.930 MiB)
Running: legendre_quadrature
  0.192146 seconds (197.69 k allocations: 11.426 MiB)
Running: lobatto_quadrature
  0.219843 seconds (218.81 k allocations: 23.547 MiB, 6.33% gc time)
Running: radau_quadrature
  0.245233 seconds (217.96 k allocations: 21.474 MiB)
Running: rectangle_rule_left
  0.027259 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.031930 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.027301 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.060012 seconds (33.83 k allocations: 1.966 MiB, 27.37% gc time)
Running: simpsons38_rule
  0.040874 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.028631 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029275 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.186556 seconds (243.47 k allocations: 13.780 MiB)
Running: chebyshev_quadrature with k=2
  0.223801 seconds (299.07 k allocations: 16.903 MiB)
Running: chebyshev_quadrature with k=3
  0.207398 seconds (279.13 k allocations: 15.210 MiB, 7.31% gc time)
Running: chebyshev_quadrature with k=4
  0.226469 seconds (279.14 k allocations: 15.040 MiB)
Running: jacobi_quadrature with α=β=1
  2.919102 seconds (470.98 k allocations: 195.587 MiB, 12.65% gc time)
Running: legendre_quadrature
  0.259494 seconds (195.96 k allocations: 11.333 MiB)
Running: lobatto_quadrature
  0.189753 seconds (207.42 k allocations: 12.048 MiB)
Running: radau_quadrature
  0.180313 seconds (207.41 k allocations: 12.046 MiB)
Running: rectangle_rule_left
  0.349273 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.028388 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.114687 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.048484 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.095071 seconds (45.77 k allocations: 2.865 MiB, 53.34% gc time)
Running: trapezoidal_rule
  0.024214 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.073291 seconds (33.01 k allocations: 1.928 MiB)
Running: chebyshev_quadrature with k=1
  0.211119 seconds (244.06 k allocations: 13.726 MiB)
Running: chebyshev_quadrature with k=2
  0.239605 seconds (299.69 k allocations: 16.838 MiB)
Running: chebyshev_quadrature with k=3
  0.285850 seconds (279.69 k allocations: 15.134 MiB, 17.54% gc time)
Running: chebyshev_quadrature with k=4
  0.212083 seconds (279.70 k allocations: 15.215 MiB)
Running: jacobi_quadrature with α=β=1
  1.770882 seconds (471.66 k allocations: 150.272 MiB, 9.73% gc time)
Running: legendre_quadrature
  0.174463 seconds (196.56 k allocations: 11.360 MiB, 7.97% gc time)
Running: lobatto_quadrature
  0.176297 seconds (208.02 k allocations: 12.068 MiB)
Running: radau_quadrature
  0.213937 seconds (208.01 k allocations: 12.063 MiB)
Running: rectangle_rule_left
  1.303490 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.033480 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.175470 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.038694 seconds (30.79 k allocations: 1.894 MiB)
Running: simpsons38_rule
  0.043014 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.075530 seconds (58.63 k allocations: 2.084 MiB, 58.99% gc time)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179891 seconds (154.67 k allocations: 9.254 MiB)
Running: chebyshev_quadrature with k=1
  0.172136 seconds (91.84 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.183334 seconds (127.61 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.170107 seconds (116.19 k allocations: 3.872 MiB)
Running: chebyshev_quadrature with k=4
  0.164787 seconds (95.72 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  2.292639 seconds (513.43 k allocations: 169.607 MiB, 5.60% gc time)
Running: legendre_quadrature
  0.126889 seconds (38.95 k allocations: 2.159 MiB)
Running: lobatto_quadrature
  0.000122 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000060 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.874990 seconds (590.00 M allocations: 8.792 GiB, 2.81% gc time)
Running: rectangle_rule_midpoint
  0.000046 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.862811 seconds (592.75 M allocations: 8.833 GiB, 2.59% gc time)
Running: simpsons_rule
  0.000074 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.034858 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027916 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.256743 seconds (565.30 M allocations: 8.434 GiB, 3.91% gc time)
Running: chebyshev_quadrature with k=1
  0.500985 seconds (445.55 k allocations: 24.751 MiB, 3.00% gc time)
Running: chebyshev_quadrature with k=2
 13.746264 seconds (503.37 k allocations: 4.042 GiB, 4.77% gc time)
Running: chebyshev_quadrature with k=3
  6.608334 seconds (293.75 k allocations: 1.644 GiB, 4.33% gc time)
Running: chebyshev_quadrature with k=4
  9.653717 seconds (293.76 k allocations: 2.262 GiB, 2.78% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 66.603156 seconds (510.10 k allocations: 13.256 GiB, 2.40% gc time)
Running: legendre_quadrature.
  7.240644 seconds (235.53 k allocations: 1.977 GiB, 2.62% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.887131 seconds (8.24 M allocations: 13.384 GiB, 4.45% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.193973 seconds (7.24 M allocations: 13.369 GiB, 2.90% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.257524 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.567508 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.272196 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.207909 seconds (600.04 M allocations: 8.943 GiB, 8.35% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.045436 seconds (600.05 M allocations: 8.944 GiB, 8.51% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.445903 seconds (600.04 M allocations: 8.943 GiB, 8.38% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058013 seconds (129.55 k allocations: 3.742 MiB)
Running: chebyshev_quadrature with k=1
  0.223288 seconds (260.74 k allocations: 14.232 MiB)
Running: chebyshev_quadrature with k=2
  0.202864 seconds (286.78 k allocations: 15.385 MiB)
Running: chebyshev_quadrature with k=3
  0.206098 seconds (263.22 k allocations: 13.642 MiB)
Running: chebyshev_quadrature with k=4
  0.212606 seconds (263.23 k allocations: 13.643 MiB)
Running: jacobi_quadrature with α=β=1
  0.402084 seconds (409.14 k allocations: 36.138 MiB)
Running: laguerre_quadrature with k=2
  0.186998 seconds (190.35 k allocations: 11.063 MiB)
Running: legendre_quadrature
  0.128677 seconds (153.58 k allocations: 8.535 MiB)
Running: lobatto_quadrature
  0.045424 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.040170 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.060138 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.049750 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.054146 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.001911 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.077107 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.227507 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.002022 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.172750 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.136790 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.140968 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.137700 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  8.276644 seconds (406.01 k allocations: 906.780 MiB, 5.50% gc time)
Running: legendre_quadrature
  0.125850 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000349 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000298 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.791407 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000416 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.378169 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001397 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000416 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.108779 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.110956 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.119553 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.121381 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.443660 seconds (392.21 k allocations: 254.052 MiB)
Running: legendre_quadrature
  0.062847 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000116 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000063 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.531450 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001114 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.447247 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001912 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
