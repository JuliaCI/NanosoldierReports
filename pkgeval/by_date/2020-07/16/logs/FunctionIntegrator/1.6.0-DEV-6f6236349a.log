Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_GoDaCM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_GoDaCM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.036035 seconds (1.41 M allocations: 76.353 MiB, 5.07% gc time)
Running: chebyshev_quadrature with k=1
  1.734005 seconds (2.26 M allocations: 130.185 MiB, 2.49% gc time)
Running: chebyshev_quadrature with k=2
  0.297071 seconds (428.78 k allocations: 24.696 MiB)
Running: chebyshev_quadrature with k=3
  0.361589 seconds (549.69 k allocations: 30.241 MiB, 5.93% gc time)
Running: chebyshev_quadrature with k=4
  0.321028 seconds (492.38 k allocations: 26.762 MiB, 3.80% gc time)
Running: jacobi_quadrature with α=β=1
 40.953030 seconds (39.54 M allocations: 3.155 GiB, 8.90% gc time)
Running: laguerre_quadrature with k=1
  3.312609 seconds (3.36 M allocations: 188.482 MiB, 2.56% gc time)
Running: legendre_quadrature
  0.255881 seconds (217.76 k allocations: 12.525 MiB)
Running: lobatto_quadrature
  0.450640 seconds (348.35 k allocations: 20.993 MiB, 11.80% gc time)
Running: radau_quadrature
  0.365219 seconds (330.32 k allocations: 19.961 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.292354 seconds (100.02 M allocations: 1.491 GiB, 0.20% gc time)
Running: rectangle_rule_midpoint.
  0.144078 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.497839 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: simpsons_rule
  0.043180 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.149576 seconds (113.98 k allocations: 6.072 MiB)
Running: trapezoidal_rule
  0.343762 seconds (1.52 M allocations: 25.853 MiB, 7.72% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.111278 seconds (56.27 k allocations: 3.380 MiB)
Running: chebyshev_quadrature with k=1
  0.460083 seconds (279.15 k allocations: 14.262 MiB, 5.68% gc time)
Running: chebyshev_quadrature with k=2
  0.157652 seconds (116.32 k allocations: 3.844 MiB)
Running: chebyshev_quadrature with k=3
  0.162863 seconds (105.67 k allocations: 3.693 MiB)
Running: chebyshev_quadrature with k=4
  0.153408 seconds (88.28 k allocations: 3.337 MiB)
Running: jacobi_quadrature with α=β=1
  2.239583 seconds (540.02 k allocations: 163.850 MiB, 4.23% gc time)
Running: legendre_quadrature
  0.223509 seconds (63.13 k allocations: 3.551 MiB, 29.60% gc time)
Running: lobatto_quadrature
  0.024283 seconds (17.00 k allocations: 1.057 MiB)
Running: radau_quadrature
  0.024479 seconds (16.98 k allocations: 1.057 MiB)
Running: rectangle_rule_left
 29.188498 seconds (471.41 M allocations: 7.025 GiB, 2.77% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.780059 seconds (476.96 M allocations: 7.107 GiB, 1.88% gc time)
Running: simpsons_rule
  0.000062 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.062993 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.062951 seconds (18.50 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025769 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.082027 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.145567 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.106178 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.131876 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.356914 seconds (382.46 k allocations: 20.069 MiB, 7.84% gc time)
Running: legendre_quadrature
  0.069976 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000141 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000089 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000671 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000454 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000662 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000064 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025173 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.025930 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.074834 seconds (76.98 k allocations: 4.494 MiB)
Running: chebyshev_quadrature with k=1
  0.218108 seconds (242.91 k allocations: 13.703 MiB)
Running: chebyshev_quadrature with k=2
  0.265495 seconds (298.48 k allocations: 16.791 MiB, 9.38% gc time)
Running: chebyshev_quadrature with k=3
  0.223203 seconds (278.52 k allocations: 15.191 MiB)
Running: chebyshev_quadrature with k=4
  0.200597 seconds (278.54 k allocations: 15.121 MiB)
Running: jacobi_quadrature with α=β=1
  1.873604 seconds (470.08 k allocations: 164.540 MiB, 3.30% gc time)
Running: legendre_quadrature
  0.153371 seconds (195.40 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.185328 seconds (206.77 k allocations: 12.016 MiB, 7.96% gc time)
Running: radau_quadrature
  0.168925 seconds (206.76 k allocations: 12.013 MiB)
Running: rectangle_rule_left
  1.153844 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.029576 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.160392 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.034300 seconds (29.27 k allocations: 1.831 MiB)
Running: simpsons38_rule
  0.036931 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.029938 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051792 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.228701 seconds (250.11 k allocations: 13.822 MiB, 7.77% gc time)
Running: chebyshev_quadrature with k=2
  0.208739 seconds (306.30 k allocations: 16.841 MiB)
Running: chebyshev_quadrature with k=3
  0.215995 seconds (286.00 k allocations: 15.228 MiB)
Running: chebyshev_quadrature with k=4
  0.229217 seconds (286.02 k allocations: 15.320 MiB)
Running: hermite_quadrature with k=2
 15.377638 seconds (22.35 M allocations: 1.164 GiB, 9.67% gc time)
Running: jacobi_quadrature with α=β=1
  0.553665 seconds (480.23 k allocations: 50.782 MiB, 12.36% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.206184 seconds (291.41 k allocations: 16.139 MiB)
Running: legendre_quadrature
  0.203883 seconds (202.53 k allocations: 11.655 MiB, 18.56% gc time)
Running: lobatto_quadrature
  0.211062 seconds (228.38 k allocations: 37.838 MiB)
Running: radau_quadrature
  0.230355 seconds (224.97 k allocations: 30.499 MiB, 10.05% gc time)
Running: rectangle_rule_left
  0.026426 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.031923 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.023807 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.035973 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.038915 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.033186 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039470 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.283715 seconds (245.19 k allocations: 13.567 MiB, 17.25% gc time)
Running: chebyshev_quadrature with k=2
  0.255417 seconds (300.90 k allocations: 16.578 MiB)
Running: chebyshev_quadrature with k=3
  0.238294 seconds (280.86 k allocations: 15.005 MiB)
Running: chebyshev_quadrature with k=4
  0.273018 seconds (280.87 k allocations: 15.006 MiB, 13.44% gc time)
Running: hermite_quadrature with k=2
  0.154455 seconds (179.99 k allocations: 10.329 MiB)
Running: jacobi_quadrature with α=β=1
  8.967449 seconds (472.74 k allocations: 1.176 GiB, 9.02% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.234946 seconds (286.26 k allocations: 15.930 MiB, 7.59% gc time)
Running: legendre_quadrature
  0.158164 seconds (197.69 k allocations: 11.426 MiB)
Running: lobatto_quadrature
  0.196236 seconds (218.73 k allocations: 23.542 MiB)
Running: radau_quadrature
  0.206570 seconds (217.88 k allocations: 21.469 MiB, 6.43% gc time)
Running: rectangle_rule_left
  0.028482 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.027672 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.025976 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.034576 seconds (33.83 k allocations: 1.966 MiB)
Running: simpsons38_rule
  0.040555 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.028986 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034470 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.191140 seconds (243.47 k allocations: 13.779 MiB)
Running: chebyshev_quadrature with k=2
  0.244994 seconds (299.08 k allocations: 16.907 MiB)
Running: chebyshev_quadrature with k=3
  0.223660 seconds (279.13 k allocations: 15.210 MiB)
Running: chebyshev_quadrature with k=4
  0.272305 seconds (279.14 k allocations: 15.040 MiB, 8.02% gc time)
Running: jacobi_quadrature with α=β=1
  2.397136 seconds (470.72 k allocations: 195.574 MiB, 10.44% gc time)
Running: legendre_quadrature
  0.165016 seconds (195.96 k allocations: 11.338 MiB)
Running: lobatto_quadrature
  0.213024 seconds (207.33 k allocations: 12.041 MiB, 8.43% gc time)
Running: radau_quadrature
  0.218508 seconds (207.33 k allocations: 12.041 MiB)
Running: rectangle_rule_left
  0.307348 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.028697 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.117944 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.030350 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.038354 seconds (45.77 k allocations: 2.865 MiB)
Running: trapezoidal_rule
  0.035930 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037592 seconds (33.01 k allocations: 1.928 MiB)
Running: chebyshev_quadrature with k=1
  0.207172 seconds (244.06 k allocations: 13.726 MiB, 8.32% gc time)
Running: chebyshev_quadrature with k=2
  0.221424 seconds (299.69 k allocations: 16.822 MiB)
Running: chebyshev_quadrature with k=3
  0.271555 seconds (279.69 k allocations: 15.134 MiB)
Running: chebyshev_quadrature with k=4
  0.266364 seconds (279.70 k allocations: 15.216 MiB, 9.34% gc time)
Running: jacobi_quadrature with α=β=1
  1.401599 seconds (471.40 k allocations: 150.255 MiB, 6.10% gc time)
Running: legendre_quadrature
  0.156857 seconds (196.55 k allocations: 11.344 MiB)
Running: lobatto_quadrature
  0.169666 seconds (207.93 k allocations: 12.063 MiB, 10.84% gc time)
Running: radau_quadrature
  0.176213 seconds (207.92 k allocations: 12.058 MiB)
Running: rectangle_rule_left
  1.169331 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.025888 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.177779 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.034091 seconds (30.79 k allocations: 1.895 MiB)
Running: simpsons38_rule
  0.039983 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.029452 seconds (58.63 k allocations: 2.084 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.192163 seconds (154.68 k allocations: 9.251 MiB, 12.34% gc time)
Running: chebyshev_quadrature with k=1
  0.154433 seconds (91.84 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.147823 seconds (127.61 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.155507 seconds (116.19 k allocations: 3.872 MiB)
Running: chebyshev_quadrature with k=4
  0.158131 seconds (95.72 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  2.247005 seconds (513.09 k allocations: 169.612 MiB, 5.80% gc time)
Running: legendre_quadrature
  0.111672 seconds (38.95 k allocations: 2.159 MiB)
Running: lobatto_quadrature
  0.000100 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000058 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.834841 seconds (590.00 M allocations: 8.792 GiB, 3.47% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.698773 seconds (592.75 M allocations: 8.833 GiB, 3.57% gc time)
Running: simpsons_rule
  0.000078 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.036853 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024773 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.096428 seconds (565.30 M allocations: 8.434 GiB, 4.92% gc time)
Running: chebyshev_quadrature with k=1
  0.516114 seconds (445.63 k allocations: 24.757 MiB)
Running: chebyshev_quadrature with k=2
 13.984114 seconds (503.45 k allocations: 4.042 GiB, 3.99% gc time)
Running: chebyshev_quadrature with k=3
  5.827685 seconds (293.75 k allocations: 1.644 GiB, 5.10% gc time)
Running: chebyshev_quadrature with k=4
  8.567246 seconds (293.76 k allocations: 2.262 GiB, 2.35% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 64.139613 seconds (509.94 k allocations: 13.256 GiB, 2.83% gc time)
Running: legendre_quadrature.
  6.992109 seconds (235.62 k allocations: 1.977 GiB, 1.10% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.565483 seconds (8.24 M allocations: 13.384 GiB, 3.17% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.000202 seconds (7.24 M allocations: 13.369 GiB, 2.07% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.062679 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.223854 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.061200 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.761695 seconds (600.04 M allocations: 8.943 GiB, 7.84% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.000519 seconds (600.05 M allocations: 8.944 GiB, 8.26% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.745742 seconds (600.04 M allocations: 8.943 GiB, 8.31% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058037 seconds (129.55 k allocations: 3.741 MiB)
Running: chebyshev_quadrature with k=1
  0.231098 seconds (260.74 k allocations: 14.233 MiB)
Running: chebyshev_quadrature with k=2
  0.259579 seconds (286.78 k allocations: 15.385 MiB)
Running: chebyshev_quadrature with k=3
  0.208976 seconds (263.22 k allocations: 13.642 MiB)
Running: chebyshev_quadrature with k=4
  0.325722 seconds (263.23 k allocations: 13.706 MiB)
Running: jacobi_quadrature with α=β=1
  0.457536 seconds (408.89 k allocations: 36.107 MiB)
Running: laguerre_quadrature with k=2
  0.245110 seconds (190.35 k allocations: 11.075 MiB)
Running: legendre_quadrature
  0.141530 seconds (153.58 k allocations: 8.535 MiB)
Running: lobatto_quadrature
  0.037022 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.033546 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.067042 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.054855 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.060781 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.002037 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.061188 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.186742 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001196 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.143394 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.151293 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.157497 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.145562 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
 10.820985 seconds (405.75 k allocations: 906.759 MiB, 4.47% gc time)
Running: legendre_quadrature
  0.121804 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000269 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000175 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.838073 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000474 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.837646 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000080 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000076 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001006 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000566 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.123017 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.148489 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.218876 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.146996 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.391868 seconds (391.95 k allocations: 254.035 MiB)
Running: legendre_quadrature
  0.062323 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000195 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000076 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.711296 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001059 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.884741 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000086 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001692 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
