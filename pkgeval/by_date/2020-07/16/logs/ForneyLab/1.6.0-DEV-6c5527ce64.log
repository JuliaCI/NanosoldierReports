Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ForneyLab ──────────────────── v0.10.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [9fc3f58a] + ForneyLab v0.10.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9fc3f58a] + ForneyLab v0.10.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing ForneyLab
Status `/tmp/jl_FwdkVL/Project.toml`
  [9fc3f58a] ForneyLab v0.10.0
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_FwdkVL/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9fc3f58a] ForneyLab v0.10.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
FactorNode: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/test_factor_node.jl:7
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type ForneyLab.Variable to an object of type Symbol
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T at essentials.jl:171
    Symbol(::Any...) at strings/basic.jl:227
  Stacktrace:
    [1] ForneyLab.Poisson(out::ForneyLab.Variable, l::ForneyLab.Variable, id::ForneyLab.Variable)
      @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/poisson.jl:29
    [2] top-level scope
      @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_node.jl:38
    [3] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
    [4] top-level scope
      @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_node.jl:8
    [5] include
      @ ./Base.jl:375 [inlined]
    [6] include(x::String)
      @ Main.ForneyLabTest ~/.julia/packages/ForneyLab/Hz4kD/test/runtests.jl:5
    [7] top-level scope
      @ ~/.julia/packages/ForneyLab/Hz4kD/test/runtests.jl:11
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
    [9] top-level scope
      @ ~/.julia/packages/ForneyLab/Hz4kD/test/runtests.jl:10
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ none:6
   [12] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [14] _start()
      @ Base ./client.jl:485
  
generateId: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:42
  Expression: generateId(MockNode) == :mocknode_1
   Evaluated: var"mocknode)_1" == mocknode_1
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:42
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:39
generateId: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:43
  Expression: generateId(MockNode) == :mocknode_2
   Evaluated: var"mocknode)_2" == mocknode_2
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:43
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:39
generateId: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:44
  Test threw exception
  Expression: g.counters["mocknode"] == 2
  KeyError: key "mocknode" not found
  Stacktrace:
   [1] getindex(h::Dict{String,Int64}, key::String)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:44
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/test_factor_graph.jl:39
  
Addition node construction through + syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:14
  Test threw exception
  Expression: g.nodes[:addition_1] isa Addition
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:14
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:9
  
Addition node construction through + syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:20
  Test threw exception
  Expression: g.nodes[:addition_1] isa Addition
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:20
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:9
  
Addition node construction through - syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:29
  Test threw exception
  Expression: g.nodes[:addition_1] isa Addition
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:29
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:24
  
Addition node construction through - syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:32
  Test threw exception
  Expression: (g.nodes[:addition_1]).i[:out] == ((g.nodes[:gaussianmeanvariance_1]).i[:out]).partner
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:32
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:24
  
Addition node construction through - syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:33
  Test threw exception
  Expression: (g.nodes[:addition_1]).i[:in2] == ((g.nodes[:gaussianmeanvariance_2]).i[:out]).partner
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:33
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:24
  
Addition node construction through - syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:39
  Test threw exception
  Expression: g.nodes[:addition_1] isa Addition
  KeyError: key :addition_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:39
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_addition.jl:24
  
Multiplication node construction through * syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:15
  Test threw exception
  Expression: g.nodes[:multiplication_1] isa Multiplication
  KeyError: key :multiplication_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:15
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:9
  
Multiplication node construction through * syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:20
  Test threw exception
  Expression: g.nodes[:multiplication_1] isa Multiplication
  KeyError: key :multiplication_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:20
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_multiplication.jl:9
  
Exponential node construction through exp() syntax: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_exponential.jl:15
  Test threw exception
  Expression: g.nodes[:exponential_1] isa Exponential
  KeyError: key :exponential_1 not found
  Stacktrace:
   [1] getindex(h::Dict{Symbol,ForneyLab.FactorNode}, key::Symbol)
     @ Base ./dict.jl:468
   [2] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_exponential.jl:15
   [3] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_exponential.jl:9
  
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(dist::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Gamma}) at gamma.jl:78
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/gamma.jl:78
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(#unused#::Type{ForneyLab.Gamma}, marg_out::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Gamma}, marg_a::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}, marg_b::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}) at gamma.jl:86
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/gamma.jl:86
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = (::ForneyLab.var"#65#67"{ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Wishart}})(i::Int64) at none:0
└ @ ForneyLab ./none:0
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = (::ForneyLab.var"#69#70"{ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}})(i::Int64) at none:0
└ @ ForneyLab ./none:0
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = differentialEntropy(dist::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Beta}) at beta.jl:84
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/beta.jl:84
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = averageEnergy(#unused#::Type{ForneyLab.Beta}, marg_out::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Beta}, marg_a::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}, marg_b::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}) at beta.jl:92
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/beta.jl:92
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(dist::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.Dirichlet}) at dirichlet.jl:107
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:107
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(#unused#::Type{ForneyLab.Dirichlet}, marg_out::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.Dirichlet}, marg_a::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.PointMass}) at dirichlet.jl:129
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:129
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(dist::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Dirichlet}) at dirichlet.jl:117
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:117
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(#unused#::Type{ForneyLab.Dirichlet}, marg_out::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Dirichlet}, marg_a::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.PointMass}) at dirichlet.jl:143
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:143
Nonlinear integration with given inverse: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:69
  Expression: occursin("ruleSPNonlinearOutNG(nothing, messages[2], Main.ForneyLabTest.NonlinearTest.g)", algo)
   Evaluated: occursin("ruleSPNonlinearOutNG(nothing, messages[2], Main.ForneyLabTest.NonlinearTest.g)", "begin\n\nfunction step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 3))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=3.0))\nmessages[2] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=1.0))\nmessages[3] = ruleSPNonlinearOutNG(nothing, messages[2], g)\n\nmarginals[:y] = messages[1].dist * messages[3].dist\n\nreturn marginals\n\nend\n\nend # block")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:69
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:61
Nonlinear integration with given inverse: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:74
  Expression: occursin("ruleSPNonlinearIn1GG(messages[2], nothing, Main.ForneyLabTest.NonlinearTest.g, Main.ForneyLabTest.NonlinearTest.g_inv)", algo)
   Evaluated: occursin("ruleSPNonlinearIn1GG(messages[2], nothing, Main.ForneyLabTest.NonlinearTest.g, Main.ForneyLabTest.NonlinearTest.g_inv)", "begin\n\nfunction step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 3))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=1.0))\nmessages[2] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=3.0))\nmessages[3] = ruleSPNonlinearIn1GG(messages[2], nothing, g, g_inv)\n\nmarginals[:x] = messages[1].dist * messages[3].dist\n\nreturn marginals\n\nend\n\nend # block")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:74
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:61
Nonlinear integration without given inverse: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:86
  Expression: occursin("ruleSPNonlinearOutNG(nothing, messages[2], Main.ForneyLabTest.NonlinearTest.g)", algo)
   Evaluated: occursin("ruleSPNonlinearOutNG(nothing, messages[2], Main.ForneyLabTest.NonlinearTest.g)", "begin\n\nfunction step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 3))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=3.0))\nmessages[2] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=1.0))\nmessages[3] = ruleSPNonlinearOutNG(nothing, messages[2], g)\n\nmarginals[:y] = messages[1].dist * messages[3].dist\n\nreturn marginals\n\nend\n\nend # block")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:86
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:78
Nonlinear integration without given inverse: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:92
  Expression: occursin("ruleSPNonlinearIn1GG(messages[2], messages[1], Main.ForneyLabTest.NonlinearTest.g)", algo)
   Evaluated: occursin("ruleSPNonlinearIn1GG(messages[2], messages[1], Main.ForneyLabTest.NonlinearTest.g)", "begin\n\nfunction init()\n\nmessages = Array{Message}(undef, 3)\nmessages[1] = Message(vague(GaussianMeanVariance))\n\nreturn messages\n\nend\n\nfunction step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 3))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=1.0))\nmessages[2] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=2.0), Message(Univariate, PointMass, m=3.0))\nmessages[3] = ruleSPNonlinearIn1GG(messages[2], messages[1], g)\n\nmarginals[:x] = messages[1].dist * messages[3].dist\n\nreturn marginals\n\nend\n\nend # block")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:92
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_nonlinear.jl:78
┌ Warning: `lfactorial(x)` is deprecated, use `logfactorial(x)` instead.
│   caller = (::ForneyLab.var"#106#107"{Float64})(k::Int64) at float.jl:0
└ @ ForneyLab ./float.jl:0
┌ Warning: `lfactorial(x)` is deprecated, use `logfactorial(x)` instead.
│   caller = (::ForneyLab.var"#106#107"{Float64})(k::Int64) at none:0
└ @ ForneyLab ./none:0
RecognitionFactor: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:28
  Expression: q_m.id == :recognitionfactor_1
   Evaluated: var"recognitionfactor)_1" == recognitionfactor_1
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:28 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
RecognitionFactor: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:32
  Test threw exception
  Expression: rf.recognition_factors[:recognitionfactor_1] === q_m
  KeyError: key :recognitionfactor_1 not found
  Stacktrace:
   [1] getindex
     @ ./dict.jl:468 [inlined]
   [2] macro expansion
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:32 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
  
RecognitionFactor: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:35
  Expression: q_w.id == :recognitionfactor_2
   Evaluated: var"recognitionfactor)_2" == recognitionfactor_2
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:35 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
RecognitionFactor: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:39
  Test threw exception
  Expression: rf.recognition_factors[:recognitionfactor_2] === q_w
  KeyError: key :recognitionfactor_2 not found
  Stacktrace:
   [1] getindex
     @ ./dict.jl:468 [inlined]
   [2] macro expansion
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:39 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
  
RecognitionFactor: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:43
  Expression: q_m_w.id == :recognitionfactor_3
   Evaluated: var"recognitionfactor)_3" == recognitionfactor_3
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:43 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
RecognitionFactor: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:47
  Test threw exception
  Expression: rf.recognition_factors[:recognitionfactor_3] === q_m_w
  KeyError: key :recognitionfactor_3 not found
  Stacktrace:
   [1] getindex
     @ ./dict.jl:468 [inlined]
   [2] macro expansion
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:47 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
  
RecognitionFactor: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:50
  Expression: q_y.id == :recognitionfactor_4
   Evaluated: var"recognitionfactor)_4" == recognitionfactor_4
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:50 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
RecognitionFactor: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:54
  Test threw exception
  Expression: rf.recognition_factors[:recognitionfactor_4] === q_y
  KeyError: key :recognitionfactor_4 not found
  Stacktrace:
   [1] getindex
     @ ./dict.jl:468 [inlined]
   [2] macro expansion
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:54 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/algorithms/variational_bayes/test_recognition_factorization.jl:16
  
Read from data: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:23
  Expression: occursin("marginals[:variable_2] = messages[1].dist * messages[2].dist", algo)
   Evaluated: occursin("marginals[:variable_2] = messages[1].dist * messages[2].dist", "function step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 2))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=0.0), Message(Univariate, PointMass, m=1.0))\nmessages[2] = ruleSPGaussianMeanVarianceMPNP(Message(Univariate, PointMass, m=data[:x]), nothing, Message(Univariate, PointMass, m=1.0))\n\nmarginals[:variable)_2] = messages[1].dist * messages[2].dist\n\nreturn marginals\n\nend")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:23
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:8
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [5] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:7
Model with dangling edge: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:38
  Expression: occursin("marginals[:variable_1] = messages[1].dist", algo)
   Evaluated: occursin("marginals[:variable_1] = messages[1].dist", "function step!(data::Dict, marginals::Dict=Dict(), messages::Vector{Message}=Array{Message}(undef, 1))\n\nmessages[1] = ruleSPGaussianMeanVarianceOutNPP(nothing, Message(Univariate, PointMass, m=0.0), Message(Univariate, PointMass, m=1.0))\n\nmarginals[:variable)_1] = messages[1].dist\n\nreturn marginals\n\nend")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:38
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:27
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [5] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/engines/julia/test_message_passing.jl:7
Composite node construction: Test Failed at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:31
  Expression: nd.id == :statetransition_1
   Evaluated: var"statetransition)_1" == statetransition_1
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:31 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:20
Composite node construction: Error During Test at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:39
  Test threw exception
  Expression: g.nodes[:statetransition_1] == nd
  KeyError: key :statetransition_1 not found
  Stacktrace:
   [1] getindex
     @ ./dict.jl:468 [inlined]
   [2] macro expansion
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:39 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] top-level scope
     @ ~/.julia/packages/ForneyLab/Hz4kD/test/factor_nodes/test_composite.jl:20
  
Test Summary:                                                  | Pass  Fail  Error  Total
ForneyLab                                                      | 1333    13     16   1362
  Helpers                                                      |   33                  33
  FactorNode                                                   |   79            1     80
  Interface                                                    |    3                   3
  matches                                                      |    4                   4
  Univariate                                                   |   15                  15
  Multivariate                                                 |   12                  12
  MatrixVariate                                                |    4                   4
  PointMass ProbabilityDistribution and Message construction   |   12                  12
  dims                                                         |    4                   4
  isValid                                                      |    8                   8
  gaussianQuadrature                                           |    3                   3
  @RV                                                          |   21                  21
  Edge                                                         |    6                   6
  disconnect!                                                  |   12                  12
  Variable                                                     |    3                   3
  associate!                                                   |   42                  42
  FactorGraph                                                  |    8                   8
  generateId                                                   |          2      1      3
  addNode!                                                     |    4                   4
  @ensureVariables                                             |    2                   2
  Clamp                                                        |    2                   2
  constant                                                     |    3                   3
  placeholder                                                  |    7                   7
  SPClamp                                                      |    9                   9
  SPEqualityGaussian                                           |   11                  11
  SPEqualityGammaWishart                                       |   13                  13
  SPEqualityBernoulli                                          |    8                   8
  SPEqualityBeta                                               |    8                   8
  SPEqualityCategorical                                        |    8                   8
  SPEqualityDirichlet                                          |    8                   8
  SPEqualityPointMass                                          |   16                  16
  Addition node construction through + syntax                  |    2            2      4
  Addition node construction through - syntax                  |    2            4      6
  SPAdditionOutNGG                                             |    7                   7
  SPAdditionIn2GGN                                             |    5                   5
  SPAdditionIn1GNG                                             |    5                   5
  SPAdditionOutNGP                                             |    5                   5
  SPAdditionOutNPG                                             |    5                   5
  SPAdditionIn1PNG                                             |    5                   5
  SPAdditionIn2PGN                                             |    5                   5
  SPAdditionIn1GNP                                             |    5                   5
  SPAdditionIn2GPN                                             |    5                   5
  SPAdditionOutNPP                                             |    5                   5
  SPAdditionIn2PPN                                             |    5                   5
  SPAdditionIn1PNP                                             |    5                   5
  Multiplication node construction through * syntax            |    2            2      4
  SPMultiplicationOutNGP                                       |    7                   7
  SPMultiplicationOutNPG                                       |    6                   6
  SPMultiplicationOutNPP                                       |    5                   5
  SPMultiplicationIn1GNP                                       |    5                   5
  SPMultiplicationIn1PNP                                       |    5                   5
  SPMultiplicationAGPN                                         |    4                   4
  SPMultiplicationAPPN                                         |    4                   4
  Exponential node construction through exp() syntax           |    1            1      2
  SPExponentialOutNG                                           |    4                   4
  SPExponentialOutNP                                           |    4                   4
  SPExponentialIn1LN                                           |    4                   4
  SPExponentialIn1PN                                           |    4                   4
  dims                                                         |    2                   2
  vague                                                        |    2                   2
  isProper                                                     |    5                   5
  ==                                                           |    4                   4
  unsafe statistics                                            |   16                  16
  convert                                                      |    4                   4
  SPGaussianMeanVarianceOutNPP                                 |    6                   6
  SPGaussianMeanVarianceMPNP                                   |    6                   6
  SPGaussianMeanVarianceOutNGP                                 |    6                   6
  SPGaussianMeanVarianceMGNP                                   |    6                   6
  VBGaussianMeanVarianceM                                      |    6                   6
  VBGaussianMeanVarianceOut                                    |    6                   6
  averageEnergy and differentialEntropy                        |    3                   3
  dims                                                         |    2                   2
  vague                                                        |    2                   2
  isProper                                                     |    5                   5
  ==                                                           |    4                   4
  unsafe statistics                                            |   16                  16
  convert                                                      |    4                   4
  SPGaussianMeanPrecisionOutNPP                                |    6                   6
  SPGaussianMeanPrecisionMPNP                                  |    6                   6
  SPGaussianMeanPrecisionOutNGP                                |    6                   6
  SPGaussianMeanPrecisionMGNP                                  |    6                   6
  VBGaussianMeanPrecisionM                                     |    6                   6
  VBGaussianMeanPrecisionW                                     |    5                   5
  VBGaussianMeanPrecisionOut                                   |    5                   5
  SVBGaussianMeanPrecisionMGVD                                 |    5                   5
  SVBGaussianMeanPrecisionW                                    |    5                   5
  SVBGaussianMeanPrecisionOutVGD                               |    5                   5
  MGaussianMeanPrecisionGGD                                    |    4                   4
  averageEnergy and differentialEntropy                        |    4                   4
  dims                                                         |    2                   2
  vague                                                        |    2                   2
  isProper                                                     |    5                   5
  ==                                                           |    4                   4
  unsafe statistics                                            |   16                  16
  convert                                                      |    4                   4
  SPGaussianWeightedMeanPrecisionOutNPP                        |    6                   6
  VBGaussianWeightedMeanPrecisionOut                           |    6                   6
  sample                                                       |    3                   3
  prod!                                                        |    8                   8
  dims                                                         |    1                   1
  vague                                                        |    1                   1
  prod!                                                        |    4                   4
  unsafe mean and variance                                     |    2                   2
  SPGammaOutNPP                                                |    4                   4
  VBGammaOut                                                   |    5                   5
  averageEnergy and differentialEntropy                        |    1                   1
  dims                                                         |    1                   1
  vague                                                        |    1                   1
  unsafe mean and variance                                     |    6                   6
  Gamma approximatons to LogNormal                             |    1                   1
  prod!                                                        |    3                   3
  SPLogNormalOutNPP                                            |    4                   4
  VBLogNormalOut                                               |    5                   5
  averageEnergy and differentialEntropy                        |    1                   1
  dims                                                         |    1                   1
  vague                                                        |    1                   1
  isProper                                                     |    3                   3
  prod!                                                        |    4                   4
  unsafe mean and variance                                     |    5                   5
  SPWishartOutNPP                                              |    4                   4
  VBWishartOut                                                 |    5                   5
  averageEnergy and differentialEntropy                        |    2                   2
  Bernoulli ProbabilityDistribution and Message construction   |    7                   7
  dims                                                         |    1                   1
  vague                                                        |    1                   1
  unsafe mean and variance                                     |    2                   2
  prod!                                                        |    2                   2
  SPBernoulliOutNP                                             |    4                   4
  SPBernoulliIn1PN                                             |    4                   4
  SPBernoulliOutNB                                             |    4                   4
  VBBernoulliOut                                               |    6                   6
  VBBernoulliIn1                                               |    4                   4
  averageEnergy and differentialEntropy                        |    1                   1
  Categorical ProbabilityDistribution and Message construction |    7                   7
  dims                                                         |    1                   1
  vague                                                        |    2                   2
  unsafe mean and variance                                     |    1                   1
  sample                                                       |    3                   3
  prod!                                                        |    3                   3
  SPCategoricalOutNP                                           |    4                   4
  VBCategoricalOut                                             |    6                   6
  VBCategoricalIn1                                             |    6                   6
  averageEnergy and differentialEntropy                        |    3                   3
  Contingency ProbabilityDistribution and Message construction |    4                   4
  dims                                                         |    1                   1
  vague                                                        |    2                   2
  differentialEntropy                                          |    1                   1
  SPTransitionOutNPP                                           |    5                   5
  SPTransitionIn1PNP                                           |    4                   4
  SPTransitionOutNCP                                           |    5                   5
  SPTransitionIn1CNP                                           |    4                   4
  VBTransitionOut                                              |    4                   4
  VBTransitionIn1                                              |    4                   4
  VBTransitionA                                                |    4                   4
  SVBTransitionOutVCD                                          |    4                   4
  SVBTransitionIn1CVD                                          |    4                   4
  SVBTransitionADV                                             |    4                   4
  MTransitionCCD                                               |    3                   3
  averageEnergy                                                |    2                   2
  Beta ProbabilityDistribution and Message construction        |    7                   7
  dims                                                         |    1                   1
  vague                                                        |    1                   1
  unsafe mean and variance                                     |    4                   4
  prod!                                                        |    4                   4
  SPBetaOutNPP                                                 |    4                   4
  VBBetaOut                                                    |    4                   4
  averageEnergy and differentialEntropy                        |    1                   1
  Dirichlet ProbabilityDistribution and Message construction   |    9                   9
  dims                                                         |    2                   2
  vague                                                        |    2                   2
  unsafe mean and variance                                     |    5                   5
  prod!                                                        |    8                   8
  SPDirichletOutNP                                             |    5                   5
  VBDirichletOut                                               |    5                   5
  averageEnergy and differentialEntropy                        |    4                   4
  VBGaussianMixtureM                                           |   14                  14
  VBGaussianMixtureW                                           |   14                  14
  VBGaussianMixtureZBer                                        |    6                   6
  VBGaussianMixtureZCat                                        |    6                   6
  VBGaussianMixtureOut                                         |    8                   8
  averageEnergy                                                |    4                   4
  mapToBernoulliParameterRange                                 |    8                   8
  SPSigmoidBinNG                                               |    5                   5
  EPSigmoidRealGB                                              |    7                   7
  EPSigmoidRealGC                                              |    7                   7
  EPSigmoidRealGP                                              |    6                   6
  sigmaPointsAndWeights                                        |    6                   6
  SPNonlinearOutNG                                             |    5                   5
  SPNonlinearIn1GG                                             |    7                   7
  Nonlinear integration with given inverse                     |    1     2             3
  Nonlinear integration without given inverse                  |    3     2             5
  SPDotProductOutNPG                                           |    4                   4
  SPDotProductOutNGP                                           |    4                   4
  SPDotProductIn1GNP                                           |    4                   4
  SPDotProductIn2GPN                                           |    4                   4
  Poisson ProbabilityDistribution construction                 |    4                   4
  Poisson Message construction                                 |    4                   4
  dims                                                         |    1                   1
  slug                                                         |    1                   1
  vague                                                        |    1                   1
  isProper                                                     |    3                   3
  unsafe mean and variance                                     |    2                   2
  SPPoissonOutNP                                               |    4                   4
  SPPoissonLPN                                                 |    4                   4
  VBPoissonOut                                                 |    4                   4
  VBPoissonL                                                   |    5                   5
  averageEnergy and differentialEntropy                        |    3                   3
  Poisson node construction                                    |    8                   8
  Parameter estimation                                         |    1                   1
  LinkedList                                                   |    4                   4
  DependencyGraph                                              |   23                  23
  Message                                                      |   10                  10
  matches                                                      |   13                  13
  ScheduleEntry                                                |    1                   1
  summaryPropagationSchedule                                   |    6                   6
  flatten                                                      |    4                   4
  MarginalScheduleEntry                                        |    1                   1
  marginalSchedule                                             |    8                   8
  @SumProductRule                                              |    1                   1
  inferUpdateRule!                                             |    4                   4
  sumProductSchedule                                           |    4                   4
  RecognitionFactorization                                     |    3                   3
  RecognitionFactor                                            |   12     4      4     20
  hasCollider()                                                |    6                   6
  Cluster                                                      |    4                   4
  @marginalRule                                                |    1                   1
  inferMarginalRule                                            |    1                   1
  marginalSchedule                                             |   13                  13
  @naiveVariationalRule                                        |    1                   1
  inferUpdateRule!                                             |    1                   1
  variationalSchedule                                          |    7                   7
  @structuredVariationalRule                                   |    3                   3
  inferUpdateRule!                                             |    3                   3
  variationalSchedule                                          |   14                  14
  @expectationPropagationRule                                  |    1                   1
  inferUpdateRule!                                             |    1                   1
  expectationPropagationSchedule                               |    5                   5
  variationalExpectationPropagationSchedule                    |    5                   5
  Julia messagePassingAlgorithm                                |    5     2             7
    Read from data                                             |    3     1             4
    Model with dangling edge                                   |    2     1             3
  Julia algorithm execution                                    |    1                   1
  @composite                                                   |    1                   1
  Composite node construction                                  |    8     1      1     10
  Custom SPStateTransitionX                                    |    4                   4
  Composite node scheduling and algorithm compilation          |   14                  14
  Composite node algorithm execution                           |    1                   1
ERROR: LoadError: Some tests did not pass: 1333 passed, 13 failed, 16 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ForneyLab/Hz4kD/test/runtests.jl:5
ERROR: Package ForneyLab errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
