Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DualNumbers ──────────────────── v0.6.2
  Installed InfiniteArrays ───────────────── v0.7.3
  Installed FillArrays ───────────────────── v0.8.13
  Installed IterTools ────────────────────── v1.3.0
  Installed BlockBandedMatrices ──────────── v0.8.10
  Installed StatsBase ────────────────────── v0.33.0
  Installed BandedMatrices ───────────────── v0.15.15
  Installed ApproxFunOrthogonalPolynomials ─ v0.3.4
  Installed IntelOpenMP_jll ──────────────── v2018.0.3+0
  Installed Nullables ────────────────────── v1.0.0
  Installed FastGaussQuadrature ──────────── v0.4.2
  Installed FFTW_jll ─────────────────────── v3.3.9+5
  Installed OpenBLAS_jll ─────────────────── v0.3.9+5
  Installed IntervalSets ─────────────────── v0.5.1
  Installed RecipesBase ──────────────────── v1.0.1
  Installed Polynomials ──────────────────── v1.1.3
  Installed LowRankApprox ────────────────── v0.4.0
  Installed ExprTools ────────────────────── v0.1.1
  Installed TimeZones ────────────────────── v1.2.0
  Installed DataAPI ──────────────────────── v1.3.0
  Installed FastTransforms_jll ───────────── v0.2.13+1
  Installed Compat ───────────────────────── v3.13.0
  Installed BlockArrays ──────────────────── v0.12.10
  Installed Mocking ──────────────────────── v0.7.1
  Installed MatrixFactorizations ─────────── v0.5.0
  Installed LazyArrays ───────────────────── v0.16.15
  Installed FastTransforms ───────────────── v0.8.2
  Installed ToeplitzMatrices ─────────────── v0.6.0
  Installed ArrayLayouts ─────────────────── v0.3.7
  Installed MacroTools ───────────────────── v0.5.5
  Installed Calculus ─────────────────────── v0.5.1
  Installed DataStructures ───────────────── v0.17.19
  Installed Libiconv_jll ─────────────────── v1.16.0+5
  Installed AbstractFFTs ─────────────────── v0.5.0
  Installed ApproxFunBase ────────────────── v0.3.5
  Installed Intervals ────────────────────── v1.4.0
  Installed GMP_jll ──────────────────────── v6.2.0+1
  Installed DomainSets ───────────────────── v0.3.1
  Installed Reexport ─────────────────────── v0.2.0
  Installed DSP ──────────────────────────── v0.6.7
  Installed OpenSpecFun_jll ──────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─── v0.3.3+0
  Installed MPFR_jll ─────────────────────── v4.0.2+2
  Installed NaNMath ──────────────────────── v0.3.4
  Installed MKL_jll ──────────────────────── v2020.1.216+0
  Installed XML2_jll ─────────────────────── v2.9.10+1
  Installed OrderedCollections ───────────── v1.3.0
  Installed FFTW ─────────────────────────── v1.2.2
  Installed EzXML ────────────────────────── v1.1.0
  Installed Missings ─────────────────────── v0.4.3
  Installed EllipsisNotation ─────────────── v0.4.0
  Installed SortingAlgorithms ────────────── v0.3.1
  Installed Zlib_jll ─────────────────────── v1.2.11+14
  Installed SpecialFunctions ─────────────── v0.10.3
  Installed BinaryProvider ───────────────── v0.5.10
  Installed StaticArrays ─────────────────── v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [b70543e2] + ApproxFunOrthogonalPolynomials v0.3.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [fbd15aa5] + ApproxFunBase v0.3.5
  [b70543e2] + ApproxFunOrthogonalPolynomials v0.3.4
  [4c555306] + ArrayLayouts v0.3.7
  [aae01518] + BandedMatrices v0.15.15
  [b99e7846] + BinaryProvider v0.5.10
  [8e7c35d0] + BlockArrays v0.12.10
  [ffab5731] + BlockBandedMatrices v0.8.10
  [49dc2e85] + Calculus v0.5.1
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [5b8099bc] + DomainSets v0.3.1
  [fa6b7ba4] + DualNumbers v0.6.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.2
  [057dd010] + FastTransforms v0.8.2
  [34b6f7d7] + FastTransforms_jll v0.2.13+1
  [1a297f60] + FillArrays v0.8.13
  [781609d7] + GMP_jll v6.2.0+1
  [4858937d] + InfiniteArrays v0.7.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [8197267c] + IntervalSets v0.5.1
  [d8418881] + Intervals v1.4.0
  [c8e1da08] + IterTools v1.3.0
  [5078a376] + LazyArrays v0.16.15
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [898213cb] + LowRankApprox v0.4.0
  [856f044c] + MKL_jll v2020.1.216+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.5.0
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [4d1e1d77] + Nullables v1.0.0
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [f27b6e38] + Polynomials v1.1.3
  [3cdcf5f2] + RecipesBase v1.0.1
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.2.0
  [c751599d] + ToeplitzMatrices v0.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones ─────→ `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
   Building FFTW ──────────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building FastTransforms → `~/.julia/packages/FastTransforms/MjTJy/deps/build.log`
    Testing ApproxFunOrthogonalPolynomials
Status `/tmp/jl_JiqtPw/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [fbd15aa5] ApproxFunBase v0.3.5
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.4
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.10
  [5b8099bc] DomainSets v0.3.1
  [7a1cc6ca] FFTW v1.2.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.8.2
  [1a297f60] FillArrays v0.8.13
  [8197267c] IntervalSets v0.5.1
  [5078a376] LazyArrays v0.16.15
  [189a3867] Reexport v0.2.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [37e2e46d] LinearAlgebra
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_JiqtPw/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [fbd15aa5] ApproxFunBase v0.3.5
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.4
  [4c555306] ArrayLayouts v0.3.7
  [aae01518] BandedMatrices v0.15.15
  [b99e7846] BinaryProvider v0.5.10
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.10
  [49dc2e85] Calculus v0.5.1
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [5b8099bc] DomainSets v0.3.1
  [fa6b7ba4] DualNumbers v0.6.2
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.8.2
  [34b6f7d7] FastTransforms_jll v0.2.13+1
  [1a297f60] FillArrays v0.8.13
  [781609d7] GMP_jll v6.2.0+1
  [4858937d] InfiniteArrays v0.7.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.4.0
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.15
  [94ce4f54] Libiconv_jll v1.16.0+5
  [898213cb] LowRankApprox v0.4.0
  [856f044c] MKL_jll v2020.1.216+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.5.0
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [4d1e1d77] Nullables v1.0.0
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [f27b6e38] Polynomials v1.1.3
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.2.0
  [c751599d] ToeplitzMatrices v0.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Domain        |    1      1
Test Summary: | Pass  Total
Clenshaw      |    1      1
  4.124197 seconds (4.58 M allocations: 261.666 MiB, 4.00% gc time)
Test Summary: | Pass  Total
Chebyshev     |  488    488
111.028776 seconds (101.85 M allocations: 5.770 GiB, 4.49% gc time)
Test Summary: | Pass  Total
Complex       |   13     13
  5.255019 seconds (3.61 M allocations: 209.959 MiB, 1.09% gc time)
Test Summary: | Pass  Total
broadcast     |   18     18
 36.028925 seconds (27.71 M allocations: 1.564 GiB, 4.06% gc time)
  6.991544 seconds (4.63 M allocations: 246.061 MiB, 2.44% gc time)
 10.857244 seconds (7.25 M allocations: 468.221 MiB, 12.31% gc time)
  7.398343 seconds (6.75 M allocations: 369.889 MiB, 3.86% gc time)
  0.315106 seconds (37.36 k allocations: 2.397 MiB)
  1.350931 seconds (1.33 M allocations: 68.723 MiB, 4.96% gc time)
 40.756390 seconds (25.26 M allocations: 1.504 GiB, 3.14% gc time)
Test Summary: |  Pass  Total
Operator      | 12366  12366
402.726366 seconds (309.94 M allocations: 16.707 GiB, 4.21% gc time)
  0.688771 seconds (624.53 k allocations: 37.370 MiB)
  2.425682 seconds (1.59 M allocations: 99.426 MiB, 2.24% gc time)
  3.513945 seconds (2.30 M allocations: 141.304 MiB, 3.71% gc time)
  3.116024 seconds (4.06 M allocations: 164.195 MiB, 1.73% gc time)
  4.028638 seconds (3.78 M allocations: 224.630 MiB, 3.59% gc time)
  5.444371 seconds (6.26 M allocations: 346.860 MiB, 5.18% gc time)
  9.031343 seconds (5.74 M allocations: 332.824 MiB, 3.17% gc time)
  4.977379 seconds (2.58 M allocations: 158.805 MiB, 2.45% gc time)
Test Summary: | Pass  Total
ODE           | 2729   2729
210.863857 seconds (180.63 M allocations: 9.983 GiB, 3.59% gc time)
Test Summary:       | Pass  Total
Eigenvalue problems |   13     13
151.580546 seconds (124.46 M allocations: 6.924 GiB, 4.60% gc time)
  2.459968 seconds (1.66 M allocations: 102.535 MiB, 3.44% gc time)
  0.214176 seconds (26.29 k allocations: 1.282 MiB)
  6.160784 seconds (4.37 M allocations: 265.392 MiB, 3.64% gc time)
  0.822467 seconds (938.18 k allocations: 52.187 MiB, 10.97% gc time)
Test Summary: | Pass  Broken  Total
Vector        |  446       1    447
 82.409131 seconds (62.70 M allocations: 3.568 GiB, 3.57% gc time)
  0.000424 seconds (166 allocations: 8.203 KiB)
  6.427870 seconds (6.27 M allocations: 336.978 MiB, 4.56% gc time)
  0.200722 seconds (11 allocations: 32.703 KiB)
 10.055543 seconds (8.67 M allocations: 747.920 MiB, 6.61% gc time)
 10.306779 seconds (8.20 M allocations: 473.739 MiB, 4.01% gc time)
 12.914737 seconds (10.79 M allocations: 557.176 MiB, 4.24% gc time)
  4.077317 seconds (2.33 M allocations: 128.591 MiB)
 10.622494 seconds (8.19 M allocations: 416.949 MiB, 3.54% gc time)
  5.638646 seconds (3.17 M allocations: 177.660 MiB, 5.01% gc time)
 23.490154 seconds (13.36 M allocations: 755.617 MiB, 10.58% gc time)
 10.305701 seconds (8.06 M allocations: 411.958 MiB, 5.60% gc time)
Test Summary: | Pass  Total
Jacobi        | 4811   4811
210.057534 seconds (145.45 M allocations: 8.499 GiB, 4.77% gc time)
Test Summary:                 | Pass  Total
Laguerre and WeightedLaguerre |   21     21
107.856178 seconds (68.32 M allocations: 3.212 GiB, 3.31% gc time)
Test Summary:           | Pass  Total
Hermite and GaussWeight |  415    415
 47.645938 seconds (42.96 M allocations: 2.255 GiB, 7.01% gc time)
  0.146223 seconds (88.11 k allocations: 5.574 MiB)
  2.439898 seconds (3.36 M allocations: 174.032 MiB, 13.32% gc time)
  4.267031 seconds (2.41 M allocations: 148.373 MiB, 7.61% gc time)
  0.001859 seconds (3.40 k allocations: 236.422 KiB)
  1.651333 seconds (1.77 M allocations: 113.737 MiB)
Test Summary: | Pass  Broken  Total
Spaces        | 1745       1   1746
328.200684 seconds (240.02 M allocations: 14.633 GiB, 4.82% gc time)
  2.508337 seconds (1.90 M allocations: 116.559 MiB)
  1.741347 seconds (1.32 M allocations: 81.326 MiB, 7.38% gc time)
  0.330617 seconds (146.74 k allocations: 9.622 MiB)
  2.626007 seconds (1.89 M allocations: 115.623 MiB, 7.41% gc time)
  0.311682 seconds (217.44 k allocations: 13.354 MiB)
  0.952478 seconds (2.21 M allocations: 202.344 MiB, 14.87% gc time)
  1.046699 seconds (2.38 M allocations: 210.642 MiB, 12.66% gc time)
Partial derivative operators: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:129
  Got exception outside of a @test
  MethodError: no method matching elsize(::Type{BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, X::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, β::Float64, Y::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},Float64,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [13] copyto!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:94 [inlined]
   [14] copy
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:82 [inlined]
   [15] materialize(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},ArrayLayouts.ZerosLayout,Float64,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Zeros{Float64,2,Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:81
   [16] _mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:447 [inlined]
   [17] mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:448 [inlined]
   [18] *(A::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, B::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:460
   [19] BandedBlockBandedMatrix(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:498
   [20] (AbstractMatrix{T} where T)(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781
   [21] defaultgetindex(B::TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}}, k::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}, j::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:234
   [22] getindex(B::TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}}, k::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}, j::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:208
   [23] ApproxFunBase.RaggedMatrix(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:392
   [24] AbstractArray
      @ ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781 [inlined]
   [25] axpy!(a::Float64, X::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, Y::ApproxFunBase.RaggedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:675
   [26] axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::ApproxFunBase.RaggedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:123
   [27] convert_axpy!
      @ ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:696 [inlined]
   [28] ApproxFunBase.RaggedMatrix(P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:116
   [29] testraggedbelowoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:179
   [30] testblockbandedoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:216
   [31] testbandedblockbandedoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:231
   [32] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:141
   [33] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:130
   [35] top-level scope
      @ timing.jl:174
   [36] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:129
   [37] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [38] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:8
   [39] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [40] top-level scope
      @ ./timing.jl:174
   [41] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [42] top-level scope
      @ none:6
   [43] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [44] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [45] _start()
      @ Base ./client.jl:485
  
 82.371505 seconds (51.13 M allocations: 2.562 GiB, 3.91% gc time)
 16.346900 seconds (12.17 M allocations: 747.016 MiB, 3.43% gc time)
2d derivative (issue #346): Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:279
  Got exception outside of a @test
  MethodError: no method matching elsize(::Type{BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, X::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, β::Float64, Y::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},Float64,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:80 [inlined]
   [13] copyto!
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:94 [inlined]
   [14] copy
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:82 [inlined]
   [15] materialize(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},ArrayLayouts.ZerosLayout,Float64,BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Zeros{Float64,2,Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:81
   [16] _mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:447 [inlined]
   [17] mul
      @ ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:448 [inlined]
   [18] *(A::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, B::BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/RffWD/src/muladd.jl:460
   [19] BandedBlockBandedMatrix(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:498
   [20] (AbstractMatrix{T} where T)(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781
   [21] defaultgetindex(B::TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}}, k::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}, j::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:234
   [22] getindex(B::TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}}, k::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}, j::BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:208
   [23] ApproxFunBase.RaggedMatrix(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:392
   [24] AbstractArray
      @ ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781 [inlined]
   [25] axpy!(a::Float64, X::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, Y::ApproxFunBase.RaggedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:675
   [26] axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::ApproxFunBase.RaggedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:123
   [27] convert_axpy!
      @ ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:696 [inlined]
   [28] ApproxFunBase.RaggedMatrix(P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:116
   [29] testraggedbelowoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:179
   [30] testblockbandedoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:216
   [31] testbandedblockbandedoperator(A::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/testing.jl:231
   [32] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:292
   [33] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:280
   [35] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [36] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:8
   [37] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [38] top-level scope
      @ ./timing.jl:174
   [39] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [40] top-level scope
      @ none:6
   [41] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [42] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [43] _start()
      @ Base ./client.jl:485
  
Test Summary:                  | Pass  Error  Total
Multivariate                   | 2536      2   2538
  Square                       |  119           119
  LowRankFun                   |    3             3
  Vec segment                  |    9             9
  Multivariate calculus        |    3             3
  KroneckerOperator            |    2             2
  Partial derivative operators |  813      1    814
  x,y constructors             |   12            12
  conversion between           |   10            10
  Cheby * Interval             |    5             5
  DefiniteIntegral             |    1             1
  Piecewise Tensor             |    7             7
  Bug in chop of ProductFun    |    2             2
  off domain evaluate          |    2             2
  Dirichlet                    | 1514          1514
  2d derivative (issue #346)   |   26      1     27
  ProductFun                   |    4             4
  Functional*Fun               |    2             2
  matrix                       |    2             2
ERROR: LoadError: LoadError: Some tests did not pass: 2536 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/MultivariateTest.jl:7
in expression starting at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/5OUpO/test/runtests.jl:19
 ** On entry to DTBSV  parameter number  5 had an illegal value
 ** On entry to DTBSV  parameter number  5 had an illegal value
ERROR: Package ApproxFunOrthogonalPolynomials errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
