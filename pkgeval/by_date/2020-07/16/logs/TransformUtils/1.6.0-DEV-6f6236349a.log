Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Uo5VEq/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Uo5VEq/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.010336759567950533 -0.14187050121080025; -0.010336759567950533 0.0 -0.03409365078896997; 0.14187050121080025 0.03409365078896997 0.0])
dAA = so3([0.0 0.07536670941756339 -0.0672755004640962; -0.07536670941756339 0.0 -0.10668587863045194; 0.0672755004640962 0.10668587863045194 0.0])
dAA = so3([0.0 0.07544969418751865 0.18246905238141542; -0.07544969418751865 0.0 0.03752860033392494; -0.18246905238141542 -0.03752860033392494 0.0])
dAA = Quaternion(0.9995322393618004, [0.02376446778365617, -0.004684975296729486, -0.018670928038351988])
dAA = SO3([0.9834696096605996 -0.07815120899465916 0.1633398769642658; 0.09879003879299744 0.9875633364483588 -0.12230774602724026; -0.1517499756484542 0.13642230402562094 0.9789590899802886])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9684628329749855 0.16203009281308517 -0.18927754797927923; -0.20638639051228178 0.9472780088628789 -0.24508984421246716; 0.13958652856696901 0.2764247147918624 0.9508443500883098]), [0.34093650788969965, -1.4187050121080025, -0.10336759567950532])
xj = SE3(SO3([0.995376475172502 0.09226463363392026 -0.02670037553226347; -0.09478734846010711 0.9885038561438017 -0.11779424841959163; 0.015525180999513439 0.11978048158707955 0.9926790040016459]), [-0.37528600333924933, 1.8246905238141542, -0.7544969418751865])
Dx = SE3(SO3([0.9857150458582239 -0.09793913278966526 0.1370174245748608; 0.07578251567136243 0.9844478972125879 0.15849084513697806; -0.1504089714320228 -0.14584328555721088 0.9778071780114107]), [-1.453916465011403, 2.77635942143909, -1.2784811258924538])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
