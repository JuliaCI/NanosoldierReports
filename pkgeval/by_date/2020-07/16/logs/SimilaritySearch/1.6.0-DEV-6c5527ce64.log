Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_SH8gen/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_SH8gen/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(44, 0.0013637543f0), Item(7, 0.007317424f0), Item(47, 0.04057491f0), Item(13, 0.05372882f0)])
Vsorted = Item[Item(44, 0.0013637543f0), Item(7, 0.007317424f0), Item(47, 0.04057491f0), Item(13, 0.05372882f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004578638076782227, 0.004992397626241049, 301.0, 49.09756065905094))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004182140032450358, 0.004265999794006348, 301.0, 71.4166430234909))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004058663050333659, 0.004215463002522787, 301.0, 40.05029368400574))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005176242192586263, 0.003978228569030762, 301.0, 8.880499177641468))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003865218162536621, 0.005147631963094076, 301.0, 44.45677452720702))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00014720757802327473, 0.00013116200764973958, 301.0, 177.11706637591124))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.7927767435709636e-5, 0.010663000742594402, 300.0, 27.216416522394866)
p = PerformanceResult(1.0, 1.0, 1.0, 6.003379821777344e-5, 3.029505411783854e-5, 300.0, 27.216416522394866)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003795735041300456, 0.003509330749511719, 300.0, 1.52141592532098)
p = PerformanceResult(1.0, 1.0, 1.0, 5.9117211235894096e-5, 2.110004425048828e-5, 300.0, 1.52141592532098)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.7927767435709636e-5, 0.010663000742594402, 300.0, 27.216416522394866), PerformanceResult(1.0, 1.0, 1.0, 6.003379821777344e-5, 3.029505411783854e-5, 300.0, 27.216416522394866), PerformanceResult(1.0, 1.0, 1.0, 0.003795735041300456, 0.003509330749511719, 300.0, 1.52141592532098), PerformanceResult(1.0, 1.0, 1.0, 5.9117211235894096e-5, 2.110004425048828e-5, 300.0, 1.52141592532098))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008905911445617675, 0.005193328857421875, 348.23333333333335, 28674.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008385880788167318, 0.003330866495768229, 303.06666666666666, 6945.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.95559565226237e-5, 1.476605733235677e-5, 95.53333333333333, 49.23625637590885))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1688143412272136e-5, 1.5163421630859375e-5, 86.43333333333334, 71.58985733985901))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4620691935221354e-5, 1.4098485310872396e-5, 92.06666666666666, 40.149439334869385))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.306271870930989e-5, 0.0001598676045735677, 97.3, 44.58138352446258))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.82, 0.82, 0.82, 4.9614906311035155e-5, 0.00012420018513997395, 71.6, 185.10167210549116))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-17T04:33:26.817
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.898142857142857, 0.8959999999999998, 0.8968823529411764, 2.5417804718017578e-5, 3.1290054321289065e-5, 152.77, 51.74910829635337))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4569034576416015e-5, 1.9779205322265624e-5, 156.1, 0.0))
*** advance 1 from 1000; 2020-07-17T04:33:27.586
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8891428571428571, 0.887, 0.8878823529411765, 2.0742416381835938e-5, 2.1398067474365234e-5, 152.71, 77.18868361227214))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0723342895507813e-5, 1.881837844848633e-5, 155.99, 0.0))
*** advance 1 from 1000; 2020-07-17T04:33:28.218
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9003333333333337, 0.8970000000000001, 0.8982500000000002, 2.8159618377685547e-5, 4.2850971221923826e-5, 152.65, 41.183514412492514))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.452850341796875e-5, 4.145145416259766e-5, 156.09, 0.0))
*** advance 1 from 1000; 2020-07-17T04:33:28.864
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8945595238095239, 0.89, 0.8919759201926384, 0.00012296915054321289, 0.0005737090110778808, 153.23, 46.38604446547106))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00012128591537475585, 0.0006325292587280273, 156.71, 0.0))
*** advance 1 from 1000; 2020-07-17T04:33:29.623
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9429999999999998, 0.9429999999999998, 0.9429999999999998, 0.000136110782623291, 0.0003905200958251953, 168.98, 195.6599353738129))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001536250114440918, 0.0005181312561035156, 173.84, 0.0))
*** advance 1 from 1000; 2020-07-17T04:33:31.123
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.898142857142857, 0.8959999999999998, 0.8968823529411764, 3.3442974090576174e-5, 7.039070129394531e-5, 152.77, 51.762315558618866))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.5889148712158203e-5, 7.292985916137695e-5, 156.1, 0.013472473248839378))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:33.029
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.701, 0.701, 0.701, 0.0015166831016540528, 8.303880691528321e-5, 199.28, 201.20000272989273))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:34.054
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.718, 0.718, 0.718, 0.0015526986122131347, 0.00012148141860961913, 204.3, 113.82381149381399))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:34.941
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6439999999999997, 0.6439999999999997, 0.6439999999999997, 0.0014961385726928711, 7.870912551879883e-5, 257.84, 0.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:35.805
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9620000000000002, 0.9620000000000002, 0.9620000000000002, 0.0018609523773193359, 1.8780231475830077e-5, 224.3, 591.6000207960606))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:36.880
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6340000000000005, 0.6340000000000005, 0.6340000000000005, 0.0015945386886596679, 0.00044309139251708985, 260.78, 2254.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:37.835
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37999999999999984, 0.37999999999999984, NaN, 0.0020171546936035155, 0.0003556203842163086, 258.0, 3636.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:33:38.852
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.633, 0.633, NaN, 0.0015282368659973145, 3.455877304077148e-5, 242.84, 2284.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0786516853932584, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532394688644695,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.34375,"distances_sum":595.565971493721}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0786516853932584,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9532394688644695,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.34375,"distances_sum":595.565971493721}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0786516853932584,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9532394688644695,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.34375,"distances_sum":595.565971493721}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0786516853932584,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9532394688644695,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.34375,"distances_sum":595.565971493721}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.741376941047135, conf: {"restarts":11}, perf: {"precision":0.917534722222221,"recall":0.917534722222221,"f1":0.917534722222221,"seconds":3.0800700187683105e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":56.8515625,"distances_sum":281.38426503911614}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.899565282566332, conf: {"restarts":9}, perf: {"precision":0.9001736111111105,"recall":0.9001736111111105,"f1":0.9001736111111105,"seconds":2.8477981686592102e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":52.1171875,"distances_sum":282.7806652523577}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.837054218614091, conf: {"restarts":10}, perf: {"precision":0.9175347222222214,"recall":0.9175347222222214,"f1":0.9175347222222214,"seconds":2.9886141419410706e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":53.890625,"distances_sum":282.2421054877341}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.955857385398981, conf: {"restarts":8}, perf: {"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":2.6769936084747314e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":50.6171875,"distances_sum":282.4392049200833}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.955857385398981,"state":{"restarts":8},"perf":{"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":2.6769936084747314e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":50.6171875,"distances_sum":282.4392049200833}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.955857385398981,"state":{"restarts":8},"perf":{"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":2.6769936084747314e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":50.6171875,"distances_sum":282.4392049200833}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.955857385398981,"state":{"restarts":8},"perf":{"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":2.6769936084747314e-5,"exhaustive_search_seconds":8.946284651756287e-6,"evaluations":50.6171875,"distances_sum":282.4392049200833}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.867187499999999, conf: {"restarts":10}, perf: {"precision":0.867187499999999,"recall":0.867187499999999,"f1":0.867187499999999,"seconds":4.4191256165504456e-5,"exhaustive_search_seconds":3.349222242832184e-5,"evaluations":129.3984375,"distances_sum":126.78761601261795}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444431, conf: {"restarts":16}, perf: {"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":0.8741319444444431,"seconds":6.158649921417236e-5,"exhaustive_search_seconds":3.349222242832184e-5,"evaluations":164.3125,"distances_sum":126.17237300239503}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444438, conf: {"restarts":3}, perf: {"precision":0.8663194444444438,"recall":0.8663194444444438,"f1":0.8663194444444438,"seconds":3.2534822821617126e-5,"exhaustive_search_seconds":3.349222242832184e-5,"evaluations":82.7265625,"distances_sum":126.97849160991609}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8741319444444431,"state":{"restarts":16},"perf":{"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":0.8741319444444431,"seconds":6.158649921417236e-5,"exhaustive_search_seconds":3.349222242832184e-5,"evaluations":164.3125,"distances_sum":126.17237300239503}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8741319444444431,"state":{"restarts":16},"perf":{"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":0.8741319444444431,"seconds":6.158649921417236e-5,"exhaustive_search_seconds":3.349222242832184e-5,"evaluations":164.3125,"distances_sum":126.17237300239503}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999989, conf: {"restarts":10}, perf: {"precision":0.8515624999999989,"recall":0.8515624999999989,"f1":0.8515624999999989,"seconds":0.0001077558845281601,"exhaustive_search_seconds":0.000362202525138855,"evaluations":209.8359375,"distances_sum":57.66619438957423}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777766, conf: {"restarts":17}, perf: {"precision":0.8559027777777766,"recall":0.8559027777777766,"f1":0.8559027777777766,"seconds":0.00013315491378307343,"exhaustive_search_seconds":0.000362202525138855,"evaluations":271.328125,"distances_sum":57.50291527342051}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777766,"state":{"restarts":17},"perf":{"precision":0.8559027777777766,"recall":0.8559027777777766,"f1":0.8559027777777766,"seconds":0.00013315491378307343,"exhaustive_search_seconds":0.000362202525138855,"evaluations":271.328125,"distances_sum":57.50291527342051}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444434, conf: {"restarts":7}, perf: {"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":9.307265281677246e-5,"exhaustive_search_seconds":0.000362202525138855,"evaluations":182.0703125,"distances_sum":57.47598199080676}, best_list's length: 13, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8585069444444434,"state":{"restarts":7},"perf":{"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":9.307265281677246e-5,"exhaustive_search_seconds":0.000362202525138855,"evaluations":182.0703125,"distances_sum":57.47598199080676}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8585069444444434,"state":{"restarts":7},"perf":{"precision":0.8585069444444434,"recall":0.8585069444444434,"f1":0.8585069444444434,"seconds":9.307265281677246e-5,"exhaustive_search_seconds":0.000362202525138855,"evaluations":182.0703125,"distances_sum":57.47598199080676}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(7), SatNeighborhood(32), 2020-07-17T04:33:46.832
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1266, 0.037225064f0), Item(2968, 0.037590712f0), Item(2882, 0.037786752f0), Item(2642, 0.039126027f0), Item(7862, 0.04468649f0), Item(5277, 0.0477196f0), Item(5026, 0.059880372f0), Item(5243, 0.06626889f0), Item(3652, 0.07072147f0), Item(641, 0.07378034f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0406504065040654,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.973408882783883,"seconds":0.0033221710473299026,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.6484375,"distances_sum":635.2558537721634}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0406504065040654,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.973408882783883,"seconds":0.0033221710473299026,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.6484375,"distances_sum":635.2558537721634}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.420242914979758, conf: {"bsize":2}, perf: {"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.6003847122192383e-5,"exhaustive_search_seconds":9.570270776748657e-6,"evaluations":28.9453125,"distances_sum":294.56792294606566}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.420242914979758,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.6003847122192383e-5,"exhaustive_search_seconds":9.570270776748657e-6,"evaluations":28.9453125,"distances_sum":294.56792294606566}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.420242914979758,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.6003847122192383e-5,"exhaustive_search_seconds":9.570270776748657e-6,"evaluations":28.9453125,"distances_sum":294.56792294606566}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.420242914979758,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.6003847122192383e-5,"exhaustive_search_seconds":9.570270776748657e-6,"evaluations":28.9453125,"distances_sum":294.56792294606566}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 16.95010602469752, conf: {"bsize":3}, perf: {"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":3.736652433872223e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":62.6328125,"distances_sum":121.62344906385988}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.95010602469752,"state":{"bsize":3},"perf":{"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":3.736652433872223e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":62.6328125,"distances_sum":121.62344906385988}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.03611738148984, conf: {"bsize":4}, perf: {"precision":0.9887152777777776,"recall":0.9887152777777776,"f1":0.9887152777777776,"seconds":3.441423177719116e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":62.296875,"distances_sum":121.39849402662367}, best_list's length: 7, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.24390243902439, conf: {"bsize":5}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.7048012018203735e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":61.5,"distances_sum":121.18070278223604}, best_list's length: 8, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.24390243902439,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.7048012018203735e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":61.5,"distances_sum":121.18070278223604}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.24390243902439,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.7048012018203735e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":61.5,"distances_sum":121.18070278223604}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.24390243902439,"state":{"bsize":5},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.7048012018203735e-5,"exhaustive_search_seconds":2.9280781745910645e-5,"evaluations":61.5,"distances_sum":121.18070278223604}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.81314568049109, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.27921724319458e-5,"exhaustive_search_seconds":0.0003942567855119705,"evaluations":104.359375,"distances_sum":53.913203473668545}, best_list's length: 2, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.81314568049109,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.27921724319458e-5,"exhaustive_search_seconds":0.0003942567855119705,"evaluations":104.359375,"distances_sum":53.913203473668545}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.81314568049109,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.27921724319458e-5,"exhaustive_search_seconds":0.0003942567855119705,"evaluations":104.359375,"distances_sum":53.913203473668545}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.81314568049109,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.27921724319458e-5,"exhaustive_search_seconds":0.0003942567855119705,"evaluations":104.359375,"distances_sum":53.913203473668545}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-07-17T04:33:50.971
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3719, 0.02088129f0), Item(4499, 0.027115826f0), Item(7640, 0.027200459f0), Item(3315, 0.048435193f0), Item(9292, 0.0488454f0), Item(6927, 0.05103954f0), Item(6147, 0.05340431f0), Item(340, 0.059513755f0), Item(5009, 0.060271982f0), Item(5342, 0.062440157f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
