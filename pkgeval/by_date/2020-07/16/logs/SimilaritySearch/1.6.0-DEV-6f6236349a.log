Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_o9MOFi/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_o9MOFi/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(38, 0.012234926f0), Item(16, 0.012705088f0), Item(21, 0.020597935f0), Item(29, 0.0226022f0)])
Vsorted = Item[Item(38, 0.012234926f0), Item(16, 0.012705088f0), Item(21, 0.020597935f0), Item(29, 0.0226022f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00421749750773112, 0.004963095982869466, 301.0, 50.98444578051567))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004848011334737142, 0.00507969856262207, 301.0, 74.42966187000275))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005248077710469564, 0.005536270141601562, 301.0, 41.69779396057129))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0041718641916910805, 0.00422056516011556, 301.0, 9.680694236361887))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004779728253682455, 0.005117098490397136, 301.0, 46.26144855376333))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00016040802001953124, 0.00013647079467773437, 301.0, 185.0359137132764))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.3373972574869793e-5, 0.011371135711669922, 300.0, 27.676778943277895)
p = PerformanceResult(1.0, 1.0, 1.0, 5.278587341308594e-5, 3.6327044169108075e-5, 300.0, 27.676778943277895)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0036040226618448894, 0.003138264020284017, 300.0, 1.6324006079375977)
p = PerformanceResult(1.0, 1.0, 1.0, 4.141330718994141e-5, 1.6371409098307293e-5, 300.0, 1.6324006079375977)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.3373972574869793e-5, 0.011371135711669922, 300.0, 27.676778943277895), PerformanceResult(1.0, 1.0, 1.0, 5.278587341308594e-5, 3.6327044169108075e-5, 300.0, 27.676778943277895), PerformanceResult(1.0, 1.0, 1.0, 0.0036040226618448894, 0.003138264020284017, 300.0, 1.6324006079375977), PerformanceResult(1.0, 1.0, 1.0, 4.141330718994141e-5, 1.6371409098307293e-5, 300.0, 1.6324006079375977))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 122.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008546590805053711, 0.003666996955871582, 346.8333333333333, 28651.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007151444753011067, 0.0033490975697835286, 304.9, 6980.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4636586507161457e-5, 1.2063980102539063e-5, 99.1, 51.17848293483257))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4199485778808594e-5, 1.3399124145507813e-5, 88.3, 74.59786939620972))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6996930440266927e-5, 1.4233589172363282e-5, 94.1, 41.87403953075409))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.530616760253907e-5, 0.00018496513366699218, 100.33333333333333, 46.45786888059229))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8233333333333335, 0.8233333333333335, 0.8233333333333335, 4.928906758626302e-5, 0.00013513565063476561, 71.8, 194.59766495972872))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-17T04:21:23.350
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9405555555555556, 0.9400000000000002, 0.940263157894737, 2.215147018432617e-5, 2.491950988769531e-5, 153.55, 50.335253356490284))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1767616271972656e-5, 1.9190311431884764e-5, 156.92, 0.0))
*** advance 1 from 1000; 2020-07-17T04:21:24.156
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9035873015873014, 0.9009999999999999, 0.9020928792569659, 2.6872158050537108e-5, 3.73983383178711e-5, 152.7, 75.73629718832672))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5637149810791016e-5, 2.6311874389648437e-5, 155.94, 0.0))
*** advance 1 from 1000; 2020-07-17T04:21:24.935
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9139999999999998, 0.9109999999999998, 0.9123333333333332, 2.5458335876464844e-5, 3.206968307495117e-5, 153.79, 41.65539634786546))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4251937866210937e-5, 2.841949462890625e-5, 157.34, 0.0))
*** advance 1 from 1000; 2020-07-17T04:21:25.609
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9209999999999999, 0.9209999999999999, 0.9209999999999999, 0.0001231837272644043, 0.0005735611915588379, 153.78, 46.3722646557726))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011821746826171874, 0.0005819010734558106, 157.31, 0.0))
*** advance 1 from 1000; 2020-07-17T04:21:26.333
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8909999999999999, 0.8909999999999999, 0.8909999999999999, 9.710311889648437e-5, 0.000462191104888916, 151.91, 198.1722111199051))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.810924530029297e-5, 0.0004976701736450196, 155.25, 0.0))
*** advance 1 from 1000; 2020-07-17T04:21:27.573
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9405555555555556, 0.9400000000000002, 0.940263157894737, 3.354549407958984e-5, 0.00011588096618652344, 153.55, 50.345862922258675))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.3009052276611325e-5, 7.351875305175782e-5, 156.92, 0.02079786596004851))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:29.447
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7390000000000002, 0.7390000000000002, 0.7390000000000002, 0.0013502240180969238, 7.599115371704102e-5, 198.12, 194.78333553671837))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:30.300
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7530000000000002, 0.7530000000000002, 0.7530000000000002, 0.0015688824653625488, 0.00019367218017578126, 200.86, 111.48492287099361))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:31.161
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.622, 0.622, 0.622, 0.0014314389228820802, 7.680892944335938e-5, 234.53, 2.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:32.018
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9710000000000004, 0.9710000000000004, 0.9710000000000004, 0.0013245797157287597, 1.9800662994384765e-5, 219.13, 594.0000208765268))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:32.925
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6269999999999998, 0.6269999999999998, NaN, 0.001535944938659668, 0.00040628910064697263, 257.82, 2280.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:33.879
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38300000000000006, 0.38300000000000006, 0.38300000000000006, 0.0016776251792907715, 0.00036607980728149415, 241.81, 3642.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-17T04:21:34.876
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6449999999999999, 0.6449999999999999, 0.6449999999999999, 0.0016363668441772461, 2.7589797973632812e-5, 247.06, 2291.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0716279069767443, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570741758241765,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.3984375,"distances_sum":587.4279780089855}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.036903690369037, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9773866758241763,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.6796875,"distances_sum":616.9420863389969}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.032258064516129, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904765,"seconds":7.418915629386902e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.71875,"distances_sum":622.4198376834393}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0716279069767443,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570741758241765,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.3984375,"distances_sum":587.4279780089855}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0716279069767443,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570741758241765,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.3984375,"distances_sum":587.4279780089855}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0716279069767443,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570741758241765,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":2.25752592086792e-6,"evaluations":8.3984375,"distances_sum":587.4279780089855}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.775535939470366, conf: {"restarts":11}, perf: {"precision":0.9131944444444435,"recall":0.9131944444444435,"f1":0.9131944444444435,"seconds":2.6240944862365723e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":55.7578125,"distances_sum":291.0255164243281}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8269896193771626, conf: {"restarts":10}, perf: {"precision":0.921874999999999,"recall":0.921874999999999,"f1":0.921874999999999,"seconds":2.5445595383644104e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":54.1875,"distances_sum":289.16021663323045}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.911600543068336, conf: {"restarts":9}, perf: {"precision":0.904513888888888,"recall":0.904513888888888,"f1":0.904513888888888,"seconds":2.4687498807907104e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":51.7890625,"distances_sum":291.1006300188601}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.911600543068336,"state":{"restarts":9},"perf":{"precision":0.904513888888888,"recall":0.904513888888888,"f1":0.904513888888888,"seconds":2.4687498807907104e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":51.7890625,"distances_sum":291.1006300188601}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0006315124723715, conf: {"restarts":8}, perf: {"precision":0.9027777777777767,"recall":0.9027777777777767,"f1":0.9027777777777767,"seconds":2.3050233721733093e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":49.484375,"distances_sum":291.3879883252084}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.154735589185513, conf: {"restarts":6}, perf: {"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":2.2081658244132996e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":45.9453125,"distances_sum":291.0379230044782}, best_list's length: 8, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.154735589185513,"state":{"restarts":6},"perf":{"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":2.2081658244132996e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":45.9453125,"distances_sum":291.0379230044782}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.154735589185513,"state":{"restarts":6},"perf":{"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":2.2081658244132996e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":45.9453125,"distances_sum":291.0379230044782}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.154735589185513,"state":{"restarts":6},"perf":{"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":2.2081658244132996e-5,"exhaustive_search_seconds":7.679685950279236e-6,"evaluations":45.9453125,"distances_sum":291.0379230044782}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999991, conf: {"restarts":16}, perf: {"precision":0.8593749999999991,"recall":0.8593749999999991,"f1":0.8593749999999991,"seconds":6.843544542789459e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":167.265625,"distances_sum":126.7339603388682}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888877, conf: {"restarts":10}, perf: {"precision":0.8654513888888877,"recall":0.8654513888888877,"f1":0.8654513888888877,"seconds":4.9211084842681885e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":128.0625,"distances_sum":125.81086629349738}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777768, conf: {"restarts":9}, perf: {"precision":0.8715277777777768,"recall":0.8715277777777768,"f1":0.8715277777777768,"seconds":4.846043884754181e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":122.640625,"distances_sum":126.36543401423842}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8715277777777768,"state":{"restarts":9},"perf":{"precision":0.8715277777777768,"recall":0.8715277777777768,"f1":0.8715277777777768,"seconds":4.846043884754181e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":122.640625,"distances_sum":126.36543401423842}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.880208333333332, conf: {"restarts":19}, perf: {"precision":0.880208333333332,"recall":0.880208333333332,"f1":0.880208333333332,"seconds":7.755495607852936e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":185.546875,"distances_sum":125.29200303275138}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8723958333333321, conf: {"restarts":20}, perf: {"precision":0.8723958333333321,"recall":0.8723958333333321,"f1":0.8723958333333321,"seconds":7.919780910015106e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":190.4609375,"distances_sum":126.01432598475367}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777766, conf: {"restarts":25}, perf: {"precision":0.8793402777777766,"recall":0.8793402777777766,"f1":0.8793402777777766,"seconds":7.658824324607849e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":213.28125,"distances_sum":125.86638160143048}, best_list's length: 10, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.880208333333332,"state":{"restarts":19},"perf":{"precision":0.880208333333332,"recall":0.880208333333332,"f1":0.880208333333332,"seconds":7.755495607852936e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":185.546875,"distances_sum":125.29200303275138}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.880208333333332,"state":{"restarts":19},"perf":{"precision":0.880208333333332,"recall":0.880208333333332,"f1":0.880208333333332,"seconds":7.755495607852936e-5,"exhaustive_search_seconds":2.721138298511505e-5,"evaluations":185.546875,"distances_sum":125.29200303275138}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333319, conf: {"restarts":14}, perf: {"precision":0.8645833333333319,"recall":0.8645833333333319,"f1":0.8645833333333319,"seconds":0.00010940060019493103,"exhaustive_search_seconds":0.0003595147281885147,"evaluations":241.4375,"distances_sum":57.394039017148316}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777766, conf: {"restarts":29}, perf: {"precision":0.8793402777777766,"recall":0.8793402777777766,"f1":0.8793402777777766,"seconds":0.00015074387192726135,"exhaustive_search_seconds":0.0003595147281885147,"evaluations":369.3125,"distances_sum":57.29262320604175}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8793402777777766,"state":{"restarts":29},"perf":{"precision":0.8793402777777766,"recall":0.8793402777777766,"f1":0.8793402777777766,"seconds":0.00015074387192726135,"exhaustive_search_seconds":0.0003595147281885147,"evaluations":369.3125,"distances_sum":57.29262320604175}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8793402777777766,"state":{"restarts":29},"perf":{"precision":0.8793402777777766,"recall":0.8793402777777766,"f1":0.8793402777777766,"seconds":0.00015074387192726135,"exhaustive_search_seconds":0.0003595147281885147,"evaluations":369.3125,"distances_sum":57.29262320604175}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8793402777777766,"state":{"restarts":29},"perf":{"precision":0.8793402777777766,"recall":0.8793402777777766,"f1":0.8793402777777766,"seconds":0.00015074387192726135,"exhaustive_search_seconds":0.0003595147281885147,"evaluations":369.3125,"distances_sum":57.29262320604175}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(29), SatNeighborhood(32), 2020-07-17T04:21:42.828
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9939, 0.037746903f0), Item(6034, 0.048715122f0), Item(473, 0.049298197f0), Item(1047, 0.056469277f0), Item(4397, 0.067425095f0), Item(6229, 0.07096498f0), Item(2645, 0.0716058f0), Item(7928, 0.072485305f0), Item(2453, 0.077321105f0), Item(617, 0.081460126f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.077642656688494, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9520222832722838,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":2.203509211540222e-6,"evaluations":8.3515625,"distances_sum":574.2417805492878}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.088846880907372, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9466033966033972,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":2.203509211540222e-6,"evaluations":8.265625,"distances_sum":568.150164604187}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9466033966033972,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":2.203509211540222e-6,"evaluations":8.265625,"distances_sum":568.150164604187}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9466033966033972,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":2.203509211540222e-6,"evaluations":8.265625,"distances_sum":568.150164604187}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9466033966033972,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":2.203509211540222e-6,"evaluations":8.265625,"distances_sum":568.150164604187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.035936751317681, conf: {"bsize":3}, perf: {"precision":0.9791666666666662,"recall":0.9791666666666662,"f1":0.9791666666666662,"seconds":1.6022473573684692e-5,"exhaustive_search_seconds":7.273629307746887e-6,"evaluations":32.609375,"distances_sum":271.8275686353445}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.035936751317681,"state":{"bsize":3},"perf":{"precision":0.9791666666666662,"recall":0.9791666666666662,"f1":0.9791666666666662,"seconds":1.6022473573684692e-5,"exhaustive_search_seconds":7.273629307746887e-6,"evaluations":32.609375,"distances_sum":271.8275686353445}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.035936751317681,"state":{"bsize":3},"perf":{"precision":0.9791666666666662,"recall":0.9791666666666662,"f1":0.9791666666666662,"seconds":1.6022473573684692e-5,"exhaustive_search_seconds":7.273629307746887e-6,"evaluations":32.609375,"distances_sum":271.8275686353445}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.035936751317681,"state":{"bsize":3},"perf":{"precision":0.9791666666666662,"recall":0.9791666666666662,"f1":0.9791666666666662,"seconds":1.6022473573684692e-5,"exhaustive_search_seconds":7.273629307746887e-6,"evaluations":32.609375,"distances_sum":271.8275686353445}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.18709677419355,"state":{"bsize":3},"perf":{"precision":0.9800347222222219,"recall":0.9800347222222219,"f1":0.9800347222222219,"seconds":2.7917325496673584e-5,"exhaustive_search_seconds":2.773292362689972e-5,"evaluations":58.125,"distances_sum":122.29887574817985}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.18709677419355,"state":{"bsize":3},"perf":{"precision":0.9800347222222219,"recall":0.9800347222222219,"f1":0.9800347222222219,"seconds":2.7917325496673584e-5,"exhaustive_search_seconds":2.773292362689972e-5,"evaluations":58.125,"distances_sum":122.29887574817985}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.5198983911939,"state":{"bsize":3},"perf":{"precision":0.9704861111111106,"recall":0.9704861111111106,"f1":0.9704861111111106,"seconds":6.130337715148926e-5,"exhaustive_search_seconds":0.00036417320370674133,"evaluations":101.4921875,"distances_sum":54.074179344810545}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.5198983911939,"state":{"bsize":3},"perf":{"precision":0.9704861111111106,"recall":0.9704861111111106,"f1":0.9704861111111106,"seconds":6.130337715148926e-5,"exhaustive_search_seconds":0.00036417320370674133,"evaluations":101.4921875,"distances_sum":54.074179344810545}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(3), SatNeighborhood(32), 2020-07-17T04:21:46.976
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9512, 0.034575325f0), Item(5034, 0.035862874f0), Item(3511, 0.041343167f0), Item(7576, 0.0440674f0), Item(3362, 0.044630848f0), Item(1715, 0.046246663f0), Item(326, 0.04714465f0), Item(6916, 0.052259672f0), Item(3758, 0.054271795f0), Item(8867, 0.060377013f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
