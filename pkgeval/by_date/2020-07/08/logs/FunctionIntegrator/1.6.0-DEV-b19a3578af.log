Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_rdLFoO/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_rdLFoO/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: chebyshev_quadrature with k=1
  2.740755 seconds (3.05 M allocations: 172.415 MiB, 3.28% gc time)
Running: chebyshev_quadrature with k=2
  0.302618 seconds (338.12 k allocations: 21.341 MiB)
Running: chebyshev_quadrature with k=3
  0.372935 seconds (482.66 k allocations: 27.740 MiB, 5.23% gc time)
Running: chebyshev_quadrature with k=4
  0.342245 seconds (442.95 k allocations: 24.687 MiB, 3.90% gc time)
Running: jacobi_quadrature with α=β=1
 44.893921 seconds (42.40 M allocations: 3.215 GiB, 7.31% gc time)
Running: laguerre_quadrature with k=1
  3.437131 seconds (3.32 M allocations: 181.515 MiB, 5.54% gc time)
Running: legendre_quadrature
  0.249826 seconds (186.54 k allocations: 10.375 MiB)
Running: lobatto_quadrature
  0.418003 seconds (308.02 k allocations: 18.060 MiB, 12.17% gc time)
Running: radau_quadrature
  0.307769 seconds (291.10 k allocations: 17.092 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 77.072434 seconds (21.31 k allocations: 1.254 MiB)
Running: rectangle_rule_midpoint.
  0.169211 seconds (25.45 k allocations: 1.554 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.142645 seconds (18.15 k allocations: 1.073 MiB)
Running: simpsons_rule
  0.165106 seconds (144.37 k allocations: 7.978 MiB)
Running: simpsons38_rule
  0.129968 seconds (106.49 k allocations: 5.595 MiB)
Running: adaptive_simpsons_rule
  0.355113 seconds (267.82 k allocations: 10.511 MiB, 19.65% gc time)
Running: trapezoidal_rule
  0.351649 seconds (1.30 M allocations: 22.376 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: chebyshev_quadrature with k=1
  0.450926 seconds (279.99 k allocations: 13.922 MiB)
Running: chebyshev_quadrature with k=2
  0.160197 seconds (115.76 k allocations: 3.761 MiB)
Running: chebyshev_quadrature with k=3
  0.174043 seconds (105.75 k allocations: 3.632 MiB)
Running: chebyshev_quadrature with k=4
  0.176646 seconds (88.37 k allocations: 3.280 MiB)
Running: jacobi_quadrature with α=β=1
  3.064228 seconds (475.43 k allocations: 160.010 MiB, 12.03% gc time)
Running: legendre_quadrature
  0.155460 seconds (61.51 k allocations: 3.367 MiB)
Running: lobatto_quadrature
  0.021301 seconds (15.59 k allocations: 967.675 KiB)
Running: radau_quadrature
  0.022270 seconds (15.57 k allocations: 967.378 KiB)
Running: rectangle_rule_left
 29.164435 seconds (471.41 M allocations: 7.025 GiB, 2.40% gc time)
Running: rectangle_rule_midpoint
  0.000074 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.561334 seconds (476.96 M allocations: 7.107 GiB, 2.15% gc time)
Running: simpsons_rule
  0.063527 seconds (715 allocations: 38.984 KiB)
Running: simpsons38_rule
  0.037561 seconds (18.53 k allocations: 1.101 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.078086 seconds (45.26 k allocations: 2.643 MiB)
Running: trapezoidal_rule
  0.056452 seconds (17.27 k allocations: 1.025 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: chebyshev_quadrature with k=1
  0.109761 seconds (2.56 k allocations: 119.547 KiB)
Running: chebyshev_quadrature with k=2
  0.103972 seconds (2.83 k allocations: 128.422 KiB)
Running: chebyshev_quadrature with k=3
  0.123294 seconds (4.05 k allocations: 171.469 KiB)
Running: chebyshev_quadrature with k=4
  0.118997 seconds (4.05 k allocations: 171.469 KiB)
Running: jacobi_quadrature with α=β=1
  0.187939 seconds (31.29 k allocations: 1.811 MiB)
Running: legendre_quadrature
  0.063050 seconds (1.31 k allocations: 67.188 KiB)
Running: lobatto_quadrature
  0.000112 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000470 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000408 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000469 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.040549 seconds (1.34 k allocations: 67.484 KiB)
Running: simpsons38_rule
  0.000043 seconds (395 allocations: 6.516 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000154 seconds (1.38 k allocations: 21.906 KiB)
Running: trapezoidal_rule
  0.000536 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: chebyshev_quadrature with k=1
  0.261788 seconds (250.76 k allocations: 13.718 MiB)
Running: chebyshev_quadrature with k=2
  0.298339 seconds (263.66 k allocations: 14.503 MiB, 8.88% gc time)
Running: chebyshev_quadrature with k=3
  0.255172 seconds (252.05 k allocations: 13.310 MiB)
Running: chebyshev_quadrature with k=4
  0.252390 seconds (252.05 k allocations: 13.205 MiB)
Running: jacobi_quadrature with α=β=1
  2.474210 seconds (423.62 k allocations: 161.521 MiB, 3.15% gc time)
Running: legendre_quadrature
  0.205751 seconds (165.81 k allocations: 9.246 MiB)
Running: lobatto_quadrature
  0.212781 seconds (176.94 k allocations: 9.967 MiB)
Running: radau_quadrature
  0.218960 seconds (176.93 k allocations: 9.936 MiB)
Running: rectangle_rule_left
  0.947777 seconds (19.22 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.025868 seconds (25.02 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  0.929239 seconds (17.72 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.065921 seconds (68.06 k allocations: 4.132 MiB)
Running: simpsons38_rule
  0.065581 seconds (68.09 k allocations: 4.134 MiB)
Running: adaptive_simpsons_rule
  0.058581 seconds (68.69 k allocations: 4.142 MiB)
Running: trapezoidal_rule
  0.030442 seconds (44.30 k allocations: 1.744 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: chebyshev_quadrature with k=1
  0.256038 seconds (210.78 k allocations: 11.261 MiB)
Running: chebyshev_quadrature with k=2
  0.314675 seconds (270.07 k allocations: 14.482 MiB, 15.51% gc time)
Running: chebyshev_quadrature with k=3
  0.241866 seconds (257.79 k allocations: 13.269 MiB)
Running: chebyshev_quadrature with k=4
  0.254373 seconds (257.79 k allocations: 13.264 MiB)
Running: hermite_quadrature with k=2
 21.332373 seconds (22.78 M allocations: 1.155 GiB, 8.92% gc time)
Running: jacobi_quadrature with α=β=1
  0.652272 seconds (432.04 k allocations: 47.711 MiB, 16.68% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.300064 seconds (255.07 k allocations: 13.707 MiB)
Running: legendre_quadrature
  0.246607 seconds (171.18 k allocations: 9.547 MiB, 14.04% gc time)
Running: lobatto_quadrature
  0.287322 seconds (195.87 k allocations: 35.657 MiB)
Running: radau_quadrature
  0.316605 seconds (192.46 k allocations: 28.320 MiB, 6.31% gc time)
Running: rectangle_rule_left
  0.029253 seconds (22.35 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.035694 seconds (26.97 k allocations: 1.627 MiB)
Running: rectangle_rule_right
  0.026431 seconds (18.94 k allocations: 1.113 MiB)
Running: simpsons_rule
  0.066321 seconds (82.48 k allocations: 4.569 MiB)
Running: simpsons38_rule
  0.075431 seconds (85.64 k allocations: 4.618 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.087258 seconds (278.38 k allocations: 7.559 MiB)
Running: trapezoidal_rule
  0.034901 seconds (30.63 k allocations: 1.683 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: chebyshev_quadrature with k=1
  0.335959 seconds (207.10 k allocations: 11.080 MiB, 7.91% gc time)
Running: chebyshev_quadrature with k=2
  0.309341 seconds (265.66 k allocations: 14.255 MiB)
Running: chebyshev_quadrature with k=3
  0.278879 seconds (253.87 k allocations: 13.147 MiB)
Running: chebyshev_quadrature with k=4
  0.291420 seconds (253.87 k allocations: 13.084 MiB)
Running: hermite_quadrature with k=2
  0.233201 seconds (164.78 k allocations: 9.207 MiB, 12.17% gc time)
Running: jacobi_quadrature with α=β=1
  9.520313 seconds (425.86 k allocations: 1.173 GiB, 7.02% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.341956 seconds (250.92 k allocations: 13.544 MiB, 9.88% gc time)
Running: legendre_quadrature
  0.207709 seconds (167.57 k allocations: 9.357 MiB)
Running: lobatto_quadrature
  0.256214 seconds (187.46 k allocations: 21.413 MiB)
Running: radau_quadrature
  0.268595 seconds (186.60 k allocations: 19.340 MiB, 5.31% gc time)
Running: rectangle_rule_left
  0.030233 seconds (19.95 k allocations: 1.181 MiB)
Running: rectangle_rule_midpoint
  0.031840 seconds (25.77 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  0.028500 seconds (17.73 k allocations: 1.055 MiB)
Running: simpsons_rule
  0.070563 seconds (73.19 k allocations: 4.288 MiB)
Running: simpsons38_rule
  0.067982 seconds (74.65 k allocations: 4.310 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.072354 seconds (87.30 k allocations: 4.503 MiB)
Running: trapezoidal_rule
  0.031908 seconds (25.37 k allocations: 1.512 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: chebyshev_quadrature with k=1
  0.241272 seconds (205.81 k allocations: 11.306 MiB)
Running: chebyshev_quadrature with k=2
  0.321559 seconds (264.20 k allocations: 14.599 MiB, 5.31% gc time)
Running: chebyshev_quadrature with k=3
  0.292007 seconds (252.59 k allocations: 13.306 MiB)
Running: chebyshev_quadrature with k=4
  0.292071 seconds (252.58 k allocations: 13.135 MiB)
Running: jacobi_quadrature with α=β=1
  2.634608 seconds (424.20 k allocations: 192.581 MiB, 3.10% gc time)
Running: legendre_quadrature
  0.218528 seconds (166.30 k allocations: 9.270 MiB)
Running: lobatto_quadrature
  0.230580 seconds (177.43 k allocations: 9.962 MiB)
Running: radau_quadrature
  0.234603 seconds (177.43 k allocations: 9.970 MiB)
Running: rectangle_rule_left
  0.323161 seconds (21.22 k allocations: 1.262 MiB)
Running: rectangle_rule_midpoint
  0.028498 seconds (25.37 k allocations: 1.550 MiB)
Running: rectangle_rule_right
  0.126350 seconds (18.08 k allocations: 1.071 MiB, 13.43% gc time)
Running: simpsons_rule
  0.057290 seconds (68.90 k allocations: 4.173 MiB)
Running: simpsons38_rule
  0.058042 seconds (68.95 k allocations: 4.173 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.058008 seconds (69.79 k allocations: 4.189 MiB)
Running: trapezoidal_rule
  0.027309 seconds (45.28 k allocations: 1.779 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: chebyshev_quadrature with k=1
  0.246280 seconds (206.19 k allocations: 11.243 MiB)
Running: chebyshev_quadrature with k=2
  0.291788 seconds (264.65 k allocations: 14.517 MiB)
Running: chebyshev_quadrature with k=3
  0.282490 seconds (252.94 k allocations: 13.239 MiB, 6.24% gc time)
Running: chebyshev_quadrature with k=4
  0.292771 seconds (252.94 k allocations: 13.296 MiB)
Running: jacobi_quadrature with α=β=1
  3.092589 seconds (424.73 k allocations: 147.267 MiB, 13.20% gc time)
Running: legendre_quadrature
  0.379084 seconds (166.69 k allocations: 9.286 MiB, 42.23% gc time)
Running: lobatto_quadrature
  0.227502 seconds (177.82 k allocations: 9.980 MiB)
Running: radau_quadrature
  0.223234 seconds (177.81 k allocations: 9.974 MiB)
Running: rectangle_rule_left
  1.025344 seconds (20.06 k allocations: 1.181 MiB)
Running: rectangle_rule_midpoint
  0.028117 seconds (25.38 k allocations: 1.551 MiB)
Running: rectangle_rule_right
  0.974870 seconds (18.08 k allocations: 1.071 MiB)
Running: simpsons_rule
  0.057625 seconds (70.17 k allocations: 4.217 MiB)
Running: simpsons38_rule
  0.049069 seconds (70.23 k allocations: 4.218 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.049568 seconds (72.39 k allocations: 4.251 MiB)
Running: trapezoidal_rule
  0.023737 seconds (57.55 k allocations: 1.981 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: chebyshev_quadrature with k=1
  0.309669 seconds (239.28 k allocations: 11.933 MiB)
Running: chebyshev_quadrature with k=2
  0.164493 seconds (127.05 k allocations: 3.955 MiB)
Running: chebyshev_quadrature with k=3
  0.184341 seconds (116.27 k allocations: 3.813 MiB)
Running: chebyshev_quadrature with k=4
  0.186602 seconds (95.81 k allocations: 3.408 MiB)
Running: jacobi_quadrature with α=β=1
  1.491065 seconds (454.46 k allocations: 166.198 MiB, 16.05% gc time)
Running: legendre_quadrature
  0.119349 seconds (38.39 k allocations: 2.080 MiB)
Running: lobatto_quadrature
  0.000183 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000108 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 43.659456 seconds (590.00 M allocations: 8.792 GiB, 2.36% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 43.265329 seconds (592.75 M allocations: 8.833 GiB, 2.34% gc time)
Running: simpsons_rule
  0.036972 seconds (722 allocations: 39.094 KiB)
Running: simpsons38_rule
  0.000053 seconds (128 allocations: 2.344 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000118 seconds (799 allocations: 12.828 KiB)
Running: trapezoidal_rule
  0.018812 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: chebyshev_quadrature with k=1
  0.590013 seconds (596.12 k allocations: 33.050 MiB)
Running: chebyshev_quadrature with k=2
 12.294194 seconds (467.39 k allocations: 4.040 GiB, 4.28% gc time)
Running: chebyshev_quadrature with k=3
  5.837779 seconds (264.01 k allocations: 1.642 GiB, 4.28% gc time)
Running: chebyshev_quadrature with k=4
  7.587596 seconds (264.01 k allocations: 2.260 GiB, 2.99% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 55.180993 seconds (458.62 k allocations: 13.252 GiB, 3.18% gc time)
Running: legendre_quadrature.
  5.968490 seconds (201.56 k allocations: 1.974 GiB, 2.39% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 49.409767 seconds (8.21 M allocations: 13.382 GiB, 4.04% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 49.626659 seconds (7.21 M allocations: 13.367 GiB, 2.95% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.684393 seconds (22.70 k allocations: 1.338 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.645949 seconds (30.95 k allocations: 1.862 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.677996 seconds (22.91 k allocations: 1.348 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.703853 seconds (600.06 M allocations: 8.944 GiB, 8.03% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.563757 seconds (600.06 M allocations: 8.944 GiB, 8.81% gc time)
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.210159 seconds (565.12 M allocations: 8.424 GiB, 8.25% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.502345 seconds (600.03 M allocations: 8.943 GiB, 7.87% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: chebyshev_quadrature with k=1
  0.263785 seconds (220.25 k allocations: 11.656 MiB)
Running: chebyshev_quadrature with k=2
  0.433760 seconds (248.37 k allocations: 13.012 MiB, 40.15% gc time)
Running: chebyshev_quadrature with k=3
  0.260418 seconds (233.62 k allocations: 11.691 MiB)
Running: chebyshev_quadrature with k=4
  0.250003 seconds (233.62 k allocations: 11.690 MiB)
Running: jacobi_quadrature with α=β=1
  0.458297 seconds (361.23 k allocations: 33.255 MiB)
Running: laguerre_quadrature with k=2
  0.248995 seconds (161.82 k allocations: 9.121 MiB)
Running: legendre_quadrature
  0.154556 seconds (121.21 k allocations: 6.506 MiB)
Running: lobatto_quadrature
  0.038371 seconds (10.00 k allocations: 15.076 MiB)
Running: radau_quadrature
  0.034405 seconds (8.77 k allocations: 13.150 MiB)
Running: rectangle_rule_left
  0.056459 seconds (21.90 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.069810 seconds (25.88 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  0.050722 seconds (17.84 k allocations: 1.043 MiB)
Running: simpsons_rule
  0.104261 seconds (107.30 k allocations: 5.136 MiB)
Running: simpsons38_rule
  0.003278 seconds (30.39 k allocations: 475.344 KiB)
Running: adaptive_simpsons_rule with ε=1e-8
  0.007409 seconds (88.55 k allocations: 1.352 MiB)
Running: trapezoidal_rule
  0.169164 seconds (2.39 M allocations: 37.680 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: chebyshev_quadrature with k=1
  0.110598 seconds (2.75 k allocations: 1.702 MiB)
Running: chebyshev_quadrature with k=2
  0.104561 seconds (3.02 k allocations: 2.367 MiB)
Running: chebyshev_quadrature with k=3
  0.153171 seconds (4.25 k allocations: 2.097 MiB)
Running: chebyshev_quadrature with k=4
  0.125095 seconds (4.25 k allocations: 1.538 MiB)
Running: jacobi_quadrature with α=β=1
  7.015197 seconds (358.27 k allocations: 903.927 MiB, 3.66% gc time)
Running: legendre_quadrature
  0.071946 seconds (1.45 k allocations: 76.844 KiB)
Running: lobatto_quadrature
  0.008279 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000134 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.663483 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000425 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.324510 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.055477 seconds (5.67 k allocations: 183.438 KiB)
Running: simpsons38_rule
  0.000356 seconds (4.49 k allocations: 70.469 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.001012 seconds (17.12 k allocations: 267.828 KiB)
Running: trapezoidal_rule
  0.000799 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: chebyshev_quadrature with k=1
  0.112244 seconds (2.63 k allocations: 582.531 KiB)
Running: chebyshev_quadrature with k=2
  0.106508 seconds (2.90 k allocations: 784.469 KiB)
Running: chebyshev_quadrature with k=3
  0.115259 seconds (4.12 k allocations: 723.609 KiB)
Running: chebyshev_quadrature with k=4
  0.115639 seconds (4.12 k allocations: 554.109 KiB)
Running: jacobi_quadrature with α=β=1
  2.710184 seconds (348.18 k allocations: 251.396 MiB, 8.01% gc time)
Running: legendre_quadrature
  0.067457 seconds (1.35 k allocations: 69.234 KiB)
Running: lobatto_quadrature
  0.000171 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.569978 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001094 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.696124 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.052148 seconds (2.77 k allocations: 113.031 KiB)
Running: simpsons38_rule
  0.000112 seconds (947 allocations: 15.141 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000339 seconds (2.92 k allocations: 45.906 KiB)
Running: trapezoidal_rule
  0.001701 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
