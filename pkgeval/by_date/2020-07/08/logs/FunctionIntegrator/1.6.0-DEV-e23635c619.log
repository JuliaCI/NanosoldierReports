Julia Version 1.6.0-DEV.387
Commit e23635c619 (2020-07-07 16:42 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.4.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_yOuAfh/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_yOuAfh/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: chebyshev_quadrature with k=1
  2.662731 seconds (3.04 M allocations: 171.128 MiB, 4.51% gc time)
Running: chebyshev_quadrature with k=2
  0.485058 seconds (328.23 k allocations: 20.724 MiB)
Running: chebyshev_quadrature with k=3
  0.570542 seconds (471.77 k allocations: 27.086 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=4
  0.490918 seconds (433.14 k allocations: 24.071 MiB, 31.18% gc time)
Running: jacobi_quadrature with α=β=1
 55.105016 seconds (40.81 M allocations: 3.130 GiB, 8.57% gc time)
Running: laguerre_quadrature with k=1
  3.739371 seconds (3.23 M allocations: 177.135 MiB, 2.84% gc time)
Running: legendre_quadrature
  0.213937 seconds (178.71 k allocations: 9.884 MiB)
Running: lobatto_quadrature
  0.354234 seconds (294.26 k allocations: 17.202 MiB, 8.74% gc time)
Running: radau_quadrature
  0.263142 seconds (278.14 k allocations: 16.290 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.346704 seconds (20.95 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint.
  0.186909 seconds (25.02 k allocations: 1.536 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.330173 seconds (17.85 k allocations: 1.060 MiB)
Running: simpsons_rule
  0.145424 seconds (140.73 k allocations: 7.803 MiB)
Running: simpsons38_rule
  0.107668 seconds (104.78 k allocations: 5.524 MiB)
Running: adaptive_simpsons_rule
  0.262457 seconds (262.03 k allocations: 10.192 MiB)
Running: trapezoidal_rule
  0.353424 seconds (1.30 M allocations: 22.258 MiB, 19.85% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: chebyshev_quadrature with k=1
  0.459562 seconds (266.53 k allocations: 13.248 MiB)
Running: chebyshev_quadrature with k=2
  0.171632 seconds (114.25 k allocations: 3.667 MiB)
Running: chebyshev_quadrature with k=3
  0.180835 seconds (104.24 k allocations: 3.538 MiB)
Running: chebyshev_quadrature with k=4
  0.186328 seconds (86.86 k allocations: 3.186 MiB)
Running: jacobi_quadrature with α=β=1
  2.401511 seconds (453.75 k allocations: 158.640 MiB, 12.96% gc time)
Running: legendre_quadrature
  0.176835 seconds (58.63 k allocations: 3.189 MiB)
Running: lobatto_quadrature
  0.020418 seconds (14.21 k allocations: 880.675 KiB)
Running: radau_quadrature
  0.019906 seconds (14.19 k allocations: 880.378 KiB)
Running: rectangle_rule_left
 29.711989 seconds (471.41 M allocations: 7.025 GiB, 3.98% gc time)
Running: rectangle_rule_midpoint
  0.000049 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.552823 seconds (476.96 M allocations: 7.107 GiB, 3.91% gc time)
Running: simpsons_rule
  0.047005 seconds (715 allocations: 38.984 KiB)
Running: simpsons38_rule
  0.038838 seconds (18.08 k allocations: 1.080 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.071301 seconds (41.71 k allocations: 2.452 MiB)
Running: trapezoidal_rule
  0.052519 seconds (16.89 k allocations: 1.007 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: chebyshev_quadrature with k=1
  0.107418 seconds (2.55 k allocations: 119.234 KiB)
Running: chebyshev_quadrature with k=2
  0.099155 seconds (2.82 k allocations: 128.109 KiB)
Running: chebyshev_quadrature with k=3
  0.111135 seconds (4.04 k allocations: 171.156 KiB)
Running: chebyshev_quadrature with k=4
  0.117426 seconds (4.04 k allocations: 171.156 KiB)
Running: jacobi_quadrature with α=β=1
  0.196992 seconds (23.92 k allocations: 1.409 MiB)
Running: legendre_quadrature
  0.070868 seconds (1.30 k allocations: 66.875 KiB)
Running: lobatto_quadrature
  0.000220 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000060 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000495 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000377 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000534 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.049173 seconds (1.34 k allocations: 67.484 KiB)
Running: simpsons38_rule
  0.000056 seconds (395 allocations: 6.516 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000192 seconds (1.38 k allocations: 21.906 KiB)
Running: trapezoidal_rule
  0.000601 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: chebyshev_quadrature with k=1
  0.236136 seconds (243.00 k allocations: 13.250 MiB)
Running: chebyshev_quadrature with k=2
  0.247683 seconds (255.45 k allocations: 13.982 MiB)
Running: chebyshev_quadrature with k=3
  0.268021 seconds (245.44 k allocations: 12.894 MiB, 10.32% gc time)
Running: chebyshev_quadrature with k=4
  0.330055 seconds (245.43 k allocations: 12.787 MiB)
Running: jacobi_quadrature with α=β=1
  2.729909 seconds (405.90 k allocations: 160.467 MiB, 9.09% gc time)
Running: legendre_quadrature
  0.182151 seconds (159.34 k allocations: 8.841 MiB)
Running: lobatto_quadrature
  0.192886 seconds (167.96 k allocations: 9.442 MiB)
Running: radau_quadrature
  0.200281 seconds (167.95 k allocations: 9.395 MiB)
Running: rectangle_rule_left
  1.108115 seconds (18.90 k allocations: 1.125 MiB)
Running: rectangle_rule_midpoint
  0.025489 seconds (24.58 k allocations: 1.513 MiB)
Running: rectangle_rule_right
  1.007481 seconds (17.42 k allocations: 1.039 MiB)
Running: simpsons_rule
  0.052551 seconds (66.79 k allocations: 4.083 MiB)
Running: simpsons38_rule
  0.069953 seconds (66.83 k allocations: 4.083 MiB, 27.09% gc time)
Running: adaptive_simpsons_rule
  0.050764 seconds (67.43 k allocations: 4.092 MiB)
Running: trapezoidal_rule
  0.024032 seconds (43.91 k allocations: 1.728 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: chebyshev_quadrature with k=1
  0.245743 seconds (204.15 k allocations: 10.860 MiB)
Running: chebyshev_quadrature with k=2
  0.264552 seconds (261.78 k allocations: 13.959 MiB)
Running: chebyshev_quadrature with k=3
  0.406289 seconds (251.08 k allocations: 12.834 MiB, 7.36% gc time)
Running: chebyshev_quadrature with k=4
  0.268120 seconds (251.09 k allocations: 12.841 MiB)
Running: hermite_quadrature with k=2
 18.780042 seconds (22.17 M allocations: 1.123 GiB, 6.99% gc time)
Running: jacobi_quadrature with α=β=1
  0.706883 seconds (414.22 k allocations: 46.649 MiB, 6.12% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.306390 seconds (246.71 k allocations: 13.175 MiB)
Running: legendre_quadrature
  0.231443 seconds (164.64 k allocations: 9.155 MiB)
Running: lobatto_quadrature
  0.308712 seconds (186.67 k allocations: 35.110 MiB, 11.78% gc time)
Running: radau_quadrature
  0.302398 seconds (183.24 k allocations: 27.772 MiB, 16.42% gc time)
Running: rectangle_rule_left
  0.030310 seconds (21.89 k allocations: 1.275 MiB)
Running: rectangle_rule_midpoint
  0.030080 seconds (26.45 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  0.027572 seconds (18.55 k allocations: 1.096 MiB)
Running: simpsons_rule
  0.070482 seconds (81.09 k allocations: 4.513 MiB)
Running: simpsons38_rule
  0.088363 seconds (84.25 k allocations: 4.561 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.078205 seconds (276.98 k allocations: 7.503 MiB)
Running: trapezoidal_rule
  0.031891 seconds (30.11 k allocations: 1.661 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: chebyshev_quadrature with k=1
  0.277362 seconds (200.48 k allocations: 10.663 MiB)
Running: chebyshev_quadrature with k=2
  0.249845 seconds (257.39 k allocations: 13.732 MiB)
Running: chebyshev_quadrature with k=3
  0.391431 seconds (247.18 k allocations: 12.666 MiB, 40.84% gc time)
Running: chebyshev_quadrature with k=4
  0.236640 seconds (247.18 k allocations: 12.666 MiB)
Running: hermite_quadrature with k=2
  0.173990 seconds (158.35 k allocations: 8.804 MiB)
Running: jacobi_quadrature with α=β=1
  9.119901 seconds (408.07 k allocations: 1.172 GiB, 15.59% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.279387 seconds (242.57 k allocations: 13.008 MiB, 5.55% gc time)
Running: legendre_quadrature
  0.196242 seconds (161.05 k allocations: 8.950 MiB)
Running: lobatto_quadrature
  0.219977 seconds (178.27 k allocations: 20.867 MiB)
Running: radau_quadrature
  0.220465 seconds (177.41 k allocations: 18.793 MiB)
Running: rectangle_rule_left
  0.019774 seconds (19.54 k allocations: 1.163 MiB)
Running: rectangle_rule_midpoint
  0.027850 seconds (25.27 k allocations: 1.549 MiB)
Running: rectangle_rule_right
  0.023235 seconds (17.36 k allocations: 1.039 MiB)
Running: simpsons_rule
  0.046647 seconds (71.84 k allocations: 4.234 MiB)
Running: simpsons38_rule
  0.087179 seconds (73.30 k allocations: 4.256 MiB, 23.14% gc time)
Running: adaptive_simpsons_rule with ε=1e-7
  0.071813 seconds (85.95 k allocations: 4.450 MiB)
Running: trapezoidal_rule
  0.033550 seconds (24.88 k allocations: 1.492 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: chebyshev_quadrature with k=1
  0.226927 seconds (199.24 k allocations: 10.892 MiB)
Running: chebyshev_quadrature with k=2
  0.310854 seconds (255.99 k allocations: 14.082 MiB)
Running: chebyshev_quadrature with k=3
  0.313125 seconds (245.96 k allocations: 12.890 MiB)
Running: chebyshev_quadrature with k=4
  0.269967 seconds (245.96 k allocations: 12.720 MiB, 9.44% gc time)
Running: jacobi_quadrature with α=β=1
  2.294423 seconds (406.48 k allocations: 191.531 MiB, 3.54% gc time)
Running: legendre_quadrature
  0.190590 seconds (159.83 k allocations: 8.865 MiB)
Running: lobatto_quadrature
  0.250639 seconds (168.44 k allocations: 9.420 MiB)
Running: radau_quadrature
  0.229843 seconds (168.44 k allocations: 9.420 MiB)
Running: rectangle_rule_left
  0.300739 seconds (20.83 k allocations: 1.246 MiB)
Running: rectangle_rule_midpoint
  0.051171 seconds (24.93 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  0.108310 seconds (17.77 k allocations: 1.057 MiB)
Running: simpsons_rule
  0.066806 seconds (67.61 k allocations: 4.121 MiB)
Running: simpsons38_rule
  0.072348 seconds (67.67 k allocations: 4.122 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.071359 seconds (68.51 k allocations: 4.138 MiB)
Running: trapezoidal_rule
  0.030388 seconds (44.87 k allocations: 1.762 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: chebyshev_quadrature with k=1
  0.284482 seconds (199.61 k allocations: 10.827 MiB, 7.27% gc time)
Running: chebyshev_quadrature with k=2
  0.293549 seconds (256.42 k allocations: 13.992 MiB)
Running: chebyshev_quadrature with k=3
  0.274876 seconds (246.29 k allocations: 12.800 MiB)
Running: chebyshev_quadrature with k=4
  0.268199 seconds (246.29 k allocations: 12.904 MiB)
Running: jacobi_quadrature with α=β=1
  2.131124 seconds (406.98 k allocations: 146.221 MiB, 7.28% gc time)
Running: legendre_quadrature
  0.206980 seconds (160.20 k allocations: 8.880 MiB)
Running: lobatto_quadrature
  0.245499 seconds (168.81 k allocations: 9.437 MiB)
Running: radau_quadrature
  0.226786 seconds (168.80 k allocations: 9.431 MiB)
Running: rectangle_rule_left
  1.016232 seconds (19.71 k allocations: 1.165 MiB)
Running: rectangle_rule_midpoint
  0.027392 seconds (24.92 k allocations: 1.532 MiB)
Running: rectangle_rule_right
  1.278810 seconds (17.75 k allocations: 1.056 MiB)
Running: simpsons_rule
  0.081625 seconds (68.87 k allocations: 4.166 MiB)
Running: simpsons38_rule
  0.065275 seconds (68.93 k allocations: 4.167 MiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.061453 seconds (71.09 k allocations: 4.200 MiB)
Running: trapezoidal_rule
  0.054196 seconds (57.12 k allocations: 1.963 MiB, 43.54% gc time)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: chebyshev_quadrature with k=1
  0.294660 seconds (233.55 k allocations: 11.648 MiB)
Running: chebyshev_quadrature with k=2
  0.163533 seconds (125.54 k allocations: 3.861 MiB)
Running: chebyshev_quadrature with k=3
  0.170510 seconds (114.76 k allocations: 3.719 MiB)
Running: chebyshev_quadrature with k=4
  0.164193 seconds (94.30 k allocations: 3.314 MiB)
Running: jacobi_quadrature with α=β=1
  1.149796 seconds (434.70 k allocations: 164.938 MiB, 5.64% gc time)
Running: legendre_quadrature
  0.132895 seconds (36.88 k allocations: 1.986 MiB)
Running: lobatto_quadrature
  0.000305 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000100 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 50.731982 seconds (590.00 M allocations: 8.792 GiB, 4.21% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 50.354296 seconds (592.75 M allocations: 8.833 GiB, 4.21% gc time)
Running: simpsons_rule
  0.050845 seconds (722 allocations: 39.094 KiB)
Running: simpsons38_rule
  0.000201 seconds (128 allocations: 2.344 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000158 seconds (799 allocations: 12.828 KiB)
Running: trapezoidal_rule
  0.026506 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: chebyshev_quadrature with k=1
  0.787728 seconds (577.03 k allocations: 32.051 MiB)
Running: chebyshev_quadrature with k=2
 12.286670 seconds (449.97 k allocations: 4.039 GiB, 4.31% gc time)
Running: chebyshev_quadrature with k=3
  5.508387 seconds (257.28 k allocations: 1.641 GiB, 4.53% gc time)
Running: chebyshev_quadrature with k=4
  7.832468 seconds (257.28 k allocations: 2.260 GiB, 2.86% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 70.803930 seconds (439.15 k allocations: 13.251 GiB, 2.68% gc time)
Running: legendre_quadrature.
  5.896478 seconds (193.64 k allocations: 1.974 GiB, 2.27% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.006195 seconds (8.20 M allocations: 13.381 GiB, 3.87% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.346110 seconds (7.20 M allocations: 13.366 GiB, 2.21% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.866858 seconds (22.30 k allocations: 1.321 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.627408 seconds (30.42 k allocations: 1.839 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.967166 seconds (22.51 k allocations: 1.331 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.311584 seconds (600.06 M allocations: 8.944 GiB, 7.68% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.631254 seconds (600.06 M allocations: 8.944 GiB, 7.84% gc time)
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.203834 seconds (565.12 M allocations: 8.424 GiB, 8.73% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.945859 seconds (600.03 M allocations: 8.943 GiB, 8.28% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: chebyshev_quadrature with k=1
  0.287244 seconds (213.60 k allocations: 11.238 MiB)
Running: chebyshev_quadrature with k=2
  0.295020 seconds (241.91 k allocations: 12.592 MiB)
Running: chebyshev_quadrature with k=3
  0.269822 seconds (228.73 k allocations: 11.393 MiB)
Running: chebyshev_quadrature with k=4
  0.240273 seconds (228.73 k allocations: 11.391 MiB)
Running: jacobi_quadrature with α=β=1
  0.617630 seconds (346.88 k allocations: 32.442 MiB, 30.61% gc time)
Running: laguerre_quadrature with k=2
  0.224290 seconds (155.40 k allocations: 8.718 MiB)
Running: legendre_quadrature
  0.133977 seconds (117.44 k allocations: 6.276 MiB)
Running: lobatto_quadrature
  0.034935 seconds (9.86 k allocations: 15.074 MiB)
Running: radau_quadrature
  0.035813 seconds (8.63 k allocations: 13.148 MiB)
Running: rectangle_rule_left
  0.059399 seconds (21.53 k allocations: 1.244 MiB)
Running: rectangle_rule_midpoint
  0.048294 seconds (25.46 k allocations: 1.539 MiB)
Running: rectangle_rule_right
  0.053378 seconds (17.55 k allocations: 1.030 MiB)
Running: simpsons_rule
  0.082127 seconds (105.99 k allocations: 5.084 MiB)
Running: simpsons38_rule
  0.002387 seconds (30.39 k allocations: 475.344 KiB)
Running: adaptive_simpsons_rule with ε=1e-8
  0.006369 seconds (88.55 k allocations: 1.352 MiB)
Running: trapezoidal_rule
  0.173848 seconds (2.39 M allocations: 37.664 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: chebyshev_quadrature with k=1
  0.110483 seconds (2.75 k allocations: 1.702 MiB)
Running: chebyshev_quadrature with k=2
  0.103889 seconds (3.02 k allocations: 2.367 MiB)
Running: chebyshev_quadrature with k=3
  0.123028 seconds (4.25 k allocations: 2.097 MiB)
Running: chebyshev_quadrature with k=4
  0.122939 seconds (4.25 k allocations: 1.538 MiB)
Running: jacobi_quadrature with α=β=1
  7.495401 seconds (344.06 k allocations: 903.106 MiB, 3.69% gc time)
Running: legendre_quadrature
  0.072207 seconds (1.45 k allocations: 76.531 KiB)
Running: lobatto_quadrature
  0.000438 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000295 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.428573 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000447 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.411178 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.061209 seconds (5.67 k allocations: 183.438 KiB)
Running: simpsons38_rule
  0.000304 seconds (4.49 k allocations: 70.469 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.001159 seconds (17.12 k allocations: 267.828 KiB)
Running: trapezoidal_rule
  0.000797 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: chebyshev_quadrature with k=1
  0.094515 seconds (2.63 k allocations: 582.219 KiB)
Running: chebyshev_quadrature with k=2
  0.097347 seconds (2.90 k allocations: 784.156 KiB)
Running: chebyshev_quadrature with k=3
  0.110957 seconds (4.12 k allocations: 723.297 KiB)
Running: chebyshev_quadrature with k=4
  0.125895 seconds (4.12 k allocations: 553.797 KiB)
Running: jacobi_quadrature with α=β=1
  2.418001 seconds (334.01 k allocations: 250.576 MiB, 9.66% gc time)
Running: legendre_quadrature
  0.070623 seconds (1.35 k allocations: 68.922 KiB)
Running: lobatto_quadrature
  0.000320 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000087 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.930092 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001065 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.444105 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.052021 seconds (2.77 k allocations: 113.031 KiB)
Running: simpsons38_rule
  0.000153 seconds (947 allocations: 15.141 KiB)
Running: adaptive_simpsons_rule with ε=1e-7
  0.000354 seconds (2.92 k allocations: 45.906 KiB)
Running: trapezoidal_rule
  0.001704 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
