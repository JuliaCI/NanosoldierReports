Julia Version 1.6.0-DEV.387
Commit e23635c619 (2020-07-07 16:42 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_DBXavZ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_DBXavZ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172322193912701
curgen: 20 fitness: 0.2172322193912701
curgen: 30 fitness: 0.2172322193912701
curgen: 40 fitness: 0.2172322193912701
curgen: 50 fitness: 0.2172322193912701
CoordinateCreature{Vector{Float64}}([0.22272662610779026], -0.2172322193912701) 0.22272662610779026 -0.2172322193912701
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258096538593114
curgen: 100 fitness: 3.2582224927176147
curgen: 150 fitness: 3.258313501703866
curgen: 200 fitness: 3.2583167203438133
curgen: 250 fitness: 3.258366126734642
curgen: 300 fitness: 3.258366126734642
curgen: 350 fitness: 3.258390185372245
curgen: 400 fitness: 3.2584018042178307
curgen: 450 fitness: 3.2584018042178307
curgen: 500 fitness: 3.258409685090256
CoordinateCreature{Vector{Float64}}([0.22237464654454056, -0.22254724161263373, 0.22223200897795548, 0.22254805877967135, -0.22293803809649126, 0.2219697437950294, 0.22275240458940027, 0.22250682699852176, -0.22204718443320468, 0.22219539591136125, -0.2230518132915127, 0.2233795783441078, 0.22242237840886053, -0.2223121555404871, -0.2222488116191516], -3.258409685090256) [0.22237464654454056, -0.22254724161263373, 0.22223200897795548, 0.22254805877967135, -0.22293803809649126, 0.2219697437950294, 0.22275240458940027, 0.22250682699852176, -0.22204718443320468, 0.22219539591136125, -0.2230518132915127, 0.2233795783441078, 0.22242237840886053, -0.2223121555404871, -0.2222488116191516] -3.258409685090256
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004916365831434177
curgen: 100 fitness: -0.004076844767212151
curgen: 150 fitness: -0.004031208824557098
curgen: 200 fitness: -0.002291577103619602
curgen: 250 fitness: -0.0022843530224179176
curgen: 300 fitness: -0.0022843530224179176
curgen: 350 fitness: -0.0022843530224179176
curgen: 400 fitness: -0.0013610153817467108
curgen: 450 fitness: -0.0013610153817467108
curgen: 500 fitness: -0.001307957695900086
CoordinateCreature{Vector{Float64}}([0.00024346241378805813, 7.726366824431117e-5, 0.0002324062862672562, -6.598049369011704e-5, -0.0005783329297063535, -9.263148581582954e-5, -0.00036340862216262043, 0.00029751518862453086, 6.140868631811843e-5, 0.0003664737413459409, 0.0019846007753673025, -5.803780196752661e-5, 0.0007428315049296976, 0.0008520532155656094, 0.000740087995089991], 0.001307957695900086) [0.00024346241378805813, 7.726366824431117e-5, 0.0002324062862672562, -6.598049369011704e-5, -0.0005783329297063535, -9.263148581582954e-5, -0.00036340862216262043, 0.00029751518862453086, 6.140868631811843e-5, 0.0003664737413459409, 0.0019846007753673025, -5.803780196752661e-5, 0.0007428315049296976, 0.0008520532155656094, 0.000740087995089991] 0.001307957695900086
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
