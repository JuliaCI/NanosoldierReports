Julia Version 1.6.0-DEV.408
Commit b19a3578af (2020-07-08 17:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_K8BRjD/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_K8BRjD/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721884364939317
curgen: 20 fitness: 0.21722920801003945
curgen: 30 fitness: 0.21723312639376233
curgen: 40 fitness: 0.21723312639376233
curgen: 50 fitness: 0.21723312639376233
CoordinateCreature{Vector{Float64}}([-0.2224417358235481], -0.21723312639376233) -0.2224417358235481 -0.21723312639376233
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257604292666398
curgen: 100 fitness: 3.2580281468085883
curgen: 150 fitness: 3.2580887845212456
curgen: 200 fitness: 3.2582979023723553
curgen: 250 fitness: 3.258312186621373
curgen: 300 fitness: 3.2583968376080437
curgen: 350 fitness: 3.258423589213982
curgen: 400 fitness: 3.2584304824216335
curgen: 450 fitness: 3.2584304824216335
curgen: 500 fitness: 3.2584304824216335
CoordinateCreature{Vector{Float64}}([-0.22265495146713127, 0.22172537731927278, 0.22322525373650995, 0.22254021862094686, -0.2229149780060441, -0.22235043486778697, -0.2229787257821144, -0.22260331238468206, -0.22242090661417224, 0.22279499547628714, 0.2225870376700881, -0.22249110959260238, -0.22270421074266372, 0.2223750774613538, -0.22239323008205136], -3.2584304824216335) [-0.22265495146713127, 0.22172537731927278, 0.22322525373650995, 0.22254021862094686, -0.2229149780060441, -0.22235043486778697, -0.2229787257821144, -0.22260331238468206, -0.22242090661417224, 0.22279499547628714, 0.2225870376700881, -0.22249110959260238, -0.22270421074266372, 0.2223750774613538, -0.22239323008205136] -3.2584304824216335
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003115834663503847
curgen: 100 fitness: -0.002795333440616332
curgen: 150 fitness: -0.002795333440616332
curgen: 200 fitness: -0.0025557713321120445
curgen: 250 fitness: -0.002056096908091831
curgen: 300 fitness: -0.002056096908091831
curgen: 350 fitness: -0.0010237666421915037
curgen: 400 fitness: -0.0010237666421915037
curgen: 450 fitness: -0.0010237666421915037
curgen: 500 fitness: -0.0010237666421915037
CoordinateCreature{Vector{Float64}}([1.971752703453655e-5, 0.0015163126208147075, 0.000157802288432144, 0.00026913360222064896, 3.4931425266062147e-6, -0.0006265502288755496, -0.00020704760646654002, -4.2120136476322956e-5, 4.3669019433468376e-6, 0.00041420170003157557, 0.001396697229530827, -0.00035443181370441255, 0.00027255677272899887, -5.6122292897600734e-5, 2.8264294667383442e-5], 0.0010237666421915037) [1.971752703453655e-5, 0.0015163126208147075, 0.000157802288432144, 0.00026913360222064896, 3.4931425266062147e-6, -0.0006265502288755496, -0.00020704760646654002, -4.2120136476322956e-5, 4.3669019433468376e-6, 0.00041420170003157557, 0.001396697229530827, -0.00035443181370441255, 0.00027255677272899887, -5.6122292897600734e-5, 2.8264294667383442e-5] 0.0010237666421915037
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
