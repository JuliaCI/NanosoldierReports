Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_gOt9iG/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_gOt9iG/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719517859740647
curgen: 20 fitness: 0.21720898387745644
curgen: 30 fitness: 0.21722908617171194
curgen: 40 fitness: 0.21723348659414343
curgen: 50 fitness: 0.21723348659414343
CoordinateCreature{Vector{Float64}}([-0.2226047212449165], -0.21723348659414343) -0.2226047212449165 -0.21723348659414343
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581230778133357
curgen: 100 fitness: 3.2581621231206896
curgen: 150 fitness: 3.258227663557267
curgen: 200 fitness: 3.2582532540168687
curgen: 250 fitness: 3.2582839753689443
curgen: 300 fitness: 3.2583056592969655
curgen: 350 fitness: 3.258383583248083
curgen: 400 fitness: 3.258407619453986
curgen: 450 fitness: 3.258420765117473
curgen: 500 fitness: 3.2584419398423283
CoordinateCreature{Vector{Float64}}([-0.22308140733605447, -0.22247867668550578, -0.2218301710772386, 0.22244579340719042, 0.2229720256537873, 0.2225910435856797, -0.22248015522039644, -0.2224262564003943, 0.2221257604600977, 0.22224943571251052, -0.22248688034826822, -0.2225019536847816, -0.22263734824377518, 0.22261174450200552, 0.22287702428889022], -3.2584419398423283) [-0.22308140733605447, -0.22247867668550578, -0.2218301710772386, 0.22244579340719042, 0.2229720256537873, 0.2225910435856797, -0.22248015522039644, -0.2224262564003943, 0.2221257604600977, 0.22224943571251052, -0.22248688034826822, -0.2225019536847816, -0.22263734824377518, 0.22261174450200552, 0.22287702428889022] -3.2584419398423283
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0032301830443088875
curgen: 100 fitness: -0.0017429632756034152
curgen: 150 fitness: -0.0016972660044984877
curgen: 200 fitness: -0.0016972660044984877
curgen: 250 fitness: -0.0016972660044984877
curgen: 300 fitness: -0.0016972660044984877
curgen: 350 fitness: -0.0016967233216860222
curgen: 400 fitness: -0.0016967233216860222
curgen: 450 fitness: -0.001471211172713538
curgen: 500 fitness: -0.0014614501004075464
CoordinateCreature{Vector{Float64}}([0.0014608060594970599, -5.805177758647995e-5, -3.33987641637215e-5, -0.001027897449590489, 5.047859960666907e-5, -0.0003317434320639329, -0.0005355179417717783, -0.0002709167548349458, -0.00036518447479749923, 0.0005318344228702193, 8.436601386879565e-5, 0.0012947086782010495, 0.0007130444432311405, -0.000667772590642482, 0.0008029735212549741], 0.0014614501004075464) [0.0014608060594970599, -5.805177758647995e-5, -3.33987641637215e-5, -0.001027897449590489, 5.047859960666907e-5, -0.0003317434320639329, -0.0005355179417717783, -0.0002709167548349458, -0.00036518447479749923, 0.0005318344228702193, 8.436601386879565e-5, 0.0012947086782010495, 0.0007130444432311405, -0.000667772590642482, 0.0008029735212549741] 0.0014614501004075464
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
