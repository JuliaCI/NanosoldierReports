Julia Version 1.6.0-DEV.549
Commit 3909294e78 (2020-07-28 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_XHeNMe/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_XHeNMe/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172336129348833
curgen: 20 fitness: 0.2172336129348833
curgen: 30 fitness: 0.2172336129348833
curgen: 40 fitness: 0.2172336129348833
curgen: 50 fitness: 0.2172336129348833
CoordinateCreature{Vector{Float64}}([-0.22256673363636298], -0.2172336129348833) -0.22256673363636298 -0.2172336129348833
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581146104956726
curgen: 100 fitness: 3.258281764678615
curgen: 150 fitness: 3.2583259638873967
curgen: 200 fitness: 3.2583291220564097
curgen: 250 fitness: 3.258342659536866
curgen: 300 fitness: 3.258342659536866
curgen: 350 fitness: 3.258373531817004
curgen: 400 fitness: 3.2584375156375796
curgen: 450 fitness: 3.2584375156375796
curgen: 500 fitness: 3.2584531197267133
CoordinateCreature{Vector{Float64}}([-0.22203815471426272, 0.22257010726078955, 0.2222068481892751, 0.22268672152158386, -0.22232377292194022, 0.22239913996545632, -0.2226917930175688, 0.22268651227920216, 0.22239210061818163, -0.22317683286584253, -0.22243837432078922, -0.22249623031828739, -0.2225412031004441, 0.22209558332676563, -0.2224449938759096], -3.2584531197267133) [-0.22203815471426272, 0.22257010726078955, 0.2222068481892751, 0.22268672152158386, -0.22232377292194022, 0.22239913996545632, -0.2226917930175688, 0.22268651227920216, 0.22239210061818163, -0.22317683286584253, -0.22243837432078922, -0.22249623031828739, -0.2225412031004441, 0.22209558332676563, -0.2224449938759096] -3.2584531197267133
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002388399477126768
curgen: 100 fitness: -0.0023237741095272213
curgen: 150 fitness: -0.0018319683438221546
curgen: 200 fitness: -0.0018319683438221546
curgen: 250 fitness: -0.0015245106484371718
curgen: 300 fitness: -0.0011783307830057765
curgen: 350 fitness: -0.0011082393041021987
curgen: 400 fitness: -0.0010929023657695325
curgen: 450 fitness: -0.0010134294476529249
curgen: 500 fitness: -0.0010134294476529249
CoordinateCreature{Vector{Float64}}([-9.448895720268842e-5, 0.000579619286174126, -2.6735176886859195e-5, 0.0001960282801770048, -7.362303967833861e-5, 0.0007106114120917564, -0.00038764813257770916, 0.0008314124483568925, 0.0005378616158770635, -0.00043510391439855866, -0.0008571068283809023, -0.0003469850896656442, 0.0008763618294372949, -0.0010982155424072884, 0.00025409222812466204], 0.0010134294476529249) [-9.448895720268842e-5, 0.000579619286174126, -2.6735176886859195e-5, 0.0001960282801770048, -7.362303967833861e-5, 0.0007106114120917564, -0.00038764813257770916, 0.0008314124483568925, 0.0005378616158770635, -0.00043510391439855866, -0.0008571068283809023, -0.0003469850896656442, 0.0008763618294372949, -0.0010982155424072884, 0.00025409222812466204] 0.0010134294476529249
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
