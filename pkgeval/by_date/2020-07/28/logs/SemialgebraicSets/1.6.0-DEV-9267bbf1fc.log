Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SemialgebraicSets ─────── v0.2.1
  Installed OrderedCollections ────── v1.3.0
  Installed MultivariatePolynomials ─ v0.3.10
  Installed MutableArithmetics ────── v0.2.10
  Installed DataStructures ────────── v0.17.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [8e049039] + SemialgebraicSets v0.2.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [864edb3b] + DataStructures v0.17.19
  [102ac46a] + MultivariatePolynomials v0.3.10
  [d8a4904e] + MutableArithmetics v0.2.10
  [bac558e1] + OrderedCollections v1.3.0
  [8e049039] + SemialgebraicSets v0.2.1
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
    Testing SemialgebraicSets
Status `/tmp/jl_TH9TVq/Project.toml`
  [7c1d4256] DynamicPolynomials v0.3.12
  [102ac46a] MultivariatePolynomials v0.3.10
  [8e049039] SemialgebraicSets v0.2.1
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_TH9TVq/Manifest.toml`
  [864edb3b] DataStructures v0.17.19
  [7c1d4256] DynamicPolynomials v0.3.12
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [bac558e1] OrderedCollections v1.3.0
  [189a3867] Reexport v0.2.0
  [8e049039] SemialgebraicSets v0.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Basic: Error During Test at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:20
  Test threw exception
  Expression: S === MultivariatePolynomials.changecoefficienttype(S, Float64)
  MethodError: convert(::Type{BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}}, ::BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet{T,PT,AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
   [1] changecoefficienttype(set::BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}, T::Type)
     @ SemialgebraicSets ~/.julia/packages/SemialgebraicSets/wN4gl/src/SemialgebraicSets.jl:31
   [2] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:20 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:10 [inlined]
   [5] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [6] top-level scope
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:4
  
Basic with no equality: Error During Test at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:65
  Test threw exception
  Expression: S === MultivariatePolynomials.changecoefficienttype(S, Int)
  MethodError: convert(::Type{BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FullSpace}}, ::BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FullSpace}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet{T,PT,AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
   [1] changecoefficienttype(set::BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FullSpace}, T::Type)
     @ SemialgebraicSets ~/.julia/packages/SemialgebraicSets/wN4gl/src/SemialgebraicSets.jl:31
   [2] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:65 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:52 [inlined]
   [5] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [6] top-level scope
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:4
  
Basic with fixed variables: Error During Test at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:88
  Test threw exception
  Expression: S === MultivariatePolynomials.changecoefficienttype(S, Int)
  MethodError: convert(::Type{BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FixedVariablesSet{DynamicPolynomials.PolyVar{true},Int64,DynamicPolynomials.PolyVar{true}}}}, ::BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FixedVariablesSet{DynamicPolynomials.PolyVar{true},Int64,DynamicPolynomials.PolyVar{true}}}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet{T,PT,AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
   [1] changecoefficienttype(set::BasicSemialgebraicSet{Int64,DynamicPolynomials.Polynomial{true,Int64},FixedVariablesSet{DynamicPolynomials.PolyVar{true},Int64,DynamicPolynomials.PolyVar{true}}}, T::Type)
     @ SemialgebraicSets ~/.julia/packages/SemialgebraicSets/wN4gl/src/SemialgebraicSets.jl:31
   [2] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:88 [inlined]
   [3] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [4] macro expansion
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:78 [inlined]
   [5] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [6] top-level scope
     @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:4
  
Basic mixed fixed variables and equalities: Error During Test at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:120
  Got exception outside of a @test
  MethodError: convert(::Type{BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}}, ::BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet{T,PT,AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T,PT,AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
    [1] setindex!(A::Vector{BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}}, x::BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}, i1::Int64)
      @ Base ./array.jl:847
    [2] vect(::BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}}, ::Vararg{BasicSemialgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,Random._GLOBAL_RNG}},Float64}},N} where N)
      @ Base ./array.jl:130
    [3] macro expansion
      @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:121 [inlined]
    [4] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
    [5] macro expansion
      @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:121 [inlined]
    [6] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
    [7] top-level scope
      @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:4
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:443
    [9] top-level scope
      @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/commutativetests.jl:1
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [11] top-level scope
      @ ~/.julia/packages/SemialgebraicSets/wN4gl/test/runtests.jl:18
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:443
   [13] top-level scope
      @ none:6
   [14] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [15] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [16] _start()
      @ Base ./client.jl:484
  
Test Summary:                                | Pass  Error  Total
Basic semialgebraic set                      |   84      4     88
  Basic                                      |   20      1     21
    Mixed types                              |    2             2
    Different variables                      |    2             2
  Basic with no equality                     |   13      1     14
  Basic with fixed variables                 |   48      1     49
    Empty                                    |   30            30
  Basic mixed fixed variables and equalities |           1      1
ERROR: LoadError: LoadError: LoadError: Some tests did not pass: 84 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/macro.jl:3
in expression starting at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/commutativetests.jl:1
in expression starting at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/test/runtests.jl:16
ERROR: Package SemialgebraicSets errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
