Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_bvxUu6/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_bvxUu6/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(19, 0.002281189f0), Item(6, 0.0023430586f0), Item(14, 0.022845149f0), Item(22, 0.038354874f0)])
Vsorted = Item[Item(19, 0.002281189f0), Item(6, 0.0023430586f0), Item(14, 0.022845149f0), Item(22, 0.038354874f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004367431004842122, 0.0045502026875813804, 301.0, 48.622603910043836))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00402225653330485, 0.004578002293904622, 301.0, 70.90344381332397))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004387871424357096, 0.0043234666188557945, 301.0, 39.2741414308548))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0040594657262166345, 0.003944563865661621, 301.0, 8.691546471090987))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.006537095705668131, 0.00536036491394043, 301.0, 43.94414265733212))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001763582229614258, 0.00015306472778320312, 301.0, 175.16065778583288))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.374518076578776e-5, 0.01063849925994873, 300.0, 26.19727462157607)
p = PerformanceResult(1.0, 1.0, 1.0, 5.577405293782552e-5, 2.8340021769205728e-5, 300.0, 26.19727462157607)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0040187835693359375, 0.003760329882303874, 300.0, 1.3555615618415686)
p = PerformanceResult(1.0, 1.0, 1.0, 4.859235551622179e-5, 2.1537144978841145e-5, 300.0, 1.3555615618415686)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.374518076578776e-5, 0.01063849925994873, 300.0, 26.19727462157607), PerformanceResult(1.0, 1.0, 1.0, 5.577405293782552e-5, 2.8340021769205728e-5, 300.0, 26.19727462157607), PerformanceResult(1.0, 1.0, 1.0, 0.0040187835693359375, 0.003760329882303874, 300.0, 1.3555615618415686), PerformanceResult(1.0, 1.0, 1.0, 4.859235551622179e-5, 2.1537144978841145e-5, 300.0, 1.3555615618415686))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008559322357177735, 0.003721133867899577, 347.56666666666666, 28575.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00711816151936849, 0.0035296042760213217, 302.9, 6970.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0472208658854165e-5, 1.2230873107910156e-5, 94.73333333333333, 48.62708196230233))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4104118347167967e-5, 1.1897087097167968e-5, 83.06666666666666, 70.92697560787201))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.404054005940755e-5, 1.6872088114420573e-5, 90.1, 39.257246255874634))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.280840555826823e-5, 0.00015869935353597005, 95.66666666666667, 43.942784550599754))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8066666666666668, 0.8066666666666668, 0.8066666666666668, 6.293455759684244e-5, 0.0001538991928100586, 69.83333333333333, 184.3503493592143))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-28T21:50:58.983
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9220000000000002, 0.9220000000000002, 0.9220000000000002, 2.215147018432617e-5, 2.3860931396484375e-5, 153.35, 48.06525511055952))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.153158187866211e-5, 1.873970031738281e-5, 157.04, 0.0))
*** advance 1 from 1000; 2020-07-28T21:50:59.676
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9167777777777778, 0.9159999999999999, 0.9163684210526316, 2.3550987243652344e-5, 2.7880668640136718e-5, 155.0, 71.8947298610583))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6075839996337892e-5, 2.206087112426758e-5, 158.87, 0.0))
*** advance 1 from 1000; 2020-07-28T21:51:00.399
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9154444444444446, 0.9080000000000003, 0.9108684210526319, 2.368927001953125e-5, 3.384113311767578e-5, 155.03, 37.95214254036546))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2580623626708983e-5, 3.636837005615234e-5, 159.09, 0.0))
*** advance 1 from 1000; 2020-07-28T21:51:01.065
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.982, 0.982, 0.982, 0.00011147260665893555, 0.000511939525604248, 168.02, 41.96305106632644))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011490821838378906, 0.0006326508522033692, 173.27, 0.0))
*** advance 1 from 1000; 2020-07-28T21:51:01.686
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9710000000000002, 0.9710000000000002, 0.9710000000000002, 9.475231170654297e-5, 0.0004073786735534668, 170.49, 181.84455731953494))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.614540100097656e-5, 0.00043601036071777344, 176.05, 0.0))
*** advance 1 from 1000; 2020-07-28T21:51:02.756
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9220000000000002, 0.9220000000000002, 0.9220000000000002, 3.8268566131591795e-5, 0.0001043701171875, 153.35, 48.074574700789526))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.4513473510742185e-5, 7.468938827514648e-5, 157.04, 0.014558774477336556))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:04.592
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7609999999999998, 0.7609999999999998, 0.7609999999999998, 0.001599438190460205, 0.00012145042419433593, 203.64, 188.50000239908695))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:05.605
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.767, 0.767, 0.767, 0.0016158533096313477, 7.682085037231445e-5, 208.58, 106.57619225233793))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:06.524
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.653, 0.653, 0.653, 0.001723909378051758, 7.778882980346679e-5, 275.0, 3.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:07.365
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9740000000000003, 0.9720000000000003, 0.9728888888888892, 0.0014944052696228027, 1.9919872283935546e-5, 215.68, 596.0000206828117))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:08.412
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5630000000000001, 0.5630000000000001, 0.5630000000000001, 0.0015546035766601561, 0.0005007410049438477, 256.39, 2374.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:09.394
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.36400000000000005, 0.36400000000000005, NaN, 0.001602163314819336, 0.0004050183296203613, 243.74, 3666.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-28T21:51:10.442
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.578, 0.578, 0.578, 0.0015395593643188477, 3.523111343383789e-5, 245.87, 2398.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0736253494874184, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561870421245425,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.3828125,"distances_sum":564.6696554869413}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0736253494874184,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561870421245425,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.3828125,"distances_sum":564.6696554869413}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0736253494874184,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561870421245425,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.3828125,"distances_sum":564.6696554869413}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0736253494874184,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561870421245425,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.3828125,"distances_sum":564.6696554869413}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8888888888888875, conf: {"restarts":6}, perf: {"precision":0.8888888888888875,"recall":0.8888888888888875,"f1":0.8888888888888875,"seconds":1.9263476133346558e-5,"exhaustive_search_seconds":6.5248459577560425e-6,"evaluations":45.4453125,"distances_sum":273.9304320141673}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7997443544951004, conf: {"restarts":11}, perf: {"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":2.4842098355293274e-5,"exhaustive_search_seconds":6.5248459577560425e-6,"evaluations":55.0078125,"distances_sum":271.81841096282005}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7997443544951004,"state":{"restarts":11},"perf":{"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":2.4842098355293274e-5,"exhaustive_search_seconds":6.5248459577560425e-6,"evaluations":55.0078125,"distances_sum":271.81841096282005}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7997443544951004,"state":{"restarts":11},"perf":{"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":2.4842098355293274e-5,"exhaustive_search_seconds":6.5248459577560425e-6,"evaluations":55.0078125,"distances_sum":271.81841096282005}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7997443544951004,"state":{"restarts":11},"perf":{"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":2.4842098355293274e-5,"exhaustive_search_seconds":6.5248459577560425e-6,"evaluations":55.0078125,"distances_sum":271.81841096282005}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222209, conf: {"restarts":6}, perf: {"precision":0.8628472222222209,"recall":0.8628472222222209,"f1":0.8628472222222209,"seconds":3.902614116668701e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":97.71875,"distances_sum":125.00277504418045}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555546, conf: {"restarts":5}, perf: {"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":3.648921847343445e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":94.15625,"distances_sum":124.60006439778954}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999988, conf: {"restarts":8}, perf: {"precision":0.8593749999999988,"recall":0.8593749999999988,"f1":0.8593749999999988,"seconds":4.527345299720764e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":111.046875,"distances_sum":125.1523025566712}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777765, conf: {"restarts":14}, perf: {"precision":0.8637152777777765,"recall":0.8637152777777765,"f1":0.8637152777777765,"seconds":5.8667734265327454e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":152.4609375,"distances_sum":125.08464168850332}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777763, conf: {"restarts":3}, perf: {"precision":0.8637152777777763,"recall":0.8637152777777763,"f1":0.8637152777777763,"seconds":3.534182906150818e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":81.234375,"distances_sum":124.93507410679013}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666657, conf: {"restarts":17}, perf: {"precision":0.8697916666666657,"recall":0.8697916666666657,"f1":0.8697916666666657,"seconds":6.523542106151581e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":169.09375,"distances_sum":124.69026401359588}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":16}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":6.414949893951416e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":163.7734375,"distances_sum":125.09931745473295}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555546,"state":{"restarts":5},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":3.648921847343445e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":94.15625,"distances_sum":124.60006439778954}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777765, conf: {"restarts":21}, perf: {"precision":0.8793402777777765,"recall":0.8793402777777765,"f1":0.8793402777777765,"seconds":7.751956582069397e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":194.140625,"distances_sum":124.18254035059363}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111099, conf: {"restarts":12}, perf: {"precision":0.8767361111111099,"recall":0.8767361111111099,"f1":0.8767361111111099,"seconds":4.929304122924805e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":139.9765625,"distances_sum":124.22592048440129}, best_list's length: 12, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777767, conf: {"restarts":24}, perf: {"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":7.496960461139679e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":209.515625,"distances_sum":124.09281940106302}, best_list's length: 13, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8793402777777767,"state":{"restarts":24},"perf":{"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":7.496960461139679e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":209.515625,"distances_sum":124.09281940106302}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8793402777777767,"state":{"restarts":24},"perf":{"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":7.496960461139679e-5,"exhaustive_search_seconds":2.697668969631195e-5,"evaluations":209.515625,"distances_sum":124.09281940106302}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444433, conf: {"restarts":33}, perf: {"precision":0.8741319444444433,"recall":0.8741319444444433,"f1":0.8741319444444433,"seconds":0.0001959335058927536,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":406.5390625,"distances_sum":56.44741034740582}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.862847222222221, conf: {"restarts":34}, perf: {"precision":0.862847222222221,"recall":0.862847222222221,"f1":0.862847222222221,"seconds":0.0001957286149263382,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":412.3125,"distances_sum":56.580231942702085}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777768, conf: {"restarts":29}, perf: {"precision":0.8637152777777768,"recall":0.8637152777777768,"f1":0.8637152777777768,"seconds":0.00018446147441864014,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":373.734375,"distances_sum":56.8170159352012}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888875, conf: {"restarts":14}, perf: {"precision":0.8654513888888875,"recall":0.8654513888888875,"f1":0.8654513888888875,"seconds":0.00012155622243881226,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":244.921875,"distances_sum":56.42654790589586}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.865451388888888, conf: {"restarts":17}, perf: {"precision":0.865451388888888,"recall":0.865451388888888,"f1":null,"seconds":0.0001346580684185028,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":266.75,"distances_sum":56.86811060504988}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111099, conf: {"restarts":23}, perf: {"precision":0.8689236111111099,"recall":0.8689236111111099,"f1":0.8689236111111099,"seconds":0.0001599099487066269,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":322.8984375,"distances_sum":56.52622543508187}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444438, conf: {"restarts":16}, perf: {"precision":0.8663194444444438,"recall":0.8663194444444438,"f1":0.8663194444444438,"seconds":0.00013100355863571167,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":262.46875,"distances_sum":56.59228277252987}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8741319444444433,"state":{"restarts":33},"perf":{"precision":0.8741319444444433,"recall":0.8741319444444433,"f1":0.8741319444444433,"seconds":0.0001959335058927536,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":406.5390625,"distances_sum":56.44741034740582}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8828124999999986, conf: {"restarts":32}, perf: {"precision":0.8828124999999986,"recall":0.8828124999999986,"f1":0.8828124999999986,"seconds":0.00017111562192440033,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":391.078125,"distances_sum":56.32757312292233}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999986,"state":{"restarts":32},"perf":{"precision":0.8828124999999986,"recall":0.8828124999999986,"f1":0.8828124999999986,"seconds":0.00017111562192440033,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":391.078125,"distances_sum":56.32757312292233}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8828124999999986,"state":{"restarts":32},"perf":{"precision":0.8828124999999986,"recall":0.8828124999999986,"f1":0.8828124999999986,"seconds":0.00017111562192440033,"exhaustive_search_seconds":0.00036760978400707245,"evaluations":391.078125,"distances_sum":56.32757312292233}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(32), SatNeighborhood(32), 2020-07-28T21:51:18.768
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3235, 0.009533815f0), Item(1870, 0.029752042f0), Item(4335, 0.0525555f0), Item(6162, 0.054073595f0), Item(1105, 0.05435504f0), Item(5710, 0.055341013f0), Item(4363, 0.056774195f0), Item(629, 0.061379462f0), Item(6156, 0.06586479f0), Item(3112, 0.073187f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0176678445229683,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.98046875,"f1":0.9895833333333336,"seconds":0.0043426863849163055,"exhaustive_search_seconds":2.171844244003296e-6,"evaluations":8.84375,"distances_sum":602.9002671167254}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0176678445229683,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.98046875,"f1":0.9895833333333336,"seconds":0.0043426863849163055,"exhaustive_search_seconds":2.171844244003296e-6,"evaluations":8.84375,"distances_sum":602.9002671167254}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.059391598261709,"state":{"bsize":3},"perf":{"precision":0.9861111111111107,"recall":0.9861111111111107,"f1":0.9861111111111107,"seconds":7.797777652740479e-5,"exhaustive_search_seconds":6.718561053276062e-6,"evaluations":32.359375,"distances_sum":263.2266298085451}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.059391598261709,"state":{"bsize":3},"perf":{"precision":0.9861111111111107,"recall":0.9861111111111107,"f1":0.9861111111111107,"seconds":7.797777652740479e-5,"exhaustive_search_seconds":6.718561053276062e-6,"evaluations":32.359375,"distances_sum":263.2266298085451}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.343279533432796,"state":{"bsize":3},"perf":{"precision":0.9652777777777772,"recall":0.9652777777777772,"f1":0.9652777777777772,"seconds":2.8867274522781372e-5,"exhaustive_search_seconds":2.785027027130127e-5,"evaluations":57.6015625,"distances_sum":122.44541674107313}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.343279533432796,"state":{"bsize":3},"perf":{"precision":0.9652777777777772,"recall":0.9652777777777772,"f1":0.9652777777777772,"seconds":2.8867274522781372e-5,"exhaustive_search_seconds":2.785027027130127e-5,"evaluations":57.6015625,"distances_sum":122.44541674107313}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.39532760063922, conf: {"bsize":5}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.263516843318939e-5,"exhaustive_search_seconds":0.00036407820880413055,"evaluations":102.6640625,"distances_sum":55.03015771461651}, best_list's length: 3, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.39532760063922,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.263516843318939e-5,"exhaustive_search_seconds":0.00036407820880413055,"evaluations":102.6640625,"distances_sum":55.03015771461651}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.39532760063922,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.263516843318939e-5,"exhaustive_search_seconds":0.00036407820880413055,"evaluations":102.6640625,"distances_sum":55.03015771461651}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.39532760063922,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.263516843318939e-5,"exhaustive_search_seconds":0.00036407820880413055,"evaluations":102.6640625,"distances_sum":55.03015771461651}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-07-28T21:51:23.160
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7357, 0.022076724f0), Item(832, 0.034266185f0), Item(1822, 0.035813015f0), Item(9274, 0.03721282f0), Item(3217, 0.047192313f0), Item(5485, 0.049319252f0), Item(2673, 0.04957029f0), Item(5807, 0.053925928f0), Item(1073, 0.0539656f0), Item(8943, 0.05490436f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
