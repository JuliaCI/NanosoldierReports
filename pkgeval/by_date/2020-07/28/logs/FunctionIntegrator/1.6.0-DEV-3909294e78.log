Julia Version 1.6.0-DEV.549
Commit 3909294e78 (2020-07-28 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_YIUJb5/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_YIUJb5/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.182251 seconds (1.37 M allocations: 72.463 MiB, 12.51% gc time)
Running: chebyshev_quadrature with k=1
  1.888738 seconds (2.24 M allocations: 128.618 MiB, 2.98% gc time)
Running: chebyshev_quadrature with k=2
  0.312136 seconds (425.06 k allocations: 24.392 MiB)
Running: chebyshev_quadrature with k=3
  0.364195 seconds (544.94 k allocations: 29.871 MiB, 4.01% gc time)
Running: chebyshev_quadrature with k=4
  0.326394 seconds (487.81 k allocations: 26.418 MiB)
Running: jacobi_quadrature with α=β=1
 39.965949 seconds (39.37 M allocations: 3.137 GiB, 9.17% gc time)
Running: laguerre_quadrature with k=1
  3.132097 seconds (3.33 M allocations: 185.539 MiB, 8.01% gc time)
Running: legendre_quadrature
  0.217076 seconds (215.00 k allocations: 12.305 MiB)
Running: lobatto_quadrature
  0.382316 seconds (343.45 k allocations: 20.569 MiB, 13.23% gc time)
Running: radau_quadrature
  0.247618 seconds (325.78 k allocations: 19.568 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.984389 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rectangle_rule_midpoint.
  0.154432 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.589046 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rombergs_method
  0.556242 seconds (752.65 k allocations: 43.327 MiB, 5.57% gc time)
Running: simpsons_rule
  0.040314 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.101184 seconds (113.22 k allocations: 5.981 MiB)
Running: trapezoidal_rule
  0.339259 seconds (1.52 M allocations: 25.804 MiB, 5.04% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.088153 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.506019 seconds (274.78 k allocations: 13.931 MiB)
Running: chebyshev_quadrature with k=2
  0.174071 seconds (115.88 k allocations: 3.802 MiB)
Running: chebyshev_quadrature with k=3
  0.176298 seconds (105.24 k allocations: 3.650 MiB)
Running: chebyshev_quadrature with k=4
  0.155012 seconds (87.85 k allocations: 3.298 MiB)
Running: jacobi_quadrature with α=β=1
  2.668289 seconds (536.33 k allocations: 163.503 MiB, 10.84% gc time)
Running: legendre_quadrature
  0.154118 seconds (62.35 k allocations: 3.476 MiB)
Running: lobatto_quadrature
  0.026570 seconds (16.68 k allocations: 1.027 MiB)
Running: radau_quadrature
  0.021024 seconds (16.66 k allocations: 1.026 MiB)
Running: rectangle_rule_left
 30.449934 seconds (471.41 M allocations: 7.025 GiB, 2.82% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.304438 seconds (476.96 M allocations: 7.107 GiB, 1.93% gc time)
Running: rombergs_method
  0.436636 seconds (360.32 k allocations: 20.316 MiB, 4.80% gc time)
Running: simpsons_rule
  0.000034 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.068578 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.059929 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030416 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.096186 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.096560 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.110995 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.101005 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.325784 seconds (379.00 k allocations: 19.793 MiB)
Running: legendre_quadrature
  0.066839 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000107 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000581 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000403 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000586 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.078016 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000042 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026616 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023091 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.068330 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.202432 seconds (240.26 k allocations: 13.486 MiB)
Running: chebyshev_quadrature with k=2
  0.245116 seconds (295.46 k allocations: 16.565 MiB)
Running: chebyshev_quadrature with k=3
  0.305732 seconds (275.42 k allocations: 14.982 MiB, 9.36% gc time)
Running: chebyshev_quadrature with k=4
  0.203861 seconds (275.45 k allocations: 14.899 MiB)
Running: jacobi_quadrature with α=β=1
  2.220342 seconds (465.77 k allocations: 164.176 MiB, 5.15% gc time)
Running: legendre_quadrature
  0.151823 seconds (193.01 k allocations: 11.127 MiB)
Running: lobatto_quadrature
  0.163039 seconds (204.22 k allocations: 11.816 MiB)
Running: radau_quadrature
  0.191037 seconds (204.21 k allocations: 11.814 MiB, 12.74% gc time)
Running: rectangle_rule_left
  1.084485 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027196 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.108906 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.180381 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.030130 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.039417 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.028323 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.058424 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.206596 seconds (247.36 k allocations: 13.620 MiB)
Running: chebyshev_quadrature with k=2
  0.242858 seconds (303.09 k allocations: 16.597 MiB, 8.70% gc time)
Running: chebyshev_quadrature with k=3
  0.197098 seconds (282.83 k allocations: 15.007 MiB)
Running: chebyshev_quadrature with k=4
  0.195408 seconds (282.86 k allocations: 15.006 MiB)
Running: hermite_quadrature with k=2
 15.526016 seconds (22.12 M allocations: 1.148 GiB, 9.97% gc time)
Running: jacobi_quadrature with α=β=1
  0.439878 seconds (475.80 k allocations: 50.438 MiB, 8.04% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.253357 seconds (288.36 k allocations: 15.898 MiB, 12.44% gc time)
Running: legendre_quadrature
  0.165302 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.244249 seconds (225.73 k allocations: 37.627 MiB, 11.87% gc time)
Running: radau_quadrature
  0.203197 seconds (222.32 k allocations: 30.282 MiB)
Running: rectangle_rule_left
  0.027643 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.027960 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.020938 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.113065 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.036430 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.072060 seconds (60.02 k allocations: 3.196 MiB, 37.28% gc time)
Running: trapezoidal_rule
  0.032754 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041463 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.198901 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.283542 seconds (297.81 k allocations: 16.315 MiB)
Running: chebyshev_quadrature with k=3
  0.216439 seconds (277.69 k allocations: 14.784 MiB)
Running: chebyshev_quadrature with k=4
  0.257719 seconds (277.72 k allocations: 14.771 MiB)
Running: hermite_quadrature with k=2
  0.183162 seconds (177.72 k allocations: 10.160 MiB)
Running: jacobi_quadrature with α=β=1
  8.111867 seconds (468.37 k allocations: 1.176 GiB, 13.33% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.228393 seconds (283.22 k allocations: 15.691 MiB)
Running: legendre_quadrature
  0.156965 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.254425 seconds (216.09 k allocations: 23.333 MiB, 6.49% gc time)
Running: radau_quadrature
  0.197622 seconds (215.24 k allocations: 21.264 MiB)
Running: rectangle_rule_left
  0.031573 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027153 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025045 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.153260 seconds (138.21 k allocations: 7.927 MiB)
Running: simpsons_rule
  0.047356 seconds (33.50 k allocations: 1.933 MiB, 35.74% gc time)
Running: simpsons38_rule
  0.035865 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.026683 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.038361 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.235288 seconds (240.82 k allocations: 13.578 MiB)
Running: chebyshev_quadrature with k=2
  0.215379 seconds (296.04 k allocations: 16.657 MiB)
Running: chebyshev_quadrature with k=3
  0.231432 seconds (276.02 k allocations: 14.999 MiB, 8.61% gc time)
Running: chebyshev_quadrature with k=4
  0.195725 seconds (276.05 k allocations: 14.817 MiB)
Running: jacobi_quadrature with α=β=1
  1.825698 seconds (466.41 k allocations: 195.251 MiB, 6.12% gc time)
Running: legendre_quadrature
  0.151551 seconds (193.57 k allocations: 11.135 MiB)
Running: lobatto_quadrature
  0.170042 seconds (204.78 k allocations: 11.843 MiB)
Running: radau_quadrature
  0.170459 seconds (204.78 k allocations: 11.843 MiB)
Running: rectangle_rule_left
  0.300787 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.029240 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.103318 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.181462 seconds (151.28 k allocations: 8.812 MiB, 12.08% gc time)
Running: simpsons_rule
  0.032967 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.037367 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.027951 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030608 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.194435 seconds (241.39 k allocations: 13.512 MiB)
Running: chebyshev_quadrature with k=2
  0.303967 seconds (296.65 k allocations: 16.567 MiB, 9.38% gc time)
Running: chebyshev_quadrature with k=3
  0.225793 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.210392 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.827658 seconds (467.08 k allocations: 149.923 MiB, 12.43% gc time)
Running: legendre_quadrature
  0.163955 seconds (194.15 k allocations: 11.154 MiB)
Running: lobatto_quadrature
  0.169751 seconds (205.36 k allocations: 11.857 MiB)
Running: radau_quadrature
  0.168541 seconds (205.35 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  1.133611 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.024147 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.182765 seconds (18.62 k allocations: 1.124 MiB, 1.65% gc time)
Running: rombergs_method
  0.127671 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.030751 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.034352 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.025555 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.169655 seconds (152.91 k allocations: 9.091 MiB)
Running: chebyshev_quadrature with k=1
  0.138247 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.150696 seconds (127.17 k allocations: 3.997 MiB)
Running: chebyshev_quadrature with k=3
  0.154326 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.163602 seconds (95.28 k allocations: 3.423 MiB)
Running: jacobi_quadrature with α=β=1
  1.966844 seconds (510.06 k allocations: 169.325 MiB, 10.12% gc time)
Running: legendre_quadrature
  0.104571 seconds (38.51 k allocations: 2.116 MiB)
Running: lobatto_quadrature
  0.000115 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000060 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.295472 seconds (590.00 M allocations: 8.792 GiB, 3.76% gc time)
Running: rectangle_rule_midpoint
  0.000109 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.232643 seconds (592.75 M allocations: 8.833 GiB, 3.56% gc time)
Running: rombergs_method
  0.134916 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000058 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.040197 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024439 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.483086 seconds (629.34 M allocations: 9.388 GiB, 5.22% gc time)
Running: chebyshev_quadrature with k=1
  0.558485 seconds (439.10 k allocations: 24.279 MiB, 6.06% gc time)
Running: chebyshev_quadrature with k=2
 13.337644 seconds (496.47 k allocations: 4.042 GiB, 3.95% gc time)
Running: chebyshev_quadrature with k=3
  6.061159 seconds (290.51 k allocations: 1.643 GiB, 5.40% gc time)
Running: chebyshev_quadrature with k=4
  7.886667 seconds (290.55 k allocations: 2.262 GiB, 2.61% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.691283 seconds (505.21 k allocations: 13.255 GiB, 3.01% gc time)
Running: legendre_quadrature.
  7.077697 seconds (232.78 k allocations: 1.976 GiB, 1.87% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.114729 seconds (8.24 M allocations: 13.384 GiB, 4.52% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.001673 seconds (7.24 M allocations: 13.369 GiB, 3.07% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.084851 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.222853 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.350975 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.211307 seconds (456.55 k allocations: 153.691 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.607955 seconds (600.04 M allocations: 8.943 GiB, 8.83% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.749340 seconds (600.05 M allocations: 8.944 GiB, 8.33% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.895083 seconds (600.04 M allocations: 8.943 GiB, 8.69% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063425 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.261371 seconds (257.98 k allocations: 14.081 MiB)
Running: chebyshev_quadrature with k=2
  0.216368 seconds (284.14 k allocations: 15.179 MiB)
Running: chebyshev_quadrature with k=3
  0.215410 seconds (260.63 k allocations: 13.461 MiB)
Running: chebyshev_quadrature with k=4
  0.251601 seconds (260.66 k allocations: 13.453 MiB)
Running: jacobi_quadrature with α=β=1
  0.395085 seconds (405.38 k allocations: 35.875 MiB)
Running: laguerre_quadrature with k=2
  0.226570 seconds (187.98 k allocations: 10.889 MiB)
Running: legendre_quadrature
  0.119193 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.036341 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.032905 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.061976 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.049049 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.048417 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.235901 seconds (170.74 k allocations: 9.719 MiB)
Running: simpsons_rule
  0.001835 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055931 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.219048 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002385 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.102174 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.104122 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.120303 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.111559 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  5.674447 seconds (402.17 k allocations: 906.503 MiB, 4.52% gc time)
Running: legendre_quadrature
  0.077522 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000187 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000123 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.529988 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000590 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.469446 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.063953 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000795 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000571 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.108511 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.099806 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.108904 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.176905 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.941902 seconds (388.45 k allocations: 253.763 MiB)
Running: legendre_quadrature
  0.082180 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000162 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000043 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.923431 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001215 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.468407 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081942 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001729 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
