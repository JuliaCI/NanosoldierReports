Julia Version 1.6.0-DEV.549
Commit 3909294e78 (2020-07-28 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_DnIrxn/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_DnIrxn/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.05981046769006898 0.09494070887199113; 0.05981046769006898 0.0 0.1661000501666947; -0.09494070887199113 -0.1661000501666947 0.0])
dAA = so3([0.0 -0.15889517107814974 -0.1577378613773234; 0.15889517107814974 0.0 0.03644960948561889; 0.1577378613773234 -0.03644960948561889 0.0])
dAA = so3([0.0 0.03106714269948621 -0.05897123059120705; -0.03106714269948621 0.0 -0.08678469525838378; 0.05897123059120705 0.08678469525838378 0.0])
dAA = Quaternion(0.9938147772999258, [0.06245777430287763, -0.07852494457957401, 0.047592519666485575])
dAA = SO3([0.9819938570824402 0.18161077746552842 0.05201528775964356; -0.1864582655681404 0.9760119089599757 0.1124013735219691; -0.030354239467874085 -0.12007613866489336 0.9923005296127059])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8475008278001728 -0.35879441025627745 -0.3911635438622469; 0.39377588087310733 0.9191513205771232 0.010070030980035111; 0.3559254170758675 -0.1625651286413558 0.9202660900137466]), [-1.661000501666947, 0.9494070887199113, 0.5981046769006898])
xj = SE3(SO3([0.896724821917325 -0.26327304511202 -0.3557694442680343; 0.14571413480421205 0.9346405110736679 -0.3243678559571106; 0.4179138483893559 0.2390280711075526 0.8764779498350208]), [0.8678469525838378, -0.5897123059120705, -0.3106714269948621])
Dx = SE3(SO3([0.966099901461849 0.2299909327796114 -0.1172823568767678; -0.25574473273436726 0.9146793278470863 -0.3129798058786373; 0.03529322986115463 0.3323641046328059 0.9424905781373101]), [1.2136757016602011, -2.174284650841877, -1.8410077439075612])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
