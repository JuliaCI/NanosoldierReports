Julia Version 1.6.0-DEV.548
Commit 9267bbf1fc (2020-07-27 16:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_DU0YlO/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_DU0YlO/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11369850621880076 0.02532966611552702; 0.11369850621880076 0.0 0.1310379229425402; -0.02532966611552702 -0.1310379229425402 0.0])
dAA = so3([0.0 0.059369001421895266 -0.08516806952098617; -0.059369001421895266 0.0 0.00355007610827171; 0.08516806952098617 -0.00355007610827171 0.0])
dAA = so3([0.0 0.07455641897075133 -0.09772257314636343; -0.07455641897075133 0.0 -0.1218748102426118; 0.09772257314636343 0.1218748102426118 0.0])
dAA = Quaternion(0.9958986834690563, [-0.07721678343001825, 0.022671486717563843, -0.04134470112768395])
dAA = SO3([0.9962633130618953 0.05415093668113846 -0.06728363176502311; -0.053799618178646716 0.9985270486191068 0.007023835123885901; 0.06756487349775561 -0.0033777555522921665 0.9977091653566489])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9665067569156388 0.14769933219829537 -0.20987995641459362; -0.14582022192331925 0.9890079824959153 0.02448823059335588; 0.2111898475652844 0.006936701488245928 0.9774204471248874]), [-1.3103792294254022, 0.25329666115527016, 1.1369850621880075])
xj = SE3(SO3([0.972655822048445 0.1890258352466796 0.13494400855376576; -0.22628754212400753 0.9021256967636687 0.36737334622715984; -0.0522934041226919 -0.38786397209325885 0.9202320028326012]), [1.218748102426118, -0.9772257314636342, -0.7455641897075133])
Dx = SE3(SO3([0.9620318877288214 -0.030766355449710014 0.27119748959985285; -0.08050231385888808 0.9174380083556609 0.3896496866260292; -0.2607949854891488 -0.3966874490032927 0.8801278562498603]), [2.226278414165863, -0.8565047331784625, -2.4009885817990364])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
