Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed Requires ───────────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed FiniteDiff ─────────────────── v2.4.1
  Installed Parsers ────────────────────── v1.0.7
  Installed DiffRules ──────────────────── v1.0.1
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Microeconometrics ──────────── v0.6.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Reexport ───────────────────── v0.2.0
  Installed Format ─────────────────────── v1.1.0
  Installed Compat ─────────────────────── v3.13.0
  Installed LineSearches ───────────────── v7.0.1
  Installed StatsModels ────────────────── v0.6.11
  Installed OrderedCollections ─────────── v1.3.0
  Installed JSON ───────────────────────── v0.21.0
  Installed Optim ──────────────────────── v0.22.0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Missings ───────────────────── v0.4.3
  Installed NaNMath ────────────────────── v0.3.3
  Installed ShiftedArrays ──────────────── v1.0.0
  Installed FillArrays ─────────────────── v0.8.12
  Installed StatsFuns ──────────────────── v0.9.5
  Installed InvertedIndices ────────────── v1.0.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed StaticArrays ───────────────── v0.12.4
  Installed DataStructures ─────────────── v0.17.19
  Installed PooledArrays ───────────────── v0.5.3
  Installed TableTraits ────────────────── v1.0.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Tables ─────────────────────── v1.0.4
  Installed Parameters ─────────────────── v0.12.1
  Installed CategoricalArrays ──────────── v0.8.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DataValueInterfaces ────────── v1.0.0
  Installed StatsBase ──────────────────── v0.33.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed DataAPI ────────────────────── v1.3.0
  Installed ArrayInterface ─────────────── v2.9.1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed DataFrames ─────────────────── v0.21.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8a72c5] + Microeconometrics v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.9.1
  [324d7699] + CategoricalArrays v0.8.1
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.4
  [864edb3b] + DataStructures v0.17.19
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [1a297f60] + FillArrays v0.8.12
  [6a86dc24] + FiniteDiff v2.4.1
  [1fa38f19] + Format v1.1.0
  [f6369f11] + ForwardDiff v0.10.12
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [5d8a72c5] + Microeconometrics v0.6.0
  [e1d29d7a] + Missings v0.4.3
  [d41bc354] + NLSolversBase v7.6.1
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.7
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [3eaba693] + StatsModels v0.6.11
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [3a884ed6] + UnPack v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Microeconometrics
Status `/tmp/jl_brwy4u/Project.toml`
  [336ed68f] CSV v0.7.3
  [a93c6f00] DataFrames v0.21.4
  [1fa38f19] Format v1.1.0
  [5d8a72c5] Microeconometrics v0.6.0
  [429524aa] Optim v0.22.0
  [276daf66] SpecialFunctions v0.10.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [3eaba693] StatsModels v0.6.11
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_brwy4u/Manifest.toml`
  [4fba245c] ArrayInterface v2.9.1
  [336ed68f] CSV v0.7.3
  [324d7699] CategoricalArrays v0.8.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.4
  [864edb3b] DataStructures v0.17.19
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [1a297f60] FillArrays v0.8.12
  [6a86dc24] FiniteDiff v2.4.1
  [1fa38f19] Format v1.1.0
  [f6369f11] ForwardDiff v0.10.12
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [5d8a72c5] Microeconometrics v0.6.0
  [e1d29d7a] Missings v0.4.3
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.7
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [91c51154] SentinelArrays v1.2.7
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [3eaba693] StatsModels v0.6.11
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [3a884ed6] UnPack v1.0.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `CSV.read(input; kw...)` is deprecated in favor of `DataFrame!(CSV.File(input; kw...))`
└ @ CSV ~/.julia/packages/CSV/W9RT2/src/CSV.jl:40
Test Summary:     | Pass  Total
OLS Homoscedastic |    9      9
Test Summary:       | Pass  Total
OLS Heteroscedastic |    4      4
┌ Warning: `CSV.read(input; kw...)` is deprecated in favor of `DataFrame!(CSV.File(input; kw...))`
└ @ CSV ~/.julia/packages/CSV/W9RT2/src/CSV.jl:40
ERROR: LoadError: TaskFailedException:
MethodError: no method matching tryparse(::Type{AbstractFloat}, ::String)
Closest candidates are:
  tryparse(!Matched::Type{T}, ::AbstractString) where T<:Dates.TimeType at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Dates/src/parse.jl:288
  tryparse(!Matched::Type{T}, ::AbstractString, !Matched::Dates.DateFormat) where T<:Dates.TimeType at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Dates/src/parse.jl:288
  tryparse(!Matched::Type{BigFloat}, ::AbstractString; base, precision, rounding) at mpfr.jl:246
  ...
Stacktrace:
  [1] tryparse_internal(::Type{AbstractFloat}, s::String, raise::Bool; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}})
    @ Base ./parse.jl:367
  [2] tryparse_internal(::Type{AbstractFloat}, s::String, raise::Bool)
    @ Base ./parse.jl:367
  [3] parse(::Type{AbstractFloat}, s::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}})
    @ Base ./parse.jl:379
  [4] parse(::Type{AbstractFloat}, s::String)
    @ Base ./parse.jl:379
  [5] xparse
    @ ~/.julia/packages/Parsers/AF18A/src/Parsers.jl:754 [inlined]
  [6] parsevalue!(#unused#::Type{AbstractFloat}, flag::UInt8, column::SentinelArrays.SentinelVector{AbstractFloat,UndefInitializer,Missing,Vector{AbstractFloat}}, columns::Vector{AbstractVector{T} where T}, buf::Vector{UInt8}, pos::Int64, len::Int64, options::Parsers.Options{false,false,true,false,Missing,UInt8,Nothing}, row::Int64, rowoffset::Int64, col::Int64, types::Vector{Type}, flags::Vector{UInt8})
    @ CSV ~/.julia/packages/CSV/W9RT2/src/file.jl:889
  [7] macro expansion
    @ ~/.julia/packages/CSV/W9RT2/src/file.jl:610 [inlined]
  [8] parsecustom!
    @ ~/.julia/packages/CSV/W9RT2/src/file.jl:600 [inlined]
  [9] parserow
    @ ~/.julia/packages/CSV/W9RT2/src/file.jl:659 [inlined]
 [10] parsefilechunk!(TR::Val{false}, ncols::Int64, typemap::Dict{Type,Type}, columns::Vector{AbstractVector{T} where T}, buf::Vector{UInt8}, pos::Int64, len::Int64, limit::Int64, positions::Vector{Int64}, pool::Float64, refs::Vector{CSV.RefPool}, rowsguess::Int64, rowoffset::Int64, types::Vector{Type}, flags::Vector{UInt8}, debug::Bool, options::Parsers.Options{false,false,true,false,Missing,UInt8,Nothing}, coloptions::Nothing, #unused#::Type{Tuple{Tuple{SentinelArrays.SentinelVector{AbstractFloat,UndefInitializer,Missing,Vector{AbstractFloat}},AbstractFloat},Tuple{SentinelArrays.SentinelVector{AbstractFloat,UndefInitializer,Missing,Vector{AbstractFloat}},AbstractFloat}}})
    @ CSV ~/.julia/packages/CSV/W9RT2/src/file.jl:548
 [11] macro expansion
    @ ~/.julia/packages/CSV/W9RT2/src/file.jl:436 [inlined]
 [12] (::CSV.var"#34#39"{Vector{Type},Vector{UInt8},Vector{UInt8},Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Nothing,Int64,Float64,Vector{CSV.RefPool},Int64,Dict{Type,Type},DataType,Int64,Bool,Vector{Int64},Int64,Vector{Vector{AbstractVector{T} where T}},Vector{Int64},Vector{ReentrantLock},Int64})()
    @ CSV ./threadingconstructs.jl:169

...and 1 more exception(s).

Stacktrace:
 [1] sync_end(c::Channel{Any})
   @ Base ./task.jl:316
 [2] macro expansion
   @ ./task.jl:335 [inlined]
 [3] multithreadparse(types::Vector{Type}, flags::Vector{UInt8}, buf::Vector{UInt8}, datapos::Int64, len::Int64, options::Parsers.Options{false,false,true,false,Missing,UInt8,Nothing}, coloptions::Nothing, origrowsguess::Int64, datarow::Int64, pool::Float64, refs::Vector{CSV.RefPool}, ncols::Int64, typemap::Dict{Type,Type}, categorical::Bool, customtypes::Type, limit::Int64, N::Int64, debug::Bool)
   @ CSV ~/.julia/packages/CSV/W9RT2/src/file.jl:425
 [4] CSV.File(h::CSV.Header{false,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Vector{UInt8}}; startingbyteposition::Nothing, endingbyteposition::Nothing, limit::Int64, threaded::Nothing, typemap::Dict{Type,Type}, tasks::Int64, debug::Bool)
   @ CSV ~/.julia/packages/CSV/W9RT2/src/file.jl:254
 [5] CSV.File(source::String; header::Int64, normalizenames::Bool, datarow::Int64, skipto::Nothing, footerskip::Int64, transpose::Bool, comment::Nothing, use_mmap::Nothing, ignoreemptylines::Bool, select::Nothing, drop::Nothing, missingstrings::Vector{String}, missingstring::String, delim::Nothing, ignorerepeated::Bool, quotechar::Char, openquotechar::Nothing, closequotechar::Nothing, escapechar::Char, dateformat::Nothing, dateformats::Nothing, decimal::UInt8, truestrings::Vector{String}, falsestrings::Vector{String}, type::Nothing, types::Dict{String,Union}, typemap::Dict{Type,Type}, categorical::Nothing, pool::Float64, lazystrings::Bool, strict::Bool, silencewarnings::Bool, debug::Bool, parsingdebug::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}})
   @ CSV ~/.julia/packages/CSV/W9RT2/src/file.jl:217
 [6] read(source::String; copycols::Bool, kwargs::Base.Iterators.Pairs{Symbol,Dict{String,Union},Tuple{Symbol},NamedTuple{(:types,),Tuple{Dict{String,Union}}}})
   @ CSV ~/.julia/packages/CSV/W9RT2/src/CSV.jl:41
 [7] top-level scope
   @ ~/.julia/packages/Microeconometrics/KIJdX/test/runtests.jl:61
 [8] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [9] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/Microeconometrics/KIJdX/test/runtests.jl:61
ERROR: Package Microeconometrics errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
