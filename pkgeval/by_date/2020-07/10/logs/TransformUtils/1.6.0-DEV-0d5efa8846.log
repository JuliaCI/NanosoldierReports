Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_2ZUWxD/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_2ZUWxD/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.003428483692315515 0.08227956201119704; 0.003428483692315515 0.0 -0.09029020895768569; -0.08227956201119704 0.09029020895768569 0.0])
dAA = so3([0.0 -0.10594357086093614 -0.20535004521894729; 0.10594357086093614 0.0 0.055388313696252835; 0.20535004521894729 -0.055388313696252835 0.0])
dAA = so3([0.0 -0.08153784211047137 -0.020014357177605604; 0.08153784211047137 0.0 0.027843065175538886; 0.020014357177605604 -0.027843065175538886 0.0])
dAA = Quaternion(0.9967760999681125, [-0.0061379147969837025, 0.0726632620911583, -0.033463157002534195])
dAA = SO3([0.9925477566768475 -0.013178694041158442 -0.12114154010547905; 0.01950458992715265 0.9984988348140686 0.051182495510876766; 0.12028516819430178 -0.05316388716334462 0.991314823562198])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.837997062407882 -0.21504357835385063 -0.501514887919124; 0.28406503181993037 0.9566358043929627 0.06445925418875974; 0.46590554954078633 -0.19647950825009844 0.8627443548032623]), [0.9029020895768569, 0.8227956201119704, 0.03428483692315515])
xj = SE3(SO3([0.9208101235305929 0.15861865095906824 0.35629880714296475; -0.17406426139335093 0.9846672708627044 0.011489064251738384; -0.3490133941687073 -0.07259813537356631 0.9343014296420186]), [-0.27843065175538884, -0.20014357177605602, 0.8153784211047136])
Dx = SE3(SO3([0.5595833313953942 0.37880762901960074 0.7371372161415954; -0.29595642860359983 0.9221220903633405 -0.2492000056824753; -0.7741293739373508 -0.07871232851651569 0.6281147042912412]), [-0.9166187854753068, -0.8780111200715388, 1.2004021403005642])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
