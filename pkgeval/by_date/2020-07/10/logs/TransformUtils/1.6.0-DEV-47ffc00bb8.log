Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_keNWSH/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_keNWSH/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.056926343851713204 -0.019677417646861813; 0.056926343851713204 0.0 0.027102047437670224; 0.019677417646861813 -0.027102047437670224 0.0])
dAA = so3([0.0 0.12190009179077468 0.049548727904390855; -0.12190009179077468 0.0 0.043688411794691476; -0.049548727904390855 -0.043688411794691476 0.0])
dAA = so3([0.0 -0.04108481001270013 0.010098022303253004; 0.04108481001270013 0.0 -0.08179020361113944; -0.010098022303253004 0.08179020361113944 0.0])
dAA = Quaternion(0.9992648089805451, [-0.02888873966940435, 0.006673668488890636, 0.024305234051306943])
dAA = SO3([0.9676322705100013 0.13147669168295123 -0.21541046541838776; -0.0915480410115184 0.9782998195497643 0.1858720507657153; 0.23517386175894123 -0.16013538838434646 0.9586709091927124])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9464311136926207 0.29198711040385217 0.13788282849054928; -0.3053816005468503 0.9481215834666337 0.08836029092396068; -0.10492961965998683 -0.1257338073977389 0.9864992572705156]), [-0.27102047437670224, -0.1967741764686181, 0.569263438517132])
xj = SE3(SO3([0.9920809035311158 -0.12243906374241915 0.028002794838459917; 0.117161869340074 0.9824758562018838 0.14496305858084893; -0.0452612110048382 -0.1405342223455021 0.9890407247065818]), [0.8179020361113943, 0.10098022303253003, 0.4108481001270013])
Dx = SE3(SO3([0.9079063968760906 -0.40116398642286244 -0.12154600161581627; 0.40644939777658584 0.9134258389223453 0.02126320380517728; 0.10249322689097701 -0.06870729791170087 0.9923580229207337]), [0.9562838904422714, 0.6201768736763054, 0.02017676745481789])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
