Julia Version 1.6.0-DEV.415
Commit 47ffc00bb8 (2020-07-09 14:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_C9SGWv/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_C9SGWv/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723359233868186
curgen: 20 fitness: 0.21723360426777097
curgen: 30 fitness: 0.21723360426777097
curgen: 40 fitness: 0.21723360426777097
curgen: 50 fitness: 0.21723360426777097
CoordinateCreature{Vector{Float64}}([0.2225249063232007], -0.21723360426777097) 0.2225249063232007 -0.21723360426777097
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577636526836
curgen: 100 fitness: 3.2579160544660195
curgen: 150 fitness: 3.2579160544660195
curgen: 200 fitness: 3.2581546861435995
curgen: 250 fitness: 3.2582159649107276
curgen: 300 fitness: 3.2583741959132
curgen: 350 fitness: 3.258377132790285
curgen: 400 fitness: 3.258391991487635
curgen: 450 fitness: 3.2583981427856474
curgen: 500 fitness: 3.2584134838008643
CoordinateCreature{Vector{Float64}}([-0.2226178600382286, 0.22235569365492816, 0.22252282492961084, 0.2223562043809381, -0.2231462266354644, -0.22173488950005937, 0.2227278911273803, -0.2225497827689427, 0.2227982868724693, 0.2224566000092437, -0.22234904284059154, -0.2219935151486597, 0.22236986467263337, -0.22303482538969543, 0.2224928758728083], -3.2584237013135824) [-0.2226178600382286, 0.22235569365492816, 0.22252282492961084, 0.2223562043809381, -0.2231462266354644, -0.22173488950005937, 0.2227278911273803, -0.2225497827689427, 0.2227982868724693, 0.2224566000092437, -0.22234904284059154, -0.2219935151486597, 0.22236986467263337, -0.22303482538969543, 0.2224928758728083] -3.2584237013135824
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001647178770241453
curgen: 100 fitness: -0.001647178770241453
curgen: 150 fitness: -0.0014890302114167753
curgen: 200 fitness: -0.001227092089038706
curgen: 250 fitness: -0.0011122858223870935
curgen: 300 fitness: -0.0005547947769741768
curgen: 350 fitness: -0.00044879949501819283
curgen: 400 fitness: -0.00044879949501819283
curgen: 450 fitness: -0.00044879949501819283
curgen: 500 fitness: -0.00038730947750309497
CoordinateCreature{Vector{Float64}}([0.00017043547096221042, 5.657498231593597e-5, -0.00017654403078328705, 0.00014943636850775656, -0.00014767610183726078, 3.6074230972923066e-5, -0.0009539763491539684, 0.00033662520559574443, 1.7013124418402848e-5, -0.00023619719996309193, 0.0005539139769678483, 0.00017919323033979977, 0.0001939122484821054, -0.00030680802519599784, 0.0005415333557094802], 0.00038730947750309497) [0.00017043547096221042, 5.657498231593597e-5, -0.00017654403078328705, 0.00014943636850775656, -0.00014767610183726078, 3.6074230972923066e-5, -0.0009539763491539684, 0.00033662520559574443, 1.7013124418402848e-5, -0.00023619719996309193, 0.0005539139769678483, 0.00017919323033979977, 0.0001939122484821054, -0.00030680802519599784, 0.0005415333557094802] 0.00038730947750309497
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
