Julia Version 1.6.0-DEV.420
Commit 0d5efa8846 (2020-07-10 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_7IPJiP/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7IPJiP/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721716187614054
curgen: 20 fitness: 0.21723325622110715
curgen: 30 fitness: 0.21723325622110715
curgen: 40 fitness: 0.21723325622110715
curgen: 50 fitness: 0.21723325622110715
CoordinateCreature{Vector{Float64}}([-0.22263984053220506], -0.21723325622110715) -0.22263984053220506 -0.21723325622110715
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579586631654434
curgen: 100 fitness: 3.2583328995779426
curgen: 150 fitness: 3.2583480711934873
curgen: 200 fitness: 3.2583637996472277
curgen: 250 fitness: 3.258371422019063
curgen: 300 fitness: 3.2583728748866734
curgen: 350 fitness: 3.258394255847929
curgen: 400 fitness: 3.2583961267854846
curgen: 450 fitness: 3.258396355965772
curgen: 500 fitness: 3.258402056588698
CoordinateCreature{Vector{Float64}}([0.22259068191863707, 0.22148703174926965, 0.222495255884585, -0.22193153286060055, -0.2225675927742421, 0.22224231158948649, 0.22223175875219137, 0.2228579495621549, -0.22263396957242776, -0.2232219867449667, 0.222533743286266, 0.22256312400849385, 0.22246233064753576, -0.22238507305484315, 0.22245723398015826], -3.258402056588698) [0.22259068191863707, 0.22148703174926965, 0.222495255884585, -0.22193153286060055, -0.2225675927742421, 0.22224231158948649, 0.22223175875219137, 0.2228579495621549, -0.22263396957242776, -0.2232219867449667, 0.222533743286266, 0.22256312400849385, 0.22246233064753576, -0.22238507305484315, 0.22245723398015826] -3.258402056588698
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00503980162520179
curgen: 100 fitness: -0.0025765096786756203
curgen: 150 fitness: -0.0024503272019558153
curgen: 200 fitness: -0.0024503272019558153
curgen: 250 fitness: -0.0010262553333575397
curgen: 300 fitness: -0.0008917474308702822
curgen: 350 fitness: -0.0008898072037766269
curgen: 400 fitness: -0.0008898072037766269
curgen: 450 fitness: -0.0007044455275604378
curgen: 500 fitness: -0.0007044455275604378
CoordinateCreature{Vector{Float64}}([6.393239963229877e-5, 0.0007958713775845952, -0.0002474718679325165, -0.0004251583911928187, 0.0007341099741030678, 0.0005979882854947834, 0.0006066596126848182, 0.000274804661068161, 0.00011715632604879526, -0.00011689443877145513, -0.0003327901052170932, -0.0006862943504169993, 0.0001148267865447132, 0.0008316089352631755, -0.0001316080054222273], 0.0007044455275604378) [6.393239963229877e-5, 0.0007958713775845952, -0.0002474718679325165, -0.0004251583911928187, 0.0007341099741030678, 0.0005979882854947834, 0.0006066596126848182, 0.000274804661068161, 0.00011715632604879526, -0.00011689443877145513, -0.0003327901052170932, -0.0006862943504169993, 0.0001148267865447132, 0.0008316089352631755, -0.0001316080054222273] 0.0007044455275604378
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
