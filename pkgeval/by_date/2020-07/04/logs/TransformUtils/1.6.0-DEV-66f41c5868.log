Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Q5pPsg/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Q5pPsg/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11020130373799397 -0.11602503067915132; 0.11020130373799397 0.0 -0.04090663665630495; 0.11602503067915132 0.04090663665630495 0.0])
dAA = so3([0.0 -0.1854310785068605 -0.2460686473734334; 0.1854310785068605 0.0 -0.1424051811321899; 0.2460686473734334 0.1424051811321899 0.0])
dAA = so3([0.0 -0.19433884690468783 -0.11796333597416651; 0.19433884690468783 0.0 0.12032991359178156; 0.11796333597416651 -0.12032991359178156 0.0])
dAA = Quaternion(0.9962013260106629, [0.06433179928492394, 0.056558641330756595, -0.015667091184398425])
dAA = SO3([0.9877071780806268 -0.1381346846702961 0.07316651733575226; 0.14132305153104407 0.9891415642150578 -0.04033312594062845; -0.06680063977207808 0.05017743350577619 0.9965038382729967])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.7207102727090997 -0.5130000779188358 -0.46626990345382946; 0.3068216959926995 0.839183044940746 -0.44903481374180926; 0.6216406917824303 0.180562280499683 0.762207395123542]), [0.40906636656304945, -1.160250306791513, 1.1020130373799397])
xj = SE3(SO3([0.9575593328764246 0.10350015555824359 0.269012716838212; -0.013257735286480173 0.9481339579367712 -0.3175944430594253; -0.2879311662122221 0.3005490236327051 0.9092666979039195]), [-1.2032991359178156, -1.179633359741665, 1.9433884690468781])
Dx = SE3(SO3([0.5070653577570037 0.5523351973058157 0.6616725419570526; -0.5543431870424533 0.7968301710761847 -0.2403441479260813; -0.6599911771701021 -0.24492347433401307 0.7102282293585482]), [-0.6449623167892341, 0.9627983657095581, 1.4018037488370596])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
