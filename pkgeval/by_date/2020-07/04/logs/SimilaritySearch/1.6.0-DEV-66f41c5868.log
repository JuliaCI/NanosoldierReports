Julia Version 1.6.0-DEV.360
Commit 66f41c5868 (2020-07-03 11:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.6
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.6
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_M03on4/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_M03on4/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.6
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(40, 0.014739394f0), Item(26, 0.024187088f0), Item(20, 0.042087317f0), Item(2, 0.04717791f0)])
Vsorted = Item[Item(40, 0.014739394f0), Item(26, 0.024187088f0), Item(20, 0.042087317f0), Item(2, 0.04717791f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.002806218465169271, 0.00275727113087972, 301.0, 50.68000487424433))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.002294476826985677, 0.0026306708653767905, 301.0, 74.46045053005219))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0023421446482340493, 0.002566099166870117, 301.0, 41.18274509906769))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.002455600102742513, 0.0032941341400146485, 301.0, 9.688178083386447))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.002264531453450521, 0.003130499521891276, 301.0, 45.84063688106835))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.61144765218099e-5, 8.656978607177735e-5, 301.0, 187.7138413824141))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.116925557454427e-5, 0.0059364954630533855, 300.0, 26.296892502345145)
p = PerformanceResult(1.0, 1.0, 1.0, 3.195603688557943e-5, 1.5703837076822915e-5, 300.0, 26.296892502345145)
p = PerformanceResult(1.0, 1.0, 1.0, 0.00242769718170166, 0.0022028684616088867, 300.0, 1.362299791400801)
p = PerformanceResult(1.0, 1.0, 1.0, 2.87983152601454e-5, 1.1666615804036458e-5, 300.0, 1.362299791400801)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.116925557454427e-5, 0.0059364954630533855, 300.0, 26.296892502345145), PerformanceResult(1.0, 1.0, 1.0, 3.195603688557943e-5, 1.5703837076822915e-5, 300.0, 26.296892502345145), PerformanceResult(1.0, 1.0, 1.0, 0.00242769718170166, 0.0022028684616088867, 300.0, 1.362299791400801), PerformanceResult(1.0, 1.0, 1.0, 2.87983152601454e-5, 1.1666615804036458e-5, 300.0, 1.362299791400801))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 128.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.004957922299702962, 0.00232086976369222, 347.6, 28699.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.004516379038492838, 0.0018959283828735352, 304.1666666666667, 6963.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5314420064290365e-5, 6.993611653645833e-6, 94.43333333333334, 50.80162009038031))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5226999918619792e-5, 7.335344950358073e-6, 86.63333333333334, 74.62425816059113))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3293495178222657e-5, 9.663899739583333e-6, 87.9, 41.284899950027466))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.7485033671061196e-5, 0.0001073598861694336, 94.56666666666666, 45.95263126678765))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8233333333333334, 0.8233333333333334, 0.8233333333333334, 3.118515014648438e-5, 7.83999760945638e-5, 71.03333333333333, 196.81381503120065))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-04T18:06:19.490
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8950000000000001, 0.8950000000000001, 0.8950000000000001, 1.5540122985839845e-5, 1.4898777008056641e-5, 153.14, 51.159450767794624))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5053749084472656e-5, 1.09100341796875e-5, 157.36, 0.0))
*** advance 1 from 1000; 2020-07-04T18:06:19.882
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8927777777777774, 0.8919999999999998, 0.8923684210526314, 1.4023780822753906e-5, 1.4798641204833984e-5, 152.35, 75.6384053286165))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.414775848388672e-5, 1.0788440704345703e-5, 156.09, 0.0))
*** advance 1 from 1000; 2020-07-04T18:06:20.219
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8708095238095236, 0.8679999999999997, 0.8691981424148604, 1.8274784088134767e-5, 2.1429061889648436e-5, 154.88, 41.69495543092489))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0001101231575012207, 1.8019676208496093e-5, 159.22, 0.0))
*** advance 1 from 1000; 2020-07-04T18:06:20.566
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9889999999999999, 0.9889999999999999, 0.9889999999999999, 6.868839263916016e-5, 0.00032217025756835937, 168.81, 43.91540985321626))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.245063781738281e-5, 0.0004142189025878906, 174.47, 0.0))
*** advance 1 from 1000; 2020-07-04T18:06:20.918
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9560000000000001, 0.9560000000000001, 0.9560000000000001, 5.986928939819336e-5, 0.000258481502532959, 167.78, 189.22579897288233))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 6.142377853393555e-5, 0.00030102014541625975, 173.49, 0.0))
*** advance 1 from 1000; 2020-07-04T18:06:21.532
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8950000000000001, 0.8950000000000001, 0.8950000000000001, 0.00043564796447753906, 3.68809700012207e-5, 153.14, 51.17020022496581))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0072460174560546e-5, 5.022048950195312e-5, 157.36, 0.0160901693161577))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:22.733
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.762, 0.762, 0.762, 0.0008973526954650879, 5.8581829071044924e-5, 197.14, 187.7000021636486))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:23.351
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.765, 0.765, 0.765, 0.0008615612983703613, 6.650209426879883e-5, 204.02, 108.79127206653357))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:23.835
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.674, 0.674, 0.674, 0.000854039192199707, 5.788087844848633e-5, 252.97, 5.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:24.329
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9420000000000003, 0.9420000000000003, 0.9420000000000003, 0.0008605122566223145, 1.0340213775634765e-5, 223.98, 614.8000200837851))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:24.891
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5869999999999999, 0.5869999999999999, 0.5869999999999999, 0.0009362959861755371, 0.0003202915191650391, 252.38, 2326.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:25.454
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38500000000000006, 0.38500000000000006, NaN, 0.0010375142097473144, 0.00019676923751831053, 247.53, 3658.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-04T18:06:25.994
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6029999999999999, 0.6029999999999999, 0.6029999999999999, 0.0009912633895874023, 1.7390251159667968e-5, 242.53, 2345.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.063711911357341, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560444,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4609375,"distances_sum":591.6108295619488}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.063711911357341,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560444,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4609375,"distances_sum":591.6108295619488}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.063711911357341,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560444,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4609375,"distances_sum":591.6108295619488}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.063711911357341,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560444,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4609375,"distances_sum":591.6108295619488}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7636743215031316, conf: {"restarts":12}, perf: {"precision":0.9166666666666656,"recall":0.9166666666666656,"f1":0.9166666666666656,"seconds":1.5847384929656982e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":56.1328125,"distances_sum":284.84480979293585}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8967013888888877, conf: {"restarts":11}, perf: {"precision":0.8967013888888877,"recall":0.8967013888888877,"f1":0.8967013888888877,"seconds":1.5573576092720032e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":54.3515625,"distances_sum":286.42440228909254}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999988, conf: {"restarts":9}, perf: {"precision":0.8984374999999988,"recall":0.8984374999999988,"f1":0.8984374999999988,"seconds":1.4999881386756897e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":51.96875,"distances_sum":285.98937317728996}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0009474182851728, conf: {"restarts":8}, perf: {"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.3930723071098328e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":49.4765625,"distances_sum":286.25101651251316}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0009474182851728,"state":{"restarts":8},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.3930723071098328e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":49.4765625,"distances_sum":286.25101651251316}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0009474182851728,"state":{"restarts":8},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.3930723071098328e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":49.4765625,"distances_sum":286.25101651251316}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.0009474182851728,"state":{"restarts":8},"perf":{"precision":0.9010416666666659,"recall":0.9010416666666659,"f1":0.9010416666666659,"seconds":1.3930723071098328e-5,"exhaustive_search_seconds":4.539266228675842e-6,"evaluations":49.4765625,"distances_sum":286.25101651251316}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8567708333333323, conf: {"restarts":16}, perf: {"precision":0.8567708333333323,"recall":0.8567708333333323,"f1":0.8567708333333323,"seconds":3.668852150440216e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":164.625,"distances_sum":128.7060106601566}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666656, conf: {"restarts":12}, perf: {"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":3.15345823764801e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":141.125,"distances_sum":128.7649429347366}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555544, conf: {"restarts":2}, perf: {"precision":0.8446180555555544,"recall":0.8446180555555544,"f1":0.8446180555555544,"seconds":1.8909573554992676e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":74.421875,"distances_sum":128.41378422640264}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222212, conf: {"restarts":14}, perf: {"precision":0.8472222222222212,"recall":0.8472222222222212,"f1":0.8472222222222212,"seconds":3.425218164920807e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":154.5859375,"distances_sum":129.21063726954162}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":13}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":3.920309245586395e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":151.65625,"distances_sum":127.89896274544299}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999989,"state":{"restarts":13},"perf":{"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":3.920309245586395e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":151.65625,"distances_sum":127.89896274544299}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111098, conf: {"restarts":20}, perf: {"precision":0.8611111111111098,"recall":0.8611111111111098,"f1":0.8611111111111098,"seconds":4.657916724681854e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":188.515625,"distances_sum":127.74224549345672}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333321, conf: {"restarts":19}, perf: {"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":4.6350061893463135e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":186.7890625,"distances_sum":127.5742100533098}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111096, conf: {"restarts":21}, perf: {"precision":0.8611111111111096,"recall":0.8611111111111096,"f1":0.8611111111111096,"seconds":5.6471675634384155e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":195.7421875,"distances_sum":127.83840545080602}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8645833333333321,"state":{"restarts":19},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":4.6350061893463135e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":186.7890625,"distances_sum":127.5742100533098}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8645833333333321,"state":{"restarts":19},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":4.6350061893463135e-5,"exhaustive_search_seconds":1.6765668988227844e-5,"evaluations":186.7890625,"distances_sum":127.5742100533098}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8272569444444436, conf: {"restarts":10}, perf: {"precision":0.8272569444444436,"recall":0.8272569444444436,"f1":0.8272569444444436,"seconds":6.043724715709686e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":215.359375,"distances_sum":57.42616536049172}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8333333333333325, conf: {"restarts":12}, perf: {"precision":0.8333333333333325,"recall":0.8333333333333325,"f1":0.8333333333333325,"seconds":6.512738764286041e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":228.0703125,"distances_sum":56.97322737937793}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8272569444444434, conf: {"restarts":26}, perf: {"precision":0.8272569444444434,"recall":0.8272569444444434,"f1":0.8272569444444434,"seconds":8.608587086200714e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":351.3515625,"distances_sum":57.32798945112154}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8307291666666659, conf: {"restarts":21}, perf: {"precision":0.8307291666666659,"recall":0.8307291666666659,"f1":0.8307291666666659,"seconds":7.200241088867188e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":299.3671875,"distances_sum":57.14824827155098}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.828124999999999, conf: {"restarts":17}, perf: {"precision":0.828124999999999,"recall":0.828124999999999,"f1":0.828124999999999,"seconds":7.083266973495483e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":272.984375,"distances_sum":57.090223025064915}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8333333333333325,"state":{"restarts":12},"perf":{"precision":0.8333333333333325,"recall":0.8333333333333325,"f1":0.8333333333333325,"seconds":6.512738764286041e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":228.0703125,"distances_sum":56.97322737937793}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8333333333333325,"state":{"restarts":12},"perf":{"precision":0.8333333333333325,"recall":0.8333333333333325,"f1":0.8333333333333325,"seconds":6.512738764286041e-5,"exhaustive_search_seconds":0.00021996721625328064,"evaluations":228.0703125,"distances_sum":56.97322737937793}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(12), SatNeighborhood(32), 2020-07-04T18:06:30.112
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3761, 0.029726703f0), Item(7737, 0.03683934f0), Item(1480, 0.041172255f0), Item(1845, 0.042805854f0), Item(9, 0.044667426f0), Item(1825, 0.05424547f0), Item(3206, 0.065626144f0), Item(7529, 0.06594554f0), Item(6639, 0.0674137f0), Item(1896, 0.0715811f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0588235294117645,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9661458333333341,"seconds":0.002116067335009575,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.5,"distances_sum":587.0811617523432}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0588235294117645,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9661458333333341,"seconds":0.002116067335009575,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.5,"distances_sum":587.0811617523432}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.174348697394789, conf: {"bsize":2}, perf: {"precision":0.9418402777777771,"recall":0.9418402777777771,"f1":0.9418402777777771,"seconds":8.599832653999329e-6,"exhaustive_search_seconds":4.064291715621948e-6,"evaluations":31.1875,"distances_sum":282.88941325992346}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.174348697394789,"state":{"bsize":2},"perf":{"precision":0.9418402777777771,"recall":0.9418402777777771,"f1":0.9418402777777771,"seconds":8.599832653999329e-6,"exhaustive_search_seconds":4.064291715621948e-6,"evaluations":31.1875,"distances_sum":282.88941325992346}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.174348697394789,"state":{"bsize":2},"perf":{"precision":0.9418402777777771,"recall":0.9418402777777771,"f1":0.9418402777777771,"seconds":8.599832653999329e-6,"exhaustive_search_seconds":4.064291715621948e-6,"evaluations":31.1875,"distances_sum":282.88941325992346}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.174348697394789,"state":{"bsize":2},"perf":{"precision":0.9418402777777771,"recall":0.9418402777777771,"f1":0.9418402777777771,"seconds":8.599832653999329e-6,"exhaustive_search_seconds":4.064291715621948e-6,"evaluations":31.1875,"distances_sum":282.88941325992346}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 16.685966633954855, conf: {"bsize":4}, perf: {"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":1.9108876585960388e-5,"exhaustive_search_seconds":1.7179176211357117e-5,"evaluations":63.6875,"distances_sum":122.7465715482831}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.685966633954855,"state":{"bsize":4},"perf":{"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":1.9108876585960388e-5,"exhaustive_search_seconds":1.7179176211357117e-5,"evaluations":63.6875,"distances_sum":122.7465715482831}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.685966633954855,"state":{"bsize":4},"perf":{"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":1.9108876585960388e-5,"exhaustive_search_seconds":1.7179176211357117e-5,"evaluations":63.6875,"distances_sum":122.7465715482831}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":16.685966633954855,"state":{"bsize":4},"perf":{"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":1.9108876585960388e-5,"exhaustive_search_seconds":1.7179176211357117e-5,"evaluations":63.6875,"distances_sum":122.7465715482831}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.33809375970196,"state":{"bsize":4},"perf":{"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.4183263778686523e-5,"exhaustive_search_seconds":0.00021931342780590057,"evaluations":100.65625,"distances_sum":53.30625490099192}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.33809375970196,"state":{"bsize":4},"perf":{"precision":0.9887152777777775,"recall":0.9887152777777775,"f1":0.9887152777777775,"seconds":3.4183263778686523e-5,"exhaustive_search_seconds":0.00021931342780590057,"evaluations":100.65625,"distances_sum":53.30625490099192}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(4), SatNeighborhood(32), 2020-07-04T18:06:32.380
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4357, 0.019903615f0), Item(8488, 0.026347391f0), Item(7762, 0.02938432f0), Item(9021, 0.032706834f0), Item(5640, 0.03762335f0), Item(8177, 0.04688114f0), Item(1162, 0.049337875f0), Item(4057, 0.05340434f0), Item(4453, 0.05347899f0), Item(3467, 0.05783053f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
