Julia Version 1.6.0-DEV.558
Commit 710cf2813a (2020-07-30 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.29
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.20
  Installed UnPack ────────────── v1.0.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed VectorizedRNG ─────── v0.1.10
  Installed PaddedMatrices ────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_H4lxH3/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_H4lxH3/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [1.341149413747189e-13, 2.078337502098293e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.676170479138818e-12, 7.819744851644828e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-2.527644760164094e-11, -5.010325487830869e-11, 3.794742298168785e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.653389199115736e-13, -1.467936883159382e-12, -1.062538945717506e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [9.71374092273436e-11, -8.154399377957589e-11, 2.0499890673875143e-10, -1.8028789572355208e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.490763234026417e-11, 2.493094619637759e-11, -7.137401780710206e-11, 5.1210813367674746e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [6.582068223792703e-12, -9.004685885827257e-12, 1.2949641359227826e-11, -1.6934675883817363e-11, -7.294831405602054e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.806865933597692e-11, -1.5078494008946564e-11, 7.4495964952348e-11, -3.8747227648627813e-11, 2.602718041089247e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [3.1599611816091056e-11, -3.227718092801979e-11, 4.0465408801537706e-11, 6.415823428085332e-11, -6.52216058938393e-11, 7.328848639076568e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.294642833168609e-11, 1.864641774318443e-11, 3.6205705100655905e-11, -1.825802842247981e-10, 5.027311900107634e-11, 7.089950848637727e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [9.5714547398984e-12, -4.958122801212994e-11, -4.5930814707162426e-11, 1.0881517908956084e-11, -1.0475698086764851e-10, -9.452827409717202e-11, -2.859656955678247e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.401452287552729e-10, 1.2902878765430614e-10, -1.0887291068684135e-11, -2.7970781246722254e-10, 2.456510550530311e-10, -1.402888916146594e-11, 4.336286885120444e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-6.210110203852537e-11, -1.6915924216931444e-10, 8.382028404696484e-11, -2.6856517010287462e-11, -1.3057710468444839e-10, -3.47258333199818e-10, 1.5706391742753567e-10, -4.912537043821885e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.954188170813723e-10, 1.7955636977262657e-10, -1.7642753924462795e-10, -3.3192459891751014e-10, 9.790499522210894e-10, 3.383202606954683e-10, -3.380098423377831e-10, -6.814810937783022e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0340951145669806e-11, 4.6907366879622714e-11, -2.8190783041281975e-12, 2.2608581673466688e-11, -3.918654289947199e-11, 9.478462459355796e-11, -6.714961919840334e-12, 3.8305136840222076e-11, -8.479994484389408e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5723867480564877e-12, 3.0513369608797802e-12, -9.244827126053679e-13, 1.9022561303927432e-12, -5.895173238457119e-12, 5.538014491435206e-12, -1.2482237465860635e-12, 3.4847680296934413e-12, -1.5853984791647235e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [3.5671687825811205e-11, -2.149080913227408e-11, -2.8968050180822047e-11, 3.1094238295281684e-11, 3.684275107218582e-11, 7.604694651774935e-11, -3.915223700801107e-11, -6.426470466891487e-11, 6.583000811133388e-11, 7.64404095576765e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3781864538486843e-11, -2.9302893445048994e-11, 4.439337786266151e-11, -1.5514256546111937e-11, -2.49993359346945e-11, -2.7448154860110208e-11, -5.4390048020991344e-11, 9.169154324695228e-11, -2.694122702706636e-11, -4.952194210261496e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [5.775846467770407e-11, 1.4408141346677894e-10, 3.0309088572266774e-12, 3.8837821847437226e-11, 9.02502517163839e-11, 1.150277650907583e-10, 3.0467517397880783e-10, 8.599787548746463e-12, 8.506551019138442e-11, 1.764643986490455e-10, -4.577560552831983e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.050338173859473e-12, -5.438138828139927e-11, -2.0544677070688522e-11, -5.243427914081167e-11, 6.863731805140105e-11, -1.516708980631165e-11, -1.1064593685716773e-10, -4.1794678828921406e-11, -1.0599410238398832e-10, 1.3642709184580326e-10, -1.3224976669334865e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-5.770783850778116e-11, 5.37110356191306e-11, 7.853717676198357e-13, -1.0438483410979416e-10, 7.01740887620872e-11, 2.3349988609311367e-11, -1.2720935416155044e-10, 1.0845613296339707e-10, -7.253531109085998e-12, -2.139558530345198e-10, 1.4191070540903183e-10, 4.391687014049239e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.505751741301083e-11, 1.042854691490902e-11, 7.734057838604258e-11, 1.326583287664107e-11, -2.135669419089936e-11, -1.2551071293387395e-10, -1.9292112352076174e-10, 1.919064906985568e-11, 1.5385004381585077e-10, 2.5305979534095968e-11, -4.398026387519849e-11, -2.529223497305111e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [8.012124297351875e-11, 1.403182015025095e-10, -6.32549568280183e-11, -1.1767486984837205e-10, -4.470313008653193e-11, 8.450817823302259e-11, 1.4360068689711625e-10, 2.8753444070162004e-10, -1.2270118254775753e-10, -2.415906363850695e-10, -9.743472695333821e-11, 1.7906276461587822e-10, 3.234079670733081e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.899758625029563e-11, 1.1850920245137786e-10, -8.884126767583211e-11, -1.0557221763463076e-11, -1.08702158385654e-10, -5.089262344881718e-13, -1.6242940326094413e-10, 2.345077465548684e-10, -1.776991886970336e-10, -2.396927101244728e-11, -2.1252077875288933e-10, -5.774269951075439e-13, -2.8754776337791554e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [6.139622144019086e-11, -1.7515877637208632e-11, 8.876188672957142e-11, -1.1473488825686218e-10, -2.4283353106113736e-11, -1.074140776324839e-10, -6.187050871631072e-11, 1.2304846030986027e-10, -4.493760918933276e-11, 1.7612600267113976e-10, -2.358032658023035e-10, -6.036027233591312e-11, -2.0525325883369305e-10, -1.230516799566317e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.5948356230951504e-11, 6.942602048809476e-11, -4.0898284758839054e-11, -3.1350311235911477e-10, -2.998190584690974e-10, 1.2458567510975627e-10, 6.383560346989725e-12, 1.0393530480712343e-10, 1.5619949778056252e-10, -7.794032086394509e-11, -6.349489822810028e-10, -6.004320374231042e-10, 2.688020916963296e-10, 1.3071987936541518e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [9.677592061052565e-12, 7.734191065367213e-11, -3.417410798789433e-11, 9.835554592996232e-11, 1.012765427077511e-10, 6.337974589598616e-11, -9.054001992581107e-11, 1.1066036975648785e-11, 1.5332446423599322e-10, -6.007372377325737e-11, 1.913103009343331e-10, 2.0060664240872939e-10, 1.1042433634145254e-10, -1.8301771209650042e-10, 4.303268852368092e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.293121827624873e-11, -4.553191157441461e-11, 2.58908450234685e-11, -1.9317336619195657e-10, 1.1532819144122186e-10, -8.894684988547397e-11, 1.2656964365476142e-10, 1.903381896539713e-10, -1.0218925705629545e-10, 5.5677462640346675e-11, -4.0287373437308815e-10, 2.4473267856706116e-10, -1.823712292292612e-10, 2.502460461073497e-10, 9.378720022823472e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [6.220579606974752e-11, -6.823019926827101e-11, -4.1027625741207885e-11, -2.3186563780086544e-11, -1.816546912891681e-11, -2.518418806829459e-11, -6.447509193208134e-12, 3.518474400721061e-11, 1.222830725566837e-10, -1.410287442382696e-10, -8.308043142335464e-11, -5.040523554100673e-11, -3.7490899273961986e-11, -5.211397979820731e-11, -1.363564816614371e-11, 6.889822046218796e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.1733283495659634e-12, 6.194444956975076e-11, -1.7184587086660486e-11, 4.428790667532212e-11, -2.1434409802623122e-11, -1.2971290708208016e-11, 1.893152301590817e-12, 4.92925700257274e-11, 1.1445955294675514e-11, 1.2641576674354837e-10, -3.404621029545751e-11, 8.667044859578255e-11, -4.315370283336506e-11, -2.4738322501605126e-11, 4.2534864519439e-12, 9.974043813087974e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [9.589173899371417e-11, -3.521571922959765e-11, 1.188360521098275e-11, 8.428036046836951e-11, 5.929168267471141e-11, 5.44517764211605e-11, 7.501554932787258e-12, 1.442912456184331e-11, 1.8779466870455508e-10, -7.21913639978311e-11, 1.9301671372318197e-11, 1.7291768017457798e-10, 1.2684564509868324e-10, 1.0698752994642291e-10, 1.4872991727088447e-11, 2.0736301564738824e-11, -5.235367694922388e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2997380949286708e-11, 4.640798856314632e-11, -6.268885410776193e-11, -2.3688828676426965e-10, 1.9566104292323416e-10, -1.2540402050120747e-10, -1.5524270757794056e-10, 6.878209113381217e-11, -3.235400836132385e-11, 9.554756985608037e-11, -1.211012401469702e-10, -4.890299276638643e-10, 3.8289527104495846e-10, -2.665224707598668e-10, -3.098353795749631e-10, 1.381919023657474e-10, 2.741962212837734e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6796730673007687e-10, 2.2154722500999924e-11, 1.3954082334066698e-10, -2.0529800082158545e-11, 2.5119462065958942e-11, -7.450084993365635e-11, 2.9108271348832204e-11, 7.339262531047552e-11, -7.392186862631434e-11, -3.461533282234086e-10, 4.281464072164454e-11, 2.7399615909473596e-10, -4.1237679937466964e-11, 5.1607607076675777e-11, -1.4863099639939037e-10, 5.960965054896405e-11, 1.4579248919233123e-10, -1.433395624417244e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0108924808349684e-10, 2.463784731787655e-11, -1.042730346512144e-10, 2.2871926574907775e-11, 6.38555874843405e-12, 3.214362109815738e-11, 9.051204230559051e-12, 4.941580478146079e-11, -1.0247247494987732e-11, -2.1071733247168822e-10, 4.922062757373169e-11, -1.9140899976122228e-10, 4.2161829583164945e-11, 1.0121903315507552e-11, 6.272693475750657e-11, 1.436739616167415e-11, 9.990275273707994e-11, -1.846456321175083e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1198426064804607e-9, 2.418820255201126e-9, 2.8256263995274367e-10, -2.733588910786011e-10, 1.6926857693277952e-9, 8.455380839933468e-10, -1.038197638969507e-9, -2.436686408202604e-10, -7.529821210994214e-10, -6.249785911016659e-9, 4.858472291147109e-9, 5.790976587149999e-10, -5.42649036816556e-10, 3.390028702199288e-9, 1.6914714073834602e-9, -2.0813393231122745e-9, -5.00370300748898e-10, -1.4871701647933833e-9, 2.8821389719269064e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6240797595656886e-10, -1.0140821515847165e-10, 2.319122671678997e-11, 7.69939667577546e-12, 2.0067658645928077e-10, -5.184264129098892e-11, -1.9405510531811387e-10, 4.9125148393613927e-11, -8.403477913532242e-11, -3.2260871751788045e-10, -2.0704571390695037e-10, 4.855782442803047e-11, 1.3701928480713832e-11, 4.130851216643805e-10, -1.0175682518820395e-10, -3.733613418432924e-10, 1.1035061753261743e-10, -1.7322676626463362e-10, -5.522138302183066e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [2.2509993868879974e-11, -2.6452395829323905e-11, -9.303446901753887e-12, 2.5107693701897915e-11, -1.020872275603324e-11, 2.87276868959907e-11, -7.568412563330185e-11, -9.676792700474834e-11, -1.7802759266771773e-11, 9.601386352642294e-11, 4.8435255806111854e-11, -5.245071044157612e-11, -2.333067072868289e-11, 3.663225278671689e-11, -2.1796564553255848e-11, 5.5005333621238606e-11, -1.5254064678060786e-10, -1.9571411158381125e-10, -3.884281785104804e-11, 1.927704662563201e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0068723632628007e-11, -1.8649748412258305e-11, 5.246003631498297e-11, 1.4703349648925723e-11, -1.1284750911499941e-11, 1.1847034464551598e-10, 1.389990345046499e-10, 3.034417161984493e-11, -7.496558929176445e-12, 3.8050007589163215e-11, -1.567190821560871e-11, -4.059363956088191e-11, 1.0255685189974884e-10, 2.1910251390977464e-11, -2.5683566384770984e-11, 2.4738033843618723e-10, 2.814719568533519e-10, 6.297540267041768e-11, -1.3013146116236385e-11, 6.789546702634652e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [1.3009748833781032e-10, 4.7795767343927764e-11, 5.293521176952254e-11, -1.8145529523394544e-10, -1.587796560897914e-11, -6.678635422474599e-11, 3.2938540783788994e-11, 1.2994716414027607e-11, -4.891220761749082e-11, -1.1625966855888237e-10, 2.7136404234795464e-10, 8.57793835962184e-11, 9.888356800047404e-11, -3.7735314872833214e-10, -2.781019858844047e-11, -1.3393408604400747e-10, 4.518918572671282e-11, 4.2736258976106e-11, -9.495093600264681e-11, -2.483806493813745e-10, 5.956346527113965e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.462585856401802e-11, -5.258837809662964e-11, -3.4317659824978364e-11, -3.236466650236025e-11, -1.2528322823612825e-10, -5.29379873270841e-11, 1.4175305373953506e-10, -7.297940030071004e-11, 5.6233906420288804e-11, 1.4457102182063863e-11, 9.058798156047487e-11, -1.0579337406113609e-10, -6.757427950532247e-11, -6.537337338130556e-11, -2.5242641310541103e-10, -1.0693379515203105e-10, 2.835989221239288e-10, -1.5072332271159894e-10, 1.1531620103255591e-10, 2.677924548777355e-11, 3.0688784846688577e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5200396497050406e-11, 1.074735855866038e-10, 2.5728308372663378e-12, -1.8415380331759934e-11, 2.6697755117766064e-11, -2.141009591838383e-11, 3.322120356585856e-11, 1.6859180718142852e-11, -1.386868397901253e-11, -1.5859535906770361e-12, -4.37071490111407e-11, -2.9075630791908225e-11, 2.1859247745226185e-10, 1.5636381078820705e-12, -3.215094857011991e-11, 3.817945959383451e-11, -4.452893609396824e-11, 6.594835788575892e-11, 3.472355736278132e-11, -2.903521867381187e-11, -5.576650252692161e-12, -8.731737555223162e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.0355053460293675e-11, -8.811695817456666e-11, 7.212586083937822e-11, -9.316170057616091e-11, 8.056666445099836e-11, 9.228795505578091e-11, 1.2293721596279283e-11, -2.020161815607935e-12, 1.1655298948198833e-10, -1.7822854303517488e-11, 1.0990830467960677e-10, 9.632783459778693e-11, -1.7585088940563764e-10, 1.497466595168362e-10, -1.877057398402826e-10, 1.5902412719981385e-10, 1.769779878202371e-10, 2.411892907616675e-11, -2.546851618490109e-13, 2.226512307856865e-10, -3.2979174946490275e-11, 2.1783574943867734e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-3.302913498259841e-11, -4.3087755585702325e-12, 4.5697223782781293e-11, -1.8437140703042587e-11, -3.493150213529361e-11, -1.0819789508786926e-11, -6.1957106112231486e-12, -1.894340240227166e-11, 1.2209788735617622e-11, -1.4565015860057429e-12, 7.539302515624513e-12, -6.727252088722935e-11, -8.091971537282916e-12, 9.109757392877782e-11, -3.737410381177142e-11, -6.89588386393325e-11, -2.477562599523253e-11, -1.260602733310634e-11, -3.875944010189869e-11, 2.4735991033253413e-11, -3.175903984242723e-12, 1.5430323685450276e-11, -8.782974347809613e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.621514530598006e-11, 2.619660044445027e-11, -1.1439238445376532e-10, -5.195734953389319e-10, -2.6235236205707224e-11, 6.335814095592696e-10, -2.8390889639240413e-10, -2.896176631850267e-10, 1.953428530043766e-10, 1.4771384115874753e-10, -1.7701051735485862e-10, -1.4756884603173148e-10, 5.5220272798806036e-11, -2.3687529715488154e-10, -1.0474179301667164e-9, -6.091827042808973e-11, 1.2596108600604339e-9, -5.699879457310431e-10, -5.866127583686875e-10, 3.8938585689152205e-10, 2.830862211311569e-10, -3.4546721039419026e-10, 2.608890881106163e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-6.045686173905551e-11, -4.876090642369491e-10, 1.281776906836285e-10, -2.572622115337708e-10, 1.4970646944334476e-10, -6.883804637425328e-11, -8.885248092838083e-11, -2.3259982828705006e-10, 6.911289318622948e-10, -1.8768897547261076e-10, 1.8675105906140743e-10, 4.731535163671197e-10, -1.1190759430235175e-10, -9.72897651330129e-10, 2.4212010174551324e-10, -5.296312277636162e-10, 3.001101589461541e-10, -1.326879717211682e-10, -1.5739065606368285e-10, -4.788618390705324e-10, 1.3862893055716086e-9, -3.875558762800324e-10, 3.820137539634061e-10, 9.339047313261517e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.933631446770505e-11, -4.375311224436018e-11, 1.1144929423778649e-10, 1.0645018200250433e-10, 1.3988366021067122e-11, 4.403100106742386e-11, -8.934708528585134e-11, 3.064881681780207e-11, -2.988120861857624e-11, -3.137479165360446e-10, -5.115481371831265e-10, 4.388689411882751e-11, 1.3523404618354107e-10, -8.036860066340523e-11, 2.1779933412346963e-10, 1.8899171116970592e-10, 1.5333734282307887e-11, 8.606315660131258e-11, -1.7839985044787454e-10, 6.634937044225353e-11, -5.2955306806268254e-11, -6.386113859946363e-10, -1.0238767611525645e-9, 8.201617163194896e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
