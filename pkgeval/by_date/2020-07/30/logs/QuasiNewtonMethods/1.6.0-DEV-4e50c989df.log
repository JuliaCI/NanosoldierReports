Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.1
  Installed VectorizationBase ─── v0.12.29
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.20
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed DocStringExtensions ─ v0.8.2
  Installed StackPointers ─────── v0.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_0AJO5x/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_0AJO5x/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [3.665956427312267e-13, 6.80566714095221e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.33217897718896e-11, 6.592193457777284e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-6.007860875456572e-12, -1.2861267606467663e-11, 3.352873534367973e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4587221147953642e-11, -5.296973970558838e-11, 9.235279208041902e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [5.3409054956432556e-11, -1.7906454097271762e-11, 1.0309575415590189e-10, -3.548661364760619e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.223221606811876e-11, -5.890654630746894e-11, -5.0378368143810803e-11, -1.1953393830310688e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [3.425482120178458e-12, -6.0818017288966075e-12, 3.922862035210528e-12, -1.3939183141076228e-11, -7.249789657493011e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.874012222127021e-12, 1.0680079043368096e-10, 1.0538236949741986e-11, 2.029849621720814e-10, 4.811684384264936e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.882161093647028e-12, 9.593659200390903e-12, -2.6906588068698056e-11, -5.824896120998346e-12, 1.2080114686341403e-11, -5.2590820587283815e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.751688097494934e-11, -1.133237947925636e-11, 4.164624201052902e-11, 1.4657053348798854e-10, -1.8683277147601984e-11, 8.771894322023854e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.1645573394503117e-10, -8.52746762092238e-11, -2.674616084163972e-11, 2.2634272234256514e-10, -1.5170453782076265e-10, -7.478428987184316e-11, -2.2790336284828072e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.7840840743920126e-11, -1.585953590677036e-11, 3.409805771070751e-11, -6.690070719628238e-11, -3.308942009283555e-11, 7.44924122386692e-11, -1.70263803056514e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.6445289574562594e-11, -5.580480522127118e-11, 8.187672762005604e-12, -3.773203971491057e-11, 3.2982727660169076e-11, -1.1105749653239627e-10, 1.6461276786117196e-11, -7.51922968333929e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.892098086159649e-11, -5.2061688293747466e-11, 4.956390853294579e-11, 4.546674148286911e-11, -1.4971812678510332e-10, -1.08448916513737e-10, 9.116596366709473e-11, 1.0685807794175162e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [1.38249411918423e-11, 6.924172346600699e-11, -6.602718372050731e-11, 5.229106037063502e-11, 2.6255220220150477e-11, 1.483098088783663e-10, -1.3760836914400443e-10, 1.0080891676977899e-10, -4.037881140561694e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.539413455186605e-11, -1.3117462671630165e-10, -6.166633870208216e-11, -1.0389200610916305e-10, -1.3409195975810917e-10, -2.387944286752486e-10, -1.0877121425778569e-10, -2.191100634263421e-10, -1.582458608595516e-10]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-5.056066676445425e-12, -3.515521207475558e-12, 1.4580336937797256e-11, 1.7017720566059324e-11, 4.8190340606879545e-12, -9.964584712918167e-12, -7.307821014990168e-12, 2.4546364940647436e-11, 3.417532923322142e-11, 1.3057332992616466e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.4054759840150837e-11, 9.107425924526069e-11, 1.1926393206351804e-10, -2.389732856045157e-11, -8.300882203826632e-11, -8.03141997351986e-11, 1.8044299388009222e-10, 2.468707460678843e-10, -4.748657023156966e-11, -1.6808188174621819e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [5.395761615289985e-10, -1.854657538657989e-10, 4.949778364959911e-10, 1.579920638761223e-10, 8.342038171349486e-11, 1.0710725639739849e-9, -3.5902059103420925e-10, 9.746250473341433e-10, 3.2025826435244653e-10, 1.816227168660589e-10, -4.078071214053125e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1957990981036346e-11, 1.0185186027911186e-11, 9.127809619258187e-12, 3.4545921678841296e-11, 6.204370350815225e-12, 3.84641207773484e-11, 1.7966073073694133e-11, 2.024092005115108e-11, 7.033795768052187e-11, 1.2384981928903471e-11, -8.306577647942959e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [1.4136247727947193e-11, 2.062927606516496e-11, -7.938205648372332e-12, 2.2682522526906723e-11, 2.382494201924601e-11, -6.301936750219284e-11, 2.2922996834040532e-11, 3.833311446044263e-11, -2.2420398870792724e-11, 4.6053383329081043e-11, 4.2976955327844735e-11, -1.2580991803901043e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.963418316819343e-11, -1.354072409753826e-10, 5.6300519801766313e-11, -1.181587050425037e-10, 1.918416536739187e-10, -2.3063329024353152e-11, -2.6788238294273015e-11, -2.7050772732906125e-10, 1.0256262505947689e-10, -2.2448687353460173e-10, 4.045277446351747e-10, -4.528544206294782e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6998402685430847e-11, -1.0847878151309942e-11, 2.141842259106852e-11, -2.0549117962787022e-11, 5.0288440078816166e-11, 1.9927393068996935e-11, -3.584543772916504e-11, -1.986488751271054e-11, 4.264455455427196e-11, -4.55775417407267e-11, 1.0150325024937956e-10, 3.754752064821787e-11, 5.904166044956582e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [7.070166674338907e-11, 7.934297663325651e-11, -1.4115986157747784e-10, -1.3251844066530793e-10, -8.25761681255699e-12, -1.0815048856471776e-10, 1.390692005998062e-10, 1.6583445727746948e-10, -2.8686264474941936e-10, -2.706406210251089e-10, -1.7549961484064625e-11, -2.0928869748360057e-10, -1.4698242623012447e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-5.597855512462502e-12, -7.467526597082497e-11, 2.8447688649180236e-11, -3.687194993773346e-11, -8.045986099602942e-11, 1.5232259897857148e-11, -8.112066574028631e-12, -1.0397793737126904e-11, -1.5207013426277172e-10, 5.155387228228392e-11, -8.316236588257198e-11, -1.5946122200460877e-10, 3.204148057989187e-11, -1.5853096613227535e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.988431641564148e-11, -5.569356087420374e-11, -1.912048297469937e-11, 6.636868832288201e-11, -7.471323559826715e-11, 6.250466810797661e-11, 7.412737090817245e-12, 4.156008870381811e-11, -1.1159595469933947e-10, -3.187694552764242e-11, 1.3910561591501391e-10, -1.4777623569273146e-10, 1.3007750432336707e-10, 1.802069604650569e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-5.3484106032897216e-11, 5.800249169851668e-11, 1.6451773277026405e-10, -3.4422797945410366e-11, -6.728695378654947e-11, -5.10835818090527e-11, -8.103784310264928e-11, -1.0700162977883565e-10, 1.1005885092174594e-10, 3.361355638276109e-10, -8.367906367823252e-11, -1.424705908803503e-10, -1.0423251151081558e-10, -1.602868948680225e-10, 5.03508346128001e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.8083092235297045e-11, -1.4132250925058543e-11, -5.349387599551392e-12, 1.5896173266582991e-12, -3.2002511751727525e-11, -1.9127366357452047e-11, -1.1442291558694251e-11, 7.613132346762086e-11, -2.884814609416253e-11, -1.0445533327185785e-11, 4.993783164763954e-12, -6.363898297223614e-11, -3.8849701233800715e-11, -2.41113795595993e-11, -7.577272143066693e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-5.749423159784328e-11, 2.5847324280903194e-11, -5.686484616518328e-11, 5.76318992528968e-11, -5.4864113252506286e-11, 1.6283441262032738e-10, 5.434763750145066e-12, -1.9657397931638343e-10, -1.0602718703012215e-10, 2.7526647627951206e-11, -1.0424616725401847e-10, 1.2705791974099157e-10, -9.674006040683025e-11, 3.366955603212318e-10, 1.5636381078820705e-11, -3.7977265776589775e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.63150637233889e-11, -3.7817415865504245e-11, 5.0074389079668435e-11, 3.519895486192581e-11, 4.980749146454855e-11, -3.36766170505598e-11, -6.954048448193362e-11, 4.0585979022012e-11, -1.0546108430986578e-10, -7.941702850899901e-11, 1.0025114072220731e-10, 6.884048886490746e-11, 9.599476769039939e-11, -7.496459009104228e-11, -1.3991530156687304e-10, 7.918177225008094e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-8.514300375850326e-13, 2.3817170458073633e-11, -5.135358804864154e-11, -6.77435885165778e-12, -4.736089298518209e-11, -1.0332512623278944e-11, -4.5070613907682855e-12, -1.8953949521005597e-11, -1.0570433417456115e-11, 4.8326231905093664e-11, -9.695166891532381e-11, -1.1140532940601133e-11, -9.717604498860055e-11, -2.0358492669458883e-11, -2.8234081739242356e-12, -4.728328839576079e-11, -5.413336445769801e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.3263836130004165e-11, -1.7196910562233825e-11, -2.0132229217040276e-11, -2.0289769864234586e-11, -8.158695941062888e-12, -9.884537632842694e-12, 6.106670724648211e-12, 8.83226825010297e-12, 6.304401445333951e-11, -2.663935738667078e-11, -4.1342707035596504e-11, -3.741862375505889e-11, -1.2807976901285656e-11, -1.9520052241261965e-11, 9.849454585264539e-12, 1.9453993971296768e-11, -4.226619054747971e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [5.3520299303499996e-11, -4.585554158609284e-12, 4.808597964256478e-12, -2.5224267119483557e-12, 3.451949837085522e-11, -4.796052444078214e-11, 6.014455600222846e-11, 4.636668826663026e-11, -1.3797052389463715e-10, 1.1200773641917294e-10, -8.933520589948785e-12, 6.757261417078553e-12, -5.591638263524601e-12, 7.031064619411609e-11, -9.558553948352255e-11, 1.199962351705608e-10, 9.404033107784926e-11, -2.8335611634844327e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3952073657795836e-10, -3.834899064969477e-11, -1.5786483231750026e-11, -1.8079093777600974e-11, 1.4230838729645257e-10, -1.2472278765329747e-10, -9.077960605452517e-12, 1.0790901505686179e-10, -6.027156551624557e-11, -4.6434511791204613e-10, -7.918132816087109e-11, -2.5124791136477143e-11, -3.467814924107415e-11, 2.7466939833686865e-10, -2.416152833362162e-10, -1.667554982986985e-11, 2.2872082006131222e-10, -1.1185841142236086e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [8.047584820758402e-11, 1.754663081499075e-11, 5.28239674224551e-11, -3.830125105963589e-11, 1.2462986198613635e-10, -9.483525076348087e-13, -7.299383320003017e-11, 8.090994541021246e-11, 5.521072488079426e-11, 1.6960477466909651e-10, 3.008659987813189e-11, 1.0348233381307637e-10, -8.474221324661357e-11, 2.5339574882821125e-10, -4.045319634826683e-12, -1.5395218433411628e-10, 1.6419376969167843e-10, 1.1771050800746252e-10, -1.620059641993521e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.704992034338829e-12, 1.7296897247831566e-10, 1.5637713346450255e-11, 1.1231371388475964e-10, 6.009415187691047e-11, 1.167619334552228e-10, -1.1657252940722174e-10, -9.599654404723879e-12, 1.2670620108679032e-10, 1.039057728746684e-11, 3.6967540140153687e-10, 3.169375872857927e-11, 2.290514444780456e-10, 1.2249978809109052e-10, 2.362288142876423e-10, -2.299376244963014e-10, -2.7115643064234973e-11, 2.5323854124792433e-10, -3.391509295624928e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-1.764196566611531e-10, -2.1545909500986227e-10, -9.52355971861607e-11, -6.740397129334497e-11, -2.477065219608221e-10, -4.1230685532411826e-11, -5.624389842751043e-12, 1.553930317754748e-10, -1.621303091781101e-10, -8.763656467181136e-11, -3.5678593413024373e-10, -4.424034472094718e-10, -1.853451836453246e-10, -1.1074963168766772e-10, -4.865723379765541e-10, -8.936740236720198e-11, -2.806077592509837e-11, 3.1058133842520874e-10, -3.3215497019511986e-10, -1.692188611457368e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.224554039922168e-11, 1.3793610698087377e-10, 5.935341107488057e-11, -3.648470414674421e-11, 5.139066949766402e-11, -2.8555380282568876e-11, -6.31494856406789e-11, 1.6654921886072316e-10, 2.7883695352670657e-11, 4.9012571778916936e-11, -8.601064305224781e-11, 2.738138604740925e-10, 1.2626677481364368e-10, -5.961375837415517e-11, 1.0771761260741641e-10, -5.461398000505824e-11, -1.3087486649965285e-10, 3.4348635047365406e-10, 5.5608184723610066e-11, 9.851763849155759e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [6.562661525322255e-11, -7.97961696719085e-11, -1.945799077418542e-11, 9.441336601412331e-12, 1.916022895898095e-12, 6.42086384061713e-12, -2.396005616134289e-11, -1.4118595181855653e-11, 5.110778467098953e-11, 3.233902035049141e-11, 1.355882073283965e-10, -1.6104784172910058e-10, -3.7828518095750496e-11, 2.0507817666270967e-11, 3.8622438580659946e-12, 1.2771783630682876e-11, -4.948763621115404e-11, -2.994315906335032e-11, 1.005260319431045e-10, 5.837774708083998e-11, -1.764999257858335e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.095057957291374e-11, -5.807243574906806e-11, -1.9804269335566005e-11, -6.927969309344917e-11, 7.67659269484966e-11, 2.1442847497610273e-11, 3.435363105097622e-11, -2.271727250757749e-11, 4.179456780661894e-11, 5.199951580436846e-11, 1.6149726000946885e-10, -1.248418035615373e-10, -4.076083914839046e-11, -1.389445225541408e-10, 1.59171786862089e-10, 4.5574655160862676e-11, 6.168621169422295e-11, -4.36402025627558e-11, 8.167688747562352e-11, 1.113598102620017e-10, -4.3264281046617725e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.0195977395710543e-10, 2.44670950166892e-12, -2.73939759765085e-11, 9.543477119677846e-13, 4.202616032955575e-11, 1.8687273950490635e-11, -5.03597163969971e-13, 2.052247261019602e-11, 1.1820477929802564e-10, -4.7040260575670345e-11, -1.1560108426067472e-10, 1.9208279411486728e-10, 3.7272407382715755e-12, -4.993105928718933e-11, -2.2469803795388543e-12, 8.638956217055238e-11, 3.836664319578631e-11, 3.162359263342296e-12, 4.7296166982846444e-11, 2.401354670666933e-10, -9.577549864303592e-11, -2.3128809978345544e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1338263661286874e-10, 2.3393798009863076e-10, -4.758915483904502e-11, -6.022005116790297e-11, 2.00518934789784e-10, -1.34239064308872e-10, 4.852829249557544e-11, -3.684375027290798e-11, -7.150058323190933e-12, -1.708351238249861e-10, 6.70019595361282e-11, 2.1818769013748351e-10, 4.6083736826574295e-10, -8.54885051637666e-11, -1.3464340753444048e-10, 3.9649838967648066e-10, -2.7744440078691923e-10, 9.011325019514516e-11, -7.627043441260639e-11, -1.4443002349651124e-11, -3.351021682362898e-10, 1.209392586076774e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [3.3252109954418074e-9, -6.796723739377342e-9, 7.897533738088214e-10, 1.329980792164065e-9, 1.2568728280371033e-9, -4.5019612482377624e-9, 6.820455311640217e-10, 2.427166911900258e-9, -1.595394594211541e-9, 3.791649660911389e-9, -6.262289575786895e-10, 6.66795441084389e-9, -1.3611627269760618e-8, 1.5892518412385925e-9, 2.668124610138989e-9, 2.5344912835123523e-9, -9.004697654191318e-9, 1.371502467151231e-9, 4.860580382626267e-9, -3.188592279101954e-9, 7.590735151552508e-9, -1.2484097089426882e-9, 4.09603462259156e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1945999744966684e-13, -2.1770918401387007e-11, 5.1743498374889896e-11, 5.928524338116858e-11, -1.0703549158108672e-11, 7.402123358701829e-11, -2.2419510692373024e-10, -2.745064175968537e-10, -2.0332624472985117e-12, 1.3350875960327357e-11, 3.659605951611411e-11, 1.9876766899074028e-11, -2.3583690555994963e-11, 1.0901812785846232e-10, 1.2346546007790948e-10, -2.3446911079361143e-11, 1.52495793770413e-10, -4.4820125388866927e-10, -5.633782329539372e-10, 1.3822276656583199e-12, 1.5775825090713624e-11, 6.941491825784851e-11, -5.2129633942854525e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-4.0041303606130896e-11, -2.615874183931055e-11, -1.125475268537457e-10, 3.40341088644891e-11, 1.9058532529925287e-11, 3.0429658792741066e-11, 1.4159562411464321e-11, -2.3752000366528137e-11, 4.6561421385149515e-11, 4.775935202872006e-11, 5.087819054949705e-11, -7.775780019869671e-12, -8.399858586471964e-11, -5.625566679157146e-11, -2.235981400033893e-10, 7.139089319707637e-11, 4.044342638565013e-11, 6.073608282974874e-11, 2.938649323880327e-11, -4.577027645780163e-11, 9.9612318393838e-11, 9.847189730294303e-11, 1.0681922013588974e-10, -1.716982112043297e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1624702029043874e-11, -1.1014689160759872e-10, 4.28959090470471e-11, -9.085776575545879e-11, -2.137150456604786e-10, 4.1340042500337404e-11, 2.9296876036255526e-10, -6.48685549720085e-11, 9.5584207215893e-11, 8.949685437187327e-11, -7.736999929619515e-11, -1.315666464662968e-10, 4.896461014425313e-11, -2.323345960064671e-10, 8.943112916881546e-11, -1.786381043089591e-10, -4.240716666714661e-10, 8.282174945861698e-11, 5.950657744335786e-10, -1.3089351824646656e-10, 1.7418977371619349e-10, 1.7490520143326194e-10, -1.6854884155037553e-10, -2.869090520718487e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
