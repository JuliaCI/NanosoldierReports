Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataStructures ───── v0.17.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_JxlooS/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_JxlooS/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(49, 0.015501857f0), Item(29, 0.032742262f0), Item(34, 0.103339195f0), Item(40, 0.10788131f0)])
Vsorted = Item[Item(49, 0.015501857f0), Item(29, 0.032742262f0), Item(34, 0.103339195f0), Item(40, 0.10788131f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.006985179583231608, 0.007616202036539714, 301.0, 51.07551409304142))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004245336850484212, 0.0047407388687133786, 301.0, 75.38683032989502))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038594722747802733, 0.004308303197224935, 301.0, 41.05750298500061))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0045714139938354496, 0.004684797922770182, 301.0, 9.793898993520997))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0038222074508666992, 0.004905796051025391, 301.0, 46.03652011230588))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001546939214070638, 0.00013989607493082682, 301.0, 186.64739035815))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.579789479573568e-5, 0.011173168818155924, 300.0, 27.10877102985978)
p = PerformanceResult(1.0, 1.0, 1.0, 6.0224533081054686e-5, 3.05334726969401e-5, 300.0, 27.10877102985978)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0038065671920776366, 0.0035795052846272785, 300.0, 1.493141672879574)
p = PerformanceResult(1.0, 1.0, 1.0, 4.57763671875e-5, 2.0202000935872396e-5, 300.0, 1.493141672879574)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.579789479573568e-5, 0.011173168818155924, 300.0, 27.10877102985978), PerformanceResult(1.0, 1.0, 1.0, 6.0224533081054686e-5, 3.05334726969401e-5, 300.0, 27.10877102985978), PerformanceResult(1.0, 1.0, 1.0, 0.0038065671920776366, 0.0035795052846272785, 300.0, 1.493141672879574), PerformanceResult(1.0, 1.0, 1.0, 4.57763671875e-5, 2.0202000935872396e-5, 300.0, 1.493141672879574))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 117.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007814764976501465, 0.003566130002339681, 347.1666666666667, 28741.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007025686899820963, 0.0030710697174072266, 304.93333333333334, 6941.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.640088399251302e-5, 7.39892323811849e-6, 95.76666666666667, 50.996783912181854))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4112065633138022e-5, 1.1467933654785157e-5, 86.0, 75.28755986690521))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4731953938802084e-5, 1.3105074564615886e-5, 90.4, 41.008469104766846))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.862250010172526e-5, 0.0001535654067993164, 96.66666666666667, 45.974666345864534))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7899999999999999, 0.7899999999999999, 0.7899999999999999, 5.704561869303386e-5, 0.00014296372731526693, 70.5, 197.89277606457472))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-07-30T21:11:04.542
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9143888888888889, 0.911, 0.912561403508772, 2.198934555053711e-5, 2.3920536041259765e-5, 152.97, 50.92889853462111))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.134084701538086e-5, 1.7659664154052733e-5, 156.42, 0.0))
*** advance 1 from 1000; 2020-07-30T21:11:05.275
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.894777777777778, 0.893, 0.8938421052631581, 2.1867752075195312e-5, 2.3632049560546876e-5, 152.7, 77.79164527263492))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1228790283203126e-5, 2.0010471343994142e-5, 156.15, 0.0))
*** advance 1 from 1000; 2020-07-30T21:11:05.991
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8812499999999999, 0.8789999999999999, 0.8799999999999999, 2.4204254150390624e-5, 3.4887790679931644e-5, 153.3, 41.87077754177153))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.34675407409668e-5, 3.164768218994141e-5, 156.71, 0.0))
*** advance 1 from 1000; 2020-07-30T21:11:06.839
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9101428571428574, 0.9070000000000001, 0.908356037151703, 0.00012393474578857423, 0.0005180191993713379, 152.23, 45.76989712158684))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011577129364013671, 0.0006479907035827636, 155.54, 0.0))
*** advance 1 from 1000; 2020-07-30T21:11:07.476
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9550000000000002, 0.9550000000000002, 0.9550000000000002, 0.00011235475540161133, 0.000481109619140625, 167.05, 195.74901254149154))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00011975049972534179, 0.00047395944595336916, 171.66, 0.0))
*** advance 1 from 1000; 2020-07-30T21:11:08.739
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9143888888888889, 0.911, 0.912561403508772, 3.320217132568359e-5, 7.266998291015625e-5, 152.97, 50.93891765654553))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.2510757446289066e-5, 7.472991943359375e-5, 156.42, 0.014373746525961906))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:10.534
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.747, 0.747, 0.747, 0.0013308858871459962, 6.599903106689453e-5, 197.7, 200.85000221431255))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:11.425
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7620000000000001, 0.7620000000000001, 0.7620000000000001, 0.0015988945960998535, 7.632017135620118e-5, 202.48, 113.47381173074245))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:12.367
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6859999999999999, 0.6859999999999999, 0.6859999999999999, 0.0015574288368225097, 7.831096649169921e-5, 244.74, 3.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:13.314
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9789999999999999, 0.9789999999999999, 0.9789999999999999, 0.0018127083778381348, 1.8911361694335936e-5, 223.17, 597.0000209212303))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:14.345
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.623, 0.623, 0.623, 0.0018944215774536132, 0.0004552602767944336, 262.49, 2266.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:15.331
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3880000000000001, 0.3880000000000001, 0.3880000000000001, 0.0017660021781921386, 0.00036894798278808594, 252.37, 3626.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-07-30T21:11:16.310
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5900000000000003, 0.5900000000000003, 0.5900000000000003, 0.0014883804321289063, 2.8650760650634766e-5, 241.86, 2337.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0857681432610744,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9509329212454218,"seconds":0.002665884792804718,"exhaustive_search_seconds":2.5387853384017944e-6,"evaluations":8.2890625,"distances_sum":591.0493286550045}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0857681432610744,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9509329212454218,"seconds":0.002665884792804718,"exhaustive_search_seconds":2.5387853384017944e-6,"evaluations":8.2890625,"distances_sum":591.0493286550045}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9032742565334937,"state":{"restarts":8},"perf":{"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.9866973161697388e-5,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":52.015625,"distances_sum":286.34370882064104}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9032742565334937,"state":{"restarts":8},"perf":{"precision":0.9071180555555545,"recall":0.9071180555555545,"f1":0.9071180555555545,"seconds":1.9866973161697388e-5,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":52.015625,"distances_sum":286.34370882064104}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8532986111111104,"state":{"restarts":8},"perf":{"precision":0.8532986111111104,"recall":0.8532986111111104,"f1":0.8532986111111104,"seconds":4.9350783228874207e-5,"exhaustive_search_seconds":0.00015454739332199097,"evaluations":114.703125,"distances_sum":127.85848304256797}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8532986111111104,"state":{"restarts":8},"perf":{"precision":0.8532986111111104,"recall":0.8532986111111104,"f1":0.8532986111111104,"seconds":4.9350783228874207e-5,"exhaustive_search_seconds":0.00015454739332199097,"evaluations":114.703125,"distances_sum":127.85848304256797}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999992, conf: {"restarts":20}, perf: {"precision":0.8515624999999992,"recall":0.8515624999999992,"f1":0.8515624999999992,"seconds":0.00015804730355739594,"exhaustive_search_seconds":0.00037886016070842743,"evaluations":295.8125,"distances_sum":56.08868553629145}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999992,"state":{"restarts":20},"perf":{"precision":0.8515624999999992,"recall":0.8515624999999992,"f1":0.8515624999999992,"seconds":0.00015804730355739594,"exhaustive_search_seconds":0.00037886016070842743,"evaluations":295.8125,"distances_sum":56.08868553629145}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8515624999999992,"state":{"restarts":20},"perf":{"precision":0.8515624999999992,"recall":0.8515624999999992,"f1":0.8515624999999992,"seconds":0.00015804730355739594,"exhaustive_search_seconds":0.00037886016070842743,"evaluations":295.8125,"distances_sum":56.08868553629145}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(20), SatNeighborhood(32), 2020-07-30T21:11:23.554
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2120, 0.045447223f0), Item(9037, 0.048172563f0), Item(4076, 0.048424933f0), Item(595, 0.05006295f0), Item(5432, 0.051498696f0), Item(7579, 0.05283949f0), Item(6371, 0.05773971f0), Item(818, 0.06081474f0), Item(5159, 0.061459832f0), Item(9419, 0.06244826f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0686456400742115,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9547371031746037,"seconds":0.004325240850448608,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.421875,"distances_sum":601.7968381047249}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0686456400742115,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9547371031746037,"seconds":0.004325240850448608,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.421875,"distances_sum":601.7968381047249}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.041766682669227,"state":{"bsize":3},"perf":{"precision":0.9565972222222213,"recall":0.9565972222222213,"f1":0.9565972222222213,"seconds":1.5858560800552368e-5,"exhaustive_search_seconds":7.335096597671509e-6,"evaluations":32.546875,"distances_sum":289.1700002849102}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.041766682669227,"state":{"bsize":3},"perf":{"precision":0.9565972222222213,"recall":0.9565972222222213,"f1":0.9565972222222213,"seconds":1.5858560800552368e-5,"exhaustive_search_seconds":7.335096597671509e-6,"evaluations":32.546875,"distances_sum":289.1700002849102}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.606753246753247,"state":{"bsize":3},"perf":{"precision":0.9704861111111108,"recall":0.9704861111111108,"f1":0.9704861111111108,"seconds":3.452785313129425e-5,"exhaustive_search_seconds":3.030337393283844e-5,"evaluations":60.15625,"distances_sum":121.65938850305974}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.606753246753247,"state":{"bsize":3},"perf":{"precision":0.9704861111111108,"recall":0.9704861111111108,"f1":0.9704861111111108,"seconds":3.452785313129425e-5,"exhaustive_search_seconds":3.030337393283844e-5,"evaluations":60.15625,"distances_sum":121.65938850305974}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.71089617651504, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.551535964012146e-5,"exhaustive_search_seconds":0.0004978440701961517,"evaluations":103.390625,"distances_sum":55.25285358261317}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.82622260354107, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.668083369731903e-5,"exhaustive_search_seconds":0.0004978440701961517,"evaluations":100.1640625,"distances_sum":55.26332326512784}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.82622260354107,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.668083369731903e-5,"exhaustive_search_seconds":0.0004978440701961517,"evaluations":100.1640625,"distances_sum":55.26332326512784}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.82622260354107,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.668083369731903e-5,"exhaustive_search_seconds":0.0004978440701961517,"evaluations":100.1640625,"distances_sum":55.26332326512784}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.82622260354107,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.668083369731903e-5,"exhaustive_search_seconds":0.0004978440701961517,"evaluations":100.1640625,"distances_sum":55.26332326512784}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-07-30T21:11:27.901
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(274, 0.022573031f0), Item(343, 0.032927062f0), Item(5214, 0.040741354f0), Item(9281, 0.041189928f0), Item(2900, 0.04564781f0), Item(2475, 0.049068864f0), Item(4612, 0.05185567f0), Item(7967, 0.053344347f0), Item(7398, 0.054730926f0), Item(677, 0.05605363f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
