Julia Version 1.6.0-DEV.552
Commit 4e50c989df (2020-07-29 11:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_XJWRqM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_XJWRqM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.100191 seconds (1.37 M allocations: 72.611 MiB, 10.79% gc time)
Running: chebyshev_quadrature with k=1
  1.832387 seconds (2.24 M allocations: 128.642 MiB, 2.89% gc time)
Running: chebyshev_quadrature with k=2
  0.311261 seconds (425.06 k allocations: 24.383 MiB)
Running: chebyshev_quadrature with k=3
  0.370006 seconds (544.94 k allocations: 29.871 MiB, 4.37% gc time)
Running: chebyshev_quadrature with k=4
  0.321951 seconds (487.81 k allocations: 26.427 MiB)
Running: jacobi_quadrature with α=β=1
 47.773850 seconds (39.38 M allocations: 3.138 GiB, 11.05% gc time)
Running: laguerre_quadrature with k=1
  3.369867 seconds (3.33 M allocations: 185.566 MiB, 3.57% gc time)
Running: legendre_quadrature
  0.224166 seconds (215.13 k allocations: 12.337 MiB)
Running: lobatto_quadrature
  0.343968 seconds (343.69 k allocations: 20.599 MiB)
Running: radau_quadrature
  0.407943 seconds (326.03 k allocations: 19.593 MiB, 7.05% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.740852 seconds (100.02 M allocations: 1.491 GiB, 0.38% gc time)
Running: rectangle_rule_midpoint.
  0.216857 seconds (173.73 k allocations: 3.887 MiB, 15.21% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.573949 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rombergs_method
  0.637698 seconds (752.78 k allocations: 43.341 MiB, 5.53% gc time)
Running: simpsons_rule
  0.039872 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.102581 seconds (113.16 k allocations: 5.981 MiB)
Running: trapezoidal_rule
  0.379444 seconds (1.52 M allocations: 25.804 MiB, 6.41% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.083871 seconds (32.65 k allocations: 1.944 MiB)
Running: chebyshev_quadrature with k=1
  0.468575 seconds (275.99 k allocations: 14.003 MiB)
Running: chebyshev_quadrature with k=2
  0.237780 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.154042 seconds (105.23 k allocations: 3.649 MiB)
Running: chebyshev_quadrature with k=4
  0.149324 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  3.910914 seconds (536.42 k allocations: 163.515 MiB, 18.19% gc time)
Running: legendre_quadrature
  0.183548 seconds (62.48 k allocations: 3.489 MiB)
Running: lobatto_quadrature
  0.022446 seconds (16.80 k allocations: 1.039 MiB)
Running: radau_quadrature
  0.024998 seconds (16.79 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 29.404176 seconds (471.41 M allocations: 7.025 GiB, 2.05% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.938174 seconds (476.96 M allocations: 7.107 GiB, 2.10% gc time)
Running: rombergs_method
  0.396807 seconds (360.44 k allocations: 20.328 MiB)
Running: simpsons_rule
  0.000030 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.059426 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.055853 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029676 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.092512 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.094417 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.111224 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.113081 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.399088 seconds (378.99 k allocations: 19.813 MiB)
Running: legendre_quadrature
  0.072826 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000132 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000045 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000576 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000405 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000658 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.108741 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000034 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023895 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021929 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.077236 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.193579 seconds (240.27 k allocations: 13.550 MiB)
Running: chebyshev_quadrature with k=2
  0.280501 seconds (295.46 k allocations: 16.575 MiB, 12.49% gc time)
Running: chebyshev_quadrature with k=3
  0.193360 seconds (275.42 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.262127 seconds (275.45 k allocations: 14.908 MiB, 8.73% gc time)
Running: jacobi_quadrature with α=β=1
  2.258040 seconds (465.76 k allocations: 164.215 MiB, 2.56% gc time)
Running: legendre_quadrature
  0.245425 seconds (193.01 k allocations: 11.105 MiB, 9.39% gc time)
Running: lobatto_quadrature
  0.225543 seconds (204.21 k allocations: 11.813 MiB)
Running: radau_quadrature
  0.245687 seconds (204.21 k allocations: 11.811 MiB)
Running: rectangle_rule_left
  1.293652 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.026869 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.149976 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.120524 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.030898 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.036269 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.026936 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.050651 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.186980 seconds (247.36 k allocations: 13.598 MiB)
Running: chebyshev_quadrature with k=2
  0.233520 seconds (303.09 k allocations: 16.576 MiB)
Running: chebyshev_quadrature with k=3
  0.225885 seconds (282.83 k allocations: 14.999 MiB, 9.05% gc time)
Running: chebyshev_quadrature with k=4
  0.206089 seconds (282.87 k allocations: 15.012 MiB)
Running: hermite_quadrature with k=2
 16.490946 seconds (22.12 M allocations: 1.147 GiB, 8.76% gc time)
Running: jacobi_quadrature with α=β=1
  0.492298 seconds (475.79 k allocations: 50.443 MiB, 7.16% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.253532 seconds (288.36 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.166134 seconds (200.07 k allocations: 11.456 MiB)
Running: lobatto_quadrature
  0.305721 seconds (225.72 k allocations: 37.631 MiB, 17.44% gc time)
Running: radau_quadrature
  0.249862 seconds (222.32 k allocations: 30.297 MiB)
Running: rectangle_rule_left
  0.030213 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.033293 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026530 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.122724 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.040433 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.052199 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.032248 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041129 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.205369 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.386998 seconds (297.81 k allocations: 16.314 MiB, 41.15% gc time)
Running: chebyshev_quadrature with k=3
  0.218578 seconds (277.69 k allocations: 14.770 MiB)
Running: chebyshev_quadrature with k=4
  0.221652 seconds (277.72 k allocations: 14.772 MiB)
Running: hermite_quadrature with k=2
  0.149160 seconds (177.72 k allocations: 10.161 MiB)
Running: jacobi_quadrature with α=β=1
 12.599516 seconds (468.35 k allocations: 1.176 GiB, 11.83% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.215937 seconds (283.22 k allocations: 15.696 MiB)
Running: legendre_quadrature
  0.147835 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.196326 seconds (216.09 k allocations: 23.336 MiB)
Running: radau_quadrature
  0.244245 seconds (215.23 k allocations: 21.263 MiB, 8.54% gc time)
Running: rectangle_rule_left
  0.025690 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025348 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022463 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.109598 seconds (138.21 k allocations: 7.924 MiB)
Running: simpsons_rule
  0.030585 seconds (33.50 k allocations: 1.933 MiB)
Running: simpsons38_rule
  0.035155 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.029101 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034060 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.251413 seconds (240.82 k allocations: 13.568 MiB, 9.39% gc time)
Running: chebyshev_quadrature with k=2
  0.245013 seconds (296.04 k allocations: 16.653 MiB)
Running: chebyshev_quadrature with k=3
  0.223063 seconds (276.02 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.232246 seconds (276.05 k allocations: 14.887 MiB, 8.47% gc time)
Running: jacobi_quadrature with α=β=1
  3.040441 seconds (466.40 k allocations: 195.250 MiB, 3.73% gc time)
Running: legendre_quadrature
  0.151014 seconds (193.57 k allocations: 11.142 MiB)
Running: lobatto_quadrature
  0.217637 seconds (204.78 k allocations: 11.843 MiB, 8.59% gc time)
Running: radau_quadrature
  0.218444 seconds (204.78 k allocations: 11.861 MiB)
Running: rectangle_rule_left
  0.330236 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.025302 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.112122 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.143491 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.033782 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.038545 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.028174 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035172 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.211781 seconds (241.39 k allocations: 13.512 MiB, 8.96% gc time)
Running: chebyshev_quadrature with k=2
  0.229645 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.216608 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.250306 seconds (276.59 k allocations: 14.982 MiB, 8.15% gc time)
Running: jacobi_quadrature with α=β=1
  2.365671 seconds (467.06 k allocations: 149.919 MiB, 4.13% gc time)
Running: legendre_quadrature
  0.166570 seconds (194.15 k allocations: 11.151 MiB)
Running: lobatto_quadrature
  0.226522 seconds (205.35 k allocations: 11.873 MiB, 8.88% gc time)
Running: radau_quadrature
  0.282938 seconds (205.35 k allocations: 11.860 MiB)
Running: rectangle_rule_left
  1.232184 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.029605 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.146852 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.184241 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.051344 seconds (30.52 k allocations: 1.864 MiB)
Running: simpsons38_rule
  0.048387 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.033544 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.180407 seconds (152.91 k allocations: 9.087 MiB)
Running: chebyshev_quadrature with k=1
  0.151708 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.216086 seconds (127.17 k allocations: 3.998 MiB, 28.98% gc time)
Running: chebyshev_quadrature with k=3
  0.152503 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.148825 seconds (95.28 k allocations: 3.421 MiB)
Running: jacobi_quadrature with α=β=1
  2.707387 seconds (510.01 k allocations: 169.320 MiB, 3.70% gc time)
Running: legendre_quadrature
  0.109488 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000251 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000143 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.694415 seconds (590.00 M allocations: 8.792 GiB, 3.39% gc time)
Running: rectangle_rule_midpoint
  0.000085 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.429641 seconds (592.75 M allocations: 8.833 GiB, 3.25% gc time)
Running: rombergs_method
  0.126269 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000080 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028007 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022557 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.648267 seconds (629.34 M allocations: 9.388 GiB, 4.96% gc time)
Running: chebyshev_quadrature with k=1
  0.580431 seconds (439.23 k allocations: 24.270 MiB, 3.83% gc time)
Running: chebyshev_quadrature with k=2
 14.907045 seconds (496.60 k allocations: 4.042 GiB, 3.62% gc time)
Running: chebyshev_quadrature with k=3
  6.277151 seconds (290.51 k allocations: 1.643 GiB, 4.77% gc time)
Running: chebyshev_quadrature with k=4
  8.400834 seconds (290.55 k allocations: 2.262 GiB, 2.49% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 63.940046 seconds (505.32 k allocations: 13.255 GiB, 3.75% gc time)
Running: legendre_quadrature.
  6.926512 seconds (232.91 k allocations: 1.976 GiB, 1.50% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.819052 seconds (8.24 M allocations: 13.384 GiB, 4.18% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.132489 seconds (7.24 M allocations: 13.369 GiB, 2.53% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.361591 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.014239 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.018808 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.274202 seconds (456.68 k allocations: 153.722 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.033799 seconds (600.04 M allocations: 8.943 GiB, 8.50% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.274124 seconds (600.05 M allocations: 8.944 GiB, 8.44% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.540054 seconds (600.04 M allocations: 8.943 GiB, 9.07% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065107 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.225622 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.209034 seconds (284.13 k allocations: 15.177 MiB)
Running: chebyshev_quadrature with k=3
  0.202009 seconds (260.63 k allocations: 13.459 MiB)
Running: chebyshev_quadrature with k=4
  0.214721 seconds (260.66 k allocations: 13.522 MiB)
Running: jacobi_quadrature with α=β=1
  0.378174 seconds (405.36 k allocations: 35.848 MiB)
Running: laguerre_quadrature with k=2
  0.186328 seconds (187.98 k allocations: 10.872 MiB)
Running: legendre_quadrature
  0.129842 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.036424 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.033071 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.059815 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.049626 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.054375 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.237459 seconds (171.16 k allocations: 9.762 MiB)
Running: simpsons_rule
  0.001922 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053534 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.180721 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.004307 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.149152 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.235874 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.146066 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.124057 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.444440 seconds (402.16 k allocations: 906.528 MiB, 3.63% gc time)
Running: legendre_quadrature
  0.061191 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000182 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000123 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.756178 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000443 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.740122 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073501 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001016 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000790 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.112842 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.100324 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.118300 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.106406 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.618172 seconds (388.44 k allocations: 253.776 MiB)
Running: legendre_quadrature
  0.072087 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000126 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000069 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.917924 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001049 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.376944 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.122256 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000388 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002403 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
