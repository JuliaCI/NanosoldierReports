Julia Version 1.6.0-DEV.356
Commit 0960c9a308 (2020-07-02 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_1hUcla/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_1hUcla/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.12443720957875477 -0.04008602963562119; -0.12443720957875477 0.0 -0.0838518449596003; 0.04008602963562119 0.0838518449596003 0.0])
dAA = so3([0.0 -0.03167864291697985 0.02260799018389523; 0.03167864291697985 0.0 -0.02676565592659268; -0.02260799018389523 0.02676565592659268 0.0])
dAA = so3([0.0 0.16723861965366024 -0.20799065007366463; -0.16723861965366024 0.0 -0.08172916657867182; 0.20799065007366463 0.08172916657867182 0.0])
dAA = Quaternion(0.9985977563142263, [0.04560280902146561, 0.010933105838205505, 0.024563633490908583])
dAA = SO3([0.9904301513139179 0.06737970300916757 0.12044953711279224; -0.0658209990114792 0.9976887048634392 -0.01687733027004787; -0.1213083321846459 0.008787707909904251 0.992575974287243])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9952721924727034 -0.0771238847354928 0.05903532242551508; 0.08090147761539195 0.9946314403114069 -0.06452324281762582; -0.05374210463151157 0.06899423416027232 0.9961684505355574]), [0.8385184495960029, -0.4008602963562119, -1.2443720957875477])
xj = SE3(SO3([0.9910136426581858 -0.11815855911185011 0.06269381926446177; 0.12933120834503514 0.9660484863161245 -0.22365992183298705; -0.03413793510695523 0.22975830125359165 0.9726488186348129]), [0.8172916657867182, -2.079906500736646, -1.6723861965366023])
Dx = SE3(SO3([0.9986260512360918 -0.05179287286150821 -0.007969197786591706; 0.049850743397248744 0.9858270424856725 -0.1601872207346583; 0.01615280704248752 0.15956986126679468 0.9870544798540476]), [-0.1339613679936852, -1.6979255576754788, -0.31928976762954164])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
