Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed NaNMath ────────────────────── v0.3.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Calculus ───────────────────── v0.5.1
  Installed DualNumbers ────────────────── v0.6.2
  Installed DiffRules ──────────────────── v0.0.10
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Nabla ──────────────────────── v0.12.1
  Installed FDM ────────────────────────── v0.6.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [49c96f43] + Nabla v0.12.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [49dc2e85] + Calculus v0.5.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [b552c78f] + DiffRules v0.0.10
  [fa6b7ba4] + DualNumbers v0.6.2
  [e25cca7e] + FDM v0.6.1
  [77ba4419] + NaNMath v0.3.3
  [49c96f43] + Nabla v0.12.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Nabla
Status `/tmp/jl_0cdA9O/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.23.4
  [fa6b7ba4] DualNumbers v0.6.2
  [e25cca7e] FDM v0.6.1
  [49c96f43] Nabla v0.12.1
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_0cdA9O/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.23.4
  [fa6b7ba4] DualNumbers v0.6.2
  [e25cca7e] FDM v0.6.1
  [1a297f60] FillArrays v0.8.11
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [77ba4419] NaNMath v0.3.3
  [49c96f43] Nabla v0.12.1
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [90014a1f] PDMats v0.9.12
  [69de0a69] Parsers v1.0.6
  [1fd47b50] QuadGK v2.4.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Core          |  234    234
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = in_domain(::Function, ::Float64) at finite_differencing.jl:128
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:128
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #Branch#13 at core.jl:82 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/core.jl:82
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#55#59"{Float64,typeof(lbeta)})(::Float64) at finite_differencing.jl:197
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:197
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = #Branch#13 at core.jl:82 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/core.jl:82
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#44#45"{typeof(lbeta),Float64,Tuple{Float64,Float64},Tuple{Float64,Float64}})(::Float64) at finite_differencing.jl:24
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = broadcast(::Function, ::Float64) at broadcast.jl:778
└ @ Base.Broadcast ./broadcast.jl:778
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf(::typeof(lgamma), ::Float64) at broadcast.jl:648
└ @ Base.Broadcast ./broadcast.jl:648
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = broadcast(::Function, ::Float64, ::Float64) at broadcast.jl:778
└ @ Base.Broadcast ./broadcast.jl:778
Functional: Test Failed at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237
  Expression: allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237 =# @benchmark(foo_small())) == allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237 =# @benchmark(foo_large()))
   Evaluated: 15 == 14
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:5
Functional: Test Failed at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238
  Expression: allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238 =# @benchmark(∇(foo_small()))) == allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238 =# @benchmark(∇(foo_large())))
   Evaluated: 53 == 52
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:5
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:411
└ @ Base ./reduce.jl:411
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:411
└ @ Base ./reduce.jl:411
Test Summary:                                  | Pass  Fail  Total
Sensitivities                                  | 3341     2   3343
  Finite-difference estimates of sensitivities |   31           31
  Indexing                                     |    7            7
  Scalar domains                               |   10           10
  Scalar                                       |  910          910
  Array                                        |   10           10
  Functional                                   | 1146     2   1148
    Functional                                 |  698     2    700
    Issue #136                                 |   21           21
    Reduce                                     |  400          400
    Reduce dim                                 |   27           27
  Linear algebra                               | 1227         1227
ERROR: LoadError: Some tests did not pass: 3341 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Nabla/D60dX/test/runtests.jl:18
ERROR: Package Nabla errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
