Julia Version 1.6.0-DEV.356
Commit 0960c9a308 (2020-07-02 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.3.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.3.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_jATcXd/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.3.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_jATcXd/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.3.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: chebyshev_quadrature with k=1
  2.180319 seconds (3.04 M allocations: 171.109 MiB, 3.66% gc time)
Running: chebyshev_quadrature with k=2
  0.296469 seconds (328.23 k allocations: 20.727 MiB)
Running: chebyshev_quadrature with k=3
  0.396620 seconds (471.77 k allocations: 27.060 MiB, 9.64% gc time)
Running: chebyshev_quadrature with k=4
  0.318336 seconds (433.14 k allocations: 24.063 MiB)
Running: jacobi_quadrature with α=β=1
 40.093375 seconds (40.81 M allocations: 3.130 GiB, 9.27% gc time)
Running: laguerre_quadrature with k=1
  2.910351 seconds (3.23 M allocations: 177.142 MiB, 2.01% gc time)
Running: legendre_quadrature
  0.251042 seconds (178.71 k allocations: 9.887 MiB, 12.13% gc time)
Running: lobatto_quadrature
  0.340514 seconds (294.26 k allocations: 17.202 MiB)
Running: radau_quadrature
  0.296391 seconds (278.14 k allocations: 16.290 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 75.198760 seconds (20.95 k allocations: 1.238 MiB, 0.03% gc time)
Running: rectangle_rule_midpoint.
  0.110735 seconds (25.02 k allocations: 1.536 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 74.628304 seconds (17.85 k allocations: 1.060 MiB)
Running: simpsons_rule
  0.089216 seconds (76.20 k allocations: 3.931 MiB)
Running: trapezoidal_rule
  0.281702 seconds (1.30 M allocations: 22.257 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   14     14
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: chebyshev_quadrature with k=1
  0.401607 seconds (266.56 k allocations: 13.250 MiB)
Running: chebyshev_quadrature with k=2
  0.147864 seconds (114.25 k allocations: 3.667 MiB)
Running: chebyshev_quadrature with k=3
  0.185250 seconds (104.24 k allocations: 3.538 MiB)
Running: chebyshev_quadrature with k=4
  0.183688 seconds (86.86 k allocations: 3.186 MiB)
Running: jacobi_quadrature with α=β=1
  2.910805 seconds (453.75 k allocations: 158.640 MiB, 22.28% gc time)
Running: legendre_quadrature
  0.157893 seconds (58.63 k allocations: 3.189 MiB)
Running: lobatto_quadrature
  0.018061 seconds (14.21 k allocations: 880.675 KiB)
Running: radau_quadrature
  0.017815 seconds (14.19 k allocations: 880.378 KiB)
Running: rectangle_rule_left
 28.389381 seconds (471.41 M allocations: 7.025 GiB, 1.84% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.402108 seconds (476.96 M allocations: 7.107 GiB, 1.82% gc time)
Running: simpsons_rule
  0.064035 seconds (17.07 k allocations: 1.017 MiB)
Running: trapezoidal_rule
  0.056213 seconds (16.89 k allocations: 1.007 MiB)
Test Summary: | Pass  Total
besselj       |   13     13
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: chebyshev_quadrature with k=1
  0.094180 seconds (3.20 k allocations: 135.969 KiB)
Running: chebyshev_quadrature with k=2
  0.113985 seconds (3.48 k allocations: 145.156 KiB)
Running: chebyshev_quadrature with k=3
  0.126843 seconds (4.71 k allocations: 188.141 KiB)
Running: chebyshev_quadrature with k=4
  0.113489 seconds (4.71 k allocations: 188.141 KiB)
Running: jacobi_quadrature with α=β=1
  0.188858 seconds (24.58 k allocations: 1.426 MiB)
Running: legendre_quadrature
  0.066863 seconds (1.90 k allocations: 82.719 KiB)
Running: lobatto_quadrature
  0.000213 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000080 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000465 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000322 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000453 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000525 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   13     13
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: chebyshev_quadrature with k=1
  0.239585 seconds (252.36 k allocations: 13.846 MiB)
Running: chebyshev_quadrature with k=2
  0.256146 seconds (260.35 k allocations: 14.254 MiB)
Running: chebyshev_quadrature with k=3
  0.255566 seconds (249.49 k allocations: 13.131 MiB, 9.26% gc time)
Running: chebyshev_quadrature with k=4
  0.193324 seconds (249.49 k allocations: 13.004 MiB)
Running: jacobi_quadrature with α=β=1
  2.681062 seconds (411.59 k allocations: 160.799 MiB, 1.92% gc time)
Running: legendre_quadrature
  0.181926 seconds (163.26 k allocations: 9.098 MiB)
Running: lobatto_quadrature
  0.181864 seconds (171.87 k allocations: 9.653 MiB)
Running: radau_quadrature
  0.178778 seconds (171.87 k allocations: 9.635 MiB)
Running: rectangle_rule_left
  0.930455 seconds (26.61 k allocations: 1.612 MiB)
Running: rectangle_rule_midpoint
  0.026619 seconds (25.62 k allocations: 1.572 MiB)
Running: rectangle_rule_right
  0.948013 seconds (18.46 k allocations: 1.094 MiB)
Running: simpsons_rule
  0.034015 seconds (30.41 k allocations: 1.842 MiB)
Running: trapezoidal_rule
  0.029119 seconds (46.36 k allocations: 1.858 MiB)
Test Summary: | Pass  Total
Cosine        |   13     13
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1).
Running: chebyshev_quadrature with k=1
  0.290360 seconds (313.98 k allocations: 17.437 MiB, 6.29% gc time)
Running: chebyshev_quadrature with k=2
  0.240785 seconds (284.91 k allocations: 15.074 MiB)
Running: chebyshev_quadrature with k=3
  0.257566 seconds (271.66 k allocations: 13.811 MiB, 7.77% gc time)
Running: chebyshev_quadrature with k=4
  0.250285 seconds (271.66 k allocations: 13.783 MiB)
Running: hermite_quadrature with k=2
 18.149201 seconds (22.17 M allocations: 1.123 GiB, 8.13% gc time)
Running: jacobi_quadrature with α=β=1
  0.442915 seconds (440.02 k allocations: 47.890 MiB, 6.62% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain).
  0.288141 seconds (301.44 k allocations: 16.276 MiB)
Running: legendre_quadrature
  0.197683 seconds (182.89 k allocations: 10.074 MiB)
Running: lobatto_quadrature
  0.290557 seconds (204.92 k allocations: 36.047 MiB, 10.86% gc time)
Running: radau_quadrature
  0.272869 seconds (201.50 k allocations: 28.704 MiB, 6.65% gc time)
Running: rectangle_rule_left
  0.107331 seconds (101.36 k allocations: 6.073 MiB)
Running: rectangle_rule_midpoint
  0.032832 seconds (33.09 k allocations: 1.936 MiB)
Running: rectangle_rule_right
  0.027735 seconds (25.19 k allocations: 1.427 MiB)
Running: simpsons_rule
  0.047960 seconds (61.70 k allocations: 3.144 MiB)
Running: trapezoidal_rule
  0.041310 seconds (47.49 k allocations: 2.536 MiB)
Test Summary: | Pass  Total
expnx2datan   |   15     15
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi).
Running: chebyshev_quadrature with k=1
  0.279574 seconds (209.14 k allocations: 11.137 MiB)
Running: chebyshev_quadrature with k=2
  0.333486 seconds (268.04 k allocations: 14.274 MiB)
Running: chebyshev_quadrature with k=3
  0.284577 seconds (256.42 k allocations: 13.114 MiB, 9.18% gc time)
Running: chebyshev_quadrature with k=4
  0.262558 seconds (256.42 k allocations: 13.123 MiB)
Running: hermite_quadrature with k=2
  0.191160 seconds (158.35 k allocations: 8.796 MiB)
Running: jacobi_quadrature with α=β=1
  9.769899 seconds (420.11 k allocations: 1.173 GiB, 9.06% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain).
  0.269623 seconds (252.63 k allocations: 13.547 MiB, 5.40% gc time)
Running: legendre_quadrature
  0.188043 seconds (169.41 k allocations: 9.422 MiB)
Running: lobatto_quadrature
  0.269818 seconds (186.62 k allocations: 21.343 MiB)
Running: radau_quadrature
  0.274420 seconds (185.77 k allocations: 19.278 MiB, 4.68% gc time)
Running: rectangle_rule_left
  0.034029 seconds (30.64 k allocations: 1.811 MiB)
Running: rectangle_rule_midpoint
  0.033594 seconds (27.98 k allocations: 1.688 MiB)
Running: rectangle_rule_right
  0.030385 seconds (20.06 k allocations: 1.179 MiB)
Running: simpsons_rule
  0.041669 seconds (40.67 k allocations: 2.270 MiB)
Running: trapezoidal_rule
  0.037420 seconds (31.95 k allocations: 1.856 MiB)
Test Summary: | Pass  Total
Gaussian      |   15     15
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: chebyshev_quadrature with k=1
  0.223575 seconds (204.73 k allocations: 11.190 MiB)
Running: chebyshev_quadrature with k=2
  0.277585 seconds (262.99 k allocations: 14.441 MiB, 5.27% gc time)
Running: chebyshev_quadrature with k=3
  0.251141 seconds (251.96 k allocations: 13.179 MiB)
Running: chebyshev_quadrature with k=4
  0.255915 seconds (251.96 k allocations: 13.020 MiB)
Running: jacobi_quadrature with α=β=1
  3.868514 seconds (414.45 k allocations: 191.944 MiB, 8.06% gc time)
Running: legendre_quadrature
  0.193859 seconds (165.31 k allocations: 9.178 MiB)
Running: lobatto_quadrature
  0.243783 seconds (173.92 k allocations: 9.764 MiB)
Running: radau_quadrature
  0.211345 seconds (173.91 k allocations: 9.732 MiB)
Running: rectangle_rule_left
  0.304352 seconds (29.78 k allocations: 1.759 MiB)
Running: rectangle_rule_midpoint
  0.026003 seconds (26.68 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.105198 seconds (19.52 k allocations: 1.147 MiB)
Running: simpsons_rule
  0.035477 seconds (34.31 k allocations: 2.038 MiB)
Running: trapezoidal_rule
  0.029705 seconds (49.70 k allocations: 2.012 MiB)
Test Summary: | Pass  Total
1/x           |   13     13
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: chebyshev_quadrature with k=1
  0.297591 seconds (247.66 k allocations: 13.696 MiB)
Running: chebyshev_quadrature with k=2
  0.352193 seconds (268.02 k allocations: 14.514 MiB)
Running: chebyshev_quadrature with k=3
  0.282980 seconds (256.44 k allocations: 13.260 MiB)
Running: chebyshev_quadrature with k=4
  0.272683 seconds (256.44 k allocations: 13.343 MiB, 8.79% gc time)
Running: jacobi_quadrature with α=β=1
  1.677043 seconds (419.98 k allocations: 146.827 MiB, 3.79% gc time)
Running: legendre_quadrature
  0.191682 seconds (169.21 k allocations: 9.411 MiB)
Running: lobatto_quadrature
  0.243582 seconds (177.82 k allocations: 9.968 MiB, 15.96% gc time)
Running: radau_quadrature
  0.204488 seconds (177.81 k allocations: 9.900 MiB)
Running: rectangle_rule_left
  0.954886 seconds (64.99 k allocations: 3.887 MiB)
Running: rectangle_rule_midpoint
  0.032226 seconds (28.14 k allocations: 1.687 MiB)
Running: rectangle_rule_right
  0.891275 seconds (20.97 k allocations: 1.212 MiB)
Running: simpsons_rule
  0.042515 seconds (38.74 k allocations: 2.230 MiB)
Running: trapezoidal_rule
  0.035746 seconds (65.19 k allocations: 2.356 MiB)
Test Summary: | Pass  Total
log(x)/x      |   13     13
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: chebyshev_quadrature with k=1
  0.314578 seconds (233.55 k allocations: 11.645 MiB, 9.78% gc time)
Running: chebyshev_quadrature with k=2
  0.156632 seconds (125.54 k allocations: 3.861 MiB)
Running: chebyshev_quadrature with k=3
  0.204829 seconds (114.76 k allocations: 3.719 MiB)
Running: chebyshev_quadrature with k=4
  0.178684 seconds (94.30 k allocations: 3.314 MiB)
Running: jacobi_quadrature with α=β=1
  2.310155 seconds (434.70 k allocations: 164.938 MiB, 6.96% gc time)
Running: legendre_quadrature
  0.114207 seconds (36.88 k allocations: 1.986 MiB)
Running: lobatto_quadrature
  0.000314 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000080 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 45.805022 seconds (590.00 M allocations: 8.792 GiB, 3.40% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 45.990435 seconds (592.75 M allocations: 8.833 GiB, 3.45% gc time)
Running: simpsons_rule
  0.038320 seconds (382 allocations: 19.281 KiB)
Running: trapezoidal_rule
  0.030352 seconds (178 allocations: 8.750 KiB)
Test Summary: | Pass  Total
modbessel0    |   13     13
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45). The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: chebyshev_quadrature with k=1
  0.846815 seconds (638.44 k allocations: 35.890 MiB)
Running: chebyshev_quadrature with k=2
 11.711329 seconds (477.56 k allocations: 4.040 GiB, 4.69% gc time)
Running: chebyshev_quadrature with k=3
  5.599334 seconds (284.03 k allocations: 1.643 GiB, 5.33% gc time)
Running: chebyshev_quadrature with k=4
  7.537801 seconds (284.03 k allocations: 2.261 GiB, 2.91% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 50.575403 seconds (467.79 k allocations: 13.253 GiB, 3.06% gc time)
Running: legendre_quadrature.
  5.810646 seconds (219.65 k allocations: 1.975 GiB, 1.99% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
 46.357243 seconds (8.22 M allocations: 13.383 GiB, 3.88% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
 50.875349 seconds (7.22 M allocations: 13.368 GiB, 3.07% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
  2.703496 seconds (44.48 k allocations: 2.679 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
  2.781551 seconds (52.59 k allocations: 3.198 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
  2.894023 seconds (44.69 k allocations: 2.690 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
 38.456310 seconds (600.06 M allocations: 8.944 GiB, 8.47% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, partly due to the singularities.
 35.801881 seconds (600.06 M allocations: 8.944 GiB, 9.11% gc time)
Test Summary: | Pass  Total
Simppen       |   13     13
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. Integrand function has been adjusted so that the singularity at x=0 no longer exists.
Running: chebyshev_quadrature with k=1
  0.261599 seconds (252.78 k allocations: 13.468 MiB)
Running: chebyshev_quadrature with k=2
  0.231499 seconds (251.78 k allocations: 13.047 MiB)
Running: chebyshev_quadrature with k=3
  0.221441 seconds (236.97 k allocations: 11.758 MiB)
Running: chebyshev_quadrature with k=4
  0.223277 seconds (236.97 k allocations: 11.756 MiB)
Running: jacobi_quadrature with α=β=1
  0.386693 seconds (356.83 k allocations: 32.874 MiB)
Running: laguerre_quadrature with k=2
  0.267686 seconds (194.56 k allocations: 10.980 MiB)
Running: legendre_quadrature
  0.143431 seconds (122.98 k allocations: 6.574 MiB)
Running: lobatto_quadrature
  0.041576 seconds (9.86 k allocations: 15.074 MiB)
Running: radau_quadrature
  0.047101 seconds (8.63 k allocations: 13.148 MiB)
Running: rectangle_rule_left
  0.081171 seconds (50.97 k allocations: 3.021 MiB)
Running: rectangle_rule_midpoint
  0.051163 seconds (26.71 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.051780 seconds (18.80 k allocations: 1.097 MiB)
Running: simpsons_rule
  0.043941 seconds (66.20 k allocations: 2.711 MiB)
Running: trapezoidal_rule
  0.200845 seconds (2.40 M allocations: 37.921 MiB)
Test Summary: | Pass  Total
sinexpox      |   14     14
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: chebyshev_quadrature with k=1
  0.127200 seconds (2.75 k allocations: 1.702 MiB)
Running: chebyshev_quadrature with k=2
  0.097294 seconds (3.02 k allocations: 2.367 MiB)
Running: chebyshev_quadrature with k=3
  0.127222 seconds (4.25 k allocations: 2.097 MiB)
Running: chebyshev_quadrature with k=4
  0.131935 seconds (4.25 k allocations: 1.538 MiB)
Running: jacobi_quadrature with α=β=1
  7.546767 seconds (344.07 k allocations: 903.128 MiB, 4.30% gc time)
Running: legendre_quadrature
  0.074608 seconds (1.45 k allocations: 76.531 KiB)
Running: lobatto_quadrature
  0.000457 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000273 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.472979 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000420 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.362588 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000807 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   13     13
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3)).
Running: chebyshev_quadrature with k=1
  0.110811 seconds (3.83 k allocations: 613.109 KiB)
Running: chebyshev_quadrature with k=2
  0.096155 seconds (4.10 k allocations: 815.297 KiB)
Running: chebyshev_quadrature with k=3
  0.111968 seconds (5.33 k allocations: 754.312 KiB)
Running: chebyshev_quadrature with k=4
  0.104943 seconds (5.33 k allocations: 584.812 KiB)
Running: jacobi_quadrature with α=β=1
  2.188916 seconds (352.70 k allocations: 251.312 MiB)
Running: legendre_quadrature
  0.061999 seconds (2.48 k allocations: 98.906 KiB)
Running: lobatto_quadrature
  0.000208 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000054 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.836766 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001132 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.421234 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000068 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001723 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   13     13
    Testing FunctionIntegrator tests passed 
