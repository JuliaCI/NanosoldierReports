Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Zlib_jll ───── v1.2.11+14
  Installed Libiconv_jll ─ v1.16.0+5
  Installed XML2_jll ───── v2.9.10+1
  Installed EzXML ──────── v1.1.0
  Installed TestReports ── v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [dcd651b4] + TestReports v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f5d6c58] + EzXML v1.1.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [dcd651b4] + TestReports v0.2.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing TestReports
Status `/tmp/jl_whz9qh/Project.toml`
  [8f5d6c58] EzXML v1.1.0
  [324d217c] ReferenceTests v0.9.1
  [dcd651b4] TestReports v0.2.0
  [44cfe95a] Pkg
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_whz9qh/Manifest.toml`
  [13072b0f] AxisAlgorithms v1.0.0
  [3da002f7] ColorTypes v0.10.5
  [c3611d14] ColorVectorSpace v0.8.5
  [5ae59095] Colors v0.12.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [150eb455] CoordinateTransformations v0.6.0
  [a8cc5b0e] Crayons v4.0.3
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [ab62b9b5] DeepDiffs v1.2.0
  [b4f34e82] Distances v0.9.0
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.3.0
  [53c48c17] FixedPointNumbers v0.8.1
  [a2bd30eb] Graphics v1.0.2
  [bbac6d45] IdentityRanges v0.3.1
  [a09fc81d] ImageCore v0.8.14
  [d8c32880] ImageInTerminal v0.4.3
  [02fcd773] ImageTransformations v0.8.5
  [a98d9a8b] Interpolations v0.12.10
  [94ce4f54] Libiconv_jll v1.16.0+5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [e94cdb99] MosaicViews v0.2.2
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.1.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [5432bcbf] PaddedViews v0.5.5
  [c84ed2f1] Ratios v0.4.0
  [189a3867] Reexport v0.2.0
  [324d217c] ReferenceTests v0.9.1
  [ae029012] Requires v1.0.1
  [6038ab10] Rotations v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [dcd651b4] TestReports v0.2.0
  [efce3f68] WoodburyMatrices v0.5.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
SingleNest    |    1      1
Test for "complexexample.txt" failed.
- DIFF ------------------------
"""
  <?xml version=\"1.0\" encoding=\"UTF-8\"?>
  <testsuites name=\"Example/Math\" id=\"_id_\" tests=\"13\" failures=\"4\" errors=\"3\"><testsuite name=\"Multiplication\" id=\"_id_\" tests=\"3\" failures=\"1\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/><testcase name=\"1 * 2 == 5\" id=\"_testcase_id_\"><failure message=\"2 == 5\" type=\"test\">Test Failed
    Expression: 1 * 2 == 5
     Evaluated: 2 == 5</failure></testcase><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite><testsuite name=\"\" id=\"_id_\" tests=\"1\" failures=\"0\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite><testsuite name=\"\" id=\"_id_\" tests=\"1\" failures=\"1\" errors=\"0\"><testcase name=\"sqrt(20) == 5\" id=\"_testcase_id_\"><failure message=\"4.47213595499958 == 5\" type=\"test\">Test Failed
    Expression: sqrt(20) == 5
     Evaluated: 4.47213595499958 == 5</failure></testcase></testsuite><testsuite name=\"\" id=\"_id_\" tests=\"1\" failures=\"0\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite><testsuite name=\"addition\" id=\"_id_\" tests=\"3\" failures=\"1\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/><testcase name=\"1 + 2 == 5\" id=\"_testcase_id_\"><failure message=\"3 == 5\" type=\"test\">Test Failed
    Expression: 1 + 2 == 5
     Evaluated: 3 == 5</failure></testcase><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite><testsuite name=\"addition/negative addition\" id=\"_id_\" tests=\"3\" failures=\"1\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/><testcase name=\"1 + -2 == 1\" id=\"_testcase_id_\"><failure message=\"-1 == 1\" type=\"test\">Test Failed
    Expression: 1 + -2 == 1
     Evaluated: -1 == 1</failure></testcase><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite><testsuite name=\"other\" id=\"_id_\" tests=\"0\" failures=\"0\" errors=\"3\"><testcase name=\"sqrt(-1)\" id=\"_testcase_id_\"><skip/></testcase><error message=\"Inf\" type=\"String\">
  Stacktrace:
   [1] to_xml(::Test.Error)
   [2] (::TestReports.var\"#4#5\")(::Test.Error)
   [3] iterate at ./generator.jl:47 [inlined]
   [4] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64, ::Int64)
-  [5] collect_to_with_first! at ./array.jl:689 [inlined]
+  [5] collect_to_with_first!(::Array{EzXML.Node,1}, ::EzXML.Node, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64)
   [6] _collect(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [7] collect_similar(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"})
   [8] map(::Function, ::Array{Test.Result,1})
   [9] to_xml(::ReportingTestSet)
   [10] (::TestReports.var\"#2#3\")(::ReportingTestSet)
   [11] iterate at ./generator.jl:47 [inlined]
   [12] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Int64, ::Int64)
-  [13] collect_to_with_first! at ./array.jl:689 [inlined]
+  [13] collect_to_with_first! at ./array.jl:712 [inlined]
   [14] _collect(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [15] collect_similar(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"})
   [16] map(::Function, ::Array{Test.AbstractTestSet,1})
   [17] report(::ReportingTestSet)
   [18] |&gt;(::ReportingTestSet, ::typeof(report))
   [19] top-level scope
   [20] include(::Module, ::String)
   [21] exec_options(::Base.JLOptions)
-  [22] _start() at ./client.jl:484</error><error message=\"ErrorException(&quot;Nooo&quot;)\" type=\"String\">
+  [22] _start() at ./client.jl:485</error><error message=\"ErrorException(&quot;Nooo&quot;)\" type=\"String\">
  Stacktrace:
   [1] to_xml(::Test.Error)
   [2] (::TestReports.var\"#4#5\")(::Test.Error)
   [3] iterate at ./generator.jl:47 [inlined]
   [4] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64, ::Int64)
-  [5] collect_to_with_first! at ./array.jl:689 [inlined]
+  [5] collect_to_with_first!(::Array{EzXML.Node,1}, ::EzXML.Node, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64)
   [6] _collect(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [7] collect_similar(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"})
   [8] map(::Function, ::Array{Test.Result,1})
   [9] to_xml(::ReportingTestSet)
   [10] (::TestReports.var\"#2#3\")(::ReportingTestSet)
   [11] iterate at ./generator.jl:47 [inlined]
   [12] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Int64, ::Int64)
-  [13] collect_to_with_first! at ./array.jl:689 [inlined]
+  [13] collect_to_with_first! at ./array.jl:712 [inlined]
   [14] _collect(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [15] collect_similar(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"})
   [16] map(::Function, ::Array{Test.AbstractTestSet,1})
   [17] report(::ReportingTestSet)
   [18] |&gt;(::ReportingTestSet, ::typeof(report))
   [19] top-level scope
   [20] include(::Module, ::String)
   [21] exec_options(::Base.JLOptions)
-  [22] _start() at ./client.jl:484</error><error message=\"DimensionMismatch(&quot;B has leading dimension 4, but needs 2&quot;)\" type=\"String\">
+  [22] _start() at ./client.jl:485</error><error message=\"DimensionMismatch(&quot;B has leading dimension 4, but needs 2&quot;)\" type=\"String\">
  Stacktrace:
   [1] to_xml(::Test.Error)
   [2] (::TestReports.var\"#4#5\")(::Test.Error)
   [3] iterate at ./generator.jl:47 [inlined]
   [4] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64, ::Int64)
-  [5] collect_to_with_first! at ./array.jl:689 [inlined]
+  [5] collect_to_with_first!(::Array{EzXML.Node,1}, ::EzXML.Node, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Int64)
   [6] _collect(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [7] collect_similar(::Array{Test.Result,1}, ::Base.Generator{Array{Test.Result,1},TestReports.var\"#4#5\"})
   [8] map(::Function, ::Array{Test.Result,1})
   [9] to_xml(::ReportingTestSet)
   [10] (::TestReports.var\"#2#3\")(::ReportingTestSet)
   [11] iterate at ./generator.jl:47 [inlined]
   [12] collect_to!(::Array{EzXML.Node,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Int64, ::Int64)
-  [13] collect_to_with_first! at ./array.jl:689 [inlined]
+  [13] collect_to_with_first! at ./array.jl:712 [inlined]
   [14] _collect(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})
   [15] collect_similar(::Array{Test.AbstractTestSet,1}, ::Base.Generator{Array{Test.AbstractTestSet,1},TestReports.var\"#2#3\"})
   [16] map(::Function, ::Array{Test.AbstractTestSet,1})
   [17] report(::ReportingTestSet)
   [18] |&gt;(::ReportingTestSet, ::typeof(report))
   [19] top-level scope
   [20] include(::Module, ::String)
   [21] exec_options(::Base.JLOptions)
-  [22] _start() at ./client.jl:484</error></testsuite><testsuite name=\"using function from a module\" id=\"_id_\" tests=\"1\" failures=\"0\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite></testsuites>
+  [22] _start() at ./client.jl:485</error></testsuite><testsuite name=\"using function from a module\" id=\"_id_\" tests=\"1\" failures=\"0\" errors=\"0\"><testcase name=\"pass (info lost)\" id=\"_testcase_id_\"/></testsuite></testsuites>
  
  """
-------------------------------
Complex Example: Error During Test at /home/pkgeval/.julia/packages/TestReports/Pz51L/test/runtests.jl:20
  Got exception outside of a @test
  You need to run the tests interactively with 'include("test/runtests.jl")' to update reference images
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] test_reference(::FileIO.File{FileIO.DataFormat{:TXT}}, ::String, ::Nothing, ::Nothing; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ReferenceTests/JDrHL/src/test_reference.jl:140
   [3] test_reference(::FileIO.File{FileIO.DataFormat{:TXT}}, ::String, ::Nothing, ::Nothing) at /home/pkgeval/.julia/packages/ReferenceTests/JDrHL/src/test_reference.jl:100
   [4] test_reference(::String, ::String; by::Nothing, render::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ReferenceTests/JDrHL/src/test_reference.jl:90
   [5] test_reference(::String, ::String) at /home/pkgeval/.julia/packages/ReferenceTests/JDrHL/src/test_reference.jl:90
   [6] top-level scope at /home/pkgeval/.julia/packages/TestReports/Pz51L/test/runtests.jl:22
   [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [8] top-level scope at /home/pkgeval/.julia/packages/TestReports/Pz51L/test/runtests.jl:21
   [9] include(::String) at ./client.jl:444
   [10] top-level scope at none:6
   [11] eval(::Module, ::Any) at ./boot.jl:340
   [12] exec_options(::Base.JLOptions) at ./client.jl:260
   [13] _start() at ./client.jl:485
  
Test Summary:   | Error  Total
Complex Example |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/TestReports/Pz51L/test/runtests.jl:20
ERROR: Package TestReports errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
