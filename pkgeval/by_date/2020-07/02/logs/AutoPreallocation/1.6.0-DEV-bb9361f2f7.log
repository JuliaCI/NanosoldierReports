Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed AutoPreallocation ─ v0.3.1
  Installed Cassette ────────── v0.3.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [e7028de2] + AutoPreallocation v0.3.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e7028de2] + AutoPreallocation v0.3.1
  [7057c7e9] + Cassette v0.3.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing AutoPreallocation
Status `/tmp/jl_uuBOUw/Project.toml`
  [e7028de2] AutoPreallocation v0.3.1
  [6e4b80f9] BenchmarkTools v0.5.0
  [7057c7e9] Cassette v0.3.3
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_uuBOUw/Manifest.toml`
  [e7028de2] AutoPreallocation v0.3.1
  [6e4b80f9] BenchmarkTools v0.5.0
  [7057c7e9] Cassette v0.3.3
  [682c06a0] JSON v0.21.0
  [69de0a69] Parsers v1.0.6
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
ones example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:11
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] fill! at ./array.jl:357 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(fill!), ::Array{Float64,1}, ::typeof(one)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] ones at ./array.jl:528 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] ones at ./array.jl:524 [inlined]
   [9] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones at ./array.jl:522 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_ones at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:6 [inlined]
   [13] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(f_ones)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:13
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:12
   [19] include(::String) at ./client.jl:444
   [20] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [22] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [24] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(::String) at ./client.jl:444
   [26] top-level scope at none:6
   [27] eval(::Module, ::Any) at ./boot.jl:340
   [28] exec_options(::Base.JLOptions) at ./client.jl:260
   [29] _start() at ./client.jl:485
  
matmul example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:17
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] fill! at ./array.jl:357 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(fill!), ::Array{Float64,2}, ::typeof(one)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] ones at ./array.jl:528 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] ones at ./array.jl:524 [inlined]
   [9] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones at ./array.jl:522 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_matmul at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:7 [inlined]
   [13] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(f_matmul)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:19
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:18
   [19] include(::String) at ./client.jl:444
   [20] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [22] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [24] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(::String) at ./client.jl:444
   [26] top-level scope at none:6
   [27] eval(::Module, ::Any) at ./boot.jl:340
   [28] exec_options(::Base.JLOptions) at ./client.jl:260
   [29] _start() at ./client.jl:485
  
noprealloc example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:27
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] fill! at ./array.jl:357 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(fill!), ::Array{Float64,2}, ::typeof(one)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] ones at ./array.jl:528 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] ones at ./array.jl:524 [inlined]
   [9] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones at ./array.jl:522 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_matmul_noprealloc at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:9 [inlined]
   [13] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(f_matmul_noprealloc)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:29
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:28
   [19] include(::String) at ./client.jl:444
   [20] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [22] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [24] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(::String) at ./client.jl:444
   [26] top-level scope at none:6
   [27] eval(::Module, ::Any) at ./boot.jl:340
   [28] exec_options(::Base.JLOptions) at ./client.jl:260
   [29] _start() at ./client.jl:485
  
check thread-safe: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:35
  Got exception outside of a @test
  MethodError: no method matching promote_type(::Array{Float64,2}, ::Array{Float64,2})
  Closest candidates are:
    promote_type(::Any, ::Any, !Matched::Any, !Matched::Any...) at promotion.jl:209
    promote_type(::Any) at promotion.jl:208
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] * at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/matmul.jl:159 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(*), ::Array{Float64,2}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] f at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:36 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::var"#f#8", ::Array{Float64,2}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] record_allocations(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [9] record_allocations(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [10] preallocate(::var"#f#8", ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/preallocate.jl:27
   [11] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:41 [inlined]
   [12] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:36
   [14] include(::String) at ./client.jl:444
   [15] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [16] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [18] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [19] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [20] include(::String) at ./client.jl:444
   [21] top-level scope at none:6
   [22] eval(::Module, ::Any) at ./boot.jl:340
   [23] exec_options(::Base.JLOptions) at ./client.jl:260
   [24] _start() at ./client.jl:485
  
resizing operations: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:54
  Got exception outside of a @test
  MethodError: no method matching (::Colon)(::Int64, ::Tuple{Int64,Int64,Int64})
  Closest candidates are:
    (::Colon)(::T, ::Any, !Matched::T) where T<:Real at range.jl:41
    (::Colon)(::A, ::Any, !Matched::C) where {A<:Real, C<:Real} at range.jl:10
    (::Colon)(::T, ::Any, !Matched::T) where T at range.jl:40
    ...
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] vect at ./array.jl:130 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(Base.vect), ::Int64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] push_pop_test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:56 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AutoPreallocation.AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::var"#push_pop_test#12", ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] record_allocations(::Function, ::Int64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [9] record_allocations(::Function, ::Int64) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [10] preallocate(::var"#push_pop_test#12", ::Int64) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/preallocate.jl:27
   [11] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:65
   [12] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [13] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:55
   [14] include(::String) at ./client.jl:444
   [15] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [16] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [18] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [19] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [20] include(::String) at ./client.jl:444
   [21] top-level scope at none:6
   [22] eval(::Module, ::Any) at ./boot.jl:340
   [23] exec_options(::Base.JLOptions) at ./client.jl:260
   [24] _start() at ./client.jl:485
  
  11.816 ms (7 allocations: 16.41 MiB)
readme_examples.jl: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
  Got exception outside of a @test
  LoadError: MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
   [1] call at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
   [2] fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
   [3] _overdub_fallback at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:536 [inlined]
   [4] fill! at ./array.jl:357 [inlined]
   [5] overdub(::Cassette.Context{nametype(RecordingCtx),AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(fill!), ::Array{Float64,2}, ::typeof(one)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [6] ones at ./array.jl:528 [inlined]
   [7] overdub(::Cassette.Context{nametype(RecordingCtx),AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [8] ones at ./array.jl:524 [inlined]
   [9] overdub(::Cassette.Context{nametype(RecordingCtx),AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones at ./array.jl:522 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx),AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] foo at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:4 [inlined]
   [13] overdub(::Cassette.Context{nametype(RecordingCtx),AllocationRecord,Nothing,Cassette.var"##PassType#258",Nothing,Cassette.DisableHooks}, ::typeof(foo)) at /home/pkgeval/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function) at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:7
   [17] include(::String) at ./client.jl:444
   [18] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1190 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [23] include(::String) at ./client.jl:444
   [24] top-level scope at none:6
   [25] eval(::Module, ::Any) at ./boot.jl:340
   [26] exec_options(::Base.JLOptions) at ./client.jl:260
   [27] _start() at ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:7
  
Test Summary:           | Pass  Error  Total
AutoPreallocation.jl    |   19      6     25
  integration_tests.jl  |           5      5
    ones example        |           1      1
    matmul example      |           1      1
    noprealloc example  |           1      1
    check thread-safe   |           1      1
    resizing operations |           1      1
  record_types.jl       |   19            19
  readme_examples.jl    |           1      1
ERROR: LoadError: Some tests did not pass: 19 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:15
ERROR: Package AutoPreallocation errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
