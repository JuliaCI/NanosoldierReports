Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayLayouts ─ v0.3.5
  Installed Compat ─────── v3.13.0
  Installed FillArrays ─── v0.8.11
  Installed BlockArrays ── v0.12.9
Updating `~/.julia/environments/v1.6/Project.toml`
  [8e7c35d0] + BlockArrays v0.12.9
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4c555306] + ArrayLayouts v0.3.5
  [8e7c35d0] + BlockArrays v0.12.9
  [34da2185] + Compat v3.13.0
  [1a297f60] + FillArrays v0.8.11
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing BlockArrays
Status `/tmp/jl_h6Qp73/Project.toml`
  [4c555306] ArrayLayouts v0.3.5
  [8e7c35d0] BlockArrays v0.12.9
  [34da2185] Compat v3.13.0
  [1a297f60] FillArrays v0.8.11
  [6fe1bfb0] OffsetArrays v1.1.0
  [2a0f44e3] Base64
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_h6Qp73/Manifest.toml`
  [4c555306] ArrayLayouts v0.3.5
  [8e7c35d0] BlockArrays v0.12.9
  [34da2185] Compat v3.13.0
  [1a297f60] FillArrays v0.8.11
  [6fe1bfb0] OffsetArrays v1.1.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
block view pointers: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:110
  Test threw exception
  Expression: Base.unsafe_convert(Ptr{Float64}, V) == Base.unsafe_convert(Ptr{Float64}, view(A.blocks, 2:3, 2:3))
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:110 [inlined]
   [5] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:96 [inlined]
   [7] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:4
  
block view pointers: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:111
  Test threw exception
  Expression: unsafe_load(pointer(V)) == V[1, 1]
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] pointer(::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},UnitRange{Int64}},false}) at ./abstractarray.jl:1011
   [5] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:111 [inlined]
   [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:96 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:4
  
block view pointers: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:114
  Test threw exception
  Expression: Base.unsafe_convert(Ptr{Float64}, V) == Base.unsafe_convert(Ptr{Float64}, view(A.blocks, 2:3, 2:3))
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at ./subarray.jl:402
   [4] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:114 [inlined]
   [5] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:96 [inlined]
   [7] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:4
  
block view pointers: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:115
  Test threw exception
  Expression: unsafe_load(pointer(V)) == V[1, 1]
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at ./subarray.jl:402
   [4] pointer(::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at ./abstractarray.jl:1011
   [5] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:115 [inlined]
   [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:96 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blockviews.jl:4
  
matrix * matrix: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:88
  Test threw exception
  Expression: A * B ≈ Matrix(A) * B ≈ A * Matrix(B) ≈ Matrix(A) * Matrix(B) ≈ PseudoBlockArray(A) * B ≈ A * PseudoBlockArray(B)
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at ./subarray.jl:402
   [4] gemm!(::Char, ::Char, ::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1448
   [5] _gemm! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:295 [inlined]
   [6] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:314 [inlined]
   [7] muladd!(::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [8] _block_muladd!(::Float64, ::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Float64, ::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{Base.OneTo{Int64},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:100
   [9] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:139 [inlined]
   [10] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [11] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [12] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [13] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [14] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [15] *(::Array{Float64,2}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:462
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:88
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:84
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:116
  Test threw exception
  Expression: all(muladd!(1.0, V, b[5:6], 0.0, similar(b, 2)) .=== BLAS.gemv!('T', 1.0, Matrix(V'), b[5:6], 0.0, similar(b, 2)))
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:302 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:116
   [8] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [9] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [10] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [11] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:117
  Test threw exception
  Expression: all(muladd!(1.0, V', b[3:4], 0.0, similar(b, 2)) .=== BLAS.gemv!('N', 1.0, Matrix(V'), b[3:4], 0.0, similar(b, 2)))
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] gemv!(::Char, ::Float64, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [2] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [3] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [4] muladd!(::Float64, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [5] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:117
   [6] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [7] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [8] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [9] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:118
  Test threw exception
  Expression: A' * b ≈ (Matrix(A))' * b
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:302 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},DenseColumnMajor,DenseColumnMajor,Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Array{Float64,1},PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [8] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [9] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [10] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [11] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [12] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [13] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:490
   [14] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:118
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:120
  Test threw exception
  Expression: all(transpose(A) * b .=== A' * b)
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:302 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},DenseColumnMajor,DenseColumnMajor,Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Array{Float64,1},PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [8] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [9] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [10] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [11] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [12] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [13] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:490
   [14] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:120
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:132
  Test threw exception
  Expression: A' * b ≈ (Matrix(A))' * b
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:302 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},DenseColumnMajor,DenseColumnMajor,Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Array{Float64,1},PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [8] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [9] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [10] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [11] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [12] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [13] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:490
   [14] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:132
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:134
  Test threw exception
  Expression: all(transpose(A) * b .=== A' * b)
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:302 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},DenseColumnMajor,DenseColumnMajor,Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Array{Float64,1},PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [8] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [9] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [10] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [11] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [12] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [13] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:490
   [14] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:134
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:137
  Test threw exception
  Expression: A' * B ≈ A' * Matrix(B) ≈ (Matrix(A))' * B
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemm!(::Char, ::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1448
   [4] _gemm! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:295 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:321 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] _block_muladd!(::Float64, ::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}}, ::Float64, ::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:100
   [8] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:130 [inlined]
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [11] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [12] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [13] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [14] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:488
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:137
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [19] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:138
  Test threw exception
  Expression: B' * A' ≈ (Matrix(B))' * A' ≈ B' * (Matrix(A))' ≈ Matrix(B') * Matrix(A')
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemm!(::Char, ::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1448
   [4] _gemm! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:295 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:326 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] _block_muladd!(::Float64, ::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Float64, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:100
   [8] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},BlockLayout{DenseRowMajor,DenseRowMajor},BlockLayout{DenseColumnMajor,DenseColumnMajor},Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:112
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [11] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [12] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [13] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [14] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:487
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:138
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [19] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:139
  Test threw exception
  Expression: A' * A ≈ (Matrix(A))' * Matrix(A)
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s3",S} where S where var"#s3"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s831",var"#s830"} where var"#s830"<:(Union{AbstractArray{T,1}, AbstractArray{T,2}} where T) where var"#s831"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/adjtrans.jl:209
   [3] gemm!(::Char, ::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1448
   [4] _gemm! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:295 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:321 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [7] _block_muladd!(::Float64, ::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Float64, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:100
   [8] materialize!(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},BlockLayout{DenseColumnMajor,DenseColumnMajor},BlockLayout{DenseColumnMajor,DenseColumnMajor},Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:112
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [11] copy(::MulAdd{BlockLayout{DenseRowMajor,DenseRowMajor},BlockLayout{DenseColumnMajor,DenseColumnMajor},ZerosLayout,Float64,Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}},BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Zeros{Float64,2,Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82
   [12] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81 [inlined]
   [13] mul at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [14] *(::Adjoint{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:492
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:139
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:96
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [19] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
  Test threw exception
  Expression: UpperTriangular(A) * b ≈ UpperTriangular(Matrix(A)) * b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [5] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [6] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [7] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [8] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [9] materialize!(::MulAdd{BlockLayout{StridedLayout,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [10] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [11] _matchingblocks_triangular_mul!(::Val{'U'}, ::Val{'N'}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:169
   [12] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:200 [inlined]
   [13] lmul!(::UpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:45
   [14] lmul! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:72 [inlined]
   [15] *(::UpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/triangular.jl:2003
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:160
  Test threw exception
  Expression: UnitUpperTriangular(A) * b ≈ UnitUpperTriangular(Matrix(A)) * b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [5] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [6] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [7] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [8] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [9] materialize!(::MulAdd{BlockLayout{StridedLayout,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [10] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [11] _matchingblocks_triangular_mul!(::Val{'U'}, ::Val{'U'}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:169
   [12] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:200 [inlined]
   [13] lmul!(::UnitUpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:45
   [14] lmul! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:72 [inlined]
   [15] *(::UnitUpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/triangular.jl:2003
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:160
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:161
  Test threw exception
  Expression: LowerTriangular(A) * b ≈ LowerTriangular(Matrix(A)) * b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [5] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [6] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [7] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [8] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [9] materialize!(::MulAdd{BlockLayout{StridedLayout,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [10] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [11] _matchingblocks_triangular_mul!(::Val{'L'}, ::Val{'N'}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:187
   [12] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:200 [inlined]
   [13] lmul!(::LowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:45
   [14] lmul! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:72 [inlined]
   [15] *(::LowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/triangular.jl:2003
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:161
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:162
  Test threw exception
  Expression: UnitLowerTriangular(A) * b ≈ UnitLowerTriangular(Matrix(A)) * b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64}},false}) at ./subarray.jl:402
   [4] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/views.jl:173
   [5] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [6] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [7] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [8] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [9] materialize!(::MulAdd{BlockLayout{StridedLayout,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [10] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [11] _matchingblocks_triangular_mul!(::Val{'L'}, ::Val{'U'}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:187
   [12] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:200 [inlined]
   [13] lmul!(::UnitLowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:45
   [14] lmul! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/lmul.jl:72 [inlined]
   [15] *(::UnitLowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/triangular.jl:2003
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:162
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:164
  Test threw exception
  Expression: UpperTriangular(A) \ b ≈ UpperTriangular(Matrix(A)) \ b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at ./subarray.jl:402
   [4] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [5] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [6] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [7] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [8] materialize!(::MulAdd{BlockLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:238 [inlined]
   [11] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:122 [inlined]
   [13] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:21 [inlined]
   [14] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:22 [inlined]
   [15] \(::UpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:119
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:164
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:165
  Test threw exception
  Expression: UnitUpperTriangular(A) \ b ≈ UnitUpperTriangular(Matrix(A)) \ b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at ./subarray.jl:402
   [4] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [5] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [6] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [7] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [8] materialize!(::MulAdd{BlockLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:238 [inlined]
   [11] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:122 [inlined]
   [13] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:21 [inlined]
   [14] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:22 [inlined]
   [15] \(::UnitUpperTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:119
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:165
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:166
  Test threw exception
  Expression: LowerTriangular(A) \ b ≈ LowerTriangular(Matrix(A)) \ b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at ./subarray.jl:402
   [4] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [5] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [6] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [7] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [8] materialize!(::MulAdd{BlockLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:272 [inlined]
   [11] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:122 [inlined]
   [13] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:21 [inlined]
   [14] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:22 [inlined]
   [15] \(::LowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:119
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:166
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
matching blocks: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:167
  Test threw exception
  Expression: UnitLowerTriangular(A) \ b ≈ UnitLowerTriangular(Matrix(A)) \ b
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}}, ::Int64) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}) at ./subarray.jl:402
   [4] gemv!(::Char, ::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:700
   [5] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:286 [inlined]
   [6] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:300 [inlined]
   [7] muladd!(::Float64, ::SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},Tuple{Base.OneTo{Int64}}},Tuple{BlockSlice{Block{1,Int64},Base.OneTo{Int64}}},false}, ::Float64, ::SubArray{Float64,1,PseudoBlockArray{Float64,1,SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80
   [8] materialize!(::MulAdd{BlockLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,DenseColumnMajor,Float64,SubArray{Float64,2,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}},BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{Block{1,Int64},UnitRange{Int64}}},false},SubArray{Float64,1,PseudoBlockArray{Float64,1,Array{Float64,1},Tuple{BlockedUnitRange{Array{Int64,1}}}},Tuple{BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{Array{Int64,1}}}},false}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:91
   [9] muladd! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] materialize! at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:272 [inlined]
   [11] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:122 [inlined]
   [13] copy at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:21 [inlined]
   [14] materialize at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:22 [inlined]
   [15] \(::UnitLowerTriangular{Float64,BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:119
   [16] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:167
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [18] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:159
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:143
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [22] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:190
  Test threw exception
  Expression: ldiv!(F, B̃) ≈ A \ B ≈ Matrix(A) \ B
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv!(::LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}}, ::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:117
   [11] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:190
   [12] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [13] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:192
  Test threw exception
  Expression: inv(A) isa PseudoBlockArray
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [11] _inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:299 [inlined]
   [12] inv(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311
   [13] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:192
   [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:193
  Test threw exception
  Expression: inv(A) ≈ inv(Matrix(A))
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [11] _inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:299 [inlined]
   [12] inv(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311
   [13] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:193
   [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:194
  Test threw exception
  Expression: inv(A) * A ≈ Matrix(I, 6, 6)
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [11] _inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:299 [inlined]
   [12] inv(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311
   [13] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:194
   [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:197
  Test threw exception
  Expression: inv(A) isa BlockArray
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [11] _inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:299 [inlined]
   [12] inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311 [inlined]
   [13] _inv(::BlockLayout{DenseColumnMajor,DenseColumnMajor}, ::Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:282
   [14] inv(::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:197
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [19] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
inv: Error During Test at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:198
  Test threw exception
  Expression: inv(A) * A ≈ Matrix(I, 6, 6)
  MethodError: no method matching elsize(::Type{PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}})
  Closest candidates are:
    elsize(!Matched::Type{var"#s71"} where var"#s71"<:(Array{T,N} where N)) where T at array.jl:222
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    ...
  Stacktrace:
   [1] elsize(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at ./abstractarray.jl:153
   [2] _memory_offset(::PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}, ::Int64, ::Vararg{Int64,N} where N) at ./abstractarray.jl:1021
   [3] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at ./subarray.jl:402
   [4] trsv!(::Char, ::Char, ::Char, ::Array{Float64,2}, ::SubArray{Float64,1,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},Int64},false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/blas.jl:1299
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:128 [inlined]
   [6] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [7] materialize!(::Ldiv{TriangularLayout{'U','N',DenseColumnMajor},ColumnMajor,UpperTriangular{Float64,Array{Float64,2}},SubArray{Float64,2,PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/triangular.jl:156
   [8] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [9] materialize!(::Ldiv{ArrayLayouts.QRCompactWYLayout{DenseColumnMajor,DenseColumnMajor},DenseColumnMajor,LinearAlgebra.QRCompactWY{Float64,Array{Float64,2}},PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:31
   [10] ldiv! at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/ldiv.jl:81 [inlined]
   [11] _inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:299 [inlined]
   [12] inv at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311 [inlined]
   [13] _inv(::BlockLayout{DenseColumnMajor,DenseColumnMajor}, ::Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}, ::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/src/blocklinalg.jl:282
   [14] inv(::BlockArray{Float64,2,Array{Array{Float64,2},2},Tuple{BlockedUnitRange{Array{Int64,1}},BlockedUnitRange{Array{Int64,1}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/vlcZk/src/factorizations.jl:311
   [15] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:198
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [17] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:183
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [19] top-level scope at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/test_blocklinalg.jl:6
  
Test Summary:                                 | Pass  Error  Broken  Total
BlockArrays.jl                                |  928     28       3    959
  Blocks                                      |   67                    67
  BlockedUnitRange                            |  107                   107
  BlockSlice                                  |    2                     2
  sortedin                                    |    4                     4
  eachblock                                   |    3                     3
  block constructors                          |   78                    78
  block indexing                              |   11                    11
  misc block tests                            |   61                    61
  convert                                     |   19                    19
  string                                      |    2                     2
  replstring                                  |    4                     4
  AbstractVector{Int} blocks                  |    3                     3
  Strided array interface                     |    2                     2
  lmul!/rmul!                                 |   16                    16
  copy                                        |   14                    14
  const block size                            |    2                     2
  mixed blocks #92                            |    4                     4
  reshape                                     |    9                     9
  *                                           |    3                     3
  Blockindex                                  |    6                     6
  Block Views                                 |  100      4            104
    block slice                               |   12                    12
    block view                                |   31                    31
    block view pointers                       |    4      4              8
    block indx range of block range           |    6                     6
    subarray implements block interface       |   15                    15
    Block-BlockRange blocks                   |    4                     4
    getindex with BlockRange                  |    4                     4
    non-allocation blocksize                  |   18                    18
    hasmatchingblocks                         |    6                     6
  blocks(::BlockVector)                       |    2                     2
  blocks(::BlockMatrix)                       |    1                     1
  blocks(::PseudoBlockVector)                 |    5                     5
  blocks(::PseudoBlockMatrix)                 |    8                     8
  blocks(::Vector)                            |    3                     3
  blocks(::Matrix)                            |    3                     3
  blocks(::Adjoint|Transpose)                 |    8                     8
  blocks(::SubArray)                          |    3                     3
  blocks(::SubArray)                          |    3                     3
  block range                                 |   40                    40
  block index range                           |    5                     5
  partially implemented block array           |    4                     4
  Array block interface                       |    6                     6
  Triangular/Symmetric/Hermitian block arrays |   31                    31
  Adjoint/Transpose block arrays              |    8                     8
  Diagonal BlockArray                         |    4                     4
  non-standard block axes                     |    2                     2
  block Fill                                  |    7              3     10
  broadcast                                   |   57                    57
  Linear Algebra                              |   83     24            107
    BlockArray scalar * matrix                |    2                     2
    BlockArray matrix * vector                |   20                    20
    PseudoBlockArray matrix * vector          |   19                    19
    matrix * matrix                           |    2      1              3
    adjoint                                   |   24      9             33
    triangular                                |   13      8             21
      bug in view pointer                     |    1                     1
      matching blocks                         |           8              8
      non-matching blocks                     |    8                     8
    inv                                       |    2      6              8
    Block Diagonal                            |    1                     1
  Khatri Rao Product (size)                   |    8                     8
  Khatri Rao Product (constant blocks)        |    6                     6
  Khatri Rao Product (wrong blocksize)        |    1                     1
  Khatri Rao Product (Matrix)                 |    1                     1
  foldl                                       |    2                     2
  reduce                                      |    2                     2
  blockappend!(::BlockVector, _)              |   56                    56
  blockpush!(::BlockVector, _)                |   12                    12
  blockpushfirst!(::BlockVector, _)           |   12                    12
  blockpop!(::BlockVector, _)                 |    3                     3
  blockpopfirst!(::BlockVector, _)            |    3                     3
  append!(::BlockVector, _)                   |   16                    16
  push!                                       |    1                     1
  pushfirst!                                  |    1                     1
  pop!                                        |    2                     2
  popfirst!                                   |    2                     2
ERROR: LoadError: Some tests did not pass: 928 passed, 0 failed, 28 errored, 3 broken.
in expression starting at /home/pkgeval/.julia/packages/BlockArrays/C4I7e/test/runtests.jl:3
ERROR: Package BlockArrays errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
