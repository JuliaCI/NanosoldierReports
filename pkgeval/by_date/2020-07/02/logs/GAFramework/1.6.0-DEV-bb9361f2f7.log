Julia Version 1.6.0-DEV.338
Commit bb9361f2f7 (2020-07-01 07:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_yY92qp/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_yY92qp/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172265329288461
curgen: 20 fitness: 0.2172265329288461
curgen: 30 fitness: 0.21723194688341488
curgen: 40 fitness: 0.21723194688341488
curgen: 50 fitness: 0.21723194688341488
CoordinateCreature{Array{Float64,1}}([0.22235341068777817], -0.21723194688341488) 0.22235341068777817 -0.21723194688341488
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2573512463277052
curgen: 100 fitness: 3.258020188661639
curgen: 150 fitness: 3.2581973630370245
curgen: 200 fitness: 3.258226166287638
curgen: 250 fitness: 3.2582261776983965
curgen: 300 fitness: 3.2582372564637523
curgen: 350 fitness: 3.2582372564637523
curgen: 400 fitness: 3.2582420520877506
curgen: 450 fitness: 3.258397045326591
curgen: 500 fitness: 3.258467535315499
CoordinateCreature{Array{Float64,1}}([0.2224111731417388, -0.2228097530055217, -0.22287799584784967, -0.22263792710036048, 0.22255787225199664, -0.22260251888814578, 0.2223613040319704, 0.22281089747413432, -0.2226679811174679, -0.22244761022960374, 0.22272217074378758, 0.22255152453692162, 0.2231946459086562, 0.22266095012575282, -0.22274486004949573], -3.258467535315499) [0.2224111731417388, -0.2228097530055217, -0.22287799584784967, -0.22263792710036048, 0.22255787225199664, -0.22260251888814578, 0.2223613040319704, 0.22281089747413432, -0.2226679811174679, -0.22244761022960374, 0.22272217074378758, 0.22255152453692162, 0.2231946459086562, 0.22266095012575282, -0.22274486004949573] -3.258467535315499
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018241320591130261
curgen: 100 fitness: -0.0016737606848664655
curgen: 150 fitness: -0.0015709405896586759
curgen: 200 fitness: -0.0015709405896586759
curgen: 250 fitness: -0.0013794277677448008
curgen: 300 fitness: -0.0013794277677448008
curgen: 350 fitness: -0.0012865840752738222
curgen: 400 fitness: -0.0012865840752738222
curgen: 450 fitness: -0.0012865840752738222
curgen: 500 fitness: -0.0012865840752738222
CoordinateCreature{Array{Float64,1}}([-0.001694966810854126, 0.0005646790117369967, 0.00023184720962626912, -8.375163922784423e-5, 1.9247048177114574e-5, 5.145860930306698e-5, -6.730786455497878e-7, -0.0002771855288775149, 0.0012001297065823962, -0.0008157944318714873, 0.00040491486270923644, 0.0001478354294997663, 4.996451877288562e-6, 0.00018307484456125955, 0.0009096799964289317], 0.0012865840752738222) [-0.001694966810854126, 0.0005646790117369967, 0.00023184720962626912, -8.375163922784423e-5, 1.9247048177114574e-5, 5.145860930306698e-5, -6.730786455497878e-7, -0.0002771855288775149, 0.0012001297065823962, -0.0008157944318714873, 0.00040491486270923644, 0.0001478354294997663, 4.996451877288562e-6, 0.00018307484456125955, 0.0009096799964289317] 0.0012865840752738222
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
