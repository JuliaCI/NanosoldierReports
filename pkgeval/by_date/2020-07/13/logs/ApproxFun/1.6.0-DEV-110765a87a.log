Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MPFR_jll ─────────────────────── v4.0.2+2
  Installed GMP_jll ──────────────────────── v6.2.0+1
  Installed InfiniteArrays ───────────────── v0.7.3
  Installed FastGaussQuadrature ──────────── v0.4.2
  Installed IntervalSets ─────────────────── v0.5.1
  Installed DataStructures ───────────────── v0.17.19
  Installed Intervals ────────────────────── v1.3.4
  Installed ApproxFun ────────────────────── v0.11.14
  Installed MatrixFactorizations ─────────── v0.4.1
  Installed Libiconv_jll ─────────────────── v1.16.0+5
  Installed XML2_jll ─────────────────────── v2.9.10+1
  Installed DualNumbers ──────────────────── v0.6.2
  Installed FFTW_jll ─────────────────────── v3.3.9+5
  Installed LowRankApprox ────────────────── v0.4.0
  Installed FastTransforms_jll ───────────── v0.2.13+1
  Installed FFTW ─────────────────────────── v1.2.2
  Installed ToeplitzMatrices ─────────────── v0.6.0
  Installed Mocking ──────────────────────── v0.7.1
  Installed BandedMatrices ───────────────── v0.15.15
  Installed TimeZones ────────────────────── v1.2.0
  Installed OpenBLAS_jll ─────────────────── v0.3.9+5
  Installed Missings ─────────────────────── v0.4.3
  Installed Calculus ─────────────────────── v0.5.1
  Installed IntelOpenMP_jll ──────────────── v2018.0.3+0
  Installed NaNMath ──────────────────────── v0.3.4
  Installed CompilerSupportLibraries_jll ─── v0.3.3+0
  Installed Reexport ─────────────────────── v0.2.0
  Installed MacroTools ───────────────────── v0.5.5
  Installed DSP ──────────────────────────── v0.6.7
  Installed ApproxFunFourier ─────────────── v0.2.4
  Installed ExprTools ────────────────────── v0.1.1
  Installed FastTransforms ───────────────── v0.8.2
  Installed Polynomials ──────────────────── v1.1.3
  Installed ArrayLayouts ─────────────────── v0.3.5
  Installed EzXML ────────────────────────── v1.1.0
  Installed Nullables ────────────────────── v1.0.0
  Installed SortingAlgorithms ────────────── v0.3.1
  Installed FillArrays ───────────────────── v0.8.13
  Installed RecipesBase ──────────────────── v1.0.1
  Installed MKL_jll ──────────────────────── v2020.1.216+0
  Installed DomainSets ───────────────────── v0.3.1
  Installed SpecialFunctions ─────────────── v0.10.3
  Installed StaticArrays ─────────────────── v0.12.4
  Installed ApproxFunOrthogonalPolynomials ─ v0.3.4
  Installed AbstractFFTs ─────────────────── v0.5.0
  Installed Zlib_jll ─────────────────────── v1.2.11+14
  Installed EllipsisNotation ─────────────── v0.4.0
  Installed OpenSpecFun_jll ──────────────── v0.5.3+3
  Installed IterTools ────────────────────── v1.3.0
  Installed Compat ───────────────────────── v3.13.0
  Installed DataAPI ──────────────────────── v1.3.0
  Installed BinaryProvider ───────────────── v0.5.10
  Installed LazyArrays ───────────────────── v0.16.14
  Installed ApproxFunSingularities ───────── v0.1.8
  Installed OrderedCollections ───────────── v1.3.0
  Installed BlockBandedMatrices ──────────── v0.8.10
  Installed StatsBase ────────────────────── v0.33.0
  Installed BlockArrays ──────────────────── v0.12.10
  Installed ApproxFunBase ────────────────── v0.3.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [28f2ccd6] + ApproxFun v0.11.14
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [28f2ccd6] + ApproxFun v0.11.14
  [fbd15aa5] + ApproxFunBase v0.3.5
  [59844689] + ApproxFunFourier v0.2.4
  [b70543e2] + ApproxFunOrthogonalPolynomials v0.3.4
  [f8fcb915] + ApproxFunSingularities v0.1.8
  [4c555306] + ArrayLayouts v0.3.5
  [aae01518] + BandedMatrices v0.15.15
  [b99e7846] + BinaryProvider v0.5.10
  [8e7c35d0] + BlockArrays v0.12.10
  [ffab5731] + BlockBandedMatrices v0.8.10
  [49dc2e85] + Calculus v0.5.1
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [5b8099bc] + DomainSets v0.3.1
  [fa6b7ba4] + DualNumbers v0.6.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.2
  [057dd010] + FastTransforms v0.8.2
  [34b6f7d7] + FastTransforms_jll v0.2.13+1
  [1a297f60] + FillArrays v0.8.13
  [781609d7] + GMP_jll v6.2.0+1
  [4858937d] + InfiniteArrays v0.7.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [8197267c] + IntervalSets v0.5.1
  [d8418881] + Intervals v1.3.4
  [c8e1da08] + IterTools v1.3.0
  [5078a376] + LazyArrays v0.16.14
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [898213cb] + LowRankApprox v0.4.0
  [856f044c] + MKL_jll v2020.1.216+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.4.1
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [4d1e1d77] + Nullables v1.0.0
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [f27b6e38] + Polynomials v1.1.3
  [3cdcf5f2] + RecipesBase v1.0.1
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.2.0
  [c751599d] + ToeplitzMatrices v0.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones ─────→ `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
   Building FFTW ──────────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building FastTransforms → `~/.julia/packages/FastTransforms/MjTJy/deps/build.log`
    Testing ApproxFun
Status `/tmp/jl_SORQu1/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [28f2ccd6] ApproxFun v0.11.14
  [fbd15aa5] ApproxFunBase v0.3.5
  [59844689] ApproxFunFourier v0.2.4
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.4
  [f8fcb915] ApproxFunSingularities v0.1.8
  [49dc2e85] Calculus v0.5.1
  [5b8099bc] DomainSets v0.3.1
  [fa6b7ba4] DualNumbers v0.6.2
  [7a1cc6ca] FFTW v1.2.2
  [057dd010] FastTransforms v0.8.2
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_SORQu1/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [28f2ccd6] ApproxFun v0.11.14
  [fbd15aa5] ApproxFunBase v0.3.5
  [59844689] ApproxFunFourier v0.2.4
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.4
  [f8fcb915] ApproxFunSingularities v0.1.8
  [4c555306] ArrayLayouts v0.3.5
  [aae01518] BandedMatrices v0.15.15
  [b99e7846] BinaryProvider v0.5.10
  [8e7c35d0] BlockArrays v0.12.10
  [ffab5731] BlockBandedMatrices v0.8.10
  [49dc2e85] Calculus v0.5.1
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [5b8099bc] DomainSets v0.3.1
  [fa6b7ba4] DualNumbers v0.6.2
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.8.2
  [34b6f7d7] FastTransforms_jll v0.2.13+1
  [1a297f60] FillArrays v0.8.13
  [781609d7] GMP_jll v6.2.0+1
  [4858937d] InfiniteArrays v0.7.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.3.4
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.14
  [94ce4f54] Libiconv_jll v1.16.0+5
  [898213cb] LowRankApprox v0.4.0
  [856f044c] MKL_jll v2020.1.216+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.4.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [4d1e1d77] Nullables v1.0.0
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [f27b6e38] Polynomials v1.1.3
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.2.0
  [c751599d] ToeplitzMatrices v0.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
PDE: Error During Test at /home/pkgeval/.julia/packages/ApproxFun/hDuHj/test/ReadmeTest.jl:103
  Got exception outside of a @test
  MethodError: no method matching elsize(::Type{BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
  Closest candidates are:
    elsize(!Matched::Base.CodeUnits{T,S} where S<:AbstractString) where T at strings/basic.jl:738
    elsize(!Matched::Random.UnsafeView{T}) where T at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Random/src/RNGs.jl:440
    elsize(!Matched::AbstractArray) at abstractarray.jl:153
    ...
  Stacktrace:
    [1] elsize(A::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ Base ./abstractarray.jl:153
    [2] _memory_offset(::BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}, ::Int64, ::Vararg{Int64,N} where N)
      @ Base ./abstractarray.jl:1075
    [3] unsafe_convert(#unused#::Type{Ptr{Float64}}, V::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./subarray.jl:402
    [4] pointer(x::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false})
      @ Base ./abstractarray.jl:1065
    [5] _gbmm!(α::Float64, A_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false}, B_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C_data::SubArray{Float64,2,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockIndexRange{1,Tuple{UnitRange{Int64}}},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false}, ::Tuple{Int64,Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:297
    [6] gbmm!(tA::Char, tB::Char, α::Float64, A::SubArray{Float64,2,BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false}, B::SubArray{Float64,2,BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false}, β::Float64, C::SubArray{Float64,2,BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},Tuple{BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{BlockArrays.Block{1,Int64},UnitRange{Int64}}},false})
      @ BandedMatrices ~/.julia/packages/BandedMatrices/dobxA/src/banded/gbmm.jl:288
    [7] _banded_muladd!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:179 [inlined]
    [8] materialize!
      @ ~/.julia/packages/BandedMatrices/dobxA/src/generic/matmul.jl:187 [inlined]
    [9] muladd!
      @ ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [10] _block_muladd!(α::Float64, A::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, X::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, β::Float64, Y::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:100
   [11] materialize!(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},Float64,BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}})
      @ BlockArrays ~/.julia/packages/BlockArrays/Iqf2f/src/blocklinalg.jl:112
   [12] muladd!
      @ ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:80 [inlined]
   [13] copyto!
      @ ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:94 [inlined]
   [14] copy
      @ ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:82 [inlined]
   [15] materialize(M::ArrayLayouts.MulAdd{BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},BlockBandedMatrices.BandedBlockBandedColumns{ArrayLayouts.ColumnMajor},ArrayLayouts.ZerosLayout,Float64,BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},FillArrays.Zeros{Float64,2,Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:81
   [16] mul
      @ ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:447 [inlined]
   [17] *(A::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}, B::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockMatrix{Float64,Matrix{Float64},Tuple{BlockArrays.BlockedUnitRange{Vector{Int64}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},BlockArrays.BlockedUnitRange{Vector{Int64}}})
      @ ArrayLayouts ~/.julia/packages/ArrayLayouts/vlcZk/src/muladd.jl:459
   [18] BlockBandedMatrices.BandedBlockBandedMatrix(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:498
   [19] (AbstractMatrix{T} where T)(V::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781
   [20] axpy!(a::Float64, X::ApproxFunBase.SubOperator{Float64,TimesOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, Y::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:675
   [21] axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:123
   [22] unwrap_axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,ApproxFunBase.LaplacianWrapper{PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},Int64,Float64},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:432
   [23] axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,ApproxFunBase.LaplacianWrapper{PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},Int64,Float64},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:487
   [24] axpy!(α::Float64, P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, A::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:123
   [25] convert_axpy!(#unused#::Type{BlockBandedMatrices.BlockBandedMatrix{T} where T}, S::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:696
   [26] (BlockBandedMatrices.BlockBandedMatrix{T} where T)(P::ApproxFunBase.SubOperator{Float64,PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/algebra.jl:112
   [27] (::ApproxFunBase.var"#167#168"{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}})(op::PlusOperator{Float64,Tuple{InfiniteArrays.Infinity,InfiniteArrays.Infinity}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/InterlaceOperator.jl:398
   [28] iterate
      @ ./generator.jl:47 [inlined]
   [29] collect_to!(dest::Vector{BlockBandedMatrices.BlockBandedMatrix{Float64}}, itr::Base.Generator{Vector{Operator{Float64}},ApproxFunBase.var"#167#168"{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}}}, offs::Int64, st::Int64)
      @ Base ./array.jl:734
   [30] collect_to_with_first!(dest::Vector{BlockBandedMatrices.BlockBandedMatrix{Float64}}, v1::BlockBandedMatrices.BlockBandedMatrix{Float64}, itr::Base.Generator{Vector{Operator{Float64}},ApproxFunBase.var"#167#168"{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}}}, st::Int64)
      @ Base ./array.jl:712
   [31] _collect(c::Vector{Operator{Float64}}, itr::Base.Generator{Vector{Operator{Float64}},ApproxFunBase.var"#167#168"{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:706
   [32] collect_similar
      @ ./array.jl:630 [inlined]
   [33] map
      @ ./abstractarray.jl:2225 [inlined]
   [34] blockbanded_interlace_convert!(S::ApproxFunBase.SubOperator{Float64,ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, ret::BlockBandedMatrices.BlockBandedMatrix{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/InterlaceOperator.jl:395
   [35] (BlockBandedMatrices.BlockBandedMatrix{T} where T)(S::ApproxFunBase.SubOperator{Float64,ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/general/InterlaceOperator.jl:423
   [36] AbstractArray
      @ ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:781 [inlined]
   [37] copyto!(dest::SubArray{Float64,2,BlockBandedMatrices.BlockBandedMatrix{Float64},Tuple{BlockArrays.BlockSlice{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockedUnitRange{Vector{Int64}}},BlockArrays.BlockSlice{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockedUnitRange{Vector{Int64}}}},false}, src::ApproxFunBase.SubOperator{Float64,ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},Tuple{BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}},BlockArrays.BlockRange{1,Tuple{UnitRange{Int64}}}},Tuple{Int64,Int64},Tuple{Int64,Int64}})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Operators/Operator.jl:676
   [38] resizedata!(B::ApproxFunBase.CachedOperator{Float64,BlockBandedMatrices.BlockBandedMatrix{Float64},ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},Tuple{Int64,Int64}}, #unused#::Colon, col::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Caching/blockbanded.jl:116
   [39] resizedata!(QR::ApproxFunBase.QROperator{ApproxFunBase.CachedOperator{Float64,BlockBandedMatrices.BlockBandedMatrix{Float64},ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},Tuple{Int64,Int64}},ApproxFunBase.RaggedMatrix{Float64},Float64}, #unused#::Colon, COL::BlockArrays.Block{1,Int64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Caching/blockbanded.jl:230
   [40] resizedata!(QR::ApproxFunBase.QROperator{ApproxFunBase.CachedOperator{Float64,BlockBandedMatrices.BlockBandedMatrix{Float64},ApproxFunBase.InterlaceOperator{Float64,1,TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{InfiniteArrays.OneToInf{Int64}}}},ApproxFunBase.CachedIterator{Tuple{Int64,Int64},ApproxFunBase.BlockInterlacer{Tuple{FillArrays.Fill{Int64,1,Tuple{InfiniteArrays.OneToInf{Int64}}},InfiniteArrays.OneToInf{Int64}}}},Tuple{InfiniteArrays.SignedInfinity,InfiniteArrays.Infinity}},TensorSpace{Tuple{ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64},ChebyshevDirichlet{1,1,ChebyshevInterval{Float64},Float64}},DomainSets.VcatDomain{2,Float64,(1, 1),Tuple{ChebyshevInterval{Float64},ChebyshevInterval{Float64}}},Float64},ApproxFunBase.ArraySpace{Space{D,Float64} where D,1,PiecewiseSegment{StaticArrays.SVector{2,Float64}},Float64},Tuple{Int64,Int64}},ApproxFunBase.RaggedMatrix{Float64},Float64}, #unused#::Colon, col::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/Jv4NR/src/Caching/blockbanded.jl:199
   [41] top-level scope
      @ timing.jl:174
   [42] top-level scope
      @ ~/.julia/packages/ApproxFun/hDuHj/test/ReadmeTest.jl:113
   [43] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [44] top-level scope
      @ ~/.julia/packages/ApproxFun/hDuHj/test/ReadmeTest.jl:104
   [45] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [46] top-level scope
      @ ~/.julia/packages/ApproxFun/hDuHj/test/ReadmeTest.jl:5
   [47] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [48] top-level scope
      @ ./timing.jl:174
   [49] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [50] top-level scope
      @ none:6
   [51] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [52] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
  
Test Summary:                     | Pass  Error  Broken  Total
Readme                            |    9      1       1     11
  Calculus and algebra            |    3                     3
  Differentiation and Integration |    2                     2
  ODE                             |    2                     2
  Periodic                        |    2                     2
  Sampling                        |                      No tests
  PDE                             |           1              1
ERROR: LoadError: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/ApproxFun/hDuHj/test/ReadmeTest.jl:4
in expression starting at /home/pkgeval/.julia/packages/ApproxFun/hDuHj/test/runtests.jl:4
ERROR: Package ApproxFun errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
