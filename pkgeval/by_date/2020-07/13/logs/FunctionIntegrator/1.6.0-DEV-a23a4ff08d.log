Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_4nXS1v/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_4nXS1v/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.118738 seconds (1.34 M allocations: 71.208 MiB, 3.10% gc time)
Running: chebyshev_quadrature with k=1
  1.904102 seconds (2.23 M allocations: 126.012 MiB, 2.49% gc time)
Running: chebyshev_quadrature with k=2
  0.295588 seconds (430.37 k allocations: 24.301 MiB)
Running: chebyshev_quadrature with k=3
  0.442724 seconds (556.61 k allocations: 29.978 MiB, 2.99% gc time)
Running: chebyshev_quadrature with k=4
  0.342991 seconds (499.19 k allocations: 26.553 MiB)
Running: jacobi_quadrature with α=β=1
 45.162511 seconds (39.85 M allocations: 3.122 GiB, 8.79% gc time)
Running: laguerre_quadrature with k=1
  3.381895 seconds (3.30 M allocations: 180.673 MiB, 1.74% gc time)
Running: legendre_quadrature
  0.238726 seconds (214.28 k allocations: 12.057 MiB)
Running: lobatto_quadrature
  0.452682 seconds (339.97 k allocations: 20.080 MiB, 6.99% gc time)
Running: radau_quadrature
  0.328802 seconds (322.26 k allocations: 19.086 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 76.449637 seconds (100.02 M allocations: 1.491 GiB, 0.40% gc time)
Running: rectangle_rule_midpoint.
  0.156976 seconds (172.93 k allocations: 3.818 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.740060 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time)
Running: simpsons_rule
  0.046226 seconds (46.42 k allocations: 2.041 MiB)
Running: simpsons38_rule
  0.099068 seconds (110.37 k allocations: 5.741 MiB)
Running: trapezoidal_rule
  0.329519 seconds (1.51 M allocations: 25.648 MiB, 8.02% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.117160 seconds (53.15 k allocations: 3.104 MiB)
Running: chebyshev_quadrature with k=1
  0.546196 seconds (278.50 k allocations: 13.977 MiB)
Running: chebyshev_quadrature with k=2
  0.149261 seconds (115.70 k allocations: 3.759 MiB)
Running: chebyshev_quadrature with k=3
  0.211589 seconds (105.05 k allocations: 3.606 MiB)
Running: chebyshev_quadrature with k=4
  0.169218 seconds (87.66 k allocations: 3.251 MiB)
Running: jacobi_quadrature with α=β=1
  2.107547 seconds (535.47 k allocations: 163.101 MiB, 5.32% gc time)
Running: legendre_quadrature
  0.184238 seconds (61.97 k allocations: 3.409 MiB)
Running: lobatto_quadrature
  0.023789 seconds (16.27 k allocations: 1018.628 KiB)
Running: radau_quadrature
  0.016224 seconds (16.25 k allocations: 1018.331 KiB)
Running: rectangle_rule_left
 28.688771 seconds (471.41 M allocations: 7.025 GiB, 3.90% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.343040 seconds (476.96 M allocations: 7.107 GiB, 2.43% gc time)
Running: simpsons_rule
  0.000063 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.067414 seconds (19.44 k allocations: 1.153 MiB)
Running: trapezoidal_rule
  0.054906 seconds (17.89 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031571 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.107759 seconds (2.45 k allocations: 115.719 KiB)
Running: chebyshev_quadrature with k=2
  0.100310 seconds (2.73 k allocations: 124.625 KiB)
Running: chebyshev_quadrature with k=3
  0.096883 seconds (3.18 k allocations: 138.094 KiB)
Running: chebyshev_quadrature with k=4
  0.097876 seconds (3.19 k allocations: 138.250 KiB)
Running: jacobi_quadrature with α=β=1
  0.333216 seconds (386.51 k allocations: 19.843 MiB)
Running: legendre_quadrature
  0.057738 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000151 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000094 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000544 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000392 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000530 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000043 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024705 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022464 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060703 seconds (74.52 k allocations: 4.250 MiB)
Running: chebyshev_quadrature with k=1
  0.263689 seconds (241.05 k allocations: 13.300 MiB, 10.69% gc time)
Running: chebyshev_quadrature with k=2
  0.247039 seconds (298.83 k allocations: 16.433 MiB)
Running: chebyshev_quadrature with k=3
  0.225945 seconds (280.63 k allocations: 14.961 MiB)
Running: chebyshev_quadrature with k=4
  0.267363 seconds (280.64 k allocations: 14.905 MiB, 6.82% gc time)
Running: jacobi_quadrature with α=β=1
  1.769132 seconds (473.05 k allocations: 164.131 MiB, 2.90% gc time)
Running: legendre_quadrature
  0.191760 seconds (192.27 k allocations: 10.876 MiB, 6.58% gc time)
Running: lobatto_quadrature
  0.205059 seconds (203.73 k allocations: 11.587 MiB)
Running: radau_quadrature
  0.247501 seconds (203.72 k allocations: 11.623 MiB)
Running: rectangle_rule_left
  1.155637 seconds (19.30 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.024947 seconds (25.15 k allocations: 1.548 MiB)
Running: rectangle_rule_right
  1.164975 seconds (17.80 k allocations: 1.062 MiB)
Running: simpsons_rule
  0.032403 seconds (28.13 k allocations: 1.726 MiB)
Running: simpsons38_rule
  0.038031 seconds (43.20 k allocations: 2.666 MiB)
Running: trapezoidal_rule
  0.028483 seconds (44.41 k allocations: 1.758 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.071101 seconds (236.24 k allocations: 5.064 MiB, 26.82% gc time)
Running: chebyshev_quadrature with k=1
  0.288368 seconds (248.18 k allocations: 13.385 MiB)
Running: chebyshev_quadrature with k=2
  0.277318 seconds (306.58 k allocations: 16.465 MiB)
Running: chebyshev_quadrature with k=3
  0.285484 seconds (288.04 k allocations: 14.986 MiB, 7.36% gc time)
Running: chebyshev_quadrature with k=4
  0.229452 seconds (288.05 k allocations: 15.030 MiB)
Running: hermite_quadrature with k=2
 19.239409 seconds (22.60 M allocations: 1.154 GiB, 6.00% gc time)
Running: jacobi_quadrature with α=β=1
  0.749460 seconds (483.14 k allocations: 50.361 MiB, 6.97% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.409299 seconds (287.63 k allocations: 15.571 MiB, 9.17% gc time)
Running: legendre_quadrature
  0.260331 seconds (199.34 k allocations: 11.222 MiB)
Running: lobatto_quadrature
  0.304964 seconds (225.27 k allocations: 37.401 MiB, 9.90% gc time)
Running: radau_quadrature
  0.287326 seconds (221.87 k allocations: 30.079 MiB)
Running: rectangle_rule_left
  0.028030 seconds (22.43 k allocations: 1.305 MiB)
Running: rectangle_rule_midpoint
  0.028119 seconds (27.11 k allocations: 1.643 MiB)
Running: rectangle_rule_right
  0.027694 seconds (19.02 k allocations: 1.122 MiB)
Running: simpsons_rule
  0.060061 seconds (40.34 k allocations: 2.074 MiB, 35.42% gc time)
Running: simpsons38_rule
  0.041914 seconds (58.55 k allocations: 3.069 MiB)
Running: trapezoidal_rule
  0.035072 seconds (30.75 k allocations: 1.698 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041074 seconds (46.77 k allocations: 2.072 MiB)
Running: chebyshev_quadrature with k=1
  0.261446 seconds (243.30 k allocations: 13.160 MiB)
Running: chebyshev_quadrature with k=2
  0.395431 seconds (301.22 k allocations: 16.223 MiB)
Running: chebyshev_quadrature with k=3
  0.310602 seconds (282.93 k allocations: 14.771 MiB, 9.41% gc time)
Running: chebyshev_quadrature with k=4
  0.278330 seconds (282.94 k allocations: 14.771 MiB)
Running: hermite_quadrature with k=2
  0.262566 seconds (177.41 k allocations: 9.962 MiB)
Running: jacobi_quadrature with α=β=1
  9.084881 seconds (475.69 k allocations: 1.176 GiB, 8.20% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.321531 seconds (282.52 k allocations: 15.370 MiB, 3.74% gc time)
Running: legendre_quadrature
  0.239992 seconds (194.53 k allocations: 11.000 MiB)
Running: lobatto_quadrature
  0.322552 seconds (215.66 k allocations: 23.113 MiB, 10.22% gc time)
Running: radau_quadrature
  0.287361 seconds (214.81 k allocations: 21.040 MiB)
Running: rectangle_rule_left
  0.030088 seconds (20.04 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.030892 seconds (25.91 k allocations: 1.587 MiB)
Running: rectangle_rule_right
  0.024935 seconds (17.81 k allocations: 1.065 MiB)
Running: simpsons_rule
  0.035105 seconds (32.63 k allocations: 1.854 MiB)
Running: simpsons38_rule
  0.036756 seconds (49.13 k allocations: 2.817 MiB)
Running: trapezoidal_rule
  0.030792 seconds (25.48 k allocations: 1.527 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.043073 seconds (31.21 k allocations: 1.867 MiB)
Running: chebyshev_quadrature with k=1
  0.282491 seconds (241.59 k allocations: 13.374 MiB, 8.93% gc time)
Running: chebyshev_quadrature with k=2
  0.293203 seconds (299.41 k allocations: 16.546 MiB)
Running: chebyshev_quadrature with k=3
  0.247843 seconds (281.21 k allocations: 14.979 MiB)
Running: chebyshev_quadrature with k=4
  0.328947 seconds (281.22 k allocations: 14.810 MiB, 5.24% gc time)
Running: jacobi_quadrature with α=β=1
  2.940709 seconds (473.68 k allocations: 195.174 MiB, 6.44% gc time)
Running: legendre_quadrature
  0.226716 seconds (192.81 k allocations: 10.904 MiB)
Running: lobatto_quadrature
  0.246512 seconds (204.28 k allocations: 11.615 MiB, 10.55% gc time)
Running: radau_quadrature
  0.189110 seconds (204.27 k allocations: 11.615 MiB)
Running: rectangle_rule_left
  0.350414 seconds (19.87 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.033956 seconds (25.50 k allocations: 1.566 MiB)
Running: rectangle_rule_right
  0.088544 seconds (18.16 k allocations: 1.081 MiB)
Running: simpsons_rule
  0.037396 seconds (28.88 k allocations: 1.757 MiB)
Running: simpsons38_rule
  0.039178 seconds (43.97 k allocations: 2.699 MiB)
Running: trapezoidal_rule
  0.029658 seconds (45.39 k allocations: 1.794 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036707 seconds (31.85 k allocations: 1.819 MiB)
Running: chebyshev_quadrature with k=1
  0.286852 seconds (242.18 k allocations: 13.318 MiB, 6.31% gc time)
Running: chebyshev_quadrature with k=2
  0.337753 seconds (300.03 k allocations: 16.464 MiB)
Running: chebyshev_quadrature with k=3
  0.281276 seconds (281.77 k allocations: 14.902 MiB)
Running: chebyshev_quadrature with k=4
  0.286565 seconds (281.78 k allocations: 14.999 MiB)
Running: jacobi_quadrature with α=β=1
  1.188795 seconds (474.37 k allocations: 149.866 MiB, 7.85% gc time)
Running: legendre_quadrature
  0.244467 seconds (193.41 k allocations: 10.920 MiB)
Running: lobatto_quadrature
  0.267171 seconds (204.88 k allocations: 11.636 MiB, 6.38% gc time)
Running: radau_quadrature
  0.275276 seconds (204.87 k allocations: 11.630 MiB)
Running: rectangle_rule_left
  1.152219 seconds (20.15 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.030648 seconds (25.51 k allocations: 1.567 MiB)
Running: rectangle_rule_right
  1.128014 seconds (18.16 k allocations: 1.080 MiB)
Running: simpsons_rule
  0.040687 seconds (29.63 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.045099 seconds (44.72 k allocations: 2.727 MiB)
Running: trapezoidal_rule
  0.033587 seconds (57.66 k allocations: 1.995 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.255461 seconds (149.37 k allocations: 8.743 MiB, 33.61% gc time)
Running: chebyshev_quadrature with k=1
  0.150971 seconds (91.22 k allocations: 3.263 MiB)
Running: chebyshev_quadrature with k=2
  0.154674 seconds (126.99 k allocations: 3.953 MiB)
Running: chebyshev_quadrature with k=3
  0.162300 seconds (115.57 k allocations: 3.786 MiB)
Running: chebyshev_quadrature with k=4
  0.178095 seconds (95.10 k allocations: 3.381 MiB)
Running: jacobi_quadrature with α=β=1
  1.358214 seconds (509.70 k allocations: 168.979 MiB, 21.94% gc time)
Running: legendre_quadrature
  0.108089 seconds (38.32 k allocations: 2.082 MiB)
Running: lobatto_quadrature
  0.000160 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000102 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 43.644293 seconds (590.00 M allocations: 8.792 GiB, 2.28% gc time)
Running: rectangle_rule_midpoint
  0.000053 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.201990 seconds (592.75 M allocations: 8.833 GiB, 2.26% gc time)
Running: simpsons_rule
  0.000057 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029592 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022268 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.534926 seconds (565.29 M allocations: 8.433 GiB, 3.55% gc time)
Running: chebyshev_quadrature with k=1
  0.549865 seconds (443.71 k allocations: 24.141 MiB)
Running: chebyshev_quadrature with k=2
 13.135922 seconds (503.85 k allocations: 4.042 GiB, 3.73% gc time)
Running: chebyshev_quadrature with k=3
  6.095032 seconds (295.64 k allocations: 1.643 GiB, 4.42% gc time)
Running: chebyshev_quadrature with k=4
  8.142019 seconds (295.65 k allocations: 2.262 GiB, 2.63% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.603005 seconds (511.95 k allocations: 13.255 GiB, 3.66% gc time)
Running: legendre_quadrature.
  6.699886 seconds (231.75 k allocations: 1.976 GiB, 1.63% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.933596 seconds (8.24 M allocations: 13.384 GiB, 4.60% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.851503 seconds (7.24 M allocations: 13.369 GiB, 3.05% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.916154 seconds (22.76 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.980952 seconds (31.06 k allocations: 1.878 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.962178 seconds (22.97 k allocations: 1.358 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.801530 seconds (600.04 M allocations: 8.943 GiB, 8.51% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.828513 seconds (600.05 M allocations: 8.943 GiB, 8.68% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.096910 seconds (600.03 M allocations: 8.943 GiB, 7.22% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.055086 seconds (128.40 k allocations: 3.622 MiB)
Running: chebyshev_quadrature with k=1
  0.306954 seconds (258.94 k allocations: 13.810 MiB)
Running: chebyshev_quadrature with k=2
  0.372180 seconds (287.51 k allocations: 15.091 MiB)
Running: chebyshev_quadrature with k=3
  0.279657 seconds (265.69 k allocations: 13.454 MiB)
Running: chebyshev_quadrature with k=4
  0.265793 seconds (265.70 k allocations: 13.455 MiB)
Running: jacobi_quadrature with α=β=1
  0.547712 seconds (412.86 k allocations: 35.927 MiB)
Running: laguerre_quadrature with k=2
  0.268807 seconds (187.41 k allocations: 10.657 MiB)
Running: legendre_quadrature
  0.193380 seconds (151.27 k allocations: 8.216 MiB)
Running: lobatto_quadrature
  0.036118 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.031563 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.067962 seconds (19.41 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.072905 seconds (26.02 k allocations: 1.572 MiB)
Running: rectangle_rule_right
  0.056335 seconds (17.92 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.002822 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.070367 seconds (80.15 k allocations: 3.398 MiB)
Running: trapezoidal_rule
  0.201434 seconds (2.39 M allocations: 37.694 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001124 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.122360 seconds (2.64 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.133923 seconds (2.92 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=3
  0.152035 seconds (3.36 k allocations: 2.064 MiB)
Running: chebyshev_quadrature with k=4
  0.152663 seconds (3.37 k allocations: 1.505 MiB)
Running: jacobi_quadrature with α=β=1
  8.316698 seconds (409.81 k allocations: 906.509 MiB, 4.13% gc time)
Running: legendre_quadrature
  0.068574 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000233 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000192 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.594504 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000431 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.461884 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000059 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000069 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000831 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000443 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.107101 seconds (2.53 k allocations: 578.641 KiB)
Running: chebyshev_quadrature with k=2
  0.132732 seconds (2.80 k allocations: 780.672 KiB)
Running: chebyshev_quadrature with k=3
  0.131379 seconds (3.25 k allocations: 689.969 KiB)
Running: chebyshev_quadrature with k=4
  0.120360 seconds (3.26 k allocations: 520.625 KiB)
Running: jacobi_quadrature with α=β=1
  3.817090 seconds (396.01 k allocations: 253.806 MiB, 3.89% gc time)
Running: legendre_quadrature
  0.081094 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000298 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000099 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 13.141186 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001146 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.757119 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000102 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000095 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001846 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
