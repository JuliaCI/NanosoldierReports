Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_sGrJ6P/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_sGrJ6P/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.060528432685434834 -0.012722161219430456; 0.060528432685434834 0.0 -0.0884179989047505; 0.012722161219430456 0.0884179989047505 0.0])
dAA = so3([0.0 0.06771724019190202 -0.043453844890714965; -0.06771724019190202 0.0 0.20642871454705247; 0.043453844890714965 -0.20642871454705247 0.0])
dAA = so3([0.0 -0.13420729902603198 0.02515397318179237; 0.13420729902603198 0.0 0.012759265475506973; -0.02515397318179237 -0.012759265475506973 0.0])
dAA = Quaternion(0.9910947171821797, [-0.04906254613321052, -0.11626054355363166, -0.04251604583114967])
dAA = SO3([0.9998437573633177 -0.007444540409381074 0.0160324570698386; 0.007489404120885392 0.9999681998762353 -0.002740084340928965; -0.016011548567118374 0.002859729772973574 0.9998677173797084])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9802811437400155 0.18809089358057932 -0.06058626065228207; -0.13344636956976394 0.8562373838568786 0.49904870397044254; 0.14574273798861148 -0.4811230177802633 0.8644534088576408]), [0.8841799890475049, -0.12722161219430456, 0.6052843268543483])
xj = SE3(SO3([0.8140436737067881 0.23844494547496253 -0.529600703620566; -0.11000873465178387 0.9586355928440525 0.2625183392314627; 0.5702902555701524 -0.15544069000739189 0.8066022664806715]), [-0.12759265475506973, 0.25153973181792366, 1.34207299026032])
Dx = SE3(SO3([0.8957875930708771 0.08316229250730843 -0.43663328000189505; -0.21545915792911108 0.9404550488152403 -0.26290997018447637; 0.38876977681497166 0.32958812821892214 0.8603660420846376]), [-0.9349843736396877, -0.22048158357423364, 0.8872393506506339])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
