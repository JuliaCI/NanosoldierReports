Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_MI6vra/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_MI6vra/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.005259308977213835 0.07852316110575826; 0.005259308977213835 0.0 0.02138243334606064; -0.07852316110575826 -0.02138243334606064 0.0])
dAA = so3([0.0 0.004406720825880224 0.06930358343605221; -0.004406720825880224 0.0 -0.20869414392249072; -0.06930358343605221 0.20869414392249072 0.0])
dAA = so3([0.0 0.10700981785528207 0.08698407560312485; -0.10700981785528207 0.0 -0.1058682619125731; -0.08698407560312485 0.1058682619125731 0.0])
dAA = Quaternion(0.9992566278708629, [0.0060669365636250505, 0.0362424494134765, -0.011656277167112334])
dAA = SO3([0.9896954351291392 0.1097925461352584 0.09191595344488185; -0.11527843361292639 0.9917162428105692 0.05665488936922052; -0.08493425944985131 -0.06666701252362857 0.9941537511938885])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9853058744921563 0.0545402765086852 0.1618570107520929; 0.03360030987110054 0.8672317875044034 -0.4967696105021756; -0.16746149667255747 0.4949084612130544 0.8526560045832748]), [-0.2138243334606064, 0.7852316110575825, 0.05259308977213835])
xj = SE3(SO3([0.9819269684809628 0.05950085184717656 0.17966378933788105; -0.054382203589171854 0.9979652131197597 -0.03328677418462872; -0.1812788032357121 0.022914668496248125 0.983164743807026]), [1.058682619125731, 0.8698407560312484, -1.0700981785528207])
Dx = SE3(SO3([0.9960283711793602 0.08832115458157616 0.01126310166730643; -0.08332382081470951 0.880053011877995 0.46750811454915736; 0.03137872990783619 -0.46658983051267533 0.8839170240308327]), [1.4446590292993837, -0.41285078693602323, -0.7933365317170991])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
