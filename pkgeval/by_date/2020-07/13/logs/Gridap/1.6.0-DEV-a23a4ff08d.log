Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed WriteVTK ───────────────────── v1.6.0
  Installed Parsers ────────────────────── v1.0.7
  Installed JLD2 ───────────────────────── v0.1.13
  Installed MacroTools ─────────────────── v0.5.5
  Installed CommonSubexpressions ───────── v0.3.0
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Gridap ─────────────────────── v0.12.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed FiniteDiff ─────────────────── v2.4.1
  Installed NLSolversBase ──────────────── v7.6.1
  Installed JSON ───────────────────────── v0.21.0
  Installed DataStructures ─────────────── v0.17.19
  Installed NLsolve ────────────────────── v4.4.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed LightXML ───────────────────── v0.9.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed Combinatorics ──────────────── v1.0.2
  Installed DiffResults ────────────────── v1.0.2
  Installed ArrayInterface ─────────────── v2.9.1
  Installed QuadGK ─────────────────────── v2.4.0
  Installed DocStringExtensions ────────── v0.8.2
  Installed Requires ───────────────────── v1.0.1
  Installed Parameters ─────────────────── v0.12.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed UnPack ─────────────────────── v1.0.1
  Installed OrderedCollections ─────────── v1.3.0
  Installed CodecZlib ──────────────────── v0.7.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Reexport ───────────────────── v0.2.0
  Installed FillArrays ─────────────────── v0.8.13
  Installed Zlib_jll ───────────────────── v1.2.11+14
  Installed LineSearches ───────────────── v7.0.1
  Installed ForwardDiff ────────────────── v0.10.12
  Installed BSON ───────────────────────── v0.2.6
  Installed FileIO ─────────────────────── v1.3.0
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed Distances ──────────────────── v0.9.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [56d4f2e9] + Gridap v0.12.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.9.1
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.19
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.3.0
  [1a297f60] + FillArrays v0.8.13
  [6a86dc24] + FiniteDiff v2.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.12.0
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.4.0
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.7
  [1fd47b50] + QuadGK v2.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [64499a7a] + WriteVTK v1.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+14
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_WN5sx6/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.13
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.12.0
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.4.0
  [1fd47b50] QuadGK v2.4.0
  [90137ffa] StaticArrays v0.12.4
  [64499a7a] WriteVTK v1.6.0
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_WN5sx6/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.9.1
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.19
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.13
  [6a86dc24] FiniteDiff v2.4.1
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.12.0
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.7
  [1fd47b50] QuadGK v2.4.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.1
  [64499a7a] WriteVTK v1.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+14
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   14     14
220.530307 seconds (8.99 M allocations: 575.649 MiB, 0.31% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  1.286356 seconds (1.28 M allocations: 72.899 MiB, 1.22% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 31.066155 seconds (27.90 M allocations: 1.408 GiB, 3.65% gc time)
Test Summary: | Pass  Total
Algebra       |  724    724
 74.213090 seconds (67.67 M allocations: 3.635 GiB, 3.55% gc time)
Test Summary: | Pass  Total
TensorValues  |  349    349
 18.686529 seconds (15.16 M allocations: 893.000 MiB, 3.21% gc time)
Test Summary: | Pass  Total
Arrays        |  332    332
 34.466993 seconds (26.08 M allocations: 1.462 GiB, 3.14% gc time)
Test Summary: | Pass  Total
Fields        |  638    638
 72.755159 seconds (49.28 M allocations: 2.753 GiB, 3.07% gc time)
Test Summary: | Pass  Total
Polynomials   |  104    104
 16.305348 seconds (12.84 M allocations: 725.186 MiB, 3.38% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 20.052891 seconds (24.55 M allocations: 1.264 GiB, 8.88% gc time)
Test Summary: | Pass  Total
ReferenceFEs  | 1098   1098
126.357089 seconds (80.83 M allocations: 4.739 GiB, 2.79% gc time)
Test Summary: | Pass  Total
Geometry      | 2435   2435
228.805003 seconds (153.39 M allocations: 8.934 GiB, 2.99% gc time)
Test Summary: | Pass  Total
FESpaces      | 1188   1188
499.358017 seconds (294.51 M allocations: 16.927 GiB, 2.95% gc time)
Test Summary: | Pass  Total
MultiField    |  326    326
171.124944 seconds (87.71 M allocations: 5.086 GiB, 3.05% gc time)
Test Summary: |
Visualization | No tests
 39.516270 seconds (30.87 M allocations: 1.794 GiB, 3.50% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000045 seconds
  0.000019 seconds
  0.000000 seconds
  0.000027 seconds
  0.000032 seconds
  0.000026 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.002520 seconds
  0.001657 seconds
  0.000000 seconds
  0.001438 seconds
  0.001675 seconds
  0.001869 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000003 seconds
  0.000004 seconds
  0.000037 seconds
  0.000175 seconds
  0.000003 seconds
  0.000071 seconds
  0.000118 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000275 seconds
  0.000266 seconds
  0.002782 seconds
  0.013702 seconds
  0.000288 seconds
  0.005671 seconds
  0.009323 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000026 seconds
  0.000025 seconds
  0.000041 seconds
  0.000041 seconds
+++ running suite for n = 100000 +++
  0.002470 seconds
  0.002584 seconds
  0.003784 seconds
  0.003820 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000013 seconds
  0.000000 seconds
  0.000027 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001264 seconds
  0.000000 seconds
  0.002595 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000064 seconds
  0.000070 seconds
  0.000090 seconds
+++ running suite for n = 100000 +++
  0.006200 seconds
  0.006551 seconds
  0.008168 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000035 seconds
  0.000003 seconds
  0.000084 seconds
  0.000111 seconds
  0.000033 seconds
  0.000001 seconds
  0.000116 seconds
  0.000108 seconds
  0.000033 seconds
  0.000004 seconds
  0.000208 seconds (3.49 k allocations: 101.391 KiB)
  0.000083 seconds
  0.000050 seconds
  0.000001 seconds
  0.000304 seconds
  0.000295 seconds
+++ running suite for n = 100000 +++
  0.002856 seconds
  0.000256 seconds
  0.006745 seconds
  0.008918 seconds
  0.002703 seconds
  0.000089 seconds
  0.009297 seconds
  0.008583 seconds
  0.002962 seconds
  0.000392 seconds
  0.015730 seconds (399.49 k allocations: 10.673 MiB)
  0.006799 seconds
  0.003995 seconds
  0.000106 seconds
  0.024032 seconds
  0.023383 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000050 seconds
  0.000003 seconds
  0.000144 seconds
  0.000121 seconds (1 allocation: 112 bytes)
  0.000004 seconds
  0.000138 seconds
  0.000138 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.004495 seconds
  0.000292 seconds
  0.011377 seconds
  0.009890 seconds (1 allocation: 112 bytes)
  0.000359 seconds
  0.011448 seconds
  0.011574 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000097 seconds
  0.000113 seconds
  0.000256 seconds
  0.000084 seconds
  0.000116 seconds
  0.000236 seconds
  0.000084 seconds
  0.000119 seconds
  0.000091 seconds
  0.000086 seconds
  0.000123 seconds
  0.000086 seconds
  0.000168 seconds
+++ running suite for n = 100000 +++
  0.005936 seconds
  0.008286 seconds
  0.019542 seconds
  0.005690 seconds
  0.007950 seconds
  0.017476 seconds
  0.006733 seconds
  0.009004 seconds
  0.006165 seconds
  0.006384 seconds
  0.009337 seconds
  0.005997 seconds
  0.012478 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000010 seconds
+++ running suite for n = 1000 +++
  0.000102 seconds
  0.000186 seconds
  0.000705 seconds
+++ running suite for n = 100000 +++
  0.007976 seconds
  0.013809 seconds
  0.054394 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000004 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000050 seconds
  0.000403 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.003908 seconds
  0.033481 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000004 seconds
  0.163109 seconds (190.66 k allocations: 10.965 MiB)
  0.000000 seconds
  0.000008 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000008 seconds
  0.000000 seconds
  0.000003 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000002 seconds
  0.000015 seconds
  0.000030 seconds
  0.000000 seconds
  0.000009 seconds (50 allocations: 1.250 KiB)
  0.000001 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000014 seconds
  0.000072 seconds
  0.001325 seconds
  0.002430 seconds
  0.000017 seconds
  0.000681 seconds (5.49 k allocations: 132.641 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.001370 seconds
  0.006776 seconds
  0.104243 seconds
  0.218347 seconds
  0.001870 seconds
  0.059061 seconds (599.49 k allocations: 13.725 MiB)
  0.000054 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000004 seconds
  0.000006 seconds
  0.000003 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000008 seconds
  0.000014 seconds
  0.000011 seconds
  0.000030 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000743 seconds
  0.001469 seconds
  0.001150 seconds
  0.002630 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.069474 seconds
  0.123194 seconds
  0.101156 seconds
  0.373360 seconds (3.00 M allocations: 137.329 MiB, 24.90% gc time)
    Testing Gridap tests passed 
