Julia Version 1.6.0-DEV.430
Commit a23a4ff08d (2020-07-11 14:53 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Neo4j ─────────────────────── v2.0.0
  Installed MbedTLS_jll ───────────────── v2.16.6+1
  Installed DataAPI ───────────────────── v1.3.0
  Installed Compat ────────────────────── v3.13.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Parsers ───────────────────── v1.0.7
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.19
  Installed PooledArrays ──────────────── v0.5.3
  Installed IniFile ───────────────────── v0.5.0
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed OrderedCollections ────────── v1.3.0
  Installed Tables ────────────────────── v1.0.4
  Installed DocStringExtensions ───────── v0.8.2
  Installed DataFrames ────────────────── v0.21.4
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed CategoricalArrays ─────────── v0.8.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MbedTLS ───────────────────── v1.0.2
  Installed HTTP ──────────────────────── v0.8.16
Updating `~/.julia/environments/v1.6/Project.toml`
  [d2adbeaf] + Neo4j v2.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.8.1
  [34da2185] + Compat v3.13.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.4
  [864edb3b] + DataStructures v0.17.19
  [e2d170a0] + DataValueInterfaces v1.0.0
  [ffbed154] + DocStringExtensions v0.8.2
  [cd3eb016] + HTTP v0.8.16
  [83e8ac13] + IniFile v0.5.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.6+1
  [e1d29d7a] + Missings v0.4.3
  [d2adbeaf] + Neo4j v2.0.0
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Neo4j
Status `/tmp/jl_edm68D/Project.toml`
  [a93c6f00] DataFrames v0.21.4
  [ffbed154] DocStringExtensions v0.8.2
  [cd3eb016] HTTP v0.8.16
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [d2adbeaf] Neo4j v2.0.0
  [2a0f44e3] Base64
  [8dfed614] Test
Status `/tmp/jl_edm68D/Manifest.toml`
  [324d7699] CategoricalArrays v0.8.1
  [34da2185] Compat v3.13.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.4
  [864edb3b] DataStructures v0.17.19
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.2
  [cd3eb016] HTTP v0.8.16
  [83e8ac13] IniFile v0.5.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [e1d29d7a] Missings v0.4.3
  [d2adbeaf] Neo4j v2.0.0
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary:  | Pass  Total
Module imports |    2      2
[ Info: [TEST] Anonymous connection failed! Creating a Neo4j connection to localhost:7474 with neo4j:neo5j credentials...
Creating a connection to localhost: Error During Test at /home/pkgeval/.julia/packages/Neo4j/qLeq3/test/runtests.jl:15
  Got exception outside of a @test
  IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:7474/db/data/))
  
  Stacktrace:
    [1] wait_connected(x::Sockets.TCPSocket)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:532
    [2] connect
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:567 [inlined]
    [3] connect(addr::Sockets.IPv4, port::UInt64)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:553
    [4] getconnection(::Type{Sockets.TCPSocket}, host::SubString{String}, port::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:616
    [5] newconnection(pod::HTTP.ConnectionPool.Pod, T::Type, host::SubString{String}, port::SubString{String}, pipeline_limit::Int64, require_ssl_verification::Bool, idle_timeout::Int64; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:583
    [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, host::SubString{String}, port::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:527
    [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, url::HTTP.URIs.URI, req::HTTP.Messages.Request, body::Vector{UInt8}; proxy::Nothing, socket_type::Type, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionRequest ~/.julia/packages/HTTP/ZggHU/src/ConnectionRequest.jl:73
    [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/ZggHU/src/ExceptionRequest.jl:19
    [9] (::Base.var"#59#61"{Base.var"#59#60#62"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ Base ./error.jl:301
   [10] #request#1
      @ ~/.julia/packages/HTTP/ZggHU/src/RetryRequest.jl:44 [inlined]
   [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/ZggHU/src/MessageRequest.jl:51
   [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/ZggHU/src/BasicAuthRequest.jl:28
   [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:24
   [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:21
   [15] request(method::String, url::String, h::Vector{Pair{SubString{String},SubString{String}}}, b::Vector{UInt8}; headers::Dict{String,String}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:314
   [16] #get#12
      @ ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:391 [inlined]
   [17] getgraph(conn::Connection)
      @ Neo4j ~/.julia/packages/Neo4j/qLeq3/src/Neo4j.jl:102
   [18] top-level scope
      @ ~/.julia/packages/Neo4j/qLeq3/test/runtests.jl:22
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope
      @ ~/.julia/packages/Neo4j/qLeq3/test/runtests.jl:16
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ none:6
   [23] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [24] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [25] _start()
      @ Base ./client.jl:485
  caused by [exception 1]
  IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:7474/db/data/))
  
  Stacktrace:
    [1] wait_connected(x::Sockets.TCPSocket)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:532
    [2] connect
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:567 [inlined]
    [3] connect(addr::Sockets.IPv4, port::UInt64)
      @ Sockets /workspace/srcdir/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:553
    [4] getconnection(::Type{Sockets.TCPSocket}, host::SubString{String}, port::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:616
    [5] newconnection(pod::HTTP.ConnectionPool.Pod, T::Type, host::SubString{String}, port::SubString{String}, pipeline_limit::Int64, require_ssl_verification::Bool, idle_timeout::Int64; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:583
    [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, host::SubString{String}, port::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionPool ~/.julia/packages/HTTP/ZggHU/src/ConnectionPool.jl:527
    [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, url::HTTP.URIs.URI, req::HTTP.Messages.Request, body::Vector{UInt8}; proxy::Nothing, socket_type::Type, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ConnectionRequest ~/.julia/packages/HTTP/ZggHU/src/ConnectionRequest.jl:73
    [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/ZggHU/src/ExceptionRequest.jl:19
    [9] (::Base.var"#59#61"{Base.var"#59#60#62"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}})
      @ Base ./error.jl:301
   [10] #request#1
      @ ~/.julia/packages/HTTP/ZggHU/src/RetryRequest.jl:44 [inlined]
   [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/ZggHU/src/MessageRequest.jl:51
   [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/ZggHU/src/BasicAuthRequest.jl:28
   [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:24
   [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String},SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/ZggHU/src/RedirectRequest.jl:21
   [15] request(method::String, url::String, h::Vector{Pair{SubString{String},SubString{String}}}, b::Vector{UInt8}; headers::Dict{String,String}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:314
   [16] #get#12
      @ ~/.julia/packages/HTTP/ZggHU/src/HTTP.jl:391 [inlined]
   [17] getgraph(conn::Connection)
      @ Neo4j ~/.julia/packages/Neo4j/qLeq3/src/Neo4j.jl:102
   [18] getgraph()
      @ Neo4j ~/.julia/packages/Neo4j/qLeq3/src/Neo4j.jl:110
   [19] top-level scope
      @ ~/.julia/packages/Neo4j/qLeq3/test/runtests.jl:17
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [21] top-level scope
      @ ~/.julia/packages/Neo4j/qLeq3/test/runtests.jl:16
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ none:6
   [24] eval(m::Module, e::Any)
      @ Core ./boot.jl:340
   [25] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:260
   [26] _start()
      @ Base ./client.jl:485
  
Test Summary:                      | Error  Total
Creating a connection to localhost |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Neo4j/qLeq3/test/runtests.jl:15
ERROR: Package Neo4j errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
