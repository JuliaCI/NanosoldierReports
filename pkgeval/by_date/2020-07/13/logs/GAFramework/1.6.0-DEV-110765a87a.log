Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_mJSleh/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_mJSleh/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722043664980503
curgen: 20 fitness: 0.21722043664980503
curgen: 30 fitness: 0.21722043664980503
curgen: 40 fitness: 0.21722043664980503
curgen: 50 fitness: 0.21722074253379034
CoordinateCreature{Vector{Float64}}([0.222009574279552], -0.21722074253379034) 0.222009574279552 -0.21722074253379034
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257833682868002
curgen: 100 fitness: 3.2580070131810173
curgen: 150 fitness: 3.258200587588113
curgen: 200 fitness: 3.2582866846495344
curgen: 250 fitness: 3.2583151962417607
curgen: 300 fitness: 3.2583379045009857
curgen: 350 fitness: 3.2584056884370525
curgen: 400 fitness: 3.2584104415143935
curgen: 450 fitness: 3.2584115153929627
curgen: 500 fitness: 3.2584115153929627
CoordinateCreature{Vector{Float64}}([-0.22260708859373238, -0.22229305511936462, -0.22235978717395022, 0.22127231938140787, -0.22245684865137874, 0.22281970231461168, 0.22232249734818657, 0.2222002840463652, 0.22267184878504628, -0.22265492526306324, 0.22239284620795982, 0.22239973161233037, -0.22263654748748685, 0.22247033732939575, 0.22266169282462497], -3.2584115153929627) [-0.22260708859373238, -0.22229305511936462, -0.22235978717395022, 0.22127231938140787, -0.22245684865137874, 0.22281970231461168, 0.22232249734818657, 0.2222002840463652, 0.22267184878504628, -0.22265492526306324, 0.22239284620795982, 0.22239973161233037, -0.22263654748748685, 0.22247033732939575, 0.22266169282462497] -3.2584115153929627
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0035528607167236714
curgen: 100 fitness: -0.0035528607167236714
curgen: 150 fitness: -0.002373050637658025
curgen: 200 fitness: -0.002373050637658025
curgen: 250 fitness: -0.002373050637658025
curgen: 300 fitness: -0.002309093699437881
curgen: 350 fitness: -0.0016514735131920588
curgen: 400 fitness: -0.0015668012011644805
curgen: 450 fitness: -0.0014672342722690246
curgen: 500 fitness: -0.0014672342722690246
CoordinateCreature{Vector{Float64}}([0.0003427653641415896, -4.935319443486255e-5, -0.0017068381167960388, 0.0008176410282199936, -0.0003633711173403739, 0.000822295939959603, 0.0006919105551741361, -0.0004053442914218531, 0.00010355158719789655, -0.0004895680256505173, -0.0007748559947885569, -0.00024774305477052105, 0.0003912165030723405, -0.00021549726180725322, -0.001063479301175332], 0.0014672342722690246) [0.0003427653641415896, -4.935319443486255e-5, -0.0017068381167960388, 0.0008176410282199936, -0.0003633711173403739, 0.000822295939959603, 0.0006919105551741361, -0.0004053442914218531, 0.00010355158719789655, -0.0004895680256505173, -0.0007748559947885569, -0.00024774305477052105, 0.0003912165030723405, -0.00021549726180725322, -0.001063479301175332] 0.0014672342722690246
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
