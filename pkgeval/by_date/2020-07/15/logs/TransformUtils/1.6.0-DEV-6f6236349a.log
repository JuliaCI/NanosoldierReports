Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_NRZYWn/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_NRZYWn/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06145309146189788 -0.039220379664738736; -0.06145309146189788 0.0 0.04103999154070739; 0.039220379664738736 -0.04103999154070739 0.0])
dAA = so3([0.0 -0.11534003562663242 -0.02876101496479358; 0.11534003562663242 0.0 0.07505545103891285; 0.02876101496479358 -0.07505545103891285 0.0])
dAA = so3([0.0 -0.04082046348977886 0.22042963629629; 0.04082046348977886 0.0 0.11335829789097443; -0.22042963629629 -0.11335829789097443 0.0])
dAA = Quaternion(0.9990029571032705, [-0.022912378995678048, 0.03333714758290915, 0.01888780502639999])
dAA = SO3([0.9725789914932482 -0.10318976382831344 0.20842739250643907; 0.09996069621653819 0.9946517408126253 0.02599564791112836; -0.20999515355807927 -0.004448273763077458 0.977692307601245])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9562948046189743 -0.27577359349950664 -0.09720685051541678; 0.28912697851153496 0.9414296316356205 0.1735391568932216; 0.04365589256386927 -0.1940597171150898 0.9800178514892793]), [-0.4103999154070739, -0.3922037966473873, -0.6145309146189788])
xj = SE3(SO3([0.9817084770994406 -0.0993906269147987 0.1623883286217958; 0.08062991976660454 0.9896980975215255 0.118306769885345; -0.17247400392386086 -0.1030494009868876 0.9796088703797632]), [-1.1335829789097442, 2.2042963629629, 0.4082046348977885])
Dx = SE3(SO3([0.9545854947949858 0.18660296685031372 0.23226249350610356; -0.16135162242278536 0.9791381633290217 -0.12350753440258042; -0.2504639436496738 0.08042257068342454 0.9647797795642913]), [0.10379047270775721, 2.445385209561086, 1.5231918924001995])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
