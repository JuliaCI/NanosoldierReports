Julia Version 1.6.0-DEV.462
Commit 09eee44bf6 (2020-07-14 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Xi5JAN/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Xi5JAN/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.01871066172852788 -0.06941403668138428; 0.01871066172852788 0.0 -0.0776147950170536; 0.06941403668138428 0.0776147950170536 0.0])
dAA = so3([0.0 0.02905554569170356 -0.045987967715560386; -0.02905554569170356 0.0 0.20992532297749103; 0.045987967715560386 -0.20992532297749103 0.0])
dAA = so3([0.0 0.031775069652560675 0.027754069331418676; -0.031775069652560675 0.0 -0.10009769976713508; -0.027754069331418676 0.10009769976713508 0.0])
dAA = Quaternion(0.9989947576310991, [0.038742254059626655, -0.022373882057902337, -0.0028144942032173118])
dAA = SO3([0.9864449014612237 -0.15972036339252046 -0.03762794040228834; 0.16256013189377325 0.9824596874444801 0.09136282649509955; 0.022375430718446634 -0.09624119733386438 0.9951065129100042])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9909770475422974 0.09856954484502671 -0.09082145161466752; -0.039695287481160926 0.8630515354106771 0.5035537025750687; 0.1280186525321178 -0.49540497782553317 0.8591770088576298]), [0.776147950170536, -0.6941403668138428, 0.1871066172852788])
xj = SE3(SO3([0.9936690868145046 0.0074984775124554036 -0.11209602465843169; -0.02901435844716683 0.9810499040321499 -0.1915704904269158; 0.10853530721902362 0.19361006852306237 0.975056525773438]), [1.0009769976713507, 0.27754069331418674, -0.3177506965256067])
Dx = SE3(SO3([0.9997495349674692 -0.0067265387785927465 0.021345280705325986; 0.019135691540968107 0.7515203558014101 -0.6594323165612761; -0.011605715901140873 0.6596756085320892 0.7514608432022521]), [0.11959811363726891, 1.1108809541066065, 0.0351124983104357])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
