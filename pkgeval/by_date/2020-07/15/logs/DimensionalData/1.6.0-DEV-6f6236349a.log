Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ConstructionBase ─ v1.0.0
  Installed RecipesBase ────── v1.0.1
  Installed DimensionalData ── v0.11.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [0703355e] + DimensionalData v0.11.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [187b0558] + ConstructionBase v1.0.0
  [0703355e] + DimensionalData v0.11.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [ade2ca70] + Dates
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4ec0a83e] + Unicode
    Testing DimensionalData
Status `/tmp/jl_eDqTLP/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [861a8166] Combinatorics v1.0.2
  [187b0558] ConstructionBase v1.0.0
  [150eb455] CoordinateTransformations v0.6.0
  [0703355e] DimensionalData v0.11.0
  [31c24e10] Distributions v0.23.4
  [e30172f5] Documenter v0.25.0
  [6fe1bfb0] OffsetArrays v1.1.1
  [91a5bcdd] Plots v1.5.4
  [3cdcf5f2] RecipesBase v1.0.1
  [f3b207a7] StatsPlots v0.14.6
  [1986cc42] Unitful v1.3.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_eDqTLP/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.9.1
  [13072b0f] AxisAlgorithms v1.0.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [6e34b625] Bzip2_jll v1.0.6+2
  [aaaa29a8] Clustering v0.14.1
  [35d6a980] ColorSchemes v3.9.0
  [3da002f7] ColorTypes v0.10.6
  [5ae59095] Colors v0.12.3
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [187b0558] ConstructionBase v1.0.0
  [d38c429a] Contour v0.5.4
  [150eb455] CoordinateTransformations v0.6.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [0703355e] DimensionalData v0.11.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ffbed154] DocStringExtensions v0.8.2
  [e30172f5] Documenter v0.25.0
  [c87230d0] FFMPEG v0.3.0
  [b22a6f82] FFMPEG_jll v4.1.0+3
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.13
  [6a86dc24] FiniteDiff v2.4.1
  [53c48c17] FixedPointNumbers v0.8.2
  [f6369f11] ForwardDiff v0.10.12
  [d7e528f0] FreeType2_jll v2.10.1+2
  [559328eb] FriBidi_jll v1.0.5+3
  [28b8d3ca] GR v0.50.1
  [5c1252a2] GeometryBasics v0.2.15
  [4d00f742] GeometryTypes v0.8.3
  [cd3eb016] HTTP v0.8.16
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.10
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [c1c5ebd0] LAME_jll v3.100.0+1
  [dd192d2f] LibVPX_jll v1.8.1+1
  [d3d80556] LineSearches v7.0.1
  [856f044c] MKL_jll v2020.1.216+0
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.3
  [6f286f6a] MultivariateStats v0.7.0
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.4
  [b8a86587] NearestNeighbors v0.4.4
  [510215fc] Observables v0.3.1
  [6fe1bfb0] OffsetArrays v1.1.1
  [e7412a2a] Ogg_jll v1.3.4+0
  [4536629a] OpenBLAS_jll v0.3.9+5
  [458c3c95] OpenSSL_jll v1.1.1+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [91d4177d] Opus_jll v1.3.1+1
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.7
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.5
  [91a5bcdd] Plots v1.5.4
  [85a6dd25] PositiveFactorizations v0.2.3
  [1fd47b50] QuadGK v2.4.0
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v1.0.1
  [01d81517] RecipesPipeline v0.1.11
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [992d4aef] Showoff v0.3.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [f3b207a7] StatsPlots v0.14.6
  [09ab397b] StructArrays v0.4.4
  [ab02a1b2] TableOperations v0.2.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.3.0
  [cc8bc4a8] Widgets v0.6.2
  [efce3f68] WoodburyMatrices v0.5.2
  [83775a58] Zlib_jll v1.2.11+14
  [0ac62f75] libass_jll v0.14.0+2
  [f638f0a6] libfdk_aac_jll v0.1.6+2
  [f27f6e37] libvorbis_jll v1.3.6+4
  [1270edf5] x264_jll v2019.5.25+2
  [dfaa095f] x265_jll v3.0.0+1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary:       | Pass  Total
dims creation macro |   27     27
Test Summary: | Pass  Total
dims          |    5      5
Test Summary:       | Pass  Total
arbitrary dim names |    4      4
Test Summary:                              | Pass  Total
repeating dims of the same type is allowed |    5      5
Test Summary:                    | Pass  Total
applying function on a dimension |    3      3
Test Summary: | Pass  Total
permutedims   |   10     10
Test Summary: | Pass  Total
slicedims     |    8      8
Test Summary: | Pass  Total
dims2indices  |   14     14
Test Summary:                 | Pass  Total
dims2indices with Transformed |    2      2
Test Summary: | Pass  Total
dimnum        |    4      4
Test Summary: | Pass  Total
reducedims    |    7      7
Test Summary: | Pass  Total
dims          |    9      9
Test Summary: | Pass  Total
hasdim        |    9      9
Test Summary: | Pass  Total
setdims       |    1      1
Test Summary: | Pass  Total
swapdims      |    9      9
Test Summary:                               | Pass  Total
getindex for single integers returns values |    4      4
Test Summary:                                        | Pass  Total
LinearIndex getindex returns an Array, except Vector |    2      2
Test Summary:                                                    | Pass  Total
getindex returns DimensionArray slices with the right dimensions |   27     27
Test Summary:                                | Pass  Total
view returns DimensionArray containing views |   30     30
Test Summary:                                     |
indexing into empty dims is just regular indexing | No tests
Test Summary:                                    | Pass  Total
arbitrary dimension names also work for indexing |    3      3
Test Summary: | Pass  Total
size and axes |    4      4
Test Summary: | Pass  Total
OffsetArray   |    7      7
Test Summary: | Pass  Total
similar       |   13     13
Test Summary: | Pass  Total
broadcast     |    5      5
Test Summary: | Pass  Total
eachindex     |    2      2
Test Summary: | Pass  Total
convert       |    2      2
Test Summary: | Pass  Total
copy          |   10     10
Test Summary: | Pass  Total
copy!         |    5      5
Test Summary: | Pass  Total
constructor   |    2      2
Test Summary:                       | Pass  Total
Binary broadcasting operations (.+) |   39     39
Test Summary:      | Pass  Total
identify IndexMode |   18     18
Test Summary: | Pass  Total
order         |    6      6
Test Summary: | Pass  Total
reverse       |    9      9
Test Summary: | Pass  Total
slicbounds    |    3      3
Test Summary: | Pass  Total
slicemode     |   16     16
Test Summary: | Pass  Total
bounds        |   15     15
Test Summary:       | Pass  Total
selector primitives |  185    185
Test Summary:        | Pass  Total
Selectors on Sampled |  231    231
Test Summary:                      | Pass  Total
Selectors on Sampled and Intervals |   13     13
Test Summary:        | Pass  Total
Selectors on NoIndex |    3      3
Test Summary:            | Pass  Total
Selectors on Categorical |    7      7
Test Summary: | Pass  Total
Where         |    1      1
Test Summary:   | Pass  Total
TranformedIndex |    7      7
Test Summary: | Pass  Total
*             |   42     42
Test Summary: | Pass  Total
map           |    2      2
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:110
  Test threw exception
  Expression: mapreduce((x->begin
                x > 3
            end), +, da; dims = X) == [0 1]
  MethodError: no method matching iterate(::Type{X})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:613
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:613
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s73",var"#s72"} where var"#s72"<:Dict where var"#s73", Base.ValueIterator{var"#s59"} where var"#s59"<:Dict} at dict.jl:679
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, region::Type)
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type)
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::var"#24#29", op::typeof(+), A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type)
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Type)
      @ Base ./reducedim.jl:324
    [7] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
    [8] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:110
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [10] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:111
  Test threw exception
  Expression: mapreduce((x->begin
                x > 3
            end), +, da; dims = 2) == ([0 1])'
  ArgumentError: CartesianIndex(1,) not found in Y: range(-38.0, stop=-36.0, length=2)
  Stacktrace:
    [1] selvalnotfound(dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, selval::CartesianIndex{1})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:281
    [2] at(dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, selval::CartesianIndex{1}, atol::Nothing, rtol::Nothing)
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:270
    [3] at(#unused#::Points, mode::Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points}, dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, sel::At{CartesianIndex{1},Nothing,Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:256
    [4] sel2indices(sampling::Points, mode::Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points}, dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, sel::At{CartesianIndex{1},Nothing,Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:218
    [5] sel2indices(mode::Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points}, dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, sel::At{CartesianIndex{1},Nothing,Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:212
    [6] sel2indices(sel::At{CartesianIndex{1},Nothing,Nothing}, mode::Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points}, dim::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:188
    [7] (::DimensionalData.var"#17#18")(d::Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}, l::At{CartesianIndex{1},Nothing,Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:178
    [8] map(f::DimensionalData.var"#17#18", t::Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}}, s::Tuple{Int64,At{CartesianIndex{1},Nothing,Nothing}})
      @ Base ./tuple.jl:178
    [9] sel2indices(dims::Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}}, lookup::Tuple{Int64,At{CartesianIndex{1},Nothing,Nothing}})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:177
   [10] sel2indices(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, lookup::Tuple{Int64,At{CartesianIndex{1},Nothing,Nothing}})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/selector.jl:175
   [11] getindex(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, i::Int64, I::CartesianIndex{1})
      @ DimensionalData ~/.julia/packages/DimensionalData/w9uOz/src/array.jl:108
   [12] macro expansion
      @ ./reducedim.jl:270 [inlined]
   [13] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [14] _mapreducedim!(f::var"#25#30", op::typeof(+), R::Matrix{Int64}, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing})
      @ Base ./reducedim.jl:269
   [15] mapreducedim!(f::Function, op::Function, R::Matrix{Int64}, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing})
      @ Base ./reducedim.jl:277
   [16] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Int64)
      @ Base ./reducedim.jl:324
   [17] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:111
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [20] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:112
  Test threw exception
  Expression: dims(mapreduce((x->begin
                    x > 3
                end), +, da; dims = Y())) == (X(LinRange(143.0, 145.0, 2), Sampled(Ordered(), Regular(2.0), Points()), nothing), Y([-37.0], Sampled(Ordered(), Regular(4.0), Points()), nothing))
  MethodError: no method matching iterate(::Y{Colon,Auto{AutoOrder},Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:613
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:613
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s73",var"#s72"} where var"#s72"<:Dict where var"#s73", Base.ValueIterator{var"#s59"} where var"#s59"<:Dict} at dict.jl:679
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::var"#26#31", op::typeof(+), A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
    [8] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:112
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [10] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:116
  Test threw exception
  Expression: reduce(+, da; dims = X) == [4 6]
  MethodError: no method matching iterate(::Type{X})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:613
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:613
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s73",var"#s72"} where var"#s72"<:Dict where var"#s73", Base.ValueIterator{var"#s59"} where var"#s59"<:Dict} at dict.jl:679
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, region::Type)
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type)
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Type)
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Type)
      @ Base ./reducedim.jl:324
    [7] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#636
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:116
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:117
  Test threw exception
  Expression: reduce(+, da; dims = Y()) == ([3 7])'
  MethodError: no method matching iterate(::Y{Colon,Auto{AutoOrder},Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:613
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:613
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s73",var"#s72"} where var"#s72"<:Dict where var"#s73", Base.ValueIterator{var"#s59"} where var"#s59"<:Dict} at dict.jl:679
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#636
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:117
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:118
  Test threw exception
  Expression: dims(reduce(+, da; dims = Y())) == (X(LinRange(143.0, 145.0, 2), Sampled(Ordered(), Regular(2.0), Points()), nothing), Y([-37.0], Sampled(Ordered(), Regular(4.0), Points()), nothing))
  MethodError: no method matching iterate(::Y{Colon,Auto{AutoOrder},Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:613
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:613
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s73",var"#s72"} where var"#s72"<:Dict where var"#s73", Base.ValueIterator{var"#s59"} where var"#s59"<:Dict} at dict.jl:679
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, region::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimensionalArray{Int64,2,Tuple{X{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing},Y{LinRange{Float64},Sampled{Ordered{Forward,Forward,Forward},Regular{Float64},Points},Nothing}},Tuple{},Matrix{Int64},String,Nothing}, dims::Y{Colon,Auto{AutoOrder},Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#634
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#636
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:118
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/w9uOz/test/methods.jl:81
  
Test Summary:              | Pass  Error  Total
dimension reducing methods |   29      6     35
ERROR: LoadError: LoadError: Some tests did not pass: 29 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/methods.jl:80
in expression starting at /home/pkgeval/.julia/packages/DimensionalData/w9uOz/test/runtests.jl:10
ERROR: Package DimensionalData errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#60
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
