Julia Version 1.6.0-DEV.462
Commit 09eee44bf6 (2020-07-14 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_d8ourR/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_d8ourR/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.102688 seconds (1.43 M allocations: 76.094 MiB, 1.54% gc time)
Running: chebyshev_quadrature with k=1
  1.925732 seconds (2.21 M allocations: 124.927 MiB, 7.72% gc time)
Running: chebyshev_quadrature with k=2
  0.286611 seconds (421.68 k allocations: 23.842 MiB)
Running: chebyshev_quadrature with k=3
  0.357172 seconds (541.30 k allocations: 29.188 MiB, 6.21% gc time)
Running: chebyshev_quadrature with k=4
  0.343904 seconds (485.14 k allocations: 25.834 MiB)
Running: jacobi_quadrature with α=β=1
 41.642630 seconds (38.97 M allocations: 3.079 GiB, 10.19% gc time)
Running: laguerre_quadrature with k=1
  3.108160 seconds (3.29 M allocations: 180.186 MiB, 2.24% gc time)
Running: legendre_quadrature
  0.257136 seconds (213.06 k allocations: 11.992 MiB, 11.54% gc time)
Running: lobatto_quadrature
  0.408128 seconds (339.98 k allocations: 20.118 MiB)
Running: radau_quadrature
  0.275987 seconds (322.34 k allocations: 19.129 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.712808 seconds (100.02 M allocations: 1.491 GiB, 0.38% gc time)
Running: rectangle_rule_midpoint.
  0.177025 seconds (173.08 k allocations: 3.827 MiB, 15.95% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.035493 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: simpsons_rule
  0.042921 seconds (46.62 k allocations: 2.053 MiB)
Running: simpsons38_rule
  0.094269 seconds (111.25 k allocations: 5.794 MiB)
Running: trapezoidal_rule
  0.317964 seconds (1.51 M allocations: 25.685 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.113280 seconds (55.39 k allocations: 3.271 MiB)
Running: chebyshev_quadrature with k=1
  0.398393 seconds (274.34 k allocations: 13.719 MiB)
Running: chebyshev_quadrature with k=2
  0.150924 seconds (115.67 k allocations: 3.755 MiB)
Running: chebyshev_quadrature with k=3
  0.167690 seconds (105.02 k allocations: 3.601 MiB)
Running: chebyshev_quadrature with k=4
  0.144657 seconds (87.63 k allocations: 3.246 MiB)
Running: jacobi_quadrature with α=β=1
  2.406322 seconds (533.96 k allocations: 163.027 MiB, 7.45% gc time)
Running: legendre_quadrature
  0.165925 seconds (61.93 k allocations: 3.406 MiB)
Running: lobatto_quadrature
  0.022782 seconds (16.47 k allocations: 1.008 MiB)
Running: radau_quadrature
  0.022389 seconds (16.46 k allocations: 1.007 MiB)
Running: rectangle_rule_left
 32.117660 seconds (471.41 M allocations: 7.025 GiB, 3.30% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.925888 seconds (476.96 M allocations: 7.107 GiB, 3.21% gc time)
Running: simpsons_rule
  0.000102 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065190 seconds (19.62 k allocations: 1.164 MiB)
Running: trapezoidal_rule
  0.059594 seconds (18.05 k allocations: 1.069 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028884 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.091781 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.125192 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.120047 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.114496 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.393590 seconds (377.77 k allocations: 19.372 MiB, 6.41% gc time)
Running: legendre_quadrature
  0.056727 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000157 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000047 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000640 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000411 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000579 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000039 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025610 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.025932 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.105395 seconds (74.89 k allocations: 4.274 MiB)
Running: chebyshev_quadrature with k=1
  0.197513 seconds (238.55 k allocations: 13.162 MiB)
Running: chebyshev_quadrature with k=2
  0.215571 seconds (293.30 k allocations: 16.138 MiB)
Running: chebyshev_quadrature with k=3
  0.222417 seconds (274.17 k allocations: 14.620 MiB, 11.67% gc time)
Running: chebyshev_quadrature with k=4
  0.214078 seconds (274.18 k allocations: 14.530 MiB)
Running: jacobi_quadrature with α=β=1
  2.005277 seconds (463.29 k allocations: 163.603 MiB, 3.82% gc time)
Running: legendre_quadrature
  0.143954 seconds (191.12 k allocations: 10.830 MiB)
Running: lobatto_quadrature
  0.158202 seconds (202.31 k allocations: 11.509 MiB)
Running: radau_quadrature
  0.163802 seconds (202.31 k allocations: 11.524 MiB)
Running: rectangle_rule_left
  1.165666 seconds (19.42 k allocations: 1.156 MiB, 1.73% gc time)
Running: rectangle_rule_midpoint
  0.026759 seconds (25.31 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  1.206293 seconds (17.91 k allocations: 1.068 MiB)
Running: simpsons_rule
  0.031455 seconds (28.33 k allocations: 1.738 MiB)
Running: simpsons38_rule
  0.036169 seconds (43.49 k allocations: 2.684 MiB)
Running: trapezoidal_rule
  0.036690 seconds (44.55 k allocations: 1.767 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.053239 seconds (236.48 k allocations: 5.078 MiB)
Running: chebyshev_quadrature with k=1
  0.267553 seconds (245.70 k allocations: 13.271 MiB)
Running: chebyshev_quadrature with k=2
  0.273608 seconds (301.07 k allocations: 16.163 MiB)
Running: chebyshev_quadrature with k=3
  0.235279 seconds (281.60 k allocations: 14.648 MiB, 9.16% gc time)
Running: chebyshev_quadrature with k=4
  0.212559 seconds (281.62 k allocations: 14.674 MiB)
Running: hermite_quadrature with k=2
 14.997746 seconds (21.99 M allocations: 1.119 GiB, 8.95% gc time)
Running: jacobi_quadrature with α=β=1
  0.408100 seconds (473.40 k allocations: 49.850 MiB)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.240108 seconds (286.08 k allocations: 15.486 MiB)
Running: legendre_quadrature
  0.246381 seconds (198.21 k allocations: 11.160 MiB, 21.92% gc time)
Running: lobatto_quadrature
  0.233331 seconds (223.88 k allocations: 37.323 MiB)
Running: radau_quadrature
  0.283680 seconds (220.47 k allocations: 29.985 MiB, 12.62% gc time)
Running: rectangle_rule_left
  0.027725 seconds (22.58 k allocations: 1.314 MiB)
Running: rectangle_rule_midpoint
  0.029475 seconds (27.28 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.026602 seconds (19.15 k allocations: 1.130 MiB)
Running: simpsons_rule
  0.039718 seconds (40.58 k allocations: 2.088 MiB)
Running: simpsons38_rule
  0.045446 seconds (58.88 k allocations: 3.089 MiB)
Running: trapezoidal_rule
  0.033394 seconds (30.93 k allocations: 1.709 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.035422 seconds (46.98 k allocations: 2.085 MiB)
Running: chebyshev_quadrature with k=1
  0.201302 seconds (240.81 k allocations: 13.023 MiB)
Running: chebyshev_quadrature with k=2
  0.262929 seconds (295.70 k allocations: 15.922 MiB, 11.03% gc time)
Running: chebyshev_quadrature with k=3
  0.217049 seconds (276.48 k allocations: 14.429 MiB)
Running: chebyshev_quadrature with k=4
  0.266360 seconds (276.49 k allocations: 14.429 MiB)
Running: hermite_quadrature with k=2
  0.235189 seconds (176.19 k allocations: 9.899 MiB, 14.31% gc time)
Running: jacobi_quadrature with α=β=1
  7.588304 seconds (465.93 k allocations: 1.175 GiB, 12.87% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.216562 seconds (280.96 k allocations: 15.285 MiB)
Running: legendre_quadrature
  0.157808 seconds (193.39 k allocations: 10.942 MiB)
Running: lobatto_quadrature
  0.217151 seconds (214.25 k allocations: 23.034 MiB, 6.65% gc time)
Running: radau_quadrature
  0.214177 seconds (213.40 k allocations: 20.965 MiB)
Running: rectangle_rule_left
  0.027544 seconds (20.17 k allocations: 1.199 MiB)
Running: rectangle_rule_midpoint
  0.028795 seconds (26.07 k allocations: 1.596 MiB)
Running: rectangle_rule_right
  0.025445 seconds (17.93 k allocations: 1.072 MiB)
Running: simpsons_rule
  0.035132 seconds (32.85 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.056442 seconds (49.45 k allocations: 2.836 MiB, 27.35% gc time)
Running: trapezoidal_rule
  0.029208 seconds (25.64 k allocations: 1.537 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.042344 seconds (31.42 k allocations: 1.880 MiB)
Running: chebyshev_quadrature with k=1
  0.215095 seconds (239.09 k allocations: 13.237 MiB)
Running: chebyshev_quadrature with k=2
  0.230251 seconds (293.88 k allocations: 16.251 MiB)
Running: chebyshev_quadrature with k=3
  0.255095 seconds (274.75 k allocations: 14.637 MiB, 7.16% gc time)
Running: chebyshev_quadrature with k=4
  0.239627 seconds (274.76 k allocations: 14.466 MiB)
Running: jacobi_quadrature with α=β=1
  2.601597 seconds (463.92 k allocations: 194.710 MiB, 11.53% gc time)
Running: legendre_quadrature
  0.204227 seconds (191.67 k allocations: 10.849 MiB, 7.31% gc time)
Running: lobatto_quadrature
  0.172202 seconds (202.86 k allocations: 11.536 MiB)
Running: radau_quadrature
  0.177719 seconds (202.86 k allocations: 11.535 MiB)
Running: rectangle_rule_left
  0.317042 seconds (19.98 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.027607 seconds (25.66 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.115943 seconds (18.27 k allocations: 1.087 MiB)
Running: simpsons_rule
  0.036864 seconds (29.08 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.040032 seconds (44.27 k allocations: 2.717 MiB)
Running: trapezoidal_rule
  0.028358 seconds (45.53 k allocations: 1.803 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037015 seconds (32.06 k allocations: 1.832 MiB)
Running: chebyshev_quadrature with k=1
  0.214038 seconds (239.68 k allocations: 13.184 MiB, 8.05% gc time)
Running: chebyshev_quadrature with k=2
  0.226996 seconds (294.50 k allocations: 16.169 MiB)
Running: chebyshev_quadrature with k=3
  0.208186 seconds (275.32 k allocations: 14.559 MiB)
Running: chebyshev_quadrature with k=4
  0.216584 seconds (275.33 k allocations: 14.645 MiB, 8.09% gc time)
Running: jacobi_quadrature with α=β=1
  1.704873 seconds (464.61 k allocations: 149.348 MiB, 8.97% gc time)
Running: legendre_quadrature
  0.153256 seconds (192.27 k allocations: 10.858 MiB)
Running: lobatto_quadrature
  0.190912 seconds (203.47 k allocations: 11.557 MiB, 8.40% gc time)
Running: radau_quadrature
  0.176654 seconds (203.45 k allocations: 11.551 MiB)
Running: rectangle_rule_left
  1.318546 seconds (20.27 k allocations: 1.198 MiB)
Running: rectangle_rule_midpoint
  0.027158 seconds (25.68 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  1.203347 seconds (18.27 k allocations: 1.087 MiB)
Running: simpsons_rule
  0.033531 seconds (29.84 k allocations: 1.799 MiB)
Running: simpsons38_rule
  0.040327 seconds (45.03 k allocations: 2.746 MiB)
Running: trapezoidal_rule
  0.029637 seconds (57.81 k allocations: 2.004 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.181689 seconds (150.20 k allocations: 8.796 MiB)
Running: chebyshev_quadrature with k=1
  0.149004 seconds (91.18 k allocations: 3.258 MiB)
Running: chebyshev_quadrature with k=2
  0.140438 seconds (126.95 k allocations: 3.948 MiB)
Running: chebyshev_quadrature with k=3
  0.143315 seconds (115.53 k allocations: 3.781 MiB)
Running: chebyshev_quadrature with k=4
  0.140934 seconds (95.06 k allocations: 3.376 MiB)
Running: jacobi_quadrature with α=β=1
  1.839242 seconds (508.32 k allocations: 168.951 MiB, 10.04% gc time)
Running: legendre_quadrature
  0.103303 seconds (38.29 k allocations: 2.073 MiB)
Running: lobatto_quadrature
  0.000123 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000054 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.050968 seconds (590.00 M allocations: 8.792 GiB, 2.71% gc time)
Running: rectangle_rule_midpoint
  0.000032 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.203076 seconds (592.75 M allocations: 8.833 GiB, 2.63% gc time)
Running: simpsons_rule
  0.000080 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030418 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021954 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.013638 seconds (565.30 M allocations: 8.434 GiB, 3.89% gc time)
Running: chebyshev_quadrature with k=1
  0.489258 seconds (437.17 k allocations: 23.753 MiB)
Running: chebyshev_quadrature with k=2
 13.982234 seconds (494.17 k allocations: 4.041 GiB, 3.73% gc time)
Running: chebyshev_quadrature with k=3
  6.587211 seconds (289.23 k allocations: 1.643 GiB, 4.39% gc time)
Running: chebyshev_quadrature with k=4
  8.034390 seconds (289.24 k allocations: 2.262 GiB, 2.66% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.063170 seconds (502.42 k allocations: 13.255 GiB, 3.70% gc time)
Running: legendre_quadrature.
  5.817321 seconds (230.64 k allocations: 1.976 GiB, 2.88% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.721461 seconds (8.24 M allocations: 13.384 GiB, 4.68% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.484882 seconds (7.24 M allocations: 13.369 GiB, 3.02% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.098355 seconds (22.92 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.282573 seconds (31.26 k allocations: 1.890 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.419849 seconds (23.13 k allocations: 1.367 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.747084 seconds (600.04 M allocations: 8.943 GiB, 8.25% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.969494 seconds (600.05 M allocations: 8.943 GiB, 8.24% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.415167 seconds (600.03 M allocations: 8.943 GiB, 8.63% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.059550 seconds (128.64 k allocations: 3.637 MiB)
Running: chebyshev_quadrature with k=1
  0.214264 seconds (256.44 k allocations: 13.673 MiB)
Running: chebyshev_quadrature with k=2
  0.237250 seconds (282.52 k allocations: 14.801 MiB)
Running: chebyshev_quadrature with k=3
  0.249834 seconds (259.78 k allocations: 13.142 MiB)
Running: chebyshev_quadrature with k=4
  0.249903 seconds (259.80 k allocations: 13.143 MiB)
Running: jacobi_quadrature with α=β=1
  0.367979 seconds (404.04 k allocations: 35.369 MiB)
Running: laguerre_quadrature with k=2
  0.202349 seconds (186.25 k allocations: 10.594 MiB)
Running: legendre_quadrature
  0.163058 seconds (150.79 k allocations: 8.189 MiB)
Running: lobatto_quadrature
  0.041209 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.034507 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.060894 seconds (19.51 k allocations: 1.134 MiB)
Running: rectangle_rule_midpoint
  0.050187 seconds (26.17 k allocations: 1.581 MiB)
Running: rectangle_rule_right
  0.064173 seconds (18.02 k allocations: 1.058 MiB)
Running: simpsons_rule
  0.001807 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.072448 seconds (80.43 k allocations: 3.415 MiB)
Running: trapezoidal_rule
  0.194312 seconds (2.39 M allocations: 37.702 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001142 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.105120 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.106573 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.133085 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.127305 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  6.458879 seconds (401.07 k allocations: 906.041 MiB, 2.40% gc time)
Running: legendre_quadrature
  0.065856 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000212 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000177 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.305630 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000420 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.350203 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000796 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000447 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.098953 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.101860 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.108285 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.093655 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.081901 seconds (387.27 k allocations: 253.335 MiB, 6.61% gc time)
Running: legendre_quadrature
  0.060998 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000109 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.406522 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000846 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.810494 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000111 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001677 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
