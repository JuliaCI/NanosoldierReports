Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_0PrRCh/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_0PrRCh/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.114988 seconds (1.41 M allocations: 76.353 MiB, 7.46% gc time)
Running: chebyshev_quadrature with k=1
  1.757800 seconds (2.26 M allocations: 130.185 MiB, 3.14% gc time)
Running: chebyshev_quadrature with k=2
  0.365862 seconds (428.78 k allocations: 24.696 MiB)
Running: chebyshev_quadrature with k=3
  0.449679 seconds (549.69 k allocations: 30.241 MiB, 7.50% gc time)
Running: chebyshev_quadrature with k=4
  0.381866 seconds (492.38 k allocations: 26.762 MiB, 4.50% gc time)
Running: jacobi_quadrature with α=β=1
 39.583231 seconds (39.54 M allocations: 3.155 GiB, 8.84% gc time)
Running: laguerre_quadrature with k=1
  3.257368 seconds (3.36 M allocations: 188.482 MiB, 2.62% gc time)
Running: legendre_quadrature
  0.191189 seconds (217.76 k allocations: 12.525 MiB)
Running: lobatto_quadrature
  0.347139 seconds (348.35 k allocations: 20.993 MiB, 6.32% gc time)
Running: radau_quadrature
  0.263397 seconds (330.32 k allocations: 19.961 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.213677 seconds (100.02 M allocations: 1.491 GiB, 0.40% gc time)
Running: rectangle_rule_midpoint.
  0.166991 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.061655 seconds (100.02 M allocations: 1.491 GiB, 0.20% gc time)
Running: simpsons_rule
  0.044518 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.103668 seconds (113.98 k allocations: 6.072 MiB)
Running: trapezoidal_rule
  0.313294 seconds (1.52 M allocations: 25.853 MiB, 8.27% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.132199 seconds (56.27 k allocations: 3.380 MiB)
Running: chebyshev_quadrature with k=1
  0.436707 seconds (279.15 k allocations: 14.262 MiB)
Running: chebyshev_quadrature with k=2
  0.173421 seconds (116.32 k allocations: 3.844 MiB, 14.84% gc time)
Running: chebyshev_quadrature with k=3
  0.145850 seconds (105.67 k allocations: 3.693 MiB)
Running: chebyshev_quadrature with k=4
  0.146618 seconds (88.28 k allocations: 3.337 MiB)
Running: jacobi_quadrature with α=β=1
  2.365438 seconds (540.02 k allocations: 163.850 MiB, 4.53% gc time)
Running: legendre_quadrature
  0.208220 seconds (63.13 k allocations: 3.551 MiB, 27.55% gc time)
Running: lobatto_quadrature
  0.020804 seconds (17.00 k allocations: 1.057 MiB)
Running: radau_quadrature
  0.020423 seconds (16.98 k allocations: 1.057 MiB)
Running: rectangle_rule_left
 30.518827 seconds (471.41 M allocations: 7.025 GiB, 2.57% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.175757 seconds (476.96 M allocations: 7.107 GiB, 1.71% gc time)
Running: simpsons_rule
  0.000081 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.071759 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.062959 seconds (18.50 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.045465 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.097864 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.096797 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.103572 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.104459 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.345347 seconds (382.46 k allocations: 20.069 MiB, 9.16% gc time)
Running: legendre_quadrature
  0.053851 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000146 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000123 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000528 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000511 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000093 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022078 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020754 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065340 seconds (76.98 k allocations: 4.493 MiB)
Running: chebyshev_quadrature with k=1
  0.193763 seconds (242.91 k allocations: 13.703 MiB)
Running: chebyshev_quadrature with k=2
  0.332136 seconds (298.48 k allocations: 16.791 MiB, 9.33% gc time)
Running: chebyshev_quadrature with k=3
  0.268432 seconds (278.52 k allocations: 15.191 MiB)
Running: chebyshev_quadrature with k=4
  0.253286 seconds (278.54 k allocations: 15.121 MiB)
Running: jacobi_quadrature with α=β=1
  2.842811 seconds (470.08 k allocations: 164.540 MiB, 3.17% gc time)
Running: legendre_quadrature
  0.168436 seconds (195.40 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.257030 seconds (206.77 k allocations: 12.016 MiB, 6.16% gc time)
Running: radau_quadrature
  0.199553 seconds (206.76 k allocations: 12.013 MiB)
Running: rectangle_rule_left
  1.465097 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.027013 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.356531 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.028236 seconds (29.27 k allocations: 1.832 MiB)
Running: simpsons38_rule
  0.037795 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.028090 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043500 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.245335 seconds (250.11 k allocations: 13.822 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=2
  0.315459 seconds (306.30 k allocations: 16.841 MiB)
Running: chebyshev_quadrature with k=3
  0.252916 seconds (286.00 k allocations: 15.228 MiB)
Running: chebyshev_quadrature with k=4
  0.287483 seconds (286.02 k allocations: 15.320 MiB, 6.30% gc time)
Running: hermite_quadrature with k=2
 16.472258 seconds (22.35 M allocations: 1.164 GiB, 8.92% gc time)
Running: jacobi_quadrature with α=β=1
  0.499167 seconds (480.23 k allocations: 50.782 MiB)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.247120 seconds (291.41 k allocations: 16.139 MiB)
Running: legendre_quadrature
  0.289605 seconds (202.53 k allocations: 11.655 MiB, 27.09% gc time)
Running: lobatto_quadrature
  0.247800 seconds (228.38 k allocations: 37.838 MiB)
Running: radau_quadrature
  0.285592 seconds (224.97 k allocations: 30.499 MiB, 14.98% gc time)
Running: rectangle_rule_left
  0.029377 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.028031 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.024152 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.037465 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.043996 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.035142 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.053202 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.231198 seconds (245.19 k allocations: 13.567 MiB, 11.00% gc time)
Running: chebyshev_quadrature with k=2
  0.312046 seconds (300.90 k allocations: 16.578 MiB)
Running: chebyshev_quadrature with k=3
  0.271462 seconds (280.86 k allocations: 15.005 MiB)
Running: chebyshev_quadrature with k=4
  0.366204 seconds (280.87 k allocations: 15.006 MiB, 7.28% gc time)
Running: hermite_quadrature with k=2
  0.178562 seconds (179.99 k allocations: 10.329 MiB)
Running: jacobi_quadrature with α=β=1
  9.386812 seconds (472.74 k allocations: 1.176 GiB, 12.61% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.300667 seconds (286.26 k allocations: 15.931 MiB, 8.97% gc time)
Running: legendre_quadrature
  0.173097 seconds (197.69 k allocations: 11.426 MiB)
Running: lobatto_quadrature
  0.214823 seconds (218.73 k allocations: 23.542 MiB)
Running: radau_quadrature
  0.203510 seconds (217.88 k allocations: 21.469 MiB, 6.31% gc time)
Running: rectangle_rule_left
  0.026029 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.026708 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.026536 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.029396 seconds (33.83 k allocations: 1.966 MiB)
Running: simpsons38_rule
  0.034786 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.027547 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031902 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.180906 seconds (243.47 k allocations: 13.779 MiB)
Running: chebyshev_quadrature with k=2
  0.234528 seconds (299.08 k allocations: 16.907 MiB)
Running: chebyshev_quadrature with k=3
  0.232553 seconds (279.13 k allocations: 15.210 MiB)
Running: chebyshev_quadrature with k=4
  0.289343 seconds (279.14 k allocations: 15.040 MiB, 8.13% gc time)
Running: jacobi_quadrature with α=β=1
  2.340333 seconds (470.72 k allocations: 195.575 MiB, 8.74% gc time)
Running: legendre_quadrature
  0.156512 seconds (195.96 k allocations: 11.338 MiB)
Running: lobatto_quadrature
  0.196982 seconds (207.33 k allocations: 12.041 MiB, 8.33% gc time)
Running: radau_quadrature
  0.199254 seconds (207.33 k allocations: 12.041 MiB)
Running: rectangle_rule_left
  0.294749 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.025427 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.104459 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.033045 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.037252 seconds (45.77 k allocations: 2.865 MiB)
Running: trapezoidal_rule
  0.026518 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036356 seconds (33.01 k allocations: 1.928 MiB)
Running: chebyshev_quadrature with k=1
  0.204568 seconds (244.06 k allocations: 13.727 MiB, 8.13% gc time)
Running: chebyshev_quadrature with k=2
  0.217472 seconds (299.69 k allocations: 16.822 MiB)
Running: chebyshev_quadrature with k=3
  0.215759 seconds (279.69 k allocations: 15.134 MiB)
Running: chebyshev_quadrature with k=4
  0.215712 seconds (279.70 k allocations: 15.215 MiB, 7.91% gc time)
Running: jacobi_quadrature with α=β=1
  2.415814 seconds (471.40 k allocations: 150.255 MiB, 3.79% gc time)
Running: legendre_quadrature
  0.221345 seconds (196.55 k allocations: 11.344 MiB)
Running: lobatto_quadrature
  0.254748 seconds (207.93 k allocations: 12.063 MiB)
Running: radau_quadrature
  0.196013 seconds (207.92 k allocations: 12.058 MiB)
Running: rectangle_rule_left
  1.238115 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.023548 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.408982 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.038677 seconds (30.79 k allocations: 1.894 MiB)
Running: simpsons38_rule
  0.045049 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.038997 seconds (58.63 k allocations: 2.084 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.165771 seconds (154.68 k allocations: 9.251 MiB, 10.33% gc time)
Running: chebyshev_quadrature with k=1
  0.141644 seconds (91.84 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.160441 seconds (127.61 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.168628 seconds (116.19 k allocations: 3.872 MiB)
Running: chebyshev_quadrature with k=4
  0.156341 seconds (95.72 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  2.356758 seconds (513.09 k allocations: 169.612 MiB, 4.99% gc time)
Running: legendre_quadrature
  0.159718 seconds (38.95 k allocations: 2.159 MiB)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000052 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 51.411663 seconds (590.00 M allocations: 8.792 GiB, 3.60% gc time)
Running: rectangle_rule_midpoint
  0.000035 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.767738 seconds (592.75 M allocations: 8.833 GiB, 3.36% gc time)
Running: simpsons_rule
  0.000041 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.055026 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021221 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.002055 seconds (565.30 M allocations: 8.434 GiB, 5.06% gc time)
Running: chebyshev_quadrature with k=1
  0.460433 seconds (445.63 k allocations: 24.757 MiB)
Running: chebyshev_quadrature with k=2
 12.831495 seconds (503.45 k allocations: 4.042 GiB, 4.63% gc time)
Running: chebyshev_quadrature with k=3
  6.716505 seconds (293.75 k allocations: 1.644 GiB, 4.55% gc time)
Running: chebyshev_quadrature with k=4
  8.763204 seconds (293.76 k allocations: 2.262 GiB, 3.05% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.481820 seconds (509.94 k allocations: 13.256 GiB, 3.88% gc time)
Running: legendre_quadrature.
  5.819968 seconds (235.62 k allocations: 1.977 GiB, 2.14% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.118158 seconds (8.24 M allocations: 13.384 GiB, 4.44% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.935768 seconds (7.24 M allocations: 13.369 GiB, 3.73% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.056597 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.074982 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.062711 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.555427 seconds (600.04 M allocations: 8.943 GiB, 8.38% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.841490 seconds (600.05 M allocations: 8.944 GiB, 8.24% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.588017 seconds (600.04 M allocations: 8.943 GiB, 8.21% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.056355 seconds (129.55 k allocations: 3.742 MiB)
Running: chebyshev_quadrature with k=1
  0.211623 seconds (260.74 k allocations: 14.232 MiB)
Running: chebyshev_quadrature with k=2
  0.244008 seconds (286.78 k allocations: 15.385 MiB)
Running: chebyshev_quadrature with k=3
  0.245463 seconds (263.22 k allocations: 13.642 MiB)
Running: chebyshev_quadrature with k=4
  0.225293 seconds (263.23 k allocations: 13.706 MiB)
Running: jacobi_quadrature with α=β=1
  0.375846 seconds (408.89 k allocations: 36.106 MiB)
Running: laguerre_quadrature with k=2
  0.206527 seconds (190.35 k allocations: 11.075 MiB)
Running: legendre_quadrature
  0.138455 seconds (153.58 k allocations: 8.535 MiB)
Running: lobatto_quadrature
  0.039331 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.037058 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.064324 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.065928 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.055552 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.002102 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053982 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.241516 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001213 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.100844 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.107013 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.115141 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.111638 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  9.156254 seconds (405.75 k allocations: 906.759 MiB, 4.30% gc time)
Running: legendre_quadrature
  0.082112 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000204 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000158 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.836713 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000439 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.455345 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000058 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000810 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000397 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.093716 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.103683 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.114426 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.102739 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.124635 seconds (391.95 k allocations: 254.035 MiB)
Running: legendre_quadrature
  0.057564 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000103 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000072 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.093788 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001099 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.807382 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000095 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001884 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
