Julia Version 1.6.0-DEV.466
Commit 6f6236349a (2020-07-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_BVoP84/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_BVoP84/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2170621656891309
curgen: 20 fitness: 0.21708146965792155
curgen: 30 fitness: 0.21708146965792155
curgen: 40 fitness: 0.21717374841886453
curgen: 50 fitness: 0.21723339630207622
CoordinateCreature{Vector{Float64}}([0.22262054411761587], -0.21723339630207622) 0.22262054411761587 -0.21723339630207622
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579842639318066
curgen: 100 fitness: 3.2582614132683054
curgen: 150 fitness: 3.258327075345148
curgen: 200 fitness: 3.2584035090681995
curgen: 250 fitness: 3.2584035090681995
curgen: 300 fitness: 3.258449754590286
curgen: 350 fitness: 3.258456520557604
curgen: 400 fitness: 3.2584786880199905
curgen: 450 fitness: 3.258482020514969
curgen: 500 fitness: 3.2584883270367024
CoordinateCreature{Vector{Float64}}([-0.22265188457823593, 0.22252269806421637, 0.22238864364662472, 0.22253302066918446, -0.22242426219732991, 0.22249961605462415, -0.22251648992470438, 0.2225676338705856, -0.22238033349145991, -0.22251237323964962, 0.22249775150789458, 0.22226894771435268, 0.22290863328600297, -0.2223367347706089, 0.22269919052561443], -3.2584883270367024) [-0.22265188457823593, 0.22252269806421637, 0.22238864364662472, 0.22253302066918446, -0.22242426219732991, 0.22249961605462415, -0.22251648992470438, 0.2225676338705856, -0.22238033349145991, -0.22251237323964962, 0.22249775150789458, 0.22226894771435268, 0.22290863328600297, -0.2223367347706089, 0.22269919052561443] -3.2584883270367024
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004329677875574589
curgen: 100 fitness: -0.002196400668424303
curgen: 150 fitness: -0.001989322617163225
curgen: 200 fitness: -0.0019061932652277847
curgen: 250 fitness: -0.0019061932652277847
curgen: 300 fitness: -0.0014735420269005317
curgen: 350 fitness: -0.001464059920380123
curgen: 400 fitness: -0.001464059920380123
curgen: 450 fitness: -0.0011089325649606963
curgen: 500 fitness: -0.0010716533812171747
CoordinateCreature{Vector{Float64}}([-1.5826125412354364e-5, -0.00038109536524356057, -0.0004604008365085165, 2.0025714603819165e-6, -9.404032878859215e-5, -0.00034268443853298797, -0.0012317540289096477, 0.001143002361765717, 0.0005537053960210893, 0.0006075639983934879, -0.0009698734654349835, -0.0001818312638103711, 0.00016530936289516123, -0.0006422307790239029, 7.125786305056984e-5], 0.0010716533812171747) [-1.5826125412354364e-5, -0.00038109536524356057, -0.0004604008365085165, 2.0025714603819165e-6, -9.404032878859215e-5, -0.00034268443853298797, -0.0012317540289096477, 0.001143002361765717, 0.0005537053960210893, 0.0006075639983934879, -0.0009698734654349835, -0.0001818312638103711, 0.00016530936289516123, -0.0006422307790239029, 7.125786305056984e-5] 0.0010716533812171747
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
