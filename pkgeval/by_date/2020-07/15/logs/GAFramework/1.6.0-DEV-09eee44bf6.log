Julia Version 1.6.0-DEV.462
Commit 09eee44bf6 (2020-07-14 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_q6kwRN/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_q6kwRN/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21711078040040963
curgen: 20 fitness: 0.21721612377391478
curgen: 30 fitness: 0.21721612377391478
curgen: 40 fitness: 0.21721612377391478
curgen: 50 fitness: 0.21722386210735886
CoordinateCreature{Vector{Float64}}([-0.222079182141017], -0.21722386210735886) -0.222079182141017 -0.21722386210735886
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2582207760655493
curgen: 100 fitness: 3.258303858782315
curgen: 150 fitness: 3.258325978071016
curgen: 200 fitness: 3.258362152608142
curgen: 250 fitness: 3.2584146808173746
curgen: 300 fitness: 3.258415762207723
curgen: 350 fitness: 3.258415762207723
curgen: 400 fitness: 3.258419542026597
curgen: 450 fitness: 3.2584342102421275
curgen: 500 fitness: 3.2584542718385867
CoordinateCreature{Vector{Float64}}([-0.22247505892484426, 0.22238194219377244, -0.22289018068857724, 0.22270113714624784, -0.222229712801676, 0.22268508548877164, 0.22213994611121535, 0.2227610130550222, 0.2228132722277282, 0.22203243461990266, -0.22285074649646405, 0.2225061736672143, -0.22238799236632117, 0.2223738325947287, 0.2229236006228702], -3.2584542718385867) [-0.22247505892484426, 0.22238194219377244, -0.22289018068857724, 0.22270113714624784, -0.222229712801676, 0.22268508548877164, 0.22213994611121535, 0.2227610130550222, 0.2228132722277282, 0.22203243461990266, -0.22285074649646405, 0.2225061736672143, -0.22238799236632117, 0.2223738325947287, 0.2229236006228702] -3.2584542718385867
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031511823169694253
curgen: 100 fitness: -0.0026534880257145232
curgen: 150 fitness: -0.0013502268383831506
curgen: 200 fitness: -0.00128107819554657
curgen: 250 fitness: -0.0006882308016429306
curgen: 300 fitness: -0.0006534472337307307
curgen: 350 fitness: -0.0006534472337307307
curgen: 400 fitness: -0.0006534472337307307
curgen: 450 fitness: -0.0005794290675851244
curgen: 500 fitness: -0.0005794290675851244
CoordinateCreature{Vector{Float64}}([-0.00018926043400978147, -0.0006458971580788578, 9.526437732967213e-5, 4.979327098935879e-5, 0.00022083285492138695, 0.0003333396162189604, 5.112025157705605e-6, -0.00010074845713239707, -0.0012668452045947734, -8.400261250300634e-5, 0.0004498080438071561, 0.00032204277668740344, -9.737304995846119e-5, -0.00018243410795487202, 0.0005703188140330129], 0.0005794290675851244) [-0.00018926043400978147, -0.0006458971580788578, 9.526437732967213e-5, 4.979327098935879e-5, 0.00022083285492138695, 0.0003333396162189604, 5.112025157705605e-6, -0.00010074845713239707, -0.0012668452045947734, -8.400261250300634e-5, 0.0004498080438071561, 0.00032204277668740344, -9.737304995846119e-5, -0.00018243410795487202, 0.0005703188140330129] 0.0005794290675851244
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
