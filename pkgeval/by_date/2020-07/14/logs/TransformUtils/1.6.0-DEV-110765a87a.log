Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_2z15Rs/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_2z15Rs/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04358313845151765 0.14534247413511378; -0.04358313845151765 0.0 0.05044409370624889; -0.14534247413511378 -0.05044409370624889 0.0])
dAA = so3([0.0 0.05017079714859658 0.026663644334422188; -0.05017079714859658 0.0 -0.10136345428121536; -0.026663644334422188 0.10136345428121536 0.0])
dAA = so3([0.0 -0.1480136738431941 -0.058307243002284403; 0.1480136738431941 0.0 0.04615607514743895; 0.058307243002284403 -0.04615607514743895 0.0])
dAA = Quaternion(0.9941580169893245, [-0.06278626733072042, -0.08713412583942708, -0.010740856796758323])
dAA = SO3([0.9993688578017402 -0.010470042450433367 -0.033945018296238354; 0.006734625742460833 0.9940904739221129 -0.10834562507742777; 0.03487880261928177 0.1080486365873984 0.9935335732925438])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9899830596690694 0.1320570306016205 0.049944791890149706; -0.1152834973818051 0.9603063978227637 -0.25401050673562137; -0.08150617645115636 0.24570828836111833 0.9659110622779731]), [-0.5044409370624888, 1.4534247413511376, -0.4358313845151765])
xj = SE3(SO3([0.9057226989690446 0.09219862925332278 -0.4137218937112682; 0.04184198896467005 0.9518419958510813 0.3037203695732484; 0.42180047478838856 -0.29239737977286745 0.8582471274465482]), [-0.46156075147438946, -0.583072430022844, 1.480136738431941])
Dx = SE3(SO3([0.8574470939865604 0.005375599278531561 -0.5145440544272176; 0.2634280525649015 0.8543909758316481 0.4479081619476332; 0.4420295715626574 -0.5196028900514704 0.7311789757058755]), [0.12106193774811136, -1.4792293847941838, 2.370088125338358])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
