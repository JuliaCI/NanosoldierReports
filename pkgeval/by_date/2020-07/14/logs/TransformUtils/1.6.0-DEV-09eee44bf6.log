Julia Version 1.6.0-DEV.462
Commit 09eee44bf6 (2020-07-14 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_gxhwNi/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_gxhwNi/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06773157555232777 0.09210756024789478; -0.06773157555232777 0.0 0.006480929573150479; -0.09210756024789478 -0.006480929573150479 0.0])
dAA = so3([0.0 -0.09176333327275629 -0.08130942664184236; 0.09176333327275629 0.0 0.12869018382739975; 0.08130942664184236 -0.12869018382739975 0.0])
dAA = so3([0.0 -0.056650459933204306 0.10610412398253127; 0.056650459933204306 0.0 -0.05103406075790751; -0.10610412398253127 0.05103406075790751 0.0])
dAA = Quaternion(0.9978997212090334, [-0.05899756428328031, 0.004356758137793756, 0.0263903860923343])
dAA = SO3([0.9916591892949439 0.11243580861958792 -0.06300985023751855; -0.11138217967501789 0.9935763106274221 0.020003125026927266; 0.06485416206950136 -0.012818108287116834 0.9978124241370235])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9537937100176592 -0.1897682425613239 -0.23294972171250994; 0.2540974773081271 0.92320842333565 0.2883065713918936; 0.1603497139267642 -0.33417693097712436 0.9287700189208925]), [-0.06480929573150479, 0.9210756024789477, -0.6773157555232777])
xj = SE3(SO3([0.9911322644958888 -0.13250455615247694 0.009968795016788259; 0.123885564932559 0.9485775330514161 0.29129543523960405; -0.04805414734018656 -0.2874773145639926 0.9565812001782614]), [0.5103406075790751, 1.0610412398253126, 0.566504599332043])
Dx = SE3(SO3([0.9691092604169996 0.06855224082184658 0.23691313102552936; -0.057654643424909925 0.9969482121589827 -0.05263273092434889; -0.23979821405832563 0.0373477248478668 0.9701040995600039]), [0.7835855135317685, -0.3955837998572862, 1.0615950576100026])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
