Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_LouUg1/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_LouUg1/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.241283 seconds (1.36 M allocations: 72.557 MiB, 7.65% gc time)
Running: chebyshev_quadrature with k=1
  1.839382 seconds (2.22 M allocations: 125.251 MiB, 3.18% gc time)
Running: chebyshev_quadrature with k=2
  0.313475 seconds (423.46 k allocations: 23.938 MiB)
Running: chebyshev_quadrature with k=3
  0.422586 seconds (543.32 k allocations: 29.279 MiB, 3.19% gc time)
Running: chebyshev_quadrature with k=4
  0.353309 seconds (487.00 k allocations: 25.931 MiB)
Running: jacobi_quadrature with α=β=1
 48.175444 seconds (39.05 M allocations: 3.083 GiB, 8.60% gc time)
Running: laguerre_quadrature with k=1
  3.332762 seconds (3.28 M allocations: 179.826 MiB, 2.65% gc time)
Running: legendre_quadrature
  0.234239 seconds (213.99 k allocations: 12.041 MiB)
Running: lobatto_quadrature
  0.434707 seconds (339.80 k allocations: 20.082 MiB, 10.22% gc time)
Running: radau_quadrature
  0.320176 seconds (322.08 k allocations: 19.073 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 87.127328 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rectangle_rule_midpoint.
  0.156370 seconds (172.93 k allocations: 3.818 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 86.301169 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: simpsons_rule
  0.043223 seconds (46.42 k allocations: 2.041 MiB)
Running: simpsons38_rule
  0.097829 seconds (110.27 k allocations: 5.734 MiB)
Running: trapezoidal_rule
  0.329713 seconds (1.51 M allocations: 25.641 MiB, 7.61% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.113064 seconds (52.72 k allocations: 3.080 MiB)
Running: chebyshev_quadrature with k=1
  0.462507 seconds (276.39 k allocations: 13.858 MiB)
Running: chebyshev_quadrature with k=2
  0.167054 seconds (115.69 k allocations: 3.759 MiB)
Running: chebyshev_quadrature with k=3
  0.177018 seconds (105.05 k allocations: 3.606 MiB, 14.81% gc time)
Running: chebyshev_quadrature with k=4
  0.145925 seconds (87.66 k allocations: 3.251 MiB)
Running: jacobi_quadrature with α=β=1
  2.577947 seconds (534.53 k allocations: 163.040 MiB, 8.10% gc time)
Running: legendre_quadrature
  0.182912 seconds (61.68 k allocations: 3.393 MiB)
Running: lobatto_quadrature
  0.023443 seconds (16.20 k allocations: 1014.550 KiB)
Running: radau_quadrature
  0.024171 seconds (16.19 k allocations: 1014.253 KiB)
Running: rectangle_rule_left
 31.346892 seconds (471.41 M allocations: 7.025 GiB, 3.41% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.059761 seconds (476.96 M allocations: 7.107 GiB, 3.25% gc time)
Running: simpsons_rule
  0.000067 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065775 seconds (19.45 k allocations: 1.153 MiB)
Running: trapezoidal_rule
  0.053868 seconds (17.89 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028762 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.092292 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.092838 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.097863 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.100322 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.333103 seconds (379.56 k allocations: 19.477 MiB)
Running: legendre_quadrature
  0.057751 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000136 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000045 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000529 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000361 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000511 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000038 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024301 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021063 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063824 seconds (74.52 k allocations: 4.251 MiB)
Running: chebyshev_quadrature with k=1
  0.228619 seconds (239.69 k allocations: 13.226 MiB, 7.84% gc time)
Running: chebyshev_quadrature with k=2
  0.258399 seconds (294.88 k allocations: 16.225 MiB)
Running: chebyshev_quadrature with k=3
  0.224362 seconds (275.31 k allocations: 14.681 MiB)
Running: chebyshev_quadrature with k=4
  0.232005 seconds (275.32 k allocations: 14.626 MiB)
Running: jacobi_quadrature with α=β=1
  1.985039 seconds (466.10 k allocations: 163.783 MiB, 4.01% gc time)
Running: legendre_quadrature
  0.241343 seconds (192.27 k allocations: 10.874 MiB, 5.09% gc time)
Running: lobatto_quadrature
  0.219581 seconds (203.73 k allocations: 11.587 MiB)
Running: radau_quadrature
  0.202706 seconds (203.73 k allocations: 11.624 MiB)
Running: rectangle_rule_left
  1.114309 seconds (19.30 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.022464 seconds (25.15 k allocations: 1.548 MiB)
Running: rectangle_rule_right
  1.033104 seconds (17.80 k allocations: 1.062 MiB)
Running: simpsons_rule
  0.031295 seconds (28.13 k allocations: 1.725 MiB)
Running: simpsons38_rule
  0.034692 seconds (43.20 k allocations: 2.666 MiB)
Running: trapezoidal_rule
  0.027504 seconds (44.41 k allocations: 1.758 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048241 seconds (236.24 k allocations: 5.064 MiB)
Running: chebyshev_quadrature with k=1
  0.236506 seconds (246.82 k allocations: 13.313 MiB, 7.69% gc time)
Running: chebyshev_quadrature with k=2
  0.267860 seconds (302.63 k allocations: 16.258 MiB)
Running: chebyshev_quadrature with k=3
  0.272346 seconds (282.72 k allocations: 14.722 MiB)
Running: chebyshev_quadrature with k=4
  0.259439 seconds (282.74 k allocations: 14.735 MiB)
Running: hermite_quadrature with k=2
 18.323843 seconds (22.10 M allocations: 1.126 GiB, 8.70% gc time)
Running: jacobi_quadrature with α=β=1
  0.552835 seconds (476.19 k allocations: 49.996 MiB, 7.38% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.287560 seconds (287.63 k allocations: 15.571 MiB)
Running: legendre_quadrature
  0.241577 seconds (199.33 k allocations: 11.222 MiB, 14.71% gc time)
Running: lobatto_quadrature
  0.261312 seconds (225.27 k allocations: 37.401 MiB)
Running: radau_quadrature
  0.283967 seconds (221.87 k allocations: 30.063 MiB, 7.40% gc time)
Running: rectangle_rule_left
  0.028818 seconds (22.43 k allocations: 1.305 MiB)
Running: rectangle_rule_midpoint
  0.028535 seconds (27.11 k allocations: 1.643 MiB)
Running: rectangle_rule_right
  0.027372 seconds (19.02 k allocations: 1.122 MiB)
Running: simpsons_rule
  0.039319 seconds (40.34 k allocations: 2.074 MiB)
Running: simpsons38_rule
  0.045008 seconds (58.55 k allocations: 3.069 MiB)
Running: trapezoidal_rule
  0.031657 seconds (30.75 k allocations: 1.698 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044075 seconds (46.77 k allocations: 2.072 MiB)
Running: chebyshev_quadrature with k=1
  0.290020 seconds (241.94 k allocations: 13.086 MiB)
Running: chebyshev_quadrature with k=2
  0.304470 seconds (297.27 k allocations: 16.015 MiB, 7.73% gc time)
Running: chebyshev_quadrature with k=3
  0.261759 seconds (277.61 k allocations: 14.491 MiB)
Running: chebyshev_quadrature with k=4
  0.276538 seconds (277.62 k allocations: 14.492 MiB)
Running: hermite_quadrature with k=2
  0.251542 seconds (177.41 k allocations: 9.962 MiB, 10.97% gc time)
Running: jacobi_quadrature with α=β=1
  7.142030 seconds (468.73 k allocations: 1.175 GiB, 12.04% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.286267 seconds (282.52 k allocations: 15.370 MiB)
Running: legendre_quadrature
  0.204703 seconds (194.53 k allocations: 11.000 MiB)
Running: lobatto_quadrature
  0.270151 seconds (215.66 k allocations: 23.113 MiB, 5.15% gc time)
Running: radau_quadrature
  0.271913 seconds (214.81 k allocations: 21.040 MiB)
Running: rectangle_rule_left
  0.026070 seconds (20.04 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.025021 seconds (25.91 k allocations: 1.587 MiB)
Running: rectangle_rule_right
  0.022404 seconds (17.81 k allocations: 1.065 MiB)
Running: simpsons_rule
  0.030323 seconds (32.63 k allocations: 1.854 MiB)
Running: simpsons38_rule
  0.050218 seconds (49.13 k allocations: 2.817 MiB, 27.46% gc time)
Running: trapezoidal_rule
  0.027353 seconds (25.48 k allocations: 1.527 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034247 seconds (31.21 k allocations: 1.867 MiB)
Running: chebyshev_quadrature with k=1
  0.256127 seconds (240.23 k allocations: 13.300 MiB)
Running: chebyshev_quadrature with k=2
  0.302391 seconds (295.46 k allocations: 16.338 MiB)
Running: chebyshev_quadrature with k=3
  0.284032 seconds (275.90 k allocations: 14.699 MiB, 6.04% gc time)
Running: chebyshev_quadrature with k=4
  0.315927 seconds (275.91 k allocations: 14.529 MiB)
Running: jacobi_quadrature with α=β=1
  1.837409 seconds (466.73 k allocations: 194.813 MiB, 5.48% gc time)
Running: legendre_quadrature
  0.228043 seconds (192.81 k allocations: 10.904 MiB, 11.49% gc time)
Running: lobatto_quadrature
  0.229526 seconds (204.28 k allocations: 11.615 MiB)
Running: radau_quadrature
  0.229130 seconds (204.27 k allocations: 11.615 MiB)
Running: rectangle_rule_left
  0.300408 seconds (19.87 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.028228 seconds (25.50 k allocations: 1.566 MiB)
Running: rectangle_rule_right
  0.118274 seconds (18.16 k allocations: 1.081 MiB)
Running: simpsons_rule
  0.035615 seconds (28.88 k allocations: 1.757 MiB)
Running: simpsons38_rule
  0.040782 seconds (43.97 k allocations: 2.699 MiB)
Running: trapezoidal_rule
  0.030620 seconds (45.39 k allocations: 1.794 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036247 seconds (31.85 k allocations: 1.819 MiB)
Running: chebyshev_quadrature with k=1
  0.245527 seconds (240.82 k allocations: 13.243 MiB, 6.52% gc time)
Running: chebyshev_quadrature with k=2
  0.316936 seconds (296.08 k allocations: 16.255 MiB)
Running: chebyshev_quadrature with k=3
  0.257970 seconds (276.46 k allocations: 14.634 MiB)
Running: chebyshev_quadrature with k=4
  0.262533 seconds (276.47 k allocations: 14.707 MiB, 6.35% gc time)
Running: jacobi_quadrature with α=β=1
  2.149349 seconds (467.41 k allocations: 149.491 MiB, 6.55% gc time)
Running: legendre_quadrature
  0.192386 seconds (193.41 k allocations: 10.920 MiB)
Running: lobatto_quadrature
  0.227179 seconds (204.88 k allocations: 11.640 MiB, 6.05% gc time)
Running: radau_quadrature
  0.217976 seconds (204.87 k allocations: 11.630 MiB)
Running: rectangle_rule_left
  1.186768 seconds (20.15 k allocations: 1.191 MiB)
Running: rectangle_rule_midpoint
  0.031340 seconds (25.51 k allocations: 1.567 MiB)
Running: rectangle_rule_right
  1.173112 seconds (18.16 k allocations: 1.080 MiB)
Running: simpsons_rule
  0.034419 seconds (29.63 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.039082 seconds (44.72 k allocations: 2.727 MiB)
Running: trapezoidal_rule
  0.029221 seconds (57.66 k allocations: 1.995 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.157918 seconds (149.33 k allocations: 8.738 MiB)
Running: chebyshev_quadrature with k=1
  0.147764 seconds (91.21 k allocations: 3.263 MiB)
Running: chebyshev_quadrature with k=2
  0.168618 seconds (126.98 k allocations: 3.953 MiB)
Running: chebyshev_quadrature with k=3
  0.148151 seconds (115.56 k allocations: 3.786 MiB)
Running: chebyshev_quadrature with k=4
  0.145837 seconds (95.09 k allocations: 3.381 MiB)
Running: jacobi_quadrature with α=β=1
  2.432404 seconds (508.88 k allocations: 168.924 MiB, 3.57% gc time)
Running: legendre_quadrature
  0.110599 seconds (38.32 k allocations: 2.078 MiB)
Running: lobatto_quadrature
  0.000158 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.599814 seconds (590.00 M allocations: 8.792 GiB, 2.39% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.997272 seconds (592.75 M allocations: 8.833 GiB, 2.35% gc time)
Running: simpsons_rule
  0.000112 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029277 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.020534 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.720546 seconds (565.29 M allocations: 8.433 GiB, 3.76% gc time)
Running: chebyshev_quadrature with k=1
  0.581401 seconds (440.24 k allocations: 23.945 MiB)
Running: chebyshev_quadrature with k=2
 13.692921 seconds (497.68 k allocations: 4.041 GiB, 3.66% gc time)
Running: chebyshev_quadrature with k=3
  6.773137 seconds (290.33 k allocations: 1.643 GiB, 4.42% gc time)
Running: chebyshev_quadrature with k=4
  7.824904 seconds (290.34 k allocations: 2.262 GiB, 2.30% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 54.734635 seconds (504.88 k allocations: 13.255 GiB, 3.56% gc time)
Running: legendre_quadrature.
  6.108647 seconds (231.46 k allocations: 1.976 GiB, 1.66% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.210524 seconds (8.24 M allocations: 13.384 GiB, 4.68% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.167412 seconds (7.24 M allocations: 13.369 GiB, 3.94% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.085486 seconds (22.76 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.029313 seconds (31.06 k allocations: 1.878 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.992155 seconds (22.97 k allocations: 1.358 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.393460 seconds (600.04 M allocations: 8.943 GiB, 8.24% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.269352 seconds (600.05 M allocations: 8.943 GiB, 8.20% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.707156 seconds (600.03 M allocations: 8.943 GiB, 8.04% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060871 seconds (128.40 k allocations: 3.622 MiB)
Running: chebyshev_quadrature with k=1
  0.279949 seconds (257.59 k allocations: 13.764 MiB)
Running: chebyshev_quadrature with k=2
  0.270810 seconds (283.56 k allocations: 14.859 MiB)
Running: chebyshev_quadrature with k=3
  0.241402 seconds (260.38 k allocations: 13.239 MiB)
Running: chebyshev_quadrature with k=4
  0.255743 seconds (260.40 k allocations: 13.178 MiB)
Running: jacobi_quadrature with α=β=1
  0.444405 seconds (405.90 k allocations: 35.483 MiB)
Running: laguerre_quadrature with k=2
  0.246094 seconds (187.41 k allocations: 10.657 MiB)
Running: legendre_quadrature
  0.152469 seconds (151.27 k allocations: 8.216 MiB)
Running: lobatto_quadrature
  0.036992 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.033700 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.055210 seconds (19.41 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.048735 seconds (26.02 k allocations: 1.572 MiB)
Running: rectangle_rule_right
  0.050566 seconds (17.92 k allocations: 1.052 MiB)
Running: simpsons_rule
  0.002244 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054353 seconds (80.15 k allocations: 3.398 MiB)
Running: trapezoidal_rule
  0.197306 seconds (2.39 M allocations: 37.694 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001223 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.104057 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.100279 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.113443 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.112220 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  8.273159 seconds (402.86 k allocations: 906.144 MiB, 2.83% gc time)
Running: legendre_quadrature
  0.075340 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000321 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000178 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.682427 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000418 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.754585 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000806 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000491 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.102550 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.101716 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.107462 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.119932 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.003191 seconds (389.06 k allocations: 253.441 MiB, 4.09% gc time)
Running: legendre_quadrature
  0.060757 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000148 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000045 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.089784 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001106 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.178200 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000081 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001660 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
