Julia Version 1.6.0-DEV.462
Commit 09eee44bf6 (2020-07-14 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_xMOHNJ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_xMOHNJ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.014293 seconds (1.43 M allocations: 76.095 MiB, 3.03% gc time)
Running: chebyshev_quadrature with k=1
  1.742103 seconds (2.21 M allocations: 124.927 MiB, 3.80% gc time)
Running: chebyshev_quadrature with k=2
  0.247389 seconds (421.68 k allocations: 23.842 MiB)
Running: chebyshev_quadrature with k=3
  0.348222 seconds (541.30 k allocations: 29.188 MiB, 6.30% gc time)
Running: chebyshev_quadrature with k=4
  0.263417 seconds (485.14 k allocations: 25.834 MiB)
Running: jacobi_quadrature with α=β=1
 46.491550 seconds (38.97 M allocations: 3.079 GiB, 9.25% gc time)
Running: laguerre_quadrature with k=1
  3.009272 seconds (3.29 M allocations: 180.187 MiB, 1.45% gc time)
Running: legendre_quadrature
  0.215983 seconds (213.06 k allocations: 11.992 MiB, 10.34% gc time)
Running: lobatto_quadrature
  0.310015 seconds (339.98 k allocations: 20.118 MiB)
Running: radau_quadrature
  0.264422 seconds (322.34 k allocations: 19.129 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 82.812557 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time)
Running: rectangle_rule_midpoint.
  0.163314 seconds (173.08 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 83.598048 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time)
Running: simpsons_rule
  0.048269 seconds (46.62 k allocations: 2.053 MiB)
Running: simpsons38_rule
  0.116748 seconds (111.25 k allocations: 5.794 MiB)
Running: trapezoidal_rule
  0.385709 seconds (1.51 M allocations: 25.685 MiB, 7.97% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.107255 seconds (55.39 k allocations: 3.271 MiB)
Running: chebyshev_quadrature with k=1
  0.421632 seconds (274.34 k allocations: 13.719 MiB)
Running: chebyshev_quadrature with k=2
  0.164006 seconds (115.67 k allocations: 3.755 MiB, 10.55% gc time)
Running: chebyshev_quadrature with k=3
  0.147098 seconds (105.02 k allocations: 3.601 MiB)
Running: chebyshev_quadrature with k=4
  0.147610 seconds (87.63 k allocations: 3.246 MiB)
Running: jacobi_quadrature with α=β=1
  2.066366 seconds (533.96 k allocations: 163.027 MiB, 4.34% gc time)
Running: legendre_quadrature
  0.149891 seconds (61.93 k allocations: 3.406 MiB)
Running: lobatto_quadrature
  0.020031 seconds (16.47 k allocations: 1.008 MiB)
Running: radau_quadrature
  0.020236 seconds (16.46 k allocations: 1.007 MiB)
Running: rectangle_rule_left
 33.385243 seconds (471.41 M allocations: 7.025 GiB, 5.00% gc time)
Running: rectangle_rule_midpoint
  0.000070 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 35.824297 seconds (476.96 M allocations: 7.107 GiB, 5.28% gc time)
Running: simpsons_rule
  0.000074 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.059083 seconds (19.62 k allocations: 1.164 MiB)
Running: trapezoidal_rule
  0.052307 seconds (18.05 k allocations: 1.069 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027845 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.097899 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.093120 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.110706 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.100128 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.297217 seconds (377.77 k allocations: 19.372 MiB, 6.35% gc time)
Running: legendre_quadrature
  0.047212 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000131 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000056 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000673 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000463 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000676 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000046 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021523 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020221 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.118428 seconds (74.89 k allocations: 4.274 MiB)
Running: chebyshev_quadrature with k=1
  0.262219 seconds (238.55 k allocations: 13.162 MiB)
Running: chebyshev_quadrature with k=2
  0.224901 seconds (293.30 k allocations: 16.138 MiB)
Running: chebyshev_quadrature with k=3
  0.284491 seconds (274.17 k allocations: 14.620 MiB, 10.15% gc time)
Running: chebyshev_quadrature with k=4
  0.237883 seconds (274.18 k allocations: 14.530 MiB)
Running: jacobi_quadrature with α=β=1
  2.488326 seconds (463.29 k allocations: 163.603 MiB, 6.04% gc time)
Running: legendre_quadrature
  0.149689 seconds (191.12 k allocations: 10.830 MiB)
Running: lobatto_quadrature
  0.181646 seconds (202.31 k allocations: 11.509 MiB)
Running: radau_quadrature
  0.184115 seconds (202.31 k allocations: 11.524 MiB, 8.97% gc time)
Running: rectangle_rule_left
  1.131361 seconds (19.42 k allocations: 1.156 MiB)
Running: rectangle_rule_midpoint
  0.026625 seconds (25.31 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  1.135797 seconds (17.91 k allocations: 1.068 MiB)
Running: simpsons_rule
  0.031351 seconds (28.33 k allocations: 1.738 MiB)
Running: simpsons38_rule
  0.037702 seconds (43.49 k allocations: 2.684 MiB)
Running: trapezoidal_rule
  0.026340 seconds (44.55 k allocations: 1.767 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048076 seconds (236.48 k allocations: 5.078 MiB)
Running: chebyshev_quadrature with k=1
  0.195668 seconds (245.70 k allocations: 13.271 MiB)
Running: chebyshev_quadrature with k=2
  0.201376 seconds (301.07 k allocations: 16.163 MiB)
Running: chebyshev_quadrature with k=3
  0.215628 seconds (281.60 k allocations: 14.648 MiB, 8.65% gc time)
Running: chebyshev_quadrature with k=4
  0.204005 seconds (281.62 k allocations: 14.674 MiB)
Running: hermite_quadrature with k=2
 14.737273 seconds (21.99 M allocations: 1.119 GiB, 7.03% gc time)
Running: jacobi_quadrature with α=β=1
  0.632244 seconds (473.40 k allocations: 49.850 MiB, 34.73% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.220649 seconds (286.08 k allocations: 15.486 MiB)
Running: legendre_quadrature
  0.207348 seconds (198.21 k allocations: 11.160 MiB, 16.28% gc time)
Running: lobatto_quadrature
  0.236417 seconds (223.88 k allocations: 37.323 MiB)
Running: radau_quadrature
  0.229179 seconds (220.47 k allocations: 29.984 MiB, 6.35% gc time)
Running: rectangle_rule_left
  0.030088 seconds (22.58 k allocations: 1.314 MiB)
Running: rectangle_rule_midpoint
  0.028343 seconds (27.28 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025439 seconds (19.15 k allocations: 1.130 MiB)
Running: simpsons_rule
  0.036658 seconds (40.58 k allocations: 2.088 MiB)
Running: simpsons38_rule
  0.041567 seconds (58.88 k allocations: 3.089 MiB)
Running: trapezoidal_rule
  0.033505 seconds (30.93 k allocations: 1.709 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039310 seconds (46.98 k allocations: 2.085 MiB)
Running: chebyshev_quadrature with k=1
  0.236772 seconds (240.81 k allocations: 13.023 MiB, 13.32% gc time)
Running: chebyshev_quadrature with k=2
  0.259180 seconds (295.70 k allocations: 15.922 MiB)
Running: chebyshev_quadrature with k=3
  0.221924 seconds (276.48 k allocations: 14.429 MiB)
Running: chebyshev_quadrature with k=4
  0.258410 seconds (276.49 k allocations: 14.429 MiB, 16.30% gc time)
Running: hermite_quadrature with k=2
  0.142462 seconds (176.19 k allocations: 9.899 MiB)
Running: jacobi_quadrature with α=β=1
 12.031026 seconds (465.93 k allocations: 1.175 GiB, 9.22% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.217595 seconds (280.96 k allocations: 15.285 MiB)
Running: legendre_quadrature
  0.223326 seconds (193.39 k allocations: 10.942 MiB, 12.96% gc time)
Running: lobatto_quadrature
  0.288738 seconds (214.25 k allocations: 23.034 MiB)
Running: radau_quadrature
  0.282689 seconds (213.40 k allocations: 20.965 MiB, 15.44% gc time)
Running: rectangle_rule_left
  0.027028 seconds (20.17 k allocations: 1.199 MiB)
Running: rectangle_rule_midpoint
  0.024448 seconds (26.07 k allocations: 1.596 MiB)
Running: rectangle_rule_right
  0.024226 seconds (17.93 k allocations: 1.072 MiB)
Running: simpsons_rule
  0.030425 seconds (32.85 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.040113 seconds (49.45 k allocations: 2.836 MiB)
Running: trapezoidal_rule
  0.027450 seconds (25.64 k allocations: 1.537 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034381 seconds (31.42 k allocations: 1.880 MiB)
Running: chebyshev_quadrature with k=1
  0.205791 seconds (239.09 k allocations: 13.237 MiB)
Running: chebyshev_quadrature with k=2
  0.245666 seconds (293.88 k allocations: 16.251 MiB)
Running: chebyshev_quadrature with k=3
  0.234935 seconds (274.75 k allocations: 14.637 MiB, 11.22% gc time)
Running: chebyshev_quadrature with k=4
  0.246896 seconds (274.76 k allocations: 14.466 MiB)
Running: jacobi_quadrature with α=β=1
  2.765645 seconds (463.92 k allocations: 194.711 MiB, 9.24% gc time)
Running: legendre_quadrature
  0.240467 seconds (191.67 k allocations: 10.849 MiB)
Running: lobatto_quadrature
  0.201850 seconds (202.86 k allocations: 11.536 MiB)
Running: radau_quadrature
  0.201491 seconds (202.86 k allocations: 11.598 MiB)
Running: rectangle_rule_left
  0.328548 seconds (19.98 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.028405 seconds (25.66 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.111198 seconds (18.27 k allocations: 1.087 MiB)
Running: simpsons_rule
  0.033834 seconds (29.08 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.067697 seconds (44.27 k allocations: 2.717 MiB, 27.52% gc time)
Running: trapezoidal_rule
  0.028839 seconds (45.53 k allocations: 1.803 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037776 seconds (32.06 k allocations: 1.832 MiB)
Running: chebyshev_quadrature with k=1
  0.217733 seconds (239.68 k allocations: 13.184 MiB)
Running: chebyshev_quadrature with k=2
  0.252115 seconds (294.50 k allocations: 16.169 MiB)
Running: chebyshev_quadrature with k=3
  0.240921 seconds (275.32 k allocations: 14.559 MiB, 9.96% gc time)
Running: chebyshev_quadrature with k=4
  0.233264 seconds (275.33 k allocations: 14.645 MiB)
Running: jacobi_quadrature with α=β=1
  2.581665 seconds (464.61 k allocations: 149.348 MiB, 8.94% gc time)
Running: legendre_quadrature
  0.213401 seconds (192.27 k allocations: 10.859 MiB, 7.90% gc time)
Running: lobatto_quadrature
  0.255035 seconds (203.47 k allocations: 11.557 MiB)
Running: radau_quadrature
  0.337922 seconds (203.45 k allocations: 11.551 MiB)
Running: rectangle_rule_left
  1.684609 seconds (20.27 k allocations: 1.198 MiB)
Running: rectangle_rule_midpoint
  0.032846 seconds (25.68 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  1.396364 seconds (18.27 k allocations: 1.087 MiB)
Running: simpsons_rule
  0.036723 seconds (29.84 k allocations: 1.799 MiB)
Running: simpsons38_rule
  0.040288 seconds (45.03 k allocations: 2.746 MiB)
Running: trapezoidal_rule
  0.030551 seconds (57.81 k allocations: 2.004 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.167447 seconds (150.20 k allocations: 8.796 MiB)
Running: chebyshev_quadrature with k=1
  0.163196 seconds (91.18 k allocations: 3.258 MiB)
Running: chebyshev_quadrature with k=2
  0.204120 seconds (126.95 k allocations: 3.948 MiB)
Running: chebyshev_quadrature with k=3
  0.167908 seconds (115.53 k allocations: 3.781 MiB)
Running: chebyshev_quadrature with k=4
  0.163103 seconds (95.06 k allocations: 3.376 MiB)
Running: jacobi_quadrature with α=β=1
  3.292941 seconds (508.32 k allocations: 168.951 MiB, 14.18% gc time)
Running: legendre_quadrature
  0.109671 seconds (38.29 k allocations: 2.073 MiB)
Running: lobatto_quadrature
  0.000108 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000042 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.194997 seconds (590.00 M allocations: 8.792 GiB, 2.36% gc time)
Running: rectangle_rule_midpoint
  0.000056 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.472984 seconds (592.75 M allocations: 8.833 GiB, 2.09% gc time)
Running: simpsons_rule
  0.000085 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.056544 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.037285 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.190923 seconds (565.30 M allocations: 8.434 GiB, 3.62% gc time)
Running: chebyshev_quadrature with k=1
  0.526583 seconds (437.17 k allocations: 23.753 MiB, 5.80% gc time)
Running: chebyshev_quadrature with k=2
 13.321474 seconds (494.17 k allocations: 4.041 GiB, 3.58% gc time)
Running: chebyshev_quadrature with k=3
  7.036857 seconds (289.23 k allocations: 1.643 GiB, 4.44% gc time)
Running: chebyshev_quadrature with k=4
  9.151503 seconds (289.24 k allocations: 2.262 GiB, 2.16% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 69.998973 seconds (502.42 k allocations: 13.255 GiB, 2.55% gc time)
Running: legendre_quadrature.
  6.434428 seconds (230.64 k allocations: 1.976 GiB, 0.92% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.867275 seconds (8.24 M allocations: 13.384 GiB, 3.68% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.887367 seconds (7.24 M allocations: 13.369 GiB, 2.57% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.767477 seconds (22.92 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.687146 seconds (31.26 k allocations: 1.890 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.592971 seconds (23.13 k allocations: 1.367 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.483119 seconds (600.04 M allocations: 8.943 GiB, 8.21% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.150714 seconds (600.05 M allocations: 8.943 GiB, 8.43% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.574417 seconds (600.03 M allocations: 8.943 GiB, 8.66% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.075426 seconds (128.64 k allocations: 3.637 MiB)
Running: chebyshev_quadrature with k=1
  0.252962 seconds (256.44 k allocations: 13.673 MiB)
Running: chebyshev_quadrature with k=2
  0.271106 seconds (282.52 k allocations: 14.801 MiB)
Running: chebyshev_quadrature with k=3
  0.234180 seconds (259.78 k allocations: 13.142 MiB)
Running: chebyshev_quadrature with k=4
  0.226151 seconds (259.80 k allocations: 13.143 MiB)
Running: jacobi_quadrature with α=β=1
  0.382392 seconds (404.04 k allocations: 35.369 MiB)
Running: laguerre_quadrature with k=2
  0.181960 seconds (186.25 k allocations: 10.594 MiB)
Running: legendre_quadrature
  0.142189 seconds (150.79 k allocations: 8.189 MiB)
Running: lobatto_quadrature
  0.038033 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.035424 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.064774 seconds (19.51 k allocations: 1.134 MiB)
Running: rectangle_rule_midpoint
  0.049156 seconds (26.17 k allocations: 1.581 MiB)
Running: rectangle_rule_right
  0.051219 seconds (18.02 k allocations: 1.058 MiB)
Running: simpsons_rule
  0.002025 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052813 seconds (80.43 k allocations: 3.415 MiB)
Running: trapezoidal_rule
  0.186580 seconds (2.39 M allocations: 37.702 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001091 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.111412 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.115677 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.137859 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.130023 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  8.472328 seconds (401.07 k allocations: 906.041 MiB, 1.50% gc time)
Running: legendre_quadrature
  0.070671 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000159 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000115 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.309319 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000433 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.816669 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000071 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000075 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000820 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000387 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.106762 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.106825 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.109510 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.114791 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  3.719760 seconds (387.27 k allocations: 253.335 MiB, 8.28% gc time)
Running: legendre_quadrature
  0.065775 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000079 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000070 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.703541 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001087 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.168535 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001571 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
