Julia Version 1.6.0-DEV.449
Commit 110765a87a (2020-07-13 17:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_R46ogL/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_R46ogL/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172336277270329
curgen: 20 fitness: 0.2172336277270329
curgen: 30 fitness: 0.2172336277270329
curgen: 40 fitness: 0.2172336277270329
curgen: 50 fitness: 0.2172336277270329
CoordinateCreature{Vector{Float64}}([0.22255146527008157], -0.2172336277270329) 0.22255146527008157 -0.2172336277270329
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257833483402782
curgen: 100 fitness: 3.2581090267265287
curgen: 150 fitness: 3.2581292745292285
curgen: 200 fitness: 3.258134236187712
curgen: 250 fitness: 3.258266427872379
curgen: 300 fitness: 3.258351381680233
curgen: 350 fitness: 3.2583563153789417
curgen: 400 fitness: 3.25836287384109
curgen: 450 fitness: 3.2583841724456972
curgen: 500 fitness: 3.2584312799381445
CoordinateCreature{Vector{Float64}}([-0.22288431483807397, -0.2221878309989995, 0.22282142113040063, 0.22306532615767766, -0.22187834648103305, 0.22233368963241854, 0.22221443364068, -0.22246108981847726, 0.2230320033123619, -0.2225849529883312, 0.22256100762859646, 0.2228306510154644, -0.2226290527268901, 0.222716678960889, 0.22222818758068602], -3.2584312799381445) [-0.22288431483807397, -0.2221878309989995, 0.22282142113040063, 0.22306532615767766, -0.22187834648103305, 0.22233368963241854, 0.22221443364068, -0.22246108981847726, 0.2230320033123619, -0.2225849529883312, 0.22256100762859646, 0.2228306510154644, -0.2226290527268901, 0.222716678960889, 0.22222818758068602] -3.2584312799381445
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0051603842806571265
curgen: 100 fitness: -0.004244134834635815
curgen: 150 fitness: -0.0033258396873350193
curgen: 200 fitness: -0.0031440127756923175
curgen: 250 fitness: -0.0027375961535369697
curgen: 300 fitness: -0.001795061081509175
curgen: 350 fitness: -0.0014789875516498796
curgen: 400 fitness: -0.0014789875516498796
curgen: 450 fitness: -0.0011282474901577189
curgen: 500 fitness: -0.0011282474901577189
CoordinateCreature{Vector{Float64}}([-0.0002661375980807443, -0.0005579535069079426, 0.0010093994736135722, -0.0005879931143925918, -0.0003345393094081855, -0.00049296230868924, -0.00010403130156449674, -0.0002732605823389015, -0.000639151035259382, 0.0011180630101665866, 0.0008103289199828567, -0.0002684375579393115, 3.451112972694889e-5, 0.0010541740844960401, 6.4943646859485496e-6], 0.0011282474901577189) [-0.0002661375980807443, -0.0005579535069079426, 0.0010093994736135722, -0.0005879931143925918, -0.0003345393094081855, -0.00049296230868924, -0.00010403130156449674, -0.0002732605823389015, -0.000639151035259382, 0.0011180630101665866, 0.0008103289199828567, -0.0002684375579393115, 3.451112972694889e-5, 0.0010541740844960401, 6.4943646859485496e-6] 0.0011282474901577189
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
