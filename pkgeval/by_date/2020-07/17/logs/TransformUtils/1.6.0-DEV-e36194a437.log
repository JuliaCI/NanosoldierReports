Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_zwkjvq/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_zwkjvq/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.16615701911648978 0.09553491754384191; -0.16615701911648978 0.0 -0.0523304295362428; -0.09553491754384191 0.0523304295362428 0.0])
dAA = so3([0.0 0.029530646134433194 0.09270809628191036; -0.029530646134433194 0.0 -0.21214095443755632; -0.09270809628191036 0.21214095443755632 0.0])
dAA = so3([0.0 -0.10884267868110689 -0.09622197046136308; 0.10884267868110689 0.0 -0.060313873804008704; 0.09622197046136308 0.060313873804008704 0.0])
dAA = Quaternion(0.9943254777393492, [0.08519229669169288, -0.04139425768501199, 0.04843172858278357])
dAA = SO3([0.9956702575817742 -0.057863697245455994 0.0727497814988476; 0.05058628252869031 0.9938823137350612 0.09817827898557395; -0.07798567937109595 -0.0940730513257005 0.9925061686595711])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9712459255252937 0.12944439504101493 0.19981366505567455; -0.009972413612337437 0.8606593112740721 -0.5090835892896021; -0.23786950859086606 0.4924527373359858 0.8372027223874959]), [0.523304295362428, 0.9553491754384191, -1.6615701911648977])
xj = SE3(SO3([0.9502816689728245 -0.26041863785375885 -0.17072458133677185; 0.1679865829366282 0.8903713630905363 -0.42310677581619466; 0.2621931684226318 0.3733911740342734 0.8898504220293478]), [0.603138738040087, -0.9622197046136307, 1.0884267868110689])
Dx = SE3(SO3([0.8589142072762909 -0.3506280675273289 -0.37326444084722543; 0.39670559603279665 0.9164741768515482 0.05195914972880622; 0.3238688849136398 -0.19270454438421486 0.9262688076138955]), [-0.5574787626082253, -0.2857958510203916, 3.2944598172749058])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
