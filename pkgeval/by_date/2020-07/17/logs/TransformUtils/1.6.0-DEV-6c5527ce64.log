Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_K7jbLO/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_K7jbLO/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04511077365614154 -0.07792361145091839; -0.04511077365614154 0.0 -0.1292683112124273; 0.07792361145091839 0.1292683112124273 0.0])
dAA = so3([0.0 -0.09644180058044213 0.016428725463890067; 0.09644180058044213 0.0 -0.06523078781838096; -0.016428725463890067 0.06523078781838096 0.0])
dAA = so3([0.0 -0.005699364499717198 -0.2192915595887831; 0.005699364499717198 0.0 0.12807144980005977; 0.2192915595887831 -0.12807144980005977 0.0])
dAA = Quaternion(0.9959353609402078, [0.030470774737172458, -0.021272539489975095, 0.08204735083756264])
dAA = SO3([0.9867056500688011 0.01995630512104214 -0.16128764989366304; -0.015033407269902887 0.9993848235098787 0.03168550463518291; 0.16182075512171543 -0.028839563520359216 0.9863986632126956])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9703056199599576 -0.23432218451184345 0.06000098098964708; 0.2409719585823116 0.9579414387618217 -0.15582270399378848; -0.02096470965997639 0.16565419930846517 0.9859610373642278]), [1.292683112124273, -0.7792361145091838, -0.45110773656141534])
xj = SE3(SO3([0.9114146543657318 -0.40243525433315547 -0.08584400897676135; 0.38574600886082 0.9082268192202279 -0.1622469152158395; 0.14325970981173292 0.11476023230595246 0.9830090257091956]), [-1.2807144980005978, -2.192915595887831, 0.05699364499717198])
Dx = SE3(SO3([0.9743013342932578 -0.17403390843580013 -0.1430003801006732; 0.17968898643970482 0.9833381282409183 0.027531685381011722; 0.13582627929325367 -0.052519751162844394 0.9893396270195307]), [-2.8482914748733332, -0.6670488791882969, 0.5668451435327537])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
