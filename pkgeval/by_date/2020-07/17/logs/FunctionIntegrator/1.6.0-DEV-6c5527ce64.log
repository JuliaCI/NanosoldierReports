Julia Version 1.6.0-DEV.476
Commit 6c5527ce64 (2020-07-16 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.4.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.4.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_CECJag/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_CECJag/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.4.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.022061 seconds (1.41 M allocations: 76.708 MiB, 5.66% gc time)
Running: chebyshev_quadrature with k=1
  1.794946 seconds (2.26 M allocations: 130.451 MiB, 3.57% gc time)
Running: chebyshev_quadrature with k=2
  0.316576 seconds (428.78 k allocations: 24.698 MiB)
Running: chebyshev_quadrature with k=3
  0.381148 seconds (549.69 k allocations: 30.243 MiB, 4.24% gc time)
Running: chebyshev_quadrature with k=4
  0.350774 seconds (492.38 k allocations: 26.762 MiB, 4.80% gc time)
Running: jacobi_quadrature with α=β=1
 45.085117 seconds (39.58 M allocations: 3.158 GiB, 8.94% gc time)
Running: laguerre_quadrature with k=1
  2.844067 seconds (3.36 M allocations: 188.490 MiB, 3.10% gc time)
Running: legendre_quadrature
  0.185901 seconds (217.67 k allocations: 12.520 MiB)
Running: lobatto_quadrature
  0.326466 seconds (348.90 k allocations: 21.046 MiB)
Running: radau_quadrature
  0.302767 seconds (330.87 k allocations: 20.035 MiB, 7.59% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 90.046507 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.184846 seconds (173.91 k allocations: 3.912 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 92.597513 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: simpsons_rule
  0.049468 seconds (47.57 k allocations: 2.148 MiB)
Running: simpsons38_rule
  0.104294 seconds (113.89 k allocations: 6.066 MiB)
Running: trapezoidal_rule
  0.355431 seconds (1.52 M allocations: 25.847 MiB, 8.26% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   16     16
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.109306 seconds (55.99 k allocations: 3.362 MiB)
Running: chebyshev_quadrature with k=1
  0.465765 seconds (278.89 k allocations: 14.246 MiB)
Running: chebyshev_quadrature with k=2
  0.172095 seconds (116.32 k allocations: 3.844 MiB)
Running: chebyshev_quadrature with k=3
  0.222280 seconds (105.67 k allocations: 3.693 MiB, 23.02% gc time)
Running: chebyshev_quadrature with k=4
  0.156185 seconds (88.28 k allocations: 3.337 MiB)
Running: jacobi_quadrature with α=β=1
  3.159805 seconds (540.27 k allocations: 163.844 MiB, 5.96% gc time)
Running: legendre_quadrature
  0.148667 seconds (63.05 k allocations: 3.545 MiB)
Running: lobatto_quadrature
  0.019274 seconds (16.91 k allocations: 1.052 MiB)
Running: radau_quadrature
  0.022303 seconds (16.89 k allocations: 1.052 MiB)
Running: rectangle_rule_left
 33.857257 seconds (471.41 M allocations: 7.025 GiB, 2.40% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.488735 seconds (476.96 M allocations: 7.107 GiB, 1.69% gc time)
Running: simpsons_rule
  0.000067 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064293 seconds (20.11 k allocations: 1.218 MiB)
Running: trapezoidal_rule
  0.052932 seconds (18.51 k allocations: 1.119 MiB)
Test Summary: | Pass  Total
besselj       |   15     15
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027562 seconds (1.86 k allocations: 51.609 KiB)
Running: chebyshev_quadrature with k=1
  0.088067 seconds (2.44 k allocations: 114.969 KiB)
Running: chebyshev_quadrature with k=2
  0.093864 seconds (2.70 k allocations: 122.984 KiB)
Running: chebyshev_quadrature with k=3
  0.096751 seconds (3.14 k allocations: 135.891 KiB)
Running: chebyshev_quadrature with k=4
  0.103586 seconds (3.15 k allocations: 136.047 KiB)
Running: jacobi_quadrature with α=β=1
  0.315818 seconds (382.71 k allocations: 20.087 MiB)
Running: legendre_quadrature
  0.062783 seconds (1.25 k allocations: 64.516 KiB)
Running: lobatto_quadrature
  0.000137 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000105 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000546 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000373 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000535 seconds (9 allocations: 496 bytes)
Running: simpsons_rule
  0.000060 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025113 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021545 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   15     15
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.101991 seconds (76.98 k allocations: 4.494 MiB, 24.79% gc time)
Running: chebyshev_quadrature with k=1
  0.204827 seconds (242.91 k allocations: 13.705 MiB)
Running: chebyshev_quadrature with k=2
  0.227520 seconds (298.48 k allocations: 16.789 MiB)
Running: chebyshev_quadrature with k=3
  0.242635 seconds (278.52 k allocations: 15.191 MiB, 11.12% gc time)
Running: chebyshev_quadrature with k=4
  0.195542 seconds (278.54 k allocations: 15.103 MiB)
Running: jacobi_quadrature with α=β=1
  2.597552 seconds (470.33 k allocations: 164.545 MiB, 3.36% gc time)
Running: legendre_quadrature
  0.170699 seconds (195.40 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.198436 seconds (206.85 k allocations: 12.033 MiB)
Running: radau_quadrature
  0.220861 seconds (206.85 k allocations: 12.022 MiB, 8.42% gc time)
Running: rectangle_rule_left
  1.416695 seconds (19.93 k allocations: 1.213 MiB)
Running: rectangle_rule_midpoint
  0.027730 seconds (26.13 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  1.417259 seconds (18.43 k allocations: 1.124 MiB)
Running: simpsons_rule
  0.032139 seconds (29.27 k allocations: 1.831 MiB)
Running: simpsons38_rule
  0.069286 seconds (44.98 k allocations: 2.830 MiB)
Running: trapezoidal_rule
  0.045869 seconds (45.35 k allocations: 1.845 MiB)
Test Summary: | Pass  Total
Cosine        |   15     15
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.068521 seconds (237.50 k allocations: 5.184 MiB)
Running: chebyshev_quadrature with k=1
  0.352775 seconds (250.11 k allocations: 13.823 MiB)
Running: chebyshev_quadrature with k=2
  0.246367 seconds (306.29 k allocations: 16.824 MiB, 8.00% gc time)
Running: chebyshev_quadrature with k=3
  0.392916 seconds (286.00 k allocations: 15.228 MiB)
Running: chebyshev_quadrature with k=4
  0.316921 seconds (286.02 k allocations: 15.277 MiB)
Running: hermite_quadrature with k=2
 16.304439 seconds (22.35 M allocations: 1.164 GiB, 10.03% gc time)
Running: jacobi_quadrature with α=β=1
  0.554023 seconds (480.49 k allocations: 50.803 MiB, 14.20% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.277162 seconds (291.41 k allocations: 16.143 MiB)
Running: legendre_quadrature
  0.209406 seconds (202.53 k allocations: 11.655 MiB)
Running: lobatto_quadrature
  0.324317 seconds (228.46 k allocations: 37.843 MiB, 11.49% gc time)
Running: radau_quadrature
  0.358875 seconds (225.06 k allocations: 30.509 MiB, 6.22% gc time)
Running: rectangle_rule_left
  0.029598 seconds (23.17 k allocations: 1.381 MiB)
Running: rectangle_rule_midpoint
  0.041487 seconds (28.15 k allocations: 1.742 MiB)
Running: rectangle_rule_right
  0.025068 seconds (19.71 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.077462 seconds (41.60 k allocations: 2.194 MiB)
Running: simpsons38_rule
  0.078704 seconds (60.45 k allocations: 3.247 MiB)
Running: trapezoidal_rule
  0.056336 seconds (31.82 k allocations: 1.798 MiB)
Test Summary: | Pass  Total
expnx2datan   |   17     17
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.076991 seconds (47.96 k allocations: 2.183 MiB)
Running: chebyshev_quadrature with k=1
  0.385159 seconds (245.19 k allocations: 13.567 MiB)
Running: chebyshev_quadrature with k=2
  0.417785 seconds (300.90 k allocations: 16.577 MiB)
Running: chebyshev_quadrature with k=3
  0.424367 seconds (280.86 k allocations: 15.005 MiB, 9.54% gc time)
Running: chebyshev_quadrature with k=4
  0.406571 seconds (280.87 k allocations: 15.006 MiB)
Running: hermite_quadrature with k=2
  0.240884 seconds (179.99 k allocations: 10.329 MiB)
Running: jacobi_quadrature with α=β=1
 12.640010 seconds (473.00 k allocations: 1.176 GiB, 9.69% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.289776 seconds (286.26 k allocations: 15.930 MiB)
Running: legendre_quadrature
  0.221534 seconds (197.69 k allocations: 11.426 MiB)
Running: lobatto_quadrature
  0.264028 seconds (218.81 k allocations: 23.548 MiB, 4.55% gc time)
Running: radau_quadrature
  0.256735 seconds (217.96 k allocations: 21.474 MiB)
Running: rectangle_rule_left
  0.027965 seconds (20.71 k allocations: 1.260 MiB)
Running: rectangle_rule_midpoint
  0.038398 seconds (26.92 k allocations: 1.682 MiB)
Running: rectangle_rule_right
  0.032781 seconds (18.46 k allocations: 1.128 MiB)
Running: simpsons_rule
  0.042193 seconds (33.83 k allocations: 1.966 MiB)
Running: simpsons38_rule
  0.046939 seconds (50.97 k allocations: 2.987 MiB)
Running: trapezoidal_rule
  0.035823 seconds (26.48 k allocations: 1.619 MiB)
Test Summary: | Pass  Total
Gaussian      |   17     17
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031967 seconds (32.43 k allocations: 1.980 MiB)
Running: chebyshev_quadrature with k=1
  0.274547 seconds (243.47 k allocations: 13.780 MiB)
Running: chebyshev_quadrature with k=2
  0.587768 seconds (299.08 k allocations: 16.904 MiB)
Running: chebyshev_quadrature with k=3
  0.366532 seconds (279.13 k allocations: 15.210 MiB, 4.44% gc time)
Running: chebyshev_quadrature with k=4
  0.290572 seconds (279.14 k allocations: 15.040 MiB)
Running: jacobi_quadrature with α=β=1
  2.489134 seconds (470.98 k allocations: 195.587 MiB, 7.39% gc time)
Running: legendre_quadrature
  0.171466 seconds (195.96 k allocations: 11.333 MiB, 7.27% gc time)
Running: lobatto_quadrature
  0.169395 seconds (207.42 k allocations: 12.048 MiB)
Running: radau_quadrature
  0.197599 seconds (207.41 k allocations: 12.046 MiB)
Running: rectangle_rule_left
  0.338724 seconds (20.50 k allocations: 1.245 MiB)
Running: rectangle_rule_midpoint
  0.056273 seconds (26.50 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.126787 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.047802 seconds (30.03 k allocations: 1.865 MiB)
Running: simpsons38_rule
  0.035986 seconds (45.77 k allocations: 2.865 MiB)
Running: trapezoidal_rule
  0.026014 seconds (46.35 k allocations: 1.882 MiB)
Test Summary: | Pass  Total
1/x           |   15     15
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.049816 seconds (33.01 k allocations: 1.929 MiB, 34.31% gc time)
Running: chebyshev_quadrature with k=1
  0.202282 seconds (244.06 k allocations: 13.726 MiB)
Running: chebyshev_quadrature with k=2
  0.248800 seconds (299.69 k allocations: 16.838 MiB)
Running: chebyshev_quadrature with k=3
  0.288986 seconds (279.69 k allocations: 15.134 MiB, 9.45% gc time)
Running: chebyshev_quadrature with k=4
  0.251673 seconds (279.70 k allocations: 15.215 MiB)
Running: jacobi_quadrature with α=β=1
  2.122637 seconds (471.66 k allocations: 150.272 MiB, 7.96% gc time)
Running: legendre_quadrature
  0.174616 seconds (196.55 k allocations: 11.359 MiB, 7.50% gc time)
Running: lobatto_quadrature
  0.194233 seconds (208.02 k allocations: 12.068 MiB)
Running: radau_quadrature
  0.165828 seconds (208.01 k allocations: 12.063 MiB)
Running: rectangle_rule_left
  1.239589 seconds (20.79 k allocations: 1.257 MiB)
Running: rectangle_rule_midpoint
  0.027645 seconds (26.51 k allocations: 1.661 MiB)
Running: rectangle_rule_right
  1.362162 seconds (18.80 k allocations: 1.144 MiB)
Running: simpsons_rule
  0.044381 seconds (30.79 k allocations: 1.894 MiB)
Running: simpsons38_rule
  0.068761 seconds (46.53 k allocations: 2.894 MiB)
Running: trapezoidal_rule
  0.044101 seconds (58.63 k allocations: 2.084 MiB)
Test Summary: | Pass  Total
log(x)/x      |   15     15
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.202055 seconds (154.67 k allocations: 9.254 MiB)
Running: chebyshev_quadrature with k=1
  0.180544 seconds (91.84 k allocations: 3.347 MiB)
Running: chebyshev_quadrature with k=2
  0.207540 seconds (127.61 k allocations: 4.038 MiB)
Running: chebyshev_quadrature with k=3
  0.283072 seconds (116.19 k allocations: 3.872 MiB)
Running: chebyshev_quadrature with k=4
  0.254490 seconds (95.72 k allocations: 3.468 MiB)
Running: jacobi_quadrature with α=β=1
  2.710121 seconds (513.43 k allocations: 169.607 MiB, 15.22% gc time)
Running: legendre_quadrature
  0.119990 seconds (38.95 k allocations: 2.159 MiB)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000035 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 50.170739 seconds (590.00 M allocations: 8.792 GiB, 2.53% gc time)
Running: rectangle_rule_midpoint
  0.000056 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 50.348743 seconds (592.75 M allocations: 8.833 GiB, 2.53% gc time)
Running: simpsons_rule
  0.000092 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.061568 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.041822 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   15     15
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.482509 seconds (565.30 M allocations: 8.434 GiB, 3.73% gc time)
Running: chebyshev_quadrature with k=1
  0.590413 seconds (445.55 k allocations: 24.751 MiB)
Running: chebyshev_quadrature with k=2
 15.718552 seconds (503.37 k allocations: 4.042 GiB, 3.26% gc time)
Running: chebyshev_quadrature with k=3
  7.580500 seconds (293.75 k allocations: 1.644 GiB, 5.57% gc time)
Running: chebyshev_quadrature with k=4
  8.522473 seconds (293.76 k allocations: 2.262 GiB, 2.46% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 69.451626 seconds (510.10 k allocations: 13.256 GiB, 2.92% gc time)
Running: legendre_quadrature.
  6.042997 seconds (235.53 k allocations: 1.977 GiB, 0.95% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.774749 seconds (8.24 M allocations: 13.384 GiB, 4.19% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 68.401509 seconds (7.24 M allocations: 13.369 GiB, 2.52% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.607500 seconds (23.58 k allocations: 1.428 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.811972 seconds (32.24 k allocations: 1.992 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.444893 seconds (23.80 k allocations: 1.439 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.128241 seconds (600.04 M allocations: 8.943 GiB, 8.78% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.341268 seconds (600.05 M allocations: 8.944 GiB, 8.50% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.801380 seconds (600.04 M allocations: 8.943 GiB, 8.73% gc time)
Test Summary: | Pass  Total
Simppen       |   15     15
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.055782 seconds (129.55 k allocations: 3.741 MiB)
Running: chebyshev_quadrature with k=1
  0.228779 seconds (260.74 k allocations: 14.233 MiB)
Running: chebyshev_quadrature with k=2
  0.216048 seconds (286.78 k allocations: 15.385 MiB)
Running: chebyshev_quadrature with k=3
  0.216751 seconds (263.22 k allocations: 13.642 MiB)
Running: chebyshev_quadrature with k=4
  0.234421 seconds (263.23 k allocations: 13.643 MiB)
Running: jacobi_quadrature with α=β=1
  0.374691 seconds (409.14 k allocations: 36.138 MiB)
Running: laguerre_quadrature with k=2
  0.192714 seconds (190.35 k allocations: 11.064 MiB)
Running: legendre_quadrature
  0.128295 seconds (153.58 k allocations: 8.535 MiB)
Running: lobatto_quadrature
  0.036347 seconds (10.91 k allocations: 15.110 MiB)
Running: radau_quadrature
  0.032807 seconds (9.69 k allocations: 13.184 MiB)
Running: rectangle_rule_left
  0.058576 seconds (19.95 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.048789 seconds (26.95 k allocations: 1.664 MiB)
Running: rectangle_rule_right
  0.084105 seconds (18.50 k allocations: 1.111 MiB)
Running: simpsons_rule
  0.003503 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057690 seconds (81.76 k allocations: 3.557 MiB)
Running: trapezoidal_rule
  0.220718 seconds (2.39 M allocations: 37.775 MiB)
Test Summary: | Pass  Total
sinexpox      |   16     16
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-7
  0.001409 seconds (17.12 k allocations: 267.828 KiB)
Running: chebyshev_quadrature with k=1
  0.150098 seconds (2.63 k allocations: 1.698 MiB)
Running: chebyshev_quadrature with k=2
  0.200350 seconds (2.89 k allocations: 2.361 MiB)
Running: chebyshev_quadrature with k=3
  0.226069 seconds (3.32 k allocations: 2.062 MiB)
Running: chebyshev_quadrature with k=4
  0.208282 seconds (3.33 k allocations: 1.503 MiB)
Running: jacobi_quadrature with α=β=1
  8.019348 seconds (406.01 k allocations: 906.780 MiB, 3.70% gc time)
Running: legendre_quadrature
  0.089810 seconds (1.36 k allocations: 73.312 KiB)
Running: lobatto_quadrature
  0.000205 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000160 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.869242 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000770 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.264851 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000092 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000106 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001354 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   15     15
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-7
  0.000420 seconds (2.92 k allocations: 45.906 KiB)
Running: chebyshev_quadrature with k=1
  0.103820 seconds (2.52 k allocations: 578.062 KiB)
Running: chebyshev_quadrature with k=2
  0.136898 seconds (2.77 k allocations: 778.906 KiB)
Running: chebyshev_quadrature with k=3
  0.119453 seconds (3.21 k allocations: 687.641 KiB)
Running: chebyshev_quadrature with k=4
  0.128829 seconds (3.22 k allocations: 518.297 KiB)
Running: jacobi_quadrature with α=β=1
  2.959727 seconds (392.21 k allocations: 254.052 MiB)
Running: legendre_quadrature
  0.068636 seconds (1.29 k allocations: 66.484 KiB)
Running: lobatto_quadrature
  0.000093 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.861345 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001065 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.364034 seconds (11 allocations: 528 bytes)
Running: simpsons_rule
  0.000086 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000085 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001723 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   15     15
    Testing FunctionIntegrator tests passed 
