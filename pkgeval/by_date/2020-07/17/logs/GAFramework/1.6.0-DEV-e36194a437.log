Julia Version 1.6.0-DEV.483
Commit e36194a437 (2020-07-17 16:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_jLaILS/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_jLaILS/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721731988672502
curgen: 20 fitness: 0.21721731988672502
curgen: 30 fitness: 0.21723030138846255
curgen: 40 fitness: 0.21723030138846255
curgen: 50 fitness: 0.21723030138846255
CoordinateCreature{Vector{Float64}}([-0.22227427971851083], -0.21723030138846255) -0.22227427971851083 -0.21723030138846255
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257614189720395
curgen: 100 fitness: 3.258295827987689
curgen: 150 fitness: 3.2583143450586003
curgen: 200 fitness: 3.2583143450586003
curgen: 250 fitness: 3.2583152123930956
curgen: 300 fitness: 3.2583338688277097
curgen: 350 fitness: 3.258416046225815
curgen: 400 fitness: 3.2584290818600548
curgen: 450 fitness: 3.2584382199891175
curgen: 500 fitness: 3.2584441681986958
CoordinateCreature{Vector{Float64}}([-0.22251601405083818, -0.2225116228332711, 0.22246977743217772, 0.22334816463298332, -0.22242290727639522, -0.22231057529460468, -0.2222304223370758, -0.222688001908614, 0.2224039865690472, -0.22294138438351105, -0.2227673919831947, 0.2226686394004617, 0.22243977280349334, 0.22240688809388331, 0.22204580305935398], -3.2584441681986958) [-0.22251601405083818, -0.2225116228332711, 0.22246977743217772, 0.22334816463298332, -0.22242290727639522, -0.22231057529460468, -0.2222304223370758, -0.222688001908614, 0.2224039865690472, -0.22294138438351105, -0.2227673919831947, 0.2226686394004617, 0.22243977280349334, 0.22240688809388331, 0.22204580305935398] -3.2584441681986958
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0019605072413639846
curgen: 100 fitness: -0.0019039201284272167
curgen: 150 fitness: -0.001804350935117327
curgen: 200 fitness: -0.001804350935117327
curgen: 250 fitness: -0.001804350935117327
curgen: 300 fitness: -0.001804350935117327
curgen: 350 fitness: -0.00180197442256258
curgen: 400 fitness: -0.0011352479428978768
curgen: 450 fitness: -0.0011352479428978768
curgen: 500 fitness: -0.0011352479428978768
CoordinateCreature{Vector{Float64}}([-0.00036530343281890917, 0.0002656509837681011, 3.086605492840494e-5, 0.0003552089862083515, -9.511324031481528e-6, -3.425339175427977e-5, 0.0006084756217946555, 0.00029740197764433656, 0.0002410688231050104, -0.0002879730789632463, 1.3047182077242578e-5, 0.0014547144468162723, 0.0011861402850404405, 0.0010824565526880558, 0.0003084232290077797], 0.0011352479428978768) [-0.00036530343281890917, 0.0002656509837681011, 3.086605492840494e-5, 0.0003552089862083515, -9.511324031481528e-6, -3.425339175427977e-5, 0.0006084756217946555, 0.00029740197764433656, 0.0002410688231050104, -0.0002879730789632463, 1.3047182077242578e-5, 0.0014547144468162723, 0.0011861402850404405, 0.0010824565526880558, 0.0003084232290077797] 0.0011352479428978768
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
