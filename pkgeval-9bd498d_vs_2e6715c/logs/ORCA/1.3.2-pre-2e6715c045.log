Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Requires ──────────── v1.0.0
 Installed IniFile ───────────── v0.5.0
 Installed ORCA ──────────────── v0.3.1
 Installed Compat ────────────── v2.2.0
 Installed VersionParsing ────── v1.2.0
 Installed Parsers ───────────── v0.3.10
 Installed DocStringExtensions ─ v0.8.1
 Installed JSON ──────────────── v0.21.0
 Installed BinaryProvider ────── v0.5.8
 Installed Conda ─────────────── v1.3.0
 Installed LaTeXStrings ──────── v1.0.3
 Installed HTTP ──────────────── v0.8.8
 Installed PlotlyBase ────────── v0.3.0
 Installed MbedTLS ───────────── v0.7.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [47be7bcc] + ORCA v0.3.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [ffbed154] + DocStringExtensions v0.8.1
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [682c06a0] + JSON v0.21.0
  [b964fa9f] + LaTeXStrings v1.0.3
  [739be429] + MbedTLS v0.7.0
  [47be7bcc] + ORCA v0.3.1
  [69de0a69] + Parsers v0.3.10
  [a03496cd] + PlotlyBase v0.3.0
  [ae029012] + Requires v1.0.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ──→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building MbedTLS → `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Building ORCA ───→ `~/.julia/packages/ORCA/fiEmb/deps/build.log`
   Testing ORCA
 Resolving package versions...
    Status `/tmp/jl_v9Xtgt/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [ffbed154] DocStringExtensions v0.8.1
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [b964fa9f] LaTeXStrings v1.0.3
  [739be429] MbedTLS v0.7.0
  [47be7bcc] ORCA v0.3.1
  [69de0a69] Parsers v0.3.10
  [a03496cd] PlotlyBase v0.3.0
  [ae029012] Requires v1.0.0
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
/home/pkgeval/.julia/conda/3/envs/_ORCA_jl_/lib/orca_app/orca: error while loading shared libraries: libgconf-2.so.4: cannot open shared object file: No such file or directory
fn = tempname() * "." * ext = "/tmp/jl_v0qgJs.pdf"
/home/pkgeval/.julia/conda/3/envs/_ORCA_jl_/lib/orca_app/orca: error while loading shared libraries: libgconf-2.so.4: cannot open shared object file: No such file or directory
Error During Test at /home/pkgeval/.julia/packages/ORCA/fiEmb/test/runtests.jl:12
  Test threw exception
  Expression: myplot(fn) == fn
  IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:7982))
  
  Stacktrace:
   [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Sockets/src/Sockets.jl:520
   [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Sockets/src/Sockets.jl:555 [inlined]
   [3] #getconnection#14(::Bool, ::Int64, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :status_exception),Tuple{Bool,Nothing,Bool}}}, ::typeof(HTTP.ConnectionPool.getconnection), ::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/ConnectionPool.jl:568
   [4] #getconnection at ./none:0 [inlined]
   [5] #getconnection#11(::Int64, ::Int64, ::Int64, ::Int64, ::Bool, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :status_exception),Tuple{Nothing,Bool}}}, ::typeof(HTTP.ConnectionPool.getconnection), ::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/ConnectionPool.jl:517
   [6] (::HTTP.ConnectionPool.var"#kw##getconnection")(::NamedTuple{(:reuse_limit, :iofunction, :status_exception),Tuple{Int64,Nothing,Bool}}, ::typeof(HTTP.ConnectionPool.getconnection), ::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}) at ./none:0
   [7] #request#1(::Nothing, ::Type, ::Int64, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :status_exception),Tuple{Nothing,Bool}}}, ::typeof(HTTP.request), ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/ConnectionRequest.jl:41
   [8] (::HTTP.var"#kw##request")(::NamedTuple{(:iofunction, :status_exception),Tuple{Nothing,Bool}}, ::typeof(HTTP.request), ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String) at ./none:0
   [9] (::Base.var"#50#51#53"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)})(::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :status_exception),Tuple{Nothing,Bool}}}, ::Base.var"#50#52"{Base.var"#50#51#53"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}}, ::Type, ::Vararg{Any,N} where N) at ./error.jl:266
   [10] #50#52 at ./none:0 [inlined]
   [11] #request#1 at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/RetryRequest.jl:44 [inlined]
   [12] #request at ./none:0 [inlined]
   [13] #request#1(::VersionNumber, ::String, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:status_exception,),Tuple{Bool}}}, ::typeof(HTTP.request), ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/MessageRequest.jl:51
   [14] (::HTTP.var"#kw##request")(::NamedTuple{(:status_exception,),Tuple{Bool}}, ::typeof(HTTP.request), ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0
   [15] #request#1(::Int64, ::Bool, ::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:status_exception,),Tuple{Bool}}}, ::typeof(HTTP.request), ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/RedirectRequest.jl:24
   [16] (::HTTP.var"#kw##request")(::NamedTuple{(:status_exception,),Tuple{Bool}}, ::typeof(HTTP.request), ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0
   [17] #request#4(::Dict{Any,Any}, ::String, ::Nothing, ::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:status_exception,),Tuple{Bool}}}, ::typeof(HTTP.request), ::String, ::String, ::Dict{Any,Any}, ::String) at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/HTTP.jl:308
   [18] #request at ./none:0 [inlined]
   [19] #post#14 at /home/pkgeval/.julia/packages/HTTP/lZVI1/src/HTTP.jl:397 [inlined]
   [20] #post at ./none:0 [inlined]
   [21] #savefig#1(::SubString{String}, ::Nothing, ::Nothing, ::Nothing, ::typeof(savefig), ::IOStream, ::Plot{GenericTrace{Dict{Symbol,Any}}}) at /home/pkgeval/.julia/packages/ORCA/fiEmb/src/ORCA.jl:36
   [22] (::PlotlyBase.var"#kw##savefig")(::NamedTuple{(:format, :scale, :width, :height),Tuple{SubString{String},Nothing,Nothing,Nothing}}, ::typeof(savefig), ::IOStream, ::Plot{GenericTrace{Dict{Symbol,Any}}}) at ./none:0
   [23] (::ORCA.var"#3#4"{Nothing,Nothing,Nothing,Plot{GenericTrace{Dict{Symbol,Any}}}})(::IOStream) at /home/pkgeval/.julia/packages/ORCA/fiEmb/src/ORCA.jl:72
   [24] #open#271(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(open), ::ORCA.var"#3#4"{Nothing,Nothing,Nothing,Plot{GenericTrace{Dict{Symbol,Any}}}}, ::String, ::Vararg{String,N} where N) at ./io.jl:298
   [25] open at ./io.jl:296 [inlined]
   [26] #savefig#2 at /home/pkgeval/.julia/packages/ORCA/fiEmb/src/ORCA.jl:71 [inlined]
   [27] savefig at /home/pkgeval/.julia/packages/ORCA/fiEmb/src/ORCA.jl:66 [inlined]
   [28] myplot(::String) at /home/pkgeval/.julia/packages/ORCA/fiEmb/test/runtests.jl:6
   [29] top-level scope at /home/pkgeval/.julia/packages/ORCA/fiEmb/test/runtests.jl:12
   [30] include at ./boot.jl:328 [inlined]
   [31] include_relative(::Module, ::String) at ./loading.jl:1105
   [32] include(::Module, ::String) at ./Base.jl:31
   [33] include(::String) at ./client.jl:424
   [34] top-level scope at none:6
   [35] eval(::Module, ::Any) at ./boot.jl:330
   [36] exec_options(::Base.JLOptions) at ./client.jl:263
   [37] _start() at ./client.jl:460
  
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/ORCA/fiEmb/test/runtests.jl:9
ERROR: Package ORCA errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1372
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
