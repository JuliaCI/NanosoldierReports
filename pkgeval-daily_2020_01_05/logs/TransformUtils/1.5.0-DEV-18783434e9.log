Julia Version 1.5.0-DEV.11
Commit 18783434e9 (2020-01-04 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_CDWZFO/Project.toml`
 [no changes]
  Updating `/tmp/jl_CDWZFO/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_CDWZFO/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08157670190361908 -0.1185455147530859; -0.08157670190361908 0.0 -0.14402460068761935; 0.1185455147530859 0.14402460068761935 0.0])
dAA = so3([0.0 0.01374643757512544 0.10324747084427487; -0.01374643757512544 0.0 -0.10414486211120876; -0.10324747084427487 0.10414486211120876 0.0])
dAA = so3([0.0 -0.11844855144072775 0.06820147269340564; 0.11844855144072775 0.0 -0.1980758275648171; -0.06820147269340564 0.1980758275648171 0.0])
dAA = Quaternion(0.9984373655152242, [0.04160765067310402, 0.03216120665386357, 0.01890204579010329])
dAA = SO3([0.9753028039620478 -0.168392396332299 -0.14292809885125238; 0.18757016119388423 0.9731505430769282 0.13339960696636238; 0.11662707753119653 -0.15691405726239316 0.9807018422639914])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9664782233383279 0.06681888864653751 0.24790135121219248; -0.0003705090753454976 0.965903165319898 -0.2589033370739491; -0.25674833307309763 0.25013258753118006 0.9335491321398902]), [1.4402460068761935, -1.185455147530859, -0.8157670190361908])
xj = SE3(SO3([0.9827048855009785 -0.08348509182793037 0.165291704132394; 0.11640082629728336 0.972703699645212 -0.2007445150778145; -0.14402067785501677 0.2165127066455899 0.9655984114585019]), [1.9807582756481708, 0.6820147269340564, 1.1844855144072775])
Dx = SE3(SO3([0.9866968132096926 -0.13663619529383578 -0.08809057235289858; 0.14207091007322595 0.9881160848978298 0.058672474612462; 0.07902692777023401 -0.07040705150629056 0.9943830206642654]), [0.008139918992034367, 2.340239833890389, 1.517833556048072])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
