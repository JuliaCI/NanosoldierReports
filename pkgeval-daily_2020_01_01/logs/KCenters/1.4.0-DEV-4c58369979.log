Julia Version 1.4.0-DEV.672
Commit 4c58369979 (2019-12-30 22:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed CategoricalArrays ─────────── v0.7.5
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Tables ────────────────────── v0.2.11
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.6
 Installed StatsBase ─────────────────── v0.32.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataFrames ────────────────── v0.20.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_yKtJlt/Project.toml`
 [no changes]
  Updating `/tmp/jl_yKtJlt/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_yKtJlt/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.01999999999995
[ Info: 82.76000000000005
[ Info: 39.37999999999998
[ Info: 27.21999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.19999834944844
[ Info: 75.4800011366497
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.077234808314646
inertia(cdnet.distances) = 24.3325158005307
inertia(crand.distances) = 21.042481386250795
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3466796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3466796875,"f1":null,"seconds":4.066154360771179e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.5703125,"distances_sum":1075.3707001880236}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3466796875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3466796875,"f1":null,"seconds":4.066154360771179e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.5703125,"distances_sum":1075.3707001880236}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.777623418248419,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.7109375,"distances_sum":1950.3117565097882}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.777623418248419,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.7109375,"distances_sum":1950.3117565097882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9423852189477194,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7578125,"distances_sum":2851.0413763235592}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9423852189477194,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7578125,"distances_sum":2851.0413763235592}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9423852189477194,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7578125,"distances_sum":2851.0413763235592}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34765625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.34765625,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.4375,"distances_sum":955.8028100679884}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.611328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.611328125,"f1":0.7420133685758692,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.234375,"distances_sum":1778.4853584198427}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.611328125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.611328125,"f1":0.7420133685758692,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.234375,"distances_sum":1778.4853584198427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9429372710622715,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.65625,"distances_sum":2837.0532875002013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8615884115884124,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0859375,"distances_sum":2331.783402622654}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.88186344905095,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.15625,"distances_sum":2516.183407152963}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8248147685647693,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.8984375,"distances_sum":2097.419818311584}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.767741980241981,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.4296875,"distances_sum":1876.2395994772696}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9429372710622715,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.65625,"distances_sum":2837.0532875002013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790178571428574,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":3050.4528377717083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.890625,"distances_sum":2976.3158998823733}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9486492673992678,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.796875,"distances_sum":2834.6626652286814}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9486149267399273,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7890625,"distances_sum":2837.9093317141546}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599587912087915,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.78125,"distances_sum":2941.4371811250044}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9491701007326013,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7421875,"distances_sum":2858.006652018832}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790178571428574,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":3050.4528377717083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790178571428574,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":3050.4528377717083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.796270396270397,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.59375,"distances_sum":1830.7394133543155}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8471049783549792,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.9375,"distances_sum":2150.2092561300374}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":6.140625,"distances_sum":1100.1483301142373}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8471049783549792,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.9375,"distances_sum":2150.2092561300374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9216268106893116,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5859375,"distances_sum":2590.2775636384004}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8678862803862814,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.1171875,"distances_sum":2246.186348694127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9102309149184158,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.265625,"distances_sum":2519.8931702802392}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9216268106893116,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5859375,"distances_sum":2590.2775636384004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9536687271062276,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8046875,"distances_sum":2850.219144099467}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547161172161178,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8125,"distances_sum":2875.3503005344837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681322,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8671875,"distances_sum":2956.89206961265}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650354853479858,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8671875,"distances_sum":2983.4162271147284}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620192307692315,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8515625,"distances_sum":2948.264143598324}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650354853479858,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8671875,"distances_sum":2983.4162271147284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650354853479858,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8671875,"distances_sum":2983.4162271147284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":1.2042000889778137e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.953125,"distances_sum":1059.9526998013466}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2431640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2431640625,"f1":null,"seconds":3.602355718612671e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.9296875,"distances_sum":602.398065059178}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.828125,"distances_sum":1052.6885822575623}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4404296875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.828125,"distances_sum":1052.6885822575623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.914686355311356,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2461.077248853893}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9088151431901438,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2432.4888560147992}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8599993756243766,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.546875,"distances_sum":2102.8753215309757}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.578125,"f1":null,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0078125,"distances_sum":1488.36575332494}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.914686355311356,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2461.077248853893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594379578754584,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2797.143468313807}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9242845695970701,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2521.3917692045698}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520375457875464,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8984375,"distances_sum":2744.22944942106}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9594379578754584,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2797.143468313807}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9594379578754584,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2797.143468313807}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23828125,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.4921875,"distances_sum":600.9451068073238}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.23828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23828125,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.4921875,"distances_sum":600.9451068073238}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8601742007992016,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.1171875,"distances_sum":2054.1623515426304}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8720071595071602,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.265625,"distances_sum":2156.6636662557867}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.794453810078811,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.53125,"distances_sum":1803.1501267789338}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8720071595071602,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.265625,"distances_sum":2156.6636662557867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9046937437562445,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.4296875,"distances_sum":2376.0379488526282}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9188962079587086,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.4765625,"distances_sum":2467.1049518634477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530334249084255,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7890625,"distances_sum":2693.7285734072916}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398752289377293,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.609375,"distances_sum":2588.0510118901916}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.902329441391942,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3515625,"distances_sum":2306.6685099630613}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9530334249084255,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7890625,"distances_sum":2693.7285734072916}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.90625,"distances_sum":2797.7913506934983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566105769230774,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2696.3204227068836}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963564560439561,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8671875,"distances_sum":2734.9505447808046}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.90625,"distances_sum":2797.7913506934983}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.90625,"distances_sum":2797.7913506934983}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.5837292671203613e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.8203125,"distances_sum":470.1248582082183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8628205128205136,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.1171875,"distances_sum":2048.874243645753}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8651879370629382,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.0078125,"distances_sum":2145.0172890419653}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8651879370629382,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.0078125,"distances_sum":2145.0172890419653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9422905219780227,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.75,"distances_sum":2561.4407073417333}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9425511988011992,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6328125,"distances_sum":2597.487686101645}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9157342657342663,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.390625,"distances_sum":2407.0458260329074}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8359375,"distances_sum":2770.076155016852}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603308150183153,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2723.09102192285}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8359375,"distances_sum":2770.076155016852}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.980339972527473,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2863.5191006139735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358975,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9140625,"distances_sum":2787.6241106843736}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740155677655681,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8671875,"distances_sum":2839.2762766341216}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190478,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.96875,"distances_sum":2860.2711417001738}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.980339972527473,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2863.5191006139735}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.980339972527473,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9609375,"distances_sum":2863.5191006139735}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7943847818847826,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.8671875,"distances_sum":1774.3069921658919}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.380859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.380859375,"f1":null,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.765625,"distances_sum":962.1018682202655}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7943847818847826,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.8671875,"distances_sum":1774.3069921658919}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8384422868797877,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.03125,"distances_sum":1970.9720234900965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9413976648351656,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.703125,"distances_sum":2635.310771187522}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8673933705183714,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.0234375,"distances_sum":2149.6551327512575}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9413976648351656,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.703125,"distances_sum":2635.310771187522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976636904761905,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":2879.657093124405}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9685096153846157,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2845.78609909674}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592319139194144,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6875,"distances_sum":2719.736542109433}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976636904761905,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":2879.657093124405}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976636904761905,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":2879.657093124405}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7952620296370305,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.78125,"distances_sum":1766.3349344438795}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7994560994561003,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.765625,"distances_sum":1807.1042472010158}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7994560994561003,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.765625,"distances_sum":1807.1042472010158}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8378075049950058,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9296875,"distances_sum":1965.830587685412}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8378075049950058,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9296875,"distances_sum":1965.830587685412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9370795870795877,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2530.2990247667676}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.914388736263737,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4609375,"distances_sum":2381.0935872572}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8604317557442566,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.109375,"distances_sum":2106.477346794724}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9370795870795877,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2530.2990247667676}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9370795870795877,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2530.2990247667676}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4951171875, conf: {"ssize":5,"bsize":3}, perf: {"precision":0.9526041666666666,"recall":0.4951171875,"f1":0.6401286213786215,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.125,"distances_sum":1076.1586032633109}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.965355282738095,"recall":0.728515625,"f1":0.8224416859182486,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2890625,"distances_sum":1718.4376739291404}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1259765625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1259765625,"f1":null,"seconds":2.9616057872772217e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.1171875,"distances_sum":291.2441118882094}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.965355282738095,"recall":0.728515625,"f1":0.8224416859182486,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2890625,"distances_sum":1718.4376739291404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9626674107142853,"recall":0.7861328125,"f1":0.8587863958957708,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.640625,"distances_sum":1923.7426449574498}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.976376488095238,"recall":0.89453125,"f1":0.9302658279220781,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8359375,"distances_sum":2276.480893235256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":9,"bsize":6}, perf: {"precision":0.9702938988095237,"recall":0.8076171875,"f1":0.8748586049367301,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":1984.7185944624475}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":9,"bsize":7}, perf: {"precision":0.9706566220238096,"recall":0.8818359375,"f1":0.9205679086538463,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2219.6089115633704}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":5,"bsize":7},"perf":{"precision":0.976376488095238,"recall":0.89453125,"f1":0.9302658279220781,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8359375,"distances_sum":2276.480893235256}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9794921875000001,"recall":0.923828125,"f1":0.9481506124084249,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2366.712081030782}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":11,"bsize":10}, perf: {"precision":0.9665643601190476,"recall":0.9130859375,"f1":0.9359110290750914,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2347.7091334903016}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.9658203125,"recall":0.9052734375,"f1":0.9319117731227106,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2356.688953643592}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":12,"bsize":9}, perf: {"precision":0.9630301339285715,"recall":0.9228515625,"f1":0.9405040922619047,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9453125,"distances_sum":2393.717709954042}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9794921875000001,"recall":0.923828125,"f1":0.9481506124084249,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2366.712081030782}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9794921875000001,"recall":0.923828125,"f1":0.9481506124084249,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2366.712081030782}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.03125,"distances_sum":399.0950394629762}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.4921875,"distances_sum":882.4630860130322}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.5390625,"distances_sum":837.9304362852432}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4306640625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.4921875,"distances_sum":882.4630860130322}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.826898622211123,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.8828125,"distances_sum":1569.1789412872104}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8609411421911429,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.2890625,"distances_sum":1729.9822571671305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.25,"distances_sum":1147.8144001932963}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8646239177489184,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.28125,"distances_sum":1741.8152998766511}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7924060314685323,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.71875,"distances_sum":1437.630109130816}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8646239177489184,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.28125,"distances_sum":1741.8152998766511}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554945054945059,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.84375,"distances_sum":2262.3951619611667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591949716949723,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8203125,"distances_sum":2319.057687518337}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.890625,"distances_sum":2390.2245657211374}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493017399267407,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.78125,"distances_sum":2264.850239739443}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8712188852813861,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.2734375,"distances_sum":1787.1060749095716}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9107491466866474,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.5703125,"distances_sum":2003.227243077539}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.890625,"distances_sum":2390.2245657211374}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.890625,"distances_sum":2390.2245657211374}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8022559038184045,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0234375,"distances_sum":1461.8527515013448}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":2.8870999813079834e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":4.90625,"distances_sum":423.5613295369829}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7736737221112229,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.8203125,"distances_sum":1344.0433937591379}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8022559038184045,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0234375,"distances_sum":1461.8527515013448}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8606809856809864,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.34375,"distances_sum":1678.2715881574456}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9430345695970701,"seconds":6.281957030296326e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7890625,"distances_sum":2110.0435766327637}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9430345695970701,"seconds":6.281957030296326e-5,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7890625,"distances_sum":2110.0435766327637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2280.2646650340967}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2280.2646650340967}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.973832417582418,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2280.2646650340967}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":2.8386712074279785e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":4.625,"distances_sum":442.1405971167927}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5322265625,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.84375,"distances_sum":1086.708213631758}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5322265625,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5322265625,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.84375,"distances_sum":1086.708213631758}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8964228479853489,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5078125,"distances_sum":1827.7646131674735}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8964228479853489,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5078125,"distances_sum":1827.7646131674735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9138195138195148,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5859375,"distances_sum":1926.7227504122982}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9238610347985354,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":1993.0233201053998}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9238610347985354,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":1993.0233201053998}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8671875,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9238610347985354,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":1993.0233201053998}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.853572368621826e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.078125,"distances_sum":313.82011719032215}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.5855919122695923e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.1640625,"distances_sum":789.245491384816}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6949566058941066,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.6640625,"distances_sum":1076.64516544509}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.6949566058941066,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.6640625,"distances_sum":1076.64516544509}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9255556943056952,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5078125,"distances_sum":1998.9745004409097}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9248600357975366,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.515625,"distances_sum":1988.8598796759775}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.671875,"distances_sum":1142.5891046787242}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8581798409923418,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.9140625,"distances_sum":1642.6508394728662}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9255556943056952,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5078125,"distances_sum":1998.9745004409097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2246.879068082771}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574519230769235,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2184.206168788975}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2246.879068082771}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2246.879068082771}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8079165626040634,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.875,"distances_sum":1436.7090787628806}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8688904845154855,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.078125,"distances_sum":1711.6185098386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8688904845154855,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.078125,"distances_sum":1711.6185098386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9322859432234439,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.890625,"distances_sum":2024.0991329983028}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575206043956047,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2234.0086008282738}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9043560606060616,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.4609375,"distances_sum":1908.9816421029086}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8943457584082591,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.40625,"distances_sum":1846.4350420476394}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575206043956047,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2234.0086008282738}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978026,"seconds":7.769092917442322e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9453125,"distances_sum":2350.4714348271195}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9739411630036635,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9296875,"distances_sum":2353.3862540968103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9821085164835167,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.96875,"distances_sum":2388.5703962993557}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614068223443228,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2250.87944171807}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967376373626374,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9375,"distances_sum":2284.182700250732}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595295329670335,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8671875,"distances_sum":2244.2473912736746}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821085164835167,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.96875,"distances_sum":2388.5703962993557}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821085164835167,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.96875,"distances_sum":2388.5703962993557}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9915364583333334,"recall":0.55859375,"f1":0.700126002469753,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.265625,"distances_sum":1053.1369862884078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.6640625,"distances_sum":664.5038534955874}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.453125,"distances_sum":421.601390023822}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":0.9915364583333334,"recall":0.55859375,"f1":0.700126002469753,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.265625,"distances_sum":1053.1369862884078}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9865513392857143,"recall":0.7490234375,"f1":0.8425774746087252,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.8984375,"distances_sum":1581.9795725807796}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9907645089285715,"recall":0.796875,"f1":0.875392381056444,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.34375,"distances_sum":1740.1952964614898}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9839843749999999,"recall":0.6669921875,"f1":0.7865985576923082,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4609375,"distances_sum":1317.6051295721904}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":0.9851934523809524,"recall":0.76953125,"f1":0.8572921869796876,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.03125,"distances_sum":1644.4044852599716}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":4,"bsize":6},"perf":{"precision":0.9907645089285715,"recall":0.796875,"f1":0.875392381056444,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.34375,"distances_sum":1740.1952964614898}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.988467261904762,"recall":0.8974609375,"f1":0.936446886446887,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2110.7283414206454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9863467261904763,"recall":0.8828125,"f1":0.9285456730769235,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.703125,"distances_sum":2041.9411315467692}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":6,"bsize":6}, perf: {"precision":0.9925502232142858,"recall":0.8349609375,"f1":0.9006546188186817,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":1875.5716739405887}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":0.983696056547619,"recall":0.916015625,"f1":0.9455550309065937,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2169.4035813165906}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9900204613095238,"recall":0.896484375,"f1":0.9378770318223447,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7265625,"distances_sum":2077.093342321698}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9861142113095237,"recall":0.818359375,"f1":0.8886725904304036,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":1806.9642272623623}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":0.983696056547619,"recall":0.916015625,"f1":0.9455550309065937,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2169.4035813165906}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":0.983696056547619,"recall":0.916015625,"f1":0.9455550309065937,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2169.4035813165906}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7930373445998453,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.203125,"distances_sum":1369.8770058281536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.546875,"distances_sum":501.89330398504904}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.7421875,"distances_sum":589.0894633849202}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8489156676656685,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.859375,"distances_sum":1624.2482380320232}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8489156676656685,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.859375,"distances_sum":1624.2482380320232}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496909340659347,"seconds":1.3092532753944397e-5,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.734375,"distances_sum":2204.683728912665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956942536630037,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2237.9290150771617}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.956942536630037,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2237.9290150771617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972916666666667,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.859375,"distances_sum":2358.3728457083757}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168504,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2307.76795281591}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9821428571428578,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2390.528012812876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":2302.678012926675}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428578,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2390.528012812876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428578,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2390.528012812876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.859375,"distances_sum":832.0505918603691}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.3061951398849487e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.5,"distances_sum":491.4919769216546}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.5859375,"distances_sum":809.0148374596729}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.421875,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.859375,"distances_sum":832.0505918603691}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8146733474858484,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.765625,"distances_sum":1520.830213234945}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5869140625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5869140625,"f1":0.7276556776556783,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.4921875,"distances_sum":1214.6258262416138}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.375,"distances_sum":1150.1803448107191}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.591796875,"f1":0.728507603507604,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.59375,"distances_sum":1232.475742805366}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":7,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8146733474858484,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.765625,"distances_sum":1520.830213234945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":10,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8231242715617723,"seconds":4.654750227928162e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8203125,"distances_sum":1600.310250273602}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432291666666675,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2224.133959258402}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9207360347985356,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5078125,"distances_sum":2070.620317521768}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8977454836829845,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3828125,"distances_sum":1939.5848906440253}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9101533882783892,"seconds":7.059425115585327e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5234375,"distances_sum":2015.9947581671759}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429632867132871,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.703125,"distances_sum":2251.1987261839113}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9432291666666675,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2224.133959258402}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9432291666666675,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2224.133959258402}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.201887011528015e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.984375,"distances_sum":446.24282000979304}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.846918706293707,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.328125,"distances_sum":1711.066476112004}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.846918706293707,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.328125,"distances_sum":1711.066476112004}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.846918706293707,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.328125,"distances_sum":1711.066476112004}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7470703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.846918706293707,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.328125,"distances_sum":1711.066476112004}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8492512695637705,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9921875,"distances_sum":1799.8206658546412}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.699673243423244,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.109375,"distances_sum":1208.6049424181351}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.1460076570510864e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.21875,"distances_sum":433.72616648754786}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8492512695637705,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9921875,"distances_sum":1799.8206658546412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609603937728943,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.828125,"distances_sum":2472.9655567208347}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8624802281052291,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.890625,"distances_sum":1855.3995653354702}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609603937728943,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.828125,"distances_sum":2472.9655567208347}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772893772893774,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2562.5768391527354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616872710622716,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8671875,"distances_sum":2462.2074582027685}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893774,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2562.5768391527354}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893774,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2562.5768391527354}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":3.0249357223510742e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":5.53125,"distances_sum":503.04387950387314}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7821189227439235,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.328125,"distances_sum":1502.2024870018822}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7821189227439235,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.328125,"distances_sum":1502.2024870018822}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8420397311022318,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.1015625,"distances_sum":1823.6976637565429}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8420397311022318,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.1015625,"distances_sum":1823.6976637565429}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9469036172161179,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.734375,"distances_sum":2450.375426549518}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9513221153846158,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2484.4478015006084}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8969447219447227,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.5234375,"distances_sum":2153.835779370806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8438649891774899,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.9375,"distances_sum":1866.2377409388866}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9513221153846158,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2484.4478015006084}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9513221153846158,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2484.4478015006084}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7109375,"distances_sum":490.02119497138017}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.078125,"distances_sum":950.9741476635896}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6220703125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6220703125,"f1":0.7587240884115892,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.421875,"distances_sum":1421.7903616419849}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6220703125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6220703125,"f1":0.7587240884115892,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.421875,"distances_sum":1421.7903616419849}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9328067765567772,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2345.9184607642496}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.914337745587746,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.640625,"distances_sum":2198.7445833616903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8303446553446563,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1751.8690012862546}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8528820138195148,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.296875,"distances_sum":1844.7456726159103}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6259765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6259765625,"f1":0.7586172508047516,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.453125,"distances_sum":1439.7555158773644}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8467527264402271,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3671875,"distances_sum":1814.7393131118733}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9328067765567772,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2345.9184607642496}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661687271062276,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2551.5102523628666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9671703296703299,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8203125,"distances_sum":2593.301352266556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9336824633699636,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":2418.842745259229}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120882,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2586.533348120093}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588770604395609,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2529.7342501792677}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421219405594412,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2378.9917696901084}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120882,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2586.533348120093}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120882,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2586.533348120093}}, n: 9
inertia(cfft.distances) = 19.324225211296632
inertia(cdnet.distances) = 26.669383800235927
inertia(crand.distances) = 21.42690110877685
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8799999999999999
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> k=7
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9266666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8799999999999999
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9444444444444443
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9155555555555556
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 3, 3, 3, 1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 15 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.31180000646498685] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31180000646498685, 0.16797448385673205] ***
*** starting iteration: 2; err: [Inf, 0.31180000646498685, 0.16797448385673205] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367] ***
*** starting iteration: 3; err: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367, 0.15266447911501835] ***
*** starting iteration: 4; err: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367, 0.15266447911501835] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367, 0.15266447911501835, 0.151725523912426] ***
*** finished computation of 12 references, err: [Inf, 0.31180000646498685, 0.16797448385673205, 0.15541113772761367, 0.15266447911501835, 0.151725523912426] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 7.735799869459638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.735799869459638, 2.405783140725428] ***
*** finished computation of 3 references, err: [Inf, 7.735799869459638, 2.405783140725428] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 28, 0]]
** centroid: 1, normalized-entropy: 0.9932338197397066, [(1, 34), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 25]]
** centroid: 2, normalized-entropy: 0.7578784625383954, [(2, 7), (3, 25)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.190200015081961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.190200015081961, 1.4263418017712564] ***
*** finished computation of 3 references, err: [Inf, 5.190200015081961, 1.4263418017712564] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 30]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 3), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 4, 0]]
** centroid: 2, normalized-entropy: 0.4941829348497886, [(1, 33), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 7]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.498200026755361] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.498200026755361, 3.6563199256437517] ***
*** finished computation of 3 references, err: [Inf, 4.498200026755361, 3.6563199256437517] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 2, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4341000040493561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4341000040493561, 0.36422147707895436] ***
*** finished computation of 7 references, err: [Inf, 1.4341000040493561, 0.36422147707895436] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 7]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 27), (3, 7)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5687999977936695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5687999977936695, 0.4151253237738043] ***
*** finished computation of 7 references, err: [Inf, 0.5687999977936695, 0.4151253237738043] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 11]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 21, 2]]
** centroid: 5, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42520000452018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42520000452018, 0.2134359161307489] ***
*** finished computation of 7 references, err: [Inf, 0.42520000452018, 0.2134359161307489] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 6]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(2, 7), (3, 6)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.4461000254424072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4461000254424072, 1.4200951270317037] ***
*** starting iteration: 2; err: [Inf, 3.4461000254424072, 1.4200951270317037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4461000254424072, 1.4200951270317037, 0.8417773531986218] ***
*** starting iteration: 3; err: [Inf, 3.4461000254424072, 1.4200951270317037, 0.8417773531986218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4461000254424072, 1.4200951270317037, 0.8417773531986218, 0.6825703393917866] ***
*** finished computation of 3 references, err: [Inf, 3.4461000254424072, 1.4200951270317037, 0.8417773531986218, 0.6825703393917866] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 19]]
** centroid: 1, normalized-entropy: 0.9414231081869789, [(2, 34), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.611800022998538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.611800022998538, 1.4144608227213575] ***
*** starting iteration: 2; err: [Inf, 4.611800022998538, 1.4144608227213575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.611800022998538, 1.4144608227213575, 0.7071973374507874] ***
*** starting iteration: 3; err: [Inf, 4.611800022998538, 1.4144608227213575, 0.7071973374507874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.611800022998538, 1.4144608227213575, 0.7071973374507874, 0.6303867810527565] ***
*** finished computation of 3 references, err: [Inf, 4.611800022998538, 1.4144608227213575, 0.7071973374507874, 0.6303867810527565] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 13]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 3, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4972000381374526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4972000381374526, 0.8769720816142659] ***
*** starting iteration: 2; err: [Inf, 3.4972000381374526, 0.8769720816142659] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4972000381374526, 0.8769720816142659, 0.4683674718522024] ***
*** starting iteration: 3; err: [Inf, 3.4972000381374526, 0.8769720816142659, 0.4683674718522024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4972000381374526, 0.8769720816142659, 0.4683674718522024, 0.4531279130383477] ***
*** finished computation of 3 references, err: [Inf, 3.4972000381374526, 0.8769720816142659, 0.4683674718522024, 0.4531279130383477] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.89696471754058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.89696471754058, 1.3143893484090408] ***
*** finished computation of 3 references, err: [Inf, 2.89696471754058, 1.3143893484090408] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 25]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 20), (3, 25)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 15, 0]]
** centroid: 3, normalized-entropy: 0.8886466698980794, [(1, 34), (2, 15)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.017604176829034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.017604176829034, 1.2783469876467861] ***
*** finished computation of 3 references, err: [Inf, 5.017604176829034, 1.2783469876467861] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 14, 1]]
** centroid: 1, normalized-entropy: 0.6350074681708948, [(1, 33), (2, 14), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 27]]
** centroid: 2, normalized-entropy: 0.9522656254366643, [(2, 16), (3, 27)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5605718271383228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5605718271383228, 0.32792131956163745] ***
*** finished computation of 3 references, err: [Inf, 0.5605718271383228, 0.32792131956163745] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.4198999734798985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.4198999734798985, 1.3602696033924662] ***
*** finished computation of 3 references, err: [Inf, 6.4198999734798985, 1.3602696033924662] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 8, 0]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(1, 34), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 15]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 27), (3, 15)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8753999974505304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8753999974505304, 0.73804161500561] ***
*** finished computation of 3 references, err: [Inf, 1.8753999974505304, 0.73804161500561] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 3, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 19]]
** centroid: 3, normalized-entropy: 0.978070970973496, [(2, 27), (3, 19)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.122499996533572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.122499996533572, 0.45780874216662193] ***
*** finished computation of 3 references, err: [Inf, 1.122499996533572, 0.45780874216662193] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37228598320384065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228598320384065, 0.2389814537748686] ***
*** starting iteration: 2; err: [Inf, 0.37228598320384065, 0.2389814537748686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228598320384065, 0.2389814537748686, 0.2043548156909402] ***
*** starting iteration: 3; err: [Inf, 0.37228598320384065, 0.2389814537748686, 0.2043548156909402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37228598320384065, 0.2389814537748686, 0.2043548156909402, 0.18057081900889535] ***
*** finished computation of 7 references, err: [Inf, 0.37228598320384065, 0.2389814537748686, 0.2043548156909402, 0.18057081900889535] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 9, 4]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.599483969027624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.599483969027624, 0.27325068108536954] ***
*** starting iteration: 2; err: [Inf, 1.599483969027624, 0.27325068108536954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.599483969027624, 0.27325068108536954, 0.2566840307688862] ***
*** starting iteration: 3; err: [Inf, 1.599483969027624, 0.27325068108536954, 0.2566840307688862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.599483969027624, 0.27325068108536954, 0.2566840307688862, 0.25419993914104133] ***
*** finished computation of 7 references, err: [Inf, 1.599483969027624, 0.27325068108536954, 0.2566840307688862, 0.25419993914104133] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 2]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 6]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4343786845626569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4343786845626569, 0.2074356198133492] ***
*** starting iteration: 2; err: [Inf, 0.4343786845626569, 0.2074356198133492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4343786845626569, 0.2074356198133492, 0.18599617926230683] ***
*** starting iteration: 3; err: [Inf, 0.4343786845626569, 0.2074356198133492, 0.18599617926230683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4343786845626569, 0.2074356198133492, 0.18599617926230683, 0.17121371753275688] ***
*** finished computation of 7 references, err: [Inf, 0.4343786845626569, 0.2074356198133492, 0.18599617926230683, 0.17121371753275688] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.008799973996866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.008799973996866, 0.6914721283003797] ***
*** starting iteration: 2; err: [Inf, 4.008799973996866, 0.6914721283003797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712] ***
*** starting iteration: 3; err: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956] ***
*** starting iteration: 4; err: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956, 0.5210281413866156] ***
*** starting iteration: 5; err: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956, 0.5210281413866156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956, 0.5210281413866156, 0.5203366115333581] ***
*** finished computation of 3 references, err: [Inf, 4.008799973996866, 0.6914721283003797, 0.5375589514488712, 0.5288760591419956, 0.5210281413866156, 0.5203366115333581] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 7]]
** centroid: 2, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.153499996701985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.153499996701985, 1.0717699177656437] ***
*** starting iteration: 2; err: [Inf, 2.153499996701985, 1.0717699177656437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811] ***
*** starting iteration: 3; err: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692] ***
*** starting iteration: 4; err: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692, 1.0464852522300347] ***
*** starting iteration: 5; err: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692, 1.0464852522300347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692, 1.0464852522300347, 1.0464852522300347] ***
*** finished computation of 3 references, err: [Inf, 2.153499996701985, 1.0717699177656437, 1.0541800079053811, 1.047588245256692, 1.0464852522300347, 1.0464852522300347] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 4, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 15), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 37]]
** centroid: 3, normalized-entropy: 0.9778956822310348, [(2, 26), (3, 37)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7427999987974276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7427999987974276, 0.47216871140169625] ***
*** starting iteration: 2; err: [Inf, 0.7427999987974276, 0.47216871140169625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444] ***
*** starting iteration: 3; err: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444, 0.45803139396222453] ***
*** starting iteration: 4; err: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444, 0.45803139396222453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444, 0.45803139396222453, 0.45740121817559076] ***
*** finished computation of 3 references, err: [Inf, 0.7427999987974276, 0.47216871140169625, 0.46112997812466444, 0.45803139396222453, 0.45740121817559076] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 31]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5843000052351239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5843000052351239, 0.32428625765360874] ***
*** starting iteration: 2; err: [Inf, 0.5843000052351239, 0.32428625765360874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5843000052351239, 0.32428625765360874, 0.2766802001280206] ***
*** starting iteration: 3; err: [Inf, 0.5843000052351239, 0.32428625765360874, 0.2766802001280206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5843000052351239, 0.32428625765360874, 0.2766802001280206, 0.24463003253427304] ***
*** finished computation of 7 references, err: [Inf, 0.5843000052351239, 0.32428625765360874, 0.2766802001280206, 0.24463003253427304] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 4, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5851000031621288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851000031621288, 0.3257678338881081] ***
*** starting iteration: 2; err: [Inf, 0.5851000031621288, 0.3257678338881081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851000031621288, 0.3257678338881081, 0.3015400635020502] ***
*** starting iteration: 3; err: [Inf, 0.5851000031621288, 0.3257678338881081, 0.3015400635020502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5851000031621288, 0.3257678338881081, 0.3015400635020502, 0.2957890922834605] ***
*** finished computation of 7 references, err: [Inf, 0.5851000031621288, 0.3257678338881081, 0.3015400635020502, 0.2957890922834605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 3, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.676000002151268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.676000002151268, 0.27681468765533024] ***
*** starting iteration: 2; err: [Inf, 0.676000002151268, 0.27681468765533024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.676000002151268, 0.27681468765533024, 0.2582344918880821] ***
*** starting iteration: 3; err: [Inf, 0.676000002151268, 0.27681468765533024, 0.2582344918880821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.676000002151268, 0.27681468765533024, 0.2582344918880821, 0.2557392346300643] ***
*** finished computation of 7 references, err: [Inf, 0.676000002151268, 0.27681468765533024, 0.2582344918880821, 0.2557392346300643] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.024147941591715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.024147941591715, 1.307847162669346] ***
*** finished computation of 3 references, err: [Inf, 4.024147941591715, 1.307847162669346] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 24]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 20), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 15, 0]]
** centroid: 2, normalized-entropy: 0.8886466698980794, [(1, 34), (2, 15)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5482240922972306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5482240922972306, 0.7319061214975006] ***
*** finished computation of 3 references, err: [Inf, 2.5482240922972306, 0.7319061214975006] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 12]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 26), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 4, 0]]
** centroid: 2, normalized-entropy: 0.4941829348497886, [(1, 33), (2, 4)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.600003081447259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.600003081447259, 0.9179081747500046] ***
*** finished computation of 3 references, err: [Inf, 4.600003081447259, 0.9179081747500046] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 17]]
** centroid: 1, normalized-entropy: 0.98811083652183, [(2, 22), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 7, 0]]
** centroid: 2, normalized-entropy: 0.6690158350565576, [(1, 33), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5205000080438097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000080438097, 0.31697102442724356] ***
*** starting iteration: 2; err: [Inf, 0.5205000080438097, 0.31697102442724356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008] ***
*** starting iteration: 3; err: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774] ***
*** starting iteration: 4; err: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774, 0.2482715659853923] ***
*** starting iteration: 5; err: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774, 0.2482715659853923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774, 0.2482715659853923, 0.24763887601343196] ***
*** finished computation of 7 references, err: [Inf, 0.5205000080438097, 0.31697102442724356, 0.276544071554008, 0.25634160644335774, 0.2482715659853923, 0.24763887601343196] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 4]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.879999994578436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.879999994578436, 0.41656025663958823] ***
*** starting iteration: 2; err: [Inf, 0.879999994578436, 0.41656025663958823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937] ***
*** starting iteration: 3; err: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055] ***
*** starting iteration: 4; err: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055, 0.3076995413257484] ***
*** starting iteration: 5; err: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055, 0.3076995413257484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055, 0.3076995413257484, 0.30744850037470384] ***
*** finished computation of 7 references, err: [Inf, 0.879999994578436, 0.41656025663958823, 0.3210094262408937, 0.309918287904055, 0.3076995413257484, 0.30744850037470384] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 13]]
** centroid: 1, normalized-entropy: 1.0, [(2, 13), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42100000135167376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422] ***
*** starting iteration: 2; err: [Inf, 0.42100000135167376, 0.275786667890422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188] ***
*** starting iteration: 3; err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385] ***
*** starting iteration: 4; err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022] ***
*** starting iteration: 5; err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594] ***
*** starting iteration: 6; err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594, 0.22176429611505238] ***
*** starting iteration: 7; err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594, 0.22176429611505238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594, 0.22176429611505238, 0.22118589559600962] ***
*** finished computation of 7 references, err: [Inf, 0.42100000135167376, 0.275786667890422, 0.22898447280147188, 0.22717417947427385, 0.2261310070132022, 0.2247058446945594, 0.22176429611505238, 0.22118589559600962] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.211254966225829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.211254966225829, 1.022971082681594] ***
*** finished computation of 3 references, err: [Inf, 2.211254966225829, 1.022971082681594] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 25]]
** centroid: 1, normalized-entropy: 0.9987472979361685, [(2, 23), (3, 25)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 12, 0]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(1, 34), (2, 12)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6755472293167923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6755472293167923, 0.5518807426979815] ***
*** finished computation of 3 references, err: [Inf, 1.6755472293167923, 0.5518807426979815] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 25]]
** centroid: 2, normalized-entropy: 0.9989326546260583, [(2, 27), (3, 25)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2137110804859548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2137110804859548, 0.8528563024934822] ***
*** finished computation of 3 references, err: [Inf, 3.2137110804859548, 0.8528563024934822] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 30]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.192800000431056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.192800000431056, 0.6148562244571931] ***
*** starting iteration: 2; err: [Inf, 1.192800000431056, 0.6148562244571931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.192800000431056, 0.6148562244571931, 0.5896580222391415] ***
*** starting iteration: 3; err: [Inf, 1.192800000431056, 0.6148562244571931, 0.5896580222391415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.192800000431056, 0.6148562244571931, 0.5896580222391415, 0.5737964066348059] ***
*** finished computation of 3 references, err: [Inf, 1.192800000431056, 0.6148562244571931, 0.5896580222391415, 0.5737964066348059] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 29]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7242999967367745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7242999967367745, 0.6024221019105329] ***
*** starting iteration: 2; err: [Inf, 1.7242999967367745, 0.6024221019105329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7242999967367745, 0.6024221019105329, 0.5902319699570451] ***
*** starting iteration: 3; err: [Inf, 1.7242999967367745, 0.6024221019105329, 0.5902319699570451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7242999967367745, 0.6024221019105329, 0.5902319699570451, 0.5894202891632476] ***
*** finished computation of 3 references, err: [Inf, 1.7242999967367745, 0.6024221019105329, 0.5902319699570451, 0.5894202891632476] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 12]]
** centroid: 3, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8574000012828893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8574000012828893, 0.5711181510271781] ***
*** starting iteration: 2; err: [Inf, 0.8574000012828893, 0.5711181510271781] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8574000012828893, 0.5711181510271781, 0.4925269235904015] ***
*** starting iteration: 3; err: [Inf, 0.8574000012828893, 0.5711181510271781, 0.4925269235904015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8574000012828893, 0.5711181510271781, 0.4925269235904015, 0.46861370764513793] ***
*** finished computation of 3 references, err: [Inf, 0.8574000012828893, 0.5711181510271781, 0.4925269235904015, 0.46861370764513793] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8858731428542383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8858731428542383, 0.40597765527906193] ***
*** finished computation of 3 references, err: [Inf, 0.8858731428542383, 0.40597765527906193] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 12]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3189792756526901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3189792756526901, 0.42513660145322946] ***
*** finished computation of 3 references, err: [Inf, 1.3189792756526901, 0.42513660145322946] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5827159837046291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5827159837046291, 0.3623249885166521] ***
*** finished computation of 3 references, err: [Inf, 0.5827159837046291, 0.3623249885166521] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 14]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(2, 34), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 2, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9389284614516379] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9389284614516379, 0.40597765527906193] ***
*** finished computation of 3 references, err: [Inf, 0.9389284614516379, 0.40597765527906193] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 12]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3189792756526901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3189792756526901, 0.42513660145322946] ***
*** finished computation of 3 references, err: [Inf, 1.3189792756526901, 0.42513660145322946] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8116329184133416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8116329184133416, 0.31780278369470616] ***
*** finished computation of 3 references, err: [Inf, 0.8116329184133416, 0.31780278369470616] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 23]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39544485897640713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39544485897640713, 0.17186522554766173] ***
*** starting iteration: 2; err: [Inf, 0.39544485897640713, 0.17186522554766173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39544485897640713, 0.17186522554766173, 0.1647044387237162] ***
*** starting iteration: 3; err: [Inf, 0.39544485897640713, 0.17186522554766173, 0.1647044387237162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39544485897640713, 0.17186522554766173, 0.1647044387237162, 0.1647017286922321] ***
*** finished computation of 7 references, err: [Inf, 0.39544485897640713, 0.17186522554766173, 0.1647044387237162, 0.1647017286922321] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 7]]
** centroid: 6, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43197069778354263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43197069778354263, 0.1933237284361374] ***
*** starting iteration: 2; err: [Inf, 0.43197069778354263, 0.1933237284361374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249] ***
*** starting iteration: 3; err: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249, 0.17307829795369045] ***
*** starting iteration: 4; err: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249, 0.17307829795369045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249, 0.17307829795369045, 0.17248313669362147] ***
*** finished computation of 7 references, err: [Inf, 0.43197069778354263, 0.1933237284361374, 0.1760455901050249, 0.17307829795369045, 0.17248313669362147] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4083232767966453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4083232767966453, 0.16449661649601477] ***
*** starting iteration: 2; err: [Inf, 0.4083232767966453, 0.16449661649601477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203] ***
*** starting iteration: 3; err: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203, 0.1606467077288323] ***
*** starting iteration: 4; err: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203, 0.1606467077288323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203, 0.1606467077288323, 0.1605003959876507] ***
*** finished computation of 7 references, err: [Inf, 0.4083232767966453, 0.16449661649601477, 0.16165943290463203, 0.1606467077288323, 0.1605003959876507] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4366307616735732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366307616735732, 0.17171127152201585] ***
*** starting iteration: 2; err: [Inf, 0.4366307616735732, 0.17171127152201585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366307616735732, 0.17171127152201585, 0.16645942274647182] ***
*** starting iteration: 3; err: [Inf, 0.4366307616735732, 0.17171127152201585, 0.16645942274647182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366307616735732, 0.17171127152201585, 0.16645942274647182, 0.16595150451092874] ***
*** finished computation of 7 references, err: [Inf, 0.4366307616735732, 0.17171127152201585, 0.16645942274647182, 0.16595150451092874] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 7]]
** centroid: 1, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48466765544759055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48466765544759055, 0.24277572821910937] ***
*** starting iteration: 2; err: [Inf, 0.48466765544759055, 0.24277572821910937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48466765544759055, 0.24277572821910937, 0.23105448537449985] ***
*** starting iteration: 3; err: [Inf, 0.48466765544759055, 0.24277572821910937, 0.23105448537449985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48466765544759055, 0.24277572821910937, 0.23105448537449985, 0.2280477180587155] ***
*** finished computation of 7 references, err: [Inf, 0.48466765544759055, 0.24277572821910937, 0.23105448537449985, 0.2280477180587155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 21]]
** centroid: 4, normalized-entropy: 0.9071657675730821, [(2, 10), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4180564458068464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4180564458068464, 0.1553278004328553] ***
*** starting iteration: 2; err: [Inf, 0.4180564458068464, 0.1553278004328553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4180564458068464, 0.1553278004328553, 0.14923315268229775] ***
*** starting iteration: 3; err: [Inf, 0.4180564458068464, 0.1553278004328553, 0.14923315268229775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4180564458068464, 0.1553278004328553, 0.14923315268229775, 0.14744607045209998] ***
*** finished computation of 7 references, err: [Inf, 0.4180564458068464, 0.1553278004328553, 0.14923315268229775, 0.14744607045209998] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 16
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3538526792334294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3538526792334294, 0.16779230579754129] ***
*** finished computation of 7 references, err: [Inf, 0.3538526792334294, 0.16779230579754129] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49055192297887074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49055192297887074, 0.2251990197193019] ***
*** finished computation of 7 references, err: [Inf, 0.49055192297887074, 0.2251990197193019] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4725278614438153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4725278614438153, 0.15570157205275797] ***
*** finished computation of 7 references, err: [Inf, 0.4725278614438153, 0.15570157205275797] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4467000005191686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4467000005191686, 0.23196834571258113] ***
*** finished computation of 7 references, err: [Inf, 0.4467000005191686, 0.23196834571258113] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 6]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.649200005905914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.649200005905914, 0.32122118112195364] ***
*** finished computation of 7 references, err: [Inf, 0.649200005905914, 0.32122118112195364] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 23]]
** centroid: 1, normalized-entropy: 0.8849636363831529, [(2, 10), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6638000034035889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6638000034035889, 0.23152689178287744] ***
*** finished computation of 7 references, err: [Inf, 0.6638000034035889, 0.23152689178287744] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3647944832540532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3647944832540532, 0.17279102982631683] ***
*** starting iteration: 2; err: [Inf, 0.3647944832540532, 0.17279102982631683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3647944832540532, 0.17279102982631683, 0.1694213933424428] ***
*** starting iteration: 3; err: [Inf, 0.3647944832540532, 0.17279102982631683, 0.1694213933424428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3647944832540532, 0.17279102982631683, 0.1694213933424428, 0.1662181235603632] ***
*** finished computation of 7 references, err: [Inf, 0.3647944832540532, 0.17279102982631683, 0.1694213933424428, 0.1662181235603632] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 22, 7]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(2, 22), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3627350895153218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3627350895153218, 0.22733857170668276] ***
*** starting iteration: 2; err: [Inf, 0.3627350895153218, 0.22733857170668276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3627350895153218, 0.22733857170668276, 0.2197839916247962] ***
*** starting iteration: 3; err: [Inf, 0.3627350895153218, 0.22733857170668276, 0.2197839916247962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3627350895153218, 0.22733857170668276, 0.2197839916247962, 0.21912610824081802] ***
*** finished computation of 7 references, err: [Inf, 0.3627350895153218, 0.22733857170668276, 0.2197839916247962, 0.21912610824081802] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 11]]
** centroid: 5, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2928315586371003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2928315586371003, 0.15923600589413792] ***
*** starting iteration: 2; err: [Inf, 0.2928315586371003, 0.15923600589413792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2928315586371003, 0.15923600589413792, 0.14857613538128892] ***
*** starting iteration: 3; err: [Inf, 0.2928315586371003, 0.15923600589413792, 0.14857613538128892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2928315586371003, 0.15923600589413792, 0.14857613538128892, 0.147138191130913] ***
*** finished computation of 7 references, err: [Inf, 0.2928315586371003, 0.15923600589413792, 0.14857613538128892, 0.147138191130913] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 13]]
** centroid: 7, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667, 0.8666666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2) => 0.9533333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2), 0.9533333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.130000000000001, 3.535, 1.53, 0.28], [7.537500000000001, 3.1500000000000004, 6.3875, 2.0999999999999996], [6.50952380952381, 2.9571428571428573, 5.395238095238095, 2.0238095238095233], [6.1421052631578945, 2.9421052631578943, 4.578947368421052, 1.4631578947368422], [5.95, 2.6166666666666667, 5.0, 1.7833333333333332], [4.627272727272726, 3.063636363636363, 1.3727272727272728, 0.2], [5.553333333333333, 2.56, 3.8333333333333335, 1.1266666666666665], [5.433333333333334, 4.0, 1.4666666666666668, 0.3333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 3, 2, 3, 1, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.984848484848485, 3.4090909090909096, 1.4606060606060605, 0.24545454545454545], [5.773333333333334, 2.5999999999999996, 4.180000000000001, 1.2399999999999998], [6.5200000000000005, 3.02, 4.630000000000001, 1.45], [6.1, 2.7299999999999995, 5.029999999999999, 1.7200000000000002], [5.0, 2.3, 3.275, 1.025], [6.573333333333335, 3.0733333333333337, 5.46, 2.193333333333334], [7.454545454545454, 3.1545454545454548, 6.263636363636365, 2.0545454545454547]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 2, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5777777777777775, 2.5777777777777775, 3.8444444444444446, 1.2111111111111112], [6.458823529411765, 3.0470588235294116, 5.511764705882352, 2.105882352941176], [5.039393939393939, 3.421212121212122, 1.4575757575757573, 0.22727272727272732], [7.316666666666667, 3.0500000000000003, 6.183333333333334, 2.016666666666667], [6.457142857142856, 2.971428571428571, 4.728571428571429, 1.4857142857142858], [5.911111111111111, 2.7888888888888888, 5.033333333333333, 1.822222222222222], [5.746153846153846, 2.8153846153846156, 4.315384615384616, 1.4230769230769231]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 2))]
[71, 1, 24, 1, 1, 1, 28, 1, 33, 40, 45, 1, 19, 17, 28, 3, 25, 24, 28, 17, 36, 30, 43, 47, 13, 34, 36, 32, 33, 24, 22, 43, 31, 26, 21, 26, 37, 46, 26, 53, 32, 36, 13, 43, 21, 21, 26, 25, 20, 31, 36, 57, 8, 29, 18, 46, 25, 23, 35, 36, 30, 37, 38, 41, 38, 30, 30, 15, 43, 27, 30, 24, 34, 16, 44, 15, 29, 50, 22, 14, 2, 29, 34, 24, 37, 25, 18, 3, 43, 48, 29, 22, 26, 36, 35, 41, 27, 44, 45, 38, 1, 19, 46, 40, 38, 45, 31, 12, 10, 22, 29, 28, 39, 45, 42, 40, 27, 40, 35, 51, 37, 32, 16, 34, 32, 22, 29, 33, 44, 48, 30, 43, 28, 33, 53, 28, 40, 52, 30, 13, 26, 39, 35, 30, 11, 22, 32, 74, 47, 32, 32, 15, 52, 34, 6, 31, 50, 34, 33, 24, 45, 18, 32, 22, 31, 43, 41, 29, 60, 30, 35, 31, 21, 51, 51, 51, 24, 66, 45, 36, 50, 35, 38, 27, 29, 18, 44, 37, 27, 24, 30, 31, 40, 56, 30, 43, 5, 40, 44, 18, 35, 47, 31, 21, 41, 40, 30, 38, 48, 29, 44, 41, 49, 38, 29, 23, 50, 45, 42, 40, 22, 41, 18, 32, 1, 43, 96, 37, 31, 14, 46, 31, 55, 40, 33, 19, 65, 1, 37, 46, 60, 27, 22, 54, 21, 34, 36, 35, 56, 7, 66, 42, 29, 56, 37, 29, 46, 43, 20, 41, 29, 33, 30, 32, 42, 43, 49, 34, 1, 31, 37, 36, 32, 34, 33, 53, 52, 36, 57, 55, 43, 43, 35, 39, 34, 34, 42, 63, 36, 33, 22, 24, 50, 33, 47, 36, 17, 31, 43, 51]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6039999999999999, speedup = 0.352842591923716, eval_ratio = 0.04162)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.36501736111111094,"recall":0.3619791666666665,"f1":null,"seconds":7.947161793708801e-5,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":338.46875,"distances_sum":1738.2460497227644}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5243055555555555,"recall":0.5243055555555555,"f1":0.5243055555555555,"seconds":0.00010615773499011993,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":376.6875,"distances_sum":1639.93833417758}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6432291666666665,"recall":0.6432291666666665,"f1":0.6432291666666665,"seconds":0.0003902073949575424,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":414.3359375,"distances_sum":1588.7058741030787}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7248263888888886,"recall":0.7248263888888886,"f1":0.7248263888888886,"seconds":0.00015582330524921417,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":452.4609375,"distances_sum":1560.3716886142909}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7786458333333327,"recall":0.7786458333333327,"f1":0.7786458333333327,"seconds":0.00019206106662750244,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":492.4453125,"distances_sum":1544.9025520326757}
KCenters.DeloneInvIndex> reached performance {"precision":0.8220486111111102,"recall":0.8220486111111102,"f1":0.8220486111111102,"seconds":0.0002244953066110611,"exhaustive_search_seconds":0.00035627372562885284,"evaluations":529.6015625,"distances_sum":1532.324007449051}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7729999999999998, speedup = 1.5290508389681943, eval_ratio = 0.053636)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
