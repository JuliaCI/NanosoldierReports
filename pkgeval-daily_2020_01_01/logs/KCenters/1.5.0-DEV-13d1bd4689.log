Julia Version 1.5.0-DEV.0
Commit 13d1bd4689 (2019-12-31 18:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Compat ────────────────────── v3.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.6
 Installed DataValueInterfaces ───────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MLDataUtils ───────────────── v0.5.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.5
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_hH0A7a/Project.toml`
 [no changes]
  Updating `/tmp/jl_hH0A7a/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_hH0A7a/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 117.9300000000001
[ Info: 62.17
[ Info: 46.39999999999998
[ Info: 24.28
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 75.70000114415876
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.50501837216173
inertia(cdnet.distances) = 23.778632924028308
inertia(crand.distances) = 19.958706235831592
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7642232767232773,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.0234375,"distances_sum":2073.823328664269}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7631920163170169,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.0625,"distances_sum":2030.0035974019006}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8126420454545463,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.5703125,"distances_sum":2342.118159228043}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8126420454545463,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.5703125,"distances_sum":2342.118159228043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8769553363303371,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.015625,"distances_sum":2709.704533981315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9384443681318688,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5625,"distances_sum":3265.736680226062}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8730774433899442,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.953125,"distances_sum":2720.9576648982206}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9384443681318688,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5625,"distances_sum":3265.736680226062}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9404132326007332,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5390625,"distances_sum":3324.9565316552735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700549450549455,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.84375,"distances_sum":3548.535888160984}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9518658424908429,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.65625,"distances_sum":3411.769152783911}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9641571969696976,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.78125,"distances_sum":3496.8568057866837}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9443140193140199,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.671875,"distances_sum":3338.9790457892504}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700549450549455,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.84375,"distances_sum":3548.535888160984}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700549450549455,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.84375,"distances_sum":3548.535888160984}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.732426254301255,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5390625,"distances_sum":1618.7547771693846}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.4140625,"distances_sum":603.2942169099347}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.732426254301255,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5390625,"distances_sum":1618.7547771693846}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9233636155511161,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2744.505501748518}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9233636155511161,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2744.505501748518}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625057234432238,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":3082.21772151979}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633616383616387,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":3128.032861403575}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9633616383616387,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":3128.032861403575}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9633616383616387,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":3128.032861403575}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.6796875,"distances_sum":1106.3785268652423}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4296875,"f1":null,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.6796875,"distances_sum":1106.3785268652423}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5966796875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5966796875,"f1":0.7354858682983691,"seconds":3.7904828786849976e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.6328125,"distances_sum":1627.530585707895}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9062307484182491,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.578125,"distances_sum":2603.325116747492}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8093911297036306,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.140625,"distances_sum":1986.4301706430106}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9062307484182491,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.578125,"distances_sum":2603.325116747492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504724442224445,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.703125,"distances_sum":2961.0970585914456}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9319826007326014,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.6171875,"distances_sum":2791.476123058463}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.956089743589744,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":3025.726724357276}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376030219780226,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.703125,"distances_sum":2849.6299944740617}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9078614094239101,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.5234375,"distances_sum":2656.899803627046}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.956089743589744,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":3025.726724357276}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.956089743589744,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":3025.726724357276}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8420175310800317,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.46875,"distances_sum":2261.5997041731134}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.330078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.330078125,"f1":null,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":5.421875,"distances_sum":967.0010370811325}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8511514527139535,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.59375,"distances_sum":2266.7053750495097}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8511514527139535,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.59375,"distances_sum":2266.7053750495097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9192250457875464,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.9296875,"distances_sum":2689.2005962702037}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9490728021978027,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.84375,"distances_sum":3028.707831441117}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.967078754578755,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.9375,"distances_sum":3134.7788632662987}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.967078754578755,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.9375,"distances_sum":3134.7788632662987}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975669642857143,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.953125,"distances_sum":3202.904155203655}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680631868131873,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.9140625,"distances_sum":3152.6822375519287}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9692536630036632,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.953125,"distances_sum":3154.549057255573}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975669642857143,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.953125,"distances_sum":3202.904155203655}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975669642857143,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.821666955947876e-6,"evaluations":8.953125,"distances_sum":3202.904155203655}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7963831307581315,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.6171875,"distances_sum":1894.375916478837}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8572750166500177,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.3359375,"distances_sum":2339.093274513173}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":6.1328125,"distances_sum":542.614226987219}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8572750166500177,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.3359375,"distances_sum":2339.093274513173}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9513049450549457,"seconds":6.858259439468384e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.578125,"distances_sum":3010.5428601250273}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687900641025644,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8671875,"distances_sum":3193.63731957531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9122570138195144,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.421875,"distances_sum":2722.3557518271023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8647638819513829,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.3359375,"distances_sum":2379.7946085542812}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511790293040295,"seconds":7.091090083122253e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.734375,"distances_sum":3073.4925355247456}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687900641025644,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8671875,"distances_sum":3193.63731957531}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689045329670333,"seconds":7.1302056312561035e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8828125,"distances_sum":3173.4553514313875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735119047619053,"seconds":7.163733243942261e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8984375,"distances_sum":3237.7271815971544}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9296875,"distances_sum":3240.644088786638}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9296875,"distances_sum":3240.644088786638}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9296875,"distances_sum":3240.644088786638}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4033203125,"f1":0.5514228826728825,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":6.2734375,"distances_sum":1038.3365787567627}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7185869685869694,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":7.078125,"distances_sum":1604.9006049711788}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4228515625,"f1":0.5714563214563215,"seconds":4.7869980335235596e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":6.3984375,"distances_sum":1086.0972601574692}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.580078125,"f1":0.7185869685869694,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":7.078125,"distances_sum":1604.9006049711788}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9378033424908434,"seconds":7.009133696556091e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4375,"distances_sum":2907.2155750208876}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9070549242424248,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.359375,"distances_sum":2669.7020940652824}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7973313145188153,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":7.78125,"distances_sum":1891.9617583965344}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9378033424908434,"seconds":7.009133696556091e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.4375,"distances_sum":2907.2155750208876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9616300366300369,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.828125,"distances_sum":3099.1562674306797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968824404761905,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.8515625,"distances_sum":3168.2238728013353}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461824633699638,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.7421875,"distances_sum":2969.4603840438717}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968824404761905,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.8515625,"distances_sum":3168.2238728013353}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968824404761905,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.8515625,"distances_sum":3168.2238728013353}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7192994505494511,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.1328125,"distances_sum":1645.5532114179182}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8570320304695312,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.265625,"distances_sum":2313.5418674980765}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8570320304695312,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.265625,"distances_sum":2313.5418674980765}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8570320304695312,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.265625,"distances_sum":2313.5418674980765}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8570320304695312,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.265625,"distances_sum":2313.5418674980765}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.390625,"distances_sum":626.1166739599563}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.203125,"distances_sum":548.6014485228411}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21484375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.21484375,"f1":null,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":6.390625,"distances_sum":626.1166739599563}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7891967407592415,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":7.7578125,"distances_sum":1818.269090343561}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8505645396270405,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.28125,"distances_sum":2153.4577896921614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7934855075480084,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":7.734375,"distances_sum":1872.9062983807455}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8505645396270405,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.28125,"distances_sum":2153.4577896921614}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584134615384619,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.8125,"distances_sum":2943.8131946717303}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9011051448551454,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.28125,"distances_sum":2551.3348355159856}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9073716214341224,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.3359375,"distances_sum":2570.505204262655}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9469780219780224,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.4921875,"distances_sum":2884.9677568245265}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9348500457875464,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.6171875,"distances_sum":2812.448180707902}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584134615384619,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.8125,"distances_sum":2943.8131946717303}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584134615384619,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.0151416063308716e-6,"evaluations":8.8125,"distances_sum":2943.8131946717303}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7779689060939068,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9140625,"distances_sum":1897.782516952725}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7799434940059947,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.8671875,"distances_sum":1865.9525950810892}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7799434940059947,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.8671875,"distances_sum":1865.9525950810892}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8422738719613729,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.671875,"distances_sum":2179.414787529121}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9351304945054948,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5859375,"distances_sum":2974.170338677059}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8326590076590086,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.5703125,"distances_sum":2152.3663287193262}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8903736888111894,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1328125,"distances_sum":2563.806395474554}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9351304945054948,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5859375,"distances_sum":2974.170338677059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":6.6570937633514404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":3228.884338855582}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637877747252751,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.75,"distances_sum":3172.363415163131}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9387019230769238,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5703125,"distances_sum":2964.7195117228616}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953170787545788,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7109375,"distances_sum":3084.602282782177}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9539663461538466,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.71875,"distances_sum":3088.776318819758}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946193910256411,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.65625,"distances_sum":3014.8445442445354}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":6.6570937633514404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":3228.884338855582}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":6.6570937633514404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":3228.884338855582}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.96875,"distances_sum":1020.1071831291573}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7127183580308587,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.4296875,"distances_sum":1597.949814772611}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8569628288378297,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4921875,"distances_sum":2293.438113531616}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8569628288378297,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4921875,"distances_sum":2293.438113531616}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9196027930402938,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6640625,"distances_sum":2746.868688129998}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9278273809523817,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":2797.2035892206754}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9095753205128213,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.609375,"distances_sum":2672.313615955612}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9278273809523817,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":2797.2035892206754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9380036630036634,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.609375,"distances_sum":2933.627829476697}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573489010989016,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":3125.5828332945985}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9396155927405935,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6640625,"distances_sum":2966.959085045851}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9436813186813193,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2972.711408962073}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9573489010989016,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":3125.5828332945985}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9573489010989016,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":3125.5828332945985}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.0193477869033813e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.125,"distances_sum":571.2231551514861}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.1796875,"distances_sum":621.3882789940009}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2041015625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.1796875,"distances_sum":621.3882789940009}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":7,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.4296875,"distances_sum":658.2720172284156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8040693681318689,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.90625,"distances_sum":1952.9881748963305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":8,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.421875,"distances_sum":704.0493423856279}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8040693681318689,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.90625,"distances_sum":1952.9881748963305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9288976648351653,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6328125,"distances_sum":2842.125231796884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8137569028194035,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.859375,"distances_sum":2004.7602761494345}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9288976648351653,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6328125,"distances_sum":2842.125231796884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.876953125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9288976648351653,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6328125,"distances_sum":2842.125231796884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.421875,"distances_sum":904.421214236895}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7175952519702526,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.09375,"distances_sum":1412.6283111520486}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5791015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5791015625,"f1":0.7175952519702526,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.09375,"distances_sum":1412.6283111520486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8131285381285388,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.6171875,"distances_sum":1839.0505807326904}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8231554903429913,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.765625,"distances_sum":1860.691397141533}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8648039460539468,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.03125,"distances_sum":2052.8504773969107}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8705997127872136,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0078125,"distances_sum":2128.2870272921523}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8794876998002006,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.03125,"distances_sum":2163.8864604863115}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8794876998002006,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.03125,"distances_sum":2163.8864604863115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9094785422910429,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3203125,"distances_sum":2409.7727713140634}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9553056318681323,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2717.0638661285398}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9017976814851822,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.28125,"distances_sum":2367.623543136497}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9151530760905768,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3359375,"distances_sum":2425.346929816295}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578182234432238,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2760.8345595888627}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578182234432238,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2760.8345595888627}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9578182234432238,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2760.8345595888627}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6898705461205467,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":6.7265625,"distances_sum":1406.7692228761935}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8589233682983691,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.1171875,"distances_sum":2067.510140677637}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8589233682983691,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.1171875,"distances_sum":2067.510140677637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513278388278393,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.6796875,"distances_sum":2651.4964168816646}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9279876373626379,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.5859375,"distances_sum":2465.2614780720246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754585,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8125,"distances_sum":2656.117055135849}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754585,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8125,"distances_sum":2656.117055135849}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678399725274729,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9375,"distances_sum":2707.8779291812425}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671703296703301,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8359375,"distances_sum":2741.4058293723338}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678399725274729,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9375,"distances_sum":2707.8779291812425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678399725274729,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9375,"distances_sum":2707.8779291812425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":3.0454248189926147e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.0859375,"distances_sum":862.3458520270574}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4697265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.4697265625,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.390625,"distances_sum":1186.8648248438255}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.11434268951416e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.21875,"distances_sum":876.9269054261557}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4765625,"f1":0.6284500222000226,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.5234375,"distances_sum":1173.1866572245547}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.4765625,"f1":0.6284500222000226,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.5234375,"distances_sum":1173.1866572245547}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8012131965256974,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.9140625,"distances_sum":1794.103226998524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.769836240148741,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.6796875,"distances_sum":1595.8778165853548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9352449633699639,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7109375,"distances_sum":2506.342252355798}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8602975149850157,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.2890625,"distances_sum":2025.135776311843}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8580362345987355,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.4609375,"distances_sum":1959.213663301659}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9352449633699639,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7109375,"distances_sum":2506.342252355798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9385359432234439,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7265625,"distances_sum":2517.9292405637875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9373969780219786,"seconds":6.50063157081604e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.734375,"distances_sum":2526.5764652604366}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943458104395605,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2571.8671858072535}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.943458104395605,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2571.8671858072535}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.943458104395605,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2571.8671858072535}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.2335519790649414e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.671875,"distances_sum":507.35161187568906}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4892578125,"f1":null,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.3828125,"distances_sum":1230.562872535104}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4892578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.4892578125,"f1":null,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.3828125,"distances_sum":1230.562872535104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8731362387612394,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3828125,"distances_sum":2056.8661252349457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9273408882783888,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.671875,"distances_sum":2403.3493968800976}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7932834526584533,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.9453125,"distances_sum":1680.1175029599945}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9273408882783888,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.671875,"distances_sum":2403.3493968800976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9407483141858146,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":2549.9956081208566}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9407483141858146,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":2549.9956081208566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9407483141858146,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":2549.9956081208566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8443918928293936,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.0625,"distances_sum":1967.096652150497}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1611328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1611328125,"f1":null,"seconds":2.7418136596679688e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":4.4765625,"distances_sum":425.5273151251967}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8443918928293936,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.0625,"distances_sum":1967.096652150497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9189903846153854,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5,"distances_sum":2434.860925615652}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9189903846153854,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5,"distances_sum":2434.860925615652}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395547161172165,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2539.018666729155}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694997710622717,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8515625,"distances_sum":2757.208565740519}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9548019688644691,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.71875,"distances_sum":2675.351534230273}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601018772893777,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8046875,"distances_sum":2674.254124922548}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694997710622717,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8515625,"distances_sum":2757.208565740519}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694997710622717,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8515625,"distances_sum":2757.208565740519}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7912675865800874,"seconds":4.43682074546814e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.890625,"distances_sum":1747.1592362465217}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3125,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.171875,"distances_sum":778.2967024216556}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7912675865800874,"seconds":4.43682074546814e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.890625,"distances_sum":1747.1592362465217}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9047853188478194,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5,"distances_sum":2253.9060085462274}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9369167291042297,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.75,"distances_sum":2482.5870574859505}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8653398684648691,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3828125,"distances_sum":2014.1209080046078}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.913856976356977,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.53125,"distances_sum":2293.097971624902}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9369167291042297,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.75,"distances_sum":2482.5870574859505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9560325091575098,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8515625,"distances_sum":2567.1286344723144}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.972063873626374,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2685.7171254271816}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9527586996337002,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7578125,"distances_sum":2561.659811328831}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9653674450549454,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8515625,"distances_sum":2666.3920045273626}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629521520146527,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8359375,"distances_sum":2663.356496866256}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972063873626374,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2685.7171254271816}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972063873626374,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2685.7171254271816}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8816754426129435,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.5546875,"distances_sum":2179.756606007372}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.3984375,"distances_sum":594.9656562597644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8816754426129435,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.5546875,"distances_sum":2179.756606007372}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564560439560446,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.84375,"distances_sum":2678.9232816139115}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564560439560446,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.84375,"distances_sum":2678.9232816139115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727506868131872,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9453125,"distances_sum":2793.9801958958697}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774381868131872,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9609375,"distances_sum":2827.8897582265454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9564045329670334,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8203125,"distances_sum":2685.762470022442}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9774381868131872,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9609375,"distances_sum":2827.8897582265454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9774381868131872,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9609375,"distances_sum":2827.8897582265454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7144967879342885,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.734375,"distances_sum":1175.3717221346653}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8107762029637039,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.3828125,"distances_sum":1518.25450797521}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8107762029637039,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.3828125,"distances_sum":1518.25450797521}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545444139194144,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2414.707422770908}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9526098901098905,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2420.0231054214055}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8595305735930743,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.921875,"distances_sum":1776.746262313072}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.845118423243424,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9375,"distances_sum":1694.9352899118937}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9545444139194144,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2414.707422770908}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708562271062275,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2486.9461756842393}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561069139194142,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.828125,"distances_sum":2402.42846851054}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618532509157515,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.890625,"distances_sum":2424.628892916313}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708562271062275,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2486.9461756842393}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708562271062275,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.90625,"distances_sum":2486.9461756842393}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8472746003996013,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.96875,"distances_sum":1791.3641973351444}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6015625,"f1":0.7405811202686209,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.9609375,"distances_sum":1289.3519093561142}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8472746003996013,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.96875,"distances_sum":1791.3641973351444}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.941678113553114,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8203125,"distances_sum":2320.7381781305085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.950787233599734,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2433.689095780882}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9264423076923083,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":2246.3209742604645}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.950787233599734,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2433.689095780882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2480.55033340716}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2480.55033340716}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2480.55033340716}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8098862942612951,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7421875,"distances_sum":1576.2760825735468}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8098862942612951,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7421875,"distances_sum":1576.2760825735468}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.857907717282718,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.109375,"distances_sum":1807.6816736075411}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627804487179491,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.875,"distances_sum":2567.914413905736}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9627804487179491,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.875,"distances_sum":2567.914413905736}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2650.1211171595596}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2567.629244627379}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2650.1211171595596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2650.1211171595596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.26953125,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.3515625,"distances_sum":619.9190938926397}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7803143037518045,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1391.9224546978894}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7803143037518045,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1391.9224546978894}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9276327838827845,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2208.025299990875}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9276327838827845,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2208.025299990875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973122710622711,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2572.9628675533645}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561813186813192,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":2482.5503768157996}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973122710622711,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2572.9628675533645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973122710622711,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2572.9628675533645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.26171875,"f1":null,"seconds":3.0882656574249268e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.703125,"distances_sum":673.8178244705426}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.69404865967366,"seconds":3.900378942489624e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.375,"distances_sum":1139.0534719520183}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.69404865967366,"seconds":3.900378942489624e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.375,"distances_sum":1139.0534719520183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8072032134532141,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.796875,"distances_sum":1583.7189466260825}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.6962890625,"f1":null,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.875,"distances_sum":1607.4459770521241}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8585310522810531,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1171875,"distances_sum":1792.4305539007553}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8699378746253754,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0703125,"distances_sum":1840.2346859189267}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8699378746253754,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0703125,"distances_sum":1840.2346859189267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488324175824183,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2449.9927205780714}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9523700258075262,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2449.906807766585}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9315736346986354,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2250.3657779934792}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9442765567765574,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2365.513917607188}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496565934065939,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2401.9718465141823}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9523700258075262,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2449.906807766585}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9523700258075262,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2449.906807766585}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.703641497391498,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.9765625,"distances_sum":1228.1322703153396}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":2.8442591428756714e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.328125,"distances_sum":514.8374640467788}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7015746406371413,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.9140625,"distances_sum":1245.7469653128217}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.56640625,"f1":0.7015746406371413,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.9140625,"distances_sum":1245.7469653128217}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7971335955710965,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.5,"distances_sum":1575.0931746877156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9469150641025649,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2351.0026869536855}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428285256410264,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7890625,"distances_sum":2347.1014465610533}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8420902014652023,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.90625,"distances_sum":1763.9688154527432}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9469150641025649,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2351.0026869536855}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9641228563103565,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2505.8657710696934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599759615384619,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2474.7983991180045}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978026,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2564.0492365460495}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721382783882788,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2558.841063161643}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2594.7433856640364}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9483745421245425,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7890625,"distances_sum":2404.646321598581}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2594.7433856640364}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2594.7433856640364}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8112271409146417,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4609375,"distances_sum":1590.8882799347177}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8112271409146417,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4609375,"distances_sum":1590.8882799347177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952317994505495,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2408.2185876835647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8672789016539023,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.0,"distances_sum":1873.4070636729437}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.952317994505495,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2408.2185876835647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975372023809524,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2551.9248155251344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706501831501835,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.921875,"distances_sum":2522.0733254728616}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975372023809524,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2551.9248155251344}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975372023809524,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2551.9248155251344}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.071501851081848e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.1640625,"distances_sum":779.681000148186}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.2421875,"distances_sum":1173.520795243795}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5419921875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5419921875,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.2421875,"distances_sum":1173.520795243795}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7885255369630376,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.140625,"distances_sum":1557.7529748746626}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.3984375,"distances_sum":1214.4335090756492}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8960971320346329,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.234375,"distances_sum":2079.6777382726655}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8416869588744598,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.8046875,"distances_sum":1780.752111344225}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8960971320346329,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.234375,"distances_sum":2079.6777382726655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560153388278392,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2516.4140075585365}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611664377289381,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2554.7445481830605}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2588.538875624926}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.935934898434899,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.703125,"distances_sum":2362.208036658383}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.957560668498169,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.84375,"distances_sum":2502.790131124734}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9170163170163176,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5078125,"distances_sum":2265.99078894188}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8991701007326016,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.140625,"distances_sum":2124.9196486612414}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2588.538875624926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.90625,"distances_sum":2588.538875624926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7046847249972256,"seconds":3.831461071968079e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.96875,"distances_sum":1137.8545784539906}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8694747960372969,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.0859375,"distances_sum":1801.4559018507052}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8694747960372969,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.0859375,"distances_sum":1801.4559018507052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9594754204129209,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2379.85423982446}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9066365925740932,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.25,"distances_sum":2004.5256231131061}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9594754204129209,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2379.85423982446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882786,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2431.140761351285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774210164835166,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2496.4823996886357}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712053571428575,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.921875,"distances_sum":2434.283702655841}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9774210164835166,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2496.4823996886357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9774210164835166,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2496.4823996886357}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8436105561105568,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.7734375,"distances_sum":1690.728138492479}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7933897699522708,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.1796875,"distances_sum":1426.3080464013897}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8540641650016658,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.8671875,"distances_sum":1704.197405395164}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8540641650016658,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.8671875,"distances_sum":1704.197405395164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934069,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.78125,"distances_sum":2370.2015052064644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9335341741591747,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6875,"distances_sum":2206.284546199479}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476133241758249,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6640625,"distances_sum":2357.6969754027937}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.889663288100789,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.21875,"distances_sum":1890.6036430629224}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934069,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.78125,"distances_sum":2370.2015052064644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807119963369967,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2550.622180689655}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661114926739932,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8671875,"distances_sum":2446.1477149030197}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762477106227109,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9375,"distances_sum":2492.437585203904}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669528388278392,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2441.672501104797}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562900641025648,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8046875,"distances_sum":2394.974858060119}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369967,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2550.622180689655}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369967,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9609375,"distances_sum":2550.622180689655}}, n: 9
inertia(cfft.distances) = 18.58703653291153
inertia(cdnet.distances) = 23.766362751213904
inertia(crand.distances) = 22.116638576034862
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9400000000000001
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8777777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 3, 2, 1, 2, 3, 1, 3, 3, 2, 3, 1, 3, 3, 2, 3, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 10, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 3, 1, 2, 3, 3, 2]
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.41040000333982146] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497] ***
*** starting iteration: 2; err: [Inf, 0.41040000333982146, 0.17343195122783497] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844] ***
*** starting iteration: 3; err: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292] ***
*** starting iteration: 4; err: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395] ***
*** starting iteration: 5; err: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395, 0.1608367162979197] ***
*** starting iteration: 6; err: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395, 0.1608367162979197] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395, 0.1608367162979197, 0.16026899683317192] ***
*** finished computation of 12 references, err: [Inf, 0.41040000333982146, 0.17343195122783497, 0.16562390633196844, 0.16314092300505292, 0.16188263426157395, 0.1608367162979197, 0.16026899683317192] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 10: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 12, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 14 centroids; started with 12
acc = 0.9533333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.8117000032496999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8117000032496999, 0.5817461561090296] ***
*** finished computation of 3 references, err: [Inf, 0.8117000032496999, 0.5817461561090296] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1888999851738773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1888999851738773, 0.9846980152417943] ***
*** finished computation of 3 references, err: [Inf, 1.1888999851738773, 0.9846980152417943] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 39]]
** centroid: 2, normalized-entropy: 0.9652016987500656, [(2, 25), (3, 39)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [16, 3, 0]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(1, 16), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.991200023091585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.991200023091585, 1.4243868992249957] ***
*** finished computation of 3 references, err: [Inf, 9.991200023091585, 1.4243868992249957] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 14, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 30]]
** centroid: 2, normalized-entropy: 0.9774178175281716, [(2, 21), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4530602831447908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661] ***
*** starting iteration: 2; err: [Inf, 0.4530602831447908, 0.2136169503669661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908] ***
*** starting iteration: 3; err: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747] ***
*** starting iteration: 4; err: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844] ***
*** starting iteration: 5; err: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844, 0.16945989956066135] ***
*** starting iteration: 6; err: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844, 0.16945989956066135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844, 0.16945989956066135, 0.16945989956066135] ***
*** finished computation of 7 references, err: [Inf, 0.4530602831447908, 0.2136169503669661, 0.18334015330076908, 0.1768325493312747, 0.17190079328256844, 0.16945989956066135, 0.16945989956066135] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 5]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 20), (3, 5)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5792175563330676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5792175563330676, 0.229091469412812] ***
*** starting iteration: 2; err: [Inf, 0.5792175563330676, 0.229091469412812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994] ***
*** starting iteration: 3; err: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766] ***
*** starting iteration: 4; err: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766, 0.17334677202469181] ***
*** starting iteration: 5; err: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766, 0.17334677202469181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766, 0.17334677202469181, 0.1727413773694308] ***
*** finished computation of 7 references, err: [Inf, 0.5792175563330676, 0.229091469412812, 0.19038638427029994, 0.17624092642518766, 0.17334677202469181, 0.1727413773694308] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7656493442394183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7656493442394183, 0.29586073827909465] ***
*** starting iteration: 2; err: [Inf, 0.7656493442394183, 0.29586073827909465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821] ***
*** starting iteration: 3; err: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821, 0.2795106359235848] ***
*** starting iteration: 4; err: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821, 0.2795106359235848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821, 0.2795106359235848, 0.2790537727376464] ***
*** finished computation of 7 references, err: [Inf, 0.7656493442394183, 0.29586073827909465, 0.2852106283838821, 0.2795106359235848, 0.2790537727376464] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 30]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 10), (3, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44260223066385507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44260223066385507, 0.23840141969327458] ***
*** starting iteration: 2; err: [Inf, 0.44260223066385507, 0.23840141969327458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44260223066385507, 0.23840141969327458, 0.22232722507267527] ***
*** starting iteration: 3; err: [Inf, 0.44260223066385507, 0.23840141969327458, 0.22232722507267527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44260223066385507, 0.23840141969327458, 0.22232722507267527, 0.21523068302737688] ***
*** finished computation of 7 references, err: [Inf, 0.44260223066385507, 0.23840141969327458, 0.22232722507267527, 0.21523068302737688] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 16, 14]]
** centroid: 7, normalized-entropy: 0.9967916319816367, [(2, 16), (3, 14)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6733775678704771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6733775678704771, 0.3743222372022484] ***
*** starting iteration: 2; err: [Inf, 0.6733775678704771, 0.3743222372022484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6733775678704771, 0.3743222372022484, 0.2812801826705745] ***
*** starting iteration: 3; err: [Inf, 0.6733775678704771, 0.3743222372022484, 0.2812801826705745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6733775678704771, 0.3743222372022484, 0.2812801826705745, 0.22686770393517286] ***
*** finished computation of 7 references, err: [Inf, 0.6733775678704771, 0.3743222372022484, 0.2812801826705745, 0.22686770393517286] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 24]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 8), (3, 24)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40557048535295226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40557048535295226, 0.27476194758784006] ***
*** starting iteration: 2; err: [Inf, 0.40557048535295226, 0.27476194758784006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40557048535295226, 0.27476194758784006, 0.27430765378363015] ***
*** finished computation of 7 references, err: [Inf, 0.40557048535295226, 0.27476194758784006, 0.27430765378363015] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 30]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 10), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3866358554396494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3866358554396494, 0.21107909125679467] ***
*** finished computation of 7 references, err: [Inf, 0.3866358554396494, 0.21107909125679467] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 10]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8133033620055725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8133033620055725, 0.26778979712081696] ***
*** finished computation of 7 references, err: [Inf, 0.8133033620055725, 0.26778979712081696] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.327365745209368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.327365745209368, 0.21914755036906292] ***
*** finished computation of 7 references, err: [Inf, 0.327365745209368, 0.21914755036906292] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 13]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7398000047739753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7398000047739753, 0.2851637979575306] ***
*** starting iteration: 2; err: [Inf, 0.7398000047739753, 0.2851637979575306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695] ***
*** starting iteration: 3; err: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695, 0.24640736439020475] ***
*** starting iteration: 4; err: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695, 0.24640736439020475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695, 0.24640736439020475, 0.24640736439020475] ***
*** finished computation of 7 references, err: [Inf, 0.7398000047739753, 0.2851637979575306, 0.25195766894171695, 0.24640736439020475, 0.24640736439020475] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 6]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.689799969107666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295] ***
*** starting iteration: 2; err: [Inf, 4.689799969107666, 1.0327284285028295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825] ***
*** starting iteration: 3; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193] ***
*** starting iteration: 4; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717] ***
*** starting iteration: 5; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443] ***
*** starting iteration: 6; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799] ***
*** starting iteration: 7; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347] ***
*** starting iteration: 8; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394] ***
*** starting iteration: 9; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394, 0.25145380374869425] ***
*** starting iteration: 10; err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394, 0.25145380374869425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394, 0.25145380374869425, 0.24281169384375118] ***
*** finished computation of 7 references, err: [Inf, 4.689799969107666, 1.0327284285028295, 0.39768872934751825, 0.3191671729447193, 0.2933833927141717, 0.2757166842216443, 0.2703269149616799, 0.26420262618804347, 0.26086072367183394, 0.25145380374869425, 0.24281169384375118] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5273000011321705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524] ***
*** starting iteration: 2; err: [Inf, 0.5273000011321705, 0.33437576145265524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054] ***
*** starting iteration: 3; err: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103] ***
*** starting iteration: 4; err: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553] ***
*** starting iteration: 5; err: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553, 0.2744684074967812] ***
*** starting iteration: 6; err: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553, 0.2744684074967812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553, 0.2744684074967812, 0.2744684074967812] ***
*** finished computation of 7 references, err: [Inf, 0.5273000011321705, 0.33437576145265524, 0.29577331205941054, 0.2833467627006103, 0.27763473124383553, 0.2744684074967812, 0.2744684074967812] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6363000140549167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6363000140549167, 1.0944705575012381] ***
*** starting iteration: 2; err: [Inf, 1.6363000140549167, 1.0944705575012381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383] ***
*** starting iteration: 3; err: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416] ***
*** starting iteration: 4; err: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416, 1.0729034122077559] ***
*** starting iteration: 5; err: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416, 1.0729034122077559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416, 1.0729034122077559, 1.0725676830944364] ***
*** finished computation of 3 references, err: [Inf, 1.6363000140549167, 1.0944705575012381, 1.0828322837043383, 1.075547256502416, 1.0729034122077559, 1.0725676830944364] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 30]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 35), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 2, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6393999991630233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655] ***
*** starting iteration: 2; err: [Inf, 0.6393999991630233, 0.546606211496655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842] ***
*** starting iteration: 3; err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967] ***
*** starting iteration: 4; err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327] ***
*** starting iteration: 5; err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066] ***
*** starting iteration: 6; err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066, 0.5224976090185528] ***
*** starting iteration: 7; err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066, 0.5224976090185528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066, 0.5224976090185528, 0.5216031084360155] ***
*** finished computation of 3 references, err: [Inf, 0.6393999991630233, 0.546606211496655, 0.5427498216829842, 0.5365652324186967, 0.5286025628675327, 0.5254029598828066, 0.5224976090185528, 0.5216031084360155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 11]]
** centroid: 2, normalized-entropy: 0.8779620013943914, [(2, 26), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.691099938805234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.691099938805234, 0.9578739745774871] ***
*** starting iteration: 2; err: [Inf, 8.691099938805234, 0.9578739745774871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256] ***
*** starting iteration: 3; err: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734] ***
*** starting iteration: 4; err: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734, 0.8095344815654479] ***
*** starting iteration: 5; err: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734, 0.8095344815654479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734, 0.8095344815654479, 0.8095344815654479] ***
*** finished computation of 3 references, err: [Inf, 8.691099938805234, 0.9578739745774871, 0.8155349698768256, 0.813376041033734, 0.8095344815654479, 0.8095344815654479] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 31]]
** centroid: 2, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 1, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 19), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9333000178919272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135] ***
*** starting iteration: 2; err: [Inf, 0.9333000178919272, 0.46247575142626135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835] ***
*** starting iteration: 3; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348] ***
*** starting iteration: 4; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183] ***
*** starting iteration: 5; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545] ***
*** starting iteration: 6; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585] ***
*** starting iteration: 7; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585, 0.26300711497899465] ***
*** starting iteration: 8; err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585, 0.26300711497899465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585, 0.26300711497899465, 0.2623009828263168] ***
*** finished computation of 7 references, err: [Inf, 0.9333000178919272, 0.46247575142626135, 0.33408941447374835, 0.2919079997679348, 0.28451588634385183, 0.27215258319890545, 0.26450152056106585, 0.26300711497899465, 0.2623009828263168] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49200000000019484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325] ***
*** starting iteration: 2; err: [Inf, 0.49200000000019484, 0.3194391342639325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486] ***
*** starting iteration: 3; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154] ***
*** starting iteration: 4; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126] ***
*** starting iteration: 5; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431] ***
*** starting iteration: 6; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954] ***
*** starting iteration: 7; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724] ***
*** starting iteration: 8; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724, 0.2922522803865187] ***
*** starting iteration: 9; err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724, 0.2922522803865187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724, 0.2922522803865187, 0.2922522803865187] ***
*** finished computation of 7 references, err: [Inf, 0.49200000000019484, 0.3194391342639325, 0.31492996408269486, 0.31271460951761154, 0.31023305110814126, 0.3062503503761431, 0.30003261454649954, 0.2943161552216724, 0.2922522803865187, 0.2922522803865187] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 23]]
** centroid: 4, normalized-entropy: 0.7355085815538399, [(2, 6), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.008900004248621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992] ***
*** starting iteration: 2; err: [Inf, 1.008900004248621, 0.497312749090992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762] ***
*** starting iteration: 3; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132] ***
*** starting iteration: 4; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417] ***
*** starting iteration: 5; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339] ***
*** starting iteration: 6; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871] ***
*** starting iteration: 7; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871, 0.2727904286340828] ***
*** starting iteration: 8; err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871, 0.2727904286340828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871, 0.2727904286340828, 0.2721970963461778] ***
*** finished computation of 7 references, err: [Inf, 1.008900004248621, 0.497312749090992, 0.3503790673336762, 0.3136279238385132, 0.29703607266511417, 0.2835956004517339, 0.2763365115257871, 0.2727904286340828, 0.2721970963461778] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 12]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.6033932005880946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073] ***
*** starting iteration: 2; err: [Inf, 2.6033932005880946, 0.687494128690073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914] ***
*** starting iteration: 3; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974] ***
*** starting iteration: 4; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841] ***
*** starting iteration: 5; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235] ***
*** starting iteration: 6; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085] ***
*** starting iteration: 7; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085, 0.3762966792708981] ***
*** starting iteration: 8; err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085, 0.3762966792708981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085, 0.3762966792708981, 0.3756935739522204] ***
*** finished computation of 3 references, err: [Inf, 2.6033932005880946, 0.687494128690073, 0.48166610980206914, 0.43796829991250974, 0.4168250066623841, 0.3972841937363235, 0.3827429550800085, 0.3762966792708981, 0.3756935739522204] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 5]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 35), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4619923108100188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4619923108100188, 0.6499104991859541] ***
*** starting iteration: 2; err: [Inf, 1.4619923108100188, 0.6499104991859541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394] ***
*** starting iteration: 3; err: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394, 0.6307334705084666] ***
*** starting iteration: 4; err: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394, 0.6307334705084666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394, 0.6307334705084666, 0.6305213489441583] ***
*** finished computation of 3 references, err: [Inf, 1.4619923108100188, 0.6499104991859541, 0.6352176155771394, 0.6307334705084666, 0.6305213489441583] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 39]]
** centroid: 1, normalized-entropy: 0.9652016987500656, [(2, 25), (3, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 3, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2320704347147178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2320704347147178, 0.5594432064517786] ***
*** starting iteration: 2; err: [Inf, 2.2320704347147178, 0.5594432064517786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2320704347147178, 0.5594432064517786, 0.5484306938513683] ***
*** starting iteration: 3; err: [Inf, 2.2320704347147178, 0.5594432064517786, 0.5484306938513683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2320704347147178, 0.5594432064517786, 0.5484306938513683, 0.5478509427097132] ***
*** finished computation of 3 references, err: [Inf, 2.2320704347147178, 0.5594432064517786, 0.5484306938513683, 0.5478509427097132] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 1, 0]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(1, 24), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0118999929738084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0118999929738084, 0.4309767009415952] ***
*** finished computation of 7 references, err: [Inf, 1.0118999929738084, 0.4309767009415952] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0252000224642408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0252000224642408, 0.49210909996345475] ***
*** finished computation of 7 references, err: [Inf, 1.0252000224642408, 0.49210909996345475] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 32]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 5, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5632000071522216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5632000071522216, 0.4096534474517148] ***
*** finished computation of 7 references, err: [Inf, 0.5632000071522216, 0.4096534474517148] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4373000206134623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4373000206134623, 0.7288453879618396] ***
*** finished computation of 3 references, err: [Inf, 1.4373000206134623, 0.7288453879618396] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 17]]
** centroid: 2, normalized-entropy: 0.9052002969560479, [(2, 36), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8789999843100675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8789999843100675, 0.9751688532373861] ***
*** finished computation of 3 references, err: [Inf, 3.8789999843100675, 0.9751688532373861] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 20, 39]]
** centroid: 3, normalized-entropy: 0.9238422284571813, [(2, 20), (3, 39)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.543599983747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.543599983747, 1.3031438701723237] ***
*** finished computation of 3 references, err: [Inf, 10.543599983747, 1.3031438701723237] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 3]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 28]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9743000014857501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9743000014857501, 0.5749161259581608] ***
*** starting iteration: 2; err: [Inf, 0.9743000014857501, 0.5749161259581608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9743000014857501, 0.5749161259581608, 0.548648461942087] ***
*** starting iteration: 3; err: [Inf, 0.9743000014857501, 0.5749161259581608, 0.548648461942087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9743000014857501, 0.5749161259581608, 0.548648461942087, 0.5401506968148314] ***
*** finished computation of 3 references, err: [Inf, 0.9743000014857501, 0.5749161259581608, 0.548648461942087, 0.5401506968148314] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 6]]
** centroid: 3, normalized-entropy: 0.5830194167347007, [(2, 37), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6119000011907172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6119000011907172, 0.5508546233082874] ***
*** starting iteration: 2; err: [Inf, 1.6119000011907172, 0.5508546233082874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6119000011907172, 0.5508546233082874, 0.5250679623690084] ***
*** starting iteration: 3; err: [Inf, 1.6119000011907172, 0.5508546233082874, 0.5250679623690084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6119000011907172, 0.5508546233082874, 0.5250679623690084, 0.5225485082774104] ***
*** finished computation of 3 references, err: [Inf, 1.6119000011907172, 0.5508546233082874, 0.5250679623690084, 0.5225485082774104] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 11]]
** centroid: 3, normalized-entropy: 0.8779620013943914, [(2, 26), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.043399988851571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.043399988851571, 0.5095669884365353] ***
*** starting iteration: 2; err: [Inf, 1.043399988851571, 0.5095669884365353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.043399988851571, 0.5095669884365353, 0.5010074447115056] ***
*** starting iteration: 3; err: [Inf, 1.043399988851571, 0.5095669884365353, 0.5010074447115056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.043399988851571, 0.5095669884365353, 0.5010074447115056, 0.5000412722421301] ***
*** finished computation of 3 references, err: [Inf, 1.043399988851571, 0.5095669884365353, 0.5010074447115056, 0.5000412722421301] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32543575832960864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32543575832960864, 0.20861698866643813] ***
*** starting iteration: 2; err: [Inf, 0.32543575832960864, 0.20861698866643813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213] ***
*** starting iteration: 3; err: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213, 0.19638858996638192] ***
*** starting iteration: 4; err: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213, 0.19638858996638192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213, 0.19638858996638192, 0.19599424876813415] ***
*** finished computation of 7 references, err: [Inf, 0.32543575832960864, 0.20861698866643813, 0.19748549271041213, 0.19638858996638192, 0.19599424876813415] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 3]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45292803044532337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45292803044532337, 0.2089000310504407] ***
*** starting iteration: 2; err: [Inf, 0.45292803044532337, 0.2089000310504407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577] ***
*** starting iteration: 3; err: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577, 0.18965494973465502] ***
*** starting iteration: 4; err: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577, 0.18965494973465502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577, 0.18965494973465502, 0.18901230523919751] ***
*** finished computation of 7 references, err: [Inf, 0.45292803044532337, 0.2089000310504407, 0.192618854253577, 0.18965494973465502, 0.18901230523919751] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 23]]
** centroid: 1, normalized-entropy: 0.8238116333123173, [(2, 8), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48398929563189214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48398929563189214, 0.16802330504354757] ***
*** starting iteration: 2; err: [Inf, 0.48398929563189214, 0.16802330504354757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708] ***
*** starting iteration: 3; err: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708, 0.1558739859373019] ***
*** starting iteration: 4; err: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708, 0.1558739859373019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708, 0.1558739859373019, 0.15531997044279625] ***
*** finished computation of 7 references, err: [Inf, 0.48398929563189214, 0.16802330504354757, 0.15797752015544708, 0.1558739859373019, 0.15531997044279625] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3127164111387588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3127164111387588, 0.23451079150098725] ***
*** finished computation of 7 references, err: [Inf, 0.3127164111387588, 0.23451079150098725] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 31, 1]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 19]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(2, 6), (3, 19)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33691150672536013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33691150672536013, 0.18116852152204965] ***
*** finished computation of 7 references, err: [Inf, 0.33691150672536013, 0.18116852152204965] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 6]]
** centroid: 7, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5117801336860012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5117801336860012, 0.1629445982718787] ***
*** finished computation of 7 references, err: [Inf, 0.5117801336860012, 0.1629445982718787] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40856849286955904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40856849286955904, 0.18585086945015455] ***
*** starting iteration: 2; err: [Inf, 0.40856849286955904, 0.18585086945015455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915] ***
*** starting iteration: 3; err: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915, 0.16865054430877596] ***
*** starting iteration: 4; err: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915, 0.16865054430877596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915, 0.16865054430877596, 0.16865054430877596] ***
*** finished computation of 7 references, err: [Inf, 0.40856849286955904, 0.18585086945015455, 0.17024828983617915, 0.16865054430877596, 0.16865054430877596] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 1, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41377529254049733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41377529254049733, 0.2034890861088802] ***
*** starting iteration: 2; err: [Inf, 0.41377529254049733, 0.2034890861088802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675] ***
*** starting iteration: 3; err: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675, 0.1912547519145291] ***
*** starting iteration: 4; err: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675, 0.1912547519145291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675, 0.1912547519145291, 0.1903829721196538] ***
*** finished computation of 7 references, err: [Inf, 0.41377529254049733, 0.2034890861088802, 0.19276359670782675, 0.1912547519145291, 0.1903829721196538] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 25]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(2, 8), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46842642671880386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46842642671880386, 0.1777390227144915] ***
*** starting iteration: 2; err: [Inf, 0.46842642671880386, 0.1777390227144915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658] ***
*** starting iteration: 3; err: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403] ***
*** starting iteration: 4; err: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403, 0.15531997044279625] ***
*** starting iteration: 5; err: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403, 0.15531997044279625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403, 0.15531997044279625, 0.15531997044279625] ***
*** finished computation of 7 references, err: [Inf, 0.46842642671880386, 0.1777390227144915, 0.16536210150180658, 0.15674720331590403, 0.15531997044279625, 0.15531997044279625] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6879000070470213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6879000070470213, 0.26232111279984255] ***
*** starting iteration: 2; err: [Inf, 0.6879000070470213, 0.26232111279984255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6879000070470213, 0.26232111279984255, 0.24086864950218534] ***
*** starting iteration: 3; err: [Inf, 0.6879000070470213, 0.26232111279984255, 0.24086864950218534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6879000070470213, 0.26232111279984255, 0.24086864950218534, 0.2400518066597142] ***
*** finished computation of 7 references, err: [Inf, 0.6879000070470213, 0.26232111279984255, 0.24086864950218534, 0.2400518066597142] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 6]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49400000104542924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49400000104542924, 0.25292371550652676] ***
*** starting iteration: 2; err: [Inf, 0.49400000104542924, 0.25292371550652676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49400000104542924, 0.25292371550652676, 0.23583124776692446] ***
*** starting iteration: 3; err: [Inf, 0.49400000104542924, 0.25292371550652676, 0.23583124776692446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49400000104542924, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033] ***
*** finished computation of 7 references, err: [Inf, 0.49400000104542924, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5783000087293227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5783000087293227, 0.23701416526224542] ***
*** starting iteration: 2; err: [Inf, 0.5783000087293227, 0.23701416526224542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5783000087293227, 0.23701416526224542, 0.22875437690309045] ***
*** starting iteration: 3; err: [Inf, 0.5783000087293227, 0.23701416526224542, 0.22875437690309045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5783000087293227, 0.23701416526224542, 0.22875437690309045, 0.22679005831829815] ***
*** finished computation of 7 references, err: [Inf, 0.5783000087293227, 0.23701416526224542, 0.22875437690309045, 0.22679005831829815] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 12]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 8), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6174000040532103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6174000040532103, 0.2714669166356392] ***
*** finished computation of 7 references, err: [Inf, 0.6174000040532103, 0.2714669166356392] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48830000007927593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48830000007927593, 0.25292371550652676] ***
*** finished computation of 7 references, err: [Inf, 0.48830000007927593, 0.25292371550652676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 6]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6784000068184816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6784000068184816, 0.23438015951479044] ***
*** finished computation of 7 references, err: [Inf, 0.6784000068184816, 0.23438015951479044] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4366348575128995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366348575128995, 0.20982069880595655] ***
*** starting iteration: 2; err: [Inf, 0.4366348575128995, 0.20982069880595655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366348575128995, 0.20982069880595655, 0.20617145025267913] ***
*** starting iteration: 3; err: [Inf, 0.4366348575128995, 0.20982069880595655, 0.20617145025267913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4366348575128995, 0.20982069880595655, 0.20617145025267913, 0.2009211962274749] ***
*** finished computation of 7 references, err: [Inf, 0.4366348575128995, 0.20982069880595655, 0.20617145025267913, 0.2009211962274749] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 14]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(2, 16), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4056119927754006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4056119927754006, 0.17290394360941416] ***
*** starting iteration: 2; err: [Inf, 0.4056119927754006, 0.17290394360941416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4056119927754006, 0.17290394360941416, 0.16191924302549793] ***
*** starting iteration: 3; err: [Inf, 0.4056119927754006, 0.17290394360941416, 0.16191924302549793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4056119927754006, 0.17290394360941416, 0.16191924302549793, 0.15647564319849483] ***
*** finished computation of 7 references, err: [Inf, 0.4056119927754006, 0.17290394360941416, 0.16191924302549793, 0.15647564319849483] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39390779665647346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39390779665647346, 0.20430666070879933] ***
*** starting iteration: 2; err: [Inf, 0.39390779665647346, 0.20430666070879933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39390779665647346, 0.20430666070879933, 0.17705155571867884] ***
*** starting iteration: 3; err: [Inf, 0.39390779665647346, 0.20430666070879933, 0.17705155571867884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39390779665647346, 0.20430666070879933, 0.17705155571867884, 0.17249152018498454] ***
*** finished computation of 7 references, err: [Inf, 0.39390779665647346, 0.20430666070879933, 0.17705155571867884, 0.17249152018498454] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 15]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 12), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.6044000087869573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6044000087869573, 0.26486294710882896] ***
*** starting iteration: 2; err: [Inf, 0.6044000087869573, 0.26486294710882896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605] ***
*** starting iteration: 3; err: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605, 0.24182330819600717] ***
*** starting iteration: 4; err: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605, 0.24182330819600717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605, 0.24182330819600717, 0.24119756555262814] ***
*** finished computation of 7 references, err: [Inf, 0.6044000087869573, 0.26486294710882896, 0.24467862880899605, 0.24182330819600717, 0.24119756555262814] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 6]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48830000007927593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48830000007927593, 0.25292371550652676] ***
*** starting iteration: 2; err: [Inf, 0.48830000007927593, 0.25292371550652676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446] ***
*** starting iteration: 3; err: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033] ***
*** starting iteration: 4; err: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033, 0.23228533842905302] ***
*** finished computation of 7 references, err: [Inf, 0.48830000007927593, 0.25292371550652676, 0.23583124776692446, 0.23282366651031033, 0.23228533842905302] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5902000055649023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902000055649023, 0.23528589576518028] ***
*** starting iteration: 2; err: [Inf, 0.5902000055649023, 0.23528589576518028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457] ***
*** starting iteration: 3; err: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232] ***
*** starting iteration: 4; err: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232, 0.2244959198338524] ***
*** starting iteration: 5; err: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232, 0.2244959198338524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232, 0.2244959198338524, 0.2244959198338524] ***
*** finished computation of 7 references, err: [Inf, 0.5902000055649023, 0.23528589576518028, 0.22853811620054457, 0.22659602106312232, 0.2244959198338524, 0.2244959198338524] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2) => 0.98
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.964864864864864, 2.781081081081081, 4.316216216216216, 1.343243243243243], [6.08, 2.85, 5.239999999999999, 1.92], [7.280000000000001, 3.1533333333333338, 6.193333333333333, 2.1333333333333333], [5.021212121212121, 3.4242424242424248, 1.4818181818181817, 0.2606060606060607]], [0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.829411764705882, 3.2176470588235295, 1.4058823529411766, 0.20000000000000004], [6.000000000000001, 2.8200000000000007, 4.344000000000001, 1.36], [6.566666666666667, 3.0102564102564098, 5.502564102564103, 2.0512820512820507], [5.25, 3.6624999999999996, 1.4312500000000001, 0.2750000000000001], [5.0, 2.4, 3.1999999999999997, 1.0333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.474285714285713, 2.9042857142857144, 3.301428571428571, 0.9871428571428571], [6.233333333333333, 2.8952380952380947, 4.504761904761905, 1.4142857142857141], [6.4700000000000015, 2.9066666666666663, 5.446666666666666, 1.9766666666666663], [5.7, 4.4, 1.5, 0.4]], [0.0, 0.0, 0.0, 0.0], [2, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 1, 1.0, :dnet, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[59, 23, 1, 1, 13, 31, 37, 24, 36, 25, 32, 23, 15, 1, 38, 1, 16, 19, 23, 3, 26, 1, 30, 19, 36, 31, 27, 23, 39, 56, 1, 5, 37, 24, 33, 17, 28, 24, 15, 30, 33, 31, 47, 42, 42, 17, 32, 33, 30, 24, 28, 28, 26, 30, 32, 31, 35, 31, 45, 48, 41, 25, 29, 31, 40, 1, 23, 25, 20, 13, 29, 42, 23, 14, 33, 32, 29, 7, 33, 82, 57, 32, 35, 42, 27, 72, 46, 34, 34, 20, 21, 36, 32, 29, 29, 33, 23, 17, 47, 38, 39, 29, 22, 29, 36, 23, 25, 35, 36, 31, 41, 59, 27, 50, 38, 46, 50, 40, 49, 34, 35, 43, 36, 27, 37, 20, 34, 23, 28, 20, 17, 37, 32, 19, 24, 35, 35, 42, 38, 26, 51, 17, 47, 41, 47, 52, 54, 28, 3, 47, 37, 46, 38, 25, 36, 26, 40, 49, 31, 42, 37, 49, 37, 35, 25, 43, 26, 31, 30, 55, 17, 39, 42, 34, 45, 44, 40, 19, 52, 30, 42, 44, 1, 51, 26, 1, 24, 43, 35, 53, 40, 24, 35, 45, 27, 27, 39, 30, 43, 26, 44, 51, 35, 31, 40, 44, 39, 17, 33, 2, 1, 24, 34, 24, 51, 41, 36, 24, 44, 40, 36, 38, 32, 8, 37, 48, 44, 18, 54, 35, 25, 29, 33, 43, 46, 25, 21, 2, 46, 59, 55, 47, 37, 48, 36, 37, 66, 31, 34, 26, 30, 26, 2, 41, 39, 27, 34, 48, 40, 52, 47, 43, 25, 49, 43, 76, 73, 45, 40, 44, 44, 35, 56, 70, 14, 37, 28, 17, 26, 29, 24, 49, 42, 36, 18, 45, 38, 26, 40, 34, 57, 25, 31, 34, 33, 22, 31, 22, 37, 71]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6100000000000001, speedup = 0.3555737696823665, eval_ratio = 0.041847)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4071180555555556,"recall":0.4010416666666667,"f1":null,"seconds":4.313141107559204e-5,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":338.6796875,"distances_sum":1740.414490497204}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.579861111111111,"recall":0.579861111111111,"f1":0.579861111111111,"seconds":6.629340350627899e-5,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":377.8359375,"distances_sum":1636.0129831417612}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888884,"recall":0.6701388888888884,"f1":0.6701388888888884,"seconds":8.55959951877594e-5,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":417.7890625,"distances_sum":1599.3398380759138}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.719618055555555,"recall":0.719618055555555,"f1":0.719618055555555,"seconds":0.0001039411872625351,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":456.234375,"distances_sum":1582.6813316733317}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.782118055555555,"recall":0.782118055555555,"f1":0.782118055555555,"seconds":0.00012121349573135376,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":495.1640625,"distances_sum":1565.7182433796063}
KCenters.DeloneInvIndex> reached performance {"precision":0.8263888888888884,"recall":0.8263888888888884,"f1":0.8263888888888884,"seconds":0.00013933703303337097,"exhaustive_search_seconds":0.0002196095883846283,"evaluations":535.765625,"distances_sum":1556.1776176765675}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7979999999999999, speedup = 2.478199525104099, eval_ratio = 0.0537)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
