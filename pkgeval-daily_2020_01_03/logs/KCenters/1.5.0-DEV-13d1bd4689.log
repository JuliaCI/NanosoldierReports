Julia Version 1.5.0-DEV.0
Commit 13d1bd4689 (2019-12-31 18:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed DataStructures ────────────── v0.17.6
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Tables ────────────────────── v0.2.11
 Installed TableTraits ───────────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.5
 Installed SimilaritySearch ──────────── v0.3.17
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_tqwkfz/Project.toml`
 [no changes]
  Updating `/tmp/jl_tqwkfz/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_tqwkfz/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 120.51000000000005
[ Info: 82.14000000000004
[ Info: 40.379999999999995
[ Info: 24.810000000000006
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 75.70000115760388
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.028711381645874
inertia(cdnet.distances) = 23.787152533673854
inertia(crand.distances) = 22.468817292459928
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8437701187701196,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.328125,"distances_sum":2347.1521709632198}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5185546875,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":7.1796875,"distances_sum":1493.8746010173716}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3232421875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3232421875,"f1":null,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":6.03125,"distances_sum":932.3200364235088}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8437701187701196,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.328125,"distances_sum":2347.1521709632198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481684981684985,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.859375,"distances_sum":3062.0068170240806}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9481684981684985,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.859375,"distances_sum":3062.0068170240806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.890625,"distances_sum":3263.943130320171}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.890625,"distances_sum":3263.943130320171}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.890625,"distances_sum":3263.943130320171}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8756587162837174,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.90625,"distances_sum":2334.725610409082}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.21875,"distances_sum":1153.5636383981746}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.3515625,"distances_sum":656.1436209845027}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8756587162837174,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.90625,"distances_sum":2334.725610409082}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9338141025641031,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2830.2586544480537}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9338141025641031,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2830.2586544480537}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.954578754578755,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2986.2396884330337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522009240759243,"seconds":7.601454854011536e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2974.838848050262}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9619848901098905,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":3070.548035839161}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548992673992681,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2999.8177285599245}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9619848901098905,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":3070.548035839161}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9619848901098905,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":3070.548035839161}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8554835789210795,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0078125,"distances_sum":2198.217893520164}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.46875,"distances_sum":1168.004477248452}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8554835789210795,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0078125,"distances_sum":2198.217893520164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9509761072261077,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2977.131132212593}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9321517024642029,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6953125,"distances_sum":2776.6653638874263}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8657379079254088,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.03125,"distances_sum":2243.066890141487}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9509761072261077,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2977.131132212593}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809528,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":3193.3919642512024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649210164835168,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":3026.7737716824777}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073265,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9609375,"distances_sum":3106.7027931053262}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644692,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9140625,"distances_sum":3060.4188913681387}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.961240842490843,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":3017.453275527074}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622653388278394,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":3062.4764953905456}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809528,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":3193.3919642512024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809528,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":3193.3919642512024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5966796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5966796875,"f1":0.7359328171828179,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.3828125,"distances_sum":1560.1927442574286}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5966796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5966796875,"f1":0.7359328171828179,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.3828125,"distances_sum":1560.1927442574286}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5966796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5966796875,"f1":0.7359328171828179,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.3828125,"distances_sum":1560.1927442574286}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.5966796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5966796875,"f1":0.7359328171828179,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.3828125,"distances_sum":1560.1927442574286}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.5390625,"distances_sum":640.515164450957}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.78125,"distances_sum":699.5998252682479}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.248046875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.78125,"distances_sum":699.5998252682479}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.890625,"distances_sum":950.4715580103832}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3857421875,"state":{"ssize":8,"bsize":2},"perf":{"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.890625,"distances_sum":950.4715580103832}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3857421875,"state":{"ssize":8,"bsize":2},"perf":{"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.890625,"distances_sum":950.4715580103832}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.3857421875,"state":{"ssize":8,"bsize":2},"perf":{"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.890625,"distances_sum":950.4715580103832}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.285706043243408e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.921875,"distances_sum":577.8048530002928}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.3046875,"distances_sum":985.7869409539497}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.789150953213454,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.6015625,"distances_sum":1745.6763604238301}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.789150953213454,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.6015625,"distances_sum":1745.6763604238301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7949000652125662,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5859375,"distances_sum":1841.2905941245226}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9533711080586086,"seconds":6.940215826034546e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2789.7048355597144}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946920787545788,"seconds":6.7390501499176025e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2754.6489470191855}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8173512251637258,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1924.0198698536215}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8890827922077931,"seconds":8.17514955997467e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.5078125,"distances_sum":2303.6853424082083}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8589722777222785,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0625,"distances_sum":2097.4761427079225}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9533711080586086,"seconds":6.940215826034546e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2789.7048355597144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632326007326012,"seconds":7.299706339836121e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9140625,"distances_sum":2843.7361326431965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":7.361173629760742e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2981.643533421797}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962780448717949,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2880.434670010785}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564961080586086,"seconds":6.934627890586853e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2844.1850982432143}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9708905677655679,"seconds":7.160007953643799e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2944.1259022821}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":7.361173629760742e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2981.643533421797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":7.361173629760742e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2981.643533421797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":6.078125,"distances_sum":589.3187493189968}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.781247745310246,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.3515625,"distances_sum":1724.5783506756509}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7064969752469756,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.0078125,"distances_sum":1400.5963131207989}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.781247745310246,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.3515625,"distances_sum":1724.5783506756509}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8956990925740933,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.3828125,"distances_sum":2312.9674732364188}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8519157925407934,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.7890625,"distances_sum":2047.6082645319661}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9290095321345327,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.703125,"distances_sum":2619.7400398463146}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.786840763403264,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.515625,"distances_sum":1720.13719901922}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9290095321345327,"seconds":6.735324859619141e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.703125,"distances_sum":2619.7400398463146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.979761904761905,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":2984.9405547238325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599733599733604,"seconds":7.014721632003784e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8984375,"distances_sum":2812.6889220914827}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949582188644689,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.7890625,"distances_sum":2769.065759720066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9397092490842496,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.6953125,"distances_sum":2659.938226998863}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.979761904761905,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":2984.9405547238325}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.979761904761905,"seconds":7.249414920806885e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9765625,"distances_sum":2984.9405547238325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8676089535464543,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.125,"distances_sum":2185.445622596297}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7025098165723173,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.2578125,"distances_sum":1398.9840068425328}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.1171875,"distances_sum":1023.3570661434131}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8676089535464543,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.125,"distances_sum":2185.445622596297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8687401140526146,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.125,"distances_sum":2252.860470182994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9544700091575096,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":2898.3816802169067}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544700091575096,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":2898.3816802169067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584306318681324,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2875.42462123885}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696657509157514,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2955.2487725167302}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783482142857145,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":3032.1936251062593}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783482142857145,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":3032.1936251062593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783482142857145,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":3032.1936251062593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7983480061605068,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.609375,"distances_sum":1830.2796092501258}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7106766497391506,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.9375,"distances_sum":1540.1278877154405}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.388151526451111e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.21875,"distances_sum":663.3817175877338}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7983480061605068,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.609375,"distances_sum":1830.2796092501258}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9040183774558784,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.421875,"distances_sum":2468.4339242618717}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9209941100566109,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.609375,"distances_sum":2638.8679413686314}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8669112137862145,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8046875,"distances_sum":2218.105924376356}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9209941100566109,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.609375,"distances_sum":2638.8679413686314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":3020.2101868335453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455986721611729,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7421875,"distances_sum":2813.9010416880587}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9492845695970702,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.734375,"distances_sum":2896.836394699963}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480540293040298,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2867.6650511156076}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":3020.2101868335453}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":3020.2101868335453}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8999802281052288,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7265625,"distances_sum":2480.2496278528665}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.328125,"f1":null,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.0234375,"distances_sum":1002.8056574724899}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.8999802281052288,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7265625,"distances_sum":2480.2496278528665}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559752747252754,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2956.338319773886}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559752747252754,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2956.338319773886}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":3179.9767549534895}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":3179.9767549534895}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":3179.9767549534895}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7737770909645918,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":7.2109375,"distances_sum":1885.361702034092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":5.21875,"distances_sum":544.4289278839155}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7737770909645918,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":7.2109375,"distances_sum":1885.361702034092}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8981804653679661,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":8.40625,"distances_sum":2527.7045904821384}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.8981804653679661,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":8.40625,"distances_sum":2527.7045904821384}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419013278388286,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":8.6875,"distances_sum":2841.929017184757}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9419013278388286,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":8.6875,"distances_sum":2841.929017184757}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9419013278388286,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.5720725059509277e-6,"evaluations":8.6875,"distances_sum":2841.929017184757}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.625,"distances_sum":570.7019396852135}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6990696803196809,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.6953125,"distances_sum":1428.2558358771696}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.484375,"distances_sum":563.9243665494503}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6990696803196809,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.6953125,"distances_sum":1428.2558358771696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8741815476190486,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.2578125,"distances_sum":2285.491750804213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8070856227106235,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.5390625,"distances_sum":1907.90678626658}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9271062271062278,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5859375,"distances_sum":2724.206698080235}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8589009948384958,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8125,"distances_sum":2155.8398297711124}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7678519397269405,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.2890625,"distances_sum":1692.2202969566608}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8769204753579763,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.9453125,"distances_sum":2308.0300912935627}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8559190809190818,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.78125,"distances_sum":2172.2384602519173}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9271062271062278,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5859375,"distances_sum":2724.206698080235}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495650183150189,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2867.095361992151}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2981.627852641197}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9509386446886455,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7578125,"distances_sum":2904.381321841352}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518486721611727,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8203125,"distances_sum":2901.5803971028126}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2981.627852641197}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2981.627852641197}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8062427156177163,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":7.7578125,"distances_sum":1276.0257329616777}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7185951201576207,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":7.0078125,"distances_sum":1028.1790291971408}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8062427156177163,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":7.7578125,"distances_sum":1276.0257329616777}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9277675449550454,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.609375,"distances_sum":1777.2270191044117}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9355368589743596,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.7421875,"distances_sum":1848.228522322565}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8629443473193482,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.1171875,"distances_sum":1488.8604877945634}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8586236679986686,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.15625,"distances_sum":1445.6498253857278}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8566402347652355,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.1171875,"distances_sum":1427.1058960449457}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9355368589743596,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.7421875,"distances_sum":1848.228522322565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9806375915750918,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9453125,"distances_sum":2080.2842312835287}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9746108058608063,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.890625,"distances_sum":2067.3306176809324}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960107600732601,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.828125,"distances_sum":1962.800319333125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510874542124546,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.8125,"distances_sum":1913.8369327563746}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9617273351648356,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.8828125,"distances_sum":1974.1621630106997}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9806375915750918,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9453125,"distances_sum":2080.2842312835287}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9806375915750918,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9453125,"distances_sum":2080.2842312835287}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7099128302253308,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.15625,"distances_sum":1073.446032696619}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8599338161838171,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.234375,"distances_sum":1533.3626492574829}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8599338161838171,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.234375,"distances_sum":1533.3626492574829}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8961684149184155,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6796875,"distances_sum":1708.3429384941871}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463598901098905,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.703125,"distances_sum":2024.9643625282886}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9463598901098905,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.703125,"distances_sum":2024.9643625282886}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537603021978025,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8359375,"distances_sum":2040.3522826553174}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.953125,"distances_sum":2153.1019223091002}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.953125,"distances_sum":2153.1019223091002}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.953125,"distances_sum":2153.1019223091002}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6919051434676443,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.71875,"distances_sum":993.613385507166}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5458984375,"f1":0.6919051434676443,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.71875,"distances_sum":993.613385507166}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9026041666666675,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.2890625,"distances_sum":1743.6394407312087}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9347386988011992,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4609375,"distances_sum":1915.8533921647856}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9347386988011992,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4609375,"distances_sum":1915.8533921647856}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9437957875457881,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5546875,"distances_sum":1952.82583236427}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633012820512824,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8515625,"distances_sum":2065.5245348813232}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633012820512824,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8515625,"distances_sum":2065.5245348813232}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633012820512824,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8515625,"distances_sum":2065.5245348813232}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8610067016317025,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.984375,"distances_sum":1508.9258392375043}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8610067016317025,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.984375,"distances_sum":1508.9258392375043}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.955640713453214,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.7890625,"distances_sum":1978.7123244475922}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574633699633702,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.78125,"distances_sum":1983.2004575918036}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9574633699633702,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.78125,"distances_sum":1983.2004575918036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666666666666672,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.875,"distances_sum":2032.7416408739148}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590258699633702,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8203125,"distances_sum":1989.7688429475236}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631581959706963,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.84375,"distances_sum":2018.6225108483034}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666666666666672,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.875,"distances_sum":2032.7416408739148}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666666666666672,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.875,"distances_sum":2032.7416408739148}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.6619603633880615e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":5.5078125,"distances_sum":460.87222959681566}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8499016608391617,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.7265625,"distances_sum":1517.565891981563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8499016608391617,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.7265625,"distances_sum":1517.565891981563}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9225847069597076,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.34375,"distances_sum":1844.670531530199}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8529917998668007,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.828125,"distances_sum":1542.4631136427004}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9225847069597076,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.34375,"distances_sum":1844.670531530199}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2111.880992232254}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941435127372628,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.6171875,"distances_sum":1977.402110315942}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471955128205133,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.671875,"distances_sum":1992.7355958378337}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2111.880992232254}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2111.880992232254}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8634849525474535,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.09375,"distances_sum":1656.5563118719165}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.6015625,"f1":null,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.21875,"distances_sum":1246.0716733677787}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7877816627816637,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.375,"distances_sum":1383.9175529462564}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8634849525474535,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.09375,"distances_sum":1656.5563118719165}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491732226107231,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.796875,"distances_sum":2145.6296094974364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9625744047619054,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2212.5077702801736}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9625744047619054,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2212.5077702801736}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733630952380955,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2263.653968694714}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9750572344322348,"seconds":5.50542026758194e-5,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.921875,"distances_sum":2292.168976532589}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9760989010989015,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2288.0248656141553}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095241,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2356.6127376823465}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739583333333339,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.859375,"distances_sum":2295.3145662506345}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095241,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2356.6127376823465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9847470238095241,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.953125,"distances_sum":2356.6127376823465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8074980574980584,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.328125,"distances_sum":1428.111708633552}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7124833499833506,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7421875,"distances_sum":1171.2589445060541}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8074980574980584,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.328125,"distances_sum":1428.111708633552}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465659340659346,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":2133.024725997978}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9465659340659346,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":2133.024725997978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.890625,"distances_sum":2312.2534150012025}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.890625,"distances_sum":2312.2534150012025}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.890625,"distances_sum":2312.2534150012025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4130859375,"f1":0.5607656232656232,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7578125,"distances_sum":773.8262936183867}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1328125,"distances_sum":569.5378800498098}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4130859375,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4130859375,"f1":0.5607656232656232,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7578125,"distances_sum":773.8262936183867}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7151894980019986,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.9140625,"distances_sum":1146.960399148374}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8162925616050625,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.3359375,"distances_sum":1424.8325655113883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9022898976023982,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":1822.2317357475588}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9022898976023982,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":1822.2317357475588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9267113095238102,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4453125,"distances_sum":1951.3159435694788}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946233974358975,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2060.4437335532125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9309065934065941,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4296875,"distances_sum":1948.7181121343053}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.946233974358975,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2060.4437335532125}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.946233974358975,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2060.4437335532125}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.7421875,"distances_sum":775.4240636677524}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4072265625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.7421875,"distances_sum":775.4240636677524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6920314060939067,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.5859375,"distances_sum":1052.1851813377878}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8039566336441343,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.3046875,"distances_sum":1344.395130666482}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8114021395271402,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.390625,"distances_sum":1404.6474730428995}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8520604395604405,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8203125,"distances_sum":1574.1310882579744}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.90625,"distances_sum":747.1535721858859}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8086684149184158,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.3359375,"distances_sum":1380.7655768821335}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8520604395604405,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8203125,"distances_sum":1574.1310882579744}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540579212454218,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2108.279563074971}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9307234432234439,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4921875,"distances_sum":1984.1033910670212}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9496394230769237,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2071.288625261827}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9309008699633704,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4609375,"distances_sum":1939.1320131870323}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.863693598068599,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9140625,"distances_sum":1636.8673258498172}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8668159965034974,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.0234375,"distances_sum":1650.2517761957506}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540579212454218,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2108.279563074971}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540579212454218,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2108.279563074971}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6802008755133759,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.0078125,"distances_sum":873.0381582882792}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":5.90625,"distances_sum":681.6247932193306}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5341796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5341796875,"f1":0.6802008755133759,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.0078125,"distances_sum":873.0381582882792}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9339977730602738,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7109375,"distances_sum":1671.7325541388177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7926276848151856,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.9453125,"distances_sum":1138.460246291692}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9339977730602738,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7109375,"distances_sum":1671.7325541388177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597870879120883,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.90625,"distances_sum":1751.763637772164}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9467204670329675,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.6953125,"distances_sum":1735.469426274041}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9597870879120883,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.90625,"distances_sum":1751.763637772164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9597870879120883,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.90625,"distances_sum":1751.763637772164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8473131035631043,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8828125,"distances_sum":1501.3456535895841}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7660214785214793,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.0546875,"distances_sum":1257.867690897103}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.7578125,"distances_sum":752.5709506484586}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8473131035631043,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8828125,"distances_sum":1501.3456535895841}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9023611804861812,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3046875,"distances_sum":1696.2196919403716}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948145604395605,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1945.6697288164698}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.948145604395605,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1945.6697288164698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9612923534798539,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":1982.4893317742371}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2008.1230819527304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9526098901098907,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7734375,"distances_sum":1955.0855464418212}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9505666208791215,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":1970.067456828532}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2008.1230819527304}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2008.1230819527304}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2626953125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2626953125,"f1":null,"seconds":2.902001142501831e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.28125,"distances_sum":490.7993255981006}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2626953125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2626953125,"f1":null,"seconds":2.902001142501831e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.28125,"distances_sum":490.7993255981006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2890625,"f1":null,"seconds":3.5278499126434326e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.7421875,"distances_sum":517.3040534690462}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8397357850482859,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.734375,"distances_sum":1278.5440979688674}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8397357850482859,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.734375,"distances_sum":1278.5440979688674}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8942281676656685,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.2890625,"distances_sum":1508.336840965238}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8942281676656685,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.2890625,"distances_sum":1508.336840965238}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8986300158175164,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.390625,"distances_sum":1534.797584228015}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.8986300158175164,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.390625,"distances_sum":1534.797584228015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8291015625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.8986300158175164,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.390625,"distances_sum":1534.797584228015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7837553071928078,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.390625,"distances_sum":1076.6505057059933}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8549100205350214,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.078125,"distances_sum":1325.394036520441}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.8359375,"distances_sum":667.3497515086206}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8549100205350214,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.078125,"distances_sum":1325.394036520441}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.901980311355312,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2578125,"distances_sum":1502.651841268614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698489010989017,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":1813.894704756706}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9281192765567775,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.59375,"distances_sum":1597.43212796989}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8709738178488187,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.0859375,"distances_sum":1372.4972654695691}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9046848984348992,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.296875,"distances_sum":1500.7843199071297}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989017,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":1813.894704756706}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989017,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":1813.894704756706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989017,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":1813.894704756706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2939453125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2939453125,"f1":null,"seconds":3.505498170852661e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.703125,"distances_sum":504.9163103734485}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.6953125,"distances_sum":859.3184811683011}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.544921875,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.544921875,"f1":null,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.6953125,"distances_sum":859.3184811683011}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6937064671439679,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.703125,"distances_sum":880.61035907721}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9136478105228111,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.515625,"distances_sum":1511.5067349194394}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8400661838161846,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7265625,"distances_sum":1249.1506850122603}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9136478105228111,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.515625,"distances_sum":1511.5067349194394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9268746878121886,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.59375,"distances_sum":1585.2561389006376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073264,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1767.8655421107667}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627632783882789,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":1726.94022067885}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697573260073264,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1767.8655421107667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697573260073264,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1767.8655421107667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8337729978354985,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7421875,"distances_sum":1226.9352087917216}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8175459956709966,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7109375,"distances_sum":1192.6658790311014}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3115234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3115234375,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.546875,"distances_sum":538.8310286304645}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8337729978354985,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7421875,"distances_sum":1226.9352087917216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519459706959712,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1743.079993005952}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9519459706959712,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1743.079993005952}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025645,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":1758.995185163825}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588770604395607,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8359375,"distances_sum":1739.231418302431}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638793498168501,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":1759.5589714315586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703301,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":1824.5263433099742}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703301,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":1824.5263433099742}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703301,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":1824.5263433099742}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2890625,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.8984375,"distances_sum":500.9287709225883}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.7904828786849976e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.625,"distances_sum":600.187351986564}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7669996669996678,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.296875,"distances_sum":1051.330394144952}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6416015625,"f1":0.7669996669996678,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.296875,"distances_sum":1051.330394144952}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8058592449217457,"seconds":4.714354872703552e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.4375,"distances_sum":1157.3205555995094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8100888694638704,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.6484375,"distances_sum":1204.0009437404146}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8508512321012329,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.8359375,"distances_sum":1292.4026021708428}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8539141414141422,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.984375,"distances_sum":1287.327389723704}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8539141414141422,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.984375,"distances_sum":1287.327389723704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8879781676656685,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2578125,"distances_sum":1385.328339248114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360035797535801,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6015625,"distances_sum":1602.8336192608997}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.71875,"distances_sum":1657.1284484833125}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9287316849816857,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6796875,"distances_sum":1558.223905731571}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.71875,"distances_sum":1657.1284484833125}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.71875,"distances_sum":1657.1284484833125}}, n: 9
inertia(cfft.distances) = 19.226641178266185
inertia(cdnet.distances) = 32.27401283258662
inertia(crand.distances) = 19.490947090402578
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9133333333333332
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8644444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 3, 2, 1, 3, 3, 3, 2, 1, 3, 2, 3, 3, 3, 3, 2, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3436666733788156] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335] ***
*** starting iteration: 2; err: [Inf, 0.3436666733788156, 0.18367426241895335] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133] ***
*** starting iteration: 3; err: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813] ***
*** starting iteration: 4; err: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768] ***
*** starting iteration: 5; err: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768, 0.1646861455852946] ***
*** starting iteration: 6; err: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768, 0.1646861455852946] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768, 0.1646861455852946, 0.16433273696246972] ***
*** finished computation of 12 references, err: [Inf, 0.3436666733788156, 0.18367426241895335, 0.17243517508507133, 0.16939222858615813, 0.16573447203202768, 0.1646861455852946, 0.16433273696246972] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.9864000334279934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072] ***
*** starting iteration: 2; err: [Inf, 2.9864000334279934, 0.7216492125109072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959] ***
*** starting iteration: 3; err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443] ***
*** starting iteration: 4; err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287] ***
*** starting iteration: 5; err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052] ***
*** starting iteration: 6; err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052, 0.26977566555523164] ***
*** starting iteration: 7; err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052, 0.26977566555523164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052, 0.26977566555523164, 0.26942552578699225] ***
*** finished computation of 7 references, err: [Inf, 2.9864000334279934, 0.7216492125109072, 0.3882215784834959, 0.33327563919366443, 0.30155690014013287, 0.2819821107662052, 0.26977566555523164, 0.26942552578699225] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 7, normalized-entropy: 1.0, [(2, 10), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6977000058341984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557] ***
*** starting iteration: 2; err: [Inf, 0.6977000058341984, 0.47849102273580557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174] ***
*** starting iteration: 3; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631] ***
*** starting iteration: 4; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771] ***
*** starting iteration: 5; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007] ***
*** starting iteration: 6; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733] ***
*** starting iteration: 7; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733, 0.2595103948716384] ***
*** starting iteration: 8; err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733, 0.2595103948716384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733, 0.2595103948716384, 0.2587645990040351] ***
*** finished computation of 7 references, err: [Inf, 0.6977000058341984, 0.47849102273580557, 0.3489618044458174, 0.2915641368781631, 0.2756735400619771, 0.26497662792997007, 0.2620581612204733, 0.2595103948716384, 0.2587645990040351] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7385000039787067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815] ***
*** starting iteration: 2; err: [Inf, 0.7385000039787067, 0.422708044706815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896] ***
*** starting iteration: 3; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133] ***
*** starting iteration: 4; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107] ***
*** starting iteration: 5; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686] ***
*** starting iteration: 6; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283] ***
*** starting iteration: 7; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705] ***
*** starting iteration: 8; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237] ***
*** starting iteration: 9; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237, 0.2587114370703829] ***
*** starting iteration: 10; err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237, 0.2587114370703829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237, 0.2587114370703829, 0.25702126043112106] ***
*** finished computation of 7 references, err: [Inf, 0.7385000039787067, 0.422708044706815, 0.35220857592204896, 0.30929674155060133, 0.2789282739765107, 0.26864017591906686, 0.26623521414744283, 0.2627664368960705, 0.26048592729416237, 0.2587114370703829, 0.25702126043112106] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 2]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3769041204078205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3769041204078205, 0.2095223456493696] ***
*** finished computation of 7 references, err: [Inf, 0.3769041204078205, 0.2095223456493696] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 20, 2]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 20), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 8]]
** centroid: 5, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27543412791757016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27543412791757016, 0.19850297727306354] ***
*** finished computation of 7 references, err: [Inf, 0.27543412791757016, 0.19850297727306354] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 11]]
** centroid: 6, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35549666041128547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35549666041128547, 0.20219225103085872] ***
*** finished computation of 7 references, err: [Inf, 0.35549666041128547, 0.20219225103085872] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 12]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 8), (3, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 11.354100054460966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.354100054460966, 1.1596357307033474] ***
*** finished computation of 3 references, err: [Inf, 11.354100054460966, 1.1596357307033474] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2037999945757496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2037999945757496, 0.655463921680235] ***
*** finished computation of 3 references, err: [Inf, 1.2037999945757496, 0.655463921680235] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 32]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 12), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.254400005107844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.254400005107844, 0.8958158035851949] ***
*** finished computation of 3 references, err: [Inf, 1.254400005107844, 0.8958158035851949] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 34]]
** centroid: 1, normalized-entropy: 0.9987117514654895, [(2, 37), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [9, 1, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 9), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2065000026923869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2065000026923869, 0.9361821183209189] ***
*** finished computation of 7 references, err: [Inf, 1.2065000026923869, 0.9361821183209189] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 2, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 2), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 27, 33]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(2, 27), (3, 33)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6702000036851072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6702000036851072, 0.3668748963981605] ***
*** finished computation of 7 references, err: [Inf, 0.6702000036851072, 0.3668748963981605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 19]]
** centroid: 3, normalized-entropy: 0.7382848661434506, [(2, 5), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 28, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7409000080469813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7409000080469813, 0.4472996445883355] ***
*** finished computation of 7 references, err: [Inf, 0.7409000080469813, 0.4472996445883355] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7703999994495825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7703999994495825, 0.579349798072498] ***
*** starting iteration: 2; err: [Inf, 1.7703999994495825, 0.579349798072498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023] ***
*** starting iteration: 3; err: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023, 0.5008616967793935] ***
*** starting iteration: 4; err: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023, 0.5008616967793935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023, 0.5008616967793935, 0.5008616967793935] ***
*** finished computation of 3 references, err: [Inf, 1.7703999994495825, 0.579349798072498, 0.5071746018950023, 0.5008616967793935, 0.5008616967793935] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 2, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9531000079472336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9531000079472336, 1.0197592438911445] ***
*** starting iteration: 2; err: [Inf, 1.9531000079472336, 1.0197592438911445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033] ***
*** starting iteration: 3; err: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407] ***
*** starting iteration: 4; err: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407, 0.9976018150955607] ***
*** starting iteration: 5; err: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407, 0.9976018150955607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407, 0.9976018150955607, 0.9973581826597332] ***
*** finished computation of 3 references, err: [Inf, 1.9531000079472336, 1.0197592438911445, 1.0066259955191033, 1.0011013452135407, 0.9976018150955607, 0.9973581826597332] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 33]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4004000248282649] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198] ***
*** starting iteration: 2; err: [Inf, 1.4004000248282649, 0.8740544459087198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775] ***
*** starting iteration: 3; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295] ***
*** starting iteration: 4; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802] ***
*** starting iteration: 5; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562] ***
*** starting iteration: 6; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857] ***
*** starting iteration: 7; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426] ***
*** starting iteration: 8; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954] ***
*** starting iteration: 9; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954, 0.5121806129427406] ***
*** starting iteration: 10; err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954, 0.5121806129427406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954, 0.5121806129427406, 0.49700578768150216] ***
*** finished computation of 3 references, err: [Inf, 1.4004000248282649, 0.8740544459087198, 0.8704284742666775, 0.8677643357044295, 0.8578732682899802, 0.8451429383458562, 0.83307759409857, 0.7955295051904426, 0.5916071254044954, 0.5121806129427406, 0.49700578768150216] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 34]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 17), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.798393652463831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.798393652463831, 0.3931115136731003] ***
*** finished computation of 3 references, err: [Inf, 0.798393652463831, 0.3931115136731003] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3340074519163534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3340074519163534, 0.6675269247369963] ***
*** finished computation of 3 references, err: [Inf, 1.3340074519163534, 0.6675269247369963] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 33]]
** centroid: 2, normalized-entropy: 1.0, [(2, 33), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7116549231822815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7116549231822815, 0.371434094856245] ***
*** finished computation of 3 references, err: [Inf, 1.7116549231822815, 0.371434094856245] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 34]]
** centroid: 3, normalized-entropy: 0.9305861291319927, [(2, 18), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.102499986708407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.102499986708407, 1.0218336647624677] ***
*** finished computation of 3 references, err: [Inf, 2.102499986708407, 1.0218336647624677] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 33]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 27), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 2, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2507000138983533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2507000138983533, 0.5407292372775834] ***
*** finished computation of 3 references, err: [Inf, 2.2507000138983533, 0.5407292372775834] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.046000019476368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.046000019476368, 0.8297984339779516] ***
*** finished computation of 3 references, err: [Inf, 2.046000019476368, 0.8297984339779516] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 5, 0]]
** centroid: 1, normalized-entropy: 0.6136190195993708, [(1, 28), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 22]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 33), (3, 22)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7613000003374184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7613000003374184, 0.4157056952414166] ***
*** finished computation of 7 references, err: [Inf, 0.7613000003374184, 0.4157056952414166] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 6, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5616999991558845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5616999991558845, 0.39892169414300765] ***
*** finished computation of 7 references, err: [Inf, 0.5616999991558845, 0.39892169414300765] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 28, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 13]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3391000006921206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3391000006921206, 0.2549879972699636] ***
*** finished computation of 7 references, err: [Inf, 0.3391000006921206, 0.2549879972699636] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7070999821882862] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7070999821882862, 0.984579050413032] ***
*** finished computation of 3 references, err: [Inf, 1.7070999821882862, 0.984579050413032] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 33]]
** centroid: 1, normalized-entropy: 0.9898220559635807, [(2, 26), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 3, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 1), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3386000070258133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3386000070258133, 0.6202664821977111] ***
*** finished computation of 3 references, err: [Inf, 1.3386000070258133, 0.6202664821977111] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 5]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9098000039092095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9098000039092095, 0.5298427529856091] ***
*** finished computation of 3 references, err: [Inf, 0.9098000039092095, 0.5298427529856091] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 21, 34]]
** centroid: 3, normalized-entropy: 0.9593160320543779, [(2, 21), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3843481838874008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965] ***
*** starting iteration: 2; err: [Inf, 0.3843481838874008, 0.22111840052596965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787] ***
*** starting iteration: 3; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057] ***
*** starting iteration: 4; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854] ***
*** starting iteration: 5; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248] ***
*** starting iteration: 6; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024] ***
*** starting iteration: 7; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887] ***
*** starting iteration: 8; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887, 0.15834539924873747] ***
*** starting iteration: 9; err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887, 0.15834539924873747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887, 0.15834539924873747, 0.15795596158111486] ***
*** finished computation of 7 references, err: [Inf, 0.3843481838874008, 0.22111840052596965, 0.19799969517132787, 0.1882114395175057, 0.18183702592835854, 0.17918373369942248, 0.17207337478333024, 0.16195798862695887, 0.15834539924873747, 0.15795596158111486] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3146699435500495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146699435500495, 0.1805992823027438] ***
*** starting iteration: 2; err: [Inf, 0.3146699435500495, 0.1805992823027438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146699435500495, 0.1805992823027438, 0.178237932790775] ***
*** starting iteration: 3; err: [Inf, 0.3146699435500495, 0.1805992823027438, 0.178237932790775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146699435500495, 0.1805992823027438, 0.178237932790775, 0.178237932790775] ***
*** finished computation of 7 references, err: [Inf, 0.3146699435500495, 0.1805992823027438, 0.178237932790775, 0.178237932790775] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.337929279330716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.337929279330716, 0.16711713517773458] ***
*** starting iteration: 2; err: [Inf, 0.337929279330716, 0.16711713517773458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302] ***
*** starting iteration: 3; err: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539] ***
*** starting iteration: 4; err: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539, 0.15549378028262126] ***
*** starting iteration: 5; err: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539, 0.15549378028262126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539, 0.15549378028262126, 0.15498737297635434] ***
*** finished computation of 7 references, err: [Inf, 0.337929279330716, 0.16711713517773458, 0.1599221243534302, 0.15723076396860539, 0.15549378028262126, 0.15498737297635434] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5953077818554633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023] ***
*** starting iteration: 2; err: [Inf, 0.5953077818554633, 0.27096409412061023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927] ***
*** starting iteration: 3; err: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186] ***
*** starting iteration: 4; err: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454] ***
*** starting iteration: 5; err: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454, 0.17731748871947692] ***
*** starting iteration: 6; err: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454, 0.17731748871947692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454, 0.17731748871947692, 0.17680240995125857] ***
*** finished computation of 7 references, err: [Inf, 0.5953077818554633, 0.27096409412061023, 0.19986607508328927, 0.18295296479556186, 0.18068199787071454, 0.17731748871947692, 0.17680240995125857] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 16]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 6), (3, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5110359805649126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5110359805649126, 0.26200561066707095] ***
*** starting iteration: 2; err: [Inf, 0.5110359805649126, 0.26200561066707095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156] ***
*** starting iteration: 3; err: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806] ***
*** starting iteration: 4; err: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806, 0.2376762494753637] ***
*** starting iteration: 5; err: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806, 0.2376762494753637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806, 0.2376762494753637, 0.23766138429882794] ***
*** finished computation of 7 references, err: [Inf, 0.5110359805649126, 0.26200561066707095, 0.24678856573089156, 0.24072624484296806, 0.2376762494753637, 0.23766138429882794] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 16]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 16)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6569552677139202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771] ***
*** starting iteration: 2; err: [Inf, 0.6569552677139202, 0.3559447038653771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243] ***
*** starting iteration: 3; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134] ***
*** starting iteration: 4; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457] ***
*** starting iteration: 5; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772] ***
*** starting iteration: 6; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538] ***
*** starting iteration: 7; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895] ***
*** starting iteration: 8; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033] ***
*** starting iteration: 9; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033, 0.2049569903022033] ***
*** starting iteration: 10; err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033, 0.2049569903022033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033, 0.2049569903022033, 0.20452263375395915] ***
*** finished computation of 7 references, err: [Inf, 0.6569552677139202, 0.3559447038653771, 0.321189120182243, 0.3102354097390134, 0.30186401226586457, 0.2456921819843772, 0.2196085638050538, 0.2111675154347895, 0.20688119789522033, 0.2049569903022033, 0.20452263375395915] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 23, 10]]
** centroid: 2, normalized-entropy: 0.8849636363831529, [(2, 23), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7312886254057205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7312886254057205, 0.3989961011791152] ***
*** starting iteration: 2; err: [Inf, 0.7312886254057205, 0.3989961011791152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186] ***
*** starting iteration: 3; err: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735] ***
*** starting iteration: 4; err: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735, 0.3583079005360817] ***
*** starting iteration: 5; err: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735, 0.3583079005360817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735, 0.3583079005360817, 0.3583079005360817] ***
*** finished computation of 3 references, err: [Inf, 0.7312886254057205, 0.3989961011791152, 0.36997110768374186, 0.359376039035735, 0.3583079005360817, 0.3583079005360817] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1823796458575508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1823796458575508, 0.38754677716039054] ***
*** starting iteration: 2; err: [Inf, 1.1823796458575508, 0.38754677716039054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171] ***
*** starting iteration: 3; err: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171, 0.37434666614124285] ***
*** starting iteration: 4; err: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171, 0.37434666614124285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171, 0.37434666614124285, 0.37434666614124285] ***
*** finished computation of 3 references, err: [Inf, 1.1823796458575508, 0.38754677716039054, 0.3761814995500171, 0.37434666614124285, 0.37434666614124285] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7124087926019587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017] ***
*** starting iteration: 2; err: [Inf, 0.7124087926019587, 0.38341894548471017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123] ***
*** starting iteration: 3; err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305] ***
*** starting iteration: 4; err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544] ***
*** starting iteration: 5; err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655] ***
*** starting iteration: 6; err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655, 0.337732245970909] ***
*** starting iteration: 7; err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655, 0.337732245970909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655, 0.337732245970909, 0.3372477135148084] ***
*** finished computation of 3 references, err: [Inf, 0.7124087926019587, 0.38341894548471017, 0.3587443669339123, 0.34988781975660305, 0.34629082356926544, 0.34187777159888655, 0.337732245970909, 0.3372477135148084] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 33]]
** centroid: 2, normalized-entropy: 0.5617526078313283, [(2, 5), (3, 33)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 33, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1168000095389012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168000095389012, 0.5633368810146265] ***
*** starting iteration: 2; err: [Inf, 1.1168000095389012, 0.5633368810146265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168000095389012, 0.5633368810146265, 0.5070640949892388] ***
*** starting iteration: 3; err: [Inf, 1.1168000095389012, 0.5633368810146265, 0.5070640949892388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168000095389012, 0.5633368810146265, 0.5070640949892388, 0.5008616967793935] ***
*** finished computation of 3 references, err: [Inf, 1.1168000095389012, 0.5633368810146265, 0.5070640949892388, 0.5008616967793935] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.323099996495547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.323099996495547, 0.637099784116585] ***
*** starting iteration: 2; err: [Inf, 1.323099996495547, 0.637099784116585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.323099996495547, 0.637099784116585, 0.5783386007298437] ***
*** starting iteration: 3; err: [Inf, 1.323099996495547, 0.637099784116585, 0.5783386007298437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.323099996495547, 0.637099784116585, 0.5783386007298437, 0.5599205312960761] ***
*** finished computation of 3 references, err: [Inf, 1.323099996495547, 0.637099784116585, 0.5783386007298437, 0.5599205312960761] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.30639999004188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.30639999004188, 0.5121998706086568] ***
*** starting iteration: 2; err: [Inf, 1.30639999004188, 0.5121998706086568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.30639999004188, 0.5121998706086568, 0.49700578768150216] ***
*** starting iteration: 3; err: [Inf, 1.30639999004188, 0.5121998706086568, 0.49700578768150216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.30639999004188, 0.5121998706086568, 0.49700578768150216, 0.4922082459736402] ***
*** finished computation of 3 references, err: [Inf, 1.30639999004188, 0.5121998706086568, 0.49700578768150216, 0.4922082459736402] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 34]]
** centroid: 1, normalized-entropy: 0.8886466698980794, [(2, 15), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1408000015718094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285] ***
*** starting iteration: 2; err: [Inf, 1.1408000015718094, 0.5431475648876285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774] ***
*** starting iteration: 3; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206] ***
*** starting iteration: 4; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995] ***
*** starting iteration: 5; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636] ***
*** starting iteration: 6; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296] ***
*** starting iteration: 7; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296, 0.5008616967793935] ***
*** starting iteration: 8; err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296, 0.5008616967793935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296, 0.5008616967793935, 0.5008616967793935] ***
*** finished computation of 3 references, err: [Inf, 1.1408000015718094, 0.5431475648876285, 0.5337625993731774, 0.5188460175045206, 0.5127807367996995, 0.503486838479636, 0.5020257196143296, 0.5008616967793935, 0.5008616967793935] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0960999987995086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454] ***
*** starting iteration: 2; err: [Inf, 1.0960999987995086, 0.6209032012253454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623] ***
*** starting iteration: 3; err: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738] ***
*** starting iteration: 4; err: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155] ***
*** starting iteration: 5; err: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155, 0.5417813766696029] ***
*** starting iteration: 6; err: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155, 0.5417813766696029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155, 0.5417813766696029, 0.5417813766696029] ***
*** finished computation of 3 references, err: [Inf, 1.0960999987995086, 0.6209032012253454, 0.5746037798508623, 0.554632836136738, 0.5441881556781155, 0.5417813766696029, 0.5417813766696029] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.878300006432329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.878300006432329, 0.5233187054729913] ***
*** starting iteration: 2; err: [Inf, 0.878300006432329, 0.5233187054729913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658] ***
*** starting iteration: 3; err: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402] ***
*** starting iteration: 4; err: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402, 0.48943142319826083] ***
*** starting iteration: 5; err: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402, 0.48943142319826083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402, 0.48943142319826083, 0.4886648477973975] ***
*** finished computation of 3 references, err: [Inf, 0.878300006432329, 0.5233187054729913, 0.49920606024658, 0.4922082459736402, 0.48943142319826083, 0.4886648477973975] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 34]]
** centroid: 1, normalized-entropy: 0.8507707040532602, [(2, 13), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49640000748747437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49640000748747437, 0.2600443515561938] ***
*** finished computation of 7 references, err: [Inf, 0.49640000748747437, 0.2600443515561938] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5300000036795897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5300000036795897, 0.2992056157766716] ***
*** finished computation of 7 references, err: [Inf, 0.5300000036795897, 0.2992056157766716] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 2]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 1), (3, 2)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42169999850743495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42169999850743495, 0.23469550363950248] ***
*** finished computation of 7 references, err: [Inf, 0.42169999850743495, 0.23469550363950248] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6871999977680413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6871999977680413, 0.23499037473929849] ***
*** starting iteration: 2; err: [Inf, 0.6871999977680413, 0.23499037473929849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6871999977680413, 0.23499037473929849, 0.2188321587045468] ***
*** starting iteration: 3; err: [Inf, 0.6871999977680413, 0.23499037473929849, 0.2188321587045468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6871999977680413, 0.23499037473929849, 0.2188321587045468, 0.21563148296835988] ***
*** finished computation of 7 references, err: [Inf, 0.6871999977680413, 0.23499037473929849, 0.2188321587045468, 0.21563148296835988] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 10]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(2, 9), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6926000051945006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6926000051945006, 0.2906075616969227] ***
*** starting iteration: 2; err: [Inf, 0.6926000051945006, 0.2906075616969227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6926000051945006, 0.2906075616969227, 0.267194404118698] ***
*** starting iteration: 3; err: [Inf, 0.6926000051945006, 0.2906075616969227, 0.267194404118698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6926000051945006, 0.2906075616969227, 0.267194404118698, 0.2580650343945487] ***
*** finished computation of 7 references, err: [Inf, 0.6926000051945006, 0.2906075616969227, 0.267194404118698, 0.2580650343945487] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 1, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 5, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.380799998973676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380799998973676, 0.2579555903901199] ***
*** starting iteration: 2; err: [Inf, 0.380799998973676, 0.2579555903901199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380799998973676, 0.2579555903901199, 0.23819322219360192] ***
*** starting iteration: 3; err: [Inf, 0.380799998973676, 0.2579555903901199, 0.23819322219360192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.380799998973676, 0.2579555903901199, 0.23819322219360192, 0.23505522893613798] ***
*** finished computation of 7 references, err: [Inf, 0.380799998973676, 0.2579555903901199, 0.23819322219360192, 0.23505522893613798] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 6, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6083000062507286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6083000062507286, 0.42748398265163795] ***
*** finished computation of 7 references, err: [Inf, 0.6083000062507286, 0.42748398265163795] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9329999883681649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9329999883681649, 0.37032156151769263] ***
*** finished computation of 7 references, err: [Inf, 0.9329999883681649, 0.37032156151769263] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 14]]
** centroid: 5, normalized-entropy: 0.9932338197397066, [(2, 17), (3, 14)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6606000004798375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6606000004798375, 0.455676697873499] ***
*** finished computation of 7 references, err: [Inf, 0.6606000004798375, 0.455676697873499] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 1, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 5), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3902112165942444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3902112165942444, 0.2850886102774431] ***
*** finished computation of 7 references, err: [Inf, 0.3902112165942444, 0.2850886102774431] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 1, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 15), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 5, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7296466454529167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7296466454529167, 0.3373647365400646] ***
*** finished computation of 7 references, err: [Inf, 0.7296466454529167, 0.3373647365400646] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 12]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(2, 21), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4829911423257446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4829911423257446, 0.3010938856105014] ***
*** finished computation of 7 references, err: [Inf, 0.4829911423257446, 0.3010938856105014] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 34]]
** centroid: 2, normalized-entropy: 0.8886466698980794, [(2, 15), (3, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 18
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.8377638430519722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8377638430519722, 0.6662464513286231] ***
*** finished computation of 3 references, err: [Inf, 0.8377638430519722, 0.6662464513286231] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 33]]
** centroid: 1, normalized-entropy: 0.995148095654003, [(2, 28), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [15, 1, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 15), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0196431423156032] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0196431423156032, 0.4208732590496881] ***
*** finished computation of 3 references, err: [Inf, 1.0196431423156032, 0.4208732590496881] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 18]]
** centroid: 2, normalized-entropy: 0.9366673818775627, [(2, 33), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.193016839505006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.193016839505006, 1.1577383622038553] ***
*** finished computation of 3 references, err: [Inf, 4.193016839505006, 1.1577383622038553] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 13, 0]]
** centroid: 1, normalized-entropy: 0.9011701959974223, [(1, 28), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 11]]
** centroid: 2, normalized-entropy: 0.887976319515135, [(2, 25), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 8.537378452420366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143] ***
*** starting iteration: 2; err: [Inf, 8.537378452420366, 0.7546331657798143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737] ***
*** starting iteration: 3; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025] ***
*** starting iteration: 4; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184] ***
*** starting iteration: 5; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479] ***
*** starting iteration: 6; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698] ***
*** starting iteration: 7; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089] ***
*** starting iteration: 8; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405] ***
*** starting iteration: 9; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405, 0.3052011231651665] ***
*** starting iteration: 10; err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405, 0.3052011231651665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405, 0.3052011231651665, 0.30040468490039324] ***
*** finished computation of 7 references, err: [Inf, 8.537378452420366, 0.7546331657798143, 0.6385653046840737, 0.6324465389757025, 0.6218490812586184, 0.5801929514875479, 0.430075114647698, 0.3214251645037089, 0.3102643920433405, 0.3052011231651665, 0.30040468490039324] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 24, 7]]
** centroid: 4, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 5, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7139154887794104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7139154887794104, 0.37758373328942807] ***
*** starting iteration: 2; err: [Inf, 0.7139154887794104, 0.37758373328942807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834] ***
*** starting iteration: 3; err: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654] ***
*** starting iteration: 4; err: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654, 0.3148900322395829] ***
*** starting iteration: 5; err: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654, 0.3148900322395829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654, 0.3148900322395829, 0.3148877992457482] ***
*** finished computation of 7 references, err: [Inf, 0.7139154887794104, 0.37758373328942807, 0.3192273578050834, 0.31619473628876654, 0.3148900322395829, 0.3148877992457482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 4, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49038027169820664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246] ***
*** starting iteration: 2; err: [Inf, 0.49038027169820664, 0.2769984552892246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396] ***
*** starting iteration: 3; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404] ***
*** starting iteration: 4; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228] ***
*** starting iteration: 5; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832] ***
*** starting iteration: 6; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993] ***
*** starting iteration: 7; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821] ***
*** starting iteration: 8; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171] ***
*** starting iteration: 9; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171, 0.20950108967191197] ***
*** starting iteration: 10; err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171, 0.20950108967191197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171, 0.20950108967191197, 0.2033223227620125] ***
*** finished computation of 7 references, err: [Inf, 0.49038027169820664, 0.2769984552892246, 0.25715980895729396, 0.25088472930487404, 0.24531287717826228, 0.23339366067709832, 0.22833536358964993, 0.21775765064937821, 0.21387477954411171, 0.20950108967191197, 0.2033223227620125] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 13]]
** centroid: 1, normalized-entropy: 0.9744894033980525, [(2, 19), (3, 13)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.87870000199004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036] ***
*** starting iteration: 2; err: [Inf, 0.87870000199004, 0.27092851203089036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424] ***
*** starting iteration: 3; err: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497] ***
*** starting iteration: 4; err: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672] ***
*** starting iteration: 5; err: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672, 0.23087282899471595] ***
*** starting iteration: 6; err: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672, 0.23087282899471595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672, 0.23087282899471595, 0.2300629225319147] ***
*** finished computation of 7 references, err: [Inf, 0.87870000199004, 0.27092851203089036, 0.254268333724424, 0.2425243966800497, 0.23380805233050672, 0.23087282899471595, 0.2300629225319147] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 5, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7100000006006556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7100000006006556, 0.3660879193402786] ***
*** starting iteration: 2; err: [Inf, 0.7100000006006556, 0.3660879193402786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7100000006006556, 0.3660879193402786, 0.34173909937827956] ***
*** starting iteration: 3; err: [Inf, 0.7100000006006556, 0.3660879193402786, 0.34173909937827956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7100000006006556, 0.3660879193402786, 0.34173909937827956, 0.3408318037697432] ***
*** finished computation of 7 references, err: [Inf, 0.7100000006006556, 0.3660879193402786, 0.34173909937827956, 0.3408318037697432] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 18]]
** centroid: 3, normalized-entropy: 0.9811522341999134, [(2, 13), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6649000099324899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6649000099324899, 0.4626921078612098] ***
*** starting iteration: 2; err: [Inf, 0.6649000099324899, 0.4626921078612098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217] ***
*** starting iteration: 3; err: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993] ***
*** starting iteration: 4; err: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993, 0.4383278505987802] ***
*** starting iteration: 5; err: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993, 0.4383278505987802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993, 0.4383278505987802, 0.4375612751979169] ***
*** finished computation of 7 references, err: [Inf, 0.6649000099324899, 0.4626921078612098, 0.4459022150820217, 0.44110467337415993, 0.4383278505987802, 0.4375612751979169] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 34]]
** centroid: 3, normalized-entropy: 0.8507707040532602, [(2, 13), (3, 34)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 25, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.39744102423922717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744102423922717, 0.21524159923350375] ***
*** starting iteration: 2; err: [Inf, 0.39744102423922717, 0.21524159923350375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744102423922717, 0.21524159923350375, 0.20203970683732883] ***
*** starting iteration: 3; err: [Inf, 0.39744102423922717, 0.21524159923350375, 0.20203970683732883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744102423922717, 0.21524159923350375, 0.20203970683732883, 0.19777893426488308] ***
*** finished computation of 7 references, err: [Inf, 0.39744102423922717, 0.21524159923350375, 0.20203970683732883, 0.19777893426488308] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 21]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 7), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47001999046922366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47001999046922366, 0.2564461219257171] ***
*** starting iteration: 2; err: [Inf, 0.47001999046922366, 0.2564461219257171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47001999046922366, 0.2564461219257171, 0.23462061157219563] ***
*** starting iteration: 3; err: [Inf, 0.47001999046922366, 0.2564461219257171, 0.23462061157219563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47001999046922366, 0.2564461219257171, 0.23462061157219563, 0.22029430380117163] ***
*** finished computation of 7 references, err: [Inf, 0.47001999046922366, 0.2564461219257171, 0.23462061157219563, 0.22029430380117163] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 19]]
** centroid: 1, normalized-entropy: 0.876716288999464, [(2, 8), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3317244292610374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3317244292610374, 0.1532838859434229] ***
*** starting iteration: 2; err: [Inf, 0.3317244292610374, 0.1532838859434229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3317244292610374, 0.1532838859434229, 0.14909648998533778] ***
*** starting iteration: 3; err: [Inf, 0.3317244292610374, 0.1532838859434229, 0.14909648998533778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3317244292610374, 0.1532838859434229, 0.14909648998533778, 0.14881389480597026] ***
*** finished computation of 7 references, err: [Inf, 0.3317244292610374, 0.1532838859434229, 0.14909648998533778, 0.14881389480597026] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 7, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 23
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.0764999969742624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0764999969742624, 0.5303635820508283] ***
*** finished computation of 3 references, err: [Inf, 1.0764999969742624, 0.5303635820508283] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 12]]
** centroid: 1, normalized-entropy: 0.8721617883411698, [(2, 29), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6810999991821791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6810999991821791, 0.5599205312960761] ***
*** finished computation of 3 references, err: [Inf, 1.6810999991821791, 0.5599205312960761] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.307400009688903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.307400009688903, 0.5785667049818258] ***
*** finished computation of 3 references, err: [Inf, 1.307400009688903, 0.5785667049818258] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 13]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 23)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2), 0.9666666666666667)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.666666666666667, 2.8666666666666667, 6.533333333333334, 2.2333333333333334], [4.986842105263159, 3.378947368421053, 1.439473684210526, 0.22631578947368425], [5.555000000000001, 2.6799999999999997, 3.965, 1.2550000000000001], [6.608333333333333, 3.1, 5.541666666666667, 2.1833333333333336], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334], [7.2, 3.025, 6.0, 1.825], [6.390000000000001, 2.8199999999999994, 4.700000000000001, 1.44], [6.1, 2.7199999999999998, 4.9799999999999995, 1.7900000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.253333333333333, 2.9, 4.533333333333333, 1.46], [5.8428571428571425, 2.8285714285714287, 4.985714285714286, 1.9571428571428573], [5.564705882352941, 2.6294117647058823, 4.0352941176470605, 1.247058823529412], [4.726315789473684, 3.110526315789474, 1.4000000000000001, 0.18947368421052635], [7.562500000000001, 3.0875000000000004, 6.4375, 1.9875000000000003], [6.766666666666667, 3.2833333333333337, 5.833333333333333, 2.4166666666666665], [5.3066666666666675, 3.686666666666667, 1.5266666666666664, 0.2800000000000001], [6.866666666666667, 3.1, 4.866666666666667, 1.5333333333333332], [6.4363636363636365, 2.963636363636364, 5.463636363636364, 1.9818181818181821]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 3, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.123529411764705, 2.947058823529412, 4.5588235294117645, 1.447058823529412], [6.04, 2.65, 5.069999999999999, 1.75], [6.760000000000001, 3.02, 4.76, 1.5], [6.7, 3.1500000000000004, 5.1, 2.15], [7.42, 2.96, 6.159999999999999, 2.02], [6.583333333333333, 2.9916666666666667, 5.608333333333333, 2.075], [6.175000000000001, 3.1999999999999997, 5.35, 2.35], [5.462499999999999, 2.53125, 3.7750000000000004, 1.1375000000000002], [5.060714285714286, 3.535714285714286, 1.507142857142857, 0.28571428571428575]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 3, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2))]
[71, 2, 30, 1, 15, 3, 1, 29, 1, 11, 37, 32, 3, 2, 37, 9, 12, 16, 20, 1, 22, 34, 8, 38, 25, 26, 12, 29, 47, 53, 49, 5, 22, 31, 42, 42, 10, 43, 31, 23, 41, 24, 9, 28, 29, 33, 36, 19, 35, 20, 31, 42, 7, 51, 26, 30, 24, 24, 20, 26, 45, 52, 2, 23, 5, 38, 14, 13, 23, 7, 39, 31, 23, 40, 36, 34, 12, 19, 41, 32, 38, 5, 24, 30, 13, 45, 45, 3, 27, 20, 31, 35, 48, 52, 33, 20, 43, 37, 27, 30, 45, 32, 34, 8, 22, 60, 36, 40, 36, 41, 38, 24, 46, 41, 49, 23, 36, 51, 19, 14, 48, 36, 56, 45, 24, 27, 28, 41, 39, 30, 80, 27, 39, 45, 25, 106, 23, 22, 42, 46, 23, 27, 43, 31, 63, 55, 33, 38, 14, 38, 28, 26, 27, 32, 47, 27, 42, 54, 31, 33, 44, 53, 53, 28, 36, 39, 21, 41, 30, 27, 67, 38, 32, 46, 29, 40, 24, 27, 36, 39, 31, 17, 40, 40, 22, 36, 36, 47, 43, 47, 40, 10, 63, 44, 44, 51, 30, 23, 23, 17, 41, 31, 31, 60, 25, 43, 41, 28, 30, 31, 43, 14, 35, 46, 50, 36, 62, 24, 12, 38, 28, 40, 24, 67, 41, 37, 30, 33, 41, 17, 38, 25, 23, 31, 57, 32, 37, 25, 44, 51, 44, 25, 42, 29, 32, 17, 53, 39, 58, 40, 35, 43, 52, 45, 38, 45, 31, 51, 24, 49, 43, 2, 43, 30, 30, 52, 24, 57, 28, 22, 29, 37, 41, 34, 24, 37, 22, 24, 51, 29, 52, 44, 41, 28, 45, 33, 43, 37, 69, 30, 41, 77, 34, 31, 50, 31, 47, 27, 24, 18]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5980000000000001, speedup = 0.3733415995040298, eval_ratio = 0.041543000000000004)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3758680555555556,"recall":0.3758680555555556,"f1":null,"seconds":7.191486656665802e-5,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":342.5390625,"distances_sum":1680.9941324938275}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5225694444444445,"recall":0.5225694444444445,"f1":null,"seconds":0.00010620616376399994,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":381.9921875,"distances_sum":1576.8619964674322}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6345486111111107,"recall":0.6345486111111107,"f1":0.6345486111111107,"seconds":0.00013878382742404938,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":422.5546875,"distances_sum":1526.7205114250353}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7187499999999994,"recall":0.7187499999999994,"f1":0.7187499999999994,"seconds":0.0001644231379032135,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":462.6953125,"distances_sum":1500.5637168651572}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7725694444444436,"recall":0.7725694444444436,"f1":0.7725694444444436,"seconds":0.0001894291490316391,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":504.5546875,"distances_sum":1484.202855831306}
KCenters.DeloneInvIndex> reached performance {"precision":0.81423611111111,"recall":0.81423611111111,"f1":0.81423611111111,"seconds":0.00022264942526817322,"exhaustive_search_seconds":0.00033498555421829224,"evaluations":543.625,"distances_sum":1471.7340908767503}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7839999999999999, speedup = 1.5455583490467213, eval_ratio = 0.053487)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
