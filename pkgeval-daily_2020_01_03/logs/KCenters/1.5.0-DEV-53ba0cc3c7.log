Julia Version 1.5.0-DEV.3
Commit 53ba0cc3c7 (2020-01-02 23:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.6
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed JSON ──────────────────────── v0.21.0
 Installed Compat ────────────────────── v3.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed CategoricalArrays ─────────── v0.7.5
 Installed DataFrames ────────────────── v0.20.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed LearnBase ─────────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLDataPattern ─────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_eJzACU/Project.toml`
 [no changes]
  Updating `/tmp/jl_eJzACU/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_eJzACU/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 184.9800000000001
[ Info: 76.74000000000007
[ Info: 40.88999999999999
[ Info: 24.69
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.716098069967025
inertia(cdnet.distances) = 24.811677992708077
inertia(crand.distances) = 19.2598042682242
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.134765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.134765625,"f1":null,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":4.640625,"distances_sum":445.5078037786467}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1279296875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1279296875,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":4.4921875,"distances_sum":409.6948173708146}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.134765625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.134765625,"f1":null,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":4.640625,"distances_sum":445.5078037786467}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7797020687645695,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":7.7578125,"distances_sum":2030.3855844974087}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7797020687645695,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":7.7578125,"distances_sum":2030.3855844974087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7797020687645695,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":7.7578125,"distances_sum":2030.3855844974087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7797020687645695,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":2.1401792764663696e-6,"evaluations":7.7578125,"distances_sum":2030.3855844974087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8078738969363978,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":7.7265625,"distances_sum":1841.2881107215378}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":6.25,"distances_sum":978.379775772175}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8078738969363978,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":7.7265625,"distances_sum":1841.2881107215378}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572973901098905,"seconds":6.761401891708374e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.7421875,"distances_sum":2831.3764061066213}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9572973901098905,"seconds":6.761401891708374e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.7421875,"distances_sum":2831.3764061066213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753777472527476,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.9375,"distances_sum":2959.244592288057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965556318681319,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.828125,"distances_sum":2903.2958982344912}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753777472527476,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.9375,"distances_sum":2959.244592288057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753777472527476,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.9375,"distances_sum":2959.244592288057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8147742882117891,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.1875,"distances_sum":1888.854419822553}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8147742882117891,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.1875,"distances_sum":1888.854419822553}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9488495879120884,"seconds":6.766989827156067e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8828125,"distances_sum":2732.6362635738733}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9488495879120884,"seconds":6.766989827156067e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8828125,"distances_sum":2732.6362635738733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062274,"seconds":7.018446922302246e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.9765625,"distances_sum":2998.549017665565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732543498168502,"seconds":7.124617695808411e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.9140625,"distances_sum":2920.411108518796}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9771608599733603,"seconds":7.387250661849976e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.984375,"distances_sum":2964.095449882812}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062274,"seconds":7.018446922302246e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.9765625,"distances_sum":2998.549017665565}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062274,"seconds":7.018446922302246e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.9765625,"distances_sum":2998.549017665565}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":5.0078125,"distances_sum":527.7824709560688}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.9609375,"distances_sum":523.3181708742503}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1904296875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.9609375,"distances_sum":523.3181708742503}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":5.40625,"distances_sum":936.3997884686537}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.51953125,"f1":0.6695152070152075,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":6.9453125,"distances_sum":1410.3005317392694}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.51953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.51953125,"f1":0.6695152070152075,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":6.9453125,"distances_sum":1410.3005317392694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9133356227106235,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.5625,"distances_sum":2530.0173727775823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9061360514485521,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.6328125,"distances_sum":2477.632444071844}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9133356227106235,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.5625,"distances_sum":2530.0173727775823}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8515625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9133356227106235,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.5625,"distances_sum":2530.0173727775823}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1611328125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1611328125,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":4.1484375,"distances_sum":444.71253337949247}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.4912109375,"f1":0.643668137418138,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.1875,"distances_sum":1421.171811829042}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.14453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.14453125,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":3.8515625,"distances_sum":397.5293941042429}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16015625,"f1":null,"seconds":3.1348317861557007e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":4.0390625,"distances_sum":429.6904582616203}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4912109375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.4912109375,"f1":0.643668137418138,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.1875,"distances_sum":1421.171811829042}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8962089993340002,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.125,"distances_sum":2519.4905157893354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8832282301032308,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.1328125,"distances_sum":2399.1457456026083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6201171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6201171875,"f1":0.7535032675657682,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.1484375,"distances_sum":1706.6329890328936}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8421396312021322,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.796875,"distances_sum":2142.1600491262143}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8962089993340002,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.125,"distances_sum":2519.4905157893354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9182609057609066,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.2890625,"distances_sum":2666.147176681213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703299,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.78125,"distances_sum":3048.710086313863}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416011072261077,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.53125,"distances_sum":2892.498053095322}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703299,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.78125,"distances_sum":3048.710086313863}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703299,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.78125,"distances_sum":3048.710086313863}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8571007117882126,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.203125,"distances_sum":2256.1407320983417}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.478515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.478515625,"f1":null,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.515625,"distances_sum":1320.843900457676}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7811308483183491,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.5390625,"distances_sum":1894.4532656302604}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8571007117882126,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.203125,"distances_sum":2256.1407320983417}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588401182151187,"seconds":6.852671504020691e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.78125,"distances_sum":3012.7394797925645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9048399517149524,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3984375,"distances_sum":2605.497345790996}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9065736346986355,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3671875,"distances_sum":2574.682758373449}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9025901182151188,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3984375,"distances_sum":2516.5461762111363}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9212776806526812,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.6015625,"distances_sum":2696.608289930039}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588401182151187,"seconds":6.852671504020691e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.78125,"distances_sum":3012.7394797925645}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9684612262737267,"seconds":6.971880793571472e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.84375,"distances_sum":3078.599768793496}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263742,"seconds":7.323920726776123e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.859375,"distances_sum":3034.3826862529395}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":7.268041372299194e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9609375,"distances_sum":3121.7748523614164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798539,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8984375,"distances_sum":3144.2648285511827}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615956959706965,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.875,"distances_sum":3003.614840495853}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637706043956051,"seconds":6.780028343200684e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8046875,"distances_sum":3040.7847565435936}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":7.268041372299194e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9609375,"distances_sum":3121.7748523614164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":7.268041372299194e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9609375,"distances_sum":3121.7748523614164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8738462925962934,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.625,"distances_sum":2250.7704129413164}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":6.7734375,"distances_sum":1009.9685495368859}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7004218004218008,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":7.8515625,"distances_sum":1391.5926079240141}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8738462925962934,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.625,"distances_sum":2250.7704129413164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8738462925962934,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.625,"distances_sum":2250.7704129413164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8738462925962934,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":2.0153820514678955e-6,"evaluations":8.625,"distances_sum":2250.7704129413164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5576171875,"f1":null,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":7.1953125,"distances_sum":1441.186342228445}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8238220113220122,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":7.8671875,"distances_sum":1851.0579856762758}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.861350108225109,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.0703125,"distances_sum":2059.589582435736}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.861350108225109,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.0703125,"distances_sum":2059.589582435736}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8942713536463545,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.21875,"distances_sum":2249.6035449711967}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.920083562271063,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.4140625,"distances_sum":2463.4027483202485}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466575091575097,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.75,"distances_sum":2679.554024556105}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603079212454219,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.8203125,"distances_sum":2749.4856993267335}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.929101107226108,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.5,"distances_sum":2499.8224892950375}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9603079212454219,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.8203125,"distances_sum":2749.4856993267335}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720066391941397,"seconds":6.9998204708099365e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.90625,"distances_sum":2850.9129587356965}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644692,"seconds":7.456168532371521e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.921875,"distances_sum":2877.846190444909}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.963993818681319,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.859375,"distances_sum":2778.2855721826836}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700892857142858,"seconds":6.7148357629776e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.8828125,"distances_sum":2815.895278759596}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605139652014656,"seconds":6.550922989845276e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.84375,"distances_sum":2753.1609070045956}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644692,"seconds":7.456168532371521e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.921875,"distances_sum":2877.846190444909}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644692,"seconds":7.456168532371521e-6,"exhaustive_search_seconds":1.905485987663269e-6,"evaluations":8.921875,"distances_sum":2877.846190444909}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5869140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5869140625,"f1":0.7230193417693422,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.421875,"distances_sum":1034.9589650270118}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5869140625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5869140625,"f1":0.7230193417693422,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.421875,"distances_sum":1034.9589650270118}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8079087579087586,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.7578125,"distances_sum":1258.3075558728995}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460050366300372,"seconds":7.238239049911499e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.53125,"distances_sum":1832.7780292859702}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460050366300372,"seconds":7.238239049911499e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.53125,"distances_sum":1832.7780292859702}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9651785714285719,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":1951.1326187651346}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9651785714285719,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":1951.1326187651346}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9651785714285719,"seconds":6.7409127950668335e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":1951.1326187651346}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.790951236263737,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.015625,"distances_sum":1313.9929238766906}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.790951236263737,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.015625,"distances_sum":1313.9929238766906}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9513881951381958,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.78125,"distances_sum":1895.4915626048562}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8528398684648691,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.28125,"distances_sum":1480.5096203256935}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9409886988011992,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.7265625,"distances_sum":1828.3074880231188}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9513881951381958,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.78125,"distances_sum":1895.4915626048562}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705757783882786,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.875,"distances_sum":2016.4877086920937}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605540293040298,"seconds":6.556510925292969e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.7890625,"distances_sum":1977.1624472885924}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882786,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.875,"distances_sum":2016.4877086920937}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882786,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.6577541828155518e-6,"evaluations":8.875,"distances_sum":2016.4877086920937}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6942061410811418,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0390625,"distances_sum":1047.0998116554242}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6942061410811418,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0390625,"distances_sum":1047.0998116554242}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6942061410811418,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0390625,"distances_sum":1047.0998116554242}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.548828125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6942061410811418,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0390625,"distances_sum":1047.0998116554242}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7929194069819077,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.53125,"distances_sum":1290.1713651012387}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8818247724497732,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.1875,"distances_sum":1651.6111390413587}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8556703712953722,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.109375,"distances_sum":1527.1304588659466}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8818247724497732,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.1875,"distances_sum":1651.6111390413587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560668498168502,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":1997.0287223218509}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9272493131868136,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.59375,"distances_sum":1896.1930771321681}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9308150183150191,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.6171875,"distances_sum":1917.5458553065216}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9374000999001004,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.6640625,"distances_sum":1959.1233362621529}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9560668498168502,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":1997.0287223218509}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653903388278391,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8515625,"distances_sum":2084.5968252326784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674679487179492,"seconds":7.491558790206909e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8203125,"distances_sum":2086.387931753076}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795787545787549,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2151.5870913522313}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9711137820512825,"seconds":7.621943950653076e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9375,"distances_sum":2105.63883860479}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688988095238097,"seconds":6.766989827156067e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.859375,"distances_sum":2107.2195061449956}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733459249084254,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.921875,"distances_sum":2131.3810921613144}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795787545787549,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2151.5870913522313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795787545787549,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2151.5870913522313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7988719613719623,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.5859375,"distances_sum":1438.1431855521218}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7132789085914092,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.2265625,"distances_sum":1145.522006206574}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7698769980019988,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.3359375,"distances_sum":1278.8397441685004}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7988719613719623,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.5859375,"distances_sum":1438.1431855521218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9362299159174163,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4453125,"distances_sum":2009.4981602005635}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591575091575093,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7578125,"distances_sum":2154.1465157917}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.920143918581419,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3203125,"distances_sum":1943.901189691308}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8920303654678661,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.2734375,"distances_sum":1788.6116673530616}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8758444680319689,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.15625,"distances_sum":1674.7928549356518}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8938249250749258,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.296875,"distances_sum":1750.4403924038734}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9591575091575093,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7578125,"distances_sum":2154.1465157917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734203296703301,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2219.175873124611}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700721153846158,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8359375,"distances_sum":2204.98761388187}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734203296703301,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2219.175873124611}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734203296703301,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2219.175873124611}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.1953125,"distances_sum":752.1742961934372}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8544073981573989,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.203125,"distances_sum":1541.9990585971939}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8544073981573989,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.203125,"distances_sum":1541.9990585971939}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517170329670334,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7734375,"distances_sum":2007.2236478077414}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9517170329670334,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7734375,"distances_sum":2007.2236478077414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9713198260073262,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":2106.3373653123335}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025647,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":2101.708621951009}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9713198260073262,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":2106.3373653123335}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9713198260073262,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8828125,"distances_sum":2106.3373653123335}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2607421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2607421875,"f1":null,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.6484375,"distances_sum":495.8936825971788}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2607421875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2607421875,"f1":null,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.6484375,"distances_sum":495.8936825971788}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7034666722166728,"seconds":4.16487455368042e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.203125,"distances_sum":1049.0128914824652}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7980998168498178,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.484375,"distances_sum":1306.3576546299446}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7883371836496844,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.609375,"distances_sum":1247.1615024101354}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7980998168498178,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.484375,"distances_sum":1306.3576546299446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8490847693972702,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0390625,"distances_sum":1498.6436558456164}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9256498709623713,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3671875,"distances_sum":1830.8389172714467}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659348,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.671875,"distances_sum":1956.536283002332}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9285141941391949,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.34375,"distances_sum":1857.5094158805025}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9092777014652021,"seconds":3.332272171974182e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3984375,"distances_sum":1697.7465180656538}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9398408882783889,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6015625,"distances_sum":1946.1359747265726}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.808441038128539,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5625,"distances_sum":1334.2633757375122}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659348,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.671875,"distances_sum":1956.536283002332}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659348,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.671875,"distances_sum":1956.536283002332}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":5.6953125,"distances_sum":408.8107991483291}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.1015625,"distances_sum":726.866387027901}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.39453125,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.39453125,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.1015625,"distances_sum":726.866387027901}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8830190642690651,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.0703125,"distances_sum":1692.0841399391786}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.897602397602398,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.328125,"distances_sum":1734.4223599239035}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.897602397602398,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.328125,"distances_sum":1734.4223599239035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.909280823343324,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.4296875,"distances_sum":1847.991766553396}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9341866466866475,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.5859375,"distances_sum":1966.8487945062343}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540979853479858,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.734375,"distances_sum":2066.8663523522678}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498397435897442,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.6875,"distances_sum":2055.635715610981}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540979853479858,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.734375,"distances_sum":2066.8663523522678}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540979853479858,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.734375,"distances_sum":2066.8663523522678}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8717953921078929,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.21875,"distances_sum":1554.0184724331978}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8717953921078929,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.21875,"distances_sum":1554.0184724331978}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575377747252752,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2015.7024780653455}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575377747252752,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2015.7024780653455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.953125,"distances_sum":2129.668581527848}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716918498168503,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2092.543842133526}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.953125,"distances_sum":2129.668581527848}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.953125,"distances_sum":2129.668581527848}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8032975704850713,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.125,"distances_sum":1380.885318304091}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8032975704850713,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.125,"distances_sum":1380.885318304091}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9286229395604401,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":1871.03644997223}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8637435481185488,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.2890625,"distances_sum":1623.8845000686265}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9286229395604401,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":1871.03644997223}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421817765567769,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7265625,"distances_sum":1998.500833183864}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2145.657623161163}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9488896520146525,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":2067.1967680942835}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533768315018321,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":2058.546794646805}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958207417582418,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2083.950654771923}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2145.657623161163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2145.657623161163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.515625,"distances_sum":726.2283835987713}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.515625,"distances_sum":726.2283835987713}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8938795579420586,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3125,"distances_sum":1669.4320603183166}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8938795579420586,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3125,"distances_sum":1669.4320603183166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9363610347985353,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3828125,"distances_sum":1894.3219427487254}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9363610347985353,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3828125,"distances_sum":1894.3219427487254}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9363610347985353,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3828125,"distances_sum":1894.3219427487254}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":2,"bsize":3}, perf: {"precision":0.9815104166666667,"recall":0.5263671875,"f1":0.6713149697524703,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.4609375,"distances_sum":1403.506561830594}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":null,"recall":0.7275390625,"f1":null,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.0703125,"distances_sum":2000.769059683411}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9912016369047617,"recall":0.6806640625,"f1":0.7940019182206692,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.9140625,"distances_sum":1806.8663025400706}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7275390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":null,"recall":0.7275390625,"f1":null,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.0703125,"distances_sum":2000.769059683411}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9911365327380952,"recall":0.8740234375,"f1":0.9248275812728942,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6640625,"distances_sum":2675.1383936863995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":0.9884207589285715,"recall":0.8671875,"f1":0.9184602506868137,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6796875,"distances_sum":2655.212314397564}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9939732142857143,"recall":0.7412109375,"f1":0.8406978438228446,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.2265625,"distances_sum":2001.9226599933604}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":0.9896763392857143,"recall":0.8740234375,"f1":0.9245235233516488,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.734375,"distances_sum":2683.234997545598}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9911365327380952,"recall":0.8740234375,"f1":0.9248275812728942,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6640625,"distances_sum":2675.1383936863995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9911179315476191,"recall":0.9384765625,"f1":0.9610068967490846,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8515625,"distances_sum":3010.760812719027}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9936755952380952,"recall":0.923828125,"f1":0.954098245504496,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.859375,"distances_sum":2908.947878314042}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":10}, perf: {"precision":0.9906063988095238,"recall":0.9609375,"f1":0.9740169986263738,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":3094.4114512988704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9907924107142858,"recall":0.8916015625,"f1":0.9339586195054953,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6875,"distances_sum":2810.662132935464}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9885137648809524,"recall":0.931640625,"f1":0.9558586595695975,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.875,"distances_sum":2963.954835624516}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9938151041666666,"recall":0.9423828125,"f1":0.964948918269231,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.828125,"distances_sum":3028.363430548372}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":2,"bsize":10},"perf":{"precision":0.9906063988095238,"recall":0.9609375,"f1":0.9740169986263738,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":3094.4114512988704}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":2,"bsize":10},"perf":{"precision":0.9906063988095238,"recall":0.9609375,"f1":0.9740169986263738,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":3094.4114512988704}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.1015625,"distances_sum":958.2833582806385}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3984375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3984375,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.1015625,"distances_sum":958.2833582806385}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9058956668331677,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.65625,"distances_sum":2404.1451174661665}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9118131868131876,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.640625,"distances_sum":2477.5710988205906}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9118131868131876,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.640625,"distances_sum":2477.5710988205906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525354853479859,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2819.259457543239}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579269688644693,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":2883.6069640566247}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.944969093406594,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2720.6513280300637}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384729853479857,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.65625,"distances_sum":2709.858462739226}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9579269688644693,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":2883.6069640566247}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9579269688644693,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":2883.6069640566247}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.271484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.271484375,"f1":null,"seconds":2.8032809495925903e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.734375,"distances_sum":713.6423852023339}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.271484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.271484375,"f1":null,"seconds":2.8032809495925903e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.734375,"distances_sum":713.6423852023339}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.699848415473416,"seconds":4.233792424201965e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0234375,"distances_sum":1346.2679025474224}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.699848415473416,"seconds":4.233792424201965e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0234375,"distances_sum":1346.2679025474224}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9404132326007331,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.78125,"distances_sum":2434.1223833263903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9404132326007331,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.78125,"distances_sum":2434.1223833263903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626545329670335,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2624.713132653951}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626545329670335,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2624.713132653951}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626545329670335,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2624.713132653951}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2919921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2919921875,"f1":null,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.515625,"distances_sum":675.1396918044231}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2919921875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2919921875,"f1":null,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.515625,"distances_sum":675.1396918044231}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7083033286158295,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8359375,"distances_sum":1202.2926488815738}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.710607621545122,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.96875,"distances_sum":1264.3166367770461}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8627554736929747,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.203125,"distances_sum":1851.543192401472}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8627554736929747,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.203125,"distances_sum":1851.543192401472}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8972418206793216,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6328125,"distances_sum":2069.7646616152897}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9230087620712628,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2266.482595062528}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9230087620712628,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2266.482595062528}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9230087620712628,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2266.482595062528}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7960258491508498,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5703125,"distances_sum":1560.155885672438}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":5.796875,"distances_sum":851.7200939104963}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6897428959928965,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.6015625,"distances_sum":1213.207612873793}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7960258491508498,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5703125,"distances_sum":1560.155885672438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8894745879120888,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.3359375,"distances_sum":2082.132847913062}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9209998334998342,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.515625,"distances_sum":2292.850948449733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.796782384282385,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5390625,"distances_sum":1588.4263237353512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8910464535464544,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.359375,"distances_sum":2125.3510935612762}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9209998334998342,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.515625,"distances_sum":2292.850948449733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717952,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8515625,"distances_sum":2650.959308629637}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948240301365302,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.6953125,"distances_sum":2541.609683615678}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9501774267399274,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7578125,"distances_sum":2519.984013204612}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636389652014655,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.796875,"distances_sum":2644.4423009391257}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9291208791208797,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5546875,"distances_sum":2339.909359927189}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564106,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8203125,"distances_sum":2584.022701240979}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512164918414923,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7578125,"distances_sum":2550.1551517639004}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717952,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8515625,"distances_sum":2650.959308629637}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717952,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8515625,"distances_sum":2650.959308629637}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.294921875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.375,"distances_sum":646.9373014244071}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.294921875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.375,"distances_sum":646.9373014244071}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.7734375,"distances_sum":532.959184124047}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.8359375,"distances_sum":569.8085360235862}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2548828125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2548828125,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.8359375,"distances_sum":569.8085360235862}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7995442057942065,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.9765625,"distances_sum":1471.4427785777848}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7995442057942065,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.9765625,"distances_sum":1471.4427785777848}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9364354395604403,"seconds":7.005408406257629e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6953125,"distances_sum":2186.328518189002}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9003241550116555,"seconds":6.724148988723755e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.5390625,"distances_sum":1976.2524190062768}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9364354395604403,"seconds":7.005408406257629e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6953125,"distances_sum":2186.328518189002}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9364354395604403,"seconds":7.005408406257629e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6953125,"distances_sum":2186.328518189002}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":7.09375,"distances_sum":822.7535231909897}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8121059496059505,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.1875,"distances_sum":1641.081210823952}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8121059496059505,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.1875,"distances_sum":1641.081210823952}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8462407384282392,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.625,"distances_sum":1760.5460761477368}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482631951381957,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8828125,"distances_sum":2310.227790739864}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9482631951381957,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8828125,"distances_sum":2310.227790739864}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666151556776561,"seconds":7.202848792076111e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.90625,"distances_sum":2431.447455515095}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":7.312744855880737e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.96875,"distances_sum":2444.750745901622}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577812812187819,"seconds":7.135793566703796e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8984375,"distances_sum":2361.4007080432993}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9620936355311358,"seconds":7.664784789085388e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.90625,"distances_sum":2405.723991956297}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":7.312744855880737e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.96875,"distances_sum":2444.750745901622}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036635,"seconds":7.312744855880737e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.96875,"distances_sum":2444.750745901622}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8041968448218456,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.640625,"distances_sum":1466.4088949852796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7111947080697087,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.3046875,"distances_sum":1222.4886509575306}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8041968448218456,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.640625,"distances_sum":1466.4088949852796}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8552660880785888,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.234375,"distances_sum":1718.9595778895089}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948855311355312,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.7734375,"distances_sum":2276.653542227017}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8640942390942398,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.2421875,"distances_sum":1710.9242854774554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9028190559440566,"seconds":6.744638085365295e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.546875,"distances_sum":1907.7751042217699}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.948855311355312,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.7734375,"distances_sum":2276.653542227017}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9598131035631037,"seconds":7.370486855506897e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.859375,"distances_sum":2341.8154779374645}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570913461538467,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.8359375,"distances_sum":2302.1154383569583}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9511790293040295,"seconds":7.150694727897644e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.796875,"distances_sum":2278.7857408204372}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9598131035631037,"seconds":7.370486855506897e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.859375,"distances_sum":2341.8154779374645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9598131035631037,"seconds":7.370486855506897e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.859375,"distances_sum":2341.8154779374645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8723493520368529,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.1328125,"distances_sum":1838.6071960847717}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":6.1015625,"distances_sum":526.7876963942722}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":7.1953125,"distances_sum":1175.9838323900183}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8723493520368529,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.1328125,"distances_sum":1838.6071960847717}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9114926739926748,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.546875,"distances_sum":2042.3738852754122}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570570054945057,"seconds":7.569789886474609e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8203125,"distances_sum":2373.7058449734263}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9309638278388285,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.609375,"distances_sum":2213.6955595080453}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8987699800199809,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.5234375,"distances_sum":1999.138302961942}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8967319139194146,"seconds":7.189810276031494e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.484375,"distances_sum":1964.3981631088388}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9570570054945057,"seconds":7.569789886474609e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8203125,"distances_sum":2373.7058449734263}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9779590201465205,"seconds":7.9423189163208e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9296875,"distances_sum":2498.095934781765}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.960416666666667,"seconds":7.009133696556091e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.8515625,"distances_sum":2379.992312415381}, best_list's length: 11, n: 9
inertia(cfft.distances) = 18.457154316271968
inertia(cdnet.distances) = 24.554852996125128
inertia(crand.distances) = 20.861566776360878
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9779590201465205,"seconds":7.9423189163208e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9296875,"distances_sum":2498.095934781765}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9779590201465205,"seconds":7.9423189163208e-6,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.9296875,"distances_sum":2498.095934781765}}, n: 9
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9444444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555557
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555556
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.888888888888889
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9177777777777777
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 3, 3, 1, 2, 3, 3, 2, 2, 2, 3, 1, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.34293333491421757] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34293333491421757, 0.17646851367116514] ***
*** starting iteration: 2; err: [Inf, 0.34293333491421757, 0.17646851367116514] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839] ***
*** starting iteration: 3; err: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567] ***
*** starting iteration: 4; err: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567, 0.15868756290768019] ***
*** starting iteration: 5; err: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567, 0.15868756290768019] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567, 0.15868756290768019, 0.15819178779973833] ***
*** finished computation of 12 references, err: [Inf, 0.34293333491421757, 0.17646851367116514, 0.162199130753839, 0.16047394249995567, 0.15868756290768019, 0.15819178779973833] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.43349999896264185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43349999896264185, 0.3046530745317802] ***
*** finished computation of 7 references, err: [Inf, 0.43349999896264185, 0.3046530745317802] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 4, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33430000377674446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33430000377674446, 0.26777539798397787] ***
*** finished computation of 7 references, err: [Inf, 0.33430000377674446, 0.26777539798397787] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7644000086962989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7644000086962989, 0.4404265670698371] ***
*** finished computation of 7 references, err: [Inf, 0.7644000086962989, 0.4404265670698371] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 7, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8765000003196183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8765000003196183, 0.5237390713538457] ***
*** starting iteration: 2; err: [Inf, 0.8765000003196183, 0.5237390713538457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8765000003196183, 0.5237390713538457, 0.5004649753800234] ***
*** starting iteration: 3; err: [Inf, 0.8765000003196183, 0.5237390713538457, 0.5004649753800234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8765000003196183, 0.5237390713538457, 0.5004649753800234, 0.49820839241431697] ***
*** finished computation of 3 references, err: [Inf, 0.8765000003196183, 0.5237390713538457, 0.5004649753800234, 0.49820839241431697] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7551999888765477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7551999888765477, 0.8258457294159168] ***
*** starting iteration: 2; err: [Inf, 1.7551999888765477, 0.8258457294159168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7551999888765477, 0.8258457294159168, 0.546349699864432] ***
*** starting iteration: 3; err: [Inf, 1.7551999888765477, 0.8258457294159168, 0.546349699864432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7551999888765477, 0.8258457294159168, 0.546349699864432, 0.5314506138563142] ***
*** finished computation of 3 references, err: [Inf, 1.7551999888765477, 0.8258457294159168, 0.546349699864432, 0.5314506138563142] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6952999764054104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6952999764054104, 0.9801665872079216] ***
*** starting iteration: 2; err: [Inf, 1.6952999764054104, 0.9801665872079216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6952999764054104, 0.9801665872079216, 0.9676028606322602] ***
*** starting iteration: 3; err: [Inf, 1.6952999764054104, 0.9801665872079216, 0.9676028606322602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6952999764054104, 0.9801665872079216, 0.9676028606322602, 0.9635806794062334] ***
*** finished computation of 3 references, err: [Inf, 1.6952999764054104, 0.9801665872079216, 0.9676028606322602, 0.9635806794062334] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 31]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 35), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 2, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7141000141622869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432] ***
*** starting iteration: 2; err: [Inf, 1.7141000141622869, 0.9047990765557432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344] ***
*** starting iteration: 3; err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678] ***
*** starting iteration: 4; err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263] ***
*** starting iteration: 5; err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475] ***
*** starting iteration: 6; err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475, 0.49780371909372095] ***
*** starting iteration: 7; err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475, 0.49780371909372095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475, 0.49780371909372095, 0.49780371909372095] ***
*** finished computation of 3 references, err: [Inf, 1.7141000141622869, 0.9047990765557432, 0.6532483377721344, 0.5277139001891678, 0.5053452979927263, 0.4988131144902475, 0.49780371909372095, 0.49780371909372095] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.128200038738917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528] ***
*** starting iteration: 2; err: [Inf, 5.128200038738917, 1.789382034547528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876] ***
*** starting iteration: 3; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931] ***
*** starting iteration: 4; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049] ***
*** starting iteration: 5; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399] ***
*** starting iteration: 6; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988] ***
*** starting iteration: 7; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988, 0.5186055607858961] ***
*** starting iteration: 8; err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988, 0.5186055607858961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988, 0.5186055607858961, 0.5186055607858961] ***
*** finished computation of 3 references, err: [Inf, 5.128200038738917, 1.789382034547528, 1.0353955089359876, 0.6661006082030931, 0.5660794361771049, 0.531989968854399, 0.5206448101130988, 0.5186055607858961, 0.5186055607858961] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 28]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5606999929088727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5606999929088727, 0.6006296215347011] ***
*** starting iteration: 2; err: [Inf, 1.5606999929088727, 0.6006296215347011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944] ***
*** starting iteration: 3; err: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626] ***
*** starting iteration: 4; err: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626, 0.5370524862037162] ***
*** starting iteration: 5; err: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626, 0.5370524862037162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626, 0.5370524862037162, 0.5370524862037162] ***
*** finished computation of 3 references, err: [Inf, 1.5606999929088727, 0.6006296215347011, 0.5627016307259944, 0.5395526906408626, 0.5370524862037162, 0.5370524862037162] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.765300005463839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.765300005463839, 0.5167524189804591] ***
*** finished computation of 3 references, err: [Inf, 0.765300005463839, 0.5167524189804591] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.099800001170074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.099800001170074, 1.2794788617694446] ***
*** finished computation of 3 references, err: [Inf, 4.099800001170074, 1.2794788617694446] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 10, 0]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(1, 31), (2, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 19]]
** centroid: 3, normalized-entropy: 0.9961344835095798, [(2, 22), (3, 19)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.292100047566092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.292100047566092, 0.6565778720029705] ***
*** finished computation of 3 references, err: [Inf, 2.292100047566092, 0.6565778720029705] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 17]]
** centroid: 1, normalized-entropy: 0.9117517586347538, [(2, 35), (3, 17)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 2, 0]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6115136556604317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502] ***
*** starting iteration: 2; err: [Inf, 0.6115136556604317, 0.3214765789558502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768] ***
*** starting iteration: 3; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492] ***
*** starting iteration: 4; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322] ***
*** starting iteration: 5; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597] ***
*** starting iteration: 6; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666] ***
*** starting iteration: 7; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666, 0.20603178748019413] ***
*** starting iteration: 8; err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666, 0.20603178748019413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666, 0.20603178748019413, 0.2050766378385378] ***
*** finished computation of 7 references, err: [Inf, 0.6115136556604317, 0.3214765789558502, 0.2627032468731768, 0.2490436426395492, 0.23624194813092322, 0.21291307833979597, 0.20771575969053666, 0.20603178748019413, 0.2050766378385378] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 12]]
** centroid: 6, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5779953157326156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222] ***
*** starting iteration: 2; err: [Inf, 0.5779953157326156, 0.2740866460736222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775] ***
*** starting iteration: 3; err: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118] ***
*** starting iteration: 4; err: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455] ***
*** starting iteration: 5; err: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455, 0.2214844548677423] ***
*** starting iteration: 6; err: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455, 0.2214844548677423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455, 0.2214844548677423, 0.2209617545171875] ***
*** finished computation of 7 references, err: [Inf, 0.5779953157326156, 0.2740866460736222, 0.2540101236328775, 0.23520246019611118, 0.22424746682523455, 0.2214844548677423, 0.2209617545171875] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31638777698562687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071] ***
*** starting iteration: 2; err: [Inf, 0.31638777698562687, 0.2101310129644071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084] ***
*** starting iteration: 3; err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488] ***
*** starting iteration: 4; err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534] ***
*** starting iteration: 5; err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967] ***
*** starting iteration: 6; err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967, 0.1877572111676879] ***
*** starting iteration: 7; err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967, 0.1877572111676879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967, 0.1877572111676879, 0.1868425492951718] ***
*** finished computation of 7 references, err: [Inf, 0.31638777698562687, 0.2101310129644071, 0.19819240839925084, 0.1941690570698488, 0.19242614680523534, 0.18982562858556967, 0.1877572111676879, 0.1868425492951718] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 8]]
** centroid: 3, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.110400009231219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.110400009231219, 0.5596300368239046] ***
*** starting iteration: 2; err: [Inf, 1.110400009231219, 0.5596300368239046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.110400009231219, 0.5596300368239046, 0.5151001982095283] ***
*** starting iteration: 3; err: [Inf, 1.110400009231219, 0.5596300368239046, 0.5151001982095283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.110400009231219, 0.5596300368239046, 0.5151001982095283, 0.5028124757757421] ***
*** finished computation of 3 references, err: [Inf, 1.110400009231219, 0.5596300368239046, 0.5151001982095283, 0.5028124757757421] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 9]]
** centroid: 1, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1562000075287995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1562000075287995, 0.6076798867990645] ***
*** starting iteration: 2; err: [Inf, 1.1562000075287995, 0.6076798867990645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1562000075287995, 0.6076798867990645, 0.5400727214134768] ***
*** starting iteration: 3; err: [Inf, 1.1562000075287995, 0.6076798867990645, 0.5400727214134768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1562000075287995, 0.6076798867990645, 0.5400727214134768, 0.5314506138563142] ***
*** finished computation of 3 references, err: [Inf, 1.1562000075287995, 0.6076798867990645, 0.5400727214134768, 0.5314506138563142] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 34]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1057999999566164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057999999566164, 0.8240662403734847] ***
*** starting iteration: 2; err: [Inf, 1.1057999999566164, 0.8240662403734847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057999999566164, 0.8240662403734847, 0.5812790936645206] ***
*** starting iteration: 3; err: [Inf, 1.1057999999566164, 0.8240662403734847, 0.5812790936645206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057999999566164, 0.8240662403734847, 0.5812790936645206, 0.5591293769697435] ***
*** finished computation of 3 references, err: [Inf, 1.1057999999566164, 0.8240662403734847, 0.5812790936645206, 0.5591293769697435] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 23]]
** centroid: 3, normalized-entropy: 0.6769418697808861, [(2, 5), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8219625272696542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8219625272696542, 0.6065915638117407] ***
*** starting iteration: 2; err: [Inf, 0.8219625272696542, 0.6065915638117407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069] ***
*** starting iteration: 3; err: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069, 0.5900850868250365] ***
*** starting iteration: 4; err: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069, 0.5900850868250365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069, 0.5900850868250365, 0.5891074784388937] ***
*** finished computation of 3 references, err: [Inf, 0.8219625272696542, 0.6065915638117407, 0.5916609686210069, 0.5900850868250365, 0.5891074784388937] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 34]]
** centroid: 1, normalized-entropy: 0.9932338197397066, [(2, 28), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 1, 0]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(1, 18), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9681279642221963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826] ***
*** starting iteration: 2; err: [Inf, 2.9681279642221963, 0.551044812020826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461] ***
*** starting iteration: 3; err: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654] ***
*** starting iteration: 4; err: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375] ***
*** starting iteration: 5; err: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375, 0.35452506926513805] ***
*** starting iteration: 6; err: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375, 0.35452506926513805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375, 0.35452506926513805, 0.35383604082979103] ***
*** finished computation of 3 references, err: [Inf, 2.9681279642221963, 0.551044812020826, 0.3665678996030461, 0.35749632714656654, 0.35574016970517375, 0.35452506926513805, 0.35383604082979103] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 29]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6411025992934163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6411025992934163, 0.3906829090638557] ***
*** starting iteration: 2; err: [Inf, 0.6411025992934163, 0.3906829090638557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6411025992934163, 0.3906829090638557, 0.37573673414339737] ***
*** starting iteration: 3; err: [Inf, 0.6411025992934163, 0.3906829090638557, 0.37573673414339737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6411025992934163, 0.3906829090638557, 0.37573673414339737, 0.37546277582359794] ***
*** finished computation of 3 references, err: [Inf, 0.6411025992934163, 0.3906829090638557, 0.37573673414339737, 0.37546277582359794] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 10]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.529800005488691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.529800005488691, 0.28831172218044754] ***
*** starting iteration: 2; err: [Inf, 0.529800005488691, 0.28831172218044754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.529800005488691, 0.28831172218044754, 0.2440079448461477] ***
*** starting iteration: 3; err: [Inf, 0.529800005488691, 0.28831172218044754, 0.2440079448461477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.529800005488691, 0.28831172218044754, 0.2440079448461477, 0.22890971842653393] ***
*** finished computation of 7 references, err: [Inf, 0.529800005488691, 0.28831172218044754, 0.2440079448461477, 0.22890971842653393] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 4]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 7]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(2, 8), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42900000034971625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42900000034971625, 0.31915973918221285] ***
*** starting iteration: 2; err: [Inf, 0.42900000034971625, 0.31915973918221285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42900000034971625, 0.31915973918221285, 0.26859808171727156] ***
*** starting iteration: 3; err: [Inf, 0.42900000034971625, 0.31915973918221285, 0.26859808171727156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42900000034971625, 0.31915973918221285, 0.26859808171727156, 0.25508741226647375] ***
*** finished computation of 7 references, err: [Inf, 0.42900000034971625, 0.31915973918221285, 0.26859808171727156, 0.25508741226647375] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7313999928932529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313999928932529, 0.31773216876591515] ***
*** starting iteration: 2; err: [Inf, 0.7313999928932529, 0.31773216876591515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313999928932529, 0.31773216876591515, 0.27988762374375603] ***
*** starting iteration: 3; err: [Inf, 0.7313999928932529, 0.31773216876591515, 0.27988762374375603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313999928932529, 0.31773216876591515, 0.27988762374375603, 0.2631414087897506] ***
*** finished computation of 7 references, err: [Inf, 0.7313999928932529, 0.31773216876591515, 0.27988762374375603, 0.2631414087897506] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 12]]
** centroid: 1, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.501899906375098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076] ***
*** starting iteration: 2; err: [Inf, 8.501899906375098, 1.3618456771155076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472] ***
*** starting iteration: 3; err: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977] ***
*** starting iteration: 4; err: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224] ***
*** starting iteration: 5; err: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224, 0.49820839241431697] ***
*** starting iteration: 6; err: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224, 0.49820839241431697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224, 0.49820839241431697, 0.49820839241431697] ***
*** finished computation of 3 references, err: [Inf, 8.501899906375098, 1.3618456771155076, 0.7030032479080472, 0.5613138665333977, 0.5122702951011224, 0.49820839241431697, 0.49820839241431697] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.23959986321473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809] ***
*** starting iteration: 2; err: [Inf, 7.23959986321473, 1.9320992070439809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691] ***
*** starting iteration: 3; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099] ***
*** starting iteration: 4; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666] ***
*** starting iteration: 5; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006] ***
*** starting iteration: 6; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931] ***
*** starting iteration: 7; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988] ***
*** starting iteration: 8; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988, 0.5186055607858961] ***
*** starting iteration: 9; err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988, 0.5186055607858961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988, 0.5186055607858961, 0.5186055607858961] ***
*** finished computation of 3 references, err: [Inf, 7.23959986321473, 1.9320992070439809, 1.158206289864691, 0.7770556377793099, 0.6568615033212666, 0.5560935940279006, 0.5278248729668931, 0.5206448101130988, 0.5186055607858961, 0.5186055607858961] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.60690000073854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.60690000073854, 0.978689940911841] ***
*** starting iteration: 2; err: [Inf, 1.60690000073854, 0.978689940911841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.60690000073854, 0.978689940911841, 0.9781298621236664] ***
*** finished computation of 3 references, err: [Inf, 1.60690000073854, 0.978689940911841, 0.9781298621236664] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 31]]
** centroid: 2, normalized-entropy: 0.9973487979180449, [(2, 35), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [16, 2, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9105999948648297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9105999948648297, 0.47359318010220247] ***
*** starting iteration: 2; err: [Inf, 0.9105999948648297, 0.47359318010220247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9105999948648297, 0.47359318010220247, 0.4436321756545918] ***
*** starting iteration: 3; err: [Inf, 0.9105999948648297, 0.47359318010220247, 0.4436321756545918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9105999948648297, 0.47359318010220247, 0.4436321756545918, 0.4292370881400045] ***
*** finished computation of 7 references, err: [Inf, 0.9105999948648297, 0.47359318010220247, 0.4436321756545918, 0.4292370881400045] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 4, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5520000052607165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5520000052607165, 0.2999545044154005] ***
*** starting iteration: 2; err: [Inf, 0.5520000052607165, 0.2999545044154005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5520000052607165, 0.2999545044154005, 0.27635713646641774] ***
*** starting iteration: 3; err: [Inf, 0.5520000052607165, 0.2999545044154005, 0.27635713646641774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5520000052607165, 0.2999545044154005, 0.27635713646641774, 0.2722213581490589] ***
*** finished computation of 7 references, err: [Inf, 0.5520000052607165, 0.2999545044154005, 0.27635713646641774, 0.2722213581490589] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 7, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3985000060655181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985000060655181, 0.327970171998996] ***
*** starting iteration: 2; err: [Inf, 0.3985000060655181, 0.327970171998996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985000060655181, 0.327970171998996, 0.31035893322146235] ***
*** starting iteration: 3; err: [Inf, 0.3985000060655181, 0.327970171998996, 0.31035893322146235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985000060655181, 0.327970171998996, 0.31035893322146235, 0.29930521407906424] ***
*** finished computation of 7 references, err: [Inf, 0.3985000060655181, 0.327970171998996, 0.31035893322146235, 0.29930521407906424] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6043000039988726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699] ***
*** starting iteration: 2; err: [Inf, 0.6043000039988726, 0.3726179113687699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077] ***
*** starting iteration: 3; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831] ***
*** starting iteration: 4; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416] ***
*** starting iteration: 5; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953] ***
*** starting iteration: 6; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694] ***
*** starting iteration: 7; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694, 0.24812344738855066] ***
*** starting iteration: 8; err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694, 0.24812344738855066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694, 0.24812344738855066, 0.24765996718424924] ***
*** finished computation of 7 references, err: [Inf, 0.6043000039988726, 0.3726179113687699, 0.29601563413895077, 0.2815802423454831, 0.2728797646751416, 0.25503698003075953, 0.2503670866280694, 0.24812344738855066, 0.24765996718424924] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.973100015588861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644] ***
*** starting iteration: 2; err: [Inf, 3.973100015588861, 0.8843943853161644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939] ***
*** starting iteration: 3; err: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693] ***
*** starting iteration: 4; err: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516] ***
*** starting iteration: 5; err: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516, 0.24934673588496967] ***
*** starting iteration: 6; err: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516, 0.24934673588496967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516, 0.24934673588496967, 0.2483592919127169] ***
*** finished computation of 7 references, err: [Inf, 3.973100015588861, 0.8843943853161644, 0.357996333388939, 0.26503079430068693, 0.25455055856025516, 0.24934673588496967, 0.2483592919127169] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 2, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7478999987279018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7478999987279018, 0.38888869060020625] ***
*** starting iteration: 2; err: [Inf, 0.7478999987279018, 0.38888869060020625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954] ***
*** starting iteration: 3; err: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466] ***
*** starting iteration: 4; err: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466, 0.29886350049882293] ***
*** starting iteration: 5; err: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466, 0.29886350049882293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466, 0.29886350049882293, 0.29886350049882293] ***
*** finished computation of 7 references, err: [Inf, 0.7478999987279018, 0.38888869060020625, 0.3149894541916954, 0.3036021395826466, 0.29886350049882293, 0.29886350049882293] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3737548740978474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3737548740978474, 0.19130904989741157] ***
*** finished computation of 7 references, err: [Inf, 0.3737548740978474, 0.19130904989741157] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 9]]
** centroid: 1, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47161669665193373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47161669665193373, 0.21837086102209657] ***
*** finished computation of 7 references, err: [Inf, 0.47161669665193373, 0.21837086102209657] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 5]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 15]]
** centroid: 5, normalized-entropy: 0.9023932827949788, [(2, 7), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4310116037595095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4310116037595095, 0.18049969425453308] ***
*** finished computation of 7 references, err: [Inf, 0.4310116037595095, 0.18049969425453308] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 12]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(2, 19), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4207911843952866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4207911843952866, 0.17929176250042075] ***
*** finished computation of 7 references, err: [Inf, 0.4207911843952866, 0.17929176250042075] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 7, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39593422396342476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39593422396342476, 0.1870648691960244] ***
*** finished computation of 7 references, err: [Inf, 0.39593422396342476, 0.1870648691960244] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40495481075771933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40495481075771933, 0.1838313085225024] ***
*** finished computation of 7 references, err: [Inf, 0.40495481075771933, 0.1838313085225024] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 6, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5822000057787455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000057787455, 0.24923163731666093] ***
*** starting iteration: 2; err: [Inf, 0.5822000057787455, 0.24923163731666093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000057787455, 0.24923163731666093, 0.23070362283265455] ***
*** starting iteration: 3; err: [Inf, 0.5822000057787455, 0.24923163731666093, 0.23070362283265455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000057787455, 0.24923163731666093, 0.23070362283265455, 0.228709440401739] ***
*** finished computation of 7 references, err: [Inf, 0.5822000057787455, 0.24923163731666093, 0.23070362283265455, 0.228709440401739] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 4]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5269000012539378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5269000012539378, 0.27145670698620994] ***
*** starting iteration: 2; err: [Inf, 0.5269000012539378, 0.27145670698620994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5269000012539378, 0.27145670698620994, 0.2516720349883776] ***
*** starting iteration: 3; err: [Inf, 0.5269000012539378, 0.27145670698620994, 0.2516720349883776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5269000012539378, 0.27145670698620994, 0.2516720349883776, 0.23723046737769252] ***
*** finished computation of 7 references, err: [Inf, 0.5269000012539378, 0.27145670698620994, 0.2516720349883776, 0.23723046737769252] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 7, normalized-entropy: 1.0, [(2, 6), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47780000560618346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47780000560618346, 0.28323522012993885] ***
*** starting iteration: 2; err: [Inf, 0.47780000560618346, 0.28323522012993885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47780000560618346, 0.28323522012993885, 0.2538251465073172] ***
*** starting iteration: 3; err: [Inf, 0.47780000560618346, 0.28323522012993885, 0.2538251465073172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47780000560618346, 0.28323522012993885, 0.2538251465073172, 0.24130046350751683] ***
*** finished computation of 7 references, err: [Inf, 0.47780000560618346, 0.28323522012993885, 0.2538251465073172, 0.24130046350751683] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6026000024255209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6026000024255209, 0.24374189680606034] ***
*** finished computation of 7 references, err: [Inf, 0.6026000024255209, 0.24374189680606034] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 4]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5905999951861552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5905999951861552, 0.24262756419824996] ***
*** finished computation of 7 references, err: [Inf, 0.5905999951861552, 0.24262756419824996] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5480000032162837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5480000032162837, 0.2699276457058998] ***
*** finished computation of 7 references, err: [Inf, 0.5480000032162837, 0.2699276457058998] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 5, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5541000096579031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256] ***
*** starting iteration: 2; err: [Inf, 0.5541000096579031, 0.3449093814682256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484] ***
*** starting iteration: 3; err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133] ***
*** starting iteration: 4; err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233] ***
*** starting iteration: 5; err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463] ***
*** starting iteration: 6; err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463, 0.31144495540191963] ***
*** starting iteration: 7; err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463, 0.31144495540191963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463, 0.31144495540191963, 0.31144495540191963] ***
*** finished computation of 7 references, err: [Inf, 0.5541000096579031, 0.3449093814682256, 0.3361420537994484, 0.32830007342292133, 0.31960413177524233, 0.31295224874463, 0.31144495540191963, 0.31144495540191963] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37050000188448295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795] ***
*** starting iteration: 2; err: [Inf, 0.37050000188448295, 0.25963044139154795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585] ***
*** starting iteration: 3; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636] ***
*** starting iteration: 4; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676] ***
*** starting iteration: 5; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316] ***
*** starting iteration: 6; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717] ***
*** starting iteration: 7; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717, 0.2316117979042802] ***
*** starting iteration: 8; err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717, 0.2316117979042802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717, 0.2316117979042802, 0.2316117979042802] ***
*** finished computation of 7 references, err: [Inf, 0.37050000188448295, 0.25963044139154795, 0.2551465303780585, 0.2534784760626636, 0.25082288638078676, 0.24650959402386316, 0.23667860419753717, 0.2316117979042802, 0.2316117979042802] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 8]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5797000073894941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485] ***
*** starting iteration: 2; err: [Inf, 0.5797000073894941, 0.32153092216985485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847] ***
*** starting iteration: 3; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488] ***
*** starting iteration: 4; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813] ***
*** starting iteration: 5; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275] ***
*** starting iteration: 6; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668] ***
*** starting iteration: 7; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775] ***
*** starting iteration: 8; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794] ***
*** starting iteration: 9; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794, 0.26321746071664925] ***
*** starting iteration: 10; err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794, 0.26321746071664925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794, 0.26321746071664925, 0.25351732891573664] ***
*** finished computation of 7 references, err: [Inf, 0.5797000073894941, 0.32153092216985485, 0.30020539840717847, 0.2962516998558488, 0.2937405569088813, 0.29130669959510275, 0.2897838650792668, 0.28405641474793775, 0.27880303381978794, 0.26321746071664925, 0.25351732891573664] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 10]]
** centroid: 2, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 16
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3085507720543091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3085507720543091, 0.21002917150180134] ***
*** starting iteration: 2; err: [Inf, 0.3085507720543091, 0.21002917150180134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3085507720543091, 0.21002917150180134, 0.17711461992412697] ***
*** starting iteration: 3; err: [Inf, 0.3085507720543091, 0.21002917150180134, 0.17711461992412697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3085507720543091, 0.21002917150180134, 0.17711461992412697, 0.16918816515353818] ***
*** finished computation of 7 references, err: [Inf, 0.3085507720543091, 0.21002917150180134, 0.17711461992412697, 0.16918816515353818] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 7, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2753362553602266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2753362553602266, 0.18760539538073026] ***
*** starting iteration: 2; err: [Inf, 0.2753362553602266, 0.18760539538073026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2753362553602266, 0.18760539538073026, 0.17541976265717502] ***
*** starting iteration: 3; err: [Inf, 0.2753362553602266, 0.18760539538073026, 0.17541976265717502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2753362553602266, 0.18760539538073026, 0.17541976265717502, 0.17296017348051124] ***
*** finished computation of 7 references, err: [Inf, 0.2753362553602266, 0.18760539538073026, 0.17541976265717502, 0.17296017348051124] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37121984190626706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37121984190626706, 0.20609268240913728] ***
*** starting iteration: 2; err: [Inf, 0.37121984190626706, 0.20609268240913728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37121984190626706, 0.20609268240913728, 0.190816963497554] ***
*** starting iteration: 3; err: [Inf, 0.37121984190626706, 0.20609268240913728, 0.190816963497554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37121984190626706, 0.20609268240913728, 0.190816963497554, 0.1845125933512623] ***
*** finished computation of 7 references, err: [Inf, 0.37121984190626706, 0.20609268240913728, 0.190816963497554, 0.1845125933512623] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 17
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 5.22161533474209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.22161533474209, 1.2732457704567] ***
*** starting iteration: 2; err: [Inf, 5.22161533474209, 1.2732457704567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.22161533474209, 1.2732457704567, 0.567095693256195] ***
*** starting iteration: 3; err: [Inf, 5.22161533474209, 1.2732457704567, 0.567095693256195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.22161533474209, 1.2732457704567, 0.567095693256195, 0.425256835914084] ***
*** finished computation of 3 references, err: [Inf, 5.22161533474209, 1.2732457704567, 0.567095693256195, 0.425256835914084] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 1, 0]]
** centroid: 1, normalized-entropy: 0.17556502585750275, [(1, 37), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 19]]
** centroid: 2, normalized-entropy: 0.9733854352299557, [(2, 28), (3, 19)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.010072866514614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.010072866514614, 0.4862910454054257] ***
*** starting iteration: 2; err: [Inf, 1.010072866514614, 0.4862910454054257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.010072866514614, 0.4862910454054257, 0.43677609182368854] ***
*** starting iteration: 3; err: [Inf, 1.010072866514614, 0.4862910454054257, 0.43677609182368854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.010072866514614, 0.4862910454054257, 0.43677609182368854, 0.38417070978436735] ***
*** finished computation of 3 references, err: [Inf, 1.010072866514614, 0.4862910454054257, 0.43677609182368854, 0.38417070978436735] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9135325031703733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9135325031703733, 0.656300093006382] ***
*** starting iteration: 2; err: [Inf, 0.9135325031703733, 0.656300093006382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9135325031703733, 0.656300093006382, 0.6491272687105797] ***
*** starting iteration: 3; err: [Inf, 0.9135325031703733, 0.656300093006382, 0.6491272687105797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9135325031703733, 0.656300093006382, 0.6491272687105797, 0.6485989281978886] ***
*** finished computation of 3 references, err: [Inf, 0.9135325031703733, 0.656300093006382, 0.6491272687105797, 0.6485989281978886] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 31]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 35), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 2, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.736700010317623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.736700010317623, 0.5039526198596181] ***
*** starting iteration: 2; err: [Inf, 0.736700010317623, 0.5039526198596181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.736700010317623, 0.5039526198596181, 0.49820839241431697] ***
*** starting iteration: 3; err: [Inf, 0.736700010317623, 0.5039526198596181, 0.49820839241431697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.736700010317623, 0.5039526198596181, 0.49820839241431697, 0.49820839241431697] ***
*** finished computation of 3 references, err: [Inf, 0.736700010317623, 0.5039526198596181, 0.49820839241431697, 0.49820839241431697] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.582900035971873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.582900035971873, 2.2594669271343806] ***
*** starting iteration: 2; err: [Inf, 8.582900035971873, 2.2594669271343806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.582900035971873, 2.2594669271343806, 1.4277724234780858] ***
*** starting iteration: 3; err: [Inf, 8.582900035971873, 2.2594669271343806, 1.4277724234780858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.582900035971873, 2.2594669271343806, 1.4277724234780858, 0.7985731284459974] ***
*** finished computation of 3 references, err: [Inf, 8.582900035971873, 2.2594669271343806, 1.4277724234780858, 0.7985731284459974] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 4, 0]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(1, 31), (2, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.379499987034372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.379499987034372, 0.9354765175883744] ***
*** starting iteration: 2; err: [Inf, 4.379499987034372, 0.9354765175883744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.379499987034372, 0.9354765175883744, 0.6432776322280118] ***
*** starting iteration: 3; err: [Inf, 4.379499987034372, 0.9354765175883744, 0.6432776322280118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.379499987034372, 0.9354765175883744, 0.6432776322280118, 0.6086691319017639] ***
*** finished computation of 3 references, err: [Inf, 4.379499987034372, 0.9354765175883744, 0.6432776322280118, 0.6086691319017639] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 31]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 13), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2), 0.9733333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.4, 2.875, 1.25, 0.2], [5.525, 2.6374999999999997, 4.0125, 1.2375], [6.904761904761905, 3.0857142857142854, 5.847619047619046, 2.138095238095238], [5.378571428571428, 3.8785714285714286, 1.5071428571428573, 0.2785714285714286], [4.957142857142857, 3.4285714285714284, 1.3, 0.22857142857142856], [6.2857142857142865, 2.957142857142857, 4.571428571428571, 1.442857142857143], [6.066666666666666, 2.8166666666666664, 5.091666666666668, 1.8666666666666665], [4.933333333333333, 3.2249999999999996, 1.575, 0.21666666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 1, 1, 2, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.42857142857143, 2.892857142857143, 4.671428571428571, 1.4857142857142858], [6.069999999999999, 2.7299999999999995, 5.07, 1.8500000000000003], [5.3125, 3.8125, 1.5125000000000002, 0.275], [5.090909090909091, 3.3, 1.5272727272727273, 0.2545454545454545], [4.8, 3.525, 1.35, 0.32499999999999996], [6.854166666666669, 3.070833333333333, 5.8, 2.1166666666666667], [5.4714285714285715, 2.619047619047619, 3.9142857142857146, 1.2428571428571429], [4.625000000000001, 3.0999999999999996, 1.4125000000000003, 0.19999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 1, 1, 3, 2, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.599999999999999, 2.6444444444444444, 3.938888888888889, 1.2], [7.184615384615384, 3.169230769230769, 6.1692307692307695, 2.1230769230769235], [6.618181818181818, 3.063636363636364, 4.663636363636364, 1.481818181818182], [6.55, 3.075, 5.300000000000001, 2.125], [5.28, 3.6666666666666665, 1.4866666666666668, 0.28], [4.7125, 3.1437500000000003, 1.44375, 0.19375000000000006], [6.062500000000001, 2.7, 4.625, 1.4], [6.02, 2.7, 4.98, 1.8]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 1, 1, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2))]
[30, 2, 1, 24, 2, 14, 42, 16, 11, 20, 32, 2, 32, 5, 31, 28, 37, 44, 23, 39, 1, 10, 25, 38, 27, 26, 23, 35, 31, 26, 36, 25, 33, 20, 22, 30, 27, 39, 45, 21, 30, 43, 9, 25, 34, 37, 32, 31, 1, 31, 19, 48, 36, 39, 35, 7, 19, 42, 29, 44, 20, 39, 37, 35, 2, 1, 32, 50, 19, 45, 44, 26, 48, 33, 17, 28, 12, 29, 17, 34, 31, 27, 51, 36, 35, 27, 21, 27, 46, 45, 28, 54, 47, 31, 19, 23, 39, 14, 15, 1, 33, 47, 51, 49, 43, 45, 33, 48, 28, 45, 31, 41, 41, 37, 23, 38, 34, 43, 12, 17, 20, 66, 4, 37, 19, 53, 34, 11, 28, 45, 39, 41, 36, 36, 21, 38, 25, 23, 43, 62, 28, 20, 47, 32, 37, 3, 54, 22, 16, 76, 42, 34, 94, 41, 32, 48, 40, 55, 27, 40, 44, 45, 31, 71, 39, 64, 23, 28, 25, 57, 10, 13, 37, 38, 53, 26, 30, 34, 45, 35, 30, 34, 46, 30, 50, 29, 47, 15, 42, 25, 48, 45, 45, 45, 30, 41, 47, 29, 71, 27, 35, 30, 57, 20, 40, 42, 37, 26, 25, 45, 20, 46, 21, 21, 26, 42, 41, 22, 40, 46, 23, 15, 23, 46, 31, 34, 42, 58, 38, 23, 46, 21, 26, 29, 51, 31, 49, 41, 43, 34, 56, 31, 31, 29, 35, 9, 34, 40, 55, 1, 34, 24, 35, 40, 56, 35, 43, 36, 35, 51, 41, 16, 27, 39, 53, 44, 22, 27, 47, 34, 34, 46, 44, 30, 18, 93, 71, 34, 42, 22, 24, 31, 44, 35, 21, 28, 36, 33, 46, 28, 37, 2, 23, 30, 44, 27, 24, 28, 42, 54]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6319999999999998, speedup = 0.3970221447025757, eval_ratio = 0.041848)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3889973958333334,"recall":0.388888888888889,"f1":null,"seconds":9.603239595890045e-5,"exhaustive_search_seconds":0.000605875626206398,"evaluations":342.1171875,"distances_sum":1753.3944812851455}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5451388888888887,"recall":0.5451388888888887,"f1":0.5451388888888887,"seconds":0.00014328211545944214,"exhaustive_search_seconds":0.000605875626206398,"evaluations":380.3984375,"distances_sum":1645.4129183644375}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6692708333333328,"recall":0.6692708333333328,"f1":0.6692708333333328,"seconds":0.00017146021127700806,"exhaustive_search_seconds":0.000605875626206398,"evaluations":421.9140625,"distances_sum":1591.8827054202197}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7569444444444436,"recall":0.7569444444444436,"f1":0.7569444444444436,"seconds":0.00016714446246623993,"exhaustive_search_seconds":0.000605875626206398,"evaluations":462.1875,"distances_sum":1565.0215475866903}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7986111111111103,"recall":0.7986111111111103,"f1":0.7986111111111103,"seconds":0.00019461102783679962,"exhaustive_search_seconds":0.000605875626206398,"evaluations":500.5859375,"distances_sum":1553.038066104159}
KCenters.DeloneInvIndex> reached performance {"precision":0.83767361111111,"recall":0.83767361111111,"f1":0.83767361111111,"seconds":0.00023873522877693176,"exhaustive_search_seconds":0.000605875626206398,"evaluations":540.1953125,"distances_sum":1543.5661908392528}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8209999999999998, speedup = 2.3616346409642497, eval_ratio = 0.053549)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
